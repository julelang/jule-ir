// Auto generated by JuleC.
// JuleC version: jule0.0.12 @master
// Date: 2/5/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION


#include "api/jule.hpp"                                   

#include "std/jule/integrated/integrated.hpp"                                   
#include <dirent.h>
#include <cstdio>
#include <sys/stat.h>
#include <fcntl.h>
#include <unistd.h>
#include <time.h>

struct _1e6a16a62_Importer{};
struct _1e6ab665b_Kind{};
struct _1e6ad2600_Lookup{};
struct _1b0305310_CommonFlag{};
struct _1e33b9517_acceptRange;
struct _1e4389a47_Range16;
struct _1e4389eba_Range32;
struct _1e438a43d_RangeTable;
struct _1e34a1e29_lazyBuff;
struct _1e261a48e_DirEntry;
struct _1e261c1c7_Directory;
struct _1e32e8a84_File;
struct _1e32e8c71_Status;
struct _1e443278d_Cmd;
struct _1e43e3a18_Log;
struct _1e47137a5_Token;
struct _1e4718b40_File;
struct _1e471ab97_kindPair;
struct _1e47265ed_lex;
struct _1e5d201bd_Ast;
struct _1e5d20d6c_Node;
struct _1e5d21268_Directive;
struct _1e5d54961_TypeDecl;
struct _1e5d55027_IdentTypeDecl;
struct _1e5d55676_SubIdentTypeDecl;
struct _1e5d55a2d_NamespaceTypeDecl;
struct _1e5d55d19_SptrTypeDecl;
struct _1e5d56215_SlcTypeDecl;
struct _1e5d56501_TupleTypeDecl;
struct _1e5d567dc_PtrTypeDecl;
struct _1e5d56e6e_ArrTypeDecl;
struct _1e5d576bc_MapTypeDecl;
struct _1e5d57a74_RetTypeDecl;
struct _1e5d58e82_Expr;
struct _1e5d5926d_RangeExpr;
struct _1e5d59823_UseExpr;
struct _1e5d59b0e_TupleExpr;
struct _1e5d59eb6_LitExpr;
struct _1e5d5a6c0_UnsafeExpr;
struct _1e5d5aa77_CoExpr;
struct _1e5d5aeea_IdentExpr;
struct _1e5d5b704_UnaryExpr;
struct _1e5d5baab_VariadicExpr;
struct _1e5d5be63_CastExpr;
struct _1e5d5c31a_NsSelectionExpr;
struct _1e5d5c78d_SubIdentExpr;
struct _1e5d5cc11_BinopExpr;
struct _1e5d5d250_FnCallExpr;
struct _1e5d5dbce_FieldExprPair;
struct _1e5d5e42c_StructLit;
struct _1e5d5e8a0_BraceLit;
struct _1e5d603b7_KeyValPair;
struct _1e5d6083a_SliceExpr;
struct _1e5d611cb_IndexingExpr;
struct _1e5d617d6_SlicingExpr;
struct _1e5d61ac2_Constraint;
struct _1e5d62045_GenericDecl;
struct _1e5d623ec_LabelSt;
struct _1e5d627a4_GotoSt;
struct _1e5d62a90_FallSt;
struct _1e5d6319a_AssignLeft;
struct _1e5d636d9_AssignSt;
struct _1e5d64674_Stmt;
struct _1e5d64c7e_ScopeTree;
struct _1e5d65455_ParamDecl;
struct _1e5d66775_FnDecl;
struct _1e5d67754_VarDecl;
struct _1e5d67b0b_RetSt;
struct _1e5d6826b_Iter;
struct _1e5d68a41_WhileKind;
struct _1e5d693d2_RangeKind;
struct _1e5d69789_BreakSt;
struct _1e5d69b41_ContSt;
struct _1e5d6a0b4_If;
struct _1e5d6a46b_Else;
struct _1e5d6a8de_Conditional;
struct _1e5d6b0b5_TypeAliasDecl;
struct _1e5d6b538_Case;
struct _1e5d6bc0e_MatchCase;
struct _1e5d6c4a1_UseDecl;
struct _1e5d6c924_EnumItemDecl;
struct _1e5d6d44c_EnumDecl;
struct _1e5d6de53_TypeEnumItemDecl;
struct _1e5d6e151_TypeEnumDecl;
struct _1e5d6e6a1_FieldDecl;
struct _1e5d7000e_StructDecl;
struct _1e5d70619_TraitDecl;
struct _1e5d70c24_Impl;
struct _1e5da6ba0_Const;
struct _1e65c747a_floatInfo;
struct _1e64ce0da_decimalSlice;
struct _1e6a023cc_leftCheat;
struct _1e6a02740_decimal;
struct _1e5d37658_Field;
struct _1e5d46ab8_Operators;
struct _1e5d4518d_Struct;
struct _1e5d4c805_FieldIns;
struct _1e5e151b4_OperandExprModel;
struct _1e5e153a1_BinopExprModel;
struct _1e5e1558d_UnaryExprModel;
struct _1e5e1577a_StructArgExprModel;
struct _1e5e15967_StructLitExprModel;
struct _1e5e15b54_AllocStructLitExprModel;
struct _1e5e15d41_CastingExprModel;
struct _1e5e1602d_FnCallExprModel;
struct _1e5e1621a_SliceExprModel;
struct _1e5e16407_IndexingExprModel;
struct _1e5e165e4_AnonFnExprModel;
struct _1e5e167d1_KeyValPairExprModel;
struct _1e5e169bd_MapExprModel;
struct _1e5e16baa_SlicingExprModel;
struct _1e5e16d97_TraitSubIdentExprModel;
struct _1e5e172b5_StructSubIdentExprModel;
struct _1e5e174a2_StructStaticIdentExprModel;
struct _1e5e1768e_ArrayExprModel;
struct _1e5e1787b_CommonIdentExprModel;
struct _1e5e17a68_CommonSubIdentExprModel;
struct _1e5e17c55_TupleExprModel;
struct _1e5e17e42_BuiltinOutCallExprModel;
struct _1e5e1812e_BuiltinOutlnCallExprModel;
struct _1e5e1831b_BuiltinCloneCallExprModel;
struct _1e5e18508_BuiltinNewCallExprModel;
struct _1e5e186e5_BuiltinPanicCallExprModel;
struct _1e5e188d2_BuiltinAssertCallExprModel;
struct _1e5e18abe_BuiltinMakeCallExprModel;
struct _1e5e18cab_BuiltinAppendCallExprModel;
struct _1e5e18e98_BuiltinCopyCallExprModel;
struct _1e5e19185_BuiltinErrorCallExprModel;
struct _1e5e17084_SizeofExprModel;
struct _1e5e197e5_AlignofExprModel;
struct _1e5e199d2_RuneExprModel;
struct _1e5e19bbe_IntegratedToStrExprModel;
struct _1e5e19dab_BackendEmitExprModel;
struct _1e5e1a098_FreeExprModel;
struct _1e5e1a62b_RetType;
struct _1e5e1ace1_Param;
struct _1e5e1c62d_Fn;
struct _1e5e1e410_ParamIns;
struct _1e5e202ce_FnIns;
struct _1e5e231a0_ReferenceStack;
struct _1e5e24569_Pass;
struct _1e5e28a13_symbolBuilder;
struct _1e5e2e4db_Trait;
struct _1e5e30b3b_EnumItem;
struct _1e5e31631_Enum;
struct _1e5e32665_TypeEnumItem;
struct _1e5e32c2b_TypeEnum;
struct _1e5e50683_constraintChecker;
struct _1e5eb8a5e_Impl;
struct _1e6a06700_Scope;
struct _1e6a068dc_If;
struct _1e6a06ac9_Else;
struct _1e6a06cb6_Conditional;
struct _1e6a06ea3_InfIter;
struct _1e6a07190_WhileIter;
struct _1e6a0737c_RangeIter;
struct _1e6a07569_ContSt;
struct _1e6a07756_BreakSt;
struct _1e6a07943_Label;
struct _1e6a07b30_GotoSt;
struct _1e6a07d1c_Postfix;
struct _1e6a08009_Assign;
struct _1e6a081e6_MultiAssign;
struct _1e6a083d3_Match;
struct _1e6a08933_Case;
struct _1e6a08c52_FallSt;
struct _1e6a08e3e_RetSt;
struct _1e6a0912b_scopeLabel;
struct _1e6a09318_scopeGoto;
struct _1e6a09505_scopeChecker;
struct _1e6a13652_directiveChecker;
struct _1e6a192e5_ImportInfo;
struct _1e6a1c24e_Package;
struct _1e6a22441_Sema;
struct _1e6a3b1e6_missingRetChecker;
struct _1e6a3cda7_IterRelation;
struct _1e6a3dd20_Var;
struct _1e6a3e848_FuncPattern;
struct _1e6a74bd0_typeCompatibilityChecker;
struct _1e6a76808_assignTypeChecker;
struct _1e6a78222_dynamicTypeAnnotation;
struct _1e6a7ca1d_fnCallArgChecker;
struct _1e6a80427_structLitChecker;
struct _1e6a8200b_rangeChecker;
struct _1e6a84162_retTypeChecker;
struct _1e6a86010_SymbolTable;
struct _1e6a8ac6d_Data;
struct _1e6a8bce6_Value;
struct _1e6a8c7db_Eval;
struct _1e6aa87a2_unaryEval;
struct _1e6aaa540_binaryEval;
struct _1e6ab535d_InsGeneric;
struct _1e6ab5d97_TypeAlias;
struct _1e6ab6a8a_TypeKind;
struct _1e6ababe3_TypeSymbol;
struct _1e6abb562_Prim;
struct _1e6abece6_Sptr;
struct _1e6ac0753_Slc;
struct _1e6ac12d1_Tuple;
struct _1e6ac1d09_Map;
struct _1e6ac28ed_Arr;
struct _1e6ac335a_Ptr;
struct _1e6ac42a1_referencer;
struct _1e6ac4ee9_typeChecker;
struct _1e6acc70a_identTypeLookup;
struct _1c9978c99_FileInfo;
struct _1c99c24eb_stmt;
struct _1c99c2d26_scopeParser;
struct _1c99d0185_exprBuilder;
struct _1c99da4c0_assignInfo;
struct _1c99ddced_parser;
struct _1c99eedca_typeBuilder;
struct _1e6b9452a_CompileInfo;
struct _1e6b9587d_directiveEval;
struct _1e708dccb_JuleImporter;
struct _1c8ba744b_OrderedDefines;
struct _1c8b885d6_defineOrderer;
struct _1c9acde98_liveTable;
struct _1c9b10ace_scopeDeadCode;
struct _1c9b14a39_exprDeadCode;
struct _1e4743340_UnsafeBinopExprModel;
struct _1e52468c0_UnsafeIndexingExprModel;
struct _1e563d7cd_PushToSliceExprModel;
struct _1e5ad7dcb_MutSlicingExprModel;
struct _1e4926567_StrInsertBeginExprModel;
struct _1e4a95ad2_scopeOptimizer;
struct _1e50dac4d_exprOptimizer;
struct _1c9ad938d_Optimizer;
struct _1c9b2ddd8_AnsiEscape;
struct _1c9b304c2_Logger;
struct _1b029ae65_AbsTime;
struct _1b029b608_Time;
struct _1b0226000_scopeCoder;
struct _1b022da41_exprCoder;
struct _1b023b93e_deriveCoder;
struct _1b023cd6e_TestCoder;
struct _1b02404c0_identCoder;
struct _1b02a192c_SerializationInfo;
struct _1b02a1b19_traitHash;
struct _1b02a7845_customType;
struct _1b02a813c_typeCoder;
struct _1b378315d_Flag;
struct _1b3786d21_Flag;
struct _1b378a808_Flag;
struct _1b378e334_Flag;
struct _1b3792d1b_Flag;
struct _1b0306c7e_FlagSet;
struct _1c9974888_IR;
struct _1e5d714d8_StructIns;
struct _1c9ace262_ObjectDeadCode;
struct _1b02a1d06_ObjectCoder;
struct _1b0309457_argParser;
struct _1e33b9517_acceptRange {
	jule::U8 _field_lo = jule::U8();
	jule::U8 _field_hi = jule::U8();
	

	_1e33b9517_acceptRange(void) = default;

	inline bool operator==(_1e33b9517_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_1e33b9517_acceptRange _other) { return !this->operator==(_other); }


};
struct _1e4389a47_Range16 {
	jule::U16 _field_Lo = jule::U16();
	jule::U16 _field_Hi = jule::U16();
	jule::U16 _field_Stride = jule::U16();
	

	_1e4389a47_Range16(void) = default;

	inline bool operator==(_1e4389a47_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_1e4389a47_Range16 _other) { return !this->operator==(_other); }


};
struct _1e4389eba_Range32 {
	jule::U32 _field_Lo = jule::U32();
	jule::U32 _field_Hi = jule::U32();
	jule::U32 _field_Stride = jule::U32();
	

	_1e4389eba_Range32(void) = default;

	inline bool operator==(_1e4389eba_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_1e4389eba_Range32 _other) { return !this->operator==(_other); }


};
struct _1e438a43d_RangeTable {
	jule::Slice<_1e4389a47_Range16> _field_R16 = jule::Slice<_1e4389a47_Range16>();
	jule::Slice<_1e4389eba_Range32> _field_R32 = jule::Slice<_1e4389eba_Range32>();
	jule::I64 _field_LatinOffset = jule::I64();
	

	_1e438a43d_RangeTable(void) = default;

	inline bool operator==(_1e438a43d_RangeTable _other) {
		return 
			this->_field_R16 == _other._field_R16 &&
			this->_field_R32 == _other._field_R32 &&
			this->_field_LatinOffset == _other._field_LatinOffset;
	}

	inline bool operator!=(_1e438a43d_RangeTable _other) { return !this->operator==(_other); }


};
inline jule::U8 _1e34a7d0e_index(_1e34a1e29_lazyBuff*, jule::I64);
inline void _1e34a8518_append(_1e34a1e29_lazyBuff*, jule::U8);
inline jule::Str _1e34ab0ba_string(_1e34a1e29_lazyBuff*);
struct _1e34a1e29_lazyBuff {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::U8> _field_buff = jule::Slice<jule::U8>();
	jule::I64 _field_w = jule::I64();
	jule::Str _field_volAndPath = jule::Str();
	jule::I64 _field_volLen = jule::I64();
	

	_1e34a1e29_lazyBuff(void) = default;

	inline bool operator==(_1e34a1e29_lazyBuff _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_buff == _other._field_buff &&
			this->_field_w == _other._field_w &&
			this->_field_volAndPath == _other._field_volAndPath &&
			this->_field_volLen == _other._field_volLen;
	}

	inline bool operator!=(_1e34a1e29_lazyBuff _other) { return !this->operator==(_other); }


};
struct _1e261a48e_DirEntry {
	jule::Str _field_Name = jule::Str();
	jule::Ptr<_1e32e8c71_Status> _field_Stat = jule::Ptr<_1e32e8c71_Status>();
	

	_1e261a48e_DirEntry(void) = default;

	inline bool operator==(_1e261a48e_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_1e261a48e_DirEntry _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Slice<jule::Ptr<_1e261a48e_DirEntry>>> static__1e33cde66_Read(jule::Str);
inline jule::VoidExceptional static__1e33d195d_Create(jule::Str);
inline jule::VoidExceptional static__1e34368e7_Remove(jule::Str);
struct _1e261c1c7_Directory {
	

	_1e261c1c7_Directory(void) = default;

	inline bool operator==(_1e261c1c7_Directory _other) { return true; }

	inline bool operator!=(_1e261c1c7_Directory _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e32e8a84_File> static__1e2603378_New(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_1e32e8a84_File>> static__1e2603b2b_Create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__1e26046a9_Read(jule::Str);
inline jule::VoidExceptional static__1e260518d_Write(jule::Str, jule::Slice<jule::U8>, jule::I64);
inline jule::Exceptional<jule::I64> _1e2606700_Seek(_1e32e8a84_File*, jule::I64, jule::I64);
inline jule::VoidExceptional _1e260724a_Close(_1e32e8a84_File*);
inline jule::Exceptional<jule::Ptr<_1e32e8a84_File>> static__1e3351867_Open(jule::Str, jule::I64, jule::I64);
inline jule::VoidExceptional static__1e3352b10_Remove(jule::Str);
inline jule::Exceptional<jule::I64> _1e337c376_Write(_1e32e8a84_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _1e338558d_Read(_1e32e8a84_File*, jule::Slice<jule::U8>);
struct _1e32e8a84_File {
	jule::Uintptr _field_handle = jule::Uintptr();
	

	_1e32e8a84_File(void) = default;

	inline bool operator==(_1e32e8a84_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_1e32e8a84_File _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e26092c4_IsDir(_1e32e8c71_Status*);
inline jule::Bool _1e260a58e_IsReg(_1e32e8c71_Status*);
inline jule::Exceptional<jule::Ptr<_1e32e8c71_Status>> static__1e341a722_Of(jule::Str);
struct _1e32e8c71_Status {
	jule::U64 _field_Mode = jule::U64();
	jule::U64 _field_Size = jule::U64();
	

	_1e32e8c71_Status(void) = default;

	inline bool operator==(_1e32e8c71_Status _other) {
		return 
			this->_field_Mode == _other._field_Mode &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_1e32e8c71_Status _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e443278d_Cmd> static__1e4432bbc_New(jule::Str);
inline jule::Exceptional<jule::I64> _1e4432e31_Spawn(_1e443278d_Cmd*);
inline jule::Exceptional<jule::I64> _1e4442957_spawn(_1e443278d_Cmd*);
struct _1e443278d_Cmd {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::Str> _field_Args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_Env = jule::Slice<jule::Str>();
	

	_1e443278d_Cmd(void) = default;

	inline bool operator==(_1e443278d_Cmd _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_Args == _other._field_Args &&
			this->_field_Env == _other._field_Env;
	}

	inline bool operator!=(_1e443278d_Cmd _other) { return !this->operator==(_other); }


};
struct _1e43e3a18_Log {
	jule::I64 _field_Kind = 0LL;
	jule::I64 _field_Row = jule::I64();
	jule::I64 _field_Column = jule::I64();
	jule::Str _field_Path = jule::Str();
	jule::Str _field_Text = jule::Str();
	jule::Str _field_Line = jule::Str();
	jule::Str _field_Suggestion = jule::Str();
	

	_1e43e3a18_Log(void) = default;

	inline bool operator==(_1e43e3a18_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_1e43e3a18_Log _other) { return !this->operator==(_other); }


};
inline jule::U8 _1e4713b5c_Prec(_1e47137a5_Token*);
struct _1e47137a5_Token {
	jule::Ptr<_1e4718b40_File> _field_File = jule::Ptr<_1e4718b40_File>();
	jule::I64 _field_Row = jule::I64();
	jule::I64 _field_Column = jule::I64();
	jule::Str _field_Kind = jule::Str();
	jule::U64 _field_Id = 0LLU;
	

	_1e47137a5_Token(void) = default;

	inline bool operator==(_1e47137a5_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_1e47137a5_Token _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e471904c_IsOk(_1e4718b40_File*);
inline void _1e47192c2_Fill(_1e4718b40_File*, jule::Slice<jule::U8>);
inline jule::Str _1e4719536_Dir(_1e4718b40_File*);
inline jule::Str _1e471979a_Name(_1e4718b40_File*);
inline jule::Uintptr _1e4719a0e_Addr(_1e4718b40_File*);
inline jule::Str _1e4719d1c_GetRow(_1e4718b40_File*, jule::I64);
struct _1e4718b40_File {
	jule::Str _field_Path = jule::Str();
	jule::Slice<jule::U8> _field_Data = jule::Slice<jule::U8>();
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _field_Tokens = jule::Slice<jule::Ptr<_1e47137a5_Token>>();
	

	_1e4718b40_File(void) = default;

	inline bool operator==(_1e4718b40_File _other) {
		return 
			this->_field_Path == _other._field_Path &&
			this->_field_Data == _other._field_Data &&
			this->_field_Tokens == _other._field_Tokens;
	}

	inline bool operator!=(_1e4718b40_File _other) { return !this->operator==(_other); }


};
struct _1e471ab97_kindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U64 _field_id = 0LLU;
	

	_1e471ab97_kindPair(void) = default;

	inline bool operator==(_1e471ab97_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1e471ab97_kindPair _other) { return !this->operator==(_other); }


};
inline void _1e4726b92_pushErr(_1e47265ed_lex*, jule::Str, jule::Slice<jule::Any>);
inline void _1e4726eb1_pushErrTok(_1e47265ed_lex*, jule::Ptr<_1e47137a5_Token>&, jule::Str);
inline void _1e472718c_lex(_1e47265ed_lex*);
inline jule::Str _1e472749a_id(_1e47265ed_lex*, jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _1e472770e_resume(_1e47265ed_lex*);
inline void _1e4727984_lexLineComment(_1e47265ed_lex*, jule::Ptr<_1e47137a5_Token>&);
inline void _1e4727c09_lexRangeComment(_1e47265ed_lex*, jule::Ptr<_1e47137a5_Token>&);
inline jule::Str _1e4728017_num(_1e47265ed_lex*, jule::Slice<jule::U8>&);
inline jule::Str _1e4728325_escapeSeq(_1e47265ed_lex*, jule::Slice<jule::U8>&);
inline jule::Str _1e47286cc_getRune(_1e47265ed_lex*, jule::Slice<jule::U8>&, jule::Bool);
inline jule::Str _1e47289da_lexRune(_1e47265ed_lex*, jule::Slice<jule::U8>&);
inline jule::Str _1e4728c4e_lexStr(_1e47265ed_lex*);
inline jule::Bool _1e4728eb3_isFirstTokenOfLine(_1e47265ed_lex*);
inline void _1e472918e_newLine(_1e47265ed_lex*);
inline jule::Bool _1e4729689_isOp(_1e47265ed_lex*, jule::Slice<jule::U8>&, jule::Str, jule::U64, jule::Ptr<_1e47137a5_Token>&);
inline jule::Bool _1e4729a41_lexBasicOps(_1e47265ed_lex*, jule::Slice<jule::U8>, jule::Ptr<_1e47137a5_Token>&);
inline jule::Bool _1e4729de8_lexId(_1e47265ed_lex*, jule::Slice<jule::U8>&, jule::Ptr<_1e47137a5_Token>&);
inline jule::Bool _1e472a2a0_lexNum(_1e47265ed_lex*, jule::Slice<jule::U8>&, jule::Ptr<_1e47137a5_Token>&);
inline jule::Ptr<_1e47137a5_Token> _1e472a514_token(_1e47265ed_lex*);
struct _1e47265ed_lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _field_tokens = jule::Slice<jule::Ptr<_1e47137a5_Token>>();
	jule::Ptr<_1e4718b40_File> _field_file = jule::Ptr<_1e4718b40_File>();
	jule::I64 _field_pos = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::I64 _field_row = jule::I64();
	jule::Slice<_1e43e3a18_Log> _field_errors = jule::Slice<_1e43e3a18_Log>();
	

	_1e47265ed_lex(void) = default;

	inline bool operator==(_1e47265ed_lex _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_file == _other._field_file &&
			this->_field_pos == _other._field_pos &&
			this->_field_column == _other._field_column &&
			this->_field_row == _other._field_row &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1e47265ed_lex _other) { return !this->operator==(_other); }


};
struct _1e5d201bd_Ast {
	jule::Ptr<_1e4718b40_File> _field_File = jule::Ptr<_1e4718b40_File>();
	jule::Slice<jule::Ptr<_1e5d21268_Directive>> _field_TopDirectives = jule::Slice<jule::Ptr<_1e5d21268_Directive>>();
	jule::Slice<jule::Ptr<_1e5d6c4a1_UseDecl>> _field_UseDecls = jule::Slice<jule::Ptr<_1e5d6c4a1_UseDecl>>();
	jule::Slice<_1e5d20d6c_Node> _field_Nodes = jule::Slice<_1e5d20d6c_Node>();
	

	_1e5d201bd_Ast(void) = default;

	inline bool operator==(_1e5d201bd_Ast _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_TopDirectives == _other._field_TopDirectives &&
			this->_field_UseDecls == _other._field_UseDecls &&
			this->_field_Nodes == _other._field_Nodes;
	}

	inline bool operator!=(_1e5d201bd_Ast _other) { return !this->operator==(_other); }


};
struct _1e5d20d6c_Node {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Any _field_Data = jule::Any();
	

	_1e5d20d6c_Node(void) = default;

	inline bool operator==(_1e5d20d6c_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1e5d20d6c_Node _other) { return !this->operator==(_other); }


};
struct _1e5d21268_Directive {
	jule::Ptr<_1e47137a5_Token> _field_Tag = jule::Ptr<_1e47137a5_Token>();
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _field_Args = jule::Slice<jule::Ptr<_1e47137a5_Token>>();
	

	_1e5d21268_Directive(void) = default;

	inline bool operator==(_1e5d21268_Directive _other) {
		return 
			this->_field_Tag == _other._field_Tag &&
			this->_field_Args == _other._field_Args;
	}

	inline bool operator!=(_1e5d21268_Directive _other) { return !this->operator==(_other); }


};
struct _1e5d54961_TypeDecl {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Any _field_Kind = jule::Any();
	

	_1e5d54961_TypeDecl(void) = default;

	inline bool operator==(_1e5d54961_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1e5d54961_TypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e5d5538a_IsPrim(_1e5d55027_IdentTypeDecl*);
struct _1e5d55027_IdentTypeDecl {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Slice<jule::Ptr<_1e5d54961_TypeDecl>> _field_Generics = jule::Slice<jule::Ptr<_1e5d54961_TypeDecl>>();
	

	_1e5d55027_IdentTypeDecl(void) = default;

	inline bool operator==(_1e5d55027_IdentTypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Generics == _other._field_Generics;
	}

	inline bool operator!=(_1e5d55027_IdentTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e5d55676_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1e5d55027_IdentTypeDecl>> _field_Idents = jule::Slice<jule::Ptr<_1e5d55027_IdentTypeDecl>>();
	

	_1e5d55676_SubIdentTypeDecl(void) = default;

	inline bool operator==(_1e5d55676_SubIdentTypeDecl _other) {
		return 
			this->_field_Idents == _other._field_Idents;
	}

	inline bool operator!=(_1e5d55676_SubIdentTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e5d55a2d_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _field_Idents = jule::Slice<jule::Ptr<_1e47137a5_Token>>();
	jule::Ptr<_1e5d54961_TypeDecl> _field_Kind = jule::Ptr<_1e5d54961_TypeDecl>();
	

	_1e5d55a2d_NamespaceTypeDecl(void) = default;

	inline bool operator==(_1e5d55a2d_NamespaceTypeDecl _other) {
		return 
			this->_field_Idents == _other._field_Idents &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1e5d55a2d_NamespaceTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e5d55d19_SptrTypeDecl {
	jule::Ptr<_1e5d54961_TypeDecl> _field_Elem = jule::Ptr<_1e5d54961_TypeDecl>();
	

	_1e5d55d19_SptrTypeDecl(void) = default;

	inline bool operator==(_1e5d55d19_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1e5d55d19_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e5d56215_SlcTypeDecl {
	jule::Ptr<_1e5d54961_TypeDecl> _field_Elem = jule::Ptr<_1e5d54961_TypeDecl>();
	

	_1e5d56215_SlcTypeDecl(void) = default;

	inline bool operator==(_1e5d56215_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1e5d56215_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e5d56501_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1e5d54961_TypeDecl>> _field_Types = jule::Slice<jule::Ptr<_1e5d54961_TypeDecl>>();
	

	_1e5d56501_TupleTypeDecl(void) = default;

	inline bool operator==(_1e5d56501_TupleTypeDecl _other) {
		return 
			this->_field_Types == _other._field_Types;
	}

	inline bool operator!=(_1e5d56501_TupleTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e5d56b3e_IsUnsafe(_1e5d567dc_PtrTypeDecl*);
struct _1e5d567dc_PtrTypeDecl {
	jule::Ptr<_1e5d54961_TypeDecl> _field_Elem = jule::Ptr<_1e5d54961_TypeDecl>();
	

	_1e5d567dc_PtrTypeDecl(void) = default;

	inline bool operator==(_1e5d567dc_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1e5d567dc_PtrTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e5d57348_AutoSized(_1e5d56e6e_ArrTypeDecl*);
struct _1e5d56e6e_ArrTypeDecl {
	jule::Ptr<_1e5d54961_TypeDecl> _field_Elem = jule::Ptr<_1e5d54961_TypeDecl>();
	jule::Ptr<_1e5d58e82_Expr> _field_Size = jule::Ptr<_1e5d58e82_Expr>();
	

	_1e5d56e6e_ArrTypeDecl(void) = default;

	inline bool operator==(_1e5d56e6e_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_1e5d56e6e_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e5d576bc_MapTypeDecl {
	jule::Ptr<_1e5d54961_TypeDecl> _field_Key = jule::Ptr<_1e5d54961_TypeDecl>();
	jule::Ptr<_1e5d54961_TypeDecl> _field_Val = jule::Ptr<_1e5d54961_TypeDecl>();
	

	_1e5d576bc_MapTypeDecl(void) = default;

	inline bool operator==(_1e5d576bc_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1e5d576bc_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e5d57a74_RetTypeDecl {
	jule::Ptr<_1e5d54961_TypeDecl> _field_Kind = jule::Ptr<_1e5d54961_TypeDecl>();
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _field_Idents = jule::Slice<jule::Ptr<_1e47137a5_Token>>();
	

	_1e5d57a74_RetTypeDecl(void) = default;

	inline bool operator==(_1e5d57a74_RetTypeDecl _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Idents == _other._field_Idents;
	}

	inline bool operator!=(_1e5d57a74_RetTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e5d58e82_Expr {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Ptr<_1e47137a5_Token> _field_End = jule::Ptr<_1e47137a5_Token>();
	jule::Any _field_Kind = jule::Any();
	

	_1e5d58e82_Expr(void) = default;

	inline bool operator==(_1e5d58e82_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1e5d58e82_Expr _other) { return !this->operator==(_other); }


};
struct _1e5d5926d_RangeExpr {
	jule::Ptr<_1e5d58e82_Expr> _field_Expr = jule::Ptr<_1e5d58e82_Expr>();
	

	_1e5d5926d_RangeExpr(void) = default;

	inline bool operator==(_1e5d5926d_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e5d5926d_RangeExpr _other) { return !this->operator==(_other); }


};
struct _1e5d59823_UseExpr {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Ptr<_1e5d58e82_Expr> _field_Expr = jule::Ptr<_1e5d58e82_Expr>();
	

	_1e5d59823_UseExpr(void) = default;

	inline bool operator==(_1e5d59823_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e5d59823_UseExpr _other) { return !this->operator==(_other); }


};
struct _1e5d59b0e_TupleExpr {
	jule::Slice<jule::Ptr<_1e5d58e82_Expr>> _field_Expr = jule::Slice<jule::Ptr<_1e5d58e82_Expr>>();
	

	_1e5d59b0e_TupleExpr(void) = default;

	inline bool operator==(_1e5d59b0e_TupleExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e5d59b0e_TupleExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e5d5a318_IsNil(_1e5d59eb6_LitExpr*);
struct _1e5d59eb6_LitExpr {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Str _field_Value = jule::Str();
	

	_1e5d59eb6_LitExpr(void) = default;

	inline bool operator==(_1e5d59eb6_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1e5d59eb6_LitExpr _other) { return !this->operator==(_other); }


};
struct _1e5d5a6c0_UnsafeExpr {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Ptr<_1e5d58e82_Expr> _field_Expr = jule::Ptr<_1e5d58e82_Expr>();
	

	_1e5d5a6c0_UnsafeExpr(void) = default;

	inline bool operator==(_1e5d5a6c0_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e5d5a6c0_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _1e5d5aa77_CoExpr {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Ptr<_1e5d58e82_Expr> _field_Expr = jule::Ptr<_1e5d58e82_Expr>();
	

	_1e5d5aa77_CoExpr(void) = default;

	inline bool operator==(_1e5d5aa77_CoExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e5d5aa77_CoExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e5d5b34c_IsSelf(_1e5d5aeea_IdentExpr*);
struct _1e5d5aeea_IdentExpr {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_CppLinked = jule::Bool();
	

	_1e5d5aeea_IdentExpr(void) = default;

	inline bool operator==(_1e5d5aeea_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked;
	}

	inline bool operator!=(_1e5d5aeea_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1e5d5b704_UnaryExpr {
	jule::Ptr<_1e47137a5_Token> _field_Op = jule::Ptr<_1e47137a5_Token>();
	jule::Ptr<_1e5d58e82_Expr> _field_Expr = jule::Ptr<_1e5d58e82_Expr>();
	

	_1e5d5b704_UnaryExpr(void) = default;

	inline bool operator==(_1e5d5b704_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e5d5b704_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1e5d5baab_VariadicExpr {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Ptr<_1e5d58e82_Expr> _field_Expr = jule::Ptr<_1e5d58e82_Expr>();
	

	_1e5d5baab_VariadicExpr(void) = default;

	inline bool operator==(_1e5d5baab_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e5d5baab_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1e5d5be63_CastExpr {
	jule::Ptr<_1e5d54961_TypeDecl> _field_Kind = jule::Ptr<_1e5d54961_TypeDecl>();
	jule::Ptr<_1e5d58e82_Expr> _field_Expr = jule::Ptr<_1e5d58e82_Expr>();
	

	_1e5d5be63_CastExpr(void) = default;

	inline bool operator==(_1e5d5be63_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e5d5be63_CastExpr _other) { return !this->operator==(_other); }


};
struct _1e5d5c31a_NsSelectionExpr {
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _field_Ns = jule::Slice<jule::Ptr<_1e47137a5_Token>>();
	jule::Ptr<_1e47137a5_Token> _field_Ident = jule::Ptr<_1e47137a5_Token>();
	

	_1e5d5c31a_NsSelectionExpr(void) = default;

	inline bool operator==(_1e5d5c31a_NsSelectionExpr _other) {
		return 
			this->_field_Ns == _other._field_Ns &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1e5d5c31a_NsSelectionExpr _other) { return !this->operator==(_other); }


};
struct _1e5d5c78d_SubIdentExpr {
	jule::Bool _field_IsSelf = jule::Bool();
	jule::Ptr<_1e5d58e82_Expr> _field_Expr = jule::Ptr<_1e5d58e82_Expr>();
	jule::Ptr<_1e47137a5_Token> _field_Ident = jule::Ptr<_1e47137a5_Token>();
	

	_1e5d5c78d_SubIdentExpr(void) = default;

	inline bool operator==(_1e5d5c78d_SubIdentExpr _other) {
		return 
			this->_field_IsSelf == _other._field_IsSelf &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1e5d5c78d_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1e5d5cc11_BinopExpr {
	jule::Ptr<_1e5d58e82_Expr> _field_Left = jule::Ptr<_1e5d58e82_Expr>();
	jule::Ptr<_1e5d58e82_Expr> _field_Right = jule::Ptr<_1e5d58e82_Expr>();
	jule::Ptr<_1e47137a5_Token> _field_Op = jule::Ptr<_1e47137a5_Token>();
	

	_1e5d5cc11_BinopExpr(void) = default;

	inline bool operator==(_1e5d5cc11_BinopExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1e5d5cc11_BinopExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e5d5d5b3_Unhandled(_1e5d5d250_FnCallExpr*);
inline jule::Bool _1e5d5d827_Ignored(_1e5d5d250_FnCallExpr*);
struct _1e5d5d250_FnCallExpr {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Ptr<_1e5d58e82_Expr> _field_Expr = jule::Ptr<_1e5d58e82_Expr>();
	jule::Slice<jule::Ptr<_1e5d58e82_Expr>> _field_Args = jule::Slice<jule::Ptr<_1e5d58e82_Expr>>();
	jule::Ptr<_1e5d64c7e_ScopeTree> _field_Exception = jule::Ptr<_1e5d64c7e_ScopeTree>();
	

	_1e5d5d250_FnCallExpr(void) = default;

	inline bool operator==(_1e5d5d250_FnCallExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Args == _other._field_Args &&
			this->_field_Exception == _other._field_Exception;
	}

	inline bool operator!=(_1e5d5d250_FnCallExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e5d5e031_IsTargeted(_1e5d5dbce_FieldExprPair*);
struct _1e5d5dbce_FieldExprPair {
	jule::Ptr<_1e47137a5_Token> _field_Field = jule::Ptr<_1e47137a5_Token>();
	jule::Ptr<_1e5d58e82_Expr> _field_Expr = jule::Ptr<_1e5d58e82_Expr>();
	

	_1e5d5dbce_FieldExprPair(void) = default;

	inline bool operator==(_1e5d5dbce_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e5d5dbce_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1e5d5e42c_StructLit {
	jule::Ptr<_1e47137a5_Token> _field_End = jule::Ptr<_1e47137a5_Token>();
	jule::Ptr<_1e5d54961_TypeDecl> _field_Kind = jule::Ptr<_1e5d54961_TypeDecl>();
	jule::Slice<jule::Ptr<_1e5d58e82_Expr>> _field_Exprs = jule::Slice<jule::Ptr<_1e5d58e82_Expr>>();
	

	_1e5d5e42c_StructLit(void) = default;

	inline bool operator==(_1e5d5e42c_StructLit _other) {
		return 
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_1e5d5e42c_StructLit _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e5d60021_IsEmpty(_1e5d5e8a0_BraceLit*);
struct _1e5d5e8a0_BraceLit {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Ptr<_1e47137a5_Token> _field_End = jule::Ptr<_1e47137a5_Token>();
	jule::Slice<jule::Ptr<_1e5d58e82_Expr>> _field_Exprs = jule::Slice<jule::Ptr<_1e5d58e82_Expr>>();
	

	_1e5d5e8a0_BraceLit(void) = default;

	inline bool operator==(_1e5d5e8a0_BraceLit _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_1e5d5e8a0_BraceLit _other) { return !this->operator==(_other); }


};
struct _1e5d603b7_KeyValPair {
	jule::Ptr<_1e5d58e82_Expr> _field_Key = jule::Ptr<_1e5d58e82_Expr>();
	jule::Ptr<_1e5d58e82_Expr> _field_Val = jule::Ptr<_1e5d58e82_Expr>();
	jule::Ptr<_1e47137a5_Token> _field_Colon = jule::Ptr<_1e47137a5_Token>();
	

	_1e5d603b7_KeyValPair(void) = default;

	inline bool operator==(_1e5d603b7_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_1e5d603b7_KeyValPair _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e5d60b8c_IsEmpty(_1e5d6083a_SliceExpr*);
struct _1e5d6083a_SliceExpr {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Ptr<_1e47137a5_Token> _field_End = jule::Ptr<_1e47137a5_Token>();
	jule::Slice<jule::Ptr<_1e5d58e82_Expr>> _field_Exprs = jule::Slice<jule::Ptr<_1e5d58e82_Expr>>();
	

	_1e5d6083a_SliceExpr(void) = default;

	inline bool operator==(_1e5d6083a_SliceExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_1e5d6083a_SliceExpr _other) { return !this->operator==(_other); }


};
struct _1e5d611cb_IndexingExpr {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Ptr<_1e47137a5_Token> _field_End = jule::Ptr<_1e47137a5_Token>();
	jule::Ptr<_1e5d58e82_Expr> _field_Expr = jule::Ptr<_1e5d58e82_Expr>();
	jule::Ptr<_1e5d58e82_Expr> _field_Index = jule::Ptr<_1e5d58e82_Expr>();
	

	_1e5d611cb_IndexingExpr(void) = default;

	inline bool operator==(_1e5d611cb_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1e5d611cb_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1e5d617d6_SlicingExpr {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Ptr<_1e47137a5_Token> _field_End = jule::Ptr<_1e47137a5_Token>();
	jule::Ptr<_1e5d58e82_Expr> _field_Expr = jule::Ptr<_1e5d58e82_Expr>();
	jule::Ptr<_1e5d58e82_Expr> _field_Start = jule::Ptr<_1e5d58e82_Expr>();
	jule::Ptr<_1e5d58e82_Expr> _field_To = jule::Ptr<_1e5d58e82_Expr>();
	

	_1e5d617d6_SlicingExpr(void) = default;

	inline bool operator==(_1e5d617d6_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_1e5d617d6_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1e5d61ac2_Constraint {
	jule::Slice<jule::Ptr<_1e5d54961_TypeDecl>> _field_Mask = jule::Slice<jule::Ptr<_1e5d54961_TypeDecl>>();
	

	_1e5d61ac2_Constraint(void) = default;

	inline bool operator==(_1e5d61ac2_Constraint _other) {
		return 
			this->_field_Mask == _other._field_Mask;
	}

	inline bool operator!=(_1e5d61ac2_Constraint _other) { return !this->operator==(_other); }


};
struct _1e5d62045_GenericDecl {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1e5d61ac2_Constraint> _field_Constraint = jule::Ptr<_1e5d61ac2_Constraint>();
	

	_1e5d62045_GenericDecl(void) = default;

	inline bool operator==(_1e5d62045_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_1e5d62045_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1e5d623ec_LabelSt {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Str _field_Ident = jule::Str();
	

	_1e5d623ec_LabelSt(void) = default;

	inline bool operator==(_1e5d623ec_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1e5d623ec_LabelSt _other) { return !this->operator==(_other); }


};
struct _1e5d627a4_GotoSt {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Ptr<_1e47137a5_Token> _field_Label = jule::Ptr<_1e47137a5_Token>();
	

	_1e5d627a4_GotoSt(void) = default;

	inline bool operator==(_1e5d627a4_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1e5d627a4_GotoSt _other) { return !this->operator==(_other); }


};
struct _1e5d62a90_FallSt {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	

	_1e5d62a90_FallSt(void) = default;

	inline bool operator==(_1e5d62a90_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_1e5d62a90_FallSt _other) { return !this->operator==(_other); }


};
struct _1e5d6319a_AssignLeft {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1e5d58e82_Expr> _field_Expr = jule::Ptr<_1e5d58e82_Expr>();
	

	_1e5d6319a_AssignLeft(void) = default;

	inline bool operator==(_1e5d6319a_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e5d6319a_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1e5d636d9_AssignSt {
	jule::Bool _field_Declarative = jule::Bool();
	jule::Ptr<_1e47137a5_Token> _field_Setter = jule::Ptr<_1e47137a5_Token>();
	jule::Slice<jule::Ptr<_1e5d6319a_AssignLeft>> _field_Left = jule::Slice<jule::Ptr<_1e5d6319a_AssignLeft>>();
	jule::Ptr<_1e5d58e82_Expr> _field_Right = jule::Ptr<_1e5d58e82_Expr>();
	

	_1e5d636d9_AssignSt(void) = default;

	inline bool operator==(_1e5d636d9_AssignSt _other) {
		return 
			this->_field_Declarative == _other._field_Declarative &&
			this->_field_Setter == _other._field_Setter &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1e5d636d9_AssignSt _other) { return !this->operator==(_other); }


};
struct _1e5d64674_Stmt {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Any _field_Data = jule::Any();
	

	_1e5d64674_Stmt(void) = default;

	inline bool operator==(_1e5d64674_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1e5d64674_Stmt _other) { return !this->operator==(_other); }


};
struct _1e5d64c7e_ScopeTree {
	jule::Ptr<_1e5d64c7e_ScopeTree> _field_Parent = jule::Ptr<_1e5d64c7e_ScopeTree>();
	jule::Bool _field_Unsafety = jule::Bool();
	jule::Bool _field_Deferred = jule::Bool();
	jule::Slice<_1e5d64674_Stmt> _field_Stmts = jule::Slice<_1e5d64674_Stmt>();
	jule::Ptr<_1e47137a5_Token> _field_End = jule::Ptr<_1e47137a5_Token>();
	

	_1e5d64c7e_ScopeTree(void) = default;

	inline bool operator==(_1e5d64c7e_ScopeTree _other) {
		return 
			this->_field_Parent == _other._field_Parent &&
			this->_field_Unsafety == _other._field_Unsafety &&
			this->_field_Deferred == _other._field_Deferred &&
			this->_field_Stmts == _other._field_Stmts &&
			this->_field_End == _other._field_End;
	}

	inline bool operator!=(_1e5d64c7e_ScopeTree _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e5d657b8_IsSelf(_1e5d65455_ParamDecl*);
inline jule::Bool _1e5d65a2c_IsRef(_1e5d65455_ParamDecl*);
struct _1e5d65455_ParamDecl {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Variadic = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Ptr<_1e5d54961_TypeDecl> _field_Kind = jule::Ptr<_1e5d54961_TypeDecl>();
	jule::Str _field_Ident = jule::Str();
	

	_1e5d65455_ParamDecl(void) = default;

	inline bool operator==(_1e5d65455_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1e5d65455_ParamDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e5d66ac7_IsAnon(_1e5d66775_FnDecl*);
struct _1e5d66775_FnDecl {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Bool _field_Global = jule::Bool();
	jule::Bool _field_Unsafety = jule::Bool();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Statically = jule::Bool();
	jule::Bool _field_Exceptional = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_1e5d21268_Directive>> _field_Directives = jule::Slice<jule::Ptr<_1e5d21268_Directive>>();
	jule::Ptr<_1e5d64c7e_ScopeTree> _field_Scope = jule::Ptr<_1e5d64c7e_ScopeTree>();
	jule::Slice<jule::Ptr<_1e5d62045_GenericDecl>> _field_Generics = jule::Slice<jule::Ptr<_1e5d62045_GenericDecl>>();
	jule::Ptr<_1e5d57a74_RetTypeDecl> _field_Result = jule::Ptr<_1e5d57a74_RetTypeDecl>();
	jule::Slice<jule::Ptr<_1e5d65455_ParamDecl>> _field_Params = jule::Slice<jule::Ptr<_1e5d65455_ParamDecl>>();
	

	_1e5d66775_FnDecl(void) = default;

	inline bool operator==(_1e5d66775_FnDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Global == _other._field_Global &&
			this->_field_Unsafety == _other._field_Unsafety &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Statically == _other._field_Statically &&
			this->_field_Exceptional == _other._field_Exceptional &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Result == _other._field_Result &&
			this->_field_Params == _other._field_Params;
	}

	inline bool operator!=(_1e5d66775_FnDecl _other) { return !this->operator==(_other); }


};
struct _1e5d67754_VarDecl {
	jule::Ptr<_1e5d64c7e_ScopeTree> _field_Scope = jule::Ptr<_1e5d64c7e_ScopeTree>();
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Constant = jule::Bool();
	jule::Bool _field_Statically = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Slice<jule::Ptr<_1e5d21268_Directive>> _field_Directives = jule::Slice<jule::Ptr<_1e5d21268_Directive>>();
	jule::Ptr<_1e5d54961_TypeDecl> _field_Kind = jule::Ptr<_1e5d54961_TypeDecl>();
	jule::Ptr<_1e5d58e82_Expr> _field_Expr = jule::Ptr<_1e5d58e82_Expr>();
	

	_1e5d67754_VarDecl(void) = default;

	inline bool operator==(_1e5d67754_VarDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Constant == _other._field_Constant &&
			this->_field_Statically == _other._field_Statically &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e5d67754_VarDecl _other) { return !this->operator==(_other); }


};
struct _1e5d67b0b_RetSt {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Ptr<_1e5d58e82_Expr> _field_Expr = jule::Ptr<_1e5d58e82_Expr>();
	

	_1e5d67b0b_RetSt(void) = default;

	inline bool operator==(_1e5d67b0b_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e5d67b0b_RetSt _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e5d685bd_IsInf(_1e5d6826b_Iter*);
struct _1e5d6826b_Iter {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Any _field_Kind = jule::Any();
	jule::Ptr<_1e5d64c7e_ScopeTree> _field_Scope = jule::Ptr<_1e5d64c7e_ScopeTree>();
	

	_1e5d6826b_Iter(void) = default;

	inline bool operator==(_1e5d6826b_Iter _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1e5d6826b_Iter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e5d68d93_IsWhileNext(_1e5d68a41_WhileKind*);
struct _1e5d68a41_WhileKind {
	jule::Ptr<_1e5d58e82_Expr> _field_Expr = jule::Ptr<_1e5d58e82_Expr>();
	jule::Any _field_Next = jule::Any();
	jule::Ptr<_1e47137a5_Token> _field_NextToken = jule::Ptr<_1e47137a5_Token>();
	

	_1e5d68a41_WhileKind(void) = default;

	inline bool operator==(_1e5d68a41_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_1e5d68a41_WhileKind _other) { return !this->operator==(_other); }


};
struct _1e5d693d2_RangeKind {
	jule::Ptr<_1e47137a5_Token> _field_InToken = jule::Ptr<_1e47137a5_Token>();
	jule::Ptr<_1e5d58e82_Expr> _field_Expr = jule::Ptr<_1e5d58e82_Expr>();
	jule::Ptr<_1e5d67754_VarDecl> _field_KeyA = jule::Ptr<_1e5d67754_VarDecl>();
	jule::Ptr<_1e5d67754_VarDecl> _field_KeyB = jule::Ptr<_1e5d67754_VarDecl>();
	

	_1e5d693d2_RangeKind(void) = default;

	inline bool operator==(_1e5d693d2_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1e5d693d2_RangeKind _other) { return !this->operator==(_other); }


};
struct _1e5d69789_BreakSt {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Ptr<_1e47137a5_Token> _field_Label = jule::Ptr<_1e47137a5_Token>();
	

	_1e5d69789_BreakSt(void) = default;

	inline bool operator==(_1e5d69789_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1e5d69789_BreakSt _other) { return !this->operator==(_other); }


};
struct _1e5d69b41_ContSt {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Ptr<_1e47137a5_Token> _field_Label = jule::Ptr<_1e47137a5_Token>();
	

	_1e5d69b41_ContSt(void) = default;

	inline bool operator==(_1e5d69b41_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1e5d69b41_ContSt _other) { return !this->operator==(_other); }


};
struct _1e5d6a0b4_If {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Ptr<_1e5d58e82_Expr> _field_Expr = jule::Ptr<_1e5d58e82_Expr>();
	jule::Ptr<_1e5d64c7e_ScopeTree> _field_Scope = jule::Ptr<_1e5d64c7e_ScopeTree>();
	

	_1e5d6a0b4_If(void) = default;

	inline bool operator==(_1e5d6a0b4_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1e5d6a0b4_If _other) { return !this->operator==(_other); }


};
struct _1e5d6a46b_Else {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Ptr<_1e5d64c7e_ScopeTree> _field_Scope = jule::Ptr<_1e5d64c7e_ScopeTree>();
	

	_1e5d6a46b_Else(void) = default;

	inline bool operator==(_1e5d6a46b_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1e5d6a46b_Else _other) { return !this->operator==(_other); }


};
struct _1e5d6a8de_Conditional {
	jule::Ptr<_1e5d6a0b4_If> _field_Head = jule::Ptr<_1e5d6a0b4_If>();
	jule::Slice<jule::Ptr<_1e5d6a0b4_If>> _field_Tail = jule::Slice<jule::Ptr<_1e5d6a0b4_If>>();
	jule::Ptr<_1e5d6a46b_Else> _field_Default = jule::Ptr<_1e5d6a46b_Else>();
	

	_1e5d6a8de_Conditional(void) = default;

	inline bool operator==(_1e5d6a8de_Conditional _other) {
		return 
			this->_field_Head == _other._field_Head &&
			this->_field_Tail == _other._field_Tail &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1e5d6a8de_Conditional _other) { return !this->operator==(_other); }


};
struct _1e5d6b0b5_TypeAliasDecl {
	jule::Ptr<_1e5d64c7e_ScopeTree> _field_Scope = jule::Ptr<_1e5d64c7e_ScopeTree>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1e5d54961_TypeDecl> _field_Kind = jule::Ptr<_1e5d54961_TypeDecl>();
	

	_1e5d6b0b5_TypeAliasDecl(void) = default;

	inline bool operator==(_1e5d6b0b5_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1e5d6b0b5_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1e5d6b538_Case {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Ptr<_1e5d64c7e_ScopeTree> _field_Scope = jule::Ptr<_1e5d64c7e_ScopeTree>();
	jule::Slice<jule::Ptr<_1e5d58e82_Expr>> _field_Exprs = jule::Slice<jule::Ptr<_1e5d58e82_Expr>>();
	

	_1e5d6b538_Case(void) = default;

	inline bool operator==(_1e5d6b538_Case _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_1e5d6b538_Case _other) { return !this->operator==(_other); }


};
struct _1e5d6bc0e_MatchCase {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Ptr<_1e47137a5_Token> _field_End = jule::Ptr<_1e47137a5_Token>();
	jule::Bool _field_TypeMatch = jule::Bool();
	jule::Ptr<_1e5d58e82_Expr> _field_Expr = jule::Ptr<_1e5d58e82_Expr>();
	jule::Slice<jule::Ptr<_1e5d6b538_Case>> _field_Cases = jule::Slice<jule::Ptr<_1e5d6b538_Case>>();
	jule::Ptr<_1e5d6a46b_Else> _field_Default = jule::Ptr<_1e5d6a46b_Else>();
	

	_1e5d6bc0e_MatchCase(void) = default;

	inline bool operator==(_1e5d6bc0e_MatchCase _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_TypeMatch == _other._field_TypeMatch &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Cases == _other._field_Cases &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1e5d6bc0e_MatchCase _other) { return !this->operator==(_other); }


};
struct _1e5d6c4a1_UseDecl {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Str _field_LinkPath = jule::Str();
	jule::Str _field_Alias = jule::Str();
	jule::Bool _field_Full = jule::Bool();
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _field_Selected = jule::Slice<jule::Ptr<_1e47137a5_Token>>();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Std = jule::Bool();
	

	_1e5d6c4a1_UseDecl(void) = default;

	inline bool operator==(_1e5d6c4a1_UseDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_LinkPath == _other._field_LinkPath &&
			this->_field_Alias == _other._field_Alias &&
			this->_field_Full == _other._field_Full &&
			this->_field_Selected == _other._field_Selected &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Std == _other._field_Std;
	}

	inline bool operator!=(_1e5d6c4a1_UseDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e5d6cc76_AutoExpr(_1e5d6c924_EnumItemDecl*);
struct _1e5d6c924_EnumItemDecl {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1e5d58e82_Expr> _field_Expr = jule::Ptr<_1e5d58e82_Expr>();
	

	_1e5d6c924_EnumItemDecl(void) = default;

	inline bool operator==(_1e5d6c924_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e5d6c924_EnumItemDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e5d6d9d0_DefaultTyped(_1e5d6d44c_EnumDecl*);
struct _1e5d6d44c_EnumDecl {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1e5d54961_TypeDecl> _field_Kind = jule::Ptr<_1e5d54961_TypeDecl>();
	jule::Slice<jule::Ptr<_1e5d6c924_EnumItemDecl>> _field_Items = jule::Slice<jule::Ptr<_1e5d6c924_EnumItemDecl>>();
	jule::Ptr<_1e47137a5_Token> _field_End = jule::Ptr<_1e47137a5_Token>();
	

	_1e5d6d44c_EnumDecl(void) = default;

	inline bool operator==(_1e5d6d44c_EnumDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Items == _other._field_Items &&
			this->_field_End == _other._field_End;
	}

	inline bool operator!=(_1e5d6d44c_EnumDecl _other) { return !this->operator==(_other); }


};
struct _1e5d6de53_TypeEnumItemDecl {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1e5d54961_TypeDecl> _field_Kind = jule::Ptr<_1e5d54961_TypeDecl>();
	

	_1e5d6de53_TypeEnumItemDecl(void) = default;

	inline bool operator==(_1e5d6de53_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1e5d6de53_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1e5d6e151_TypeEnumDecl {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_1e5d6de53_TypeEnumItemDecl>> _field_Items = jule::Slice<jule::Ptr<_1e5d6de53_TypeEnumItemDecl>>();
	jule::Ptr<_1e47137a5_Token> _field_End = jule::Ptr<_1e47137a5_Token>();
	

	_1e5d6e151_TypeEnumDecl(void) = default;

	inline bool operator==(_1e5d6e151_TypeEnumDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Items == _other._field_Items &&
			this->_field_End == _other._field_End;
	}

	inline bool operator!=(_1e5d6e151_TypeEnumDecl _other) { return !this->operator==(_other); }


};
struct _1e5d6e6a1_FieldDecl {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1e5d54961_TypeDecl> _field_Kind = jule::Ptr<_1e5d54961_TypeDecl>();
	jule::Ptr<_1e5d58e82_Expr> _field_Default = jule::Ptr<_1e5d58e82_Expr>();
	

	_1e5d6e6a1_FieldDecl(void) = default;

	inline bool operator==(_1e5d6e6a1_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1e5d6e6a1_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1e5d7000e_StructDecl {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Ptr<_1e47137a5_Token> _field_End = jule::Ptr<_1e47137a5_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_1e5d6e6a1_FieldDecl>> _field_Fields = jule::Slice<jule::Ptr<_1e5d6e6a1_FieldDecl>>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Slice<jule::Ptr<_1e5d21268_Directive>> _field_Directives = jule::Slice<jule::Ptr<_1e5d21268_Directive>>();
	jule::Slice<jule::Ptr<_1e5d62045_GenericDecl>> _field_Generics = jule::Slice<jule::Ptr<_1e5d62045_GenericDecl>>();
	

	_1e5d7000e_StructDecl(void) = default;

	inline bool operator==(_1e5d7000e_StructDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Fields == _other._field_Fields &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Generics == _other._field_Generics;
	}

	inline bool operator!=(_1e5d7000e_StructDecl _other) { return !this->operator==(_other); }


};
struct _1e5d70619_TraitDecl {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Ptr<_1e47137a5_Token> _field_End = jule::Ptr<_1e47137a5_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_Public = jule::Bool();
	jule::Slice<jule::Ptr<_1e5d66775_FnDecl>> _field_Methods = jule::Slice<jule::Ptr<_1e5d66775_FnDecl>>();
	

	_1e5d70619_TraitDecl(void) = default;

	inline bool operator==(_1e5d70619_TraitDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Public == _other._field_Public &&
			this->_field_Methods == _other._field_Methods;
	}

	inline bool operator!=(_1e5d70619_TraitDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e5d71087_IsTraitImpl(_1e5d70c24_Impl*);
inline jule::Bool _1e5d712eb_IsStructImpl(_1e5d70c24_Impl*);
struct _1e5d70c24_Impl {
	jule::Ptr<_1e47137a5_Token> _field_End = jule::Ptr<_1e47137a5_Token>();
	jule::Ptr<_1e5d54961_TypeDecl> _field_Base = jule::Ptr<_1e5d54961_TypeDecl>();
	jule::Ptr<_1e5d54961_TypeDecl> _field_Dest = jule::Ptr<_1e5d54961_TypeDecl>();
	jule::Slice<jule::Ptr<_1e5d66775_FnDecl>> _field_Methods = jule::Slice<jule::Ptr<_1e5d66775_FnDecl>>();
	jule::Slice<jule::Ptr<_1e5d67754_VarDecl>> _field_Statics = jule::Slice<jule::Ptr<_1e5d67754_VarDecl>>();
	

	_1e5d70c24_Impl(void) = default;

	inline bool operator==(_1e5d70c24_Impl _other) {
		return 
			this->_field_End == _other._field_End &&
			this->_field_Base == _other._field_Base &&
			this->_field_Dest == _other._field_Dest &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Statics == _other._field_Statics;
	}

	inline bool operator!=(_1e5d70c24_Impl _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e5da6ba0_Const> static__1e5e0bc27_NewI64(jule::I64);
inline jule::Ptr<_1e5da6ba0_Const> static__1e5e0bd59_NewU64(jule::U64);
inline jule::Ptr<_1e5da6ba0_Const> static__1e5e0bee1_NewBool(jule::Bool);
inline jule::Ptr<_1e5da6ba0_Const> static__1e5e0c288_NewStr(jule::Str);
inline jule::Ptr<_1e5da6ba0_Const> static__1e5e0c530_NewF64(jule::F64);
inline jule::Ptr<_1e5da6ba0_Const> static__1e5e0c72d_NewNil(void);
inline jule::I64 _1e5e0cd27_ReadI64(_1e5da6ba0_Const*);
inline jule::U64 _1e5e0d08b_ReadU64(_1e5da6ba0_Const*);
inline jule::Bool _1e5e0d300_ReadBool(_1e5da6ba0_Const*);
inline jule::Str _1e5e0d564_ReadStr(_1e5da6ba0_Const*);
inline jule::F64 _1e5e0d7c8_ReadF64(_1e5da6ba0_Const*);
inline jule::I64 _1e5e0da3c_AsI64(_1e5da6ba0_Const*);
inline jule::U64 _1e5e0dca1_AsU64(_1e5da6ba0_Const*);
inline jule::F64 _1e5e0e015_AsF64(_1e5da6ba0_Const*);
inline void _1e5e0e28a_SetI64(_1e5da6ba0_Const*, jule::I64);
inline void _1e5e0e510_SetU64(_1e5da6ba0_Const*, jule::U64);
inline void _1e5e0e785_SetBool(_1e5da6ba0_Const*, jule::Bool);
inline void _1e5e0ea0a_SetStr(_1e5da6ba0_Const*, jule::Str);
inline void _1e5e0ec80_SetF64(_1e5da6ba0_Const*, jule::F64);
inline void _1e5e0ee5b_SetNil(_1e5da6ba0_Const*);
inline jule::Bool _1e5e101c0_IsI64(_1e5da6ba0_Const*);
inline jule::Bool _1e5e10434_IsU64(_1e5da6ba0_Const*);
inline jule::Bool _1e5e10698_IsBool(_1e5da6ba0_Const*);
inline jule::Bool _1e5e1090c_IsStr(_1e5da6ba0_Const*);
inline jule::Bool _1e5e10b71_IsF64(_1e5da6ba0_Const*);
inline jule::Bool _1e5e10dd5_IsNil(_1e5da6ba0_Const*);
inline jule::Bool _1e5e111e3_AreSameTypes(_1e5da6ba0_Const*, _1e5da6ba0_Const);
inline jule::Bool _1e5e11501_And(_1e5da6ba0_Const*, _1e5da6ba0_Const);
inline jule::Bool _1e5e1180e_Or(_1e5da6ba0_Const*, _1e5da6ba0_Const);
inline jule::Bool _1e5e11b1c_Eq(_1e5da6ba0_Const*, _1e5da6ba0_Const);
inline jule::Bool _1e5e11e2a_Lt(_1e5da6ba0_Const*, _1e5da6ba0_Const);
inline jule::Bool _1e5e12238_LtEq(_1e5da6ba0_Const*, _1e5da6ba0_Const);
inline jule::Bool _1e5e12546_Gt(_1e5da6ba0_Const*, _1e5da6ba0_Const);
inline jule::Bool _1e5e12854_GtEq(_1e5da6ba0_Const*, _1e5da6ba0_Const);
inline jule::Bool _1e5e12b62_Add(_1e5da6ba0_Const*, _1e5da6ba0_Const);
inline jule::Bool _1e5e12e70_Sub(_1e5da6ba0_Const*, _1e5da6ba0_Const);
inline jule::Bool _1e5e1327d_Mul(_1e5da6ba0_Const*, _1e5da6ba0_Const);
inline jule::Bool _1e5e1358b_Div(_1e5da6ba0_Const*, _1e5da6ba0_Const);
inline jule::Bool _1e5e13899_Mod(_1e5da6ba0_Const*, _1e5da6ba0_Const);
inline jule::Bool _1e5e13ba7_BitwiseAnd(_1e5da6ba0_Const*, _1e5da6ba0_Const);
inline jule::Bool _1e5e13eb5_BitwiseOr(_1e5da6ba0_Const*, _1e5da6ba0_Const);
inline jule::Bool _1e5e142c3_Xor(_1e5da6ba0_Const*, _1e5da6ba0_Const);
inline jule::Bool _1e5e145d1_Lshift(_1e5da6ba0_Const*, _1e5da6ba0_Const);
inline jule::Bool _1e5e148de_Rshift(_1e5da6ba0_Const*, _1e5da6ba0_Const);
struct _1e5da6ba0_Const {
	jule::Any _field_data = jule::Any();
	

	_1e5da6ba0_Const(void) = default;

	inline jule::Bool operator==(_1e5da6ba0_Const _other) { return _1e5e11b1c_Eq(this, _other); }

	inline bool operator!=(_1e5da6ba0_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_1e5da6ba0_Const _other) { return _1e5e12546_Gt(this, _other); }

	inline jule::Bool operator>=(_1e5da6ba0_Const _other) { return _1e5e12854_GtEq(this, _other); }

	inline jule::Bool operator<(_1e5da6ba0_Const _other) { return _1e5e11e2a_Lt(this, _other); }

	inline jule::Bool operator<=(_1e5da6ba0_Const _other) { return _1e5e12238_LtEq(this, _other); }


};
struct _1e65c747a_floatInfo {
	jule::U64 _field_mantbits = jule::U64();
	jule::U64 _field_expbits = jule::U64();
	jule::I64 _field_bias = jule::I64();
	

	_1e65c747a_floatInfo(void) = default;

	inline bool operator==(_1e65c747a_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_1e65c747a_floatInfo _other) { return !this->operator==(_other); }


};
struct _1e64ce0da_decimalSlice {
	jule::Slice<jule::U8> _field_d = jule::Slice<jule::U8>();
	jule::I64 _field_nd = jule::I64();
	jule::I64 _field_dp = jule::I64();
	jule::Bool _field_neg = jule::Bool();
	

	_1e64ce0da_decimalSlice(void) = default;

	inline bool operator==(_1e64ce0da_decimalSlice _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg;
	}

	inline bool operator!=(_1e64ce0da_decimalSlice _other) { return !this->operator==(_other); }


};
struct _1e6a023cc_leftCheat {
	jule::I64 _field_delta = jule::I64();
	jule::Str _field_cutoff = jule::Str();
	

	_1e6a023cc_leftCheat(void) = default;

	inline bool operator==(_1e6a023cc_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_1e6a023cc_leftCheat _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e686a421_set(_1e6a02740_decimal*, jule::Str);
inline std::tuple<jule::U64,jule::Bool> _1e64de33c_floatBits(_1e6a02740_decimal*, _1e65c747a_floatInfo&);
inline void _1e6a0292c_assign(_1e6a02740_decimal*, jule::U64);
inline void _1e6a02a5e_shift(_1e6a02740_decimal*, jule::I64);
inline void _1e6a02b91_roundDown(_1e6a02740_decimal*, jule::I64);
inline void _1e6a02cc3_roundUp(_1e6a02740_decimal*, jule::I64);
inline void _1e6a02e05_round(_1e6a02740_decimal*, jule::I64);
inline jule::U64 _1e6a03037_roundedInteger(_1e6a02740_decimal*);
struct _1e6a02740_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>();
	jule::I64 _field_nd = jule::I64();
	jule::I64 _field_dp = jule::I64();
	jule::Bool _field_neg = jule::Bool();
	jule::Bool _field_trunc = jule::Bool();
	

	_1e6a02740_decimal(void) = default;

	inline bool operator==(_1e6a02740_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_1e6a02740_decimal _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e5d4c805_FieldIns> _1e5c48e93_instance(jule::Ptr<_1e5d37658_Field>);
struct _1e5d37658_Field {
	jule::Ptr<_1e5d4518d_Struct> _field_Owner = jule::Ptr<_1e5d4518d_Struct>();
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1e6ababe3_TypeSymbol> _field_Kind = jule::Ptr<_1e6ababe3_TypeSymbol>();
	jule::Ptr<_1e5d58e82_Expr> _field_Default = jule::Ptr<_1e5d58e82_Expr>();
	

	_1e5d37658_Field(void) = default;

	inline bool operator==(_1e5d37658_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1e5d37658_Field _other) { return !this->operator==(_other); }


};
struct _1e5d46ab8_Operators {
	jule::Ptr<_1e5e202ce_FnIns> _field_Eq = jule::Ptr<_1e5e202ce_FnIns>();
	jule::Ptr<_1e5e202ce_FnIns> _field_Gt = jule::Ptr<_1e5e202ce_FnIns>();
	jule::Ptr<_1e5e202ce_FnIns> _field_GtEq = jule::Ptr<_1e5e202ce_FnIns>();
	jule::Ptr<_1e5e202ce_FnIns> _field_Lt = jule::Ptr<_1e5e202ce_FnIns>();
	jule::Ptr<_1e5e202ce_FnIns> _field_LtEq = jule::Ptr<_1e5e202ce_FnIns>();
	jule::Ptr<_1e5e202ce_FnIns> _field_Shl = jule::Ptr<_1e5e202ce_FnIns>();
	jule::Ptr<_1e5e202ce_FnIns> _field_Shr = jule::Ptr<_1e5e202ce_FnIns>();
	jule::Ptr<_1e5e202ce_FnIns> _field_Add = jule::Ptr<_1e5e202ce_FnIns>();
	jule::Ptr<_1e5e202ce_FnIns> _field_Sub = jule::Ptr<_1e5e202ce_FnIns>();
	jule::Ptr<_1e5e202ce_FnIns> _field_Div = jule::Ptr<_1e5e202ce_FnIns>();
	jule::Ptr<_1e5e202ce_FnIns> _field_Mul = jule::Ptr<_1e5e202ce_FnIns>();
	jule::Ptr<_1e5e202ce_FnIns> _field_Mod = jule::Ptr<_1e5e202ce_FnIns>();
	jule::Ptr<_1e5e202ce_FnIns> _field_BitAnd = jule::Ptr<_1e5e202ce_FnIns>();
	jule::Ptr<_1e5e202ce_FnIns> _field_BitOr = jule::Ptr<_1e5e202ce_FnIns>();
	jule::Ptr<_1e5e202ce_FnIns> _field_BitXor = jule::Ptr<_1e5e202ce_FnIns>();
	jule::Ptr<_1e5e202ce_FnIns> _field_Neg = jule::Ptr<_1e5e202ce_FnIns>();
	jule::Ptr<_1e5e202ce_FnIns> _field_Pos = jule::Ptr<_1e5e202ce_FnIns>();
	jule::Ptr<_1e5e202ce_FnIns> _field_BitNot = jule::Ptr<_1e5e202ce_FnIns>();
	jule::Ptr<_1e5e202ce_FnIns> _field_AddAssign = jule::Ptr<_1e5e202ce_FnIns>();
	jule::Ptr<_1e5e202ce_FnIns> _field_SubAssign = jule::Ptr<_1e5e202ce_FnIns>();
	jule::Ptr<_1e5e202ce_FnIns> _field_DivAssign = jule::Ptr<_1e5e202ce_FnIns>();
	jule::Ptr<_1e5e202ce_FnIns> _field_MulAssign = jule::Ptr<_1e5e202ce_FnIns>();
	jule::Ptr<_1e5e202ce_FnIns> _field_ModAssign = jule::Ptr<_1e5e202ce_FnIns>();
	jule::Ptr<_1e5e202ce_FnIns> _field_ShlAssign = jule::Ptr<_1e5e202ce_FnIns>();
	jule::Ptr<_1e5e202ce_FnIns> _field_ShrAssign = jule::Ptr<_1e5e202ce_FnIns>();
	jule::Ptr<_1e5e202ce_FnIns> _field_BitOrAssign = jule::Ptr<_1e5e202ce_FnIns>();
	jule::Ptr<_1e5e202ce_FnIns> _field_BitAndAssign = jule::Ptr<_1e5e202ce_FnIns>();
	jule::Ptr<_1e5e202ce_FnIns> _field_BitXorAssign = jule::Ptr<_1e5e202ce_FnIns>();
	

	_1e5d46ab8_Operators(void) = default;

	inline bool operator==(_1e5d46ab8_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_1e5d46ab8_Operators _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e5d714d8_StructIns> _1e5d2649e_instance(jule::Ptr<_1e5d4518d_Struct>);
inline jule::Ptr<_1e5d714d8_StructIns> _1e5d2c593_appendInstance(_1e5d4518d_Struct*, jule::Ptr<_1e5d714d8_StructIns>&);
inline jule::Ptr<_1e5e1c62d_Fn> _1e5d3180b_FindMethod(_1e5d4518d_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_1e6a3dd20_Var> _1e5d345ab_FindStatic(_1e5d4518d_Struct*, jule::Str);
inline jule::Ptr<_1e5d37658_Field> _1e5d355bd_FindField(_1e5d4518d_Struct*, jule::Str);
inline jule::Bool _1e5d34a0c_IsImplements(_1e5d4518d_Struct*, jule::Ptr<_1e5e2e4db_Trait>);
inline jule::Bool _1e5d36cd9_IsDerives(_1e5d4518d_Struct*, jule::Str);
inline jule::Bool _1e5d361e5_IsUses(_1e5d4518d_Struct*, jule::Ptr<_1e5d4518d_Struct>);
inline jule::Bool _1e5d39e96_HasRefAccessible(_1e5d4518d_Struct*);
struct _1e5d4518d_Struct {
	jule::Ptr<_1e6a22441_Sema> _field_sema = jule::Ptr<_1e6a22441_Sema>();
	jule::Slice<jule::Ptr<_1e5d4518d_Struct>> _field_Depends = jule::Slice<jule::Ptr<_1e5d4518d_Struct>>();
	jule::Slice<jule::Ptr<_1e5d4518d_Struct>> _field_Uses = jule::Slice<jule::Ptr<_1e5d4518d_Struct>>();
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_1e5d37658_Field>> _field_Fields = jule::Slice<jule::Ptr<_1e5d37658_Field>>();
	jule::Slice<jule::Ptr<_1e5e1c62d_Fn>> _field_Methods = jule::Slice<jule::Ptr<_1e5e1c62d_Fn>>();
	jule::Slice<jule::Ptr<_1e6a3dd20_Var>> _field_Statics = jule::Slice<jule::Ptr<_1e6a3dd20_Var>>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Slice<jule::Ptr<_1e5d21268_Directive>> _field_Directives = jule::Slice<jule::Ptr<_1e5d21268_Directive>>();
	jule::Slice<jule::Ptr<_1e5d62045_GenericDecl>> _field_Generics = jule::Slice<jule::Ptr<_1e5d62045_GenericDecl>>();
	jule::Slice<jule::Ptr<_1e5e2e4db_Trait>> _field_Implements = jule::Slice<jule::Ptr<_1e5e2e4db_Trait>>();
	jule::Slice<jule::Ptr<_1e5d714d8_StructIns>> _field_Instances = jule::Slice<jule::Ptr<_1e5d714d8_StructIns>>();
	

	_1e5d4518d_Struct(void) = default;

	inline bool operator==(_1e5d4518d_Struct _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_Depends == _other._field_Depends &&
			this->_field_Uses == _other._field_Uses &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Fields == _other._field_Fields &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Statics == _other._field_Statics &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Implements == _other._field_Implements &&
			this->_field_Instances == _other._field_Instances;
	}

	inline bool operator!=(_1e5d4518d_Struct _other) { return !this->operator==(_other); }


};
struct _1e5d4c805_FieldIns {
	jule::Ptr<_1e5d37658_Field> _field_Decl = jule::Ptr<_1e5d37658_Field>();
	jule::Ptr<_1e6ab6a8a_TypeKind> _field_Kind = jule::Ptr<_1e6ab6a8a_TypeKind>();
	jule::Ptr<_1e6a8ac6d_Data> _field_Default = jule::Ptr<_1e6a8ac6d_Data>();
	

	_1e5d4c805_FieldIns(void) = default;

	inline bool operator==(_1e5d4c805_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1e5d4c805_FieldIns _other) { return !this->operator==(_other); }


};
struct _1e5e151b4_OperandExprModel {
	jule::Ptr<_1e6ab6a8a_TypeKind> _field_Kind = jule::Ptr<_1e6ab6a8a_TypeKind>();
	jule::Any _field_Model = jule::Any();
	

	_1e5e151b4_OperandExprModel(void) = default;

	inline bool operator==(_1e5e151b4_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_1e5e151b4_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1e5e153a1_BinopExprModel {
	jule::Ptr<_1e5e151b4_OperandExprModel> _field_Left = jule::Ptr<_1e5e151b4_OperandExprModel>();
	jule::Ptr<_1e5e151b4_OperandExprModel> _field_Right = jule::Ptr<_1e5e151b4_OperandExprModel>();
	jule::Ptr<_1e47137a5_Token> _field_Op = jule::Ptr<_1e47137a5_Token>();
	

	_1e5e153a1_BinopExprModel(void) = default;

	inline bool operator==(_1e5e153a1_BinopExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1e5e153a1_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _1e5e1558d_UnaryExprModel {
	jule::Ptr<_1e6a8ac6d_Data> _field_Expr = jule::Ptr<_1e6a8ac6d_Data>();
	jule::Ptr<_1e47137a5_Token> _field_Op = jule::Ptr<_1e47137a5_Token>();
	

	_1e5e1558d_UnaryExprModel(void) = default;

	inline bool operator==(_1e5e1558d_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1e5e1558d_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1e5e1577a_StructArgExprModel {
	jule::Ptr<_1e5d4c805_FieldIns> _field_Field = jule::Ptr<_1e5d4c805_FieldIns>();
	jule::Any _field_Expr = jule::Any();
	

	_1e5e1577a_StructArgExprModel(void) = default;

	inline bool operator==(_1e5e1577a_StructArgExprModel _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e5e1577a_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1e5e15967_StructLitExprModel {
	jule::Ptr<_1e5d714d8_StructIns> _field_Strct = jule::Ptr<_1e5d714d8_StructIns>();
	jule::Slice<jule::Ptr<_1e5e1577a_StructArgExprModel>> _field_Args = jule::Slice<jule::Ptr<_1e5e1577a_StructArgExprModel>>();
	

	_1e5e15967_StructLitExprModel(void) = default;

	inline bool operator==(_1e5e15967_StructLitExprModel _other) {
		return 
			this->_field_Strct == _other._field_Strct &&
			this->_field_Args == _other._field_Args;
	}

	inline bool operator!=(_1e5e15967_StructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1e5e15b54_AllocStructLitExprModel {
	jule::Ptr<_1e5e15967_StructLitExprModel> _field_Lit = jule::Ptr<_1e5e15967_StructLitExprModel>();
	

	_1e5e15b54_AllocStructLitExprModel(void) = default;

	inline bool operator==(_1e5e15b54_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_1e5e15b54_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1e5e15d41_CastingExprModel {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Any _field_Expr = jule::Any();
	jule::Ptr<_1e6ab6a8a_TypeKind> _field_Kind = jule::Ptr<_1e6ab6a8a_TypeKind>();
	jule::Ptr<_1e6ab6a8a_TypeKind> _field_ExprKind = jule::Ptr<_1e6ab6a8a_TypeKind>();
	

	_1e5e15d41_CastingExprModel(void) = default;

	inline bool operator==(_1e5e15d41_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_1e5e15d41_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1e5e1602d_FnCallExprModel {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Ptr<_1e5e202ce_FnIns> _field_Func = jule::Ptr<_1e5e202ce_FnIns>();
	jule::Bool _field_IsCo = jule::Bool();
	jule::Any _field_Expr = jule::Any();
	jule::Slice<jule::Any> _field_Args = jule::Slice<jule::Any>();
	jule::Ptr<_1e6a06700_Scope> _field_Except = jule::Ptr<_1e6a06700_Scope>();
	jule::Bool _field_Assigned = jule::Bool();
	

	_1e5e1602d_FnCallExprModel(void) = default;

	inline bool operator==(_1e5e1602d_FnCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Func == _other._field_Func &&
			this->_field_IsCo == _other._field_IsCo &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Args == _other._field_Args &&
			this->_field_Except == _other._field_Except &&
			this->_field_Assigned == _other._field_Assigned;
	}

	inline bool operator!=(_1e5e1602d_FnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e5e1621a_SliceExprModel {
	jule::Ptr<_1e6ab6a8a_TypeKind> _field_ElemKind = jule::Ptr<_1e6ab6a8a_TypeKind>();
	jule::Slice<jule::Any> _field_Elems = jule::Slice<jule::Any>();
	

	_1e5e1621a_SliceExprModel(void) = default;

	inline bool operator==(_1e5e1621a_SliceExprModel _other) {
		return 
			this->_field_ElemKind == _other._field_ElemKind &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1e5e1621a_SliceExprModel _other) { return !this->operator==(_other); }


};
struct _1e5e16407_IndexingExprModel {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Ptr<_1e6a8ac6d_Data> _field_Expr = jule::Ptr<_1e6a8ac6d_Data>();
	jule::Ptr<_1e6a8ac6d_Data> _field_Index = jule::Ptr<_1e6a8ac6d_Data>();
	

	_1e5e16407_IndexingExprModel(void) = default;

	inline bool operator==(_1e5e16407_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1e5e16407_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1e5e165e4_AnonFnExprModel {
	jule::Ptr<_1e5e202ce_FnIns> _field_Func = jule::Ptr<_1e5e202ce_FnIns>();
	jule::Bool _field_Global = jule::Bool();
	

	_1e5e165e4_AnonFnExprModel(void) = default;

	inline bool operator==(_1e5e165e4_AnonFnExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Global == _other._field_Global;
	}

	inline bool operator!=(_1e5e165e4_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _1e5e167d1_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any();
	jule::Any _field_Val = jule::Any();
	

	_1e5e167d1_KeyValPairExprModel(void) = default;

	inline bool operator==(_1e5e167d1_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1e5e167d1_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1e5e169bd_MapExprModel {
	jule::Ptr<_1e6ab6a8a_TypeKind> _field_KeyKind = jule::Ptr<_1e6ab6a8a_TypeKind>();
	jule::Ptr<_1e6ab6a8a_TypeKind> _field_ValKind = jule::Ptr<_1e6ab6a8a_TypeKind>();
	jule::Slice<jule::Ptr<_1e5e167d1_KeyValPairExprModel>> _field_Entries = jule::Slice<jule::Ptr<_1e5e167d1_KeyValPairExprModel>>();
	

	_1e5e169bd_MapExprModel(void) = default;

	inline bool operator==(_1e5e169bd_MapExprModel _other) {
		return 
			this->_field_KeyKind == _other._field_KeyKind &&
			this->_field_ValKind == _other._field_ValKind &&
			this->_field_Entries == _other._field_Entries;
	}

	inline bool operator!=(_1e5e169bd_MapExprModel _other) { return !this->operator==(_other); }


};
struct _1e5e16baa_SlicingExprModel {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Any _field_Expr = jule::Any();
	jule::Any _field_Left = jule::Any();
	jule::Any _field_Right = jule::Any();
	

	_1e5e16baa_SlicingExprModel(void) = default;

	inline bool operator==(_1e5e16baa_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1e5e16baa_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1e5e16d97_TraitSubIdentExprModel {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Any _field_Expr = jule::Any();
	jule::Ptr<_1e5e1c62d_Fn> _field_Method = jule::Ptr<_1e5e1c62d_Fn>();
	jule::Ptr<_1e5e2e4db_Trait> _field_Trt = jule::Ptr<_1e5e2e4db_Trait>();
	

	_1e5e16d97_TraitSubIdentExprModel(void) = default;

	inline bool operator==(_1e5e16d97_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_1e5e16d97_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1e5e172b5_StructSubIdentExprModel {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Ptr<_1e6a8ac6d_Data> _field_Expr = jule::Ptr<_1e6a8ac6d_Data>();
	jule::Ptr<_1e6ab6a8a_TypeKind> _field_ExprKind = jule::Ptr<_1e6ab6a8a_TypeKind>();
	jule::Ptr<_1e5e202ce_FnIns> _field_Method = jule::Ptr<_1e5e202ce_FnIns>();
	jule::Ptr<_1e5d4c805_FieldIns> _field_Field = jule::Ptr<_1e5d4c805_FieldIns>();
	

	_1e5e172b5_StructSubIdentExprModel(void) = default;

	inline bool operator==(_1e5e172b5_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_ExprKind == _other._field_ExprKind &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field;
	}

	inline bool operator!=(_1e5e172b5_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1e5e174a2_StructStaticIdentExprModel {
	jule::Ptr<_1e5d714d8_StructIns> _field_Structure = jule::Ptr<_1e5d714d8_StructIns>();
	jule::Any _field_Expr = jule::Any();
	jule::Ptr<_1e5e202ce_FnIns> _field_Method = jule::Ptr<_1e5e202ce_FnIns>();
	

	_1e5e174a2_StructStaticIdentExprModel(void) = default;

	inline bool operator==(_1e5e174a2_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_1e5e174a2_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1e5e1768e_ArrayExprModel {
	jule::Ptr<_1e6ac28ed_Arr> _field_Kind = jule::Ptr<_1e6ac28ed_Arr>();
	jule::Slice<jule::Any> _field_Elems = jule::Slice<jule::Any>();
	

	_1e5e1768e_ArrayExprModel(void) = default;

	inline bool operator==(_1e5e1768e_ArrayExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1e5e1768e_ArrayExprModel _other) { return !this->operator==(_other); }


};
struct _1e5e1787b_CommonIdentExprModel {
	jule::Str _field_Ident = jule::Str();
	

	_1e5e1787b_CommonIdentExprModel(void) = default;

	inline bool operator==(_1e5e1787b_CommonIdentExprModel _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1e5e1787b_CommonIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1e5e17a68_CommonSubIdentExprModel {
	jule::Ptr<_1e6ab6a8a_TypeKind> _field_ExprKind = jule::Ptr<_1e6ab6a8a_TypeKind>();
	jule::Any _field_Expr = jule::Any();
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Str _field_Ident = jule::Str();
	

	_1e5e17a68_CommonSubIdentExprModel(void) = default;

	inline bool operator==(_1e5e17a68_CommonSubIdentExprModel _other) {
		return 
			this->_field_ExprKind == _other._field_ExprKind &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1e5e17a68_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1e5e17c55_TupleExprModel {
	jule::Slice<jule::Ptr<_1e6a8ac6d_Data>> _field_Datas = jule::Slice<jule::Ptr<_1e6a8ac6d_Data>>();
	

	_1e5e17c55_TupleExprModel(void) = default;

	inline bool operator==(_1e5e17c55_TupleExprModel _other) {
		return 
			this->_field_Datas == _other._field_Datas;
	}

	inline bool operator!=(_1e5e17c55_TupleExprModel _other) { return !this->operator==(_other); }


};
struct _1e5e17e42_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any();
	jule::Bool _field_Debug = jule::Bool();
	

	_1e5e17e42_BuiltinOutCallExprModel(void) = default;

	inline bool operator==(_1e5e17e42_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1e5e17e42_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e5e1812e_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any();
	jule::Bool _field_Debug = jule::Bool();
	

	_1e5e1812e_BuiltinOutlnCallExprModel(void) = default;

	inline bool operator==(_1e5e1812e_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1e5e1812e_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e5e1831b_BuiltinCloneCallExprModel {
	jule::Any _field_Expr = jule::Any();
	

	_1e5e1831b_BuiltinCloneCallExprModel(void) = default;

	inline bool operator==(_1e5e1831b_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e5e1831b_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e5e18508_BuiltinNewCallExprModel {
	jule::Ptr<_1e6ab6a8a_TypeKind> _field_Kind = jule::Ptr<_1e6ab6a8a_TypeKind>();
	jule::Any _field_Init = jule::Any();
	

	_1e5e18508_BuiltinNewCallExprModel(void) = default;

	inline bool operator==(_1e5e18508_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_1e5e18508_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e5e186e5_BuiltinPanicCallExprModel {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Any _field_Expr = jule::Any();
	

	_1e5e186e5_BuiltinPanicCallExprModel(void) = default;

	inline bool operator==(_1e5e186e5_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e5e186e5_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e5e188d2_BuiltinAssertCallExprModel {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Any _field_Expr = jule::Any();
	jule::Str _field_Log = jule::Str();
	

	_1e5e188d2_BuiltinAssertCallExprModel(void) = default;

	inline bool operator==(_1e5e188d2_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_1e5e188d2_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e5e18abe_BuiltinMakeCallExprModel {
	jule::Ptr<_1e6ab6a8a_TypeKind> _field_Kind = jule::Ptr<_1e6ab6a8a_TypeKind>();
	jule::Any _field_Len = jule::Any();
	jule::Any _field_Cap = jule::Any();
	

	_1e5e18abe_BuiltinMakeCallExprModel(void) = default;

	inline bool operator==(_1e5e18abe_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_1e5e18abe_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e5e18cab_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any();
	jule::Any _field_Elements = jule::Any();
	

	_1e5e18cab_BuiltinAppendCallExprModel(void) = default;

	inline bool operator==(_1e5e18cab_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_1e5e18cab_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e5e18e98_BuiltinCopyCallExprModel {
	jule::Ptr<_1e6a8ac6d_Data> _field_Dest = jule::Ptr<_1e6a8ac6d_Data>();
	jule::Ptr<_1e6a8ac6d_Data> _field_Src = jule::Ptr<_1e6a8ac6d_Data>();
	

	_1e5e18e98_BuiltinCopyCallExprModel(void) = default;

	inline bool operator==(_1e5e18e98_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_1e5e18e98_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e5e19185_BuiltinErrorCallExprModel {
	jule::Ptr<_1e5e202ce_FnIns> _field_Func = jule::Ptr<_1e5e202ce_FnIns>();
	jule::Any _field_Err = jule::Any();
	

	_1e5e19185_BuiltinErrorCallExprModel(void) = default;

	inline bool operator==(_1e5e19185_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_1e5e19185_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e5e17084_SizeofExprModel {
	jule::Any _field_Expr = jule::Any();
	

	_1e5e17084_SizeofExprModel(void) = default;

	inline bool operator==(_1e5e17084_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e5e17084_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1e5e197e5_AlignofExprModel {
	jule::Any _field_Expr = jule::Any();
	

	_1e5e197e5_AlignofExprModel(void) = default;

	inline bool operator==(_1e5e197e5_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e5e197e5_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1e5e199d2_RuneExprModel {
	jule::I32 _field_Code = jule::I32();
	

	_1e5e199d2_RuneExprModel(void) = default;

	inline bool operator==(_1e5e199d2_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_1e5e199d2_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1e5e19bbe_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any();
	

	_1e5e19bbe_IntegratedToStrExprModel(void) = default;

	inline bool operator==(_1e5e19bbe_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e5e19bbe_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1e5e19dab_BackendEmitExprModel {
	jule::Str _field_Code = jule::Str();
	jule::Slice<jule::Any> _field_Exprs = jule::Slice<jule::Any>();
	

	_1e5e19dab_BackendEmitExprModel(void) = default;

	inline bool operator==(_1e5e19dab_BackendEmitExprModel _other) {
		return 
			this->_field_Code == _other._field_Code &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_1e5e19dab_BackendEmitExprModel _other) { return !this->operator==(_other); }


};
struct _1e5e1a098_FreeExprModel {
	jule::Any _field_Expr = jule::Any();
	

	_1e5e1a098_FreeExprModel(void) = default;

	inline bool operator==(_1e5e1a098_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e5e1a098_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1e5e1a62b_RetType {
	jule::Ptr<_1e6ababe3_TypeSymbol> _field_Kind = jule::Ptr<_1e6ababe3_TypeSymbol>();
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _field_Idents = jule::Slice<jule::Ptr<_1e47137a5_Token>>();
	

	_1e5e1a62b_RetType(void) = default;

	inline bool operator==(_1e5e1a62b_RetType _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Idents == _other._field_Idents;
	}

	inline bool operator!=(_1e5e1a62b_RetType _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e5e1e410_ParamIns> _1e5e1b1a9_instance(jule::Ptr<_1e5e1ace1_Param>);
inline jule::Bool _1e5e1b41d_IsSelf(_1e5e1ace1_Param*);
inline jule::Bool _1e5e1b682_IsRef(_1e5e1ace1_Param*);
struct _1e5e1ace1_Param {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Variadic = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Ptr<_1e6ababe3_TypeSymbol> _field_Kind = jule::Ptr<_1e6ababe3_TypeSymbol>();
	jule::Str _field_Ident = jule::Str();
	

	_1e5e1ace1_Param(void) = default;

	inline bool operator==(_1e5e1ace1_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1e5e1ace1_Param _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e5e1ca90_IsVoid(_1e5e1c62d_Fn*);
inline jule::Bool _1e5e1cd04_IsMethod(_1e5e1c62d_Fn*);
inline jule::Bool _1e5e1d068_IsEntryPoint(_1e5e1c62d_Fn*);
inline jule::Bool _1e5e1d2cc_IsInit(_1e5e1c62d_Fn*);
inline jule::Bool _1e5e1d541_IsAnon(_1e5e1c62d_Fn*);
inline jule::Bool _1e5e1d7a5_AnyVar(_1e5e1c62d_Fn*);
inline jule::Ptr<_1e5e202ce_FnIns> _1e5e1da19_instanceForce(jule::Ptr<_1e5e1c62d_Fn>);
inline jule::Ptr<_1e5e202ce_FnIns> _1e5e1dc7d_instance(jule::Ptr<_1e5e1c62d_Fn>);
inline jule::Ptr<_1e5e202ce_FnIns> _1e5e1e058_appendInstance(_1e5e1c62d_Fn*, jule::Ptr<_1e5e202ce_FnIns>&);
struct _1e5e1c62d_Fn {
	jule::Ptr<_1e6a22441_Sema> _field_sema = jule::Ptr<_1e6a22441_Sema>();
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Bool _field_Global = jule::Bool();
	jule::Bool _field_Unsafety = jule::Bool();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Statically = jule::Bool();
	jule::Bool _field_Exceptional = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_1e5d21268_Directive>> _field_Directives = jule::Slice<jule::Ptr<_1e5d21268_Directive>>();
	jule::Ptr<_1e5d64c7e_ScopeTree> _field_Scope = jule::Ptr<_1e5d64c7e_ScopeTree>();
	jule::Slice<jule::Ptr<_1e5d62045_GenericDecl>> _field_Generics = jule::Slice<jule::Ptr<_1e5d62045_GenericDecl>>();
	jule::Ptr<_1e5e1a62b_RetType> _field_Result = jule::Ptr<_1e5e1a62b_RetType>();
	jule::Slice<jule::Ptr<_1e5e1ace1_Param>> _field_Params = jule::Slice<jule::Ptr<_1e5e1ace1_Param>>();
	jule::Ptr<_1e5d4518d_Struct> _field_Owner = jule::Ptr<_1e5d4518d_Struct>();
	jule::Slice<jule::Ptr<_1e5e202ce_FnIns>> _field_Instances = jule::Slice<jule::Ptr<_1e5e202ce_FnIns>>();
	

	_1e5e1c62d_Fn(void) = default;

	inline bool operator==(_1e5e1c62d_Fn _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_Token == _other._field_Token &&
			this->_field_Global == _other._field_Global &&
			this->_field_Unsafety == _other._field_Unsafety &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Statically == _other._field_Statically &&
			this->_field_Exceptional == _other._field_Exceptional &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Result == _other._field_Result &&
			this->_field_Params == _other._field_Params &&
			this->_field_Owner == _other._field_Owner &&
			this->_field_Instances == _other._field_Instances;
	}

	inline bool operator!=(_1e5e1c62d_Fn _other) { return !this->operator==(_other); }


};
inline jule::Str _1e5e1e7d9_Str(_1e5e1e410_ParamIns*);
struct _1e5e1e410_ParamIns {
	jule::Ptr<_1e5e1ace1_Param> _field_Decl = jule::Ptr<_1e5e1ace1_Param>();
	jule::Ptr<_1e6ab6a8a_TypeKind> _field_Kind = jule::Ptr<_1e6ab6a8a_TypeKind>();
	

	_1e5e1e410_ParamIns(void) = default;

	inline bool operator==(_1e5e1e410_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1e5e1e410_ParamIns _other) { return !this->operator==(_other); }


};
inline jule::Str _1e5e2060e_Str(_1e5e202ce_FnIns*);
inline jule::Bool _1e5e2091c_Equals(jule::Ptr<_1e5e202ce_FnIns>, jule::Ptr<_1e6ab6a8a_TypeKind>);
inline jule::Bool _1e5e20d7e_EqualsFn(jule::Ptr<_1e5e202ce_FnIns>, jule::Ptr<_1e5e202ce_FnIns>&);
inline jule::Bool _1e5e2118c_equalsTrait(jule::Ptr<_1e5e202ce_FnIns>, jule::Ptr<_1e5e202ce_FnIns>&);
inline jule::Slice<jule::Ptr<_1e6ab6a8a_TypeKind>> _1e5e21401_Types(_1e5e202ce_FnIns*);
inline jule::Bool _1e5e21665_IsBuiltin(_1e5e202ce_FnIns*);
inline jule::Bool _1e5e218c9_IsAnon(_1e5e202ce_FnIns*);
inline jule::Bool _1e5e21bd7_Same(_1e5e202ce_FnIns*, jule::Ptr<_1e5e202ce_FnIns>);
inline jule::Str _1e5e21ee5_GetKindStr(_1e5e202ce_FnIns*, jule::Bool);
struct _1e5e202ce_FnIns {
	jule::Ptr<_1e5d714d8_StructIns> _field_Owner = jule::Ptr<_1e5d714d8_StructIns>();
	jule::Ptr<_1e5e1c62d_Fn> _field_Decl = jule::Ptr<_1e5e1c62d_Fn>();
	jule::Slice<jule::Ptr<_1e6ab535d_InsGeneric>> _field_Generics = jule::Slice<jule::Ptr<_1e6ab535d_InsGeneric>>();
	jule::Slice<jule::Ptr<_1e5e1e410_ParamIns>> _field_Params = jule::Slice<jule::Ptr<_1e5e1e410_ParamIns>>();
	jule::Ptr<_1e6ab6a8a_TypeKind> _field_Result = jule::Ptr<_1e6ab6a8a_TypeKind>();
	jule::Ptr<_1e6a06700_Scope> _field_Scope = jule::Ptr<_1e6a06700_Scope>();
	jule::Ptr<_1e5e231a0_ReferenceStack> _field_Refers = jule::Ptr<_1e5e231a0_ReferenceStack>();
	jule::Bool _field_Anon = jule::Bool();
	jule::Fn<jule::Ptr<_1e6a8ac6d_Data>(jule::Ptr<_1e6a8c7db_Eval>&,jule::Ptr<_1e5d5d250_FnCallExpr>&,jule::Ptr<_1e6a8ac6d_Data>&)> _field_caller = jule::Fn<jule::Ptr<_1e6a8ac6d_Data>(jule::Ptr<_1e6a8c7db_Eval>&,jule::Ptr<_1e5d5d250_FnCallExpr>&,jule::Ptr<_1e6a8ac6d_Data>&)>();
	jule::Bool _field_reloaded = jule::Bool();
	

	_1e5e202ce_FnIns(void) = default;

	inline bool operator==(_1e5e202ce_FnIns _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Params == _other._field_Params &&
			this->_field_Result == _other._field_Result &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Refers == _other._field_Refers &&
			this->_field_Anon == _other._field_Anon &&
			this->_field_caller == _other._field_caller &&
			this->_field_reloaded == _other._field_reloaded;
	}

	inline bool operator!=(_1e5e202ce_FnIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e5e231a0_ReferenceStack> static__1e5e2348b_new(void);
inline jule::I64 _1e5e23821_Len(_1e5e231a0_ReferenceStack*);
inline jule::Any _1e5e23b2e_At(_1e5e231a0_ReferenceStack*, jule::I64);
inline void _1e5e23da4_Push(_1e5e231a0_ReferenceStack*, jule::Any);
inline jule::Bool _1b286ab70_Exist(_1e5e231a0_ReferenceStack*, jule::Ptr<_1e5e202ce_FnIns>);
inline jule::Bool _1b288046a_Exist(_1e5e231a0_ReferenceStack*, jule::Ptr<_1e6a3dd20_Var>);
inline jule::Bool _1b29200ba_Exist(_1e5e231a0_ReferenceStack*, jule::Ptr<_1e5d714d8_StructIns>);
inline jule::Bool _1b2b9b599_Exist(_1e5e231a0_ReferenceStack*, jule::Ptr<_1e5e2e4db_Trait>);
struct _1e5e231a0_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer = jule::Slice<jule::Any>();
	

	_1e5e231a0_ReferenceStack(void) = default;

	inline bool operator==(_1e5e231a0_ReferenceStack _other) {
		return 
			this->_field_buffer == _other._field_buffer;
	}

	inline bool operator!=(_1e5e231a0_ReferenceStack _other) { return !this->operator==(_other); }


};
struct _1e5e24569_Pass {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Str _field_Text = jule::Str();
	

	_1e5e24569_Pass(void) = default;

	inline bool operator==(_1e5e24569_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_1e5e24569_Pass _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e5e28a13_symbolBuilder> _1e5e28eb9_getRoot(jule::Ptr<_1e5e28a13_symbolBuilder>);
inline void _1e5e29382_pushErr(_1e5e28a13_symbolBuilder*, jule::Ptr<_1e47137a5_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _1e5e2974a_pushErrText(_1e5e28a13_symbolBuilder*, jule::Ptr<_1e47137a5_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _1e5e29a69_pushSuggestion(_1e5e28a13_symbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e5e29e21_checkCppUseDeclPath(_1e5e28a13_symbolBuilder*, jule::Ptr<_1e5d6c4a1_UseDecl>&, jule::Str);
inline jule::Ptr<_1e6a192e5_ImportInfo> _1e5e2a1eb_buildCppHeaderImport(_1e5e28a13_symbolBuilder*, jule::Ptr<_1e5d6c4a1_UseDecl>&);
inline jule::Ptr<_1e6a192e5_ImportInfo> _1e5e2a509_buildStdImport(_1e5e28a13_symbolBuilder*, jule::Ptr<_1e5d6c4a1_UseDecl>&);
inline jule::Ptr<_1e6a192e5_ImportInfo> _1e5e2a817_buildIdentImport(jule::Ptr<_1e5e28a13_symbolBuilder>, jule::Ptr<_1e5d6c4a1_UseDecl>&);
inline jule::Ptr<_1e6a192e5_ImportInfo> _1e5e2ab25_buildImport(jule::Ptr<_1e5e28a13_symbolBuilder>, jule::Ptr<_1e5d6c4a1_UseDecl>&);
inline jule::Bool _1e5e2ae33_checkDuplicateUseDecl(_1e5e28a13_symbolBuilder*, jule::Ptr<_1e6a192e5_ImportInfo>&);
inline void _1e5e2b252_implImportSelections(_1e5e28a13_symbolBuilder*, jule::Ptr<_1e6a192e5_ImportInfo>&, jule::Ptr<_1e5d6c4a1_UseDecl>&);
inline jule::Str _1e5e2b560_getAsLinkPath(jule::Ptr<_1e5e28a13_symbolBuilder>, jule::Str);
inline void _1e5e2b928_pushCycleError(jule::Ptr<_1e5e28a13_symbolBuilder>, jule::Ptr<_1e5e28a13_symbolBuilder>&, jule::Str, jule::Str&);
inline void _1e5e2bce1_pushCrossCycleError(jule::Ptr<_1e5e28a13_symbolBuilder>, jule::Ptr<_1e5e28a13_symbolBuilder>&, jule::Ptr<_1e6a192e5_ImportInfo>&, jule::Ptr<_1e47137a5_Token>&);
inline jule::Bool _1e5e2c198_checkImportCycles(jule::Ptr<_1e5e28a13_symbolBuilder>, jule::Ptr<_1e6a192e5_ImportInfo>, jule::Ptr<_1e5d6c4a1_UseDecl>&);
inline void _1e5e2c583_checkPackageAccessibility(_1e5e28a13_symbolBuilder*, jule::Ptr<_1e5d6c4a1_UseDecl>&, jule::Str&, jule::Str&);
inline jule::Bool _1e5e2c94b_importPackage(jule::Ptr<_1e5e28a13_symbolBuilder>, jule::Ptr<_1e6a192e5_ImportInfo>&, jule::Ptr<_1e5d6c4a1_UseDecl>&);
inline jule::Ptr<_1e6a192e5_ImportInfo> _1e5e2cc59_importUseDecl(jule::Ptr<_1e5e28a13_symbolBuilder>, jule::Ptr<_1e5d6c4a1_UseDecl>&);
inline void _1e5e2ce35_importUseDecls(jule::Ptr<_1e5e28a13_symbolBuilder>);
inline void _1e5e2d1aa_appendNode(_1e5e28a13_symbolBuilder*, _1e5d20d6c_Node&);
inline void _1e5e2d386_appendNodes(_1e5e28a13_symbolBuilder*);
inline void _1e5e2d60b_pushDirectivePass(_1e5e28a13_symbolBuilder*, jule::Ptr<_1e5d21268_Directive>&);
inline void _1e5e2d7d7_appendTopDirectives(_1e5e28a13_symbolBuilder*);
inline void _1e5e2d9b3_build(jule::Ptr<_1e5e28a13_symbolBuilder>);
struct _1e5e28a13_symbolBuilder {
	jule::Ptr<_1e5e28a13_symbolBuilder> _field_owner = jule::Ptr<_1e5e28a13_symbolBuilder>();
	jule::Trait<_1e6a16a62_Importer> _field_importer = jule::Trait<_1e6a16a62_Importer>();
	jule::Slice<_1e43e3a18_Log> _field_errors = jule::Slice<_1e43e3a18_Log>();
	jule::Ptr<_1e5d201bd_Ast> _field_ast = jule::Ptr<_1e5d201bd_Ast>();
	jule::Ptr<_1e6a86010_SymbolTable> _field_table = jule::Ptr<_1e6a86010_SymbolTable>();
	

	_1e5e28a13_symbolBuilder(void) = default;

	inline bool operator==(_1e5e28a13_symbolBuilder _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_importer == _other._field_importer &&
			this->_field_errors == _other._field_errors &&
			this->_field_ast == _other._field_ast &&
			this->_field_table == _other._field_table;
	}

	inline bool operator!=(_1e5e28a13_symbolBuilder _other) { return !this->operator==(_other); }


};
inline jule::Str _1e5e2e8d7_Str(_1e5e2e4db_Trait*);
inline jule::Bool _1e5e2ebe5_Equals(jule::Ptr<_1e5e2e4db_Trait>, jule::Ptr<_1e6ab6a8a_TypeKind>);
inline jule::Bool _1e5e30058_IsBuiltin(_1e5e2e4db_Trait*);
inline jule::Ptr<_1e5e1c62d_Fn> _1e5e30366_FindMethod(_1e5e2e4db_Trait*, jule::Str);
struct _1e5e2e4db_Trait {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Slice<jule::Ptr<_1e5e1c62d_Fn>> _field_Methods = jule::Slice<jule::Ptr<_1e5e1c62d_Fn>>();
	jule::Slice<jule::Ptr<_1e5d4518d_Struct>> _field_Implemented = jule::Slice<jule::Ptr<_1e5d4518d_Struct>>();
	

	_1e5e2e4db_Trait(void) = default;

	inline bool operator==(_1e5e2e4db_Trait _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Implemented == _other._field_Implemented;
	}

	inline bool operator!=(_1e5e2e4db_Trait _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e5e31026_AutoExpr(_1e5e30b3b_EnumItem*);
struct _1e5e30b3b_EnumItem {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1e6a8bce6_Value> _field_Value = jule::Ptr<_1e6a8bce6_Value>();
	

	_1e5e30b3b_EnumItem(void) = default;

	inline bool operator==(_1e5e30b3b_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1e5e30b3b_EnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1e5e31994_Str(_1e5e31631_Enum*);
inline jule::Bool _1e5e31ca2_Equals(jule::Ptr<_1e5e31631_Enum>, jule::Ptr<_1e6ab6a8a_TypeKind>);
inline jule::Ptr<_1e5e30b3b_EnumItem> _1e5e321e2_FindItem(_1e5e31631_Enum*, jule::Str);
struct _1e5e31631_Enum {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1e6ababe3_TypeSymbol> _field_Kind = jule::Ptr<_1e6ababe3_TypeSymbol>();
	jule::Slice<jule::Ptr<_1e5e30b3b_EnumItem>> _field_Items = jule::Slice<jule::Ptr<_1e5e30b3b_EnumItem>>();
	

	_1e5e31631_Enum(void) = default;

	inline bool operator==(_1e5e31631_Enum _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Items == _other._field_Items;
	}

	inline bool operator!=(_1e5e31631_Enum _other) { return !this->operator==(_other); }


};
struct _1e5e32665_TypeEnumItem {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1e6ababe3_TypeSymbol> _field_Kind = jule::Ptr<_1e6ababe3_TypeSymbol>();
	

	_1e5e32665_TypeEnumItem(void) = default;

	inline bool operator==(_1e5e32665_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1e5e32665_TypeEnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1e5e3305b_Str(_1e5e32c2b_TypeEnum*);
inline jule::Bool _1e5e33369_Equals(jule::Ptr<_1e5e32c2b_TypeEnum>, jule::Ptr<_1e6ab6a8a_TypeKind>);
inline jule::Ptr<_1e5e32665_TypeEnumItem> _1e5e33765_FindItem(_1e5e32c2b_TypeEnum*, jule::Str);
struct _1e5e32c2b_TypeEnum {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_1e5e32665_TypeEnumItem>> _field_Items = jule::Slice<jule::Ptr<_1e5e32665_TypeEnumItem>>();
	

	_1e5e32c2b_TypeEnum(void) = default;

	inline bool operator==(_1e5e32c2b_TypeEnum _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Items == _other._field_Items;
	}

	inline bool operator!=(_1e5e32c2b_TypeEnum _other) { return !this->operator==(_other); }


};
inline jule::Fn<jule::Bool(jule::Ptr<_1e6a22441_Sema>&,jule::Slice<jule::Ptr<_1e6ab5d97_TypeAlias>>&)> _1e5e60aa0_readyFn(jule::Ptr<_1e5e50683_constraintChecker>);
inline jule::Bool _1e5e77ad9_readyFi(jule::Ptr<_1e5e50683_constraintChecker>);
inline jule::Bool _1e5e92483_readySi(jule::Ptr<_1e5e50683_constraintChecker>);
inline jule::Bool _1e5e942cb_ready(jule::Ptr<_1e5e50683_constraintChecker>);
inline jule::Bool _1e5e954b9_check(jule::Ptr<_1e5e50683_constraintChecker>);
struct _1e5e50683_constraintChecker {
	jule::Ptr<_1e6a22441_Sema> _field_s = jule::Ptr<_1e6a22441_Sema>();
	jule::Slice<jule::Ptr<_1e5d62045_GenericDecl>> _field_genericsD = jule::Slice<jule::Ptr<_1e5d62045_GenericDecl>>();
	jule::Slice<jule::Ptr<_1e6ab535d_InsGeneric>> _field_generics = jule::Slice<jule::Ptr<_1e6ab535d_InsGeneric>>();
	jule::Slice<jule::Ptr<_1e6ab5d97_TypeAlias>> _field_genericsA = jule::Slice<jule::Ptr<_1e6ab5d97_TypeAlias>>();
	jule::Ptr<_1e5e202ce_FnIns> _field_fi = jule::Ptr<_1e5e202ce_FnIns>();
	jule::Ptr<_1e5d714d8_StructIns> _field_si = jule::Ptr<_1e5d714d8_StructIns>();
	jule::Ptr<_1e47137a5_Token> _field_et = jule::Ptr<_1e47137a5_Token>();
	jule::Bool _field_uniq = jule::Bool();
	

	_1e5e50683_constraintChecker(void) = default;

	inline bool operator==(_1e5e50683_constraintChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_genericsD == _other._field_genericsD &&
			this->_field_generics == _other._field_generics &&
			this->_field_genericsA == _other._field_genericsA &&
			this->_field_fi == _other._field_fi &&
			this->_field_si == _other._field_si &&
			this->_field_et == _other._field_et &&
			this->_field_uniq == _other._field_uniq;
	}

	inline bool operator!=(_1e5e50683_constraintChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e5e989ea_IsTraitImpl(_1e5eb8a5e_Impl*);
inline jule::Bool _1e5e99248_IsStructImpl(_1e5eb8a5e_Impl*);
struct _1e5eb8a5e_Impl {
	jule::Ptr<_1e5d54961_TypeDecl> _field_Base = jule::Ptr<_1e5d54961_TypeDecl>();
	jule::Ptr<_1e5d54961_TypeDecl> _field_Dest = jule::Ptr<_1e5d54961_TypeDecl>();
	jule::Slice<jule::Ptr<_1e5e1c62d_Fn>> _field_Methods = jule::Slice<jule::Ptr<_1e5e1c62d_Fn>>();
	jule::Slice<jule::Ptr<_1e6a3dd20_Var>> _field_Statics = jule::Slice<jule::Ptr<_1e6a3dd20_Var>>();
	

	_1e5eb8a5e_Impl(void) = default;

	inline bool operator==(_1e5eb8a5e_Impl _other) {
		return 
			this->_field_Base == _other._field_Base &&
			this->_field_Dest == _other._field_Dest &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Statics == _other._field_Statics;
	}

	inline bool operator!=(_1e5eb8a5e_Impl _other) { return !this->operator==(_other); }


};
struct _1e6a06700_Scope {
	jule::Ptr<_1e6a06700_Scope> _field_Parent = jule::Ptr<_1e6a06700_Scope>();
	jule::Bool _field_Unsafety = jule::Bool();
	jule::Bool _field_Deferred = jule::Bool();
	jule::Slice<jule::Any> _field_Stmts = jule::Slice<jule::Any>();
	

	_1e6a06700_Scope(void) = default;

	inline bool operator==(_1e6a06700_Scope _other) {
		return 
			this->_field_Parent == _other._field_Parent &&
			this->_field_Unsafety == _other._field_Unsafety &&
			this->_field_Deferred == _other._field_Deferred &&
			this->_field_Stmts == _other._field_Stmts;
	}

	inline bool operator!=(_1e6a06700_Scope _other) { return !this->operator==(_other); }


};
struct _1e6a068dc_If {
	jule::Any _field_Expr = jule::Any();
	jule::Ptr<_1e6a06700_Scope> _field_Scope = jule::Ptr<_1e6a06700_Scope>();
	

	_1e6a068dc_If(void) = default;

	inline bool operator==(_1e6a068dc_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1e6a068dc_If _other) { return !this->operator==(_other); }


};
struct _1e6a06ac9_Else {
	jule::Ptr<_1e6a06700_Scope> _field_Scope = jule::Ptr<_1e6a06700_Scope>();
	

	_1e6a06ac9_Else(void) = default;

	inline bool operator==(_1e6a06ac9_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1e6a06ac9_Else _other) { return !this->operator==(_other); }


};
struct _1e6a06cb6_Conditional {
	jule::Slice<jule::Ptr<_1e6a068dc_If>> _field_Elifs = jule::Slice<jule::Ptr<_1e6a068dc_If>>();
	jule::Ptr<_1e6a06ac9_Else> _field_Default = jule::Ptr<_1e6a06ac9_Else>();
	

	_1e6a06cb6_Conditional(void) = default;

	inline bool operator==(_1e6a06cb6_Conditional _other) {
		return 
			this->_field_Elifs == _other._field_Elifs &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1e6a06cb6_Conditional _other) { return !this->operator==(_other); }


};
struct _1e6a06ea3_InfIter {
	jule::Ptr<_1e6a06700_Scope> _field_Scope = jule::Ptr<_1e6a06700_Scope>();
	

	_1e6a06ea3_InfIter(void) = default;

	inline bool operator==(_1e6a06ea3_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1e6a06ea3_InfIter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e5eb8c4b_IsWhileNext(_1e6a07190_WhileIter*);
struct _1e6a07190_WhileIter {
	jule::Any _field_Expr = jule::Any();
	jule::Any _field_Next = jule::Any();
	jule::Ptr<_1e6a06700_Scope> _field_Scope = jule::Ptr<_1e6a06700_Scope>();
	

	_1e6a07190_WhileIter(void) = default;

	inline bool operator==(_1e6a07190_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1e6a07190_WhileIter _other) { return !this->operator==(_other); }


};
struct _1e6a0737c_RangeIter {
	jule::Ptr<_1e6a8ac6d_Data> _field_Expr = jule::Ptr<_1e6a8ac6d_Data>();
	jule::Ptr<_1e6a06700_Scope> _field_Scope = jule::Ptr<_1e6a06700_Scope>();
	jule::Ptr<_1e6a3dd20_Var> _field_KeyA = jule::Ptr<_1e6a3dd20_Var>();
	jule::Ptr<_1e6a3dd20_Var> _field_KeyB = jule::Ptr<_1e6a3dd20_Var>();
	

	_1e6a0737c_RangeIter(void) = default;

	inline bool operator==(_1e6a0737c_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1e6a0737c_RangeIter _other) { return !this->operator==(_other); }


};
struct _1e6a07569_ContSt {
	jule::Uintptr _field_It = jule::Uintptr();
	

	_1e6a07569_ContSt(void) = default;

	inline bool operator==(_1e6a07569_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_1e6a07569_ContSt _other) { return !this->operator==(_other); }


};
struct _1e6a07756_BreakSt {
	jule::Uintptr _field_It = jule::Uintptr();
	jule::Uintptr _field_Mtch = jule::Uintptr();
	

	_1e6a07756_BreakSt(void) = default;

	inline bool operator==(_1e6a07756_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_1e6a07756_BreakSt _other) { return !this->operator==(_other); }


};
struct _1e6a07943_Label {
	jule::Str _field_Ident = jule::Str();
	

	_1e6a07943_Label(void) = default;

	inline bool operator==(_1e6a07943_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1e6a07943_Label _other) { return !this->operator==(_other); }


};
struct _1e6a07b30_GotoSt {
	jule::Str _field_Ident = jule::Str();
	

	_1e6a07b30_GotoSt(void) = default;

	inline bool operator==(_1e6a07b30_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1e6a07b30_GotoSt _other) { return !this->operator==(_other); }


};
struct _1e6a07d1c_Postfix {
	jule::Any _field_Expr = jule::Any();
	jule::Str _field_Op = jule::Str();
	

	_1e6a07d1c_Postfix(void) = default;

	inline bool operator==(_1e6a07d1c_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1e6a07d1c_Postfix _other) { return !this->operator==(_other); }


};
struct _1e6a08009_Assign {
	jule::Ptr<_1e5e151b4_OperandExprModel> _field_L = jule::Ptr<_1e5e151b4_OperandExprModel>();
	jule::Ptr<_1e5e151b4_OperandExprModel> _field_R = jule::Ptr<_1e5e151b4_OperandExprModel>();
	jule::Ptr<_1e47137a5_Token> _field_Op = jule::Ptr<_1e47137a5_Token>();
	

	_1e6a08009_Assign(void) = default;

	inline bool operator==(_1e6a08009_Assign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1e6a08009_Assign _other) { return !this->operator==(_other); }


};
struct _1e6a081e6_MultiAssign {
	jule::Slice<jule::Any> _field_L = jule::Slice<jule::Any>();
	jule::Any _field_R = jule::Any();
	

	_1e6a081e6_MultiAssign(void) = default;

	inline bool operator==(_1e6a081e6_MultiAssign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R;
	}

	inline bool operator!=(_1e6a081e6_MultiAssign _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e6a08801_IsGenericTypeMatch(_1e6a083d3_Match*);
struct _1e6a083d3_Match {
	jule::Ptr<_1e6a8ac6d_Data> _field_Expr = jule::Ptr<_1e6a8ac6d_Data>();
	jule::Bool _field_TypeMatch = jule::Bool();
	jule::Slice<jule::Ptr<_1e6a08933_Case>> _field_Cases = jule::Slice<jule::Ptr<_1e6a08933_Case>>();
	jule::Ptr<_1e6a08933_Case> _field_Default = jule::Ptr<_1e6a08933_Case>();
	

	_1e6a083d3_Match(void) = default;

	inline bool operator==(_1e6a083d3_Match _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_TypeMatch == _other._field_TypeMatch &&
			this->_field_Cases == _other._field_Cases &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1e6a083d3_Match _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e6a08b20_isDefault(_1e6a08933_Case*);
struct _1e6a08933_Case {
	jule::Ptr<_1e6a083d3_Match> _field_Owner = jule::Ptr<_1e6a083d3_Match>();
	jule::Ptr<_1e6a06700_Scope> _field_Scope = jule::Ptr<_1e6a06700_Scope>();
	jule::Slice<jule::Ptr<_1e6a8ac6d_Data>> _field_Exprs = jule::Slice<jule::Ptr<_1e6a8ac6d_Data>>();
	jule::Ptr<_1e6a08933_Case> _field_Next = jule::Ptr<_1e6a08933_Case>();
	

	_1e6a08933_Case(void) = default;

	inline bool operator==(_1e6a08933_Case _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Exprs == _other._field_Exprs &&
			this->_field_Next == _other._field_Next;
	}

	inline bool operator!=(_1e6a08933_Case _other) { return !this->operator==(_other); }


};
struct _1e6a08c52_FallSt {
	jule::Uintptr _field_DestCase = jule::Uintptr();
	

	_1e6a08c52_FallSt(void) = default;

	inline bool operator==(_1e6a08c52_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_1e6a08c52_FallSt _other) { return !this->operator==(_other); }


};
struct _1e6a08e3e_RetSt {
	jule::Ptr<_1e5e202ce_FnIns> _field_Func = jule::Ptr<_1e5e202ce_FnIns>();
	jule::Slice<jule::Ptr<_1e6a3dd20_Var>> _field_Vars = jule::Slice<jule::Ptr<_1e6a3dd20_Var>>();
	jule::Any _field_Expr = jule::Any();
	

	_1e6a08e3e_RetSt(void) = default;

	inline bool operator==(_1e6a08e3e_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Vars == _other._field_Vars &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e6a08e3e_RetSt _other) { return !this->operator==(_other); }


};
struct _1e6a0912b_scopeLabel {
	jule::Ptr<_1e47137a5_Token> _field_token = jule::Ptr<_1e47137a5_Token>();
	jule::Ptr<_1e6a07943_Label> _field_label = jule::Ptr<_1e6a07943_Label>();
	jule::I64 _field_pos = jule::I64();
	jule::Ptr<_1e6a09505_scopeChecker> _field_scope = jule::Ptr<_1e6a09505_scopeChecker>();
	jule::Bool _field_used = jule::Bool();
	

	_1e6a0912b_scopeLabel(void) = default;

	inline bool operator==(_1e6a0912b_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1e6a0912b_scopeLabel _other) { return !this->operator==(_other); }


};
struct _1e6a09318_scopeGoto {
	jule::Ptr<_1e5d627a4_GotoSt> _field_gt = jule::Ptr<_1e5d627a4_GotoSt>();
	jule::Ptr<_1e6a09505_scopeChecker> _field_scope = jule::Ptr<_1e6a09505_scopeChecker>();
	jule::I64 _field_pos = jule::I64();
	

	_1e6a09318_scopeGoto(void) = default;

	inline bool operator==(_1e6a09318_scopeGoto _other) {
		return 
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1e6a09318_scopeGoto _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e6a192e5_ImportInfo> _1e6a096e2_FindPackage(_1e6a09505_scopeChecker*, jule::Str);
inline jule::Ptr<_1e6a192e5_ImportInfo> _1e6a09824_SelectPackage(_1e6a09505_scopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_1e6a192e5_ImportInfo>)>);
inline jule::Ptr<_1e6a3dd20_Var> _1e6a09956_FindVar(_1e6a09505_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1e6ab5d97_TypeAlias> _1e6a09a88_FindTypeAlias(_1e6a09505_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1e5d4518d_Struct> _1e6a09bba_FindStruct(_1e6a09505_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1e5e1c62d_Fn> _1e6a09cec_FindFn(_1e6a09505_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1e5e2e4db_Trait> _1e6a09e2e_FindTrait(_1e6a09505_scopeChecker*, jule::Str);
inline jule::Ptr<_1e5e31631_Enum> _1e6a0a061_FindEnum(_1e6a09505_scopeChecker*, jule::Str);
inline jule::Ptr<_1e5e32c2b_TypeEnum> _1e6a0a193_FindTypeEnum(_1e6a09505_scopeChecker*, jule::Str);
inline jule::Bool _1e6a0a2c5_isUnsafe(jule::Ptr<_1e6a09505_scopeChecker>);
inline jule::Bool _1e6a0a407_isRoot(_1e6a09505_scopeChecker*);
inline void _1e6a0a539_stop(_1e6a09505_scopeChecker*);
inline jule::Bool _1e6a0a66b_stopped(_1e6a09505_scopeChecker*);
inline jule::Bool _1e6a0a79d_isDeferred(jule::Ptr<_1e6a09505_scopeChecker>);
inline jule::Ptr<_1e6a09505_scopeChecker> _1e6a0a8d0_getRoot(jule::Ptr<_1e6a09505_scopeChecker>);
inline jule::Ptr<_1e6a09505_scopeChecker> _1e6a0aa12_getHardRoot(jule::Ptr<_1e6a09505_scopeChecker>);
inline jule::Ptr<_1e6a07943_Label> _1e6a0ab44_findLabel(_1e6a09505_scopeChecker*, jule::Str);
inline jule::Ptr<_1e6a0912b_scopeLabel> _1e6a0ac76_findLabelScope(jule::Ptr<_1e6a09505_scopeChecker>, jule::Str);
inline jule::Ptr<_1e6a0912b_scopeLabel> _1e6a0ada8_findLabelAll(_1e6a09505_scopeChecker*, jule::Str);
inline jule::Bool _1e6a0aeda_isDuplicatedIdent(_1e6a09505_scopeChecker*, jule::Uintptr, jule::Str);
inline void _1e6a0b11c_checkVarDecl(jule::Ptr<_1e6a09505_scopeChecker>, jule::Ptr<_1e5d67754_VarDecl>);
inline void _1e6a0b24e_checkTypeAliasDecl(jule::Ptr<_1e6a09505_scopeChecker>, jule::Ptr<_1e5d6b0b5_TypeAliasDecl>);
inline jule::Ptr<_1e6a06700_Scope> _1e6a0b381_getChild(_1e6a09505_scopeChecker*);
inline void _1e6a0b4b3_checkChildSsc(jule::Ptr<_1e6a09505_scopeChecker>, jule::Ptr<_1e5d64c7e_ScopeTree>&, jule::Ptr<_1e6a06700_Scope>&, jule::Ptr<_1e6a09505_scopeChecker>&);
inline jule::Ptr<_1e6a06700_Scope> _1e6a0b5e5_checkChildSc(jule::Ptr<_1e6a09505_scopeChecker>, jule::Ptr<_1e5d64c7e_ScopeTree>&, jule::Ptr<_1e6a09505_scopeChecker>&);
inline jule::Ptr<_1e6a06700_Scope> _1e6a0b727_checkChild(jule::Ptr<_1e6a09505_scopeChecker>, jule::Ptr<_1e5d64c7e_ScopeTree>&);
inline void _1e6a0b859_checkAnonScope(jule::Ptr<_1e6a09505_scopeChecker>, jule::Ptr<_1e5d64c7e_ScopeTree>);
inline void _1e6a0b98b_processErrorCall(jule::Ptr<_1e6a09505_scopeChecker>, jule::Ptr<_1e5e19185_BuiltinErrorCallExprModel>&, jule::Ptr<_1e47137a5_Token>);
inline void _1e6a0babd_checkExpr(jule::Ptr<_1e6a09505_scopeChecker>, jule::Ptr<_1e5d58e82_Expr>);
inline void _1e6a0bc00_checkCoExpr(jule::Ptr<_1e6a09505_scopeChecker>, jule::Ptr<_1e5d5aa77_CoExpr>);
inline jule::Ptr<_1e6a068dc_If> _1e6a0bd32_checkIf(jule::Ptr<_1e6a09505_scopeChecker>, jule::Ptr<_1e5d6a0b4_If>);
inline jule::Ptr<_1e6a06ac9_Else> _1e6a0be64_checkElse(jule::Ptr<_1e6a09505_scopeChecker>, jule::Ptr<_1e5d6a46b_Else>);
inline void _1e6a0c096_checkConditional(jule::Ptr<_1e6a09505_scopeChecker>, jule::Ptr<_1e5d6a8de_Conditional>);
inline void _1e6a0c1c8_checkIterScopeSsc(jule::Ptr<_1e6a09505_scopeChecker>, jule::Uintptr, jule::Ptr<_1e5d64c7e_ScopeTree>, jule::Ptr<_1e6a06700_Scope>&, jule::Ptr<_1e6a09505_scopeChecker>);
inline jule::Ptr<_1e6a06700_Scope> _1e6a0c30a_checkIterScopeSc(jule::Ptr<_1e6a09505_scopeChecker>, jule::Uintptr, jule::Ptr<_1e5d64c7e_ScopeTree>, jule::Ptr<_1e6a09505_scopeChecker>);
inline jule::Ptr<_1e6a06700_Scope> _1e6a0c43c_checkIterScope(jule::Ptr<_1e6a09505_scopeChecker>, jule::Uintptr, jule::Ptr<_1e5d64c7e_ScopeTree>&);
inline void _1e6a0c56e_checkInfIter(jule::Ptr<_1e6a09505_scopeChecker>, jule::Ptr<_1e5d6826b_Iter>&);
inline void _1e6a0c6a1_checkWhileIter(jule::Ptr<_1e6a09505_scopeChecker>, jule::Ptr<_1e5d6826b_Iter>&);
inline void _1e6a0c7d3_checkRangeIter(jule::Ptr<_1e6a09505_scopeChecker>, jule::Ptr<_1e5d6826b_Iter>&);
inline void _1e6a0c915_checkIter(jule::Ptr<_1e6a09505_scopeChecker>, jule::Ptr<_1e5d6826b_Iter>);
inline jule::Bool _1e6a0ca47_checkValidContLabel(jule::Ptr<_1e6a09505_scopeChecker>, jule::Uintptr);
inline jule::Bool _1e6a0cb79_checkValidBreakLabel(jule::Ptr<_1e6a09505_scopeChecker>, jule::Uintptr);
inline jule::Ptr<_1e6a07569_ContSt> _1e6a0ccab_checkContValidScope(jule::Ptr<_1e6a09505_scopeChecker>, jule::Ptr<_1e5d69b41_ContSt>);
inline void _1e6a0cddd_checkCont(jule::Ptr<_1e6a09505_scopeChecker>, jule::Ptr<_1e5d69b41_ContSt>);
inline void _1e6a0d020_checkLabel(jule::Ptr<_1e6a09505_scopeChecker>, jule::Ptr<_1e5d623ec_LabelSt>);
inline void _1e6a0d152_pushGoto(jule::Ptr<_1e6a09505_scopeChecker>, jule::Ptr<_1e5d627a4_GotoSt>);
inline void _1e6a0d284_checkPostfix(jule::Ptr<_1e6a09505_scopeChecker>, jule::Ptr<_1e5d636d9_AssignSt>);
inline jule::Bool _1e6a0d3b6_isNewAssignIdent(_1e6a09505_scopeChecker*, jule::Str);
inline jule::Bool _1e6a0d4e8_checkStructureAssignOp(jule::Ptr<_1e6a09505_scopeChecker>, jule::Ptr<_1e5d714d8_StructIns>&, jule::Ptr<_1e5d636d9_AssignSt>&, jule::Ptr<_1e6a8ac6d_Data>&);
inline void _1e6a0d62a_checkSingleAssign(jule::Ptr<_1e6a09505_scopeChecker>, jule::Ptr<_1e5d636d9_AssignSt>&);
inline void _1e6a0d75c_processEndPartOfMultiAssign(_1e6a09505_scopeChecker*, jule::Ptr<_1e6a081e6_MultiAssign>, jule::Ptr<_1e5d636d9_AssignSt>, jule::Ptr<_1e5d6319a_AssignLeft>, jule::Ptr<_1e6a8ac6d_Data>, jule::Ptr<_1e6a8ac6d_Data>);
inline void _1e6a0d88e_checkRetMultiAssign(jule::Ptr<_1e6a09505_scopeChecker>, jule::Ptr<_1e5d636d9_AssignSt>&);
inline void _1e6a0d9c1_checkMultiAssign(jule::Ptr<_1e6a09505_scopeChecker>, jule::Ptr<_1e5d636d9_AssignSt>&);
inline void _1e6a0db03_checkAssignSt(jule::Ptr<_1e6a09505_scopeChecker>, jule::Ptr<_1e5d636d9_AssignSt>);
inline jule::Ptr<_1e6a06700_Scope> _1e6a0dc35_checkCaseScope(jule::Ptr<_1e6a09505_scopeChecker>, jule::Ptr<_1e6a08933_Case>&, jule::Ptr<_1e5d64c7e_ScopeTree>&);
inline jule::Ptr<_1e6a08933_Case> _1e6a0dd67_checkCase(jule::Ptr<_1e6a09505_scopeChecker>, jule::Ptr<_1e6a083d3_Match>, jule::I64, jule::Ptr<_1e5d6b538_Case>, jule::Ptr<_1e6a8ac6d_Data>);
inline void _1e6a0e087_checkCases(jule::Ptr<_1e6a09505_scopeChecker>, jule::Ptr<_1e5d6bc0e_MatchCase>&, jule::Ptr<_1e6a083d3_Match>, jule::Ptr<_1e6a8ac6d_Data>);
inline jule::Ptr<_1e6a08933_Case> _1e6a0e43e_checkDefault(jule::Ptr<_1e6a09505_scopeChecker>, jule::Ptr<_1e6a083d3_Match>, jule::Ptr<_1e5d6a46b_Else>);
inline void _1e6a0e6b4_checkComptimePanic(_1e6a09505_scopeChecker*, jule::Ptr<_1e6a06700_Scope>&);
inline void _1e6a0e9d3_pushTypeMatch(jule::Ptr<_1e6a09505_scopeChecker>, jule::Ptr<_1e6a083d3_Match>, jule::Ptr<_1e5d6bc0e_MatchCase>&);
inline void _1e6a0ec58_checkTypeMatch(jule::Ptr<_1e6a09505_scopeChecker>, jule::Ptr<_1e5d6bc0e_MatchCase>&);
inline void _1e6a0eecd_checkCommonMatch(jule::Ptr<_1e6a09505_scopeChecker>, jule::Ptr<_1e5d6bc0e_MatchCase>&);
inline void _1e6a10253_checkMatch(jule::Ptr<_1e6a09505_scopeChecker>, jule::Ptr<_1e5d6bc0e_MatchCase>);
inline void _1e6a104c8_checkFall(jule::Ptr<_1e6a09505_scopeChecker>, jule::Ptr<_1e5d62a90_FallSt>);
inline jule::Ptr<_1e6a07756_BreakSt> _1e6a107d6_checkBreakWithLabel(jule::Ptr<_1e6a09505_scopeChecker>, jule::Ptr<_1e5d69789_BreakSt>);
inline jule::Ptr<_1e6a07756_BreakSt> _1e6a10ae4_checkPlainBreak(jule::Ptr<_1e6a09505_scopeChecker>, jule::Ptr<_1e5d69789_BreakSt>);
inline void _1e6a10d69_checkBreak(jule::Ptr<_1e6a09505_scopeChecker>, jule::Ptr<_1e5d69789_BreakSt>);
inline void _1e6a110de_checkRet(jule::Ptr<_1e6a09505_scopeChecker>, jule::Ptr<_1e5d67b0b_RetSt>);
inline void _1e6a11364_checkUseExpr(jule::Ptr<_1e6a09505_scopeChecker>, jule::Ptr<_1e5d59823_UseExpr>);
inline void _1e6a115d9_checkNode(jule::Ptr<_1e6a09505_scopeChecker>, jule::Any&);
inline void _1e6a117b5_checkResult(jule::Ptr<_1e6a09505_scopeChecker>);
inline void _1e6a11991_checkTree(jule::Ptr<_1e6a09505_scopeChecker>);
inline void _1e6a11cb0_checkGoto(_1e6a09505_scopeChecker*, jule::Ptr<_1e6a09318_scopeGoto>&, jule::Ptr<_1e6a0912b_scopeLabel>&);
inline void _1e6a11e8b_checkGotos(_1e6a09505_scopeChecker*);
inline void _1e6a12167_checkLabels(_1e6a09505_scopeChecker*);
inline void _1e6a12343_checkVars(_1e6a09505_scopeChecker*);
inline void _1e6a1251e_checkAliases(_1e6a09505_scopeChecker*);
inline void _1e6a1283d_check(jule::Ptr<_1e6a09505_scopeChecker>, jule::Ptr<_1e5d64c7e_ScopeTree>&, jule::Ptr<_1e6a06700_Scope>&);
inline jule::Ptr<_1e6a09505_scopeChecker> _1e6a12aa2_newChildChecker(jule::Ptr<_1e6a09505_scopeChecker>);
struct _1e6a09505_scopeChecker {
	jule::Ptr<_1e47137a5_Token> _field_calledFrom = jule::Ptr<_1e47137a5_Token>();
	jule::Ptr<_1e6a22441_Sema> _field_s = jule::Ptr<_1e6a22441_Sema>();
	jule::Ptr<_1e5e202ce_FnIns> _field_owner = jule::Ptr<_1e5e202ce_FnIns>();
	jule::Ptr<_1e6a09505_scopeChecker> _field_parent = jule::Ptr<_1e6a09505_scopeChecker>();
	jule::I64 _field_childIndex = jule::I64();
	jule::Ptr<_1e6a86010_SymbolTable> _field_table = jule::Ptr<_1e6a86010_SymbolTable>();
	jule::Ptr<_1e6a06700_Scope> _field_scope = jule::Ptr<_1e6a06700_Scope>();
	jule::Ptr<_1e5d64c7e_ScopeTree> _field_tree = jule::Ptr<_1e5d64c7e_ScopeTree>();
	jule::Ptr<_1e5e202ce_FnIns> _field_result = jule::Ptr<_1e5e202ce_FnIns>();
	jule::Uintptr _field_it = jule::Uintptr();
	jule::Uintptr _field_cse = jule::Uintptr();
	jule::Ptr<jule::Slice<jule::Ptr<_1e6a0912b_scopeLabel>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_1e6a0912b_scopeLabel>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_1e6a09318_scopeGoto>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_1e6a09318_scopeGoto>>>();
	jule::I64 _field_i = jule::I64();
	

	_1e6a09505_scopeChecker(void) = default;

	inline bool operator==(_1e6a09505_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1e6a09505_scopeChecker _other) { return !this->operator==(_other); }


};
inline void _1e6a13a92_checkCdef(_1e6a13652_directiveChecker*, jule::Ptr<_1e5d21268_Directive>&);
inline void _1e6a13d17_checkTypedef(_1e6a13652_directiveChecker*, jule::Ptr<_1e5d21268_Directive>&);
inline void _1e6a1408c_checkDerive(_1e6a13652_directiveChecker*, jule::Ptr<_1e5d21268_Directive>&);
inline void _1e6a14312_checkNamespace(_1e6a13652_directiveChecker*, jule::Ptr<_1e5d21268_Directive>&);
inline void _1e6a14587_checkDeprecated(_1e6a13652_directiveChecker*, jule::Ptr<_1e5d21268_Directive>&);
inline void _1e6a1480c_checkTest(_1e6a13652_directiveChecker*, jule::Ptr<_1e5d21268_Directive>&);
inline void _1e6a14a82_checkDirective(_1e6a13652_directiveChecker*, jule::Ptr<_1e5d21268_Directive>&);
inline void _1e6a14c5d_check(_1e6a13652_directiveChecker*);
struct _1e6a13652_directiveChecker {
	jule::Ptr<_1e6a22441_Sema> _field_s = jule::Ptr<_1e6a22441_Sema>();
	jule::Ptr<jule::Slice<jule::Ptr<_1e5d21268_Directive>>> _field_d = jule::Ptr<jule::Slice<jule::Ptr<_1e5d21268_Directive>>>();
	jule::Any _field_o = jule::Any();
	

	_1e6a13652_directiveChecker(void) = default;

	inline bool operator==(_1e6a13652_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1e6a13652_directiveChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e6a192e5_ImportInfo> _1e6a19812_FindPackage(_1e6a192e5_ImportInfo*, jule::Str);
inline jule::Ptr<_1e6a192e5_ImportInfo> _1e6a19b20_SelectPackage(_1e6a192e5_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_1e6a192e5_ImportInfo>)>);
inline jule::Ptr<_1e6a3dd20_Var> _1e6a19ec7_FindVar(_1e6a192e5_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1e6ab5d97_TypeAlias> _1e6a1a37e_FindTypeAlias(_1e6a192e5_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1e5d4518d_Struct> _1e6a1a736_FindStruct(_1e6a192e5_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1e5e1c62d_Fn> _1e6a1aadd_FindFn(_1e6a192e5_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1e5e2e4db_Trait> _1e6a1adeb_FindTrait(_1e6a192e5_ImportInfo*, jule::Str);
inline jule::Ptr<_1e5e31631_Enum> _1e6a1b209_FindEnum(_1e6a192e5_ImportInfo*, jule::Str);
inline jule::Ptr<_1e5e32c2b_TypeEnum> _1e6a1b517_FindTypeEnum(_1e6a192e5_ImportInfo*, jule::Str);
inline jule::Bool _1e6a1b8ad_isLookupable(_1e6a192e5_ImportInfo*, jule::Str);
inline jule::Bool _1e6a1bbbb_existIdent(_1e6a192e5_ImportInfo*, jule::Str);
inline jule::Bool _1e6a1be52_isAccessibleViaSelection(_1e6a192e5_ImportInfo*);
struct _1e6a192e5_ImportInfo {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Str _field_Path = jule::Str();
	jule::Str _field_LinkPath = jule::Str();
	jule::Str _field_Ident = jule::Str();
	jule::Str _field_Alias = jule::Str();
	jule::Bool _field_Duplicate = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Std = jule::Bool();
	jule::Bool _field_ImportAll = jule::Bool();
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _field_Selected = jule::Slice<jule::Ptr<_1e47137a5_Token>>();
	jule::Ptr<_1e6a1c24e_Package> _field_Package = jule::Ptr<_1e6a1c24e_Package>();
	jule::I64 _field_ModId = jule::I64();
	

	_1e6a192e5_ImportInfo(void) = default;

	inline bool operator==(_1e6a192e5_ImportInfo _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Path == _other._field_Path &&
			this->_field_LinkPath == _other._field_LinkPath &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Alias == _other._field_Alias &&
			this->_field_Duplicate == _other._field_Duplicate &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Std == _other._field_Std &&
			this->_field_ImportAll == _other._field_ImportAll &&
			this->_field_Selected == _other._field_Selected &&
			this->_field_Package == _other._field_Package &&
			this->_field_ModId == _other._field_ModId;
	}

	inline bool operator!=(_1e6a192e5_ImportInfo _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e6a192e5_ImportInfo> _1e6a1c727_FindPackage(_1e6a1c24e_Package*, jule::Str);
inline jule::Ptr<_1e6a192e5_ImportInfo> _1e6a1ca35_SelectPackage(_1e6a1c24e_Package*, jule::Fn<jule::Bool(jule::Ptr<_1e6a192e5_ImportInfo>)>);
inline jule::Ptr<_1e6a3dd20_Var> _1e6a1cddc_FindVar(_1e6a1c24e_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1e6ab5d97_TypeAlias> _1e6a1d294_FindTypeAlias(_1e6a1c24e_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1e5d4518d_Struct> _1e6a1d64b_FindStruct(_1e6a1c24e_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1e5e1c62d_Fn> _1e6a1da03_FindFn(_1e6a1c24e_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1e5e2e4db_Trait> _1e6a1dd11_FindTrait(_1e6a1c24e_Package*, jule::Str);
inline jule::Ptr<_1e5e31631_Enum> _1e6a1e11e_FindEnum(_1e6a1c24e_Package*, jule::Str);
inline jule::Ptr<_1e5e32c2b_TypeEnum> _1e6a1e42c_FindTypeEnum(_1e6a1c24e_Package*, jule::Str);
struct _1e6a1c24e_Package {
	jule::Slice<jule::Ptr<_1e6a86010_SymbolTable>> _field_Files = jule::Slice<jule::Ptr<_1e6a86010_SymbolTable>>();
	

	_1e6a1c24e_Package(void) = default;

	inline bool operator==(_1e6a1c24e_Package _other) {
		return 
			this->_field_Files == _other._field_Files;
	}

	inline bool operator!=(_1e6a1c24e_Package _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e6a192e5_ImportInfo> _1e6a2295d_FindPackage(_1e6a22441_Sema*, jule::Str);
inline jule::Ptr<_1e6a192e5_ImportInfo> _1e6a22c6b_SelectPackage(_1e6a22441_Sema*, jule::Fn<jule::Bool(jule::Ptr<_1e6a192e5_ImportInfo>)>);
inline jule::Ptr<_1e6a3dd20_Var> _1e6a23123_FindVar(_1e6a22441_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1e6ab5d97_TypeAlias> _1e6a234ca_FindTypeAlias(_1e6a22441_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1e5d4518d_Struct> _1e6a23882_FindStruct(_1e6a22441_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1e5e1c62d_Fn> _1e6a23c39_FindFn(_1e6a22441_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1e5e2e4db_Trait> _1e6a24047_FindTrait(_1e6a22441_Sema*, jule::Str);
inline jule::Ptr<_1e5e31631_Enum> _1e6a24355_FindEnum(_1e6a22441_Sema*, jule::Str);
inline jule::Ptr<_1e5e32c2b_TypeEnum> _1e6a24663_FindTypeEnum(_1e6a22441_Sema*, jule::Str);
inline jule::Bool _1e6a249b5_isFlag(_1e6a22441_Sema*, jule::I64);
inline void _1e6a24c3a_setCurrentFile(_1e6a22441_Sema*, jule::Ptr<_1e6a86010_SymbolTable>);
inline void _1e6a25103_pushErr(_1e6a22441_Sema*, jule::Ptr<_1e47137a5_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1e6a25422_pushSugggestion(_1e6a22441_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e6a257c9_isAccessibleDefine(_1e6a22441_Sema*, jule::Bool, jule::Ptr<_1e47137a5_Token>);
inline jule::Bool _1e6a25c2a_isDuplicatedIdent(_1e6a22441_Sema*, jule::Uintptr, jule::Str, jule::Bool);
inline void _1e6a26049_checkDirectives(jule::Ptr<_1e6a22441_Sema>, jule::Slice<jule::Ptr<_1e5d21268_Directive>>&, jule::Any);
inline jule::Bool _1e6a2649a_checkGenericQuantity(_1e6a22441_Sema*, jule::I64, jule::I64, jule::Ptr<_1e47137a5_Token>);
inline jule::Bool _1e6a26874_isDuplicatedImportSelection(_1e6a22441_Sema*, jule::Uintptr, jule::Str);
inline jule::Any _1e6a26c3c_getImportDef(_1e6a22441_Sema*, jule::Str, jule::Ptr<_1e6a192e5_ImportInfo>&);
inline jule::Bool _1e6a2704a_checkImportSelections(_1e6a22441_Sema*, jule::Ptr<_1e6a192e5_ImportInfo>&);
inline jule::Bool _1e6a27358_isUseAliasDuplication(_1e6a22441_Sema*, jule::Ptr<_1e6a192e5_ImportInfo>&);
inline jule::Bool _1e6a27666_checkImport(_1e6a22441_Sema*, jule::Ptr<_1e6a192e5_ImportInfo>&);
inline void _1e6a27842_checkImports(_1e6a22441_Sema*);
inline void _1e6a27a1d_implFileImpls(jule::Ptr<_1e6a22441_Sema>);
inline void _1e6a27be9_implImpls(jule::Ptr<_1e6a22441_Sema>);
inline void _1e6a27dc5_checkEnums(jule::Ptr<_1e6a22441_Sema>);
inline jule::Ptr<_1e6ab6a8a_TypeKind> _1e6a283c0_buildTypeWithRefers(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e5d54961_TypeDecl>&, jule::Trait<_1e6ad2600_Lookup>, jule::Slice<jule::Ptr<_1e6ab5d97_TypeAlias>>, jule::Ptr<_1e6ac42a1_referencer>);
inline jule::Bool _1e6a288ba_checkTypeWithRefers(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e6ababe3_TypeSymbol>&, jule::Trait<_1e6ad2600_Lookup>, jule::Slice<jule::Ptr<_1e6ab5d97_TypeAlias>>, jule::Ptr<_1e6ac42a1_referencer>);
inline jule::Ptr<_1e5e50683_constraintChecker> _1e6a28b2e_constraintChecker(jule::Ptr<_1e6a22441_Sema>);
inline jule::Bool _1e6a28ed6_checkType(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e6ababe3_TypeSymbol>&, jule::Trait<_1e6ad2600_Lookup>);
inline jule::Ptr<_1e6ab6a8a_TypeKind> _1e6a29437_buildTypeWithGenerics(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e5d54961_TypeDecl>&, jule::Slice<jule::Ptr<_1e6ab5d97_TypeAlias>>, jule::Ptr<_1e5e231a0_ReferenceStack>);
inline jule::Ptr<_1e6ab6a8a_TypeKind> _1e6a29745_buildType(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e5d54961_TypeDecl>&);
inline jule::Ptr<_1e6ab6a8a_TypeKind> _1e6a29a53_selectType(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e5d54961_TypeDecl>&);
inline jule::Ptr<_1e6a8c7db_Eval> _1e6a29ea4_evalpd(jule::Ptr<_1e6a22441_Sema>, jule::Trait<_1e6ad2600_Lookup>, jule::Ptr<_1e6ab6a8a_TypeKind>, jule::Ptr<_1e6a3dd20_Var>);
inline jule::Ptr<_1e6a8c7db_Eval> _1e6a2a35b_evalp(jule::Ptr<_1e6a22441_Sema>, jule::Trait<_1e6ad2600_Lookup>, jule::Ptr<_1e6ab6a8a_TypeKind>);
inline jule::Ptr<_1e6a8c7db_Eval> _1e6a2a669_eval(jule::Ptr<_1e6a22441_Sema>, jule::Trait<_1e6ad2600_Lookup>);
inline jule::Bool _1e6a2ab64_checkAssignType(jule::Ptr<_1e6a22441_Sema>, jule::Bool, jule::Ptr<_1e6ab6a8a_TypeKind>&, jule::Ptr<_1e6a8ac6d_Data>&, jule::Ptr<_1e47137a5_Token>);
inline jule::Bool _1e6a2b0b5_checkTypeCompatibility(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e6ab6a8a_TypeKind>&, jule::Ptr<_1e6ab6a8a_TypeKind>&, jule::Ptr<_1e47137a5_Token>&);
inline jule::Ptr<_1e6ab6a8a_TypeKind> _1e6a2b48e_buildNonGenericTypeKind(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e5d54961_TypeDecl>&, jule::Slice<jule::Ptr<_1e5d62045_GenericDecl>>&);
inline void _1e6a2b747_buildFnNonGenericTypeKinds(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e5e202ce_FnIns>&);
inline jule::Ptr<_1e5e202ce_FnIns> _1e6a2ba66_getTraitCheckFnKind(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e5e1c62d_Fn>&);
inline jule::Bool _1e6a2beb7_checkConstraintsFn(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e5e202ce_FnIns>&, jule::Ptr<_1e47137a5_Token>&, jule::Ptr<_1e5e202ce_FnIns>);
inline jule::Bool _1e6a2c418_checkConstraintsStruct(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e5d714d8_StructIns>&, jule::Ptr<_1e47137a5_Token>&, jule::Ptr<_1e5d714d8_StructIns>);
inline jule::Bool _1e6a2c7c0_fnEnvironment(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e5e202ce_FnIns>&, jule::Fn<jule::Bool(jule::Ptr<_1e6a22441_Sema>&,jule::Slice<jule::Ptr<_1e6ab5d97_TypeAlias>>&)>);
inline void _1e6a2ca45_checkFnParamKind(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e5e1e410_ParamIns>&);
inline jule::Bool _1e6a2cd53_reloadFnInsTypes(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e5e202ce_FnIns>);
inline jule::Bool _1e6a2d2c6_checkRefValidityForInitExpr(jule::Ptr<_1e6a22441_Sema>, jule::Bool, jule::Ptr<_1e6a8ac6d_Data>&, jule::Ptr<_1e47137a5_Token>&);
inline jule::Bool _1e6a2d89d_checkValidityForInitExpr(jule::Ptr<_1e6a22441_Sema>, jule::Bool, jule::Bool, jule::Ptr<_1e6ab6a8a_TypeKind>&, jule::Ptr<_1e6a8ac6d_Data>&, jule::Ptr<_1e47137a5_Token>&);
inline jule::Bool _1e6a2dc66_checkTypeAliasDeclKind(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e6ab5d97_TypeAlias>&, jule::Trait<_1e6ad2600_Lookup>);
inline void _1e6a2e085_checkTypeAliasDecl(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e6ab5d97_TypeAlias>&, jule::Trait<_1e6ad2600_Lookup>);
inline void _1e6a2e30a_checkTypeAliasDeclDup(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e6ab5d97_TypeAlias>&);
inline jule::Bool _1e6a2e56e_checkTypeAliasDecls(jule::Ptr<_1e6a22441_Sema>);
inline void _1b25810e4_checkEnumItemsDup(_1e6a22441_Sema*, jule::Slice<jule::Ptr<_1e5e30b3b_EnumItem>>);
inline void _1b258b918_checkEnumItemsDup(_1e6a22441_Sema*, jule::Slice<jule::Ptr<_1e5e32665_TypeEnumItem>>);
inline void _1e6a2ea69_checkEnumItemsStr(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e5e31631_Enum>&);
inline void _1e6a2ecde_checkEnumItemsInt(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e5e31631_Enum>&);
inline void _1e6a30064_checkEnumDecl(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e5e31631_Enum>&);
inline void _1e6a302d9_checkTypeEnumDecl(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e5e32c2b_TypeEnum>&);
inline jule::Bool _1e6a3054d_checkEnumDecls(jule::Ptr<_1e6a22441_Sema>);
inline jule::Bool _1e6a307b2_checkTypeEnumDecls(jule::Ptr<_1e6a22441_Sema>);
inline jule::Bool _1e6a30ac0_checkDeclGenerics(_1e6a22441_Sema*, jule::Slice<jule::Ptr<_1e5d62045_GenericDecl>>&);
inline jule::Bool _1e6a30dcd_checkFnDeclParamsDup(_1e6a22441_Sema*, jule::Ptr<_1e5e1c62d_Fn>&);
inline jule::Bool _1e6a311db_checkFnDeclResultDup(_1e6a22441_Sema*, jule::Ptr<_1e5e1c62d_Fn>&);
inline void _1e6a31461_checkFnDeclPrototype(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e5e1c62d_Fn>&);
inline void _1e6a316d6_checkTraitDeclMethod(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e5e1c62d_Fn>&);
inline void _1e6a3195b_checkTraitDeclMethods(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e5e2e4db_Trait>&);
inline void _1e6a31bd1_checkTraitDecl(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e5e2e4db_Trait>&);
inline jule::Bool _1e6a31e45_checkTraitDecls(jule::Ptr<_1e6a22441_Sema>);
inline jule::Bool _1e6a322ec_checkTraitImplMethods(_1e6a22441_Sema*, jule::Ptr<_1e5e2e4db_Trait>&, jule::Ptr<_1e5eb8a5e_Impl>&);
inline jule::Bool _1e6a326a4_implToStruct(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e5d4518d_Struct>&, jule::Ptr<_1e5eb8a5e_Impl>&);
inline void _1e6a32929_implTrait(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e5eb8a5e_Impl>&);
inline void _1e6a32b9e_implStruct(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e5eb8a5e_Impl>&);
inline void _1e6a32e24_implImpl(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e5eb8a5e_Impl>&);
inline void _1e6a33243_checkVarDecl(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e6a3dd20_Var>&, jule::Trait<_1e6ad2600_Lookup>);
inline void _1e6a334b8_checkGlobalVarDecl(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e6a3dd20_Var>&);
inline jule::Bool _1e6a3372c_checkGlobalDecls(jule::Ptr<_1e6a22441_Sema>);
inline jule::Bool _1e6a33ad4_checkStructTraitImpl(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e5d4518d_Struct>&, jule::Ptr<_1e5e2e4db_Trait>&);
inline jule::Bool _1e6a33de2_checkStructImpls(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e5d4518d_Struct>&);
inline jule::Bool _1e6a34200_checkStructFields(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e5d4518d_Struct>&);
inline void _1e6a34475_checkStructDecl(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e5d4518d_Struct>&);
inline jule::Bool _1e6a346d9_checkStructDecls(jule::Ptr<_1e6a22441_Sema>);
inline void _1e6a3495e_checkFnDecl(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e5e1c62d_Fn>&);
inline jule::Bool _1e6a34bc3_checkFnDecls(jule::Ptr<_1e6a22441_Sema>);
inline void _1e6a3508b_pushCycleError(_1e6a22441_Sema*, jule::Ptr<_1e5d4518d_Struct>&, jule::Ptr<_1e5d4518d_Struct>&, jule::Str&);
inline jule::Bool _1e6a354dc_checkCrossCycle(_1e6a22441_Sema*, jule::Ptr<_1e5d4518d_Struct>&, jule::Ptr<_1e5d4518d_Struct>&, jule::Str&);
inline jule::Bool _1e6a35960_checkStructDeriveIllegalCycles(_1e6a22441_Sema*, jule::Str, jule::Ptr<_1e5d4518d_Struct>&, jule::Ptr<_1e6ab6a8a_TypeKind>&);
inline jule::Bool _1e6a35ca1_checkStructInsDeriveClone(_1e6a22441_Sema*, jule::Ptr<_1e5d714d8_StructIns>);
inline void _1e6a35e8d_checkPackageDecls(jule::Ptr<_1e6a22441_Sema>);
inline void _1e6a362ce_checkDataForTypeInference(_1e6a22441_Sema*, jule::Ptr<_1e6a8ac6d_Data>&, jule::Ptr<_1e47137a5_Token>&);
inline void _1e6a36565_checkVar(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e6a3dd20_Var>&);
inline void _1e6a36884_checkTypeVar(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e6a3dd20_Var>&, jule::Trait<_1e6ad2600_Lookup>);
inline void _1e6a36a60_checkGlobalTypes(jule::Ptr<_1e6a22441_Sema>);
inline jule::Ptr<_1e5e202ce_FnIns> _1e6a36e17_readyToCheckFn(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e5d714d8_StructIns>&, jule::Ptr<_1e5e1c62d_Fn>&);
inline void _1e6a37236_checkTypeMethod(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e5d714d8_StructIns>&, jule::Ptr<_1e5e1c62d_Fn>&);
inline jule::Ptr<_1e5e202ce_FnIns> _1e6a37687_checkStructInsOp(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e5d714d8_StructIns>&, jule::Ptr<_1e5e1c62d_Fn>&, jule::Fn<jule::Bool(jule::Ptr<_1e5e1c62d_Fn>)>);
inline jule::Bool _1e6a37a3e_checkStructEnv(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e5d714d8_StructIns>&, jule::Ptr<_1e47137a5_Token>);
inline jule::Bool _1e6a37de6_precheckStructIns(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e5d714d8_StructIns>&, jule::Ptr<_1e47137a5_Token>);
inline void _1e6a3816b_checkStructIns(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e5d714d8_StructIns>&);
inline void _1e6a383e1_checkTypeStruct(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e5d4518d_Struct>&);
inline void _1e6a385bc_checkStructTypes(jule::Ptr<_1e6a22441_Sema>);
inline void _1e6a38864_checkStructInsOperators(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e5d714d8_StructIns>);
inline void _1e6a38aea_precheckStructType(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e5d4518d_Struct>&);
inline void _1e6a38cc6_precheckStructTypes(jule::Ptr<_1e6a22441_Sema>);
inline void _1e6a3904b_checkRets(_1e6a22441_Sema*, jule::Ptr<_1e5e202ce_FnIns>&);
inline void _1e6a3936a_checkFnInsSc(_1e6a22441_Sema*, jule::Ptr<_1e5e202ce_FnIns>&, jule::Ptr<_1e6a09505_scopeChecker>&);
inline void _1e6a39689_checkFnInsCaller(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e5e202ce_FnIns>&, jule::Ptr<_1e47137a5_Token>);
inline void _1e6a3990e_checkFnIns(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e5e202ce_FnIns>&);
inline void _1e6a39b84_checkTypeFn(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e5e1c62d_Fn>&);
inline void _1e6a39e09_checkTestFn(_1e6a22441_Sema*, jule::Ptr<_1e5e202ce_FnIns>&);
inline void _1e6a3a17e_precheckTypeFn(jule::Ptr<_1e6a22441_Sema>, jule::Ptr<_1e5e1c62d_Fn>&);
inline void _1e6a3a35a_precheckFnTypes(jule::Ptr<_1e6a22441_Sema>);
inline void _1e6a3a536_checkFnTypes(jule::Ptr<_1e6a22441_Sema>);
inline void _1e6a3a712_checkPackageTypes(jule::Ptr<_1e6a22441_Sema>);
inline void _1e6a3a8dd_setFileSemaFields(jule::Ptr<_1e6a22441_Sema>);
inline void _1e6a3aab9_setSemaFields(jule::Ptr<_1e6a22441_Sema>);
inline void _1e6a3ad3e_check(jule::Ptr<_1e6a22441_Sema>, jule::Slice<jule::Ptr<_1e6a86010_SymbolTable>>&);
struct _1e6a22441_Sema {
	jule::Slice<_1e43e3a18_Log> _field_errors = jule::Slice<_1e43e3a18_Log>();
	jule::Slice<jule::Ptr<_1e6a86010_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_1e6a86010_SymbolTable>>();
	jule::Ptr<_1e6a86010_SymbolTable> _field_file = jule::Ptr<_1e6a86010_SymbolTable>();
	jule::I64 _field_flags = 0LL;
	

	_1e6a22441_Sema(void) = default;

	inline bool operator==(_1e6a22441_Sema _other) {
		return 
			this->_field_errors == _other._field_errors &&
			this->_field_files == _other._field_files &&
			this->_field_file == _other._field_file &&
			this->_field_flags == _other._field_flags;
	}

	inline bool operator!=(_1e6a22441_Sema _other) { return !this->operator==(_other); }


};
inline _1e6a3b1e6_missingRetChecker static__1e6a3b5ae_new(void);
inline jule::Bool _1e6a3b889_checkConditional(_1e6a3b1e6_missingRetChecker*, jule::Ptr<_1e6a06cb6_Conditional>);
inline jule::Bool _1e6a3bb97_checkMatch(_1e6a3b1e6_missingRetChecker*, jule::Ptr<_1e6a083d3_Match>);
inline jule::Bool _1e6a3bea5_checkInfIter(_1e6a3b1e6_missingRetChecker*, jule::Ptr<_1e6a06ea3_InfIter>);
inline jule::Bool _1e6a3c2b3_checkScope(_1e6a3b1e6_missingRetChecker*, jule::Ptr<_1e6a06700_Scope>);
inline jule::Bool _1e6a3c5c1_check(_1e6a3b1e6_missingRetChecker*, jule::Ptr<_1e6a06700_Scope>);
struct _1e6a3b1e6_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked = jule::Slice<jule::Uintptr>();
	jule::Bool _field_falled = jule::Bool();
	

	_1e6a3b1e6_missingRetChecker(void) = default;

	inline bool operator==(_1e6a3b1e6_missingRetChecker _other) {
		return 
			this->_field_breaked == _other._field_breaked &&
			this->_field_falled == _other._field_falled;
	}

	inline bool operator!=(_1e6a3b1e6_missingRetChecker _other) { return !this->operator==(_other); }


};
struct _1e6a3cda7_IterRelation {
	jule::Ptr<_1e6a3dd20_Var> _field_Range = jule::Ptr<_1e6a3dd20_Var>();
	

	_1e6a3cda7_IterRelation(void) = default;

	inline bool operator==(_1e6a3cda7_IterRelation _other) {
		return 
			this->_field_Range == _other._field_Range;
	}

	inline bool operator!=(_1e6a3cda7_IterRelation _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e6a3e1c7_IsInitialized(_1e6a3dd20_Var*);
inline jule::Bool _1e6a3e43b_IsTypeInferred(_1e6a3dd20_Var*);
struct _1e6a3dd20_Var {
	jule::Ptr<_1e6a06700_Scope> _field_Scope = jule::Ptr<_1e6a06700_Scope>();
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Constant = jule::Bool();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_Used = jule::Bool();
	jule::Bool _field_Statically = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Ptr<_1e6ababe3_TypeSymbol> _field_Kind = jule::Ptr<_1e6ababe3_TypeSymbol>();
	jule::Ptr<_1e6a8bce6_Value> _field_Value = jule::Ptr<_1e6a8bce6_Value>();
	jule::Ptr<_1e5e231a0_ReferenceStack> _field_Refers = jule::Ptr<_1e5e231a0_ReferenceStack>();
	jule::Slice<jule::Ptr<_1e5d21268_Directive>> _field_Directives = jule::Slice<jule::Ptr<_1e5d21268_Directive>>();
	jule::Ptr<_1e6a3cda7_IterRelation> _field_IterRelation = jule::Ptr<_1e6a3cda7_IterRelation>();
	jule::Slice<jule::Ptr<_1e6a3dd20_Var>> _field_Depends = jule::Slice<jule::Ptr<_1e6a3dd20_Var>>();
	

	_1e6a3dd20_Var(void) = default;

	inline bool operator==(_1e6a3dd20_Var _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Constant == _other._field_Constant &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Public == _other._field_Public &&
			this->_field_Used == _other._field_Used &&
			this->_field_Statically == _other._field_Statically &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Value == _other._field_Value &&
			this->_field_Refers == _other._field_Refers &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_IterRelation == _other._field_IterRelation &&
			this->_field_Depends == _other._field_Depends;
	}

	inline bool operator!=(_1e6a3dd20_Var _other) { return !this->operator==(_other); }


};
inline jule::Bool static__1e6a3eeb9_Dispose(jule::Ptr<_1e5e1c62d_Fn>);
inline jule::Bool static__1e6a40261_Str(jule::Ptr<_1e5e1c62d_Fn>);
inline jule::Bool static__1e6a405a2_logical(jule::Ptr<_1e5e1c62d_Fn>&, jule::Str);
inline jule::Bool static__1e6a40849_Eq(jule::Ptr<_1e5e1c62d_Fn>);
inline jule::Bool static__1e6a40ae1_Gt(jule::Ptr<_1e5e1c62d_Fn>);
inline jule::Bool static__1e6a40d88_GtEq(jule::Ptr<_1e5e1c62d_Fn>);
inline jule::Bool static__1e6a41130_Lt(jule::Ptr<_1e5e1c62d_Fn>);
inline jule::Bool static__1e6a413c7_LtEq(jule::Ptr<_1e5e1c62d_Fn>);
inline jule::Bool static__1e6a41718_result(jule::Ptr<_1e5e1c62d_Fn>&, jule::Str);
inline jule::Bool static__1e6a4690a_Shl(jule::Ptr<_1e5e1c62d_Fn>);
inline jule::Bool static__1e6a46ab4_Shr(jule::Ptr<_1e5e1c62d_Fn>);
inline jule::Bool static__1e6a46d5b_Add(jule::Ptr<_1e5e1c62d_Fn>);
inline jule::Bool static__1e6a47103_Sub(jule::Ptr<_1e5e1c62d_Fn>);
inline jule::Bool static__1e6a4739a_Div(jule::Ptr<_1e5e1c62d_Fn>);
inline jule::Bool static__1e6a47642_Mul(jule::Ptr<_1e5e1c62d_Fn>);
inline jule::Bool static__1e6a478d9_Mod(jule::Ptr<_1e5e1c62d_Fn>);
inline jule::Bool static__1e6a47b81_BitAnd(jule::Ptr<_1e5e1c62d_Fn>);
inline jule::Bool static__1e6a47e28_BitOr(jule::Ptr<_1e5e1c62d_Fn>);
inline jule::Bool static__1e6a481c0_BitXor(jule::Ptr<_1e5e1c62d_Fn>);
inline jule::Bool static__1e6a48511_unary(jule::Ptr<_1e5e1c62d_Fn>&, jule::Str);
inline jule::Bool static__1e6a487a8_Neg(jule::Ptr<_1e5e1c62d_Fn>);
inline jule::Bool static__1e6a48a50_Pos(jule::Ptr<_1e5e1c62d_Fn>);
inline jule::Bool static__1e6a48ce7_BitNot(jule::Ptr<_1e5e1c62d_Fn>);
inline jule::Bool static__1e6a49138_assign(jule::Ptr<_1e5e1c62d_Fn>&, jule::Str);
inline jule::Bool static__1e6a493d0_AddAssign(jule::Ptr<_1e5e1c62d_Fn>);
inline jule::Bool static__1e6a49677_SubAssign(jule::Ptr<_1e5e1c62d_Fn>);
inline jule::Bool static__1e6a4991e_DivAssign(jule::Ptr<_1e5e1c62d_Fn>);
inline jule::Bool static__1e6a49bb6_MulAssign(jule::Ptr<_1e5e1c62d_Fn>);
inline jule::Bool static__1e6a49e5d_ModAssign(jule::Ptr<_1e5e1c62d_Fn>);
inline jule::Bool static__1e6a4a205_ShlAssign(jule::Ptr<_1e5e1c62d_Fn>);
inline jule::Bool static__1e6a4a49c_ShrAssign(jule::Ptr<_1e5e1c62d_Fn>);
inline jule::Bool static__1e6a4a744_BitOrAssign(jule::Ptr<_1e5e1c62d_Fn>);
inline jule::Bool static__1e6a4a9db_BitAndAssign(jule::Ptr<_1e5e1c62d_Fn>);
inline jule::Bool static__1e6a4ac83_BitXorAssign(jule::Ptr<_1e5e1c62d_Fn>);
struct _1e6a3e848_FuncPattern {
	

	_1e6a3e848_FuncPattern(void) = default;

	inline bool operator==(_1e6a3e848_FuncPattern _other) { return true; }

	inline bool operator!=(_1e6a3e848_FuncPattern _other) { return !this->operator==(_other); }


};
inline void _1e6a751ec_pushErr(_1e6a74bd0_typeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e6a75461_checkTrait(_1e6a74bd0_typeCompatibilityChecker*);
inline jule::Bool _1e6a756c5_checkPtr(_1e6a74bd0_typeCompatibilityChecker*);
inline jule::Bool _1e6a75939_checkPrim(_1e6a74bd0_typeCompatibilityChecker*);
inline jule::Bool _1e6a75ce1_typeEnum(_1e6a74bd0_typeCompatibilityChecker*, jule::Ptr<_1e5e32c2b_TypeEnum>&, jule::Ptr<_1e6ab6a8a_TypeKind>&);
inline jule::Bool _1e6a76055_checkTypeEnum(_1e6a74bd0_typeCompatibilityChecker*);
inline jule::Bool _1e6a762b9_check(_1e6a74bd0_typeCompatibilityChecker*);
struct _1e6a74bd0_typeCompatibilityChecker {
	jule::Ptr<_1e6a22441_Sema> _field_s = jule::Ptr<_1e6a22441_Sema>();
	jule::Ptr<_1e6ab6a8a_TypeKind> _field_dest = jule::Ptr<_1e6ab6a8a_TypeKind>();
	jule::Ptr<_1e6ab6a8a_TypeKind> _field_src = jule::Ptr<_1e6ab6a8a_TypeKind>();
	jule::Ptr<_1e47137a5_Token> _field_errorToken = jule::Ptr<_1e47137a5_Token>();
	

	_1e6a74bd0_typeCompatibilityChecker(void) = default;

	inline bool operator==(_1e6a74bd0_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1e6a74bd0_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
inline void _1e6a76c6a_pushErr(_1e6a76808_assignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e6a76ece_checkValidity(_1e6a76808_assignTypeChecker*);
inline jule::Bool _1e6a77243_checkConst(_1e6a76808_assignTypeChecker*);
inline jule::Bool _1e6a774a7_isPrim(_1e6a76808_assignTypeChecker*);
inline jule::Bool _1e6a7771b_checkCompatibility(_1e6a76808_assignTypeChecker*);
inline jule::Bool _1e6a77980_check(_1e6a76808_assignTypeChecker*);
struct _1e6a76808_assignTypeChecker {
	jule::Ptr<_1e6a22441_Sema> _field_s = jule::Ptr<_1e6a22441_Sema>();
	jule::Ptr<_1e6ab6a8a_TypeKind> _field_dest = jule::Ptr<_1e6ab6a8a_TypeKind>();
	jule::Ptr<_1e6a8ac6d_Data> _field_d = jule::Ptr<_1e6a8ac6d_Data>();
	jule::Ptr<_1e47137a5_Token> _field_errorToken = jule::Ptr<_1e47137a5_Token>();
	

	_1e6a76808_assignTypeChecker(void) = default;

	inline bool operator==(_1e6a76808_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1e6a76808_assignTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool _1b2726a81_annotateConstraintElem(_1e6a78222_dynamicTypeAnnotation*, jule::Ptr<_1e6ab6a8a_TypeKind>&);
inline jule::Bool _1b27261bd_annotateConstraintElem(_1e6a78222_dynamicTypeAnnotation*, jule::Ptr<_1e6ab6a8a_TypeKind>&);
inline jule::Bool _1b2728445_annotateConstraintElem(_1e6a78222_dynamicTypeAnnotation*, jule::Ptr<_1e6ab6a8a_TypeKind>&);
inline jule::Bool _1b272e54a_annotateConstraintElem(_1e6a78222_dynamicTypeAnnotation*, jule::Ptr<_1e6ab6a8a_TypeKind>&);
inline jule::Bool _1e6a78b07_annotateConstraintMap(_1e6a78222_dynamicTypeAnnotation*, jule::Ptr<_1e6ab6a8a_TypeKind>&);
inline jule::Bool _1e6a78e15_annotateConstraintTup(_1e6a78222_dynamicTypeAnnotation*, jule::Ptr<_1e6ab6a8a_TypeKind>&);
inline jule::Bool _1e6a79223_annotateConstraintFn(_1e6a78222_dynamicTypeAnnotation*, jule::Ptr<_1e6ab6a8a_TypeKind>&);
inline jule::Bool _1e6a79553_annotateConstraintIdent(_1e6a78222_dynamicTypeAnnotation*, jule::Ptr<_1e6ab6a8a_TypeKind>&);
inline jule::Bool _1e6a79872_annotateConstraint(_1e6a78222_dynamicTypeAnnotation*, jule::Ptr<_1e6ab6a8a_TypeKind>&);
inline void _1e6a79b91_pushGeneric(_1e6a78222_dynamicTypeAnnotation*, jule::Ptr<_1e6ab6a8a_TypeKind>&, jule::I64);
inline jule::Bool _1e6a79e9e_annotatePrim(_1e6a78222_dynamicTypeAnnotation*, jule::Ptr<_1e6ab6a8a_TypeKind>&);
inline jule::Bool _1e6a7a2ac_annotateArr(_1e6a78222_dynamicTypeAnnotation*, jule::Ptr<_1e6ab6a8a_TypeKind>&);
inline jule::Bool _1e6a7a5ba_annotateSlc(_1e6a78222_dynamicTypeAnnotation*, jule::Ptr<_1e6ab6a8a_TypeKind>&);
inline jule::Bool _1e6a7a972_checkMapKey(_1e6a78222_dynamicTypeAnnotation*, jule::Ptr<_1e6ab6a8a_TypeKind>*, jule::Ptr<_1e6ab6a8a_TypeKind>&);
inline jule::Bool _1e6a7ac80_annotateMap(_1e6a78222_dynamicTypeAnnotation*, jule::Ptr<_1e6ab6a8a_TypeKind>&);
inline jule::Bool _1e6a7b08d_annotateFn(_1e6a78222_dynamicTypeAnnotation*, jule::Ptr<_1e6ab6a8a_TypeKind>&);
inline jule::Bool _1e6a7b39b_annotatePtr(_1e6a78222_dynamicTypeAnnotation*, jule::Ptr<_1e6ab6a8a_TypeKind>&);
inline jule::Bool _1e6a7b6a9_annotateSptr(_1e6a78222_dynamicTypeAnnotation*, jule::Ptr<_1e6ab6a8a_TypeKind>&);
inline jule::Bool _1e6a7b9b7_annotateStruct(_1e6a78222_dynamicTypeAnnotation*, jule::Ptr<_1e6ab6a8a_TypeKind>&);
inline jule::Bool _1e6a7bcc5_annotateAny(_1e6a78222_dynamicTypeAnnotation*, jule::Ptr<_1e6ab6a8a_TypeKind>&);
inline jule::Bool _1e6a7c0d3_annotateKind(_1e6a78222_dynamicTypeAnnotation*, jule::Ptr<_1e6ab6a8a_TypeKind>&);
inline jule::Bool _1e6a7c347_annotate(_1e6a78222_dynamicTypeAnnotation*);
struct _1e6a78222_dynamicTypeAnnotation {
	jule::Ptr<_1e6a8c7db_Eval> _field_e = jule::Ptr<_1e6a8c7db_Eval>();
	jule::Ptr<_1e5e202ce_FnIns> _field_f = jule::Ptr<_1e5e202ce_FnIns>();
	jule::Ptr<_1e5e1e410_ParamIns> _field_p = jule::Ptr<_1e5e1e410_ParamIns>();
	jule::Ptr<_1e6a8ac6d_Data> _field_a = jule::Ptr<_1e6a8ac6d_Data>();
	jule::Ptr<_1e47137a5_Token> _field_errorToken = jule::Ptr<_1e47137a5_Token>();
	jule::Ptr<_1e6ab6a8a_TypeKind>* _field_k = nullptr;
	jule::Ptr<_1e5d54961_TypeDecl> _field_c = jule::Ptr<_1e5d54961_TypeDecl>();
	

	_1e6a78222_dynamicTypeAnnotation(void) = default;

	inline bool operator==(_1e6a78222_dynamicTypeAnnotation _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_f == _other._field_f &&
			this->_field_p == _other._field_p &&
			this->_field_a == _other._field_a &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_k == _other._field_k &&
			this->_field_c == _other._field_c;
	}

	inline bool operator!=(_1e6a78222_dynamicTypeAnnotation _other) { return !this->operator==(_other); }


};
inline void _1e6a7d06d_pushErrToken(_1e6a7ca1d_fnCallArgChecker*, jule::Ptr<_1e47137a5_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1e6a7d38c_pushErr(_1e6a7ca1d_fnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1e5e1e410_ParamIns>> _1e6a7d601_getParams(_1e6a7ca1d_fnCallArgChecker*);
inline jule::Bool _1e6a7d90e_checkCounts(_1e6a7ca1d_fnCallArgChecker*, jule::Slice<jule::Ptr<_1e5e1e410_ParamIns>>&);
inline jule::Bool _1e6a7dd60_checkArg(_1e6a7ca1d_fnCallArgChecker*, jule::Ptr<_1e5e1e410_ParamIns>&, jule::Ptr<_1e6a8ac6d_Data>&, jule::Ptr<_1e47137a5_Token>&);
inline jule::Bool _1e6a7e217_push(_1e6a7ca1d_fnCallArgChecker*, jule::Ptr<_1e5e1e410_ParamIns>&, jule::Ptr<_1e5d58e82_Expr>);
inline jule::Bool _1e6a7e5be_pushVariadic(_1e6a7ca1d_fnCallArgChecker*, jule::Ptr<_1e5e1e410_ParamIns>&, jule::I64);
inline jule::Bool _1e6a7e8cc_checkArgs(_1e6a7ca1d_fnCallArgChecker*, jule::Slice<jule::Ptr<_1e5e1e410_ParamIns>>&);
inline jule::Bool _1e6a7eb63_checkDynamicTypeAnnotation(_1e6a7ca1d_fnCallArgChecker*);
inline jule::Bool _1e6a7edd8_check(_1e6a7ca1d_fnCallArgChecker*);
struct _1e6a7ca1d_fnCallArgChecker {
	jule::Ptr<_1e6a8c7db_Eval> _field_e = jule::Ptr<_1e6a8c7db_Eval>();
	jule::Slice<jule::Ptr<_1e5d58e82_Expr>> _field_args = jule::Slice<jule::Ptr<_1e5d58e82_Expr>>();
	jule::Ptr<_1e47137a5_Token> _field_errorToken = jule::Ptr<_1e47137a5_Token>();
	jule::Ptr<_1e5e202ce_FnIns> _field_f = jule::Ptr<_1e5e202ce_FnIns>();
	jule::Bool _field_dynamicAnnotation = jule::Bool();
	jule::Slice<jule::Any> _field_argModels = jule::Slice<jule::Any>();
	

	_1e6a7ca1d_fnCallArgChecker(void) = default;

	inline bool operator==(_1e6a7ca1d_fnCallArgChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_args == _other._field_args &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_f == _other._field_f &&
			this->_field_dynamicAnnotation == _other._field_dynamicAnnotation &&
			this->_field_argModels == _other._field_argModels;
	}

	inline bool operator!=(_1e6a7ca1d_fnCallArgChecker _other) { return !this->operator==(_other); }


};
inline void _1e6a80933_pushErr(_1e6a80427_structLitChecker*, jule::Ptr<_1e47137a5_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1e6a80c52_pushSugggestion(_1e6a80427_structLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _1e6a8111a_pushMatch(_1e6a80427_structLitChecker*, jule::Ptr<_1e5d4c805_FieldIns>&, jule::Ptr<_1e6a8ac6d_Data>&, jule::Ptr<_1e47137a5_Token>&);
inline void _1e6a81439_checkPair(_1e6a80427_structLitChecker*, jule::Ptr<_1e5d5dbce_FieldExprPair>&, jule::Slice<jule::Ptr<_1e5d58e82_Expr>>&);
inline jule::Bool _1e6a81747_readyExprs(_1e6a80427_structLitChecker*, jule::Slice<jule::Ptr<_1e5d58e82_Expr>>&);
inline void _1e6a819bc_check(_1e6a80427_structLitChecker*, jule::Slice<jule::Ptr<_1e5d58e82_Expr>>&);
struct _1e6a80427_structLitChecker {
	jule::Ptr<_1e6a8c7db_Eval> _field_e = jule::Ptr<_1e6a8c7db_Eval>();
	jule::Ptr<_1e47137a5_Token> _field_errorToken = jule::Ptr<_1e47137a5_Token>();
	jule::Ptr<_1e5d714d8_StructIns> _field_s = jule::Ptr<_1e5d714d8_StructIns>();
	jule::Slice<jule::Ptr<_1e5e1577a_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_1e5e1577a_StructArgExprModel>>();
	

	_1e6a80427_structLitChecker(void) = default;

	inline bool operator==(_1e6a80427_structLitChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_s == _other._field_s &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1e6a80427_structLitChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e6a3dd20_Var> _1e6a824a1_buildVar(_1e6a8200b_rangeChecker*, jule::Ptr<_1e5d67754_VarDecl>&);
inline void _1e6a8267c_setSizeKey(_1e6a8200b_rangeChecker*);
inline void _1e6a82a45_checkRangeExprValidity(_1e6a8200b_rangeChecker*, jule::Ptr<_1e6a8ac6d_Data>&, jule::Ptr<_1e6a3dd20_Var>&, jule::Ptr<_1e6ab6a8a_TypeKind>&);
inline void _1e6a82c21_checkSlice(_1e6a8200b_rangeChecker*);
inline void _1e6a82dec_checkArray(_1e6a8200b_rangeChecker*);
inline void _1e6a830c8_checkMapKeyA(_1e6a8200b_rangeChecker*);
inline void _1e6a832a4_checkMapKeyB(_1e6a8200b_rangeChecker*);
inline void _1e6a83480_checkMap(_1e6a8200b_rangeChecker*);
inline void _1e6a8365b_checkStr(_1e6a8200b_rangeChecker*);
inline jule::Bool _1e6a838c0_check(_1e6a8200b_rangeChecker*);
struct _1e6a8200b_rangeChecker {
	jule::Ptr<_1e6a09505_scopeChecker> _field_sc = jule::Ptr<_1e6a09505_scopeChecker>();
	jule::Ptr<_1e5d693d2_RangeKind> _field_rang = jule::Ptr<_1e5d693d2_RangeKind>();
	jule::Ptr<_1e6a0737c_RangeIter> _field_Kind = jule::Ptr<_1e6a0737c_RangeIter>();
	jule::Ptr<_1e6a8ac6d_Data> _field_d = jule::Ptr<_1e6a8ac6d_Data>();
	

	_1e6a8200b_rangeChecker(void) = default;

	inline bool operator==(_1e6a8200b_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1e6a8200b_rangeChecker _other) { return !this->operator==(_other); }


};
inline void _1e6a84618_prepareTypes(_1e6a84162_retTypeChecker*);
inline void _1e6a8488d_prepareExprs(_1e6a84162_retTypeChecker*, jule::Ptr<_1e5d58e82_Expr>&);
inline void _1e6a84a69_retVars(_1e6a84162_retTypeChecker*);
inline void _1e6a84c45_checkExprs(_1e6a84162_retTypeChecker*);
inline jule::Bool _1e6a85053_check(_1e6a84162_retTypeChecker*, jule::Ptr<_1e5d58e82_Expr>&);
struct _1e6a84162_retTypeChecker {
	jule::Ptr<_1e6a09505_scopeChecker> _field_sc = jule::Ptr<_1e6a09505_scopeChecker>();
	jule::Ptr<_1e5e202ce_FnIns> _field_f = jule::Ptr<_1e5e202ce_FnIns>();
	jule::Slice<jule::Ptr<_1e6ab6a8a_TypeKind>> _field_types = jule::Slice<jule::Ptr<_1e6ab6a8a_TypeKind>>();
	jule::Slice<jule::Ptr<_1e5d58e82_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1e5d58e82_Expr>>();
	jule::Slice<jule::Ptr<_1e6a3dd20_Var>> _field_vars = jule::Slice<jule::Ptr<_1e6a3dd20_Var>>();
	jule::Ptr<_1e47137a5_Token> _field_errorToken = jule::Ptr<_1e47137a5_Token>();
	jule::Any _field_model = jule::Any();
	

	_1e6a84162_retTypeChecker(void) = default;

	inline bool operator==(_1e6a84162_retTypeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_f == _other._field_f &&
			this->_field_types == _other._field_types &&
			this->_field_exprs == _other._field_exprs &&
			this->_field_vars == _other._field_vars &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1e6a84162_retTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e6a192e5_ImportInfo> _1e6a8652c_FindPackage(_1e6a86010_SymbolTable*, jule::Str);
inline jule::Ptr<_1e6a192e5_ImportInfo> _1e6a8683a_SelectPackage(_1e6a86010_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_1e6a192e5_ImportInfo>)>);
inline jule::Ptr<_1e6a3dd20_Var> _1e6a86be2_FindVar(_1e6a86010_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1e6ab5d97_TypeAlias> _1e6a87099_FindTypeAlias(_1e6a86010_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1e5d4518d_Struct> _1e6a87451_FindStruct(_1e6a86010_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1e5e1c62d_Fn> _1e6a87808_FindFn(_1e6a86010_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1e5e2e4db_Trait> _1e6a87b16_FindTrait(_1e6a86010_SymbolTable*, jule::Str);
inline jule::Ptr<_1e5e31631_Enum> _1e6a87e24_FindEnum(_1e6a86010_SymbolTable*, jule::Str);
inline jule::Ptr<_1e5e32c2b_TypeEnum> _1e6a88232_FindTypeEnum(_1e6a86010_SymbolTable*, jule::Str);
inline jule::Ptr<_1e6a3dd20_Var> _1e6a887a4_findVar(_1e6a86010_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Ptr<_1e6ab5d97_TypeAlias> _1e6a88c05_findTypeAlias(_1e6a86010_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Any _1e6a890ac_defByIdent(_1e6a86010_SymbolTable*, jule::Str, jule::Bool);
inline jule::Bool _1e6a8950d_isDuplicatedIdent(_1e6a86010_SymbolTable*, jule::Uintptr, jule::Str, jule::Bool);
struct _1e6a86010_SymbolTable {
	jule::Ptr<_1e4718b40_File> _field_File = jule::Ptr<_1e4718b40_File>();
	jule::Slice<_1e5e24569_Pass> _field_Passes = jule::Slice<_1e5e24569_Pass>();
	jule::Slice<jule::Ptr<_1e6a192e5_ImportInfo>> _field_Imports = jule::Slice<jule::Ptr<_1e6a192e5_ImportInfo>>();
	jule::Slice<jule::Ptr<_1e6a3dd20_Var>> _field_Vars = jule::Slice<jule::Ptr<_1e6a3dd20_Var>>();
	jule::Slice<jule::Ptr<_1e6ab5d97_TypeAlias>> _field_TypeAliases = jule::Slice<jule::Ptr<_1e6ab5d97_TypeAlias>>();
	jule::Slice<jule::Ptr<_1e5d4518d_Struct>> _field_Structs = jule::Slice<jule::Ptr<_1e5d4518d_Struct>>();
	jule::Slice<jule::Ptr<_1e5e1c62d_Fn>> _field_Funcs = jule::Slice<jule::Ptr<_1e5e1c62d_Fn>>();
	jule::Slice<jule::Ptr<_1e5e2e4db_Trait>> _field_Traits = jule::Slice<jule::Ptr<_1e5e2e4db_Trait>>();
	jule::Slice<jule::Ptr<_1e5e31631_Enum>> _field_Enums = jule::Slice<jule::Ptr<_1e5e31631_Enum>>();
	jule::Slice<jule::Ptr<_1e5e32c2b_TypeEnum>> _field_TypeEnums = jule::Slice<jule::Ptr<_1e5e32c2b_TypeEnum>>();
	jule::Slice<jule::Ptr<_1e5eb8a5e_Impl>> _field_Impls = jule::Slice<jule::Ptr<_1e5eb8a5e_Impl>>();
	

	_1e6a86010_SymbolTable(void) = default;

	inline bool operator==(_1e6a86010_SymbolTable _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Passes == _other._field_Passes &&
			this->_field_Imports == _other._field_Imports &&
			this->_field_Vars == _other._field_Vars &&
			this->_field_TypeAliases == _other._field_TypeAliases &&
			this->_field_Structs == _other._field_Structs &&
			this->_field_Funcs == _other._field_Funcs &&
			this->_field_Traits == _other._field_Traits &&
			this->_field_Enums == _other._field_Enums &&
			this->_field_TypeEnums == _other._field_TypeEnums &&
			this->_field_Impls == _other._field_Impls;
	}

	inline bool operator!=(_1e6a86010_SymbolTable _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e6a8b158_IsNil(_1e6a8ac6d_Data*);
inline jule::Bool _1e6a8b3bc_IsVoid(_1e6a8ac6d_Data*);
inline jule::Bool _1e6a8b631_IsConst(_1e6a8ac6d_Data*);
inline jule::Bool _1e6a8b93e_GoodOperand(_1e6a8ac6d_Data*, jule::Ptr<_1e6a8ac6d_Data>&);
struct _1e6a8ac6d_Data {
	jule::Ptr<_1e6ab6a8a_TypeKind> _field_Kind = jule::Ptr<_1e6ab6a8a_TypeKind>();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Bool _field_Lvalue = jule::Bool();
	jule::Bool _field_IsRune = jule::Bool();
	jule::Any _field_Model = jule::Any();
	jule::Bool _field_Decl = jule::Bool();
	jule::Ptr<_1e5da6ba0_Const> _field_Constant = jule::Ptr<_1e5da6ba0_Const>();
	

	_1e6a8ac6d_Data(void) = default;

	inline bool operator==(_1e6a8ac6d_Data _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_1e6a8ac6d_Data _other) { return !this->operator==(_other); }


};
struct _1e6a8bce6_Value {
	jule::Ptr<_1e5d58e82_Expr> _field_Expr = jule::Ptr<_1e5d58e82_Expr>();
	jule::Ptr<_1e6a8ac6d_Data> _field_Data = jule::Ptr<_1e6a8ac6d_Data>();
	

	_1e6a8bce6_Value(void) = default;

	inline bool operator==(_1e6a8bce6_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1e6a8bce6_Value _other) { return !this->operator==(_other); }


};
inline void _1e6a8cce7_pushErr(_1e6a8c7db_Eval*, jule::Ptr<_1e47137a5_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1e6a8d116_pushSugggestion(_1e6a8c7db_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _1e6a8d2e2_allowBuiltin(_1e6a8c7db_Eval*);
inline void _1e6a8d4bd_disallowBuiltin(_1e6a8c7db_Eval*);
inline jule::Bool _1e6a8d732_isUnsafe(_1e6a8c7db_Eval*);
inline jule::Bool _1e6a8d996_isGlobal(_1e6a8c7db_Eval*);
inline jule::Bool _1e6a8dc71_applyNumericPrefix(_1e6a8c7db_Eval*, jule::Ptr<_1e6a8ac6d_Data>&);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6a8ded5_litNil(_1e6a8c7db_Eval*);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6a8e2e3_litStr(_1e6a8c7db_Eval*, jule::Ptr<_1e5d59eb6_LitExpr>&);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6a8e601_litBool(_1e6a8c7db_Eval*, jule::Ptr<_1e5d59eb6_LitExpr>&);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6a8e90e_litRune(_1e6a8c7db_Eval*, jule::Ptr<_1e5d59eb6_LitExpr>&);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6a8ec1c_litFloat(_1e6a8c7db_Eval*, jule::Ptr<_1e5d59eb6_LitExpr>&);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6a9002a_litInt(_1e6a8c7db_Eval*, jule::Ptr<_1e5d59eb6_LitExpr>&);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6a90338_litNum(_1e6a8c7db_Eval*, jule::Ptr<_1e5d59eb6_LitExpr>&);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6a90646_evalLit(_1e6a8c7db_Eval*, jule::Ptr<_1e5d59eb6_LitExpr>);
inline jule::Any _1e6a90954_findBuiltins(_1e6a8c7db_Eval*, jule::Str);
inline jule::Any _1e6a90d0b_getDef(_1e6a8c7db_Eval*, jule::Str, jule::Bool);
inline void _1b2868343_pushReference(_1e6a8c7db_Eval*, jule::Ptr<_1e5e202ce_FnIns>&);
inline void _1b287cdb3_pushReference(_1e6a8c7db_Eval*, jule::Ptr<_1e6a3dd20_Var>&);
inline void _1b291c7c1_pushReference(_1e6a8c7db_Eval*, jule::Ptr<_1e5d714d8_StructIns>&);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6a9138e__evalEnum(_1e6a8c7db_Eval*, jule::Ptr<_1e5e31631_Enum>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6a91746_evalEnum(_1e6a8c7db_Eval*, jule::Ptr<_1e5e31631_Enum>, jule::Ptr<_1e47137a5_Token>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6a91a54__evalTypeEnum(_1e6a8c7db_Eval*, jule::Ptr<_1e5e32c2b_TypeEnum>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6a91e0b_evalTypeEnum(_1e6a8c7db_Eval*, jule::Ptr<_1e5e32c2b_TypeEnum>, jule::Ptr<_1e47137a5_Token>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6a92219__evalStruct(_1e6a8c7db_Eval*, jule::Ptr<_1e5d714d8_StructIns>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6a925c1_evalStruct(_1e6a8c7db_Eval*, jule::Ptr<_1e5d714d8_StructIns>, jule::Ptr<_1e47137a5_Token>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6a928ce_evalFnIns(_1e6a8c7db_Eval*, jule::Ptr<_1e5e202ce_FnIns>);
inline void _1e6a92bed_checkDeprecated(_1e6a8c7db_Eval*, jule::Slice<jule::Ptr<_1e5d21268_Directive>>&, jule::Ptr<_1e47137a5_Token>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6a930a5_evalFn(_1e6a8c7db_Eval*, jule::Ptr<_1e5e1c62d_Fn>, jule::Ptr<_1e47137a5_Token>);
inline void _1e6a9346d_pushIllegalCycleError(_1e6a8c7db_Eval*, jule::Ptr<_1e6a3dd20_Var>&, jule::Ptr<_1e6a3dd20_Var>&, jule::Str&);
inline jule::Bool _1e6a93825_checkCrossCycle(_1e6a8c7db_Eval*, jule::Ptr<_1e6a3dd20_Var>&, jule::Str&);
inline jule::Bool _1e6a93bcc_checkIllegalCycles(_1e6a8c7db_Eval*, jule::Ptr<_1e6a3dd20_Var>&, jule::Ptr<_1e47137a5_Token>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6a94084_evalVar(_1e6a8c7db_Eval*, jule::Ptr<_1e6a3dd20_Var>, jule::Ptr<_1e47137a5_Token>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6a9443b_evalTypeAlias(_1e6a8c7db_Eval*, jule::Ptr<_1e6ab5d97_TypeAlias>, jule::Ptr<_1e47137a5_Token>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6a947e3_evalDef(_1e6a8c7db_Eval*, jule::Any, jule::Ptr<_1e47137a5_Token>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6a94b01_evalIdent(_1e6a8c7db_Eval*, jule::Ptr<_1e5d5aeea_IdentExpr>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6a94e0e_evalUnary(jule::Ptr<_1e6a8c7db_Eval>, jule::Ptr<_1e5d5b704_UnaryExpr>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6a9521c_evalVariadic(jule::Ptr<_1e6a8c7db_Eval>, jule::Ptr<_1e5d5baab_VariadicExpr>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6a9552a_evalUnsafe(jule::Ptr<_1e6a8c7db_Eval>, jule::Ptr<_1e5d5a6c0_UnsafeExpr>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6a95838_evalArr(jule::Ptr<_1e6a8c7db_Eval>, jule::Ptr<_1e5d6083a_SliceExpr>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6a95c89_evalExpSlc(jule::Ptr<_1e6a8c7db_Eval>, jule::Ptr<_1e5d6083a_SliceExpr>, jule::Ptr<_1e6ab6a8a_TypeKind>, jule::Any);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6a96097_evalSliceExpr(jule::Ptr<_1e6a8c7db_Eval>, jule::Ptr<_1e5d6083a_SliceExpr>);
inline void _1e6a963d8_checkIntegerIndexingByData(_1e6a8c7db_Eval*, jule::Ptr<_1e6a8ac6d_Data>&, jule::Ptr<_1e47137a5_Token>);
inline void _1e6a967b2_indexingPtr(_1e6a8c7db_Eval*, jule::Ptr<_1e6a8ac6d_Data>&, jule::Ptr<_1e6a8ac6d_Data>&, jule::Ptr<_1e5d611cb_IndexingExpr>&);
inline void _1e6a96b7a_indexingArr(_1e6a8c7db_Eval*, jule::Ptr<_1e6a8ac6d_Data>&, jule::Ptr<_1e6a8ac6d_Data>&, jule::Ptr<_1e5d611cb_IndexingExpr>&);
inline void _1e6a97043_indexingSlc(_1e6a8c7db_Eval*, jule::Ptr<_1e6a8ac6d_Data>&, jule::Ptr<_1e6a8ac6d_Data>&, jule::Ptr<_1e5d611cb_IndexingExpr>&);
inline void _1e6a9740b_indexingMap(_1e6a8c7db_Eval*, jule::Ptr<_1e6a8ac6d_Data>&, jule::Ptr<_1e6a8ac6d_Data>&, jule::Ptr<_1e5d611cb_IndexingExpr>&);
inline void _1e6a977c4_indexingStr(_1e6a8c7db_Eval*, jule::Ptr<_1e6a8ac6d_Data>&, jule::Ptr<_1e6a8ac6d_Data>&, jule::Ptr<_1e5d611cb_IndexingExpr>&);
inline void _1e6a97b8c_toIndexing(_1e6a8c7db_Eval*, jule::Ptr<_1e6a8ac6d_Data>&, jule::Ptr<_1e6a8ac6d_Data>&, jule::Ptr<_1e5d611cb_IndexingExpr>&);
inline jule::Bool _1e6a98110_pushGenericsFromExprSubIdent(jule::Ptr<_1e6a8c7db_Eval>, jule::Ptr<_1e5d5c78d_SubIdentExpr>&, jule::Slice<jule::Ptr<_1e5d54961_TypeDecl>>&, jule::Ptr<_1e5d58e82_Expr>&);
inline jule::Bool _1e6a984c8_pushGenericsFromData(jule::Ptr<_1e6a8c7db_Eval>, jule::Slice<jule::Ptr<_1e5d54961_TypeDecl>>&, jule::Ptr<_1e5d58e82_Expr>&);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6a98808_evalIdentDeclFromIndexing(jule::Ptr<_1e6a8c7db_Eval>, jule::Ptr<_1e5d611cb_IndexingExpr>&);
inline jule::Bool _1e6a98c6a_checkGenericFn(jule::Ptr<_1e6a8c7db_Eval>, jule::Ptr<_1e5e202ce_FnIns>&, jule::Ptr<_1e47137a5_Token>&, jule::Any&);
inline void _1e6a990ab_evalFnGenericFromIndexing(jule::Ptr<_1e6a8c7db_Eval>, jule::Ptr<_1e6a8ac6d_Data>&, jule::Ptr<_1e5d611cb_IndexingExpr>&);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6a993ca_evalIndexing(jule::Ptr<_1e6a8c7db_Eval>, jule::Ptr<_1e5d611cb_IndexingExpr>);
inline std::tuple<jule::Ptr<_1e6a8ac6d_Data>,jule::Ptr<_1e6a8ac6d_Data>> _1e6a996d8_evalSlicingExprs(jule::Ptr<_1e6a8c7db_Eval>, jule::Ptr<_1e5d617d6_SlicingExpr>&);
inline void _1e6a9995d_slicingArr(_1e6a8c7db_Eval*, jule::Ptr<_1e6a8ac6d_Data>&);
inline void _1e6a99d26_slicingStr(_1e6a8c7db_Eval*, jule::Ptr<_1e6a8ac6d_Data>&, jule::Ptr<_1e6a8ac6d_Data>&, jule::Ptr<_1e6a8ac6d_Data>&);
inline void _1e6a9a288_checkSlicing(_1e6a8c7db_Eval*, jule::Ptr<_1e6a8ac6d_Data>&, jule::Ptr<_1e6a8ac6d_Data>&, jule::Ptr<_1e6a8ac6d_Data>&, jule::Ptr<_1e5d617d6_SlicingExpr>&);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6a9a596_evalSlicing(jule::Ptr<_1e6a8c7db_Eval>, jule::Ptr<_1e5d617d6_SlicingExpr>);
inline void _1e6a9a95e_castPtr(_1e6a8c7db_Eval*, jule::Ptr<_1e6ab6a8a_TypeKind>, jule::Ptr<_1e6a8ac6d_Data>, jule::Ptr<_1e47137a5_Token>);
inline void _1e6a9ad27_castStruct(_1e6a8c7db_Eval*, jule::Ptr<_1e6ab6a8a_TypeKind>, jule::Ptr<_1e6a8ac6d_Data>, jule::Ptr<_1e47137a5_Token>);
inline void _1e6a9b1e0_castRef(_1e6a8c7db_Eval*, jule::Ptr<_1e6ab6a8a_TypeKind>, jule::Ptr<_1e6a8ac6d_Data>, jule::Ptr<_1e47137a5_Token>);
inline void _1e6a9b5a8_castSlc(_1e6a8c7db_Eval*, jule::Ptr<_1e6ab6a8a_TypeKind>, jule::Ptr<_1e6a8ac6d_Data>, jule::Ptr<_1e47137a5_Token>);
inline void _1e6a9b8c7_castStr(_1e6a8c7db_Eval*, jule::Ptr<_1e6a8ac6d_Data>, jule::Ptr<_1e47137a5_Token>);
inline void _1e6a9bc90_castInt(_1e6a8c7db_Eval*, jule::Ptr<_1e6ab6a8a_TypeKind>, jule::Ptr<_1e6a8ac6d_Data>, jule::Ptr<_1e47137a5_Token>);
inline void _1e6a9c158_castNum(_1e6a8c7db_Eval*, jule::Ptr<_1e6ab6a8a_TypeKind>, jule::Ptr<_1e6a8ac6d_Data>, jule::Ptr<_1e47137a5_Token>);
inline void _1e6a9c521_castPrim(_1e6a8c7db_Eval*, jule::Ptr<_1e6ab6a8a_TypeKind>, jule::Ptr<_1e6a8ac6d_Data>, jule::Ptr<_1e47137a5_Token>);
inline void _1e6a9c840_castConstant(_1e6a8c7db_Eval*, jule::Ptr<_1e6ab6a8a_TypeKind>&, jule::Ptr<_1e6a8ac6d_Data>&);
inline void _1e6a9cc08_castTypeEnum(_1e6a8c7db_Eval*, jule::Ptr<_1e6ab6a8a_TypeKind>&, jule::Ptr<_1e6a8ac6d_Data>&, jule::Ptr<_1e47137a5_Token>&);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6a9d159_evalCastByTypeNData(_1e6a8c7db_Eval*, jule::Ptr<_1e6ab6a8a_TypeKind>, jule::Ptr<_1e6a8ac6d_Data>, jule::Ptr<_1e47137a5_Token>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6a9d5aa_evalCastT(jule::Ptr<_1e6a8c7db_Eval>, jule::Ptr<_1e6ab6a8a_TypeKind>&, jule::Ptr<_1e5d58e82_Expr>&, jule::Ptr<_1e47137a5_Token>&);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6a9d8b8_evalCast(jule::Ptr<_1e6a8c7db_Eval>, jule::Ptr<_1e5d5be63_CastExpr>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6a9dbc6_evalNsSelection(_1e6a8c7db_Eval*, jule::Ptr<_1e5d5c31a_NsSelectionExpr>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6a9e127_evalStructLitExplicit(jule::Ptr<_1e6a8c7db_Eval>, jule::Ptr<_1e5d714d8_StructIns>, jule::Slice<jule::Ptr<_1e5d58e82_Expr>>, jule::Ptr<_1e47137a5_Token>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6a9e435_evalStructLit(jule::Ptr<_1e6a8c7db_Eval>, jule::Ptr<_1e5d5e42c_StructLit>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6a9e743_evalType(_1e6a8c7db_Eval*, jule::Ptr<_1e5d54961_TypeDecl>);
inline void _1e6a9ea62_callTypeFn(jule::Ptr<_1e6a8c7db_Eval>, jule::Ptr<_1e5d5d250_FnCallExpr>&, jule::Ptr<_1e6a8ac6d_Data>&);
inline void _1e6a9ed81_callBuiltinFn(jule::Ptr<_1e6a8c7db_Eval>, jule::Ptr<_1e5d5d250_FnCallExpr>&, jule::Ptr<_1e6a8ac6d_Data>&);
inline void _1e6aa01c2_checkFnOfConcurrentCall(_1e6a8c7db_Eval*, jule::Ptr<_1e5e202ce_FnIns>&, jule::Ptr<_1e47137a5_Token>);
inline void _1e6aa05bd_processExceptionalHandler(_1e6a8c7db_Eval*, jule::Ptr<_1e5e202ce_FnIns>&, jule::Ptr<_1e5d5d250_FnCallExpr>&, jule::Ptr<_1e6a8ac6d_Data>&);
inline void _1e6aa08ed_callFn(jule::Ptr<_1e6a8c7db_Eval>, jule::Ptr<_1e5d5d250_FnCallExpr>&, jule::Ptr<_1e6a8ac6d_Data>&);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa0c0b_evalFnCall(jule::Ptr<_1e6a8c7db_Eval>, jule::Ptr<_1e5d5d250_FnCallExpr>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa10b3_evalEnumStatic(_1e6a8c7db_Eval*, jule::Ptr<_1e5e31631_Enum>, jule::Ptr<_1e47137a5_Token>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa146a_evalTypeEnumStatic(_1e6a8c7db_Eval*, jule::Ptr<_1e5e32c2b_TypeEnum>, jule::Ptr<_1e47137a5_Token>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa1822_evalStructStatic(_1e6a8c7db_Eval*, jule::Ptr<_1e5d714d8_StructIns>, jule::Ptr<_1e47137a5_Token>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa1c73_evalTraitSubIdent(_1e6a8c7db_Eval*, jule::Ptr<_1e6a8ac6d_Data>, jule::Ptr<_1e5e2e4db_Trait>, jule::Ptr<_1e47137a5_Token>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa226d_evalStructSubIdent(_1e6a8c7db_Eval*, jule::Ptr<_1e6a8ac6d_Data>, jule::Ptr<_1e5d714d8_StructIns>, jule::Ptr<_1e5d5c78d_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa2625_evalSliceSubIdent(_1e6a8c7db_Eval*, jule::Ptr<_1e6a8ac6d_Data>, jule::Ptr<_1e47137a5_Token>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa29cc_evalArraySubIdent(_1e6a8c7db_Eval*, jule::Ptr<_1e6a8ac6d_Data>, jule::Ptr<_1e47137a5_Token>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa2d84_evalMapSubIdent(_1e6a8c7db_Eval*, jule::Ptr<_1e6a8ac6d_Data>, jule::Ptr<_1e47137a5_Token>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa323b_evalStrSubIdent(_1e6a8c7db_Eval*, jule::Ptr<_1e6a8ac6d_Data>, jule::Ptr<_1e47137a5_Token>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa3549_evalIntTypeStatic(_1e6a8c7db_Eval*, jule::Ptr<_1e47137a5_Token>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa3857_evalUintTypeStatic(_1e6a8c7db_Eval*, jule::Ptr<_1e47137a5_Token>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa3b65_evalI8TypeStatic(_1e6a8c7db_Eval*, jule::Ptr<_1e47137a5_Token>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa3e73_evalI16TypeStatic(_1e6a8c7db_Eval*, jule::Ptr<_1e47137a5_Token>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa4281_evalI32TypeStatic(_1e6a8c7db_Eval*, jule::Ptr<_1e47137a5_Token>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa458e_evalI64TypeStatic(_1e6a8c7db_Eval*, jule::Ptr<_1e47137a5_Token>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa489c_evalU8TypeStatic(_1e6a8c7db_Eval*, jule::Ptr<_1e47137a5_Token>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa4baa_evalU16TypeStatic(_1e6a8c7db_Eval*, jule::Ptr<_1e47137a5_Token>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa4eb8_evalU32TypeStatic(_1e6a8c7db_Eval*, jule::Ptr<_1e47137a5_Token>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa52c6_evalU64TypeStatic(_1e6a8c7db_Eval*, jule::Ptr<_1e47137a5_Token>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa55d4_evalF32TypeStatic(_1e6a8c7db_Eval*, jule::Ptr<_1e47137a5_Token>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa58e2_evalF64TypeStatic(_1e6a8c7db_Eval*, jule::Ptr<_1e47137a5_Token>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa5c99_evalPrimStatic(_1e6a8c7db_Eval*, jule::Str, jule::Ptr<_1e47137a5_Token>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa6151_evalTypeStatic(_1e6a8c7db_Eval*, jule::Ptr<_1e6a8ac6d_Data>, jule::Ptr<_1e5d5c78d_SubIdentExpr>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa6508_evalObjSubIdent(_1e6a8c7db_Eval*, jule::Ptr<_1e6a8ac6d_Data>, jule::Ptr<_1e5d5c78d_SubIdentExpr>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa6816_evalSubIdent(jule::Ptr<_1e6a8c7db_Eval>, jule::Ptr<_1e5d5c78d_SubIdentExpr>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa6b24_evalTuple(jule::Ptr<_1e6a8c7db_Eval>, jule::Ptr<_1e5d59b0e_TupleExpr>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa6ecb_evalMap(jule::Ptr<_1e6a8c7db_Eval>, jule::Ptr<_1e6ac1d09_Map>, jule::Ptr<_1e5d5e8a0_BraceLit>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa72d9_evalBraceLit(jule::Ptr<_1e6a8c7db_Eval>, jule::Ptr<_1e5d5e8a0_BraceLit>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa75e7_evalAnonFn(jule::Ptr<_1e6a8c7db_Eval>, jule::Ptr<_1e5d66775_FnDecl>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa7905_evalBinop(jule::Ptr<_1e6a8c7db_Eval>, jule::Ptr<_1e5d5cc11_BinopExpr>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa7c13_evalExprKind(jule::Ptr<_1e6a8c7db_Eval>, jule::Any);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa8021_eval(jule::Ptr<_1e6a8c7db_Eval>, jule::Ptr<_1e5d58e82_Expr>);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa832e_evalExpr(jule::Ptr<_1e6a8c7db_Eval>, jule::Ptr<_1e5d58e82_Expr>);
struct _1e6a8c7db_Eval {
	jule::Ptr<_1e6a22441_Sema> _field_s = jule::Ptr<_1e6a22441_Sema>();
	jule::Trait<_1e6ad2600_Lookup> _field_lookup = jule::Trait<_1e6ad2600_Lookup>();
	jule::Ptr<_1e6ab6a8a_TypeKind> _field_prefix = jule::Ptr<_1e6ab6a8a_TypeKind>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_immutable = jule::Bool();
	jule::Bool _field_ignored = jule::Bool();
	jule::Bool _field_disBuiltin = jule::Bool();
	jule::Ptr<_1e6a3dd20_Var> _field_owner = jule::Ptr<_1e6a3dd20_Var>();
	jule::Ptr<_1e5d4c805_FieldIns> _field_field = jule::Ptr<_1e5d4c805_FieldIns>();
	jule::Bool _field_arg = jule::Bool();
	

	_1e6a8c7db_Eval(void) = default;

	inline bool operator==(_1e6a8c7db_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1e6a8c7db_Eval _other) { return !this->operator==(_other); }


};
inline _1e6aa87a2_unaryEval static__1e6aa8c58_new(jule::Ptr<_1e6a8c7db_Eval>);
inline void _1e6aa8e34_minus(_1e6aa87a2_unaryEval*);
inline void _1e6aa9110_plus(_1e6aa87a2_unaryEval*);
inline void _1e6aa92db_caret(_1e6aa87a2_unaryEval*);
inline void _1e6aa94b7_excl(_1e6aa87a2_unaryEval*);
inline void _1e6aa9693_star(_1e6aa87a2_unaryEval*);
inline void _1e6aa986e_amper(_1e6aa87a2_unaryEval*);
inline void _1e6aa9a4a_typeDecl(_1e6aa87a2_unaryEval*);
inline void _1e6aa9c26_evalData(_1e6aa87a2_unaryEval*);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aaa001_eval(_1e6aa87a2_unaryEval*, jule::Ptr<_1e5d5b704_UnaryExpr>);
struct _1e6aa87a2_unaryEval {
	jule::Ptr<_1e6a8c7db_Eval> _field_e = jule::Ptr<_1e6a8c7db_Eval>();
	jule::Ptr<_1e6a8ac6d_Data> _field_d = jule::Ptr<_1e6a8ac6d_Data>();
	jule::Ptr<_1e5d5b704_UnaryExpr> _field_u = jule::Ptr<_1e5d5b704_UnaryExpr>();
	

	_1e6aa87a2_unaryEval(void) = default;

	inline bool operator==(_1e6aa87a2_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1e6aa87a2_unaryEval _other) { return !this->operator==(_other); }


};
inline _1e6aaa540_binaryEval static__1e6aaab06_newPlain(jule::Ptr<_1e6a8c7db_Eval>);
inline _1e6aaa540_binaryEval static__1e6aaae47_new(jule::Ptr<_1e6a8c7db_Eval>, jule::Ptr<_1e47137a5_Token>);
inline jule::Bool _1e6aab1ab_checkTypeCompatibility(_1e6aaa540_binaryEval*);
inline jule::Bool _1e6aab453_checkStructCommonOperatorCompatibility(_1e6aaa540_binaryEval*);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aab6ea_evalNil(_1e6aaa540_binaryEval*);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aab95e_evalEnum(_1e6aaa540_binaryEval*);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aabbc3_evalTypeEnum(_1e6aaa540_binaryEval*);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aabe37_evalSptr(_1e6aaa540_binaryEval*);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aac19b_evalPtr(_1e6aaa540_binaryEval*);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aac410_evalArr(_1e6aaa540_binaryEval*);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aac674_evalSlc(_1e6aaa540_binaryEval*);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aac8d8_evalFn(_1e6aaa540_binaryEval*);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aacb4c_evalStruct(_1e6aaa540_binaryEval*);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aacdb1_evalTrait(_1e6aaa540_binaryEval*);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aad125_evalAny(_1e6aaa540_binaryEval*);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aad389_evalBool(_1e6aaa540_binaryEval*);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aad5ed_evalStr(_1e6aaa540_binaryEval*);
inline void _1e6aad7c9_setTypeToGreater(_1e6aaa540_binaryEval*);
inline void _1e6aada1b_checkModData(_1e6aaa540_binaryEval*, jule::Ptr<_1e6a8ac6d_Data>&);
inline void _1e6aadbe7_mod(_1e6aaa540_binaryEval*);
inline jule::Bool _1e6aae09e_numbersAreCompatibile(_1e6aaa540_binaryEval*, jule::Str&, jule::Str&);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aae313_evalFloat(_1e6aaa540_binaryEval*);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aae577_evalInt(_1e6aaa540_binaryEval*);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aae7db_evalPrim(_1e6aaa540_binaryEval*);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6aaea50_evalOp(_1e6aaa540_binaryEval*);
inline void _1e6aaecc5_evalConst(_1e6aaa540_binaryEval*, jule::Ptr<_1e6a8ac6d_Data>&);
inline void _1e6ab004a_checkData(_1e6aaa540_binaryEval*, jule::Ptr<_1e6a8ac6d_Data>&);
inline void _1e6ab0226_checkDatas(_1e6aaa540_binaryEval*);
inline void _1e6ab049b_setModel(_1e6aaa540_binaryEval*, jule::Ptr<_1e6a8ac6d_Data>&);
inline void _1e6ab0721_postEval(_1e6aaa540_binaryEval*, jule::Ptr<_1e6a8ac6d_Data>&);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6ab0ac8_solveExplicit(_1e6aaa540_binaryEval*, jule::Ptr<_1e6a8ac6d_Data>&, jule::Ptr<_1e6a8ac6d_Data>&);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6ab0dd6_eval(_1e6aaa540_binaryEval*, jule::Ptr<_1e5d5cc11_BinopExpr>&);
struct _1e6aaa540_binaryEval {
	jule::Ptr<_1e6a8c7db_Eval> _field_e = jule::Ptr<_1e6a8c7db_Eval>();
	jule::Ptr<_1e6a8ac6d_Data> _field_l = jule::Ptr<_1e6a8ac6d_Data>();
	jule::Ptr<_1e6a8ac6d_Data> _field_r = jule::Ptr<_1e6a8ac6d_Data>();
	jule::Ptr<_1e47137a5_Token> _field_op = jule::Ptr<_1e47137a5_Token>();
	

	_1e6aaa540_binaryEval(void) = default;

	inline bool operator==(_1e6aaa540_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1e6aaa540_binaryEval _other) { return !this->operator==(_other); }


};
struct _1e6ab535d_InsGeneric {
	jule::Ptr<_1e6ab6a8a_TypeKind> _field_Kind = jule::Ptr<_1e6ab6a8a_TypeKind>();
	jule::Slice<jule::Ptr<_1e6ab6a8a_TypeKind>> _field_Constraint = jule::Slice<jule::Ptr<_1e6ab6a8a_TypeKind>>();
	

	_1e6ab535d_InsGeneric(void) = default;

	inline bool operator==(_1e6ab535d_InsGeneric _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_1e6ab535d_InsGeneric _other) { return !this->operator==(_other); }


};
struct _1e6ab5d97_TypeAlias {
	jule::Ptr<_1e5d64c7e_ScopeTree> _field_Scope = jule::Ptr<_1e5d64c7e_ScopeTree>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Used = jule::Bool();
	jule::Bool _field_Generic = jule::Bool();
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1e6ababe3_TypeSymbol> _field_Kind = jule::Ptr<_1e6ababe3_TypeSymbol>();
	jule::Slice<jule::Any> _field_Refers = jule::Slice<jule::Any>();
	jule::Slice<jule::Ptr<_1e6ab5d97_TypeAlias>> _field_Generics = jule::Slice<jule::Ptr<_1e6ab5d97_TypeAlias>>();
	

	_1e6ab5d97_TypeAlias(void) = default;

	inline bool operator==(_1e6ab5d97_TypeAlias _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Used == _other._field_Used &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Refers == _other._field_Refers &&
			this->_field_Generics == _other._field_Generics;
	}

	inline bool operator!=(_1e6ab5d97_TypeAlias _other) { return !this->operator==(_other); }


};
inline jule::Str _1e6ab6e86_Str(_1e6ab6a8a_TypeKind*);
inline jule::Bool _1e6ab7294_Equals(jule::Ptr<_1e6ab6a8a_TypeKind>, jule::Ptr<_1e6ab6a8a_TypeKind>);
inline jule::Bool _1e6ab774a_CppLinked(_1e6ab6a8a_TypeKind*);
inline jule::Bool _1e6ab79ae_IsNil(_1e6ab6a8a_TypeKind*);
inline jule::Bool _1e6ab7c23_Void(_1e6ab6a8a_TypeKind*);
inline jule::Bool _1e6ab7e87_Mutable(_1e6ab6a8a_TypeKind*);
inline jule::Bool _1e6ab81eb_NilCompatible(_1e6ab6a8a_TypeKind*);
inline jule::Bool _1e6ab8460_PerformsRC(_1e6ab6a8a_TypeKind*);
inline jule::Bool _1e6ab86c4_SupportsCloning(_1e6ab6a8a_TypeKind*);
inline jule::Bool _1e6ab8938_Variadicable(_1e6ab6a8a_TypeKind*);
inline jule::Ptr<_1e6abb562_Prim> _1e6ab8b9c_Prim(_1e6ab6a8a_TypeKind*);
inline jule::Ptr<_1e6abece6_Sptr> _1e6ab8e11_Sptr(_1e6ab6a8a_TypeKind*);
inline jule::Ptr<_1e6ac335a_Ptr> _1e6ab9175_Ptr(_1e6ab6a8a_TypeKind*);
inline jule::Ptr<_1e5e31631_Enum> _1e6ab93d9_Enum(_1e6ab6a8a_TypeKind*);
inline jule::Ptr<_1e5e32c2b_TypeEnum> _1e6ab964d_TypeEnum(_1e6ab6a8a_TypeKind*);
inline jule::Ptr<_1e6ac28ed_Arr> _1e6ab98b2_Arr(_1e6ab6a8a_TypeKind*);
inline jule::Ptr<_1e6ac0753_Slc> _1e6ab9b26_Slc(_1e6ab6a8a_TypeKind*);
inline jule::Ptr<_1e5e202ce_FnIns> _1e6ab9d8a_Fn(_1e6ab6a8a_TypeKind*);
inline jule::Ptr<_1e5d714d8_StructIns> _1e6aba0ee_Struct(_1e6ab6a8a_TypeKind*);
inline jule::Ptr<_1e5e2e4db_Trait> _1e6aba363_Trait(_1e6ab6a8a_TypeKind*);
inline jule::Ptr<_1e6ac1d09_Map> _1e6aba5c7_Map(_1e6ab6a8a_TypeKind*);
inline jule::Ptr<_1e6ac12d1_Tuple> _1e6aba83b_Tup(_1e6ab6a8a_TypeKind*);
struct _1e6ab6a8a_TypeKind {
	jule::Str _field_CppIdent = jule::Str();
	jule::Bool _field_Generic = jule::Bool();
	jule::Bool _field_Variadic = jule::Bool();
	jule::Trait<_1e6ab665b_Kind> _field_Kind = jule::Trait<_1e6ab665b_Kind>();
	

	_1e6ab6a8a_TypeKind(void) = default;

	inline bool operator==(_1e6ab6a8a_TypeKind _other) {
		return 
			this->_field_CppIdent == _other._field_CppIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1e6ab6a8a_TypeKind _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e6abb09a_checked(_1e6ababe3_TypeSymbol*);
inline void _1e6abb276_removeKind(_1e6ababe3_TypeSymbol*);
struct _1e6ababe3_TypeSymbol {
	jule::Ptr<_1e5d54961_TypeDecl> _field_Decl = jule::Ptr<_1e5d54961_TypeDecl>();
	jule::Ptr<_1e6ab6a8a_TypeKind> _field_Kind = jule::Ptr<_1e6ab6a8a_TypeKind>();
	

	_1e6ababe3_TypeSymbol(void) = default;

	inline bool operator==(_1e6ababe3_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1e6ababe3_TypeSymbol _other) { return !this->operator==(_other); }


};
inline jule::Str _1e6abb8c5_Str(_1e6abb562_Prim*);
inline jule::Bool _1e6abbbd3_Equals(jule::Ptr<_1e6abb562_Prim>, jule::Ptr<_1e6ab6a8a_TypeKind>);
inline jule::Bool _1e6abc156_IsConstraint(_1e6abb562_Prim*);
inline jule::Bool _1e6abc3ba_IsI8(_1e6abb562_Prim*);
inline jule::Bool _1e6abc62e_IsI16(_1e6abb562_Prim*);
inline jule::Bool _1e6abc893_IsI32(_1e6abb562_Prim*);
inline jule::Bool _1e6abcb07_IsI64(_1e6abb562_Prim*);
inline jule::Bool _1e6abcd6b_IsU8(_1e6abb562_Prim*);
inline jule::Bool _1e6abd0d0_IsU16(_1e6abb562_Prim*);
inline jule::Bool _1e6abd344_IsU32(_1e6abb562_Prim*);
inline jule::Bool _1e6abd5a8_IsU64(_1e6abb562_Prim*);
inline jule::Bool _1e6abd81c_IsF32(_1e6abb562_Prim*);
inline jule::Bool _1e6abda81_IsF64(_1e6abb562_Prim*);
inline jule::Bool _1e6abdce5_IsInt(_1e6abb562_Prim*);
inline jule::Bool _1e6abe059_IsUint(_1e6abb562_Prim*);
inline jule::Bool _1e6abe2bd_IsUintptr(_1e6abb562_Prim*);
inline jule::Bool _1e6abe532_IsBool(_1e6abb562_Prim*);
inline jule::Bool _1e6abe796_IsStr(_1e6abb562_Prim*);
inline jule::Bool _1e6abea0a_IsAny(_1e6abb562_Prim*);
struct _1e6abb562_Prim {
	jule::Str _field_Kind = jule::Str();
	

	_1e6abb562_Prim(void) = default;

	inline bool operator==(_1e6abb562_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1e6abb562_Prim _other) { return !this->operator==(_other); }


};
inline jule::Str _1e6ac0159_Str(_1e6abece6_Sptr*);
inline jule::Bool _1e6ac0467_Equals(jule::Ptr<_1e6abece6_Sptr>, jule::Ptr<_1e6ab6a8a_TypeKind>);
struct _1e6abece6_Sptr {
	jule::Ptr<_1e6ab6a8a_TypeKind> _field_Elem = jule::Ptr<_1e6ab6a8a_TypeKind>();
	

	_1e6abece6_Sptr(void) = default;

	inline bool operator==(_1e6abece6_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1e6abece6_Sptr _other) { return !this->operator==(_other); }


};
inline jule::Str _1e6ac0c5e_Str(_1e6ac0753_Slc*);
inline jule::Bool _1e6ac106c_Equals(jule::Ptr<_1e6ac0753_Slc>, jule::Ptr<_1e6ab6a8a_TypeKind>);
struct _1e6ac0753_Slc {
	jule::Ptr<_1e6ab6a8a_TypeKind> _field_Elem = jule::Ptr<_1e6ab6a8a_TypeKind>();
	

	_1e6ac0753_Slc(void) = default;

	inline bool operator==(_1e6ac0753_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1e6ac0753_Slc _other) { return !this->operator==(_other); }


};
inline jule::Str _1e6ac1644_Str(_1e6ac12d1_Tuple*);
inline jule::Bool _1e6ac1952_Equals(jule::Ptr<_1e6ac12d1_Tuple>, jule::Ptr<_1e6ab6a8a_TypeKind>);
struct _1e6ac12d1_Tuple {
	jule::Slice<jule::Ptr<_1e6ab6a8a_TypeKind>> _field_Types = jule::Slice<jule::Ptr<_1e6ab6a8a_TypeKind>>();
	

	_1e6ac12d1_Tuple(void) = default;

	inline bool operator==(_1e6ac12d1_Tuple _other) {
		return 
			this->_field_Types == _other._field_Types;
	}

	inline bool operator!=(_1e6ac12d1_Tuple _other) { return !this->operator==(_other); }


};
inline jule::Str _1e6ac216c_Str(_1e6ac1d09_Map*);
inline jule::Bool _1e6ac247a_Equals(jule::Ptr<_1e6ac1d09_Map>, jule::Ptr<_1e6ab6a8a_TypeKind>);
struct _1e6ac1d09_Map {
	jule::Ptr<_1e6ab6a8a_TypeKind> _field_Key = jule::Ptr<_1e6ab6a8a_TypeKind>();
	jule::Ptr<_1e6ab6a8a_TypeKind> _field_Val = jule::Ptr<_1e6ab6a8a_TypeKind>();
	

	_1e6ac1d09_Map(void) = default;

	inline bool operator==(_1e6ac1d09_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1e6ac1d09_Map _other) { return !this->operator==(_other); }


};
inline jule::Str _1e6ac2c61_Str(_1e6ac28ed_Arr*);
inline jule::Bool _1e6ac306e_Equals(jule::Ptr<_1e6ac28ed_Arr>, jule::Ptr<_1e6ab6a8a_TypeKind>);
struct _1e6ac28ed_Arr {
	jule::Bool _field_Auto = jule::Bool();
	jule::I64 _field_N = jule::I64();
	jule::Ptr<_1e6ab6a8a_TypeKind> _field_Elem = jule::Ptr<_1e6ab6a8a_TypeKind>();
	

	_1e6ac28ed_Arr(void) = default;

	inline bool operator==(_1e6ac28ed_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1e6ac28ed_Arr _other) { return !this->operator==(_other); }


};
inline jule::Str _1e6ac36bd_Str(_1e6ac335a_Ptr*);
inline jule::Bool _1e6ac39cb_Equals(jule::Ptr<_1e6ac335a_Ptr>, jule::Ptr<_1e6ab6a8a_TypeKind>);
inline jule::Bool _1e6ac3d2d_IsUnsafe(_1e6ac335a_Ptr*);
struct _1e6ac335a_Ptr {
	jule::Ptr<_1e6ab6a8a_TypeKind> _field_Elem = jule::Ptr<_1e6ab6a8a_TypeKind>();
	

	_1e6ac335a_Ptr(void) = default;

	inline bool operator==(_1e6ac335a_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1e6ac335a_Ptr _other) { return !this->operator==(_other); }


};
struct _1e6ac42a1_referencer {
	jule::Str _field_ident = jule::Str();
	jule::Any _field_owner = jule::Any();
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	_1e6ac42a1_referencer(void) = default;

	inline bool operator==(_1e6ac42a1_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1e6ac42a1_referencer _other) { return !this->operator==(_other); }


};
inline void _1e6ac5703_pushErr(_1e6ac4ee9_typeChecker*, jule::Ptr<_1e47137a5_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1e6ac58ce_allowBuiltin(_1e6ac4ee9_typeChecker*);
inline void _1e6ac5aaa_disallowBuiltin(_1e6ac4ee9_typeChecker*);
inline jule::Ptr<_1e6abb562_Prim> _1e6ac5db8_buildPrim(_1e6ac4ee9_typeChecker*, jule::Ptr<_1e5d55027_IdentTypeDecl>&);
inline void _1b2b968d5_pushReference(_1e6ac4ee9_typeChecker*, jule::Ptr<_1e5d714d8_StructIns>&);
inline void _1b2b99982_pushReference(_1e6ac4ee9_typeChecker*, jule::Ptr<_1e5e2e4db_Trait>&);
inline void _1e6ac63b3_pushReferenceByKind(_1e6ac4ee9_typeChecker*, jule::Ptr<_1e6ab6a8a_TypeKind>&);
inline void _1e6ac677b_pushCycleError(_1e6ac4ee9_typeChecker*, jule::Any, jule::Any, jule::Str&);
inline jule::Bool _1e6ac6b33_checkCrossCycle(_1e6ac4ee9_typeChecker*, jule::Any, jule::Str&);
inline jule::Bool _1e6ac6eda_checkIllegalCycles(_1e6ac4ee9_typeChecker*, jule::Ptr<_1e5d55027_IdentTypeDecl>&, jule::Any);
inline jule::Trait<_1e6ab665b_Kind> _1e6ac7392_fromTypeAlias(_1e6ac4ee9_typeChecker*, jule::Ptr<_1e5d55027_IdentTypeDecl>&, jule::Ptr<_1e6ab5d97_TypeAlias>&);
inline jule::Ptr<_1e5e31631_Enum> _1e6ac7749_fromEnum(_1e6ac4ee9_typeChecker*, jule::Ptr<_1e5d55027_IdentTypeDecl>&, jule::Ptr<_1e5e31631_Enum>&);
inline jule::Ptr<_1e5e32c2b_TypeEnum> _1e6ac7b01_fromTypeEnum(_1e6ac4ee9_typeChecker*, jule::Ptr<_1e5d55027_IdentTypeDecl>&, jule::Ptr<_1e5e32c2b_TypeEnum>&);
inline jule::Ptr<_1e5e2e4db_Trait> _1e6ac7ea8_fromTrait(_1e6ac4ee9_typeChecker*, jule::Ptr<_1e5d55027_IdentTypeDecl>&, jule::Ptr<_1e5e2e4db_Trait>&);
inline jule::Bool _1e6ac8360_checkStructIns(_1e6ac4ee9_typeChecker*, jule::Ptr<_1e5d714d8_StructIns>&, jule::Ptr<_1e47137a5_Token>&);
inline void _1e6ac8607_appendUsedStructReference(_1e6ac4ee9_typeChecker*, jule::Ptr<_1e5d4518d_Struct>&);
inline jule::Ptr<_1e5d714d8_StructIns> _1e6ac89c0_buildStructInstance(_1e6ac4ee9_typeChecker*, jule::Ptr<_1e5d55027_IdentTypeDecl>&, jule::Ptr<_1e5d4518d_Struct>&);
inline jule::Ptr<_1e5d714d8_StructIns> _1e6ac8d77_fromStruct(_1e6ac4ee9_typeChecker*, jule::Ptr<_1e5d55027_IdentTypeDecl>&, jule::Ptr<_1e5d4518d_Struct>&);
inline jule::Trait<_1e6ab665b_Kind> _1e6ac9185_getDef(_1e6ac4ee9_typeChecker*, jule::Ptr<_1e5d55027_IdentTypeDecl>&);
inline jule::Trait<_1e6ab665b_Kind> _1e6ac9493_buildIdent(_1e6ac4ee9_typeChecker*, jule::Ptr<_1e5d55027_IdentTypeDecl>);
inline jule::Trait<_1e6ab665b_Kind> _1e6ac97a1_buildSubIdent(_1e6ac4ee9_typeChecker*, jule::Ptr<_1e5d55676_SubIdentTypeDecl>);
inline jule::Ptr<_1e6abece6_Sptr> _1e6ac9aae_buildSptrFromType(_1e6ac4ee9_typeChecker*, jule::Ptr<_1e6ab6a8a_TypeKind>&);
inline jule::Ptr<_1e6abece6_Sptr> _1e6ac9dbc_buildSptr(_1e6ac4ee9_typeChecker*, jule::Ptr<_1e5d55d19_SptrTypeDecl>);
inline jule::Ptr<_1e6ac335a_Ptr> _1e6aca1ca_buildPtrFromType(_1e6ac4ee9_typeChecker*, jule::Ptr<_1e6ab6a8a_TypeKind>&);
inline jule::Ptr<_1e6ac335a_Ptr> _1e6aca4d8_buildPtr(_1e6ac4ee9_typeChecker*, jule::Ptr<_1e5d567dc_PtrTypeDecl>);
inline jule::Ptr<_1e6ac0753_Slc> _1e6aca7e6_buildSlc(_1e6ac4ee9_typeChecker*, jule::Ptr<_1e5d56215_SlcTypeDecl>);
inline jule::Ptr<_1e6ac28ed_Arr> _1e6acab04_buildArr(_1e6ac4ee9_typeChecker*, jule::Ptr<_1e5d56e6e_ArrTypeDecl>);
inline jule::Ptr<_1e6ac1d09_Map> _1e6acae12_buildMap(_1e6ac4ee9_typeChecker*, jule::Ptr<_1e5d576bc_MapTypeDecl>);
inline jule::Ptr<_1e6ac12d1_Tuple> _1e6acb220_buildTuple(_1e6ac4ee9_typeChecker*, jule::Ptr<_1e5d56501_TupleTypeDecl>);
inline jule::Bool _1e6acb52d_checkFnTypes(_1e6ac4ee9_typeChecker*, jule::Ptr<_1e5e202ce_FnIns>&);
inline jule::Ptr<_1e5e202ce_FnIns> _1e6acb83b_buildFn(_1e6ac4ee9_typeChecker*, jule::Ptr<_1e5d66775_FnDecl>);
inline jule::Trait<_1e6ab665b_Kind> _1e6acbb49_buildByNamespace(_1e6ac4ee9_typeChecker*, jule::Ptr<_1e5d55a2d_NamespaceTypeDecl>);
inline jule::Ptr<_1e6ab6a8a_TypeKind> _1e6acbe57_build(_1e6ac4ee9_typeChecker*, jule::Any&);
inline jule::Ptr<_1e6ab6a8a_TypeKind> _1e6acc265_checkDecl(_1e6ac4ee9_typeChecker*, jule::Ptr<_1e5d54961_TypeDecl>&);
inline void _1e6acc4da_check(_1e6ac4ee9_typeChecker*, jule::Ptr<_1e6ababe3_TypeSymbol>&);
struct _1e6ac4ee9_typeChecker {
	jule::Ptr<_1e6a22441_Sema> _field_s = jule::Ptr<_1e6a22441_Sema>();
	jule::Trait<_1e6ad2600_Lookup> _field_lookup = jule::Trait<_1e6ad2600_Lookup>();
	jule::Ptr<_1e6ac42a1_referencer> _field_referencer = jule::Ptr<_1e6ac42a1_referencer>();
	jule::Ptr<_1e5e231a0_ReferenceStack> _field_refers = jule::Ptr<_1e5e231a0_ReferenceStack>();
	jule::Ptr<_1e47137a5_Token> _field_errorToken = jule::Ptr<_1e47137a5_Token>();
	jule::Slice<jule::Ptr<_1e5d62045_GenericDecl>> _field_ignoreGenerics = jule::Slice<jule::Ptr<_1e5d62045_GenericDecl>>();
	jule::Slice<jule::Ptr<_1e6ab5d97_TypeAlias>> _field_useGenerics = jule::Slice<jule::Ptr<_1e6ab5d97_TypeAlias>>();
	jule::Bool _field_notPlain = jule::Bool();
	jule::Bool _field_disBuiltin = jule::Bool();
	jule::Bool _field_selection = jule::Bool();
	jule::Ptr<_1e6ab5d97_TypeAlias> _field_ownerAlias = jule::Ptr<_1e6ab5d97_TypeAlias>();
	jule::Slice<jule::Ptr<_1e6ab5d97_TypeAlias>> _field_bannedGenerics = jule::Slice<jule::Ptr<_1e6ab5d97_TypeAlias>>();
	jule::Bool _field_inscatch = jule::Bool();
	

	_1e6ac4ee9_typeChecker(void) = default;

	inline bool operator==(_1e6ac4ee9_typeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_referencer == _other._field_referencer &&
			this->_field_refers == _other._field_refers &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_ignoreGenerics == _other._field_ignoreGenerics &&
			this->_field_useGenerics == _other._field_useGenerics &&
			this->_field_notPlain == _other._field_notPlain &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_selection == _other._field_selection &&
			this->_field_ownerAlias == _other._field_ownerAlias &&
			this->_field_bannedGenerics == _other._field_bannedGenerics &&
			this->_field_inscatch == _other._field_inscatch;
	}

	inline bool operator!=(_1e6ac4ee9_typeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool static__1e6accb4a_identTypeDecl(jule::Str&, jule::Ptr<_1e5d55027_IdentTypeDecl>);
inline jule::Bool static__1e6acce8b_exist(jule::Str&, jule::Any&);
struct _1e6acc70a_identTypeLookup {
	

	_1e6acc70a_identTypeLookup(void) = default;

	inline bool operator==(_1e6acc70a_identTypeLookup _other) { return true; }

	inline bool operator!=(_1e6acc70a_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _1c9978c99_FileInfo {
	jule::Ptr<_1e5d201bd_Ast> _field_Ast = jule::Ptr<_1e5d201bd_Ast>();
	jule::Slice<_1e43e3a18_Log> _field_Errors = jule::Slice<_1e43e3a18_Log>();
	

	_1c9978c99_FileInfo(void) = default;

	inline bool operator==(_1c9978c99_FileInfo _other) {
		return 
			this->_field_Ast == _other._field_Ast &&
			this->_field_Errors == _other._field_Errors;
	}

	inline bool operator!=(_1c9978c99_FileInfo _other) { return !this->operator==(_other); }


};
struct _1c99c24eb_stmt {
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _field_tokens = jule::Slice<jule::Ptr<_1e47137a5_Token>>();
	jule::Bool _field_terminated = jule::Bool();
	

	_1c99c24eb_stmt(void) = default;

	inline bool operator==(_1c99c24eb_stmt _other) {
		return 
			this->_field_tokens == _other._field_tokens &&
			this->_field_terminated == _other._field_terminated;
	}

	inline bool operator!=(_1c99c24eb_stmt _other) { return !this->operator==(_other); }


};
inline void _1c99c34a8_stop(_1c99c2d26_scopeParser*);
inline jule::Bool _1c99c371c_stopped(_1c99c2d26_scopeParser*);
inline jule::Bool _1c99c3981_finished(_1c99c2d26_scopeParser*);
inline jule::Bool _1c99c3be5_isLastSt(_1c99c2d26_scopeParser*);
inline void _1c99c4014_pushErr(_1c99c2d26_scopeParser*, jule::Ptr<_1e47137a5_Token>, jule::Str);
inline void _1c99c4333_pushSuggestion(_1c99c2d26_scopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _1c99c45a8_insertAsNext(_1c99c2d26_scopeParser*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Ptr<_1c99c24eb_stmt> _1c99c481c_next(_1c99c2d26_scopeParser*);
inline jule::Ptr<_1e5d64c7e_ScopeTree> _1c99c4bc4_buildScope(_1c99c2d26_scopeParser*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&, jule::Ptr<_1e47137a5_Token>);
inline jule::Ptr<_1e5d67754_VarDecl> _1c99c4ed2_buildVarSt(_1c99c2d26_scopeParser*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Ptr<_1e5d67b0b_RetSt> _1c99c52e0_buildRetSt(_1c99c2d26_scopeParser*, jule::Slice<jule::Ptr<_1e47137a5_Token>>);
inline jule::Ptr<_1e5d6826b_Iter> _1c99c55ed_buildWhileNextIter(_1c99c2d26_scopeParser*, jule::Ptr<_1c99c24eb_stmt>&);
inline jule::Ptr<_1e5d68a41_WhileKind> _1c99c590b_buildWhileIterKind(_1c99c2d26_scopeParser*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>> _1c99c5c19_getRangeKindKeysTokens(_1c99c2d26_scopeParser*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Ptr<_1e5d67754_VarDecl> _1c99c6027_buildRangeKindKey(_1c99c2d26_scopeParser*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Slice<jule::Ptr<_1e5d67754_VarDecl>> _1c99c6335_buildRangeKindKeys(_1c99c2d26_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>>&);
inline void _1c99c6676_setupRangeKindKeysPlain(_1c99c2d26_scopeParser*, jule::Ptr<_1e5d693d2_RangeKind>&, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline void _1c99c69c8_setupRangeKindKeysExplicit(_1c99c2d26_scopeParser*, jule::Ptr<_1e5d693d2_RangeKind>&, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline void _1c99c6d08_setupRangeKindKeys(_1c99c2d26_scopeParser*, jule::Ptr<_1e5d693d2_RangeKind>&, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Ptr<_1e5d693d2_RangeKind> _1c99c7259_buildRangeIterKind(_1c99c2d26_scopeParser*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&, jule::Slice<jule::Ptr<_1e47137a5_Token>>&, jule::Ptr<_1e47137a5_Token>&);
inline jule::Any _1c99c7611_buildCommonIterKind(_1c99c2d26_scopeParser*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&, jule::Ptr<_1e47137a5_Token>&);
inline jule::Ptr<_1e5d6826b_Iter> _1c99c791e_buildCommonIter(_1c99c2d26_scopeParser*, jule::Slice<jule::Ptr<_1e47137a5_Token>>);
inline jule::Ptr<_1e5d6826b_Iter> _1c99c7c2c_buildIterSt(_1c99c2d26_scopeParser*, jule::Ptr<_1c99c24eb_stmt>&);
inline jule::Ptr<_1e5d69789_BreakSt> _1c99c803a_buildBreakSt(_1c99c2d26_scopeParser*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Ptr<_1e5d69b41_ContSt> _1c99c8348_buildContSt(_1c99c2d26_scopeParser*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Ptr<_1e5d6a0b4_If> _1c99c8656_buildIf(_1c99c2d26_scopeParser*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Ptr<_1e5d6a46b_Else> _1c99c8964_buildElse(_1c99c2d26_scopeParser*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Ptr<_1e5d6a8de_Conditional> _1c99c8c72_buildIfElseChain(_1c99c2d26_scopeParser*, jule::Slice<jule::Ptr<_1e47137a5_Token>>);
inline jule::Ptr<_1e5d5aa77_CoExpr> _1c99c9080_buildCoCallSt(_1c99c2d26_scopeParser*, jule::Slice<jule::Ptr<_1e47137a5_Token>>);
inline jule::Ptr<_1e5d627a4_GotoSt> _1c99c938d_buildGotoSt(_1c99c2d26_scopeParser*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Ptr<_1e5d62a90_FallSt> _1c99c969b_buildFallSt(_1c99c2d26_scopeParser*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Ptr<_1e5d6b0b5_TypeAliasDecl> _1c99c99a9_buildTypeAliasSt(_1c99c2d26_scopeParser*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline void _1c99c9e1b_pushCaseExpr(_1c99c2d26_scopeParser*, jule::Slice<jule::Ptr<_1e47137a5_Token>>, jule::Ptr<_1e47137a5_Token>, jule::Bool, jule::Slice<jule::Ptr<_1e5d58e82_Expr>>&);
inline jule::Slice<jule::Ptr<_1e5d58e82_Expr>> _1c99ca2c3_buildCaseExprs(_1c99c2d26_scopeParser*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&, jule::Bool);
inline jule::Ptr<_1e5d64c7e_ScopeTree> _1c99ca5d1_buildCaseScope(_1c99c2d26_scopeParser*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline std::tuple<jule::Ptr<_1e5d6b538_Case>,jule::Bool> _1c99ca988_buildCase(_1c99c2d26_scopeParser*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&, jule::Bool);
inline std::tuple<jule::Slice<jule::Ptr<_1e5d6b538_Case>>,jule::Ptr<_1e5d6a46b_Else>> _1c99cad40_buildCases(_1c99c2d26_scopeParser*, jule::Slice<jule::Ptr<_1e47137a5_Token>>, jule::Bool);
inline jule::Ptr<_1e5d6bc0e_MatchCase> _1c99cb14d_buildMatchCase(_1c99c2d26_scopeParser*, jule::Slice<jule::Ptr<_1e47137a5_Token>>);
inline jule::Ptr<_1e5d64c7e_ScopeTree> _1c99cb45b_buildScopeSt(_1c99c2d26_scopeParser*, jule::Slice<jule::Ptr<_1e47137a5_Token>>);
inline jule::Ptr<_1e5d623ec_LabelSt> _1c99cb769_buildLabelSt(_1c99c2d26_scopeParser*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline std::tuple<jule::Any,jule::Bool> _1c99cba77_buildIdSt(_1c99c2d26_scopeParser*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Ptr<_1c99da4c0_assignInfo> _1c99cbd85_buildAssignInfo(_1c99c2d26_scopeParser*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Ptr<_1e5d6319a_AssignLeft> _1c99cc193_buildAssignL(_1c99c2d26_scopeParser*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Slice<jule::Ptr<_1e5d6319a_AssignLeft>> _1c99cc4a1_buildAssignLs(_1c99c2d26_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>>&);
inline std::tuple<jule::Ptr<_1e5d636d9_AssignSt>,jule::Bool> _1c99cc7ae_buildPlainAssign(_1c99c2d26_scopeParser*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline std::tuple<jule::Ptr<_1e5d636d9_AssignSt>,jule::Bool> _1c99ccabc_buildDeclAssign(_1c99c2d26_scopeParser*, jule::Slice<jule::Ptr<_1e47137a5_Token>>);
inline std::tuple<jule::Ptr<_1e5d636d9_AssignSt>,jule::Bool> _1c99ccdca_buildAssignSt(_1c99c2d26_scopeParser*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Ptr<_1e5d59823_UseExpr> _1c99cd1d8_buildUseExpr(_1c99c2d26_scopeParser*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Any _1c99cd4e6_buildSt(_1c99c2d26_scopeParser*, jule::Ptr<_1c99c24eb_stmt>&);
inline void _1c99cd815_build(_1c99c2d26_scopeParser*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&, jule::Ptr<_1e5d64c7e_ScopeTree>&);
struct _1c99c2d26_scopeParser {
	jule::Ptr<_1c99ddced_parser> _field_p = jule::Ptr<_1c99ddced_parser>();
	jule::Ptr<_1e5d64c7e_ScopeTree> _field_s = jule::Ptr<_1e5d64c7e_ScopeTree>();
	jule::Slice<jule::Ptr<_1c99c24eb_stmt>> _field_stmts = jule::Slice<jule::Ptr<_1c99c24eb_stmt>>();
	jule::I64 _field_pos = jule::I64();
	

	_1c99c2d26_scopeParser(void) = default;

	inline bool operator==(_1c99c2d26_scopeParser _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1c99c2d26_scopeParser _other) { return !this->operator==(_other); }


};
inline void _1c99d098d_pushErr(_1c99d0185_exprBuilder*, jule::Ptr<_1e47137a5_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c99d0cac_pushSuggestion(_1c99d0185_exprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1e5d59b0e_TupleExpr> _1c99d10ba_buildTuple(_1c99d0185_exprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>>&);
inline jule::Ptr<_1e5d59eb6_LitExpr> _1c99d13c8_buildLit(_1c99d0185_exprBuilder*, jule::Ptr<_1e47137a5_Token>);
inline jule::Ptr<_1e5d54961_TypeDecl> _1c99d16d6_buildPrimitiveType(_1c99d0185_exprBuilder*, jule::Ptr<_1e47137a5_Token>&);
inline jule::Any _1c99d19e4_buildSingle(_1c99d0185_exprBuilder*, jule::Ptr<_1e47137a5_Token>);
inline jule::Ptr<_1e5d5aeea_IdentExpr> _1c99d1d02_buildCppLinkedIdent(_1c99d0185_exprBuilder*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Ptr<_1e5d5b704_UnaryExpr> _1c99d2110_buildUnary(_1c99d0185_exprBuilder*, jule::Slice<jule::Ptr<_1e47137a5_Token>>);
inline jule::Ptr<_1e5d5c78d_SubIdentExpr> _1c99d241d_buildObjSubIdent(_1c99d0185_exprBuilder*, jule::Slice<jule::Ptr<_1e47137a5_Token>>);
inline jule::Ptr<_1e5d5c31a_NsSelectionExpr> _1c99d272b_buildNsSubIdent(_1c99d0185_exprBuilder*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Ptr<_1e5d54961_TypeDecl> _1c99d2a39_buildType(_1c99d0185_exprBuilder*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Any _1c99d2d47_buildSubIdent(_1c99d0185_exprBuilder*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Ptr<_1e5d5baab_VariadicExpr> _1c99d3155_buildVariadic(_1c99d0185_exprBuilder*, jule::Slice<jule::Ptr<_1e47137a5_Token>>);
inline jule::Any _1c99d3463_buildOpRight(_1c99d0185_exprBuilder*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Ptr<_1e5d5926d_RangeExpr> _1c99d3793_buildBetweenParentheses(_1c99d0185_exprBuilder*, jule::Slice<jule::Ptr<_1e47137a5_Token>>);
inline jule::Ptr<_1e5d5be63_CastExpr> _1c99d3ab2_tryBuildCast(_1c99d0185_exprBuilder*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline void _1c99d3e7a_pushArg(_1c99d0185_exprBuilder*, jule::Slice<jule::Ptr<_1e5d58e82_Expr>>&, jule::Slice<jule::Ptr<_1e47137a5_Token>>, jule::Ptr<_1e47137a5_Token>);
inline jule::Slice<jule::Ptr<_1e5d58e82_Expr>> _1c99d4288_buildArgs(_1c99d0185_exprBuilder*, jule::Slice<jule::Ptr<_1e47137a5_Token>>);
inline jule::Slice<jule::Ptr<_1e5d54961_TypeDecl>> _1c99d4596_buildCallGenerics(_1c99d0185_exprBuilder*, jule::Slice<jule::Ptr<_1e47137a5_Token>>);
inline jule::Ptr<_1e5d5d250_FnCallExpr> _1c99d49e7_buildFnCall(_1c99d0185_exprBuilder*, jule::Ptr<_1e47137a5_Token>&, jule::Slice<jule::Ptr<_1e47137a5_Token>>&, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Any _1c99d4d05_buildParenthesesRange(_1c99d0185_exprBuilder*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Ptr<_1e5d5a6c0_UnsafeExpr> _1c99d5113_buildUnsafeExpr(_1c99d0185_exprBuilder*, jule::Slice<jule::Ptr<_1e47137a5_Token>>);
inline jule::Ptr<_1e5d66775_FnDecl> _1c99d5421_buildAnonFn(_1c99d0185_exprBuilder*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Any _1c99d572e_buildUnsafe(_1c99d0185_exprBuilder*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline void _1c99d5ae7_pushRangeLitPart(_1c99d0185_exprBuilder*, jule::Slice<jule::Ptr<_1e47137a5_Token>>, jule::Ptr<_1e47137a5_Token>, jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>> _1c99d5e27_getBraceRangeLitExprParts(_1c99d0185_exprBuilder*, jule::Slice<jule::Ptr<_1e47137a5_Token>>);
inline jule::Ptr<_1e5d5dbce_FieldExprPair> _1c99d6246_buildFieldExprPair(_1c99d0185_exprBuilder*, jule::Slice<jule::Ptr<_1e47137a5_Token>>);
inline jule::Ptr<_1e5d58e82_Expr> _1c99d6554_buildStructLitExpr(_1c99d0185_exprBuilder*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Slice<jule::Ptr<_1e5d58e82_Expr>> _1c99d6862_buildStructLitExprs(_1c99d0185_exprBuilder*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Ptr<_1e5d5e42c_StructLit> _1c99d6b92_buildTypedStructLiteral(_1c99d0185_exprBuilder*, jule::Slice<jule::Ptr<_1e47137a5_Token>>);
inline jule::Ptr<_1e5d58e82_Expr> _1c99d6eb1_buildBraceLitPart(_1c99d0185_exprBuilder*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Ptr<_1e5d5e8a0_BraceLit> _1c99d72be_buildBraceLit(_1c99d0185_exprBuilder*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Any _1c99d75cc_buildBraceRange(_1c99d0185_exprBuilder*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>> _1c99d78da_getEnumerableParts(_1c99d0185_exprBuilder*, jule::Slice<jule::Ptr<_1e47137a5_Token>>);
inline jule::Ptr<_1e5d6083a_SliceExpr> _1c99d7be8_buildSlice(_1c99d0185_exprBuilder*, jule::Slice<jule::Ptr<_1e47137a5_Token>>);
inline jule::Ptr<_1e5d611cb_IndexingExpr> _1c99d8149_buildIndexing(_1c99d0185_exprBuilder*, jule::Slice<jule::Ptr<_1e47137a5_Token>>, jule::Slice<jule::Ptr<_1e47137a5_Token>>, jule::Ptr<_1e47137a5_Token>);
inline jule::Ptr<_1e5d617d6_SlicingExpr> _1c99d86dd_buildSlicing(_1c99d0185_exprBuilder*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&, jule::Slice<jule::Ptr<_1e47137a5_Token>>&, jule::Slice<jule::Ptr<_1e47137a5_Token>>&, jule::Ptr<_1e47137a5_Token>&, jule::Ptr<_1e47137a5_Token>);
inline jule::Any _1c99d89eb_buildBracketRange(_1c99d0185_exprBuilder*, jule::Slice<jule::Ptr<_1e47137a5_Token>>);
inline jule::Any _1c99d8d09_buildData(_1c99d0185_exprBuilder*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Ptr<_1e5d5cc11_BinopExpr> _1c99d91b1_buildBinop(_1c99d0185_exprBuilder*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&, jule::I64);
inline jule::Any _1c99d94be_build(_1c99d0185_exprBuilder*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Any _1c99d97cc_buildKind(_1c99d0185_exprBuilder*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Ptr<_1e5d58e82_Expr> _1c99d9ada_buildFromTokens(_1c99d0185_exprBuilder*, jule::Slice<jule::Ptr<_1e47137a5_Token>>);
struct _1c99d0185_exprBuilder {
	jule::Ptr<_1c99ddced_parser> _field_p = jule::Ptr<_1c99ddced_parser>();
	

	_1c99d0185_exprBuilder(void) = default;

	inline bool operator==(_1c99d0185_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1c99d0185_exprBuilder _other) { return !this->operator==(_other); }


};
struct _1c99da4c0_assignInfo {
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _field_l = jule::Slice<jule::Ptr<_1e47137a5_Token>>();
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _field_r = jule::Slice<jule::Ptr<_1e47137a5_Token>>();
	jule::Ptr<_1e47137a5_Token> _field_setter = jule::Ptr<_1e47137a5_Token>();
	jule::Bool _field_ok = jule::Bool();
	

	_1c99da4c0_assignInfo(void) = default;

	inline bool operator==(_1c99da4c0_assignInfo _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_setter == _other._field_setter &&
			this->_field_ok == _other._field_ok;
	}

	inline bool operator!=(_1c99da4c0_assignInfo _other) { return !this->operator==(_other); }


};
inline void _1c99de12d_stop(_1c99ddced_parser*);
inline jule::Bool _1c99de392_stopped(_1c99ddced_parser*);
inline void _1c99de75a_pushErr(_1c99ddced_parser*, jule::Ptr<_1e47137a5_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c99dea79_pushSuggestion(_1c99ddced_parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1e5d58e82_Expr> _1c99ded87_buildExpr(jule::Ptr<_1c99ddced_parser>, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Ptr<_1e5d21268_Directive> _1c99e0195_buildDirective(_1c99ddced_parser*, jule::Slice<jule::Ptr<_1e47137a5_Token>>);
inline void _1c99e041a_pushDirective(_1c99ddced_parser*, jule::Ptr<_1e5d21268_Directive>);
inline jule::Ptr<_1e5d64c7e_ScopeTree> _1c99e07c2_buildScope(jule::Ptr<_1c99ddced_parser>, jule::Slice<jule::Ptr<_1e47137a5_Token>>&, jule::Ptr<_1e47137a5_Token>);
inline std::tuple<jule::Ptr<_1e5d54961_TypeDecl>,jule::Bool> _1c99e0c23__buildType(jule::Ptr<_1c99ddced_parser>, jule::Slice<jule::Ptr<_1e47137a5_Token>>&, jule::I64*, jule::Bool);
inline std::tuple<jule::Ptr<_1e5d54961_TypeDecl>,jule::Bool> _1c99e1174_buildType(jule::Ptr<_1c99ddced_parser>, jule::Slice<jule::Ptr<_1e47137a5_Token>>&, jule::I64*, jule::Bool);
inline jule::Ptr<_1e5d6b0b5_TypeAliasDecl> _1c99e1482_buildTypeAliasDecl(jule::Ptr<_1c99ddced_parser>, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline void _1c99e17a1_buildVarTypeAndExpr(jule::Ptr<_1c99ddced_parser>, jule::Ptr<_1e5d67754_VarDecl>&, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline void _1c99e1ac0_buildVarCommon(jule::Ptr<_1c99ddced_parser>, jule::Ptr<_1e5d67754_VarDecl>&, jule::Slice<jule::Ptr<_1e47137a5_Token>>);
inline void _1c99e1e88_buildVarBegin(_1c99ddced_parser*, jule::Ptr<_1e5d67754_VarDecl>&, jule::I64&, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Ptr<_1e5d67754_VarDecl> _1c99e2296_buildVar(jule::Ptr<_1c99ddced_parser>, jule::Slice<jule::Ptr<_1e47137a5_Token>>);
inline jule::Ptr<_1e5d62045_GenericDecl> _1c99e25a4_buildGeneric(jule::Ptr<_1c99ddced_parser>, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Slice<jule::Ptr<_1e5d62045_GenericDecl>> _1c99e295b_buildGenerics(jule::Ptr<_1c99ddced_parser>, jule::Slice<jule::Ptr<_1e47137a5_Token>>&, jule::Ptr<_1e47137a5_Token>&);
inline jule::Ptr<_1e5d65455_ParamDecl> _1c99e2c69_buildSelfParam(_1c99ddced_parser*, jule::Slice<jule::Ptr<_1e47137a5_Token>>);
inline void _1c99e3132_paramTypeBegin(_1c99ddced_parser*, jule::Ptr<_1e5d65455_ParamDecl>&, jule::I64&, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline void _1c99e3451_buildParamType(jule::Ptr<_1c99ddced_parser>, jule::Ptr<_1e5d65455_ParamDecl>&, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline void _1c99e3770_buildParamBody(jule::Ptr<_1c99ddced_parser>, jule::Ptr<_1e5d65455_ParamDecl>&, jule::Slice<jule::Ptr<_1e47137a5_Token>>);
inline jule::Ptr<_1e5d65455_ParamDecl> _1c99e3a7d_buildParam(jule::Ptr<_1c99ddced_parser>, jule::Slice<jule::Ptr<_1e47137a5_Token>>);
inline void _1c99e3d03_checkParams(_1c99ddced_parser*, jule::Slice<jule::Ptr<_1e5d65455_ParamDecl>>&);
inline jule::Slice<jule::Ptr<_1e5d65455_ParamDecl>> _1c99e41aa_buildParams(jule::Ptr<_1c99ddced_parser>, jule::Slice<jule::Ptr<_1e47137a5_Token>>&, jule::Bool);
inline std::tuple<jule::Ptr<_1e5d57a74_RetTypeDecl>,jule::Bool> _1c99e4562_buildMultiRetType(jule::Ptr<_1c99ddced_parser>, jule::Slice<jule::Ptr<_1e47137a5_Token>>&, jule::I64&);
inline std::tuple<jule::Ptr<_1e5d57a74_RetTypeDecl>,jule::Bool> _1c99e4919_buildRetType(jule::Ptr<_1c99ddced_parser>, jule::Slice<jule::Ptr<_1e47137a5_Token>>&, jule::I64&);
inline jule::Ptr<_1e5d66775_FnDecl> _1c99e4d6a_buildFnPrototype(jule::Ptr<_1c99ddced_parser>, jule::Slice<jule::Ptr<_1e47137a5_Token>>&, jule::I64&, jule::Bool);
inline jule::Ptr<_1e5d66775_FnDecl> _1c99e52bb_buildFn(jule::Ptr<_1c99ddced_parser>, jule::Slice<jule::Ptr<_1e47137a5_Token>>&, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_1e47137a5_Token>> _1c99e55c9_getUseDeclSelectors(_1c99ddced_parser*, jule::Slice<jule::Ptr<_1e47137a5_Token>>);
inline void _1c99e58e8_buildCppUseDecl(_1c99ddced_parser*, jule::Ptr<_1e5d6c4a1_UseDecl>&, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline void _1c99e5c17_buildStdUseDecl(_1c99ddced_parser*, jule::Ptr<_1e5d6c4a1_UseDecl>&, jule::Slice<jule::Ptr<_1e47137a5_Token>>);
inline void _1c99e6036_buildIdentUseDecl(_1c99ddced_parser*, jule::Ptr<_1e5d6c4a1_UseDecl>&, jule::Slice<jule::Ptr<_1e47137a5_Token>>);
inline void _1c99e6355_parseUseDecl(_1c99ddced_parser*, jule::Ptr<_1e5d6c4a1_UseDecl>&, jule::Slice<jule::Ptr<_1e47137a5_Token>>);
inline jule::Ptr<_1e5d6c4a1_UseDecl> _1c99e670c_buildUseDecl(_1c99ddced_parser*, jule::Slice<jule::Ptr<_1e47137a5_Token>>, jule::Bool);
inline jule::Ptr<_1e5d54961_TypeDecl> _1c99e6ab4_buildTypeEnumItemKind(jule::Ptr<_1c99ddced_parser>, jule::I64&, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Slice<jule::Ptr<_1e5d6de53_TypeEnumItemDecl>> _1c99e6dc2_buildTypeEnumItems(jule::Ptr<_1c99ddced_parser>, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Ptr<_1e5d6e151_TypeEnumDecl> _1c99e71d0_buildTypeEnumDecl(jule::Ptr<_1c99ddced_parser>, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Ptr<_1e5d58e82_Expr> _1c99e7587_buildEnumItemExpr(jule::Ptr<_1c99ddced_parser>, jule::I64&, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Slice<jule::Ptr<_1e5d6c924_EnumItemDecl>> _1c99e7895_buildEnumItems(jule::Ptr<_1c99ddced_parser>, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Ptr<_1e5d6d44c_EnumDecl> _1c99e7ba3_buildEnumDecl(jule::Ptr<_1c99ddced_parser>, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Any _1c99e7eb1_buildNodeEnumDecl(jule::Ptr<_1c99ddced_parser>, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Ptr<_1e5d6e6a1_FieldDecl> _1c99e82be_buildField(jule::Ptr<_1c99ddced_parser>, jule::Slice<jule::Ptr<_1e47137a5_Token>>);
inline jule::Slice<jule::Ptr<_1e5d6e6a1_FieldDecl>> _1c99e85cc_buildStructDeclFields(jule::Ptr<_1c99ddced_parser>, jule::Slice<jule::Ptr<_1e47137a5_Token>>);
inline jule::Ptr<_1e5d7000e_StructDecl> _1c99e88da_buildStructDecl(jule::Ptr<_1c99ddced_parser>, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline void _1c99e8b60_checkMethodReceiver(_1c99ddced_parser*, jule::Ptr<_1e5d66775_FnDecl>&);
inline jule::Slice<jule::Ptr<_1e5d66775_FnDecl>> _1c99e8e6d_buildTraitMethods(jule::Ptr<_1c99ddced_parser>, jule::Slice<jule::Ptr<_1e47137a5_Token>>);
inline jule::Ptr<_1e5d70619_TraitDecl> _1c99e927b_buildTraitDecl(jule::Ptr<_1c99ddced_parser>, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Ptr<_1e5d66775_FnDecl> _1c99e9589_buildCppLinkFn(jule::Ptr<_1c99ddced_parser>, jule::Slice<jule::Ptr<_1e47137a5_Token>>);
inline jule::Ptr<_1e5d67754_VarDecl> _1c99e9897_buildCppLinkVar(jule::Ptr<_1c99ddced_parser>, jule::Slice<jule::Ptr<_1e47137a5_Token>>);
inline jule::Ptr<_1e5d7000e_StructDecl> _1c99e9ba5_buildCppLinkStruct(jule::Ptr<_1c99ddced_parser>, jule::Slice<jule::Ptr<_1e47137a5_Token>>);
inline jule::Ptr<_1e5d6b0b5_TypeAliasDecl> _1c99e9eb3_buildCppLinkTypeAlias(jule::Ptr<_1c99ddced_parser>, jule::Slice<jule::Ptr<_1e47137a5_Token>>);
inline jule::Ptr<_1e5d6c4a1_UseDecl> _1c99ea2c1_buildCppLinkUse(jule::Ptr<_1c99ddced_parser>, jule::Slice<jule::Ptr<_1e47137a5_Token>>);
inline jule::Any _1c99ea5ce_buildCppLink(jule::Ptr<_1c99ddced_parser>, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Ptr<_1e5d66775_FnDecl> _1c99ea8dc_getMethod(jule::Ptr<_1c99ddced_parser>, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline void _1c99eac0b_parseImplBody(jule::Ptr<_1c99ddced_parser>, jule::Ptr<_1e5d70c24_Impl>&, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Ptr<_1e5d70c24_Impl> _1c99eb019_buildImpl(jule::Ptr<_1c99ddced_parser>, jule::Slice<jule::Ptr<_1e47137a5_Token>>);
inline jule::Any _1c99eb327_buildNodeData(jule::Ptr<_1c99ddced_parser>, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline void _1c99eb59c_applyFnMeta(_1c99ddced_parser*, jule::Ptr<_1e5d66775_FnDecl>&);
inline void _1c99eb822_applyMeta(_1c99ddced_parser*, _1e5d20d6c_Node&);
inline void _1c99eba97_pushUseDecl(jule::Ptr<_1c99ddced_parser>, jule::Ptr<_1e5d6c4a1_UseDecl>&);
inline jule::Bool _1c99ebda5_pushMetaNodes(jule::Ptr<_1c99ddced_parser>, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline _1e5d20d6c_Node _1c99ec1b3_parseNode(jule::Ptr<_1c99ddced_parser>, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline void _1c99ec438_appendNode(jule::Ptr<_1c99ddced_parser>, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline void _1c99ec89a_removeRange(_1c99ddced_parser*, jule::I64, jule::Str, jule::Slice<jule::Ptr<_1e47137a5_Token>>&, jule::Slice<jule::I64>&);
inline void _1c99ecc63_pushWrongOrderCloseErr(_1c99ddced_parser*, jule::Ptr<_1e47137a5_Token>&, jule::Slice<jule::Ptr<_1e47137a5_Token>>&, jule::Slice<jule::I64>&);
inline void _1c99ed1c5_pushRangeClose(_1c99ddced_parser*, jule::Ptr<_1e47137a5_Token>, jule::Str, jule::Slice<jule::Ptr<_1e47137a5_Token>>&, jule::Slice<jule::I64>&);
inline void _1c99ed44a_checkRanges(_1c99ddced_parser*, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline void _1c99ed6c0_parse(jule::Ptr<_1c99ddced_parser>, jule::Ptr<_1e4718b40_File>&);
struct _1c99ddced_parser {
	jule::Ptr<_1e5d201bd_Ast> _field_ast = jule::Ptr<_1e5d201bd_Ast>();
	jule::Slice<jule::Ptr<_1e5d21268_Directive>> _field_directives = jule::Slice<jule::Ptr<_1e5d21268_Directive>>();
	jule::Slice<_1e43e3a18_Log> _field_errors = jule::Slice<_1e43e3a18_Log>();
	

	_1c99ddced_parser(void) = default;

	inline bool operator==(_1c99ddced_parser _other) {
		return 
			this->_field_ast == _other._field_ast &&
			this->_field_directives == _other._field_directives &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1c99ddced_parser _other) { return !this->operator==(_other); }


};
inline void _1c9a0046e_pushErr(_1c99eedca_typeBuilder*, jule::Ptr<_1e47137a5_Token>, jule::Str);
inline void _1c9a0078d_pushSuggestion(_1c99eedca_typeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1e5d54961_TypeDecl> _1c9a00a02_buildPrim(_1c99eedca_typeBuilder*);
inline jule::Ptr<_1e5d54961_TypeDecl> _1c9a00c66_buildNamespace(_1c99eedca_typeBuilder*);
inline jule::Slice<jule::Ptr<_1e5d54961_TypeDecl>> _1c9a00eca_buildGenerics(_1c99eedca_typeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>> _1c9a0123e_identGenerics(_1c99eedca_typeBuilder*);
inline jule::Ptr<_1e5d54961_TypeDecl> _1c9a014a3_buildIdent(_1c99eedca_typeBuilder*);
inline jule::Ptr<_1e5d54961_TypeDecl> _1c9a01717_buildCppLink(_1c99eedca_typeBuilder*);
inline jule::Ptr<_1e5d54961_TypeDecl> _1c9a0197b_buildFn(_1c99eedca_typeBuilder*);
inline jule::Ptr<_1e5d54961_TypeDecl> _1c9a01be0_buildPtr(_1c99eedca_typeBuilder*);
inline jule::Ptr<_1e5d54961_TypeDecl> _1c9a01e54_buildSptr(_1c99eedca_typeBuilder*);
inline jule::Ptr<_1e5d54961_TypeDecl> _1c9a021b8_buildOp(_1c99eedca_typeBuilder*);
inline jule::Ptr<_1e5d54961_TypeDecl> _1c9a0242c_buildSlc(_1c99eedca_typeBuilder*);
inline jule::Ptr<_1e5d54961_TypeDecl> _1c9a02691_buildArr(_1c99eedca_typeBuilder*);
inline jule::Ptr<_1e5d54961_TypeDecl> _1c9a02a48_buildMap(_1c99eedca_typeBuilder*, jule::I64, jule::I64);
inline jule::Ptr<_1e5d54961_TypeDecl> _1c9a02cac_buildEnumerable(_1c99eedca_typeBuilder*);
inline jule::Ptr<_1e5d54961_TypeDecl> _1c9a03021_step(_1c99eedca_typeBuilder*);
inline std::tuple<jule::Ptr<_1e5d54961_TypeDecl>,jule::Bool> _1c9a03285_build(_1c99eedca_typeBuilder*);
struct _1c99eedca_typeBuilder {
	jule::Ptr<_1c99ddced_parser> _field_p = jule::Ptr<_1c99ddced_parser>();
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _field_tokens = jule::Slice<jule::Ptr<_1e47137a5_Token>>();
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = jule::Bool();
	

	_1c99eedca_typeBuilder(void) = default;

	inline bool operator==(_1c99eedca_typeBuilder _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_i == _other._field_i &&
			this->_field_err == _other._field_err;
	}

	inline bool operator!=(_1c99eedca_typeBuilder _other) { return !this->operator==(_other); }


};
struct _1e6b9452a_CompileInfo {
	jule::Bool _field_Prod = jule::Bool();
	jule::Bool _field_Test = jule::Bool();
	jule::Str _field_Compiler = jule::Str("clang", 5);
	jule::Str _field_CppStd = jule::Str("cpp14", 5);
	

	_1e6b9452a_CompileInfo(void) = default;

	inline bool operator==(_1e6b9452a_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_1e6b9452a_CompileInfo _other) { return !this->operator==(_other); }


};
inline void _1e6b95dcd_pushErr(_1e6b9587d_directiveEval*, jule::Ptr<_1e47137a5_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>> _1e6b96285_splitOperans(_1e6b9587d_directiveEval*, jule::Str, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Bool _1e6b96593_evalDirectiveIdent(_1e6b9587d_directiveEval*, jule::Str);
inline jule::Bool _1e6b968a1_evalDirectivePart(_1e6b9587d_directiveEval*, jule::Slice<jule::Ptr<_1e47137a5_Token>>);
inline jule::Bool _1e6b96b15_eval(_1e6b9587d_directiveEval*);
struct _1e6b9587d_directiveEval {
	jule::Slice<_1e43e3a18_Log> _field_logs = jule::Slice<_1e43e3a18_Log>();
	jule::Ptr<_1e5d21268_Directive> _field_d = jule::Ptr<_1e5d21268_Directive>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();
	

	_1e6b9587d_directiveEval(void) = default;

	inline bool operator==(_1e6b9587d_directiveEval _other) {
		return 
			this->_field_logs == _other._field_logs &&
			this->_field_d == _other._field_d &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_1e6b9587d_directiveEval _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e708dccb_JuleImporter> static__1e6ee9572_New(_1e6b9452a_CompileInfo);
inline jule::Slice<jule::Ptr<_1e6a192e5_ImportInfo>> _1e700a671_AllPackages(_1e708dccb_JuleImporter*);
inline void _1e7015a00_SetModPath(_1e708dccb_JuleImporter*, jule::Str);
inline jule::Str _1e7061650_GetModPath(_1e708dccb_JuleImporter*);
inline jule::Str _1e7063784_ModById(_1e708dccb_JuleImporter*, jule::I64);
inline jule::Ptr<_1e6a192e5_ImportInfo> _1e7073222_GetImport(_1e708dccb_JuleImporter*, jule::Str);
inline std::tuple<jule::Slice<jule::Ptr<_1e5d201bd_Ast>>,jule::Slice<_1e43e3a18_Log>> _1c8b8aa6c_ImportPackage(_1e708dccb_JuleImporter*, jule::Str, jule::Bool);
inline void _1c8b94c96_Imported(_1e708dccb_JuleImporter*, jule::Ptr<_1e6a192e5_ImportInfo>);
inline std::tuple<jule::Bool,jule::Slice<_1e43e3a18_Log>> _1c8bac4ea_isPassBuildDirectives(_1e708dccb_JuleImporter*, jule::Ptr<_1e5d201bd_Ast>&);
struct _1e708dccb_JuleImporter {
	jule::Slice<jule::Str> _field_mods = jule::Slice<jule::Str>();
	jule::Str _field_mod = jule::Str();
	jule::Slice<jule::Ptr<_1e6a192e5_ImportInfo>> _field_pkgs = jule::Slice<jule::Ptr<_1e6a192e5_ImportInfo>>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();
	

	_1e708dccb_JuleImporter(void) = default;

	inline bool operator==(_1e708dccb_JuleImporter _other) {
		return 
			this->_field_mods == _other._field_mods &&
			this->_field_mod == _other._field_mod &&
			this->_field_pkgs == _other._field_pkgs &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_1e708dccb_JuleImporter _other) { return !this->operator==(_other); }


};
struct _1c8ba744b_OrderedDefines {
	jule::Slice<jule::Ptr<_1e5d4518d_Struct>> _field_Structs = jule::Slice<jule::Ptr<_1e5d4518d_Struct>>();
	jule::Slice<jule::Ptr<_1e6a3dd20_Var>> _field_Globals = jule::Slice<jule::Ptr<_1e6a3dd20_Var>>();
	

	_1c8ba744b_OrderedDefines(void) = default;

	inline bool operator==(_1c8ba744b_OrderedDefines _other) {
		return 
			this->_field_Structs == _other._field_Structs &&
			this->_field_Globals == _other._field_Globals;
	}

	inline bool operator!=(_1c8ba744b_OrderedDefines _other) { return !this->operator==(_other); }


};
inline jule::Bool _1b323c51e_isCommonOrdered(jule::Slice<jule::Ptr<_1e5d4518d_Struct>>&, jule::Ptr<_1e5d4518d_Struct>);
inline jule::Bool _1b32458ce_isCommonOrdered(jule::Slice<jule::Ptr<_1e6a3dd20_Var>>&, jule::Ptr<_1e6a3dd20_Var>);
inline void _1b323855e_orderCommon(jule::Slice<jule::Ptr<_1e5d4518d_Struct>>&);
inline void _1b323877e_orderCommon(jule::Slice<jule::Ptr<_1e6a3dd20_Var>>&);
inline void static__1c8cda5c3_orderStructures(jule::Slice<jule::Ptr<_1e5d4518d_Struct>>&);
inline void static__1c8d04356_orderVars(jule::Slice<jule::Ptr<_1e6a3dd20_Var>>&);
struct _1c8b885d6_defineOrderer {
	

	_1c8b885d6_defineOrderer(void) = default;

	inline bool operator==(_1c8b885d6_defineOrderer _other) { return true; }

	inline bool operator!=(_1c8b885d6_defineOrderer _other) { return !this->operator==(_other); }


};
struct _1c9acde98_liveTable {
	jule::Slice<jule::Ptr<_1e6a3dd20_Var>> _field_vars = jule::Slice<jule::Ptr<_1e6a3dd20_Var>>();
	jule::Slice<jule::Ptr<_1e5e202ce_FnIns>> _field_fns = jule::Slice<jule::Ptr<_1e5e202ce_FnIns>>();
	jule::Slice<jule::Ptr<_1e5d714d8_StructIns>> _field_structs = jule::Slice<jule::Ptr<_1e5d714d8_StructIns>>();
	jule::Slice<jule::Ptr<_1e5e2e4db_Trait>> _field_traits = jule::Slice<jule::Ptr<_1e5e2e4db_Trait>>();
	

	_1c9acde98_liveTable(void) = default;

	inline bool operator==(_1c9acde98_liveTable _other) {
		return 
			this->_field_vars == _other._field_vars &&
			this->_field_fns == _other._field_fns &&
			this->_field_structs == _other._field_structs &&
			this->_field_traits == _other._field_traits;
	}

	inline bool operator!=(_1c9acde98_liveTable _other) { return !this->operator==(_other); }


};
inline void _1c9b110a7_optimizeChild(jule::Ptr<_1c9b10ace_scopeDeadCode>, jule::Ptr<_1e6a06700_Scope>&);
inline void _1c9b1134e_optimizeBodyChildExceptional(jule::Ptr<_1c9b10ace_scopeDeadCode>, jule::Ptr<_1e6a06700_Scope>&);
inline void _1c9b115d5_optimizeBodyChild(jule::Ptr<_1c9b10ace_scopeDeadCode>, jule::Ptr<_1e6a06700_Scope>&);
inline void _1c9b1185a_optimizeExprModel(jule::Ptr<_1c9b10ace_scopeDeadCode>, jule::Any&);
inline void _1c9b11a36_eliminateFollowed(_1c9b10ace_scopeDeadCode*);
inline void _1c9b11cab_pushGoto(jule::Ptr<_1c9b10ace_scopeDeadCode>, jule::Ptr<_1e6a07b30_GotoSt>);
inline void _1c9b12031_pushLabel(jule::Ptr<_1c9b10ace_scopeDeadCode>, jule::Ptr<_1e6a07943_Label>);
inline void _1c9b122a6_optimizeRangeIter(jule::Ptr<_1c9b10ace_scopeDeadCode>, jule::Ptr<_1e6a0737c_RangeIter>);
inline void _1c9b1252b_optimizeWhileIter(jule::Ptr<_1c9b10ace_scopeDeadCode>, jule::Ptr<_1e6a07190_WhileIter>);
inline void _1c9b127a1_optimizeInfIter(jule::Ptr<_1c9b10ace_scopeDeadCode>, jule::Ptr<_1e6a06ea3_InfIter>);
inline void _1c9b12a26_optimizeConditional(jule::Ptr<_1c9b10ace_scopeDeadCode>, jule::Ptr<_1e6a06cb6_Conditional>);
inline void _1c9b12c9b_optimizeMatch(jule::Ptr<_1c9b10ace_scopeDeadCode>, jule::Ptr<_1e6a083d3_Match>);
inline void _1c9b13021_optimizeAssign(jule::Ptr<_1c9b10ace_scopeDeadCode>, jule::Ptr<_1e6a08009_Assign>);
inline void _1c9b13296_optimizeMultiAssign(jule::Ptr<_1c9b10ace_scopeDeadCode>, jule::Ptr<_1e6a081e6_MultiAssign>);
inline void _1c9b1351b_optimizeStmt(jule::Ptr<_1c9b10ace_scopeDeadCode>, jule::Any);
inline void _1c9b136e7_optimizeStmts(jule::Ptr<_1c9b10ace_scopeDeadCode>);
struct _1c9b10ace_scopeDeadCode {
	jule::Ptr<_1c9b10ace_scopeDeadCode> _field_parent = jule::Ptr<_1c9b10ace_scopeDeadCode>();
	jule::Ptr<_1e6a06700_Scope> _field_s = jule::Ptr<_1e6a06700_Scope>();
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = jule::I64();
	jule::Ptr<jule::Slice<jule::Ptr<_1e6a07943_Label>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_1e6a07943_Label>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_1e6a07b30_GotoSt>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_1e6a07b30_GotoSt>>>();
	jule::Bool _field_except = jule::Bool();
	

	_1c9b10ace_scopeDeadCode(void) = default;

	inline bool operator==(_1c9b10ace_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_1c9b10ace_scopeDeadCode _other) { return !this->operator==(_other); }


};
inline _1c9b14a39_exprDeadCode static__1c9b15133_new(jule::Ptr<_1c9b10ace_scopeDeadCode>&);
inline void _1c9b153a8_binary(_1c9b14a39_exprDeadCode*, jule::Ptr<_1e5e153a1_BinopExprModel>);
inline void _1c9b1562d_unary(_1c9b14a39_exprDeadCode*, jule::Ptr<_1e5e1558d_UnaryExprModel>);
inline void _1c9b158a3_structureLit(_1c9b14a39_exprDeadCode*, jule::Ptr<_1e5e15967_StructLitExprModel>);
inline void _1c9b15b28_allocStructure(_1c9b14a39_exprDeadCode*, jule::Ptr<_1e5e15b54_AllocStructLitExprModel>);
inline void _1c9b15d9d_casting(_1c9b14a39_exprDeadCode*, jule::Ptr<_1e5e15d41_CastingExprModel>);
inline void _1c9b16123_args(_1c9b14a39_exprDeadCode*, jule::Slice<jule::Any>&);
inline void _1c9b16398_funcCall(_1c9b14a39_exprDeadCode*, jule::Ptr<_1e5e1602d_FnCallExprModel>);
inline void _1c9b1661d_slice(_1c9b14a39_exprDeadCode*, jule::Ptr<_1e5e1621a_SliceExprModel>);
inline void _1c9b16893_array(_1c9b14a39_exprDeadCode*, jule::Ptr<_1e5e1768e_ArrayExprModel>);
inline void _1c9b16b18_indexing(_1c9b14a39_exprDeadCode*, jule::Ptr<_1e5e16407_IndexingExprModel>);
inline void _1c9b16d8d_anonFunc(_1c9b14a39_exprDeadCode*, jule::Ptr<_1e5e165e4_AnonFnExprModel>);
inline void _1c9b17113_map(_1c9b14a39_exprDeadCode*, jule::Ptr<_1e5e169bd_MapExprModel>);
inline void _1c9b17388_slicing(_1c9b14a39_exprDeadCode*, jule::Ptr<_1e5e16baa_SlicingExprModel>);
inline void _1c9b1760d_traitSub(_1c9b14a39_exprDeadCode*, jule::Ptr<_1e5e16d97_TraitSubIdentExprModel>);
inline void _1c9b17883_structureSub(_1c9b14a39_exprDeadCode*, jule::Ptr<_1e5e172b5_StructSubIdentExprModel>);
inline void _1c9b17b08_commonSub(_1c9b14a39_exprDeadCode*, jule::Ptr<_1e5e17a68_CommonSubIdentExprModel>);
inline void _1c9b17d7d_tuple(_1c9b14a39_exprDeadCode*, jule::Ptr<_1e5e17c55_TupleExprModel>);
inline void _1c9b18103_newCall(_1c9b14a39_exprDeadCode*, jule::Ptr<_1e5e18508_BuiltinNewCallExprModel>);
inline void _1c9b18378_outCall(_1c9b14a39_exprDeadCode*, jule::Ptr<_1e5e17e42_BuiltinOutCallExprModel>);
inline void _1c9b185ed_outlnCall(_1c9b14a39_exprDeadCode*, jule::Ptr<_1e5e1812e_BuiltinOutlnCallExprModel>);
inline void _1c9b18873_panicCall(_1c9b14a39_exprDeadCode*, jule::Ptr<_1e5e186e5_BuiltinPanicCallExprModel>);
inline void _1c9b18ae8_assertCall(_1c9b14a39_exprDeadCode*, jule::Ptr<_1e5e188d2_BuiltinAssertCallExprModel>);
inline void _1c9b18d6d_errorCall(_1c9b14a39_exprDeadCode*, jule::Ptr<_1e5e19185_BuiltinErrorCallExprModel>);
inline void _1c9b190e3_makeCall(_1c9b14a39_exprDeadCode*, jule::Ptr<_1e5e18abe_BuiltinMakeCallExprModel>);
inline void _1c9b19368_appendCall(_1c9b14a39_exprDeadCode*, jule::Ptr<_1e5e18cab_BuiltinAppendCallExprModel>);
inline void _1c9b195dd_cloneCall(_1c9b14a39_exprDeadCode*, jule::Ptr<_1e5e1831b_BuiltinCloneCallExprModel>);
inline void _1c9b19863_sizeof(_1c9b14a39_exprDeadCode*, jule::Ptr<_1e5e17084_SizeofExprModel>);
inline void _1c9b19ad8_alignof(_1c9b14a39_exprDeadCode*, jule::Ptr<_1e5e197e5_AlignofExprModel>);
inline void _1c9b19d5d_integratedToStr(_1c9b14a39_exprDeadCode*, jule::Ptr<_1e5e19bbe_IntegratedToStrExprModel>);
inline void _1c9b1a0d3_free(_1c9b14a39_exprDeadCode*, jule::Ptr<_1e5e1a098_FreeExprModel>);
inline void _1c9b1a358_backendEmit(_1c9b14a39_exprDeadCode*, jule::Ptr<_1e5e19dab_BackendEmitExprModel>);
inline void _1c9b1a5cd_optimize(_1c9b14a39_exprDeadCode*, jule::Any&);
struct _1c9b14a39_exprDeadCode {
	jule::Ptr<_1c9b10ace_scopeDeadCode> _field_s = jule::Ptr<_1c9b10ace_scopeDeadCode>();
	

	_1c9b14a39_exprDeadCode(void) = default;

	inline bool operator==(_1c9b14a39_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1c9b14a39_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _1e4743340_UnsafeBinopExprModel {
	jule::Ptr<_1e5e153a1_BinopExprModel> _field_Node = jule::Ptr<_1e5e153a1_BinopExprModel>();
	

	_1e4743340_UnsafeBinopExprModel(void) = default;

	inline bool operator==(_1e4743340_UnsafeBinopExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1e4743340_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _1e52468c0_UnsafeIndexingExprModel {
	jule::Ptr<_1e5e16407_IndexingExprModel> _field_Node = jule::Ptr<_1e5e16407_IndexingExprModel>();
	

	_1e52468c0_UnsafeIndexingExprModel(void) = default;

	inline bool operator==(_1e52468c0_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1e52468c0_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1e563d7cd_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any();
	jule::Ptr<_1e5e1621a_SliceExprModel> _field_Elems = jule::Ptr<_1e5e1621a_SliceExprModel>();
	

	_1e563d7cd_PushToSliceExprModel(void) = default;

	inline bool operator==(_1e563d7cd_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1e563d7cd_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1e5ad7dcb_MutSlicingExprModel {
	jule::Ptr<_1e47137a5_Token> _field_Token = jule::Ptr<_1e47137a5_Token>();
	jule::Any _field_Expr = jule::Any();
	jule::Any _field_Left = jule::Any();
	jule::Any _field_Right = jule::Any();
	

	_1e5ad7dcb_MutSlicingExprModel(void) = default;

	inline bool operator==(_1e5ad7dcb_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1e5ad7dcb_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1e4926567_StrInsertBeginExprModel {
	jule::Any _field_Dest = jule::Any();
	jule::Any _field_Expr = jule::Any();
	

	_1e4926567_StrInsertBeginExprModel(void) = default;

	inline bool operator==(_1e4926567_StrInsertBeginExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e4926567_StrInsertBeginExprModel _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e4a95ad2_scopeOptimizer> static__1e473b06e_new(jule::Ptr<_1e6a06700_Scope>);
inline void _1e4748d7e_setCurrentStmt(_1e4a95ad2_scopeOptimizer*, jule::Any);
inline void _1e4754021_optimizeData(_1e4a95ad2_scopeOptimizer*, jule::Ptr<_1e6a8ac6d_Data>);
inline void _1e47612c5_optimizeVar(_1e4a95ad2_scopeOptimizer*, jule::Ptr<_1e6a3dd20_Var>);
inline void _1e477ce7e_optimizeConditional(_1e4a95ad2_scopeOptimizer*, jule::Ptr<_1e6a06cb6_Conditional>);
inline void _1e478299a_buildDefaultConstatTrueCase(_1e4a95ad2_scopeOptimizer*, jule::Ptr<_1e6a08933_Case>, jule::I64&, jule::Ptr<_1e6a083d3_Match>&);
inline void _1e47843e7_optimizeMatch(_1e4a95ad2_scopeOptimizer*, jule::Ptr<_1e6a083d3_Match>);
inline void _1e4784837_optimizeRangeIter(_1e4a95ad2_scopeOptimizer*, jule::Ptr<_1e6a0737c_RangeIter>);
inline void _1e47b71a5_optimizeWhileIter(_1e4a95ad2_scopeOptimizer*, jule::Ptr<_1e6a07190_WhileIter>);
inline jule::Bool _1e47b7a57_substr(_1e4a95ad2_scopeOptimizer*, jule::Ptr<_1e6a08009_Assign>);
inline jule::Bool _1e47cc792_strInsert(_1e4a95ad2_scopeOptimizer*, jule::Ptr<_1e6a08009_Assign>);
inline jule::Bool _1e485750e_strAssign(_1e4a95ad2_scopeOptimizer*, jule::Ptr<_1e6a08009_Assign>);
inline void _1e48606e3_optimizeAssign(_1e4a95ad2_scopeOptimizer*, jule::Ptr<_1e6a08009_Assign>);
inline void _1e4863817_optimizeMultiAssign(_1e4a95ad2_scopeOptimizer*, jule::Ptr<_1e6a081e6_MultiAssign>);
inline void _1e4865132_optimizeRet(_1e4a95ad2_scopeOptimizer*, jule::Ptr<_1e6a08e3e_RetSt>);
inline void _1e486992d_optimizeStmt(_1e4a95ad2_scopeOptimizer*, jule::Any);
inline void _1e486044b_optimizeChild(_1e4a95ad2_scopeOptimizer*, jule::Ptr<_1e6a06700_Scope>);
inline void _1e486e9cc_optimize(_1e4a95ad2_scopeOptimizer*);
struct _1e4a95ad2_scopeOptimizer {
	jule::I64 _field_i = jule::I64();
	jule::Ptr<_1e6a06700_Scope> _field_scope = jule::Ptr<_1e6a06700_Scope>();
	

	_1e4a95ad2_scopeOptimizer(void) = default;

	inline bool operator==(_1e4a95ad2_scopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1e4a95ad2_scopeOptimizer _other) { return !this->operator==(_other); }


};
inline void static__1e48a52c6_optimize(jule::Any&);
inline jule::Bool _1e48a5b89_strCond(_1e50dac4d_exprOptimizer*, jule::Ptr<_1e5e153a1_BinopExprModel>);
inline void _1e48ac7c8_binary(_1e50dac4d_exprOptimizer*, jule::Ptr<_1e5e153a1_BinopExprModel>);
inline void _1e48b51a4_unary(_1e50dac4d_exprOptimizer*, jule::Ptr<_1e5e1558d_UnaryExprModel>);
inline void _1e48b689d_structureLit(_1e50dac4d_exprOptimizer*, jule::Ptr<_1e5e15967_StructLitExprModel>);
inline void _1e48c434a_allocStructure(_1e50dac4d_exprOptimizer*, jule::Ptr<_1e5e15b54_AllocStructLitExprModel>);
inline void _1e48d5e61_casting(_1e50dac4d_exprOptimizer*, jule::Ptr<_1e5e15d41_CastingExprModel>);
inline void _1e491a44b_args(_1e50dac4d_exprOptimizer*, jule::Slice<jule::Any>&);
inline void _1e491de33_scope(_1e50dac4d_exprOptimizer*, jule::Ptr<_1e6a06700_Scope>&);
inline void _1e4927cb6_funcCall(_1e50dac4d_exprOptimizer*, jule::Ptr<_1e5e1602d_FnCallExprModel>);
inline void _1e4a6d516_slice(_1e50dac4d_exprOptimizer*, jule::Ptr<_1e5e1621a_SliceExprModel>);
inline void _1e4a8253b_array(_1e50dac4d_exprOptimizer*, jule::Ptr<_1e5e1768e_ArrayExprModel>);
inline void _1e4a8b4ce_indexing(_1e50dac4d_exprOptimizer*, jule::Ptr<_1e5e16407_IndexingExprModel>);
inline void _1e4a9245d_anonFunc(_1e50dac4d_exprOptimizer*, jule::Ptr<_1e5e165e4_AnonFnExprModel>);
inline void _1e4a934d6_map(_1e50dac4d_exprOptimizer*, jule::Ptr<_1e5e169bd_MapExprModel>);
inline void _1e4a81e75_slicing(_1e50dac4d_exprOptimizer*, jule::Ptr<_1e5e16baa_SlicingExprModel>);
inline void _1e4a97386_traitSub(_1e50dac4d_exprOptimizer*, jule::Ptr<_1e5e16d97_TraitSubIdentExprModel>);
inline void _1e4aa47c2_structureSub(_1e50dac4d_exprOptimizer*, jule::Ptr<_1e5e172b5_StructSubIdentExprModel>);
inline void _1e4aa93cb_commonSub(_1e50dac4d_exprOptimizer*, jule::Ptr<_1e5e17a68_CommonSubIdentExprModel>);
inline void _1e4aaeaa7_tuple(_1e50dac4d_exprOptimizer*, jule::Ptr<_1e5e17c55_TupleExprModel>);
inline void _1e4ab0eb5_newCall(_1e50dac4d_exprOptimizer*, jule::Ptr<_1e5e18508_BuiltinNewCallExprModel>);
inline void _1e4ab226e_outCall(_1e50dac4d_exprOptimizer*, jule::Ptr<_1e5e17e42_BuiltinOutCallExprModel>);
inline void _1e4ab3a12_outlnCall(_1e50dac4d_exprOptimizer*, jule::Ptr<_1e5e1812e_BuiltinOutlnCallExprModel>);
inline void _1e4ab754e_panicCall(_1e50dac4d_exprOptimizer*, jule::Ptr<_1e5e186e5_BuiltinPanicCallExprModel>);
inline void _1e4ac43a2_assertCall(_1e50dac4d_exprOptimizer*, jule::Ptr<_1e5e188d2_BuiltinAssertCallExprModel>);
inline void _1e4ad0985_errorCall(_1e50dac4d_exprOptimizer*, jule::Ptr<_1e5e19185_BuiltinErrorCallExprModel>);
inline void _1e4ada7a3_makeCall(_1e50dac4d_exprOptimizer*, jule::Ptr<_1e5e18abe_BuiltinMakeCallExprModel>);
inline void _1e4b0b74c_appendCall(_1e50dac4d_exprOptimizer*, jule::Ptr<_1e5e18cab_BuiltinAppendCallExprModel>);
inline void _1e4b0dee1_cloneCall(_1e50dac4d_exprOptimizer*, jule::Ptr<_1e5e1831b_BuiltinCloneCallExprModel>);
inline void _1e4b13600_sizeof(_1e50dac4d_exprOptimizer*, jule::Ptr<_1e5e17084_SizeofExprModel>);
inline void _1e4b213aa_alignof(_1e50dac4d_exprOptimizer*, jule::Ptr<_1e5e197e5_AlignofExprModel>);
inline void _1e4b34577_integratedToStr(_1e50dac4d_exprOptimizer*, jule::Ptr<_1e5e19bbe_IntegratedToStrExprModel>);
inline void _1e4b7a238_free(_1e50dac4d_exprOptimizer*, jule::Ptr<_1e5e1a098_FreeExprModel>);
inline void _1e4bc3c98_backendEmit(_1e50dac4d_exprOptimizer*, jule::Ptr<_1e5e19dab_BackendEmitExprModel>);
inline void _1e4c6c4b2_do(_1e50dac4d_exprOptimizer*);
struct _1e50dac4d_exprOptimizer {
	jule::Ptr<jule::Any> _field_model = jule::Ptr<jule::Any>();
	

	_1e50dac4d_exprOptimizer(void) = default;

	inline bool operator==(_1e50dac4d_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1e50dac4d_exprOptimizer _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c9ad938d_Optimizer> static__1c9a47d24_New(jule::Ptr<_1c9974888_IR>&);
inline void _1c9a1ba62_optimizeGlobal(_1c9ad938d_Optimizer*, jule::Ptr<_1e6a3dd20_Var>&);
inline void _1c9a768ad_optimizeFunction(_1c9ad938d_Optimizer*, jule::Ptr<_1e5e1c62d_Fn>&);
inline void _1c9a76c65_optimizeStruct(_1c9ad938d_Optimizer*, jule::Ptr<_1e5d4518d_Struct>&);
inline void _1c9a786e5_optimizeGlobals(_1c9ad938d_Optimizer*, jule::Ptr<_1e6a1c24e_Package>&);
inline void _1c9a7e850_optimizeFunctions(_1c9ad938d_Optimizer*, jule::Ptr<_1e6a1c24e_Package>&);
inline void _1c9a85ba8_optimizeStructs(_1c9ad938d_Optimizer*, jule::Ptr<_1e6a1c24e_Package>&);
inline void _1c9a8dd15_optimizePackage(_1c9ad938d_Optimizer*, jule::Ptr<_1e6a1c24e_Package>&);
inline void _1c9a99419_Optimize(_1c9ad938d_Optimizer*);
struct _1c9ad938d_Optimizer {
	jule::Ptr<_1c9974888_IR> _field_ir = jule::Ptr<_1c9974888_IR>();
	

	_1c9ad938d_Optimizer(void) = default;

	inline bool operator==(_1c9ad938d_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1c9ad938d_Optimizer _other) { return !this->operator==(_other); }


};
inline void static__1c9b2cd0a_Reset(void);
inline void static__1c9b2e0c5_Print(jule::Str, jule::Str);
struct _1c9b2ddd8_AnsiEscape {
	

	_1c9b2ddd8_AnsiEscape(void) = default;

	inline bool operator==(_1c9b2ddd8_AnsiEscape _other) { return true; }

	inline bool operator!=(_1c9b2ddd8_AnsiEscape _other) { return !this->operator==(_other); }


};
inline void static__1c9b3077a_LogFlat(_1e43e3a18_Log&);
inline void static__1c9b30989_LogError(_1e43e3a18_Log&);
inline void static__1c9b30b98_Log(_1e43e3a18_Log&);
inline void static__1c9b30da7_PrintLogs(jule::Slice<_1e43e3a18_Log>&);
struct _1c9b304c2_Logger {
	

	_1c9b304c2_Logger(void) = default;

	inline bool operator==(_1c9b304c2_Logger _other) { return true; }

	inline bool operator!=(_1c9b304c2_Logger _other) { return !this->operator==(_other); }


};
inline jule::U64 _1b029b31c_Unix(_1b029ae65_AbsTime*);
struct _1b029ae65_AbsTime {
	jule::U64 _field_Day = jule::U64();
	jule::U64 _field_WeekDay = jule::U64();
	jule::U64 _field_YearDay = jule::U64();
	jule::U64 _field_Month = jule::U64();
	jule::U64 _field_Year = jule::U64();
	jule::U64 _field_Second = jule::U64();
	jule::U64 _field_Minute = jule::U64();
	jule::U64 _field_Hour = jule::U64();
	

	_1b029ae65_AbsTime(void) = default;

	inline bool operator==(_1b029ae65_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_1b029ae65_AbsTime _other) { return !this->operator==(_other); }


};
inline _1b029b608_Time static__1b029b99e_Unix(jule::U64);
inline _1b029b608_Time static__1b029bb9c_Now(void);
inline jule::U64 _1b029c0ed_Unix(_1b029b608_Time*);
inline jule::U64 _1b029c362_Day(_1b029b608_Time*);
inline jule::U64 _1b029c5c6_Month(_1b029b608_Time*);
inline jule::U64 _1b029c83a_Year(_1b029b608_Time*);
inline jule::U64 _1b029ca9e_Second(_1b029b608_Time*);
inline jule::U64 _1b029cd13_Minute(_1b029b608_Time*);
inline jule::U64 _1b029d077_Hour(_1b029b608_Time*);
inline _1b029ae65_AbsTime _1b029d2db_Abs(_1b029b608_Time*);
struct _1b029b608_Time {
	jule::U64 _field_sec = jule::U64();
	

	_1b029b608_Time(void) = default;

	inline bool operator==(_1b029b608_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1b029b608_Time _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1b0226000_scopeCoder> static__1b022661b_new(jule::Ptr<_1b02a1d06_ObjectCoder>&);
inline void _1b0226891_rangeIndexIter(jule::Ptr<_1b0226000_scopeCoder>, jule::Ptr<_1e6a0737c_RangeIter>&);
inline void _1b0226b16_rangeHashmapIter(jule::Ptr<_1b0226000_scopeCoder>, jule::Ptr<_1e6a0737c_RangeIter>&);
inline void _1b0226d8b_ifCase(jule::Ptr<_1b0226000_scopeCoder>, jule::Ptr<_1e6a068dc_If>);
inline void _1b0227111_conditional(jule::Ptr<_1b0226000_scopeCoder>, jule::Ptr<_1e6a06cb6_Conditional>);
inline void _1b0227386_infIter(jule::Ptr<_1b0226000_scopeCoder>, jule::Ptr<_1e6a06ea3_InfIter>);
inline void _1b022760b_whileIter(jule::Ptr<_1b0226000_scopeCoder>, jule::Ptr<_1e6a07190_WhileIter>);
inline void _1b0227881_rangeIter(jule::Ptr<_1b0226000_scopeCoder>, jule::Ptr<_1e6a0737c_RangeIter>);
inline void _1b0227b06_cont(jule::Ptr<_1b0226000_scopeCoder>, jule::Ptr<_1e6a07569_ContSt>);
inline void _1b0227d7b_label(jule::Ptr<_1b0226000_scopeCoder>, jule::Ptr<_1e6a07943_Label>);
inline void _1b0228101_gotoSt(jule::Ptr<_1b0226000_scopeCoder>, jule::Ptr<_1e6a07b30_GotoSt>);
inline void _1b0228376_postfix(jule::Ptr<_1b0226000_scopeCoder>, jule::Ptr<_1e6a07d1c_Postfix>);
inline void _1b02285eb_assign(jule::Ptr<_1b0226000_scopeCoder>, jule::Ptr<_1e6a08009_Assign>);
inline void _1b0228871_multiAssign(jule::Ptr<_1b0226000_scopeCoder>, jule::Ptr<_1e6a081e6_MultiAssign>);
inline jule::Fn<void(void)> _1b0228b7e_matchExpr(jule::Ptr<_1b0226000_scopeCoder>, jule::Ptr<_1e6a083d3_Match>);
inline void _1b0228e9d_case(jule::Ptr<_1b0226000_scopeCoder>, jule::Ptr<_1e6a083d3_Match>, jule::Ptr<_1e6a08933_Case>);
inline void _1b0229223_matchSt(jule::Ptr<_1b0226000_scopeCoder>, jule::Ptr<_1e6a083d3_Match>);
inline void _1b0229498_fallSt(jule::Ptr<_1b0226000_scopeCoder>, jule::Ptr<_1e6a08c52_FallSt>);
inline void _1b022971d_breakSt(jule::Ptr<_1b0226000_scopeCoder>, jule::Ptr<_1e6a07756_BreakSt>);
inline void _1b0229993_retWithVars(jule::Ptr<_1b0226000_scopeCoder>, jule::Ptr<_1e6a08e3e_RetSt>);
inline void _1b0229c18_retTuple(jule::Ptr<_1b0226000_scopeCoder>, jule::Ptr<_1e6a08e3e_RetSt>);
inline void _1b0229e8d_retWithExprs(jule::Ptr<_1b0226000_scopeCoder>, jule::Ptr<_1e6a08e3e_RetSt>);
inline void _1b022a213_retSt(jule::Ptr<_1b0226000_scopeCoder>, jule::Ptr<_1e6a08e3e_RetSt>);
inline void _1b022a70d_var(jule::Ptr<_1b0226000_scopeCoder>, jule::Ptr<_1e6a3dd20_Var>);
inline void _1b022a983_st(jule::Ptr<_1b0226000_scopeCoder>, jule::Any);
inline void _1b022ac08_scopeStmts(jule::Ptr<_1b0226000_scopeCoder>, jule::Ptr<_1e6a06700_Scope>&);
inline void _1b022ae7d_scope(jule::Ptr<_1b0226000_scopeCoder>, jule::Ptr<_1e6a06700_Scope>);
inline void _1b022b203_funcScope(jule::Ptr<_1b0226000_scopeCoder>, jule::Ptr<_1e5e202ce_FnIns>);
struct _1b0226000_scopeCoder {
	jule::Ptr<_1b02a1d06_ObjectCoder> _field_oc = jule::Ptr<_1b02a1d06_ObjectCoder>();
	

	_1b0226000_scopeCoder(void) = default;

	inline bool operator==(_1b0226000_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1b0226000_scopeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1b022da41_exprCoder> static__1b022de3c_new(jule::Ptr<_1b02a1d06_ObjectCoder>&);
inline void _1b022e1b2_string(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5da6ba0_Const>&);
inline void _1b022e437_boolean(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5da6ba0_Const>&);
inline void _1b022e613_nilLit(jule::Ptr<_1b022da41_exprCoder>);
inline jule::Bool _1b022e921_ftoaSpecialCases(jule::Ptr<_1b022da41_exprCoder>, jule::F64&);
inline void _1b022eb96_float32(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5da6ba0_Const>&);
inline void _1b022ee1b_float64(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5da6ba0_Const>&);
inline void _1b023023a_constant(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5da6ba0_Const>, jule::Bool);
inline void _1b0230603_divByZeroBinary(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e47137a5_Token>&, jule::Ptr<_1e5e151b4_OperandExprModel>&, jule::Ptr<_1e5e151b4_OperandExprModel>&);
inline void _1b0230878_unsafeBinary(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5e153a1_BinopExprModel>);
inline void _1b0230aed_binary(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5e153a1_BinopExprModel>);
inline void _1b0230d73_var(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e6a3dd20_Var>);
inline void _1b02310e8_structureIns(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5d714d8_StructIns>);
inline void _1b023136d_unary(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5e1558d_UnaryExprModel>);
inline void _1b02315e3_structureLit(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5e15967_StructLitExprModel>);
inline void _1b0231868_allocStructure(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5e15b54_AllocStructLitExprModel>);
inline void _1b0231add_casting(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5e15d41_CastingExprModel>);
inline void _1b0231d63_args(jule::Ptr<_1b022da41_exprCoder>, jule::Slice<jule::Any>);
inline void _1b02320d8_modelForCall(jule::Ptr<_1b022da41_exprCoder>, jule::Any);
inline void _1b023235d_pushCallInf(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5e1602d_FnCallExprModel>&);
inline jule::Bool _1b023266b_isWrapped(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5e1602d_FnCallExprModel>&);
inline void _1b02328e1_pureFuncCall(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5e1602d_FnCallExprModel>&);
inline void _1b0232b66_funcCall(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5e1602d_FnCallExprModel>);
inline void _1b0232ddb_slice(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5e1621a_SliceExprModel>);
inline void _1b0233161_indexing(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5e16407_IndexingExprModel>);
inline void _1b02333d6_unsafeIndexing(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e52468c0_UnsafeIndexingExprModel>);
inline void _1b023365b_anonFunc(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5e165e4_AnonFnExprModel>);
inline void _1b02338d1_map(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5e169bd_MapExprModel>);
inline void _1b0233b56_slicing(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5e16baa_SlicingExprModel>);
inline void _1b0233dcb_traitSub(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5e16d97_TraitSubIdentExprModel>);
inline void _1b0234151_structureSub(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5e172b5_StructSubIdentExprModel>);
inline void _1b02343c6_commonIdent(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5e1787b_CommonIdentExprModel>);
inline void _1b023464b_commonSub(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5e17a68_CommonSubIdentExprModel>);
inline void _1b02348c1_array(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5e1768e_ArrayExprModel>);
inline void _1b0234b46_funcInsCommon(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5e202ce_FnIns>);
inline void _1b0234dbb_funcIns(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5e202ce_FnIns>);
inline void _1b0235141_tuple(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5e17c55_TupleExprModel>);
inline void _1b02353b6_newCall(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5e18508_BuiltinNewCallExprModel>);
inline void _1b023563b_outCall(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5e17e42_BuiltinOutCallExprModel>);
inline void _1b02358b1_outlnCall(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5e1812e_BuiltinOutlnCallExprModel>);
inline void _1b0235b36_panicCall(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5e186e5_BuiltinPanicCallExprModel>);
inline void _1b0235dab_assertCall(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5e188d2_BuiltinAssertCallExprModel>);
inline void _1b0236131_errorCall(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5e19185_BuiltinErrorCallExprModel>);
inline void _1b02363a6_copyCall(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5e18e98_BuiltinCopyCallExprModel>);
inline void _1b023662b_makeCallSlice(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5e18abe_BuiltinMakeCallExprModel>&);
inline void _1b02368a1_makeCallStr(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5e18abe_BuiltinMakeCallExprModel>&);
inline void _1b0236b26_makeCall(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5e18abe_BuiltinMakeCallExprModel>);
inline void _1b0236d9b_pushToSlice(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e563d7cd_PushToSliceExprModel>);
inline void _1b0237121_appendCall(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5e18cab_BuiltinAppendCallExprModel>);
inline void _1b0237396_cloneCall(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5e1831b_BuiltinCloneCallExprModel>);
inline void _1b023761b_sizeof(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5e17084_SizeofExprModel>);
inline void _1b0237891_alignof(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5e197e5_AlignofExprModel>);
inline jule::Str _1b0237b9e_runeLit(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5e199d2_RuneExprModel>);
inline void _1b0237e24_structureStatic(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5e174a2_StructStaticIdentExprModel>);
inline void _1b0238199_integratedToStr(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5e19bbe_IntegratedToStrExprModel>);
inline void _1b023841e_backendEmit(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5e19dab_BackendEmitExprModel>);
inline void _1b0238694_free(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5e1a098_FreeExprModel>);
inline void _1b0238919_mutSlicing(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e5ad7dcb_MutSlicingExprModel>);
inline void _1b0238b8e_strInsertBegin(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e4926567_StrInsertBeginExprModel>);
inline void _1b0238e14_model(jule::Ptr<_1b022da41_exprCoder>, jule::Any);
inline void _1b0239189_expr(jule::Ptr<_1b022da41_exprCoder>, jule::Any);
inline void _1b023940e_val(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e6a8bce6_Value>);
inline void _1b0239684_initExpr(jule::Ptr<_1b022da41_exprCoder>, jule::Ptr<_1e6ab6a8a_TypeKind>);
struct _1b022da41_exprCoder {
	jule::Ptr<_1b02a1d06_ObjectCoder> _field_oc = jule::Ptr<_1b02a1d06_ObjectCoder>();
	

	_1b022da41_exprCoder(void) = default;

	inline bool operator==(_1b022da41_exprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1b022da41_exprCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1b023bbe7_cloneFuncDecl(jule::Ptr<_1e5d4518d_Struct>&);
inline jule::Str static__1b023be8e_cloneFuncDef(jule::Ptr<_1e5d4518d_Struct>&);
struct _1b023b93e_deriveCoder {
	

	_1b023b93e_deriveCoder(void) = default;

	inline bool operator==(_1b023b93e_deriveCoder _other) { return true; }

	inline bool operator!=(_1b023b93e_deriveCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1b023cd6e_TestCoder> static__1b023d2e2_New(jule::Ptr<_1b02a1d06_ObjectCoder>&);
inline jule::Ptr<_1e6a192e5_ImportInfo> _1b023d556_findTestingPackage(jule::Ptr<_1b023cd6e_TestCoder>);
inline void _1b023d7cb_appendTest(jule::Ptr<_1b023cd6e_TestCoder>, jule::Ptr<_1e5e202ce_FnIns>);
inline void _1b023da51_appendPackageTests(jule::Ptr<_1b023cd6e_TestCoder>, jule::Ptr<_1e6a1c24e_Package>&);
inline jule::Bool _1b023dcb5_readyTestingPackage(jule::Ptr<_1b023cd6e_TestCoder>);
inline void _1b023de91_callTmReset(jule::Ptr<_1b023cd6e_TestCoder>);
inline void _1b023e16c_callTmFailed(jule::Ptr<_1b023cd6e_TestCoder>);
inline void _1b023e348_callTmSkipped(jule::Ptr<_1b023cd6e_TestCoder>);
inline void _1b023e524_Serialize(jule::Ptr<_1b023cd6e_TestCoder>);
struct _1b023cd6e_TestCoder {
	jule::Ptr<_1e5d714d8_StructIns> _field_t = jule::Ptr<_1e5d714d8_StructIns>();
	jule::Ptr<_1e5e1c62d_Fn> _field_tmReset = jule::Ptr<_1e5e1c62d_Fn>();
	jule::Ptr<_1e5e1c62d_Fn> _field_tmFailed = jule::Ptr<_1e5e1c62d_Fn>();
	jule::Ptr<_1e5e1c62d_Fn> _field_tmSkipped = jule::Ptr<_1e5e1c62d_Fn>();
	jule::Ptr<_1b02a1d06_ObjectCoder> _field_oc = jule::Ptr<_1b02a1d06_ObjectCoder>();
	

	_1b023cd6e_TestCoder(void) = default;

	inline bool operator==(_1b023cd6e_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1b023cd6e_TestCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1b02409cb_toOut(jule::Str&, jule::Uintptr);
inline jule::Str static__1b0240db6_toLocal(jule::I64, jule::I64, jule::Str&);
inline jule::Str static__1b024115d_func(jule::Ptr<_1e5e1c62d_Fn>&);
inline jule::Str static__1b0241405_funcIns(jule::Ptr<_1e5e202ce_FnIns>&);
inline jule::Str static__1b024169c_traitDecl(jule::Ptr<_1e5e2e4db_Trait>);
inline jule::Str static__1b0241944_param(jule::Ptr<_1e5e1ace1_Param>&);
inline jule::Str static__1b0241bdb_structure(jule::Ptr<_1e5d4518d_Struct>&);
inline jule::Str static__1b0241e83_structureIns(jule::Ptr<_1e5d714d8_StructIns>&);
inline jule::Str static__1b024222a_field(jule::Ptr<_1e5d37658_Field>&);
inline jule::Str static__1b02424c2_var(jule::Ptr<_1e6a3dd20_Var>);
inline jule::Str static__1b0242769_iterBegin(jule::Uintptr);
inline jule::Str static__1b0242a11_iterEnd(jule::Uintptr);
inline jule::Str static__1b0242ca8_iterNext(jule::Uintptr);
inline jule::Str static__1b0243050_label(jule::Str&);
inline jule::Str static__1b02432e7_matchEnd(jule::Uintptr);
inline jule::Str static__1b024358e_caseBegin(jule::Uintptr);
struct _1b02404c0_identCoder {
	

	_1b02404c0_identCoder(void) = default;

	inline bool operator==(_1b02404c0_identCoder _other) { return true; }

	inline bool operator!=(_1b02404c0_identCoder _other) { return !this->operator==(_other); }


};
struct _1b02a192c_SerializationInfo {
	jule::Str _field_Compiler = jule::Str();
	jule::Str _field_CompilerCommand = jule::Str();
	

	_1b02a192c_SerializationInfo(void) = default;

	inline bool operator==(_1b02a192c_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_1b02a192c_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1b02a1b19_traitHash {
	jule::Ptr<_1e5e2e4db_Trait> _field_t = jule::Ptr<_1e5e2e4db_Trait>();
	jule::Ptr<_1e5d714d8_StructIns> _field_s = jule::Ptr<_1e5d714d8_StructIns>();
	jule::I64 _field_i = jule::I64();
	

	_1b02a1b19_traitHash(void) = default;

	inline bool operator==(_1b02a1b19_traitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1b02a1b19_traitHash _other) { return !this->operator==(_other); }


};
inline jule::Str _1b02a7b0e_Str(_1b02a7845_customType*);
inline jule::Bool _1b02a7e1c_Equals(jule::Ptr<_1b02a7845_customType>, jule::Ptr<_1e6ab6a8a_TypeKind>);
struct _1b02a7845_customType {
	jule::Str _field_kind = jule::Str();
	

	_1b02a7845_customType(void) = default;

	inline bool operator==(_1b02a7845_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1b02a7845_customType _other) { return !this->operator==(_other); }


};
inline jule::Str static__1b02a866a_toType(jule::Str);
inline jule::Str static__1b02a8912_prim(jule::Ptr<_1e6abb562_Prim>);
inline jule::Str static__1b02a8ba9_tuple(jule::Ptr<_1e6ac12d1_Tuple>);
inline jule::Str static__1b02a8e51_asSptr(jule::Str);
inline jule::Str static__1b02a91e8_asPtr(jule::Str);
inline jule::Str static__1b02a9490_sptr(jule::Ptr<_1e6abece6_Sptr>);
inline jule::Str static__1b02a9737_ptr(jule::Ptr<_1e6ac335a_Ptr>);
inline jule::Str static__1b02a99ce_enumDecl(jule::Ptr<_1e5e31631_Enum>);
inline jule::Str static__1b02a9c76_typeEnumDecl(jule::Ptr<_1e5e32c2b_TypeEnum>);
inline jule::Str static__1b02aa01d_asSlice(jule::Ptr<_1e6ab6a8a_TypeKind>);
inline jule::Str static__1b02aa2b5_slice(jule::Ptr<_1e6ac0753_Slc>);
inline jule::Str static__1b02aa55c_map(jule::Ptr<_1e6ac1d09_Map>);
inline jule::Str static__1b02aa804_traitIdent(jule::Str);
inline jule::Str static__1b02aaa9b_traitDecl(jule::Ptr<_1e5e2e4db_Trait>);
inline jule::Str static__1b02aad43_structure(jule::Ptr<_1e5d4518d_Struct>);
inline jule::Str static__1b02ab0da_structureIns(jule::Ptr<_1e5d714d8_StructIns>);
inline jule::Str static__1b02ab382_array(jule::Ptr<_1e6ac28ed_Arr>);
inline jule::Str static__1b02ab8c1_paramIns(jule::Ptr<_1e5e1e410_ParamIns>&);
inline jule::Str static__1b02abe10_funcInsResult(jule::Ptr<_1e5e202ce_FnIns>&);
inline jule::Str static__1b02ac1a7_anonFunc(jule::Ptr<_1e5e202ce_FnIns>);
inline jule::Str static__1b02ac44e_func(jule::Ptr<_1e5e202ce_FnIns>);
inline jule::Str static__1b02ac6e6_kind(jule::Ptr<_1e6ab6a8a_TypeKind>);
struct _1b02a813c_typeCoder {
	

	_1b02a813c_typeCoder(void) = default;

	inline bool operator==(_1b02a813c_typeCoder _other) { return true; }

	inline bool operator!=(_1b02a813c_typeCoder _other) { return !this->operator==(_other); }


};
inline jule::Str _1b357dbd4_Name(_1b378315d_Flag*);
inline jule::Str _1b357dd16_What(_1b378315d_Flag*);
inline void _1b3783548_Reset(_1b378315d_Flag*);
inline jule::I32 _1b378367a_Short(_1b378315d_Flag*);
struct _1b378315d_Flag {
	jule::Str _field_name = jule::Str();
	jule::I32 _field_short = jule::I32();
	jule::I64 _field_default = jule::I64();
	jule::Str _field_what = jule::Str();
	jule::Ptr<jule::I64> _field_data = jule::Ptr<jule::I64>();
	

	_1b378315d_Flag(void) = default;

	inline bool operator==(_1b378315d_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1b378315d_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1b378686a_Name(_1b3786d21_Flag*);
inline jule::Str _1b37870da_What(_1b3786d21_Flag*);
inline void _1b378721c_Reset(_1b3786d21_Flag*);
inline jule::I32 _1b378734e_Short(_1b3786d21_Flag*);
struct _1b3786d21_Flag {
	jule::Str _field_name = jule::Str();
	jule::I32 _field_short = jule::I32();
	jule::U64 _field_default = jule::U64();
	jule::Str _field_what = jule::Str();
	jule::Ptr<jule::U64> _field_data = jule::Ptr<jule::U64>();
	

	_1b3786d21_Flag(void) = default;

	inline bool operator==(_1b3786d21_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1b3786d21_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1b378a352_Name(_1b378a808_Flag*);
inline jule::Str _1b378aac2_What(_1b378a808_Flag*);
inline void _1b378ac04_Reset(_1b378a808_Flag*);
inline jule::I32 _1b378ad36_Short(_1b378a808_Flag*);
struct _1b378a808_Flag {
	jule::Str _field_name = jule::Str();
	jule::I32 _field_short = jule::I32();
	jule::F64 _field_default = jule::F64();
	jule::Str _field_what = jule::Str();
	jule::Ptr<jule::F64> _field_data = jule::Ptr<jule::F64>();
	

	_1b378a808_Flag(void) = default;

	inline bool operator==(_1b378a808_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1b378a808_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1b378dd7d_Name(_1b378e334_Flag*);
inline jule::Str _1b378e5ed_What(_1b378e334_Flag*);
inline void _1b378e730_Reset(_1b378e334_Flag*);
inline jule::I32 _1b378e862_Short(_1b378e334_Flag*);
struct _1b378e334_Flag {
	jule::Str _field_name = jule::Str();
	jule::I32 _field_short = jule::I32();
	jule::Bool _field_default = jule::Bool();
	jule::Str _field_what = jule::Str();
	jule::Ptr<jule::Bool> _field_data = jule::Ptr<jule::Bool>();
	

	_1b378e334_Flag(void) = default;

	inline bool operator==(_1b378e334_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1b378e334_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1b3792865_Name(_1b3792d1b_Flag*);
inline jule::Str _1b37930d5_What(_1b3792d1b_Flag*);
inline void _1b3793217_Reset(_1b3792d1b_Flag*);
inline jule::I32 _1b3793349_Short(_1b3792d1b_Flag*);
struct _1b3792d1b_Flag {
	jule::Str _field_name = jule::Str();
	jule::I32 _field_short = jule::I32();
	jule::Str _field_default = jule::Str();
	jule::Str _field_what = jule::Str();
	jule::Ptr<jule::Str> _field_data = jule::Ptr<jule::Str>();
	

	_1b3792d1b_Flag(void) = default;

	inline bool operator==(_1b3792d1b_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1b3792d1b_Flag _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1b0306c7e_FlagSet> static__1b030706a_New(void);
inline jule::Trait<_1b0305310_CommonFlag> _1b03074ee_FindFlag(_1b0306c7e_FlagSet*, jule::Str);
inline jule::Trait<_1b0305310_CommonFlag> _1b030780c_FindFlagShort(_1b0306c7e_FlagSet*, jule::I32);
inline jule::Slice<jule::Trait<_1b0305310_CommonFlag>> _1b0307a71_Flags(_1b0306c7e_FlagSet*);
inline jule::Exceptional<jule::Slice<jule::Str>> _1b0307d7e_Parse(_1b0306c7e_FlagSet*, jule::Slice<jule::Str>);
inline void _1b030805a_Reset(_1b0306c7e_FlagSet*);
inline jule::Ptr<_1b3792d1b_Flag> _1b381e64a_addFlagCommon(_1b0306c7e_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_1b378e334_Flag> _1b3828269_addFlagCommon(_1b0306c7e_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _1b381c59e_AddVar(_1b0306c7e_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _1b38261ce_AddVar(_1b0306c7e_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
struct _1b0306c7e_FlagSet {
	jule::Slice<jule::Trait<_1b0305310_CommonFlag>> _field_flags = jule::Slice<jule::Trait<_1b0305310_CommonFlag>>();
	

	_1b0306c7e_FlagSet(void) = default;

	inline bool operator==(_1b0306c7e_FlagSet _other) {
		return 
			this->_field_flags == _other._field_flags;
	}

	inline bool operator!=(_1b0306c7e_FlagSet _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::Ptr<_1c9974888_IR>,jule::Slice<_1e43e3a18_Log>> static__1c8bb7989_Build(jule::Str, jule::I64);
inline void _1c8bc8b54_appendStructs(_1c9974888_IR*, jule::Ptr<_1e6a1c24e_Package>&, jule::Slice<jule::Ptr<_1e5d4518d_Struct>>&);
inline jule::Slice<jule::Ptr<_1e5d4518d_Struct>> _1c8bceb7c_GetAllStructures(_1c9974888_IR*);
inline void _1c8be9746_appendGlobals(_1c9974888_IR*, jule::Ptr<_1e6a1c24e_Package>&, jule::Slice<jule::Ptr<_1e6a3dd20_Var>>&);
inline jule::Slice<jule::Ptr<_1e6a3dd20_Var>> _1c8c09adb_GetAllGlobals(_1c9974888_IR*);
inline void _1c8c2e46d_Order(_1c9974888_IR*);
struct _1c9974888_IR {
	jule::Str _field_Root = jule::Str();
	jule::Slice<jule::Str> _field_Passes = jule::Slice<jule::Str>();
	jule::Ptr<_1e6a1c24e_Package> _field_Main = jule::Ptr<_1e6a1c24e_Package>();
	jule::Slice<jule::Ptr<_1e6a192e5_ImportInfo>> _field_Used = jule::Slice<jule::Ptr<_1e6a192e5_ImportInfo>>();
	_1c8ba744b_OrderedDefines _field_Ordered = _1c8ba744b_OrderedDefines();
	

	_1c9974888_IR(void) = default;

	inline bool operator==(_1c9974888_IR _other) {
		return 
			this->_field_Root == _other._field_Root &&
			this->_field_Passes == _other._field_Passes &&
			this->_field_Main == _other._field_Main &&
			this->_field_Used == _other._field_Used &&
			this->_field_Ordered == _other._field_Ordered;
	}

	inline bool operator!=(_1c9974888_IR _other) { return !this->operator==(_other); }


};
inline jule::Str _1e5d3a65b_Str(_1e5d714d8_StructIns*);
inline jule::Bool _1e5d46d71_Equals(jule::Ptr<_1e5d714d8_StructIns>, jule::Ptr<_1e6ab6a8a_TypeKind>);
inline jule::Bool _1e5d47ed7_Same(_1e5d714d8_StructIns*, jule::Ptr<_1e5d714d8_StructIns>);
inline jule::Ptr<_1e5e1c62d_Fn> _1e5d4a33b_FindMethod(_1e5d714d8_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_1e5d4c805_FieldIns> _1e5d4b65b_FindField(_1e5d714d8_StructIns*, jule::Str);
struct _1e5d714d8_StructIns {
	jule::Bool _field_Checked = jule::Bool();
	jule::Ptr<_1e5d4518d_Struct> _field_Decl = jule::Ptr<_1e5d4518d_Struct>();
	jule::Slice<jule::Ptr<_1e6ab535d_InsGeneric>> _field_Generics = jule::Slice<jule::Ptr<_1e6ab535d_InsGeneric>>();
	jule::Slice<jule::Ptr<_1e5d4c805_FieldIns>> _field_Fields = jule::Slice<jule::Ptr<_1e5d4c805_FieldIns>>();
	jule::Slice<jule::Ptr<_1e5e1c62d_Fn>> _field_Methods = jule::Slice<jule::Ptr<_1e5e1c62d_Fn>>();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Ptr<_1e5e231a0_ReferenceStack> _field_Refers = jule::Ptr<_1e5e231a0_ReferenceStack>();
	_1e5d46ab8_Operators _field_Operators = _1e5d46ab8_Operators();
	

	_1e5d714d8_StructIns(void) = default;

	inline bool operator==(_1e5d714d8_StructIns _other) {
		return 
			this->_field_Checked == _other._field_Checked &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Fields == _other._field_Fields &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Refers == _other._field_Refers &&
			this->_field_Operators == _other._field_Operators;
	}

	inline bool operator!=(_1e5d714d8_StructIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c9ace262_ObjectDeadCode> static__1c9ace729_new(jule::Ptr<_1c9974888_IR>&);
inline jule::Bool _1b3270772_isLive(jule::Ptr<_1c9ace262_ObjectDeadCode>, jule::Ptr<_1e5e2e4db_Trait>&);
inline jule::Bool _1b3276547_isLive(jule::Ptr<_1c9ace262_ObjectDeadCode>, jule::Ptr<_1e5e202ce_FnIns>&);
inline jule::Bool _1b327c6c4_isLive(jule::Ptr<_1c9ace262_ObjectDeadCode>, jule::Ptr<_1e5d714d8_StructIns>&);
inline jule::Bool _1b32845dd_isLive(jule::Ptr<_1c9ace262_ObjectDeadCode>, jule::Ptr<_1e6a3dd20_Var>&);
inline void _1b3270d16_pushLive(jule::Ptr<_1c9ace262_ObjectDeadCode>, jule::Ptr<_1e5e2e4db_Trait>);
inline void _1b3279b77_pushLive(jule::Ptr<_1c9ace262_ObjectDeadCode>, jule::Ptr<_1e5e202ce_FnIns>);
inline void _1b327cc57_pushLive(jule::Ptr<_1c9ace262_ObjectDeadCode>, jule::Ptr<_1e5d714d8_StructIns>);
inline void _1b3287ec6_pushLive(jule::Ptr<_1c9ace262_ObjectDeadCode>, jule::Ptr<_1e6a3dd20_Var>);
inline void _1c9b0c878_setReferencesAsLive(jule::Ptr<_1c9ace262_ObjectDeadCode>, jule::Ptr<_1e5e231a0_ReferenceStack>&);
inline void _1c9b0caed_inits(jule::Ptr<_1c9ace262_ObjectDeadCode>, jule::Ptr<_1e6a1c24e_Package>&);
inline void _1c9b0cd73_collectLivePackage(jule::Ptr<_1c9ace262_ObjectDeadCode>, jule::Ptr<_1e6a1c24e_Package>&);
inline void _1c9b0d04e_collectLive(jule::Ptr<_1c9ace262_ObjectDeadCode>);
inline void _1c9b0d2c4_removeDeadGlobals(jule::Ptr<_1c9ace262_ObjectDeadCode>, jule::Slice<jule::Ptr<_1e6a3dd20_Var>>&);
inline void _1c9b0d549_removeDeadFns(jule::Ptr<_1c9ace262_ObjectDeadCode>, jule::Slice<jule::Ptr<_1e5e1c62d_Fn>>&);
inline void _1c9b0d7be_removeDeadStructs(jule::Ptr<_1c9ace262_ObjectDeadCode>, jule::Slice<jule::Ptr<_1e5d4518d_Struct>>&);
inline void _1c9b0da44_removeDeadTraits(jule::Ptr<_1c9ace262_ObjectDeadCode>, jule::Slice<jule::Ptr<_1e5e2e4db_Trait>>&);
inline void _1c9b0dcb9_removeDeadsFile(jule::Ptr<_1c9ace262_ObjectDeadCode>, jule::Ptr<_1e6a86010_SymbolTable>&);
inline void _1c9b0e03e_removeDeadsPackage(jule::Ptr<_1c9ace262_ObjectDeadCode>, jule::Ptr<_1e6a1c24e_Package>&);
inline void _1c9b0e21a_removeDeads(jule::Ptr<_1c9ace262_ObjectDeadCode>);
inline void _1c9b0e3e6_elimanate(jule::Ptr<_1c9ace262_ObjectDeadCode>);
struct _1c9ace262_ObjectDeadCode {
	_1c9acde98_liveTable _field_live = _1c9acde98_liveTable();
	jule::Ptr<_1c9974888_IR> _field_ir = jule::Ptr<_1c9974888_IR>();
	

	_1c9ace262_ObjectDeadCode(void) = default;

	inline bool operator==(_1c9ace262_ObjectDeadCode _other) {
		return 
			this->_field_live == _other._field_live &&
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1c9ace262_ObjectDeadCode _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1b02a1d06_ObjectCoder> static__1b0284d2d_New(jule::Ptr<_1c9974888_IR>&, _1b02a192c_SerializationInfo);
inline void _1b028515d_write(jule::Ptr<_1b02a1d06_ObjectCoder>, jule::Str);
inline void _1b0285900_addIndent(jule::Ptr<_1b02a1d06_ObjectCoder>);
inline void _1b02868e0_doneIndent(jule::Ptr<_1b02a1d06_ObjectCoder>);
inline void _1b028713d_indent(jule::Ptr<_1b02a1d06_ObjectCoder>);
inline jule::I64 _1b02764b2_findTypeOffset(_1b02a1d06_ObjectCoder*, jule::Ptr<_1e5e2e4db_Trait>, jule::Ptr<_1e6ab6a8a_TypeKind>);
inline void _1b0288529_locInfo(jule::Ptr<_1b02a1d06_ObjectCoder>, jule::Ptr<_1e47137a5_Token>&);
inline void _1b0267b57_head(jule::Ptr<_1b02a1d06_ObjectCoder>);
inline void _1b028614d_links(jule::Ptr<_1b02a1d06_ObjectCoder>);
inline void _1b026b485_prepareStructures(jule::Ptr<_1b02a1d06_ObjectCoder>);
inline void _1b02732c2_iterPackages(jule::Ptr<_1b02a1d06_ObjectCoder>, jule::Fn<void(jule::Ptr<_1e6a1c24e_Package>&)>);
inline void _1b0273855_buildTraitMap(jule::Ptr<_1b02a1d06_ObjectCoder>);
inline void _1b0274724_traitDecls(jule::Ptr<_1b02a1d06_ObjectCoder>);
inline void _1b0274dd9_structurePlainDecl(jule::Ptr<_1b02a1d06_ObjectCoder>, jule::Ptr<_1e5d4518d_Struct>&);
inline void _1b027559e_structurePlainDecls(jule::Ptr<_1b02a1d06_ObjectCoder>);
inline void _1b0275c64_fieldDecl(jule::Ptr<_1b02a1d06_ObjectCoder>, jule::Ptr<_1e5d4c805_FieldIns>&);
inline void _1b026c84e_structureDestructor(jule::Ptr<_1b02a1d06_ObjectCoder>, jule::Ptr<_1e5d714d8_StructIns>&);
inline void _1b02a239a_structureDeriveDefsDecls(jule::Ptr<_1b02a1d06_ObjectCoder>, jule::Ptr<_1e5d714d8_StructIns>&);
inline void _1b02a24cc_structureOperatorEq(jule::Ptr<_1b02a1d06_ObjectCoder>, jule::Str&, jule::Ptr<_1e5d714d8_StructIns>&);
inline void _1b02a260e_structureOperatorNotEq(jule::Ptr<_1b02a1d06_ObjectCoder>, jule::Str&, jule::Ptr<_1e5d714d8_StructIns>&);
inline void _1b02a2741_structureOperator(jule::Ptr<_1b02a1d06_ObjectCoder>, jule::Str&, jule::Ptr<_1e5e202ce_FnIns>&, jule::Str);
inline void _1b02a2873_structureOperators(jule::Ptr<_1b02a1d06_ObjectCoder>, jule::Ptr<_1e5d714d8_StructIns>&);
inline void _1b02a29a5_structureInsDecl(jule::Ptr<_1b02a1d06_ObjectCoder>, jule::Ptr<_1e5d714d8_StructIns>&);
inline void _1b02a2ad7_structureDecl(jule::Ptr<_1b02a1d06_ObjectCoder>, jule::Ptr<_1e5d4518d_Struct>&);
inline void _1b02a2c19_structureDecls(jule::Ptr<_1b02a1d06_ObjectCoder>);
inline void _1b02a2d4b_paramsDecls(jule::Ptr<_1b02a1d06_ObjectCoder>, jule::Slice<jule::Ptr<_1e5e1e410_ParamIns>>&);
inline void _1b02a2e7d_funcHead(jule::Ptr<_1b02a1d06_ObjectCoder>, jule::Ptr<_1e5e202ce_FnIns>&, jule::Bool);
inline void _1b02a30b0_funcDecl(jule::Ptr<_1b02a1d06_ObjectCoder>, jule::Ptr<_1e5e1c62d_Fn>&, jule::Bool);
inline void _1b02a31e2_funcDecls(jule::Ptr<_1b02a1d06_ObjectCoder>);
inline void _1b02a3324_traitDataTypes(jule::Ptr<_1b02a1d06_ObjectCoder>);
inline void _1b02a3456_paramIns(jule::Ptr<_1b02a1d06_ObjectCoder>, jule::Ptr<_1e5e1e410_ParamIns>&);
inline void _1b02a3643_paramsIns(jule::Ptr<_1b02a1d06_ObjectCoder>, jule::Slice<jule::Ptr<_1e5e1e410_ParamIns>>&);
inline void _1b02a3962_varInitExpr(jule::Ptr<_1b02a1d06_ObjectCoder>, jule::Ptr<_1e6a3dd20_Var>&, jule::Fn<void(void)>);
inline void _1b02a3bd7_var(jule::Ptr<_1b02a1d06_ObjectCoder>, jule::Ptr<_1e6a3dd20_Var>);
inline void _1b02a3e5c_func(jule::Ptr<_1b02a1d06_ObjectCoder>, jule::Ptr<_1e5e1c62d_Fn>&);
inline void _1b02a4138_traitWrappers(jule::Ptr<_1b02a1d06_ObjectCoder>);
inline void _1b02a4314_traitDatas(jule::Ptr<_1b02a1d06_ObjectCoder>);
inline void _1b02a44e0_globals(jule::Ptr<_1b02a1d06_ObjectCoder>);
inline void _1b02a46bb_decls(jule::Ptr<_1b02a1d06_ObjectCoder>);
inline void _1b02a4941_structureMethods(jule::Ptr<_1b02a1d06_ObjectCoder>, jule::Ptr<_1e5d714d8_StructIns>&);
inline void _1b02a4bb6_structureDeriveDefs(jule::Ptr<_1b02a1d06_ObjectCoder>, jule::Ptr<_1e5d714d8_StructIns>&);
inline void _1b02a4e3b_structureOstream(jule::Ptr<_1b02a1d06_ObjectCoder>, jule::Ptr<_1e5d714d8_StructIns>&);
inline void _1b02a51b1_structureIns(jule::Ptr<_1b02a1d06_ObjectCoder>, jule::Ptr<_1e5d714d8_StructIns>&);
inline void _1b02a5436_structure(jule::Ptr<_1b02a1d06_ObjectCoder>, jule::Ptr<_1e5d4518d_Struct>&);
inline void _1b02a5612_structures(jule::Ptr<_1b02a1d06_ObjectCoder>);
inline void _1b02a57dd_funcs(jule::Ptr<_1b02a1d06_ObjectCoder>);
inline void _1b02a5a63_pushInit(jule::Ptr<_1b02a1d06_ObjectCoder>, jule::Ptr<_1e6a1c24e_Package>&);
inline void _1b02a5c3e_initCaller(jule::Ptr<_1b02a1d06_ObjectCoder>);
inline void _1b02a5e1a_end(jule::Ptr<_1b02a1d06_ObjectCoder>);
inline void _1b02a60e6_serializeHead(jule::Ptr<_1b02a1d06_ObjectCoder>);
inline void _1b02a62c2_Serialize(jule::Ptr<_1b02a1d06_ObjectCoder>);
struct _1b02a1d06_ObjectCoder {
	jule::Str _field_Obj = jule::Str();
	jule::Ptr<_1c9974888_IR> _field_ir = jule::Ptr<_1c9974888_IR>();
	_1b02a192c_SerializationInfo _field_info = _1b02a192c_SerializationInfo();
	jule::Slice<jule::Ptr<_1b02a1b19_traitHash>> _field_tmap = jule::Slice<jule::Ptr<_1b02a1b19_traitHash>>();
	jule::Str _field_indentBuffer = jule::Str();
	jule::Ptr<_1b022da41_exprCoder> _field_ec = jule::Ptr<_1b022da41_exprCoder>();
	jule::Ptr<_1b0226000_scopeCoder> _field_sc = jule::Ptr<_1b0226000_scopeCoder>();
	

	_1b02a1d06_ObjectCoder(void) = default;

	inline bool operator==(_1b02a1d06_ObjectCoder _other) {
		return 
			this->_field_Obj == _other._field_Obj &&
			this->_field_ir == _other._field_ir &&
			this->_field_info == _other._field_info &&
			this->_field_tmap == _other._field_tmap &&
			this->_field_indentBuffer == _other._field_indentBuffer &&
			this->_field_ec == _other._field_ec &&
			this->_field_sc == _other._field_sc;
	}

	inline bool operator!=(_1b02a1d06_ObjectCoder _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::I64,jule::Bool> _1b37a6d0d_parseInteger(_1b0309457_argParser*, jule::Str&, jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>);
inline std::tuple<jule::U64,jule::Bool> _1b37aedc1_parseInteger(_1b0309457_argParser*, jule::Str&, jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>);
inline jule::Str _1b0309c4e_getData(_1b0309457_argParser*);
inline jule::VoidExceptional _1b0309e91_processFlag(_1b0309457_argParser*, jule::Trait<_1b0305310_CommonFlag>&);
inline jule::VoidExceptional _1b030a216_singleDash(_1b0309457_argParser*, jule::Str&);
inline jule::VoidExceptional _1b030a48b_doubleDash(_1b0309457_argParser*, jule::Str&);
inline jule::VoidExceptional _1b030a667_tryArg(_1b0309457_argParser*);
inline jule::VoidExceptional _1b030a843_parse(_1b0309457_argParser*);
struct _1b0309457_argParser {
	_1b0306c7e_FlagSet _field_set = _1b0306c7e_FlagSet();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_content = jule::Slice<jule::Str>();
	jule::I64 _field_i = jule::I64();
	

	_1b0309457_argParser(void) = default;

	inline bool operator==(_1b0309457_argParser _other) {
		return 
			this->_field_set == _other._field_set &&
			this->_field_args == _other._field_args &&
			this->_field_content == _other._field_content &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1b0309457_argParser _other) { return !this->operator==(_other); }


};
inline jule::I32 _1e32d3574_DecodeRune(jule::I32, jule::I32);
inline std::tuple<jule::I32,jule::I32> _1e32d381b_EncodeRune(jule::I32);
inline jule::Slice<jule::I32> _1e32d3dd2_Decode(jule::Slice<jule::U16>);
inline jule::Slice<jule::U16> _1e32d41e0_AppendRune(jule::Slice<jule::U16>, jule::I32);
inline jule::Slice<jule::U16> _1e26ad6db_Utf16FromStr(jule::Str);
inline jule::Str _1e26ae324_Utf16ToStr(jule::Slice<jule::U16>);
inline jule::Str _1e26ae456_U16PtrToStr(jule::U16*);
inline jule::I64 _1e25496cb_GetLastErrno(void);
inline jule::Uintptr _1e32d580c_GetStdHandle(jule::Uintptr);
inline jule::I64 _1e32d5c5d_Wstat(jule::U16*, struct stat*);
inline jule::I64 _1e32d6148_Wopen(jule::U16*, jule::I64, jule::I64);
inline jule::U32 _1e32d6346_GetLastError(void);
inline jule::U32 _1e32d6687_GetCurrentDirectory(jule::U32, jule::U16*);
inline jule::Bool _1e32d6bc6_DeleteFile(jule::U16*);
inline jule::Bool _1e32d6e6d_CreateDirectory(jule::U16*);
inline jule::Bool _1e32d7215_RemoveDirectory(jule::U16*);
inline _WDIR* _1e32d74ac_Wopendir(jule::U16*);
inline struct _wdirent* _1e32d7754_Wreaddir(_WDIR*);
inline jule::I64 _1e32d79eb_Wclosedir(_WDIR*);
inline jule::U32 _1e32d81c2_GetFullPathName(jule::U16*, jule::U32, jule::U16*, jule::U16**);
inline jule::Bool _1e32d8513_GetConsoleMode(jule::Uintptr, jule::I64&);
inline jule::Bool _1e32d8854_SetConsoleMode(jule::Uintptr, jule::I64);
inline jule::Bool _1e32d8d82_WriteConsole(jule::Uintptr, jule::U16*, jule::I64, jule::I64&, void*);
inline jule::Bool _1e32d93b0_ReadConsole(jule::Uintptr, jule::U16*, jule::I64, jule::I64&, void*);
inline jule::I64 _1e32db747_Seek(jule::I64, jule::I64, jule::I64);
inline jule::I64 _1e32dbb32_Read(jule::I64, void*, jule::U64);
inline jule::I64 _1e32dbea6_Close(jule::I64);
inline jule::I64 _1e32dc391_Write(jule::I64, void*, jule::U64);
inline void _1e32dc5a0_Exit(jule::I64);
inline std::tuple<jule::I32,jule::I64> _1e33ba0ea_DecodeRune(jule::Slice<jule::U8>);
inline std::tuple<jule::I32,jule::I64> _1e33ba419_DecodeRuneStr(jule::Str);
inline std::tuple<jule::I32,jule::I64> _1e33ba6b1_DecodeLastRune(jule::Slice<jule::U8>);
inline jule::I64 _1e33bac00_RuneLen(jule::I32);
inline jule::I64 _1e33bb11d_EncodeRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _1e33bb45e_AppendRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _1e33bb7a0_appendRuneNonASCII(jule::Slice<jule::U8>, jule::I32);
inline jule::I64 _1e33bbcde_RuneCountStr(jule::Str);
inline jule::Bool _1e33bc086_RuneStart(jule::U8);
inline jule::I64 _1e346574a_getLastOsErrorWindows(void);
inline jule::Slice<jule::Str> _1e3469397_Args(void);
inline jule::Exceptional<jule::Str> _1e346981a_WorkingDir(void);
inline jule::Exceptional<jule::Str> _1e346a71c_getwd(void);
inline jule::Slice<jule::U8> _1e3503035_Stobs(jule::Str&);
inline jule::Bool _1e4319246_IsLetter(jule::I32);
inline jule::Bool _1e438b609_is16(jule::Slice<_1e4389a47_Range16>, jule::U16);
inline jule::Bool _1e438b94a_is32(jule::Slice<_1e4389eba_Range32>, jule::U32);
inline jule::Bool _1e438c1dc_isExcludingLatin(jule::Ptr<_1e438a43d_RangeTable>, jule::I32);
inline jule::Bool _1e438c484_IsUpper(jule::I32);
inline jule::Str _1e350c9ac_Repeat(jule::Str, jule::I64);
inline jule::Bool _1e3510a48_hasPrefix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _1e350be95_HasPrefix(jule::Str, jule::Str);
inline jule::Bool _1e35133ec_hasSuffix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _1e42deeca_HasSuffix(jule::Str, jule::Str);
inline jule::I64 _1e42e8379_FindAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _1e43147d5_FindLastAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _1e42de958_FindLast(jule::Str, jule::Str);
inline jule::I64 _1e438cac2_findRune(jule::Slice<jule::U8>&, jule::I32);
inline jule::I64 _1e438d067_FindLastByte(jule::Str, jule::U8);
inline jule::I64 _1e438d540_FindAny(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _1e438d7a4_Split(jule::Str, jule::Str, jule::I64);
inline jule::Bool _1e438d8d6_Contains(jule::Str, jule::Str);
inline jule::Bool _1e438dc7c_ContainsAny(jule::Str, jule::Str);
inline jule::I64 _1e438ddae_Count(jule::Str, jule::Str);
inline jule::Str _1e438dee1_Replace(jule::Str, jule::Str, jule::Str, jule::I64);
inline void _1e438cd36_trimLeft(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _1e438e93c_TrimLeft(jule::Str, jule::Str);
inline void _1e438ea6e_trimRight(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _1e438ecd3_Trim(jule::Str, jule::Str);
inline jule::Bool _1e3442ace_IsPathSep(jule::U8);
inline jule::Bool _1e3442c11_isSlash(jule::U8);
inline jule::U8 _1e3442dcb_toUpper(jule::U8);
inline jule::I64 _1e3443492_volumeNameLen(jule::Str);
inline std::tuple<jule::Str,jule::Str,jule::Bool> _1e3443739_cutPath(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1e34439d1_fullPath(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1e3443d55_abs(jule::Str);
inline jule::Str _1e34440ec_join(jule::Slice<jule::Str>);
inline jule::Str _1e34c0d49_Clean(jule::Str);
inline jule::Str _1e34c82b3_FromSlash(jule::Str);
inline jule::Str _1e34d0919_Join(jule::Slice<jule::Str>);
inline jule::Str _1e34d2432_Ext(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1e34aee26_Abs(jule::Str);
inline jule::Str _1e34b4887_Base(jule::Str);
inline jule::Str _1e34b81c6_Dir(jule::Str);
inline jule::Str _1e34e1d7b_VolumeName(jule::Str);
inline jule::I64 _1e2600c7c_getLastFsError(void);
inline jule::Bool _1e338cd48_isConsoleHandle(jule::Uintptr);
inline jule::I64 _1e443200c_getLastProcessError(void);
inline jule::Slice<wchar_t*> _1e4441abb_ustrSliceToWcstrSlice(jule::Slice<jule::Slice<jule::U16>>);
inline jule::Slice<jule::Slice<jule::U16>> _1e4441d63_strSliceToUstrSlice(jule::Slice<jule::Str>);
inline jule::I64 _1e4442171_execvp(jule::Str, jule::Slice<jule::Str>);
inline jule::I64 _1e444255b_execve(jule::Str, jule::Slice<jule::Str>, jule::Slice<jule::Str>);
inline void _1e4443282_Exit(jule::I64);
inline jule::Str _1e4443480_Executable(void);
inline jule::Bool _1e43d6eb2_IsStdHeaderPath(jule::Str);
inline jule::Bool _1e43d70e4_IsValidHeaderExt(jule::Str);
inline jule::Bool _1e43d7347_IsValidCppExt(jule::Str);
inline jule::Str _1e43e3e58_Logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1e43e4244_argToStr(jule::Any);
inline jule::I64 _1e43e44db_findNextFmt(jule::Str);
inline jule::Str _1e43e4871_applyFmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e43e593d_IsTopDirective(jule::Str);
inline jule::Bool _1e43e6d6d_IsWindows(jule::Str);
inline jule::Bool _1e43e7126_IsDarwin(jule::Str);
inline jule::Bool _1e43e73bd_IsLinux(jule::Str);
inline jule::Bool _1e43e76dc_IsI386(jule::Str);
inline jule::Bool _1e43e7984_IsAmd64(jule::Str);
inline jule::Bool _1e43e7c2b_IsArm64(jule::Str);
inline jule::Bool _1e43e7ec3_IsUnix(jule::Str);
inline jule::Bool _1e43e8347_Is32Bit(jule::Str);
inline jule::Bool _1e43e85de_Is64Bit(jule::Str);
inline void _1e440570b_init(void);
inline jule::Bool _1e4713eae_IsUnaryOp(jule::Str);
inline jule::Bool _1e471429a_IsBinOp(jule::Str);
inline jule::Bool _1e4714861_IsStr(jule::Str);
inline jule::Bool _1e4714b08_IsRawStr(jule::Str);
inline jule::Bool _1e4714da0_IsRune(jule::Str);
inline jule::Bool _1e47154bb_IsBool(jule::Str);
inline jule::Bool _1e4715763_IsFloat(jule::Str);
inline jule::Bool _1e4715a0a_IsNum(jule::Str);
inline jule::Bool _1e4716049_IsIgnoreIdent(jule::Str);
inline jule::Bool _1e47162e1_IsAnonIdent(jule::Str);
inline jule::Bool _1e4716830_IsSpace(jule::I32);
inline jule::Bool _1e4716c81_IsLetter(jule::I32);
inline jule::Bool _1e47172c0_IsDecimal(jule::U8);
inline jule::Bool _1e4717567_IsBinary(jule::U8);
inline jule::Bool _1e471780e_IsOctal(jule::U8);
inline jule::Bool _1e4717aa6_IsHex(jule::U8);
inline jule::Bool _1e4717d4d_IsAssign(jule::U64);
inline jule::Bool _1e47180e5_IsPostfixOp(jule::Str);
inline jule::Bool _1e471838c_IsAssignOp(jule::Str);
inline jule::Ptr<_1e4718b40_File> _1e471a16e_NewFileSet(jule::Str);
inline _1e43e3a18_Log _1e471b99a_makeErr(jule::I64, jule::I64, jule::Ptr<_1e4718b40_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e471bd30_bytesHasPrefix(jule::Slice<jule::U8>&, jule::Str);
inline jule::Str _1e471c171_floatFmtE(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1e471c506_floatFmtP(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1e471c847_floatFmtDotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1e471cb88_floatFmtDotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1e471cec9_floatFmtDotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1e471d42a_floatNum(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1e471d6c2_commonNum(jule::Slice<jule::U8>&);
inline jule::Str _1e471d969_binaryNum(jule::Slice<jule::U8>&);
inline jule::Bool _1e471dcaa_isFloatFmtE(jule::U8, jule::I64);
inline jule::Bool _1e471e0eb_isFloatFmtP(jule::U8, jule::I64);
inline jule::Bool _1e471e43c_isFloatFmtDotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _1e471e77d_isFloatFmtDotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _1e471eabe_isFloatFmtDotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1e4720020_octalNum(jule::Slice<jule::U8>&);
inline jule::Str _1e4725135_hexNum(jule::Slice<jule::U8>&);
inline jule::Str _1e4725465_hexEscape(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1e472570c_bigUnicodePointEscape(jule::Slice<jule::U8>&);
inline jule::Str _1e47259c6_littleUnicodePointEscape(jule::Slice<jule::U8>&);
inline jule::Str _1e4725b80_hexByteEscape(jule::Slice<jule::U8>&);
inline jule::Str _1e4725e16_byteEscape(jule::Slice<jule::U8>&);
inline jule::Slice<_1e43e3a18_Log> _1e472a910_Lex(jule::Ptr<_1e4718b40_File>, jule::I64);
inline void _1e5e14c52_lshiftUnsig(_1e5da6ba0_Const&, _1e5da6ba0_Const&);
inline void _1e5e1504e_rshiftUnsig(_1e5da6ba0_Const&, _1e5da6ba0_Const&);
inline jule::I64 _1e69b1e6e_LeadingZeros64(jule::U64);
inline jule::I64 _1e69b2ec5_TrailingZeros(jule::U64);
inline jule::I64 _1e69b38bb_TrailingZeros32(jule::U32);
inline jule::I64 _1e69b3b63_TrailingZeros64(jule::U64);
inline jule::I64 _1e69b93d8_Len32(jule::U32);
inline jule::I64 _1e69b9680_Len64(jule::U64);
inline std::tuple<jule::U64,jule::U64> _1e69ba340_Add64(jule::U64, jule::U64, jule::U64);
inline std::tuple<jule::U64,jule::U64> _1e69bb9c3_Mul64(jule::U64, jule::U64);
inline jule::U32 _1e68dd1a8_F32Bits(jule::F32);
inline jule::F32 _1e68dd494_F32FromBits(jule::U32);
inline jule::U64 _1e68dd73b_F64Bits(jule::F64);
inline jule::F64 _1e68dda5a_F64FromBits(jule::U64);
inline std::tuple<jule::F64,jule::I64> _1e68e1167_Frexp(jule::F64);
inline jule::F64 _1e694d999_NaN(void);
inline jule::Bool _1e694e8ce_IsNaN(jule::F64);
inline jule::F64 _1e6951370_Inf(jule::I64);
inline jule::Bool _1e6956bd3_IsInf(jule::F64, jule::I64);
inline std::tuple<jule::F64,jule::I64> _1e69582de_normalize(jule::F64);
inline jule::F64 _1e69684a8_Log(jule::F64);
inline jule::F64 _1e696ee2c_Abs(jule::F64);
inline std::tuple<jule::F64,jule::F64> _1e69c536c_Modf(jule::F64);
inline jule::F64 _1e69c5b31_Log2(jule::F64);
inline jule::Str _1e6434c00_FmtFloat(jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1e64493a7_genericFtoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1e64a2036_bigFtoa(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1e65c747a_floatInfo&);
inline jule::Slice<jule::U8> _1e64cd78d_fmtDigits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _1e64ce0da_decimalSlice, jule::I64, jule::U8);
inline void _1e64d095a_roundShortest(_1e6a02740_decimal&, jule::U64, jule::I64, _1e65c747a_floatInfo&);
inline jule::Slice<jule::U8> _1e64dea57_fmtE(jule::Slice<jule::U8>, jule::Bool, _1e64ce0da_decimalSlice, jule::I64, jule::U8);
inline jule::Slice<jule::U8> _1e64e020b_fmtF(jule::Slice<jule::U8>, jule::Bool, _1e64ce0da_decimalSlice, jule::I64);
inline jule::Slice<jule::U8> _1e64e1196_fmtB(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I64, _1e65c747a_floatInfo&);
inline jule::Slice<jule::U8> _1e65a4c4e_fmtX(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1e65c747a_floatInfo&);
inline jule::I64 _1e65c84d1_min(jule::I64, jule::I64);
inline jule::I64 _1e65cd8b0_max(jule::I64, jule::I64);
inline jule::U8 _1e663e48c_lower(jule::U8);
inline std::tuple<jule::U64,jule::I64> _1e665e3d0_parseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::U64> _1e6681974_ParseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _1e670d605_ParseInt(jule::Str, jule::I64, jule::I64);
inline std::tuple<jule::F64,jule::Bool> _1e6425c57_eiselLemire64(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1e67cd61a_eiselLemire32(jule::U64, jule::I64, jule::Bool);
inline jule::I64 _1e66bdc25_commonPrefixLenIgnoreCase(jule::Str, jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::Bool> _1e64dd9bd_special(jule::Str);
inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _1e681baa9_readFloat(jule::Str);
inline std::tuple<jule::F64,jule::Bool> _1e646b5e9_atof64exact(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1e64b01dc_atof32exact(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F64,jule::I64> _1e6514a8d_atofHex(jule::Str, _1e65c747a_floatInfo&, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline std::tuple<jule::F32,jule::I64,jule::I64> _1e6688162_atof32(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _1e670dc21_atof64(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _1e6759640_parseFloatPrefix(jule::Str, jule::I64);
inline jule::Exceptional<jule::F64> _1e679c221_ParseFloat(jule::Str, jule::I64);
inline void _1e686c0b0_ryuFtoaFixed32(_1e64ce0da_decimalSlice&, jule::U32, jule::I64, jule::I64);
inline void _1e68c3875_ryuFtoaFixed64(_1e64ce0da_decimalSlice&, jule::U64, jule::I64, jule::I64);
inline void _1e68ca1b7_formatDecimal(_1e64ce0da_decimalSlice&, jule::U64, jule::Bool, jule::Bool, jule::I64);
inline void _1e64900bd_ryuFtoaShortest(_1e64ce0da_decimalSlice&, jule::U64, jule::I64, _1e65c747a_floatInfo&);
inline jule::I64 _1e65781ea_mulByLog2Log10(jule::I64);
inline jule::I64 _1e6605398_mulByLog10Log2(jule::I64);
inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _1e6a01475_computeBounds(jule::U64, jule::I64, _1e65c747a_floatInfo&);
inline void _1e6a016b7_ryuDigits(_1e64ce0da_decimalSlice&, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _1e6a017e9_ryuDigits32(_1e64ce0da_decimalSlice&, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I64);
inline std::tuple<jule::U32,jule::I64,jule::Bool> _1e6a0192b_mult64bitPow10(jule::U32, jule::I64, jule::I64);
inline std::tuple<jule::U64,jule::I64,jule::Bool> _1e6a01a5d_mult128bitPow10(jule::U64, jule::I64, jule::I64);
inline jule::Bool _1e6a01b90_divisibleByPow5(jule::U64, jule::I64);
inline std::tuple<jule::U32,jule::U32> _1e6a01cc2_divmod1e9(jule::U64);
inline void _1e6a0329b_trim(_1e6a02740_decimal&);
inline void _1e6a033cd_rightShift(_1e6a02740_decimal&, jule::U64);
inline jule::Bool _1e6a03510_prefixIsLessThan(jule::Array<jule::U8,800>, jule::I64, jule::Str);
inline void _1e6a03642_leftShift(_1e6a02740_decimal&, jule::U64);
inline jule::Bool _1e6a03774_shouldRoundUp(_1e6a02740_decimal&, jule::I64);
inline jule::Str _1e6a04302_FmtUint(jule::U64, jule::I64);
inline jule::Str _1e6a04434_FmtInt(jule::I64, jule::I64);
inline jule::Str _1e6a04566_Itoa(jule::I64);
inline jule::Str _1e6a04698_small(jule::I64);
inline jule::Bool _1e6a047ca_isPowerOfTwo(jule::I64);
inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1e6a0490c_fmtBits(jule::Slice<jule::U8>, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline jule::Str _1e6037e63_RealKindOf(jule::Str);
inline jule::I64 _1e603e695_BitsizeOf(jule::Str);
inline jule::Str _1e606392d_IntFromBits(jule::I64);
inline jule::Str _1e6075841_UintFromBits(jule::I64);
inline jule::Str _1e60a46b6_FloatFromBits(jule::I64);
inline jule::Bool _1e62406ed_CheckBitFloat(jule::Str, jule::I64);
inline jule::I64 _1e625e783_BitsizeOfFloat(jule::F64);
inline jule::I64 _1e63101c4_BitsizeOfInt(jule::I64);
inline jule::I64 _1e6327e67_BitsizeOfUint(jule::U64);
inline void _1e6328693_UpdateTarget(void);
inline void _1e6335c55_init(void);
inline jule::F64 _1e63b4e16_Min(jule::Str);
inline jule::F64 _1e63bcc43_Max(jule::Str);
inline jule::Bool _1e63c9755_IsI8Compatible(jule::Str);
inline jule::Bool _1e63d5c4a_IsI16Compatible(jule::Str);
inline jule::Bool _1e6405d14_IsI32Compatible(jule::Str);
inline jule::Bool _1e640c3d1_IsI64Compatible(jule::Str);
inline jule::Bool _1e60151e8_IsU8Compatible(jule::Str);
inline jule::Bool _1e5ebb303_IsU16Compatible(jule::Str);
inline jule::Bool _1e608c57d_IsU32Compatible(jule::Str);
inline jule::Bool _1e608d0ea_IsU64Compatible(jule::Str);
inline jule::Bool _1e628060b_IsF32Compatible(jule::Str);
inline jule::Bool _1e628173e_IsF64Compatible(jule::Str);
inline jule::Bool _1e6286898_TypesAreCompatible(jule::Str, jule::Str);
inline jule::Bool _1e628ba02_IsI16Greater(jule::Str);
inline jule::Bool _1e6406276_IsI32Greater(jule::Str);
inline jule::Bool _1e6017294_IsI64Greater(jule::Str);
inline jule::Bool _1e624005a_IsU16Greater(jule::Str);
inline jule::Bool _1e6a053be_IsU32Greater(jule::Str);
inline jule::Bool _1e6a05501_IsU64Greater(jule::Str);
inline jule::Bool _1e6a05633_IsF32Greater(jule::Str);
inline jule::Bool _1e6a05765_IsF64Greater(jule::Str);
inline jule::Bool _1e6a05897_IsGreater(jule::Str, jule::Str);
inline jule::Bool _1e6a05cd7_IsSigInt(jule::Str);
inline jule::Bool _1e6a05e19_IsUnsigInt(jule::Str);
inline jule::Bool _1e6a0604b_IsInt(jule::Str);
inline jule::Bool _1e6a0617d_IsFloat(jule::Str);
inline jule::Bool _1e6a062b0_IsNum(jule::Str);
inline jule::Bool _1e6a063e2_IsSigNum(jule::Str);
inline jule::Bool _1e6a5bc2d_IsAscii(jule::I32);
inline jule::I32 _1e6a5bd60_ToRune(jule::Slice<jule::U8>);
inline jule::Str _1e6a73b79_ToRawStr(jule::Slice<jule::U8>);
inline jule::Str _1e6a73e32_ToStr(jule::Slice<jule::U8>);
inline std::tuple<jule::U8,jule::Bool> _1e6a741c9_tryBtoaCommonEsq(jule::Slice<jule::U8>);
inline jule::I32 _1e6a744d7_runeFromEsqSeq(jule::Slice<jule::U8>, jule::I64&);
inline jule::Slice<jule::U8> _1e6a74828_strEsqSeq(jule::Slice<jule::U8>, jule::I64&);
inline jule::I64 _1e6b48be9_findFormatPrefix(jule::Slice<jule::U8>&, jule::I64&);
inline jule::Slice<jule::U8> _1e6b494ad_getFormatRange(jule::I64&, jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _1e6b3064d_fmtByDefault(jule::Any&);
inline jule::Slice<jule::U8> _1e6b2ee33_applyFmtByDefault(jule::I64&, jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _1e6b3370b_applyFmt(jule::Slice<jule::U8>&, jule::I64&, jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _1e6b40d9a_formatBytes(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1e6b6783e_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e5e223e1_parameterUsesGenerics(jule::Ptr<_1e5e1ace1_Param>&, jule::Slice<jule::Ptr<_1e5d62045_GenericDecl>>&);
inline jule::Ptr<_1e6ababe3_TypeSymbol> _1e5e248bb_buildType(jule::Ptr<_1e5d54961_TypeDecl>);
inline jule::Ptr<_1e6a8bce6_Value> _1e5e24ba7_buildExpr(jule::Ptr<_1e5d58e82_Expr>);
inline jule::Ptr<_1e6ab5d97_TypeAlias> _1e5e24e4e_buildTypeAlias(jule::Ptr<_1e5d6b0b5_TypeAliasDecl>);
inline jule::Ptr<_1e5d37658_Field> _1e5e2526d_buildField(jule::Ptr<_1e5d6e6a1_FieldDecl>);
inline jule::Slice<jule::Ptr<_1e5d37658_Field>> _1e5e25515_buildFields(jule::Slice<jule::Ptr<_1e5d6e6a1_FieldDecl>>&);
inline jule::Ptr<_1e5d4518d_Struct> _1e5e257ac_buildStruct(jule::Ptr<_1e5d7000e_StructDecl>);
inline jule::Ptr<_1e5e1ace1_Param> _1e5e25a54_buildParam(jule::Ptr<_1e5d65455_ParamDecl>);
inline jule::Slice<jule::Ptr<_1e5e1ace1_Param>> _1e5e25dc8_buildParams(jule::Slice<jule::Ptr<_1e5d65455_ParamDecl>>&);
inline jule::Ptr<_1e5e1a62b_RetType> _1e5e26170_buildRetType(jule::Ptr<_1e5d57a74_RetTypeDecl>);
inline jule::Ptr<_1e5e1c62d_Fn> _1e5e26417_buildFn(jule::Ptr<_1e5d66775_FnDecl>);
inline jule::Slice<jule::Ptr<_1e5e1c62d_Fn>> _1e5e266ae_buildMethods(jule::Slice<jule::Ptr<_1e5d66775_FnDecl>>&);
inline jule::Ptr<_1e5e2e4db_Trait> _1e5e26956_buildTrait(jule::Ptr<_1e5d70619_TraitDecl>);
inline jule::Ptr<_1e5e30b3b_EnumItem> _1e5e26bed_buildEnumItem(jule::Ptr<_1e5d6c924_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1e5e30b3b_EnumItem>> _1e5e26e95_buildEnumItems(jule::Slice<jule::Ptr<_1e5d6c924_EnumItemDecl>>&);
inline jule::Ptr<_1e5e31631_Enum> _1e5e2723c_buildEnum(jule::Ptr<_1e5d6d44c_EnumDecl>);
inline jule::Ptr<_1e5e32665_TypeEnumItem> _1e5e2768d_buildTypeEnumItem(jule::Ptr<_1e5d6de53_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_1e5e32665_TypeEnumItem>> _1e5e27935_buildTypeEnumItems(jule::Slice<jule::Ptr<_1e5d6de53_TypeEnumItemDecl>>&);
inline jule::Ptr<_1e5e32c2b_TypeEnum> _1e5e27bcc_buildTypeEnum(jule::Ptr<_1e5d6e151_TypeEnumDecl>);
inline jule::Ptr<_1e6a3dd20_Var> _1e5e27e74_buildVar(jule::Ptr<_1e5d67754_VarDecl>);
inline jule::Slice<jule::Ptr<_1e6a3dd20_Var>> _1e5e2821b_buildVars(jule::Slice<jule::Ptr<_1e5d67754_VarDecl>>);
inline jule::Ptr<_1e5eb8a5e_Impl> _1e5e284b3_buildImpl(jule::Ptr<_1e5d70c24_Impl>);
inline jule::Bool _1e5e95c17_matchConstraint(jule::Str&, jule::Ptr<_1e6ab6a8a_TypeKind>&);
inline jule::Bool _1e5e9780c_isBuiltinConstraint(jule::Str&);
inline jule::Ptr<_1e6a09505_scopeChecker> _1e5ea1ad0_newScopeCheckerBase(jule::Ptr<_1e6a22441_Sema>&, jule::Ptr<_1e5e202ce_FnIns>);
inline jule::Ptr<_1e6a09505_scopeChecker> _1e5ea265d_newScopeChecker(jule::Ptr<_1e6a22441_Sema>&, jule::Ptr<_1e5e202ce_FnIns>);
inline jule::Ptr<_1e6a0912b_scopeLabel> _1e5ea351b_findLabelParent(jule::Str, jule::Ptr<_1e6a09505_scopeChecker>);
inline jule::Bool _1e5e97664_modelIsGotoScope(jule::Any, jule::Ptr<_1e6a06700_Scope>&);
inline jule::Bool _1e5ea44d9_stmtIsGotoScope(jule::Any&, jule::Ptr<_1e6a06700_Scope>&);
inline jule::I64 _1e5ea5397_countMatchType(jule::Ptr<_1e6a083d3_Match>&, jule::Ptr<_1e6ab6a8a_TypeKind>&);
inline jule::Slice<jule::Ptr<_1e6a8ac6d_Data>> _1e5eb3152_getDatasFromTupleData(jule::Ptr<_1e6a8ac6d_Data>&);
inline jule::Slice<jule::Any> _1e5eb609a_getExprModels(jule::Any&);
inline jule::Bool _1e5eb6ad4_checkMut(jule::Ptr<_1e6a22441_Sema>&, jule::Ptr<_1e6a8ac6d_Data>&, jule::Ptr<_1e6a8ac6d_Data>, jule::Ptr<_1e47137a5_Token>);
inline jule::Bool _1e5eb7662_checkAssign(jule::Ptr<_1e6a22441_Sema>&, jule::Ptr<_1e6a8ac6d_Data>&, jule::Ptr<_1e6a8ac6d_Data>, jule::Ptr<_1e47137a5_Token>);
inline jule::Bool _1e5eb2ccd_isValidAstStForNextSt(jule::Any&);
inline jule::Bool _1e5e64ad7_isValidStForNextSt(jule::Any&);
inline jule::Bool _1e5ea1393_stmtIsDef(jule::Any&);
inline jule::Ptr<_1e6a3dd20_Var> _1e6a16de7_findVarInPackage(jule::Slice<jule::Ptr<_1e6a86010_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1e6ab5d97_TypeAlias> _1e6a17326_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1e6a86010_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1e5d4518d_Struct> _1e6a17711_findStructInPackage(jule::Slice<jule::Ptr<_1e6a86010_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1e5e1c62d_Fn> _1e6a17b73_findFnInPackage(jule::Slice<jule::Ptr<_1e6a86010_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1e5e2e4db_Trait> _1e6a17e81_findTraitInPackage(jule::Slice<jule::Ptr<_1e6a86010_SymbolTable>>&, jule::Str);
inline jule::Ptr<_1e5e31631_Enum> _1e6a182c2_findEnumInPackage(jule::Slice<jule::Ptr<_1e6a86010_SymbolTable>>&, jule::Str);
inline jule::Ptr<_1e5e32c2b_TypeEnum> _1e6a18613_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1e6a86010_SymbolTable>>&, jule::Str);
inline jule::Bool _1e6a1e828_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _1e6a20582_isValidModelForRef(jule::Any&);
inline _1e43e3a18_Log _1e6a20a27_compilerErr(jule::Ptr<_1e47137a5_Token>&, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e6a20d68_impIsLookupable(jule::Ptr<_1e6a192e5_ImportInfo>&, jule::Str);
inline void _1e6a21165_appendRetVars(jule::Slice<jule::Ptr<_1e6a3dd20_Var>>&, jule::Ptr<_1e5e202ce_FnIns>&);
inline void _1e6a2141d_appendParamVars(jule::Slice<jule::Ptr<_1e6a3dd20_Var>>&, jule::Ptr<_1e5e202ce_FnIns>&);
inline void _1e6a216e8_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1e6ab5d97_TypeAlias>>&, jule::Ptr<_1e5e202ce_FnIns>&);
inline jule::Ptr<_1e6a86010_SymbolTable> _1e6a21a4a_findFile(jule::Slice<jule::Ptr<_1e6a86010_SymbolTable>>&, jule::Ptr<_1e4718b40_File>&);
inline void _1e6a21eac_pushSugggestion(_1e43e3a18_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e6a65121_traitHasReferenceReceiver(jule::Ptr<_1e5e2e4db_Trait>&);
inline jule::Bool _1e6a5c14b_floatAssignable(jule::Str, jule::Ptr<_1e6a8ac6d_Data>&);
inline jule::Bool _1e6a5c27d_sigAssignable(jule::Str, jule::Ptr<_1e6a8ac6d_Data>&);
inline jule::Bool _1e6a7386b_unsigAssignable(jule::Str, jule::Ptr<_1e6a8ac6d_Data>&);
inline jule::Bool _1e6a7399d_intAssignable(jule::Str, jule::Ptr<_1e6a8ac6d_Data>&);
inline jule::Ptr<_1e5d21268_Directive> _1e6ab12d2_findDirective(jule::Slice<jule::Ptr<_1e5d21268_Directive>>&, jule::Str);
inline jule::Any _1e6ab1667_findBuiltinsImport(jule::Str, jule::Ptr<_1e6a192e5_ImportInfo>);
inline void _1e6ab1876_fitBitsize(jule::Ptr<_1e6a8ac6d_Data>&);
inline void _1e6ab1b73_makeStructLitAlloc(jule::Ptr<_1e6a8ac6d_Data>&, jule::Ptr<_1e5e15967_StructLitExprModel>&);
inline jule::Ptr<_1e6a3dd20_Var> _1e6ab1eb4_buildErrorVar(jule::Ptr<_1e6a06700_Scope>&, jule::Ptr<_1e5d5d250_FnCallExpr>&);
inline jule::Any _1e6ab2305_findBuiltinsSema(jule::Str, jule::Ptr<_1e6a22441_Sema>);
inline jule::Bool _1e6ab259c_isOkForShifting(jule::Ptr<_1e6a8ac6d_Data>&);
inline jule::Bool _1e6ab2954_isInstancedStruct(jule::Ptr<_1e5d714d8_StructIns>);
inline jule::Bool _1e6ab2c1d_isPtrArithmeticCompatibleInt(jule::Ptr<_1e6a8ac6d_Data>&);
inline void _1e6ab2e60_applyCastKindModel(jule::Ptr<_1e6a8ac6d_Data>&, jule::Ptr<_1e6ab6a8a_TypeKind>&);
inline void _1e6ab3218_applyCastKind(jule::Ptr<_1e6a8ac6d_Data>&, jule::Ptr<_1e6ab6a8a_TypeKind>&);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6ab3416_buildVoidData(void);
inline jule::Str _1e6ab36d0_checkDataForIntegerIndexing(jule::Ptr<_1e6a8ac6d_Data>&);
inline void _1e6ab3999_applyCastModelByEnum(jule::Ptr<_1e6a8ac6d_Data>&, jule::Ptr<_1e5e31631_Enum>);
inline void _1e6ab3c52_castConstByType(jule::Str&, jule::Ptr<_1e6a8ac6d_Data>&);
inline void _1e6ab425d_updateModelToGenericIns(jule::Any&, jule::Ptr<_1e5e202ce_FnIns>&);
inline jule::Bool _1e6ab44a0_pushSubIdentFromExpr(jule::Any, jule::Ptr<_1e5d55676_SubIdentTypeDecl>&);
inline jule::Bool _1e6acd387_kindUsesGenerics(jule::Any&, jule::Slice<jule::Ptr<_1e5d62045_GenericDecl>>&);
inline jule::Bool _1e6acd71c_hasDirective(jule::Slice<jule::Ptr<_1e5d21268_Directive>>&, jule::Str);
inline jule::Bool _1e6acd9b4_canGetPtr(jule::Ptr<_1e6a8ac6d_Data>&);
inline jule::Bool _1e6acdcd3_isValidForSptrType(jule::Ptr<_1e6ab6a8a_TypeKind>&);
inline jule::Bool _1e6ace07a_isValidForRef(jule::Ptr<_1e6ab6a8a_TypeKind>&);
inline jule::Bool _1e6ace344_isBuiltinStrConvertable(jule::Ptr<_1e6ab6a8a_TypeKind>&);
inline jule::Str _1e6ace5b9_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Ptr<_1e6abb562_Prim> _1e6ace971_buildPrimType(jule::Str);
inline jule::Ptr<_1e5d4518d_Struct> _1e6acec18_getStructFromKind(jule::Ptr<_1e6ab6a8a_TypeKind>);
inline jule::Bool _1e6aceeb0_isPrim(jule::Str);
inline void _1e6ad0268_applyImplicitCast(jule::Ptr<_1e6ab6a8a_TypeKind>&, jule::Ptr<_1e6a8ac6d_Data>&);
inline std::tuple<jule::Ptr<_1e6a86010_SymbolTable>,jule::Slice<_1e43e3a18_Log>> _1e6ad315b_buildSymbols(jule::Ptr<_1e5d201bd_Ast>&, jule::Trait<_1e6a16a62_Importer>&, jule::Ptr<_1e5e28a13_symbolBuilder>);
inline std::tuple<jule::Ptr<_1e6a1c24e_Package>,jule::Slice<_1e43e3a18_Log>> _1e6ad358a_analyzePackage(jule::Slice<jule::Ptr<_1e5d201bd_Ast>>&, jule::Trait<_1e6a16a62_Importer>&, jule::I64&);
inline std::tuple<jule::Ptr<_1e6a1c24e_Package>,jule::Slice<_1e43e3a18_Log>> _1e6ad3975_AnalyzePackage(jule::Slice<jule::Ptr<_1e5d201bd_Ast>>, jule::Trait<_1e6a16a62_Importer>, jule::I64);
inline jule::Ptr<_1e5e202ce_FnIns> _1e6adc792_findBuiltinFn(jule::Str);
inline jule::Ptr<_1e6ab5d97_TypeAlias> _1e6ade695_findBuiltinTypeAlias(jule::Str);
inline jule::Any _1e6ae0278_findBuiltinDef(jule::Str);
inline jule::Any _1e6ae0c90_findBuiltinDefStdDebug(jule::Str);
inline jule::Any _1e6b19a33_findBuiltinDefStdMem(jule::Str);
inline jule::Any _1e6b66651_findBuiltinDefStdJuleIntegrated(jule::Str);
inline jule::Any _1e6b656e9_findPackageBuiltinDef(jule::Str, jule::Str);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6b407a1_builtinCallerCommonPlain(jule::Ptr<_1e6a8c7db_Eval>&, jule::Ptr<_1e5d5d250_FnCallExpr>&, jule::Ptr<_1e6a8ac6d_Data>&);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6b49e5e_builtinCallerCommon(jule::Ptr<_1e6a8c7db_Eval>&, jule::Ptr<_1e5d5d250_FnCallExpr>&, jule::Ptr<_1e6a8ac6d_Data>&);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6b66112_builtinCallerCommonMut(jule::Ptr<_1e6a8c7db_Eval>&, jule::Ptr<_1e5d5d250_FnCallExpr>&, jule::Ptr<_1e6a8ac6d_Data>&);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6b41450_builtinCallerError(jule::Ptr<_1e6a8c7db_Eval>&, jule::Ptr<_1e5d5d250_FnCallExpr>&);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6b62ae2_builtinCallerOut(jule::Ptr<_1e6a8c7db_Eval>&, jule::Ptr<_1e5d5d250_FnCallExpr>&, jule::Ptr<_1e6a8ac6d_Data>&);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6b654da_builtinCallerOutln(jule::Ptr<_1e6a8c7db_Eval>&, jule::Ptr<_1e5d5d250_FnCallExpr>&, jule::Ptr<_1e6a8ac6d_Data>&);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6add5b7_builtinCallerNew(jule::Ptr<_1e6a8c7db_Eval>&, jule::Ptr<_1e5d5d250_FnCallExpr>&, jule::Ptr<_1e6a8ac6d_Data>&);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6b2e95a_builtinCallerPanic(jule::Ptr<_1e6a8c7db_Eval>&, jule::Ptr<_1e5d5d250_FnCallExpr>&, jule::Ptr<_1e6a8ac6d_Data>&);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6b48336_builtinCallerMake(jule::Ptr<_1e6a8c7db_Eval>&, jule::Ptr<_1e5d5d250_FnCallExpr>&, jule::Ptr<_1e6a8ac6d_Data>&);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6b4176e_builtinCallerAppend(jule::Ptr<_1e6a8c7db_Eval>&, jule::Ptr<_1e5d5d250_FnCallExpr>&, jule::Ptr<_1e6a8ac6d_Data>&);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6b62295_callerCopySlice(jule::Ptr<_1e6a8ac6d_Data>&, jule::Ptr<_1e6a8c7db_Eval>&, jule::Ptr<_1e5d5d250_FnCallExpr>&, jule::Ptr<_1e6a8ac6d_Data>&);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6adadcd_callerCopyStr(jule::Ptr<_1e6a8ac6d_Data>&, jule::Ptr<_1e6a8c7db_Eval>&, jule::Ptr<_1e5d5d250_FnCallExpr>&, jule::Ptr<_1e6a8ac6d_Data>&);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6b55420_builtinCallerCopy(jule::Ptr<_1e6a8c7db_Eval>&, jule::Ptr<_1e5d5d250_FnCallExpr>&, jule::Ptr<_1e6a8ac6d_Data>&);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6b4020c_builtinCallerClone(jule::Ptr<_1e6a8c7db_Eval>&, jule::Ptr<_1e5d5d250_FnCallExpr>&, jule::Ptr<_1e6a8ac6d_Data>&);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6b0747c_builtinCallerAssert(jule::Ptr<_1e6a8c7db_Eval>&, jule::Ptr<_1e5d5d250_FnCallExpr>&, jule::Ptr<_1e6a8ac6d_Data>&);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6b2361e_builtinCallerStdMemSizeOf(jule::Ptr<_1e6a8c7db_Eval>&, jule::Ptr<_1e5d5d250_FnCallExpr>&, jule::Ptr<_1e6a8ac6d_Data>&);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6b74c9c_builtinCallerStdMemAlignOf(jule::Ptr<_1e6a8c7db_Eval>&, jule::Ptr<_1e5d5d250_FnCallExpr>&, jule::Ptr<_1e6a8ac6d_Data>&);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6b75132_builtinCallerStdMemFree(jule::Ptr<_1e6a8c7db_Eval>&, jule::Ptr<_1e5d5d250_FnCallExpr>&, jule::Ptr<_1e6a8ac6d_Data>&);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6b75561_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1e6a8c7db_Eval>&, jule::Ptr<_1e5d5d250_FnCallExpr>&, jule::Ptr<_1e6a8ac6d_Data>&);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6b7597e_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1e6a8c7db_Eval>&, jule::Ptr<_1e5d5d250_FnCallExpr>&, jule::Ptr<_1e6a8ac6d_Data>&);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6b75dbe_builtinCallerStdDebugOut(jule::Ptr<_1e6a8c7db_Eval>&, jule::Ptr<_1e5d5d250_FnCallExpr>&, jule::Ptr<_1e6a8ac6d_Data>&);
inline jule::Ptr<_1e6a8ac6d_Data> _1e6b762a9_builtinCallerStdDebugOutln(jule::Ptr<_1e6a8c7db_Eval>&, jule::Ptr<_1e5d5d250_FnCallExpr>&, jule::Ptr<_1e6a8ac6d_Data>&);
inline jule::Bool _1e6baa3ba_FindModuleFile(jule::Slice<jule::Ptr<_1e261a48e_DirEntry>>&);
inline jule::Str _1e6baa4ec_FindModuleFileDeep(jule::Str);
inline jule::Slice<_1e43e3a18_Log> _1e6baa783_CheckModuleFile(jule::Str);
inline jule::Ptr<_1c9978c99_FileInfo> _1c99c0494_ParseFile(jule::Ptr<_1e4718b40_File>);
inline std::tuple<jule::Ptr<_1e5d201bd_Ast>,jule::Slice<_1e43e3a18_Log>> _1c99c09c2_parseFileset(jule::Ptr<_1e4718b40_File>);
inline jule::Ptr<_1e5d64c7e_ScopeTree> _1c99c13c9_newScope(void);
inline std::tuple<jule::Bool,jule::Bool> _1c99c16d7_isSt(jule::Ptr<_1e47137a5_Token>, jule::Ptr<_1e47137a5_Token>);
inline jule::Bool _1c99c1a28_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1e47137a5_Token>>&, jule::I64&);
inline std::tuple<jule::I64,jule::Bool> _1c99c1dad_nextStPos(jule::Slice<jule::Ptr<_1e47137a5_Token>>&, jule::I64);
inline std::tuple<jule::Slice<jule::Ptr<_1e47137a5_Token>>,jule::Bool> _1c99c21ee_skipSt(jule::I64&, jule::Slice<jule::Ptr<_1e47137a5_Token>>);
inline jule::Slice<jule::Ptr<_1c99c24eb_stmt>> _1c99c2892_splitStmts(jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Slice<jule::Ptr<_1e47137a5_Token>> _1c99ce294_getBlockExpr(jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline std::tuple<jule::Slice<jule::Ptr<_1e47137a5_Token>>,jule::Slice<jule::Ptr<_1e47137a5_Token>>> _1c99ce5e6_splitDelim(jule::Slice<jule::Ptr<_1e47137a5_Token>>&, jule::U64);
inline jule::I64 _1c99ce88d_findLowestPrecOp(jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Ptr<_1e5d5aeea_IdentExpr> _1c99cebac_buildIdentExpr(jule::Ptr<_1e47137a5_Token>&);
inline std::tuple<jule::Slice<jule::Ptr<_1e47137a5_Token>>,jule::I64> _1c99cee54_getRangeExprTokens(jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Bool _1c99da866_checkAssignTokens(jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline _1e43e3a18_Log _1c99dba87_makeErr(jule::I64, jule::I64, jule::Ptr<_1e4718b40_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1e47137a5_Token>> _1c99dc060_range(jule::I64&, jule::Str, jule::Str, jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline std::tuple<jule::Slice<jule::Ptr<_1e47137a5_Token>>,jule::Slice<jule::Ptr<_1e47137a5_Token>>> _1c99dc307_rangeLast(jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>>,jule::Slice<_1e43e3a18_Log>> _1c99dc6e2_partsKind(jule::Slice<jule::Ptr<_1e47137a5_Token>>&, jule::Str, jule::Bool);
inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>>,jule::Slice<_1e43e3a18_Log>> _1c99dcacc_parts(jule::Slice<jule::Ptr<_1e47137a5_Token>>&, jule::U64, jule::Bool);
inline jule::Str _1c99dcd74_getCloseKindOfBrace(jule::Str);
inline _1e43e3a18_Log _1c99dd25e_compilerErr(jule::Ptr<_1e47137a5_Token>&, jule::Str&, jule::Slice<jule::Any>);
inline void _1c99dd68d_pushSuggestion(_1e43e3a18_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1c99dd935_tokstoa(jule::Slice<jule::Ptr<_1e47137a5_Token>>&);
inline jule::Bool _1c99ed99a_isPub(jule::Str&);
inline jule::Ptr<_1e5d54961_TypeDecl> _1c99ee319_buildVoidType(void);
inline jule::Ptr<_1e5d54961_TypeDecl> _1c99ee57d_buildPrimType(jule::Ptr<_1e47137a5_Token>);
inline jule::I64 _1c99ee8be_mapColon(jule::Slice<jule::Ptr<_1e47137a5_Token>>&, jule::I64&);
inline std::tuple<jule::Bool,jule::Bool> _1e6b7a0c1_checkOs(jule::Str);
inline std::tuple<jule::Bool,jule::Bool> _1e6b7a203_checkArch(jule::Str);
inline jule::Bool _1e6b7a335_isPassFileAnnotation(jule::Str);
inline void _1e6b94838_setOsVars(jule::Slice<jule::Str>&);
inline void _1e6b94a8b_setArchVars(jule::Slice<jule::Str>&);
inline void _1e6b94d44_initVars(jule::Slice<jule::Str>&, _1e6b9452a_CompileInfo&);
inline jule::Slice<jule::U8> _1e6ed3d0e_readBuff(jule::Str);
inline _1e43e3a18_Log _1e6eda9d6_flatCompilerErr(jule::Str);
inline void _1c8c49444_pushPasses(jule::Ptr<_1e6a1c24e_Package>&, jule::Slice<jule::Str>&);
inline jule::Slice<jule::Str> _1c8c7984d_getAllUniquePasses(jule::Ptr<_1e6a1c24e_Package>&, jule::Slice<jule::Ptr<_1e6a192e5_ImportInfo>>);
inline _1e6b9452a_CompileInfo _1c8ca6d75_buildCompileInfo(void);
inline void _1c9b0e6b0_EliminateDefines(jule::Ptr<_1c9974888_IR>&);
inline jule::Ptr<_1e5d21268_Directive> _1c9b0ea45_findDirective(jule::Slice<jule::Ptr<_1e5d21268_Directive>>&, jule::Str);
inline jule::Bool _1c9b0ed86_hasDirective(jule::Slice<jule::Ptr<_1e5d21268_Directive>>&, jule::Str);
inline void _1c9b139d3_eliminateDeadCodeOfScope(jule::Ptr<_1e6a06700_Scope>);
inline void _1c9b13c69_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1e5e1c62d_Fn>>&);
inline void _1c9b13eab_eliminateFunctionsScopePackage(jule::Ptr<_1e6a1c24e_Package>&);
inline void _1c9b14253_eliminateScopePackage(jule::Ptr<_1e6a1c24e_Package>&);
inline void _1c9b14462_EliminateScopes(jule::Ptr<_1c9974888_IR>&);
inline jule::Bool _1e487253a_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _1e4873b46_isConstantValidConditionalCase(jule::Ptr<_1e6a068dc_If>&);
inline jule::Bool _1e48766a4_isUnreachableExpr(jule::Any&);
inline jule::Bool _1e4877908_isConstantValidMatchCase(jule::Ptr<_1e6a08933_Case>&);
inline jule::Bool _1e488554d_isUnreachableConditionalCase(jule::Ptr<_1e6a068dc_If>&);
inline jule::Bool _1e48a1a75_isUnreachableMatchCase(jule::Ptr<_1e6a08933_Case>&);
inline std::tuple<jule::Bool,jule::U64> _1e4c7022e_checkForBitShiftOpt(jule::Ptr<_1e5e151b4_OperandExprModel>&, jule::Ptr<_1e5e151b4_OperandExprModel>&);
inline void _1e4c76ba3_PushOptLevel(jule::I64);
inline void _1c9a9e6a5_detectEnabled(void);
inline void _1c9b31825_Throw(jule::Str);
inline jule::U64 _1b02a10e1_unix(void);
inline jule::U64 _1b02a1432_unixYearToSeconds(jule::U64, jule::Bool&);
inline jule::U64 _1b02a17b7_unixMonthToSeconds(jule::U64, jule::Bool);
inline jule::Bool _1b022b555_isCopyOptimizable(jule::Ptr<_1e6a8ac6d_Data>&);
inline jule::Bool _1b022b8da_isIterCopyOptimizable(jule::Ptr<_1e6a8ac6d_Data>&, jule::Ptr<_1e6a3dd20_Var>&);
inline jule::Str _1b02399d6_decomposeCommonEsq(jule::U8);
inline jule::Str _1b0239cc2_sbtoa(jule::U8);
inline jule::Str _1b023a069_cstrBytes(jule::Slice<jule::U8>);
inline jule::Str _1b023a388_cstrLit(jule::Slice<jule::U8>);
inline jule::Str _1b023a696_ftoa(jule::F64, jule::I64);
inline jule::Str _1b023a93d_itoa(jule::I64);
inline jule::Str _1b023abd5_utoa(jule::U64);
inline jule::Bool _1b023b08c_isForwarded(jule::Ptr<_1e6a06700_Scope>&);
inline jule::Bool _1b023b356_isBuiltinCallHasDebuginf(jule::Ptr<_1e5e1602d_FnCallExprModel>&);
inline void _1b02a6635_iterFiles(jule::Ptr<_1e6a1c24e_Package>&, jule::Fn<void(jule::Ptr<_1e6a86010_SymbolTable>&)>);
inline void _1b02a6888_prepareStructure(jule::Ptr<_1e5d4518d_Struct>&);
inline jule::Str _1b02a6b30_concatAllParts(jule::Slice<jule::Ptr<_1e47137a5_Token>>);
inline jule::Ptr<_1e5d21268_Directive> _1b02b0056_findDirective(jule::Slice<jule::Ptr<_1e5d21268_Directive>>&, jule::Str);
inline jule::Bool _1b02b03db_hasDirective(jule::Slice<jule::Ptr<_1e5d21268_Directive>>&, jule::Str);
inline void _1e43b2ca1_printErrorMessage(jule::Str);
inline void _1e43c6424_help(jule::Slice<jule::Str>&);
inline void _1e43c6b72_version(jule::Slice<jule::Str>&);
inline void _1e43c8525_toolDistos(void);
inline void _1e43c8c73_toolDistarch(void);
inline void _1e43c94c1_tool(jule::Slice<jule::Str>&);
inline void _1e43b3ba3_julenv(jule::Slice<jule::Str>&);
inline void _1e43d5d7e_mod(jule::Slice<jule::Str>&);
inline jule::Bool _1e24d6bc9_processCommand(jule::Slice<jule::Str>&);
inline void _1e43ca00a_showInfo(void);
void entry_point(void);
inline void _1e43b9cdb_enableVtp(void);
inline void _1e43c79a8_init(void);
inline void _1b02cc370_init(void);
inline jule::Ptr<_1e32e8a84_File> _1b02cde21_openOutput(jule::Str&);
inline void _1b02da108_clearObjects(void);
inline void _1b02c6556_compileIr(jule::Str, jule::Str);
inline jule::Bool _1b02c5ec3_isCppSourceFile(jule::Str);
inline void _1b02ca6d1_pushCompCmdClang(jule::Str&);
inline void _1b02c88aa_pushCompCmdGcc(jule::Str&);
inline std::tuple<jule::Str,jule::Str> _1b02edcdc_genCompileCmd(jule::Str, jule::Ptr<_1c9974888_IR>&);
inline jule::Str _1b02c7d3d_getCompilePath(void);
inline void _1b02c83c1_applyTargetIndependentOptimizations(jule::Ptr<_1c9974888_IR>&);
inline void _1b02d5db2_checkCompilerFlag(void);
inline void _1b02c5ac7_checkTargetArch(jule::Str);
inline void _1b02c9933_checkTargetOs(jule::Str);
inline void _1b02c9a65_checkTargetFlag(jule::Str&);
inline void _1b030aa63_checkOptFlag(jule::Str&);
inline void _1b030adc6_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1b030b008_checkFlags(jule::Slice<jule::Str>&);
inline void _1b030b13a_setupSemaFlags(jule::I64&);
inline jule::Ptr<_1c9974888_IR> _1b030b26c_buildIr(jule::Slice<jule::Str>&);
inline void _1b030b39e_compileCommand(jule::Slice<jule::Str>&);


struct _1e6a16a62_ImporterMptrData {
	void(*_1e6a15984_SetModPath)(jule::Trait<_1e6a16a62_Importer>, jule::Str);
	jule::Str(*_1e6a15bc6_GetModPath)(jule::Trait<_1e6a16a62_Importer>);
	jule::Str(*_1e6a15ed4_ModById)(jule::Trait<_1e6a16a62_Importer>, jule::I64);
	jule::Ptr<_1e6a192e5_ImportInfo>(*_1e6a162e2_GetImport)(jule::Trait<_1e6a16a62_Importer>, jule::Str);
	std::tuple<jule::Slice<jule::Ptr<_1e5d201bd_Ast>>,jule::Slice<_1e43e3a18_Log>>(*_1e6a16699_ImportPackage)(jule::Trait<_1e6a16a62_Importer>, jule::Str, jule::Bool);
	void(*_1e6a1691e_Imported)(jule::Trait<_1e6a16a62_Importer>, jule::Ptr<_1e6a192e5_ImportInfo>);
};

struct _1e6ab665b_KindMptrData {
	jule::Str(*_1e6ab620a_Str)(jule::Trait<_1e6ab665b_Kind>);
	jule::Bool(*_1e6ab6518_Equals)(jule::Trait<_1e6ab665b_Kind>, jule::Ptr<_1e6ab6a8a_TypeKind>);
};

struct _1e6ad2600_LookupMptrData {
	jule::Ptr<_1e6a192e5_ImportInfo>(*_1e6ad07a7_FindPackage)(jule::Trait<_1e6ad2600_Lookup>, jule::Str);
	jule::Ptr<_1e6a192e5_ImportInfo>(*_1e6ad0ab5_SelectPackage)(jule::Trait<_1e6ad2600_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_1e6a192e5_ImportInfo>)>);
	jule::Ptr<_1e6a3dd20_Var>(*_1e6ad0e6c_FindVar)(jule::Trait<_1e6ad2600_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1e6ab5d97_TypeAlias>(*_1e6ad1324_FindTypeAlias)(jule::Trait<_1e6ad2600_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1e5d4518d_Struct>(*_1e6ad16cb_FindStruct)(jule::Trait<_1e6ad2600_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1e5e1c62d_Fn>(*_1e6ad1a83_FindFn)(jule::Trait<_1e6ad2600_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1e5e2e4db_Trait>(*_1e6ad1d91_FindTrait)(jule::Trait<_1e6ad2600_Lookup>, jule::Str);
	jule::Ptr<_1e5e31631_Enum>(*_1e6ad219e_FindEnum)(jule::Trait<_1e6ad2600_Lookup>, jule::Str);
	jule::Ptr<_1e5e32c2b_TypeEnum>(*_1e6ad24ac_FindTypeEnum)(jule::Trait<_1e6ad2600_Lookup>, jule::Str);
};

struct _1b0305310_CommonFlagMptrData {
	jule::Str(*_1b02c5599_Name)(jule::Trait<_1b0305310_CommonFlag>);
	jule::I32(*_1b02c56cb_Short)(jule::Trait<_1b0305310_CommonFlag>);
	jule::Str(*_1b02c580d_What)(jule::Trait<_1b0305310_CommonFlag>);
	void(*_1b02c5995_Reset)(jule::Trait<_1b0305310_CommonFlag>);
};



inline void _1e6a15984_SetModPath_0(jule::Trait<_1e6a16a62_Importer> _self_, jule::Str _1729_path) {
	_1e7015a00_SetModPath(_self_.safe_ptr<_1e708dccb_JuleImporter>(), _1729_path);
}
inline jule::Str _1e6a15bc6_GetModPath_0(jule::Trait<_1e6a16a62_Importer> _self_) {
	return _1e7061650_GetModPath(_self_.safe_ptr<_1e708dccb_JuleImporter>());
}
inline jule::Str _1e6a15ed4_ModById_0(jule::Trait<_1e6a16a62_Importer> _self_, jule::I64 _2522_id) {
	return _1e7063784_ModById(_self_.safe_ptr<_1e708dccb_JuleImporter>(), _2522_id);
}
inline jule::Ptr<_1e6a192e5_ImportInfo> _1e6a162e2_GetImport_0(jule::Trait<_1e6a16a62_Importer> _self_, jule::Str _3128_path) {
	return _1e7073222_GetImport(_self_.safe_ptr<_1e708dccb_JuleImporter>(), _3128_path);
}
inline std::tuple<jule::Slice<jule::Ptr<_1e5d201bd_Ast>>,jule::Slice<_1e43e3a18_Log>> _1e6a16699_ImportPackage_0(jule::Trait<_1e6a16a62_Importer> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod) {
	return _1c8b8aa6c_ImportPackage(_self_.safe_ptr<_1e708dccb_JuleImporter>(), _3732_path, _3743_update_mod);
}
inline void _1e6a1691e_Imported_0(jule::Trait<_1e6a16a62_Importer> _self_, jule::Ptr<_1e6a192e5_ImportInfo> _4131__0) {
	_1c8b94c96_Imported(_self_.safe_ptr<_1e708dccb_JuleImporter>(), _4131__0);
}
inline jule::Str _1e6ab620a_Str_0(jule::Trait<_1e6ab665b_Kind> _self_) {
	return _1e5d3a65b_Str(_self_.safe_ptr<_1e5d714d8_StructIns>());
}
inline jule::Bool _1e6ab6518_Equals_0(jule::Trait<_1e6ab665b_Kind> _self_, jule::Ptr<_1e6ab6a8a_TypeKind> _5622_other) {
	return _1e5d46d71_Equals(_self_.data.as<_1e5d714d8_StructIns>(), _5622_other);
}
inline jule::Str _1e6ab620a_Str_1(jule::Trait<_1e6ab665b_Kind> _self_) {
	return _1e5e2060e_Str(_self_.safe_ptr<_1e5e202ce_FnIns>());
}
inline jule::Bool _1e6ab6518_Equals_1(jule::Trait<_1e6ab665b_Kind> _self_, jule::Ptr<_1e6ab6a8a_TypeKind> _5622_other) {
	return _1e5e2091c_Equals(_self_.data.as<_1e5e202ce_FnIns>(), _5622_other);
}
inline jule::Str _1e6ab620a_Str_2(jule::Trait<_1e6ab665b_Kind> _self_) {
	return _1e5e2e8d7_Str(_self_.safe_ptr<_1e5e2e4db_Trait>());
}
inline jule::Bool _1e6ab6518_Equals_2(jule::Trait<_1e6ab665b_Kind> _self_, jule::Ptr<_1e6ab6a8a_TypeKind> _5622_other) {
	return _1e5e2ebe5_Equals(_self_.data.as<_1e5e2e4db_Trait>(), _5622_other);
}
inline jule::Str _1e6ab620a_Str_3(jule::Trait<_1e6ab665b_Kind> _self_) {
	return _1e5e31994_Str(_self_.safe_ptr<_1e5e31631_Enum>());
}
inline jule::Bool _1e6ab6518_Equals_3(jule::Trait<_1e6ab665b_Kind> _self_, jule::Ptr<_1e6ab6a8a_TypeKind> _5622_other) {
	return _1e5e31ca2_Equals(_self_.data.as<_1e5e31631_Enum>(), _5622_other);
}
inline jule::Str _1e6ab620a_Str_4(jule::Trait<_1e6ab665b_Kind> _self_) {
	return _1e5e3305b_Str(_self_.safe_ptr<_1e5e32c2b_TypeEnum>());
}
inline jule::Bool _1e6ab6518_Equals_4(jule::Trait<_1e6ab665b_Kind> _self_, jule::Ptr<_1e6ab6a8a_TypeKind> _5622_other) {
	return _1e5e33369_Equals(_self_.data.as<_1e5e32c2b_TypeEnum>(), _5622_other);
}
inline jule::Str _1e6ab620a_Str_5(jule::Trait<_1e6ab665b_Kind> _self_) {
	return _1e6ab6e86_Str(_self_.safe_ptr<_1e6ab6a8a_TypeKind>());
}
inline jule::Bool _1e6ab6518_Equals_5(jule::Trait<_1e6ab665b_Kind> _self_, jule::Ptr<_1e6ab6a8a_TypeKind> _5622_other) {
	return _1e6ab7294_Equals(_self_.data.as<_1e6ab6a8a_TypeKind>(), _5622_other);
}
inline jule::Str _1e6ab620a_Str_6(jule::Trait<_1e6ab665b_Kind> _self_) {
	return _1e6abb8c5_Str(_self_.safe_ptr<_1e6abb562_Prim>());
}
inline jule::Bool _1e6ab6518_Equals_6(jule::Trait<_1e6ab665b_Kind> _self_, jule::Ptr<_1e6ab6a8a_TypeKind> _5622_other) {
	return _1e6abbbd3_Equals(_self_.data.as<_1e6abb562_Prim>(), _5622_other);
}
inline jule::Str _1e6ab620a_Str_7(jule::Trait<_1e6ab665b_Kind> _self_) {
	return _1e6ac0159_Str(_self_.safe_ptr<_1e6abece6_Sptr>());
}
inline jule::Bool _1e6ab6518_Equals_7(jule::Trait<_1e6ab665b_Kind> _self_, jule::Ptr<_1e6ab6a8a_TypeKind> _5622_other) {
	return _1e6ac0467_Equals(_self_.data.as<_1e6abece6_Sptr>(), _5622_other);
}
inline jule::Str _1e6ab620a_Str_8(jule::Trait<_1e6ab665b_Kind> _self_) {
	return _1e6ac0c5e_Str(_self_.safe_ptr<_1e6ac0753_Slc>());
}
inline jule::Bool _1e6ab6518_Equals_8(jule::Trait<_1e6ab665b_Kind> _self_, jule::Ptr<_1e6ab6a8a_TypeKind> _5622_other) {
	return _1e6ac106c_Equals(_self_.data.as<_1e6ac0753_Slc>(), _5622_other);
}
inline jule::Str _1e6ab620a_Str_9(jule::Trait<_1e6ab665b_Kind> _self_) {
	return _1e6ac1644_Str(_self_.safe_ptr<_1e6ac12d1_Tuple>());
}
inline jule::Bool _1e6ab6518_Equals_9(jule::Trait<_1e6ab665b_Kind> _self_, jule::Ptr<_1e6ab6a8a_TypeKind> _5622_other) {
	return _1e6ac1952_Equals(_self_.data.as<_1e6ac12d1_Tuple>(), _5622_other);
}
inline jule::Str _1e6ab620a_Str_10(jule::Trait<_1e6ab665b_Kind> _self_) {
	return _1e6ac216c_Str(_self_.safe_ptr<_1e6ac1d09_Map>());
}
inline jule::Bool _1e6ab6518_Equals_10(jule::Trait<_1e6ab665b_Kind> _self_, jule::Ptr<_1e6ab6a8a_TypeKind> _5622_other) {
	return _1e6ac247a_Equals(_self_.data.as<_1e6ac1d09_Map>(), _5622_other);
}
inline jule::Str _1e6ab620a_Str_11(jule::Trait<_1e6ab665b_Kind> _self_) {
	return _1e6ac2c61_Str(_self_.safe_ptr<_1e6ac28ed_Arr>());
}
inline jule::Bool _1e6ab6518_Equals_11(jule::Trait<_1e6ab665b_Kind> _self_, jule::Ptr<_1e6ab6a8a_TypeKind> _5622_other) {
	return _1e6ac306e_Equals(_self_.data.as<_1e6ac28ed_Arr>(), _5622_other);
}
inline jule::Str _1e6ab620a_Str_12(jule::Trait<_1e6ab665b_Kind> _self_) {
	return _1e6ac36bd_Str(_self_.safe_ptr<_1e6ac335a_Ptr>());
}
inline jule::Bool _1e6ab6518_Equals_12(jule::Trait<_1e6ab665b_Kind> _self_, jule::Ptr<_1e6ab6a8a_TypeKind> _5622_other) {
	return _1e6ac39cb_Equals(_self_.data.as<_1e6ac335a_Ptr>(), _5622_other);
}
inline jule::Str _1e6ab620a_Str_13(jule::Trait<_1e6ab665b_Kind> _self_) {
	return _1b02a7b0e_Str(_self_.safe_ptr<_1b02a7845_customType>());
}
inline jule::Bool _1e6ab6518_Equals_13(jule::Trait<_1e6ab665b_Kind> _self_, jule::Ptr<_1e6ab6a8a_TypeKind> _5622_other) {
	return _1b02a7e1c_Equals(_self_.data.as<_1b02a7845_customType>(), _5622_other);
}
inline jule::Ptr<_1e6a192e5_ImportInfo> _1e6ad07a7_FindPackage_0(jule::Trait<_1e6ad2600_Lookup> _self_, jule::Str _930_ident) {
	return _1e6a096e2_FindPackage(_self_.safe_ptr<_1e6a09505_scopeChecker>(), _930_ident);
}
inline jule::Ptr<_1e6a192e5_ImportInfo> _1e6ad0ab5_SelectPackage_0(jule::Trait<_1e6ad2600_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1e6a192e5_ImportInfo>)> _1332_selector) {
	return _1e6a09824_SelectPackage(_self_.safe_ptr<_1e6a09505_scopeChecker>(), _1332_selector);
}
inline jule::Ptr<_1e6a3dd20_Var> _1e6ad0e6c_FindVar_0(jule::Trait<_1e6ad2600_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1e6a09956_FindVar(_self_.safe_ptr<_1e6a09505_scopeChecker>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1e6ab5d97_TypeAlias> _1e6ad1324_FindTypeAlias_0(jule::Trait<_1e6ad2600_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1e6a09a88_FindTypeAlias(_self_.safe_ptr<_1e6a09505_scopeChecker>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1e5d4518d_Struct> _1e6ad16cb_FindStruct_0(jule::Trait<_1e6ad2600_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1e6a09bba_FindStruct(_self_.safe_ptr<_1e6a09505_scopeChecker>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1e5e1c62d_Fn> _1e6ad1a83_FindFn_0(jule::Trait<_1e6ad2600_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1e6a09cec_FindFn(_self_.safe_ptr<_1e6a09505_scopeChecker>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1e5e2e4db_Trait> _1e6ad1d91_FindTrait_0(jule::Trait<_1e6ad2600_Lookup> _self_, jule::Str _3328_ident) {
	return _1e6a09e2e_FindTrait(_self_.safe_ptr<_1e6a09505_scopeChecker>(), _3328_ident);
}
inline jule::Ptr<_1e5e31631_Enum> _1e6ad219e_FindEnum_0(jule::Trait<_1e6ad2600_Lookup> _self_, jule::Str _3727_ident) {
	return _1e6a0a061_FindEnum(_self_.safe_ptr<_1e6a09505_scopeChecker>(), _3727_ident);
}
inline jule::Ptr<_1e5e32c2b_TypeEnum> _1e6ad24ac_FindTypeEnum_0(jule::Trait<_1e6ad2600_Lookup> _self_, jule::Str _4131_ident) {
	return _1e6a0a193_FindTypeEnum(_self_.safe_ptr<_1e6a09505_scopeChecker>(), _4131_ident);
}
inline jule::Ptr<_1e6a192e5_ImportInfo> _1e6ad07a7_FindPackage_1(jule::Trait<_1e6ad2600_Lookup> _self_, jule::Str _930_ident) {
	return _1e6a19812_FindPackage(_self_.safe_ptr<_1e6a192e5_ImportInfo>(), _930_ident);
}
inline jule::Ptr<_1e6a192e5_ImportInfo> _1e6ad0ab5_SelectPackage_1(jule::Trait<_1e6ad2600_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1e6a192e5_ImportInfo>)> _1332_selector) {
	return _1e6a19b20_SelectPackage(_self_.safe_ptr<_1e6a192e5_ImportInfo>(), _1332_selector);
}
inline jule::Ptr<_1e6a3dd20_Var> _1e6ad0e6c_FindVar_1(jule::Trait<_1e6ad2600_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1e6a19ec7_FindVar(_self_.safe_ptr<_1e6a192e5_ImportInfo>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1e6ab5d97_TypeAlias> _1e6ad1324_FindTypeAlias_1(jule::Trait<_1e6ad2600_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1e6a1a37e_FindTypeAlias(_self_.safe_ptr<_1e6a192e5_ImportInfo>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1e5d4518d_Struct> _1e6ad16cb_FindStruct_1(jule::Trait<_1e6ad2600_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1e6a1a736_FindStruct(_self_.safe_ptr<_1e6a192e5_ImportInfo>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1e5e1c62d_Fn> _1e6ad1a83_FindFn_1(jule::Trait<_1e6ad2600_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1e6a1aadd_FindFn(_self_.safe_ptr<_1e6a192e5_ImportInfo>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1e5e2e4db_Trait> _1e6ad1d91_FindTrait_1(jule::Trait<_1e6ad2600_Lookup> _self_, jule::Str _3328_ident) {
	return _1e6a1adeb_FindTrait(_self_.safe_ptr<_1e6a192e5_ImportInfo>(), _3328_ident);
}
inline jule::Ptr<_1e5e31631_Enum> _1e6ad219e_FindEnum_1(jule::Trait<_1e6ad2600_Lookup> _self_, jule::Str _3727_ident) {
	return _1e6a1b209_FindEnum(_self_.safe_ptr<_1e6a192e5_ImportInfo>(), _3727_ident);
}
inline jule::Ptr<_1e5e32c2b_TypeEnum> _1e6ad24ac_FindTypeEnum_1(jule::Trait<_1e6ad2600_Lookup> _self_, jule::Str _4131_ident) {
	return _1e6a1b517_FindTypeEnum(_self_.safe_ptr<_1e6a192e5_ImportInfo>(), _4131_ident);
}
inline jule::Ptr<_1e6a192e5_ImportInfo> _1e6ad07a7_FindPackage_2(jule::Trait<_1e6ad2600_Lookup> _self_, jule::Str _930_ident) {
	return _1e6a1c727_FindPackage(_self_.safe_ptr<_1e6a1c24e_Package>(), _930_ident);
}
inline jule::Ptr<_1e6a192e5_ImportInfo> _1e6ad0ab5_SelectPackage_2(jule::Trait<_1e6ad2600_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1e6a192e5_ImportInfo>)> _1332_selector) {
	return _1e6a1ca35_SelectPackage(_self_.safe_ptr<_1e6a1c24e_Package>(), _1332_selector);
}
inline jule::Ptr<_1e6a3dd20_Var> _1e6ad0e6c_FindVar_2(jule::Trait<_1e6ad2600_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1e6a1cddc_FindVar(_self_.safe_ptr<_1e6a1c24e_Package>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1e6ab5d97_TypeAlias> _1e6ad1324_FindTypeAlias_2(jule::Trait<_1e6ad2600_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1e6a1d294_FindTypeAlias(_self_.safe_ptr<_1e6a1c24e_Package>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1e5d4518d_Struct> _1e6ad16cb_FindStruct_2(jule::Trait<_1e6ad2600_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1e6a1d64b_FindStruct(_self_.safe_ptr<_1e6a1c24e_Package>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1e5e1c62d_Fn> _1e6ad1a83_FindFn_2(jule::Trait<_1e6ad2600_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1e6a1da03_FindFn(_self_.safe_ptr<_1e6a1c24e_Package>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1e5e2e4db_Trait> _1e6ad1d91_FindTrait_2(jule::Trait<_1e6ad2600_Lookup> _self_, jule::Str _3328_ident) {
	return _1e6a1dd11_FindTrait(_self_.safe_ptr<_1e6a1c24e_Package>(), _3328_ident);
}
inline jule::Ptr<_1e5e31631_Enum> _1e6ad219e_FindEnum_2(jule::Trait<_1e6ad2600_Lookup> _self_, jule::Str _3727_ident) {
	return _1e6a1e11e_FindEnum(_self_.safe_ptr<_1e6a1c24e_Package>(), _3727_ident);
}
inline jule::Ptr<_1e5e32c2b_TypeEnum> _1e6ad24ac_FindTypeEnum_2(jule::Trait<_1e6ad2600_Lookup> _self_, jule::Str _4131_ident) {
	return _1e6a1e42c_FindTypeEnum(_self_.safe_ptr<_1e6a1c24e_Package>(), _4131_ident);
}
inline jule::Ptr<_1e6a192e5_ImportInfo> _1e6ad07a7_FindPackage_3(jule::Trait<_1e6ad2600_Lookup> _self_, jule::Str _930_ident) {
	return _1e6a2295d_FindPackage(_self_.safe_ptr<_1e6a22441_Sema>(), _930_ident);
}
inline jule::Ptr<_1e6a192e5_ImportInfo> _1e6ad0ab5_SelectPackage_3(jule::Trait<_1e6ad2600_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1e6a192e5_ImportInfo>)> _1332_selector) {
	return _1e6a22c6b_SelectPackage(_self_.safe_ptr<_1e6a22441_Sema>(), _1332_selector);
}
inline jule::Ptr<_1e6a3dd20_Var> _1e6ad0e6c_FindVar_3(jule::Trait<_1e6ad2600_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1e6a23123_FindVar(_self_.safe_ptr<_1e6a22441_Sema>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1e6ab5d97_TypeAlias> _1e6ad1324_FindTypeAlias_3(jule::Trait<_1e6ad2600_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1e6a234ca_FindTypeAlias(_self_.safe_ptr<_1e6a22441_Sema>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1e5d4518d_Struct> _1e6ad16cb_FindStruct_3(jule::Trait<_1e6ad2600_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1e6a23882_FindStruct(_self_.safe_ptr<_1e6a22441_Sema>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1e5e1c62d_Fn> _1e6ad1a83_FindFn_3(jule::Trait<_1e6ad2600_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1e6a23c39_FindFn(_self_.safe_ptr<_1e6a22441_Sema>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1e5e2e4db_Trait> _1e6ad1d91_FindTrait_3(jule::Trait<_1e6ad2600_Lookup> _self_, jule::Str _3328_ident) {
	return _1e6a24047_FindTrait(_self_.safe_ptr<_1e6a22441_Sema>(), _3328_ident);
}
inline jule::Ptr<_1e5e31631_Enum> _1e6ad219e_FindEnum_3(jule::Trait<_1e6ad2600_Lookup> _self_, jule::Str _3727_ident) {
	return _1e6a24355_FindEnum(_self_.safe_ptr<_1e6a22441_Sema>(), _3727_ident);
}
inline jule::Ptr<_1e5e32c2b_TypeEnum> _1e6ad24ac_FindTypeEnum_3(jule::Trait<_1e6ad2600_Lookup> _self_, jule::Str _4131_ident) {
	return _1e6a24663_FindTypeEnum(_self_.safe_ptr<_1e6a22441_Sema>(), _4131_ident);
}
inline jule::Ptr<_1e6a192e5_ImportInfo> _1e6ad07a7_FindPackage_4(jule::Trait<_1e6ad2600_Lookup> _self_, jule::Str _930_ident) {
	return _1e6a8652c_FindPackage(_self_.safe_ptr<_1e6a86010_SymbolTable>(), _930_ident);
}
inline jule::Ptr<_1e6a192e5_ImportInfo> _1e6ad0ab5_SelectPackage_4(jule::Trait<_1e6ad2600_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1e6a192e5_ImportInfo>)> _1332_selector) {
	return _1e6a8683a_SelectPackage(_self_.safe_ptr<_1e6a86010_SymbolTable>(), _1332_selector);
}
inline jule::Ptr<_1e6a3dd20_Var> _1e6ad0e6c_FindVar_4(jule::Trait<_1e6ad2600_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1e6a86be2_FindVar(_self_.safe_ptr<_1e6a86010_SymbolTable>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1e6ab5d97_TypeAlias> _1e6ad1324_FindTypeAlias_4(jule::Trait<_1e6ad2600_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1e6a87099_FindTypeAlias(_self_.safe_ptr<_1e6a86010_SymbolTable>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1e5d4518d_Struct> _1e6ad16cb_FindStruct_4(jule::Trait<_1e6ad2600_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1e6a87451_FindStruct(_self_.safe_ptr<_1e6a86010_SymbolTable>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1e5e1c62d_Fn> _1e6ad1a83_FindFn_4(jule::Trait<_1e6ad2600_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1e6a87808_FindFn(_self_.safe_ptr<_1e6a86010_SymbolTable>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1e5e2e4db_Trait> _1e6ad1d91_FindTrait_4(jule::Trait<_1e6ad2600_Lookup> _self_, jule::Str _3328_ident) {
	return _1e6a87b16_FindTrait(_self_.safe_ptr<_1e6a86010_SymbolTable>(), _3328_ident);
}
inline jule::Ptr<_1e5e31631_Enum> _1e6ad219e_FindEnum_4(jule::Trait<_1e6ad2600_Lookup> _self_, jule::Str _3727_ident) {
	return _1e6a87e24_FindEnum(_self_.safe_ptr<_1e6a86010_SymbolTable>(), _3727_ident);
}
inline jule::Ptr<_1e5e32c2b_TypeEnum> _1e6ad24ac_FindTypeEnum_4(jule::Trait<_1e6ad2600_Lookup> _self_, jule::Str _4131_ident) {
	return _1e6a88232_FindTypeEnum(_self_.safe_ptr<_1e6a86010_SymbolTable>(), _4131_ident);
}
inline jule::Str _1b02c5599_Name_0(jule::Trait<_1b0305310_CommonFlag> _self_) {
	return _1b357dbd4_Name(_self_.safe_ptr<_1b378315d_Flag>());
}
inline jule::I32 _1b02c56cb_Short_0(jule::Trait<_1b0305310_CommonFlag> _self_) {
	return _1b378367a_Short(_self_.safe_ptr<_1b378315d_Flag>());
}
inline jule::Str _1b02c580d_What_0(jule::Trait<_1b0305310_CommonFlag> _self_) {
	return _1b357dd16_What(_self_.safe_ptr<_1b378315d_Flag>());
}
inline void _1b02c5995_Reset_0(jule::Trait<_1b0305310_CommonFlag> _self_) {
	_1b3783548_Reset(_self_.safe_ptr<_1b378315d_Flag>());
}
inline jule::Str _1b02c5599_Name_1(jule::Trait<_1b0305310_CommonFlag> _self_) {
	return _1b378686a_Name(_self_.safe_ptr<_1b3786d21_Flag>());
}
inline jule::I32 _1b02c56cb_Short_1(jule::Trait<_1b0305310_CommonFlag> _self_) {
	return _1b378734e_Short(_self_.safe_ptr<_1b3786d21_Flag>());
}
inline jule::Str _1b02c580d_What_1(jule::Trait<_1b0305310_CommonFlag> _self_) {
	return _1b37870da_What(_self_.safe_ptr<_1b3786d21_Flag>());
}
inline void _1b02c5995_Reset_1(jule::Trait<_1b0305310_CommonFlag> _self_) {
	_1b378721c_Reset(_self_.safe_ptr<_1b3786d21_Flag>());
}
inline jule::Str _1b02c5599_Name_2(jule::Trait<_1b0305310_CommonFlag> _self_) {
	return _1b378a352_Name(_self_.safe_ptr<_1b378a808_Flag>());
}
inline jule::I32 _1b02c56cb_Short_2(jule::Trait<_1b0305310_CommonFlag> _self_) {
	return _1b378ad36_Short(_self_.safe_ptr<_1b378a808_Flag>());
}
inline jule::Str _1b02c580d_What_2(jule::Trait<_1b0305310_CommonFlag> _self_) {
	return _1b378aac2_What(_self_.safe_ptr<_1b378a808_Flag>());
}
inline void _1b02c5995_Reset_2(jule::Trait<_1b0305310_CommonFlag> _self_) {
	_1b378ac04_Reset(_self_.safe_ptr<_1b378a808_Flag>());
}
inline jule::Str _1b02c5599_Name_3(jule::Trait<_1b0305310_CommonFlag> _self_) {
	return _1b378dd7d_Name(_self_.safe_ptr<_1b378e334_Flag>());
}
inline jule::I32 _1b02c56cb_Short_3(jule::Trait<_1b0305310_CommonFlag> _self_) {
	return _1b378e862_Short(_self_.safe_ptr<_1b378e334_Flag>());
}
inline jule::Str _1b02c580d_What_3(jule::Trait<_1b0305310_CommonFlag> _self_) {
	return _1b378e5ed_What(_self_.safe_ptr<_1b378e334_Flag>());
}
inline void _1b02c5995_Reset_3(jule::Trait<_1b0305310_CommonFlag> _self_) {
	_1b378e730_Reset(_self_.safe_ptr<_1b378e334_Flag>());
}
inline jule::Str _1b02c5599_Name_4(jule::Trait<_1b0305310_CommonFlag> _self_) {
	return _1b3792865_Name(_self_.safe_ptr<_1b3792d1b_Flag>());
}
inline jule::I32 _1b02c56cb_Short_4(jule::Trait<_1b0305310_CommonFlag> _self_) {
	return _1b3793349_Short(_self_.safe_ptr<_1b3792d1b_Flag>());
}
inline jule::Str _1b02c580d_What_4(jule::Trait<_1b0305310_CommonFlag> _self_) {
	return _1b37930d5_What(_self_.safe_ptr<_1b3792d1b_Flag>());
}
inline void _1b02c5995_Reset_4(jule::Trait<_1b0305310_CommonFlag> _self_) {
	_1b3793217_Reset(_self_.safe_ptr<_1b3792d1b_Flag>());
}


static _1e6a16a62_ImporterMptrData _1e6a16a62_Importer_mptr_data[] = {
	{
		._1e6a15984_SetModPath=_1e6a15984_SetModPath_0,
		._1e6a15bc6_GetModPath=_1e6a15bc6_GetModPath_0,
		._1e6a15ed4_ModById=_1e6a15ed4_ModById_0,
		._1e6a162e2_GetImport=_1e6a162e2_GetImport_0,
		._1e6a16699_ImportPackage=_1e6a16699_ImportPackage_0,
		._1e6a1691e_Imported=_1e6a1691e_Imported_0,
	},
};
static _1e6ab665b_KindMptrData _1e6ab665b_Kind_mptr_data[] = {
	{
		._1e6ab620a_Str=_1e6ab620a_Str_0,
		._1e6ab6518_Equals=_1e6ab6518_Equals_0,
	},
	{
		._1e6ab620a_Str=_1e6ab620a_Str_1,
		._1e6ab6518_Equals=_1e6ab6518_Equals_1,
	},
	{
		._1e6ab620a_Str=_1e6ab620a_Str_2,
		._1e6ab6518_Equals=_1e6ab6518_Equals_2,
	},
	{
		._1e6ab620a_Str=_1e6ab620a_Str_3,
		._1e6ab6518_Equals=_1e6ab6518_Equals_3,
	},
	{
		._1e6ab620a_Str=_1e6ab620a_Str_4,
		._1e6ab6518_Equals=_1e6ab6518_Equals_4,
	},
	{
		._1e6ab620a_Str=_1e6ab620a_Str_5,
		._1e6ab6518_Equals=_1e6ab6518_Equals_5,
	},
	{
		._1e6ab620a_Str=_1e6ab620a_Str_6,
		._1e6ab6518_Equals=_1e6ab6518_Equals_6,
	},
	{
		._1e6ab620a_Str=_1e6ab620a_Str_7,
		._1e6ab6518_Equals=_1e6ab6518_Equals_7,
	},
	{
		._1e6ab620a_Str=_1e6ab620a_Str_8,
		._1e6ab6518_Equals=_1e6ab6518_Equals_8,
	},
	{
		._1e6ab620a_Str=_1e6ab620a_Str_9,
		._1e6ab6518_Equals=_1e6ab6518_Equals_9,
	},
	{
		._1e6ab620a_Str=_1e6ab620a_Str_10,
		._1e6ab6518_Equals=_1e6ab6518_Equals_10,
	},
	{
		._1e6ab620a_Str=_1e6ab620a_Str_11,
		._1e6ab6518_Equals=_1e6ab6518_Equals_11,
	},
	{
		._1e6ab620a_Str=_1e6ab620a_Str_12,
		._1e6ab6518_Equals=_1e6ab6518_Equals_12,
	},
	{
		._1e6ab620a_Str=_1e6ab620a_Str_13,
		._1e6ab6518_Equals=_1e6ab6518_Equals_13,
	},
};
static _1e6ad2600_LookupMptrData _1e6ad2600_Lookup_mptr_data[] = {
	{
		._1e6ad07a7_FindPackage=_1e6ad07a7_FindPackage_0,
		._1e6ad0ab5_SelectPackage=_1e6ad0ab5_SelectPackage_0,
		._1e6ad0e6c_FindVar=_1e6ad0e6c_FindVar_0,
		._1e6ad1324_FindTypeAlias=_1e6ad1324_FindTypeAlias_0,
		._1e6ad16cb_FindStruct=_1e6ad16cb_FindStruct_0,
		._1e6ad1a83_FindFn=_1e6ad1a83_FindFn_0,
		._1e6ad1d91_FindTrait=_1e6ad1d91_FindTrait_0,
		._1e6ad219e_FindEnum=_1e6ad219e_FindEnum_0,
		._1e6ad24ac_FindTypeEnum=_1e6ad24ac_FindTypeEnum_0,
	},
	{
		._1e6ad07a7_FindPackage=_1e6ad07a7_FindPackage_1,
		._1e6ad0ab5_SelectPackage=_1e6ad0ab5_SelectPackage_1,
		._1e6ad0e6c_FindVar=_1e6ad0e6c_FindVar_1,
		._1e6ad1324_FindTypeAlias=_1e6ad1324_FindTypeAlias_1,
		._1e6ad16cb_FindStruct=_1e6ad16cb_FindStruct_1,
		._1e6ad1a83_FindFn=_1e6ad1a83_FindFn_1,
		._1e6ad1d91_FindTrait=_1e6ad1d91_FindTrait_1,
		._1e6ad219e_FindEnum=_1e6ad219e_FindEnum_1,
		._1e6ad24ac_FindTypeEnum=_1e6ad24ac_FindTypeEnum_1,
	},
	{
		._1e6ad07a7_FindPackage=_1e6ad07a7_FindPackage_2,
		._1e6ad0ab5_SelectPackage=_1e6ad0ab5_SelectPackage_2,
		._1e6ad0e6c_FindVar=_1e6ad0e6c_FindVar_2,
		._1e6ad1324_FindTypeAlias=_1e6ad1324_FindTypeAlias_2,
		._1e6ad16cb_FindStruct=_1e6ad16cb_FindStruct_2,
		._1e6ad1a83_FindFn=_1e6ad1a83_FindFn_2,
		._1e6ad1d91_FindTrait=_1e6ad1d91_FindTrait_2,
		._1e6ad219e_FindEnum=_1e6ad219e_FindEnum_2,
		._1e6ad24ac_FindTypeEnum=_1e6ad24ac_FindTypeEnum_2,
	},
	{
		._1e6ad07a7_FindPackage=_1e6ad07a7_FindPackage_3,
		._1e6ad0ab5_SelectPackage=_1e6ad0ab5_SelectPackage_3,
		._1e6ad0e6c_FindVar=_1e6ad0e6c_FindVar_3,
		._1e6ad1324_FindTypeAlias=_1e6ad1324_FindTypeAlias_3,
		._1e6ad16cb_FindStruct=_1e6ad16cb_FindStruct_3,
		._1e6ad1a83_FindFn=_1e6ad1a83_FindFn_3,
		._1e6ad1d91_FindTrait=_1e6ad1d91_FindTrait_3,
		._1e6ad219e_FindEnum=_1e6ad219e_FindEnum_3,
		._1e6ad24ac_FindTypeEnum=_1e6ad24ac_FindTypeEnum_3,
	},
	{
		._1e6ad07a7_FindPackage=_1e6ad07a7_FindPackage_4,
		._1e6ad0ab5_SelectPackage=_1e6ad0ab5_SelectPackage_4,
		._1e6ad0e6c_FindVar=_1e6ad0e6c_FindVar_4,
		._1e6ad1324_FindTypeAlias=_1e6ad1324_FindTypeAlias_4,
		._1e6ad16cb_FindStruct=_1e6ad16cb_FindStruct_4,
		._1e6ad1a83_FindFn=_1e6ad1a83_FindFn_4,
		._1e6ad1d91_FindTrait=_1e6ad1d91_FindTrait_4,
		._1e6ad219e_FindEnum=_1e6ad219e_FindEnum_4,
		._1e6ad24ac_FindTypeEnum=_1e6ad24ac_FindTypeEnum_4,
	},
};
static _1b0305310_CommonFlagMptrData _1b0305310_CommonFlag_mptr_data[] = {
	{
		._1b02c5599_Name=_1b02c5599_Name_0,
		._1b02c56cb_Short=_1b02c56cb_Short_0,
		._1b02c580d_What=_1b02c580d_What_0,
		._1b02c5995_Reset=_1b02c5995_Reset_0,
	},
	{
		._1b02c5599_Name=_1b02c5599_Name_1,
		._1b02c56cb_Short=_1b02c56cb_Short_1,
		._1b02c580d_What=_1b02c580d_What_1,
		._1b02c5995_Reset=_1b02c5995_Reset_1,
	},
	{
		._1b02c5599_Name=_1b02c5599_Name_2,
		._1b02c56cb_Short=_1b02c56cb_Short_2,
		._1b02c580d_What=_1b02c580d_What_2,
		._1b02c5995_Reset=_1b02c5995_Reset_2,
	},
	{
		._1b02c5599_Name=_1b02c5599_Name_3,
		._1b02c56cb_Short=_1b02c56cb_Short_3,
		._1b02c580d_What=_1b02c580d_What_3,
		._1b02c5995_Reset=_1b02c5995_Reset_3,
	},
	{
		._1b02c5599_Name=_1b02c5599_Name_4,
		._1b02c56cb_Short=_1b02c56cb_Short_4,
		._1b02c580d_What=_1b02c580d_What_4,
		._1b02c5995_Reset=_1b02c5995_Reset_4,
	},
};


jule::Str _1b02ce5d6_OutDir = jule::Str("dist", 4);
jule::Str _1b02d10cc_OutName = jule::Str("ir.cpp", 6);
jule::Str _1b02d1c37_Out = jule::Str();
jule::Str _1e2407226_Compiler = jule::Str();
jule::Str _1e24b5070_CompilerPath = jule::Str();
jule::Str _1e24b52d4_CppStd = jule::Str("cpp17", 5);
jule::Bool _1e24b5548_Shadowing = false;
jule::Bool _1e24b5823_Transpilation = false;
jule::Bool _1e24b5b31_Test = false;
jule::Bool _1e24b5e3e_RC = true;
jule::Bool _1e24b635c_Safety = true;
jule::Bool _1e24b666a_Production = false;
jule::Ptr<_1e438a43d_RangeTable> _1e431b49b__L = jule::new_ptr<_1e438a43d_RangeTable>(_1e438a43d_RangeTable{._field_R16=jule::Slice<_1e4389a47_Range16>::make({_1e4389a47_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_1e4389a47_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_1e4389a47_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_1e4389a47_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_1e4389a47_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_1e4389a47_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_1e4389a47_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_1e4389a47_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_1e4389a47_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_1e4389a47_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_1e4389a47_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_1e4389a47_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_1e4389a47_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_1e4389a47_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_1e4389a47_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_1e4389a47_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_1e4389a47_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_1e4389a47_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_1e4389a47_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_1e4389a47_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_1e4389a47_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_1e4389a47_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_1e4389a47_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_1e4389a47_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_1e4389a47_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_1e4389a47_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_1e4389a47_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_1e4389a47_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_1e4389a47_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_1e4389a47_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_1e4389a47_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_1e4389a47_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_1e4389a47_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_1e4389a47_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_1e4389a47_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_1e4389a47_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_1e4389a47_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_1e4389a47_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_1e4389a47_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_1e4389a47_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_1e4389a47_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_1e4389a47_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_1e4389a47_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_1e4389a47_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_1e4389a47_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_1e4389a47_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_1e4389a47_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_1e4389a47_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_1e4389a47_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_1e4389a47_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_1e4389a47_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_1e4389a47_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_1e4389a47_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_1e4389a47_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_1e4389a47_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_1e4389a47_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_1e4389a47_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_1e4389a47_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_1e4389a47_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_1e4389a47_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_1e4389eba_Range32>::make({_1e4389eba_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_1e4389eba_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_1e4389eba_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_1e4389eba_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_1e4389eba_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_1e4389eba_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_1e4389eba_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_1e4389eba_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_1e4389eba_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_1e4389eba_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_1e4389eba_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_1e4389eba_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_1e4389eba_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_1e4389eba_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_1e4389eba_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_1e4389eba_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_1e4389eba_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_1e4389eba_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_1e4389eba_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_1e4389eba_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_1e4389eba_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_1e4389eba_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_1e4389eba_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_1e4389eba_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_1e4389eba_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_1e4389eba_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_1e4389eba_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_1e4389eba_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_1e4389eba_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_1e4389eba_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_1e4389eba_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_1e4389eba_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_1e4389eba_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_1e4389eba_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_1e4389eba_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_1e4389eba_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_1e4389eba_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_1e4389eba_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_1e4389eba_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_1e4389eba_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_1e4389eba_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_1e4389eba_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_1e4389eba_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_1e438a43d_RangeTable> _1e431c601__LU = jule::new_ptr<_1e438a43d_RangeTable>(_1e438a43d_RangeTable{._field_R16=jule::Slice<_1e4389a47_Range16>::make({_1e4389a47_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_1e4389a47_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_1e4389a47_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_1e4389a47_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_1e4389a47_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_1e4389a47_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_1e4389a47_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_1e4389a47_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_1e4389a47_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_1e4389a47_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_1e4389a47_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_1e4389a47_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_1e4389a47_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_1e4389a47_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_1e4389a47_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_1e4389a47_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_1e4389a47_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_1e4389eba_Range32>::make({_1e4389eba_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_1e4389eba_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_1e4389eba_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_1e4389eba_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_1e4389eba_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_1e4389eba_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_1e4389eba_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Array<jule::Str,4> _1e24c00e1_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
jule::Array<jule::Str,3> _1e43d5895_CppExts = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
jule::Array<jule::Str,1> _1e43d6dc4_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
jule::Str _1e441574e_PathStdlib = jule::Str();
jule::Str _1e44163a9_PathExec = jule::Str();
jule::Str _1e44172ab_PathWd = jule::Str();
jule::Str _1e4430add_PathApi = jule::Str();
jule::Array<jule::I32,5> _1e4669574_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::Str,6> _1e46697d8_UnaryOps = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
jule::Array<jule::Str,12> _1e4669b29_BinOps = jule::Array<jule::Str,12>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("&&", 2),jule::Str("||", 2)});
jule::Array<jule::Str,2> _1e470cd76_PostfixOps = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
jule::Array<jule::Str,11> _1e470d1b7_AssignOps = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
jule::Array<_1e471ab97_kindPair,46> _1e471b12b_keywords = jule::Array<_1e471ab97_kindPair,46>({_1e471ab97_kindPair{._field_kind=jule::Str("i8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("i16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("i32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("i64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("u8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("u16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("u32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("u64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("f32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("f64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("uint", 4), ._field_id=static_cast<jule::U64>(1LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("int", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("uintptr", 7), ._field_id=static_cast<jule::U64>(1LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("bool", 4), ._field_id=static_cast<jule::U64>(1LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("str", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("any", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("true", 4), ._field_id=static_cast<jule::U64>(6LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("false", 5), ._field_id=static_cast<jule::U64>(6LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("nil", 3), ._field_id=static_cast<jule::U64>(6LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("const", 5), ._field_id=static_cast<jule::U64>(9LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("ret", 3), ._field_id=static_cast<jule::U64>(4LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("type", 4), ._field_id=static_cast<jule::U64>(10LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("for", 3), ._field_id=static_cast<jule::U64>(12LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("break", 5), ._field_id=static_cast<jule::U64>(13LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("continue", 8), ._field_id=static_cast<jule::U64>(14LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("in", 2), ._field_id=static_cast<jule::U64>(15LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("if", 2), ._field_id=static_cast<jule::U64>(16LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("else", 4), ._field_id=static_cast<jule::U64>(17LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("use", 3), ._field_id=static_cast<jule::U64>(19LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("goto", 4), ._field_id=static_cast<jule::U64>(21LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("enum", 4), ._field_id=static_cast<jule::U64>(23LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("struct", 6), ._field_id=static_cast<jule::U64>(24LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("co", 2), ._field_id=static_cast<jule::U64>(25LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("match", 5), ._field_id=static_cast<jule::U64>(26LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("self", 4), ._field_id=static_cast<jule::U64>(27LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("trait", 5), ._field_id=static_cast<jule::U64>(28LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("impl", 4), ._field_id=static_cast<jule::U64>(29LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("cpp", 3), ._field_id=static_cast<jule::U64>(30LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("fall", 4), ._field_id=static_cast<jule::U64>(31LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("fn", 2), ._field_id=static_cast<jule::U64>(32LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("let", 3), ._field_id=static_cast<jule::U64>(33LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("unsafe", 6), ._field_id=static_cast<jule::U64>(34LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("mut", 3), ._field_id=static_cast<jule::U64>(35LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("defer", 5), ._field_id=static_cast<jule::U64>(36LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("static", 6), ._field_id=static_cast<jule::U64>(37LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("error", 5), ._field_id=static_cast<jule::U64>(39LLU)}});
jule::Array<_1e471ab97_kindPair,39> _1e471b4b1_basicOps = jule::Array<_1e471ab97_kindPair,39>({_1e471ab97_kindPair{._field_kind=jule::Str("::", 2), ._field_id=static_cast<jule::U64>(22LLU)},_1e471ab97_kindPair{._field_kind=jule::Str(":", 1), ._field_id=static_cast<jule::U64>(11LLU)},_1e471ab97_kindPair{._field_kind=jule::Str(";", 1), ._field_id=static_cast<jule::U64>(5LLU)},_1e471ab97_kindPair{._field_kind=jule::Str(",", 1), ._field_id=static_cast<jule::U64>(8LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("...", 3), ._field_id=static_cast<jule::U64>(7LLU)},_1e471ab97_kindPair{._field_kind=jule::Str(".", 1), ._field_id=static_cast<jule::U64>(20LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("+=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("-=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("*=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("/=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("%=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("<<=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_1e471ab97_kindPair{._field_kind=jule::Str(">>=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("^=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("&=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("|=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("==", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("!=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e471ab97_kindPair{._field_kind=jule::Str(">=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("<=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("&&", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("||", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("<<", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e471ab97_kindPair{._field_kind=jule::Str(">>", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("++", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("--", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("+", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("-", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("*", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("/", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("%", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("&", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("|", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("^", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("!", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("<", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1e471ab97_kindPair{._field_kind=jule::Str(">", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("=", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1e471ab97_kindPair{._field_kind=jule::Str("#", 1), ._field_id=static_cast<jule::U64>(38LLU)}});
jule::Array<jule::U8,32> _1e69b2623__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _1e69b2c72__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_1e65c747a_floatInfo _1e6424b79_f32info = _1e65c747a_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_1e65c747a_floatInfo _1e642a113_f64info = _1e65c747a_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _1e64b9d73_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _1e6511b9a_powtab = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _1e651d129_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _1e6534d99_f32pow10 = jule::Slice<jule::F32>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL});
jule::Array<jule::U64,20> _1e65c7964_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_1e6a023cc_leftCheat> _1e65c949e_leftCheats = jule::Slice<_1e6a023cc_leftCheat>::make({_1e6a023cc_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_1e6a023cc_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("5", 1)},_1e6a023cc_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("25", 2)},_1e6a023cc_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("125", 3)},_1e6a023cc_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("625", 3)},_1e6a023cc_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("3125", 4)},_1e6a023cc_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("15625", 5)},_1e6a023cc_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("78125", 5)},_1e6a023cc_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("390625", 6)},_1e6a023cc_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("1953125", 7)},_1e6a023cc_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("9765625", 7)},_1e6a023cc_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("48828125", 8)},_1e6a023cc_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("244140625", 9)},_1e6a023cc_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("1220703125", 10)},_1e6a023cc_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("6103515625", 10)},_1e6a023cc_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("30517578125", 11)},_1e6a023cc_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("152587890625", 12)},_1e6a023cc_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("762939453125", 12)},_1e6a023cc_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("3814697265625", 13)},_1e6a023cc_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("19073486328125", 14)},_1e6a023cc_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("95367431640625", 14)},_1e6a023cc_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("476837158203125", 15)},_1e6a023cc_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("2384185791015625", 16)},_1e6a023cc_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("11920928955078125", 17)},_1e6a023cc_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("59604644775390625", 17)},_1e6a023cc_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("298023223876953125", 18)},_1e6a023cc_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("1490116119384765625", 19)},_1e6a023cc_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("7450580596923828125", 19)},_1e6a023cc_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("37252902984619140625", 20)},_1e6a023cc_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("186264514923095703125", 21)},_1e6a023cc_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("931322574615478515625", 21)},_1e6a023cc_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("4656612873077392578125", 22)},_1e6a023cc_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("23283064365386962890625", 23)},_1e6a023cc_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("116415321826934814453125", 24)},_1e6a023cc_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("582076609134674072265625", 24)},_1e6a023cc_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("2910383045673370361328125", 25)},_1e6a023cc_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("14551915228366851806640625", 26)},_1e6a023cc_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("72759576141834259033203125", 26)},_1e6a023cc_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("363797880709171295166015625", 27)},_1e6a023cc_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("1818989403545856475830078125", 28)},_1e6a023cc_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("9094947017729282379150390625", 28)},_1e6a023cc_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("45474735088646411895751953125", 29)},_1e6a023cc_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("227373675443232059478759765625", 30)},_1e6a023cc_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("1136868377216160297393798828125", 31)},_1e6a023cc_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("5684341886080801486968994140625", 31)},_1e6a023cc_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("28421709430404007434844970703125", 32)},_1e6a023cc_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("142108547152020037174224853515625", 33)},_1e6a023cc_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("710542735760100185871124267578125", 33)},_1e6a023cc_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("3552713678800500929355621337890625", 34)},_1e6a023cc_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("17763568394002504646778106689453125", 35)},_1e6a023cc_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("88817841970012523233890533447265625", 35)},_1e6a023cc_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("444089209850062616169452667236328125", 36)},_1e6a023cc_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("2220446049250313080847263336181640625", 37)},_1e6a023cc_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("11102230246251565404236316680908203125", 38)},_1e6a023cc_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("55511151231257827021181583404541015625", 38)},_1e6a023cc_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("277555756156289135105907917022705078125", 39)},_1e6a023cc_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("1387778780781445675529539585113525390625", 40)},_1e6a023cc_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("6938893903907228377647697925567626953125", 40)},_1e6a023cc_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("34694469519536141888238489627838134765625", 41)},_1e6a023cc_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("173472347597680709441192448139190673828125", 42)},_1e6a023cc_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str("867361737988403547205962240695953369140625", 42)}});
jule::I64 _1e601601d_BitSize = 0LL;
jule::Str _1e601654b_SysInt = jule::Str();
jule::Str _1e605ab23_SysUint = jule::Str();
jule::Slice<jule::Str> _1e5e51024_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str("signed", 6),jule::Str("unsigned", 8),jule::Str("float", 5),jule::Str("numeric", 7),jule::Str("mutable", 7),jule::Str("immutable", 9),jule::Str("ordered", 7),jule::Str("comparable", 10)});
jule::Bool _1e474c4e2_Copy = false;
jule::Bool _1e4751a24_Deadcode = false;
jule::Bool _1e473c779_Append = false;
jule::Bool _1e4758410_Math = false;
jule::Bool _1e475d866_Access = false;
jule::Bool _1e4773903_Inline = false;
jule::Bool _1e477b103_Ptr = false;
jule::Bool _1e477e0c3_Cond = false;
jule::Bool _1c9a1b369_exprEnabled = false;
jule::Bool _1c9a1c4be_scopeEnabled = false;
jule::Array<jule::U64,12> _1b029a508_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Str _1e4414b5a_Arch = jule::Str("amd64", 5);
jule::Ptr<_1e438a43d_RangeTable> _1e432b258_Upper = _1e431c601__LU;
jule::Uintptr _1e26b32a1_STDOUT = _1e32d580c_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551605LLU));
jule::Uintptr _1e26acbc4_STDERR = _1e32d580c_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551604LLU));
jule::Array<_1e33b9517_acceptRange,16> _1e33b987a_acceptRanges = jule::Array<_1e33b9517_acceptRange,16>({_1e33b9517_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_1e33b9517_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_1e33b9517_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_1e33b9517_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_1e33b9517_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Array<jule::Array<jule::Str,2>,5> _1e43b64e1_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
jule::Uintptr _1e26ae764_STDIN = _1e32d580c_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551606LLU));
jule::Ptr<_1e438a43d_RangeTable> _1e43241b8_Letter = _1e431b49b__L;
jule::Str _1e44313c4_Os = jule::Str("windows", 7);
jule::Array<jule::U8,256> _1e33b8e95_first = jule::Array<jule::U8,256>({});
jule::Array<jule::U8,256> _1e4383733__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});





std::ostream &operator<<(std::ostream &_Stream, _1e33b9517_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4389a47_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4389eba_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e438a43d_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1e34a7d0e_index(_1e34a1e29_lazyBuff* _self_, jule::I64 _5424_i) {
	if (((*_self_)._field_buff != nullptr)) {
		return (*_self_)._field_buff[_5424_i];
	};
	return (*_self_)._field_path[_5424_i];
}



inline void _1e34a8518_append(_1e34a1e29_lazyBuff* _self_, jule::U8 _6125_c) {
	if (((*_self_)._field_buff == nullptr)) {
		if ((((*_self_)._field_w < (*_self_)._field_path.len()) && ((*_self_)._field_path[(*_self_)._field_w] == _6125_c))) {
			((*_self_)._field_w)++;
			return;;
		};
		(*_self_)._field_buff=jule::Slice<jule::U8>::alloc((*_self_)._field_path.len());
		jule::copy(((*_self_)._field_buff), (static_cast<jule::Slice<jule::U8>>((*_self_)._field_path.slice(0LL,(*_self_)._field_w))));
	};
	(*_self_)._field_buff[(*_self_)._field_w]=_6125_c;
	((*_self_)._field_w)++;
}



inline jule::Str _1e34ab0ba_string(_1e34a1e29_lazyBuff* _self_) {
	if (((*_self_)._field_buff == nullptr)) {
		return (*_self_)._field_volAndPath.slice(0LL,((*_self_)._field_volLen + (*_self_)._field_w));
	};
	return ((*_self_)._field_volAndPath.slice(0LL,(*_self_)._field_volLen) + static_cast<jule::Str>((*_self_)._field_buff.slice(0LL,(*_self_)._field_w)));
}







std::ostream &operator<<(std::ostream &_Stream, _1e34a1e29_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e261a48e_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_1e261a48e_DirEntry>>> static__1e33cde66_Read(jule::Str _1520_path) {
	jule::Slice<jule::Ptr<_1e261a48e_DirEntry>> _1534_dirents = jule::Slice<jule::Ptr<_1e261a48e_DirEntry>>();
	jule::Slice<jule::U16> _1613_utf16Path = _1e26ad6db_Utf16FromStr(_1520_path);;
	_WDIR* _1717_dir = _1e32d74ac_Wopendir((&(_1613_utf16Path[0LL])));;
	if ((_1717_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_1e261a48e_DirEntry>>>(_1e2600c7c_getLastFsError());
	};
	for (;;) {
		{
			struct _wdirent* _2217_dirent = _1e32d7754_Wreaddir(_1717_dir);;
			if ((_2217_dirent == nullptr)) {
				goto _iter_end_1b16c46cd;
			};
			jule::Str _2617_name = _1e26ae456_U16PtrToStr(((jule::U16*)(_2217_dirent->d_name)));;
			jule::Ptr<_1e32e8c71_Status> _2721_stat = ({
				auto except = static__1e341a722_Of(_1e34d0919_Join(jule::Slice<jule::Str>::make({_1520_path,_2617_name})));
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Slice<jule::Ptr<_1e261a48e_DirEntry>>>(except.error);
				} jule::Ptr<_1e32e8c71_Status>();});
			});;
			_1534_dirents = jule::alloc_for_append(_1534_dirents,1);_1534_dirents.__push(jule::new_ptr<_1e261a48e_DirEntry>(_1e261a48e_DirEntry{._field_Name=_2617_name, ._field_Stat=_2721_stat}));;
		}
	_iter_next_1b16c46cd:;
	}
	_iter_end_1b16c46cd:;;
	_1e32d79eb_Wclosedir(_1717_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_1e261a48e_DirEntry>>>(jule::Any(), _1534_dirents);
}



inline jule::VoidExceptional static__1e33d195d_Create(jule::Str _4022_path) {
	jule::Slice<jule::U16> _4513_utf16Path = _1e26ad6db_Utf16FromStr(_4022_path);;
	if ((!(_1e32d6e6d_CreateDirectory((&(_4513_utf16Path[0LL])))))) {
		return jule::VoidExceptional(_1e2600c7c_getLastFsError());
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional static__1e34368e7_Remove(jule::Str _5422_path) {
	jule::Slice<jule::U16> _5513_utf16Path = _1e26ad6db_Utf16FromStr(_5422_path);;
	if ((!(_1e32d7215_RemoveDirectory((&(_5513_utf16Path[0LL])))))) {
		return jule::VoidExceptional(_1e2600c7c_getLastFsError());
	};
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1e261c1c7_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e32e8a84_File> static__1e2603378_New(jule::Uintptr _4519_handle) {
	return jule::new_ptr<_1e32e8a84_File>(_1e32e8a84_File{._field_handle=_4519_handle});
}



inline jule::Exceptional<jule::Ptr<_1e32e8a84_File>> static__1e2603b2b_Create(jule::Str _5522_path) {
	return jule::Exceptional<jule::Ptr<_1e32e8a84_File>>(jule::Any(),({
		auto except = static__1e3351867_Open(_5522_path,((static_cast<jule::I64>(770LL) | 770LL) | 770LL),438LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Ptr<_1e32e8a84_File>>(except.error);
		} jule::Ptr<_1e32e8a84_File>();});
	}));
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__1e26046a9_Read(jule::Str _6720_path) {
	jule::Ptr<_1e32e8c71_Status> _6813_s = ({
		auto except = static__1e341a722_Of(_6720_path);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_1e32e8c71_Status>();});
	});;
	if ((!(_1e260a58e_IsReg(_6813_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(static_cast<jule::I64>(14LL));
	};
	if ((_6813_s.get()._field_Size == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),jule::Slice<jule::U8>::alloc(0LL));
	};
	jule::Ptr<_1e32e8a84_File> _7817_f = ({
		auto except = static__1e3351867_Open(_6720_path,static_cast<jule::I64>(0LL),0LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_1e32e8a84_File>();});
	});;
	__JULE_DEFER({
		({
			auto except = _1e260724a_Close(_7817_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:79:17"));
		});
	});;
	jule::Slice<jule::U8> _8117_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_6813_s.get()._field_Size));;
	jule::I64 _8213_n = ({
		auto except = _1e338558d_Read(_7817_f.ptr(), _8117_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::I64();});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),_8117_buff.slice(0LL,_8213_n));
}



inline jule::VoidExceptional static__1e260518d_Write(jule::Str _9121_path, jule::Slice<jule::U8> _9132_data, jule::I64 _9146_perm) {
	jule::Ptr<_1e32e8a84_File> _9217_f = ({
		auto except = static__1e3351867_Open(_9121_path,((static_cast<jule::I64>(769LL) | 769LL) | 769LL),_9146_perm);
		(except.ok()) ? (except.result) : ({{
			return jule::VoidExceptional(except.error);
		} jule::Ptr<_1e32e8a84_File>();});
	});;
	({
		auto except = _1e337c376_Write(_9217_f.ptr(), _9132_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _1e260724a_Close(_9217_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _1e2606700_Seek(_1e32e8a84_File* _self_, jule::I64 _10523_offset, jule::I64 _10536_origin) {
	jule::I64 _10613_pos = _1e32db747_Seek(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),_10523_offset,static_cast<jule::I64>(_10536_origin));;
	if ((_10613_pos == -1LL)) {
		return jule::Exceptional<jule::I64>(_1e2600c7c_getLastFsError());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_10613_pos);
}



inline jule::VoidExceptional _1e260724a_Close(_1e32e8a84_File* _self_) {
	if ((_1e32dbea6_Close(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle))) == -1LL)) {
		return jule::VoidExceptional(_1e2600c7c_getLastFsError());
	};
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::Ptr<_1e32e8a84_File>> static__1e3351867_Open(jule::Str _2120_path, jule::I64 _2131_flag, jule::I64 _2144_mode) {
	jule::Slice<jule::U16> _2213_utf16Path = _1e26ad6db_Utf16FromStr(_2120_path);;
	jule::I64 _2313_handle = _1e32d6148_Wopen((&(_2213_utf16Path[0LL])),static_cast<jule::I64>(_2131_flag),_2144_mode);;
	if ((_2313_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_1e32e8a84_File>>(_1e2600c7c_getLastFsError());
	};
	return jule::Exceptional<jule::Ptr<_1e32e8a84_File>>(jule::Any(),static__1e2603378_New(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_2313_handle))));
}



inline jule::VoidExceptional static__1e3352b10_Remove(jule::Str _3422_path) {
	jule::Slice<jule::U16> _3513_utf16Path = _1e26ad6db_Utf16FromStr(_3422_path);;
	if ((!(_1e32d6bc6_DeleteFile((&(_3513_utf16Path[0LL])))))) {
		return jule::VoidExceptional(_1e2600c7c_getLastFsError());
	};
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _1e337c376_Write(_1e32e8a84_File* _self_, jule::Slice<jule::U8> _4924_buff) {
	jule::I64 _4941_n = jule::I64();
	if ((_4924_buff.len() == 0LL)) {
		_4941_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_4941_n);
	};
	if (_1e338cd48_isConsoleHandle((*_self_)._field_handle)) {
		jule::Slice<jule::U16> _5517_utf16Buff = _1e26ad6db_Utf16FromStr(static_cast<jule::Str>(_4924_buff));;
		jule::Bool _5617_ok = _1e32d8d82_WriteConsole((*_self_)._field_handle,(&(_5517_utf16Buff[0LL])),static_cast<jule::I64>(_5517_utf16Buff.len()),_4941_n,nullptr);;
		if ((!(_5617_ok))) {
			return jule::Exceptional<jule::I64>(_1e2600c7c_getLastFsError());
		};
		return jule::Exceptional<jule::I64>(jule::Any(),_4941_n);
	};
	_4941_n=static_cast<jule::I64>(_1e32dc391_Write(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_4924_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_4924_buff.len()))));
	if ((_4941_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_1e2600c7c_getLastFsError());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_4941_n);
}



inline jule::Exceptional<jule::I64> _1e338558d_Read(_1e32e8a84_File* _self_, jule::Slice<jule::U8> _8127_buff) {
	jule::I64 _8144_n = jule::I64();
	if ((_8127_buff.len() == 0LL)) {
		_8144_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_8144_n);
	};
	if (_1e338cd48_isConsoleHandle((*_self_)._field_handle)) {
		jule::Slice<jule::U16> _8721_codepage = jule::Slice<jule::U16>::alloc(_8127_buff.len());;
		jule::Bool _8817_ok = _1e32d93b0_ReadConsole((*_self_)._field_handle,(&(_8721_codepage[0LL])),static_cast<jule::I64>(_8127_buff.len()),_8144_n,nullptr);;
		if ((!(_8817_ok))) {
			return jule::Exceptional<jule::I64>(_1e2600c7c_getLastFsError());
		};
		jule::Slice<jule::I32> _9317_runes = _1e32d3dd2_Decode(_8721_codepage.slice(0LL,_8144_n));;
		_8144_n=0LL;
		{
			auto &expr = _9317_runes;
			auto it = expr.begin();
			_iter_begin_1b16dd8e5:;
			if (it != expr.end()) {
				jule::I32 &_9520_r = *it;
				{
					jule::I64 _9621_size = _1e33bac00_RuneLen(_9520_r);;
					if (((_8144_n + _9621_size) > _8127_buff.len())) {
						goto _iter_end_1b16dd8e5;
					};
					_1e33bb11d_EncodeRune(_8127_buff.slice(_8144_n),_9520_r);
					_8144_n+=_9621_size;
				}
				_iter_next_1b16dd8e5:;
				++it;
				goto _iter_begin_1b16dd8e5;
			}
			_iter_end_1b16dd8e5:;
		};
		return jule::Exceptional<jule::I64>(jule::Any(),_8144_n);
	};
	_8144_n=static_cast<jule::I64>(_1e32dbb32_Read(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_8127_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_8127_buff.len()))));
	if ((_8144_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_1e2600c7c_getLastFsError());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_8144_n);
}







std::ostream &operator<<(std::ostream &_Stream, _1e32e8a84_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e26092c4_IsDir(_1e32e8c71_Status* _self_) {
	return (((*_self_)._field_Mode & 16384LLU) == 16384LLU);
}



inline jule::Bool _1e260a58e_IsReg(_1e32e8c71_Status* _self_) {
	return (((*_self_)._field_Mode & 32768LLU) == 32768LLU);
}



inline jule::Exceptional<jule::Ptr<_1e32e8c71_Status>> static__1e341a722_Of(jule::Str _1218_path) {
	if (_1218_path.empty()) {
		return jule::Exceptional<jule::Ptr<_1e32e8c71_Status>>(static_cast<jule::I64>(4LL));
	};
	jule::Slice<jule::U16> _1613_utf16Path = _1e26ad6db_Utf16FromStr(_1218_path);;
	struct stat _1717_handle = (struct stat){};;
	jule::I64 _1813_code = _1e32d5c5d_Wstat((&(_1613_utf16Path[0LL])),(&(_1717_handle)));;
	if ((_1813_code != -1LL)) {
		return jule::Exceptional<jule::Ptr<_1e32e8c71_Status>>(jule::Any(),jule::new_ptr<_1e32e8c71_Status>(_1e32e8c71_Status{._field_Mode=static_cast<jule::U64>(static_cast<jule::U64>(_1717_handle.st_mode)), ._field_Size=static_cast<jule::U64>(static_cast<jule::U64>(_1717_handle.st_size))}));
	};
	return jule::Exceptional<jule::Ptr<_1e32e8c71_Status>>(_1e2600c7c_getLastFsError());
}







std::ostream &operator<<(std::ostream &_Stream, _1e32e8c71_Status _Src) {
	_Stream << "Status{";
	_Stream << "Mode:" << _Src._field_Mode << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e443278d_Cmd> static__1e4432bbc_New(jule::Str _2019_path) {
	return jule::new_ptr<_1e443278d_Cmd>(_1e443278d_Cmd{._field_path=_2019_path, });
}



inline jule::Exceptional<jule::I64> _1e4432e31_Spawn(_1e443278d_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(),static_cast<jule::I64>(({
		auto except = _1e4442957_spawn(&(*_self_));
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::I64>(except.error);
		} jule::I64();});
	})));
}



inline jule::Exceptional<jule::I64> _1e4442957_spawn(_1e443278d_Cmd* _self_) {
	jule::I64 _5217_pid = 0LL;;
	if (((*_self_)._field_Env == nullptr)) {
		_5217_pid=static_cast<jule::I64>(_1e4442171_execvp((*_self_)._field_path,(*_self_)._field_Args));
	} else {
		_5217_pid=static_cast<jule::I64>(_1e444255b_execve((*_self_)._field_path,(*_self_)._field_Args,(*_self_)._field_Env));
	};
	if ((_5217_pid == -1LL)) {
		return jule::Exceptional<jule::I64>(_1e443200c_getLastProcessError());
	};
	jule::I64 _6113_status = 0LL;;
	if ((_cwait(((signed*)((&(_6113_status)))),_5217_pid,0LL) == -1LL)) {
		return jule::Exceptional<jule::I64>(_1e443200c_getLastProcessError());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_6113_status);
}







std::ostream &operator<<(std::ostream &_Stream, _1e443278d_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e43e3a18_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1e4713b5c_Prec(_1e47137a5_Token* _self_) {
	if (((*_self_)._field_Id != static_cast<jule::U64>(7LLU))) {
		return 0LLU;
	};
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("%", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str(">>", 2) || _match_expr == jule::Str("<<", 2) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1b17a2954:;
			{
				return 5LLU;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1b17a29ba:;
			{
				return 4LLU;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("=", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1b17a235a:;
			{
				return 3LLU;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1b17a23c1:;
			{
				return 2LLU;
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1b17a2437:;
			{
				return 1LLU;
			}
		}
		else {
			_case_begin_1b17a2118:;
			{
				return 0LLU;
			}
		}
		_match_end_1b17a20b3:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e47137a5_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e471904c_IsOk(_1e4718b40_File* _self_) {
	({
		auto except = static__1e341a722_Of((*_self_)._field_Path);
		(except.ok()) ? (except.result) : ({{
			return false;
		} jule::Ptr<_1e32e8c71_Status>();});
	});
	return true;
}



inline void _1e47192c2_Fill(_1e4718b40_File* _self_, jule::Slice<jule::U8> _2327_data) {
	(*_self_)._field_Data=_2327_data;
}



inline jule::Str _1e4719536_Dir(_1e4718b40_File* _self_) {
	return _1e34b81c6_Dir((*_self_)._field_Path);
}



inline jule::Str _1e471979a_Name(_1e4718b40_File* _self_) {
	return _1e34b4887_Base((*_self_)._field_Path);
}



inline jule::Uintptr _1e4719a0e_Addr(_1e4718b40_File* _self_) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)((&((*_self_))))));
}



inline jule::Str _1e4719d1c_GetRow(_1e4718b40_File* _self_, jule::I64 _4421_row) {
	jule::I64 _4517_n = 0LL;;
	jule::I64 _4617_lineStart = 0LL;;
	jule::I64 _4717_i = 0LL;;
	for (; (_4717_i < (*_self_)._field_Data.len()); (_4717_i)++) {
		{
			if (((*_self_)._field_Data[_4717_i] != '\n')) {
				goto _iter_next_1b17a75d5;
			};
			(_4517_n)++;
			if ((_4517_n == _4421_row)) {
				return static_cast<jule::Str>((*_self_)._field_Data.slice(_4617_lineStart,_4717_i));
			};
			_4617_lineStart=static_cast<jule::I64>((_4717_i + 1LL));
		}
	_iter_next_1b17a75d5:;
	}
	_iter_end_1b17a75d5:;;
	return jule::Str();
}







std::ostream &operator<<(std::ostream &_Stream, _1e4718b40_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e471ab97_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1e4726b92_pushErr(_1e47265ed_lex* _self_, jule::Str _45726_fmt, jule::Slice<jule::Any> _45739_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1e471b99a_makeErr((*_self_)._field_row,(*_self_)._field_column,(*_self_)._field_file,_45726_fmt,jule::Any(_45739_args)));;
}



inline void _1e4726eb1_pushErrTok(_1e47265ed_lex* _self_, jule::Ptr<_1e47137a5_Token>& _46230_token, jule::Str _46245_fmt) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1e471b99a_makeErr(_46230_token.get()._field_Row,_46230_token.get()._field_Column,(*_self_)._field_file,_46245_fmt,jule::Slice<jule::Any>()));;
}



inline void _1e472718c_lex(_1e47265ed_lex* _self_) {
	(*_self_)._field_errors=nullptr;
	_1e472918e_newLine(&(*_self_));
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len())) {
		{
			jule::Ptr<_1e47137a5_Token> _47221_token = _1e472a514_token(&(*_self_));;
			if ((_47221_token.get()._field_Id != static_cast<jule::U64>(0LLU))) {
				(*_self_)._field_tokens = jule::alloc_for_append((*_self_)._field_tokens,1);(*_self_)._field_tokens.__push(_47221_token);;
			};
		}
	_iter_next_1b17e418d:;
	}
	_iter_end_1b17e418d:;;
}



inline jule::Str _1e472749a_id(_1e47265ed_lex* _self_, jule::Slice<jule::U8>& _48122_ln) {
	if ((_48122_ln.len() == 0LL)) {
		return jule::Str();
	};
	jule::I32 _48514_r;;
	jule::I64 _48521_i;;
	std::tie(_48514_r,_48521_i) = _1e33ba0ea_DecodeRune(_48122_ln);
	if (((_48514_r != '_') && (!(_1e4716c81_IsLetter(_48514_r))))) {
		return jule::Str();
	};
	while ((_48521_i < _48122_ln.len())) {
		{
			jule::I32 _49118_pr;;
			jule::I64 _49122_n;;
			std::tie(_49118_pr,_49122_n) = _1e33ba0ea_DecodeRune(_48122_ln.slice(_48521_i));
			if ((((_49118_pr != '_') && (!(_1e47172c0_IsDecimal(static_cast<jule::U8>(static_cast<jule::U8>(_49118_pr)))))) && (!(_1e4716c81_IsLetter(_49118_pr))))) {
				(*_self_)._field_pos+=_48521_i;
				return static_cast<jule::Str>(_48122_ln.slice(0LL,_48521_i));
			};
			_48521_i+=_49122_n;
		}
	_iter_next_1b17e73b1:;
	}
	_iter_end_1b17e73b1:;;
	(*_self_)._field_pos+=_48122_ln.len();
	return static_cast<jule::Str>(_48122_ln);
}



inline jule::Slice<jule::U8> _1e472770e_resume(_1e47265ed_lex* _self_) {
	jule::I64 _50617_i = (*_self_)._field_pos;;
	for (; (_50617_i < (*_self_)._field_file.get()._field_Data.len()); (_50617_i)++) {
		{
			jule::I32 _50817_r = static_cast<jule::I32>((*_self_)._field_file.get()._field_Data[_50617_i]);;
			if (_1e4716830_IsSpace(_50817_r)) {
				;
				((*_self_)._field_pos)++;
				{
					auto &_match_expr{ _50817_r };
					
					if (_match_expr == '\n') {
						_case_begin_1b17ec075:;
						{
							_1e472918e_newLine(&(*_self_));
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1b17ec0db:;
						{
							(*_self_)._field_column+=8LL;
						}
					}
					else {
						_case_begin_1b17e9e96:;
						{
							((*_self_)._field_column)++;
						}
					}
					_match_end_1b17ebad0:;
				};
				goto _iter_next_1b17ea24e;
			};
			jule::I64 _52321_j = _50617_i;;
			for (; (_52321_j < (*_self_)._field_file.get()._field_Data.len()); (_52321_j)++) {
				{
					if (((*_self_)._field_file.get()._field_Data[_52321_j] == '\n')) {
						goto _iter_end_1b17eae97;
					};
				}
			_iter_next_1b17eae97:;
			}
			_iter_end_1b17eae97:;;
			return (*_self_)._field_file.get()._field_Data.slice(_50617_i,_52321_j);
		}
	_iter_next_1b17ea24e:;
	}
	_iter_end_1b17ea24e:;;
	return nullptr;
}



inline void _1e4727984_lexLineComment(_1e47265ed_lex* _self_, jule::Ptr<_1e47137a5_Token>& _53438_token) {
	jule::I64 _53513_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _53817_r = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
			if (((_53817_r == '\n') || (_53817_r == '\r'))) {
				goto _iter_end_1b17ee9c3;
			};
		}
	_iter_next_1b17ee9c3:;
	}
	_iter_end_1b17ee9c3:;;
	if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		_53438_token.get()._field_Id=static_cast<jule::U64>(18LLU);
		_53438_token.get()._field_Kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_Data.slice(_53513_start,(*_self_)._field_pos));
	};
}



inline void _1e4727c09_lexRangeComment(_1e47265ed_lex* _self_, jule::Ptr<_1e47137a5_Token>& _54939_token) {
	jule::I64 _55013_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _55317_r = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
			if ((_55317_r == '\r')) {
				goto _iter_next_1b1802d7d;
			};
			if ((_55317_r == '\n')) {
				_1e472918e_newLine(&(*_self_));
				goto _iter_next_1b1802d7d;
			};
			(*_self_)._field_column+=1LL;
			if ((((((*_self_)._field_pos + 1LL) < (*_self_)._field_file.get()._field_Data.len()) && (_55317_r == '*')) && ((*_self_)._field_file.get()._field_Data[((*_self_)._field_pos + 1LL)] == '/'))) {
				(*_self_)._field_column+=2LL;
				(*_self_)._field_pos+=2LL;
				if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					_54939_token.get()._field_Id=static_cast<jule::U64>(18LLU);
					_54939_token.get()._field_Kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_Data.slice(_55013_start,(*_self_)._field_pos));
				};
				return;;
			};
		}
	_iter_next_1b1802d7d:;
	}
	_iter_end_1b1802d7d:;;
	_1e4726b92_pushErr(&(*_self_), jule::Str("missing block comment close", 27),jule::Slice<jule::Any>());
}



inline jule::Str _1e4728017_num(_1e47265ed_lex* _self_, jule::Slice<jule::U8>& _57723_txt) {
	jule::Str _57738_lit = jule::Str();
	if ((_57723_txt[0LL] == '_')) {
		_57738_lit = jule::Str();
		return _57738_lit;
	};
	_57738_lit=_1e4725135_hexNum(_57723_txt);
	if ((!(_57738_lit.empty()))) {
		goto _julec_label_end;
	};
	_57738_lit=_1e4720020_octalNum(_57723_txt);
	if ((!(_57738_lit.empty()))) {
		goto _julec_label_end;
	};
	_57738_lit=_1e471d969_binaryNum(_57723_txt);
	if ((!(_57738_lit.empty()))) {
		goto _julec_label_end;
	};
	_57738_lit=_1e471d6c2_commonNum(_57723_txt);
	_julec_label_end:;
	(*_self_)._field_pos+=_57738_lit.len();
	return _57738_lit;
}



inline jule::Str _1e4728325_escapeSeq(_1e47265ed_lex* _self_, jule::Slice<jule::U8>& _59929_txt) {
	jule::Str _60017_seq = jule::Str();;
	if ((_59929_txt.len() < 2LL)) {
		goto _julec_label_end;
	};
	{
		auto &_match_expr{ _59929_txt[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1b180ce54:;
			{
				(*_self_)._field_pos+=2LL;
				return static_cast<jule::Str>(_59929_txt.slice(0LL,2LL));
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1b180cb57:;
			{
				_60017_seq=_1e472570c_bigUnicodePointEscape(_59929_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1b180cbbd:;
			{
				_60017_seq=_1e47259c6_littleUnicodePointEscape(_59929_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1b180cc34:;
			{
				_60017_seq=_1e4725b80_hexByteEscape(_59929_txt);
			}
		}
		else {
			_case_begin_1b180c3d7:;
			{
				_60017_seq=_1e4725e16_byteEscape(_59929_txt);
			}
		}
		_match_end_1b180ca14:;
	};
	_julec_label_end:;
	if (_60017_seq.empty()) {
		((*_self_)._field_pos)++;
		_1e4726b92_pushErr(&(*_self_), jule::Str("invalid escape sequence", 23),jule::Slice<jule::Any>());
		return jule::Str();
	};
	(*_self_)._field_pos+=_60017_seq.len();
	return _60017_seq;
}



inline jule::Str _1e47286cc_getRune(_1e47265ed_lex* _self_, jule::Slice<jule::U8>& _62927_txt, jule::Bool _62940_raw) {
	if (((!(_62940_raw)) && (_62927_txt[0LL] == '\\'))) {
		return _1e4728325_escapeSeq(&(*_self_), _62927_txt);
	};
	jule::I32 _63314_r;;
	jule::I64 _63317_n;;
	std::tie(_63314_r,_63317_n) = _1e33ba0ea_DecodeRune(_62927_txt);
	(*_self_)._field_pos+=_63317_n;
	return static_cast<jule::Str>(_63314_r);
}



inline jule::Str _1e47289da_lexRune(_1e47265ed_lex* _self_, jule::Slice<jule::U8>& _63827_txt) {
	jule::Str _63917_run = jule::Str("'", 1);;
	((*_self_)._field_column)++;
	jule::I64 _64117_n = 0LL;;
	jule::I64 _64217_i = 1LL;;
	for (; (_64217_i < _63827_txt.len()); (_64217_i)++) {
		{
			if ((_63827_txt[_64217_i] == '\r')) {
				goto _iter_next_1b1814d7e;
			};
			if ((_63827_txt[_64217_i] == '\n')) {
				_1e4726b92_pushErr(&(*_self_), jule::Str("rune is not finished", 20),jule::Slice<jule::Any>());
				((*_self_)._field_pos)++;
				_1e472918e_newLine(&(*_self_));
				return jule::Str();
			};
			jule::Slice<jule::U8> _65417_part = _63827_txt.slice(_64217_i);;
			jule::Str _65517_r = _1e47286cc_getRune(&(*_self_), _65417_part,false);;
			_63917_run+=_65517_r;
			(*_self_)._field_column+=_1e33bbcde_RuneCountStr(_65517_r);
			if ((_65517_r == jule::Str("'", 1))) {
				((*_self_)._field_pos)++;
				goto _iter_end_1b1814d7e;
			};
			if ((_65517_r.len() > 1LL)) {
				_64217_i+=(_65517_r.len() - 1LL);
			};
			(_64117_n)++;
		}
	_iter_next_1b1814d7e:;
	}
	_iter_end_1b1814d7e:;;
	if ((_64117_n == 0LL)) {
		_1e4726b92_pushErr(&(*_self_), jule::Str("rune is cannot empty", 20),jule::Slice<jule::Any>());
	} else if ((_64117_n > 1LL)) {
		_1e4726b92_pushErr(&(*_self_), jule::Str("rune is should be single", 24),jule::Slice<jule::Any>());
	};
	return _63917_run;
}



inline jule::Str _1e4728c4e_lexStr(_1e47265ed_lex* _self_) {
	jule::Str _67817_s = jule::Str();;
	jule::U8 _67913_mark = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
	((*_self_)._field_pos)++;
	jule::Bool _68113_raw = (_67913_mark == '`');;
	_67817_s+=static_cast<jule::Str>(_67913_mark);
	((*_self_)._field_column)++;
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len())) {
		{
			jule::U8 _68617_ch = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
			if ((_68617_ch == '\r')) {
				goto _iter_next_1b181adb8;
			};
			if ((_68617_ch == '\n')) {
				_1e472918e_newLine(&(*_self_));
				if ((!(_68113_raw))) {
					_1e4726b92_pushErr(&(*_self_), jule::Str("string is not finished", 22),jule::Slice<jule::Any>());
					((*_self_)._field_pos)++;
					return jule::Str();
				};
			};
			jule::Slice<jule::U8> _69821_part = (*_self_)._field_file.get()._field_Data.slice((*_self_)._field_pos);;
			jule::Str _69917_r = _1e47286cc_getRune(&(*_self_), _69821_part,_68113_raw);;
			_67817_s+=_69917_r;
			(*_self_)._field_column+=_1e33bbcde_RuneCountStr(_69917_r);
			if ((_68617_ch == _67913_mark)) {
				goto _iter_end_1b181adb8;
			};
		}
	_iter_next_1b181adb8:;
	}
	_iter_end_1b181adb8:;;
	return _67817_s;
}



inline jule::Bool _1e4728eb3_isFirstTokenOfLine(_1e47265ed_lex* _self_) {
	return ((*_self_)._field_column == 1LL);
}



inline void _1e472918e_newLine(_1e47265ed_lex* _self_) {
	((*_self_)._field_row)++;
	(*_self_)._field_column=1LL;
}



inline jule::Bool _1e4729689_isOp(_1e47265ed_lex* _self_, jule::Slice<jule::U8>& _71924_txt, jule::Str _71937_kind, jule::U64 _71948_id, jule::Ptr<_1e47137a5_Token>& _71966_t) {
	if ((!(_1e471bd30_bytesHasPrefix(_71924_txt,_71937_kind)))) {
		return false;
	};
	_71966_t.get()._field_Kind=_71937_kind;
	_71966_t.get()._field_Id=_71948_id;
	(*_self_)._field_pos+=_71937_kind.len();
	return true;
}



inline jule::Bool _1e4729a41_lexBasicOps(_1e47265ed_lex* _self_, jule::Slice<jule::U8> _72930_txt, jule::Ptr<_1e47137a5_Token>& _72948_tok) {
	{
		auto &expr = _1e471b4b1_basicOps;
		auto it = expr.begin();
		_iter_begin_1b18224a7:;
		if (it != expr.end()) {
			_1e471ab97_kindPair &_73016_pair = *it;
			{
				if (_1e4729689_isOp(&(*_self_), _72930_txt,_73016_pair._field_kind,_73016_pair._field_id,_72948_tok)) {
					return true;
				};
			}
			_iter_next_1b18224a7:;
			++it;
			goto _iter_begin_1b18224a7;
		}
		_iter_end_1b18224a7:;
	};
	return false;
}



inline jule::Bool _1e4729de8_lexId(_1e47265ed_lex* _self_, jule::Slice<jule::U8>& _73925_txt, jule::Ptr<_1e47137a5_Token>& _73943_t) {
	jule::Str _74013_lex = _1e472749a_id(&(*_self_), _73925_txt);;
	if (_74013_lex.empty()) {
		return false;
	};
	_73943_t.get()._field_Kind=_74013_lex;
	_73943_t.get()._field_Id=static_cast<jule::U64>(2LLU);
	return true;
}



inline jule::Bool _1e472a2a0_lexNum(_1e47265ed_lex* _self_, jule::Slice<jule::U8>& _74926_txt, jule::Ptr<_1e47137a5_Token>& _74944_t) {
	jule::Str _75013_lex = _1e4728017_num(&(*_self_), _74926_txt);;
	if (_75013_lex.empty()) {
		return false;
	};
	_74944_t.get()._field_Kind=_75013_lex;
	_74944_t.get()._field_Id=static_cast<jule::U64>(6LLU);
	return true;
}



inline jule::Ptr<_1e47137a5_Token> _1e472a514_token(_1e47265ed_lex* _self_) {
	jule::Ptr<_1e47137a5_Token> _76117_t = jule::new_ptr<_1e47137a5_Token>(_1e47137a5_Token{._field_File=(*_self_)._field_file, ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _76613_txt = _1e472770e_resume(&(*_self_));;
	if ((_76613_txt == nullptr)) {
		return _76117_t;
	};
	_76117_t.get()._field_Column=(*_self_)._field_column;
	_76117_t.get()._field_Row=(*_self_)._field_row;
	{
		
		if (_1e472a2a0_lexNum(&(*_self_), _76613_txt,_76117_t)) {
			_case_begin_1b1828810:;
			{
				goto _match_end_1b1827369;
			}
		}
		else if ((_76613_txt[0LL] == '\'')) {
			_case_begin_1b1828876:;
			{
				_76117_t.get()._field_Kind=_1e47289da_lexRune(&(*_self_), _76613_txt);
				_76117_t.get()._field_Id=static_cast<jule::U64>(6LLU);
				return _76117_t;
			}
		}
		else if (((_76613_txt[0LL] == '\"') || (_76613_txt[0LL] == '`'))) {
			_case_begin_1b182947b:;
			{
				_76117_t.get()._field_Kind=_1e4728c4e_lexStr(&(*_self_));
				_76117_t.get()._field_Id=static_cast<jule::U64>(6LLU);
				return _76117_t;
			}
		}
		else if (_1e471bd30_bytesHasPrefix(_76613_txt,jule::Str("//", 2))) {
			_case_begin_1b18294e2:;
			{
				_1e4727984_lexLineComment(&(*_self_), _76117_t);
				return _76117_t;
			}
		}
		else if (_1e471bd30_bytesHasPrefix(_76613_txt,jule::Str("/*", 2))) {
			_case_begin_1b1829558:;
			{
				_1e4727c09_lexRangeComment(&(*_self_), _76117_t);
				return _76117_t;
			}
		}
		else if (_1e4729689_isOp(&(*_self_), _76613_txt,jule::Str("(", 1),static_cast<jule::U64>(3LLU),_76117_t) || _1e4729689_isOp(&(*_self_), _76613_txt,jule::Str(")", 1),static_cast<jule::U64>(3LLU),_76117_t) || _1e4729689_isOp(&(*_self_), _76613_txt,jule::Str("{", 1),static_cast<jule::U64>(3LLU),_76117_t) || _1e4729689_isOp(&(*_self_), _76613_txt,jule::Str("}", 1),static_cast<jule::U64>(3LLU),_76117_t) || _1e4729689_isOp(&(*_self_), _76613_txt,jule::Str("[", 1),static_cast<jule::U64>(3LLU),_76117_t) || _1e4729689_isOp(&(*_self_), _76613_txt,jule::Str("]", 1),static_cast<jule::U64>(3LLU),_76117_t) || _1e4729a41_lexBasicOps(&(*_self_), _76613_txt,_76117_t)) {
			_case_begin_1b1827c82:;
			{
				goto _match_end_1b1827369;
			}
		}
		else if (_1e4729de8_lexId(&(*_self_), _76613_txt,_76117_t)) {
			_case_begin_1b1827ce8:;
			{
				{
					auto &expr = _1e471b12b_keywords;
					auto it = expr.begin();
					_iter_begin_1b182ee76:;
					if (it != expr.end()) {
						_1e471ab97_kindPair &_80420_pair = *it;
						{
							if ((_80420_pair._field_kind == _76117_t.get()._field_Kind)) {
								_76117_t.get()._field_Id=_80420_pair._field_id;
								goto _iter_end_1b182ee76;
							};
						}
						_iter_next_1b182ee76:;
						++it;
						goto _iter_begin_1b182ee76;
					}
					_iter_end_1b182ee76:;
				};
			}
		}
		else {
			_case_begin_1b1827c1b:;
			{
				jule::I32 _81118_r;;
				jule::I64 _81121_sz;;
				std::tie(_81118_r,_81121_sz) = _1e33ba0ea_DecodeRune(_76613_txt);
				_1e4726b92_pushErr(&(*_self_), jule::Str("undefined token: @", 18),jule::Slice<jule::Any>::make({jule::Any(_81118_r)}));
				((*_self_)._field_column)++;
				(*_self_)._field_pos+=_81121_sz;
				return _76117_t;
			}
		}
		_match_end_1b1827369:;
	};
	(*_self_)._field_column+=_1e33bbcde_RuneCountStr(_76117_t.get()._field_Kind);
	return _76117_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1e47265ed_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d201bd_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d20d6c_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d21268_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d54961_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e5d5538a_IsPrim(_1e5d55027_IdentTypeDecl* _self_) {
	return ((*_self_)._field_Token.get()._field_Id == static_cast<jule::U64>(1LLU));
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d55027_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d55676_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d55a2d_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d55d19_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d56215_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d56501_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e5d56b3e_IsUnsafe(_1e5d567dc_PtrTypeDecl* _self_) {
	return ((*_self_)._field_Elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d567dc_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e5d57348_AutoSized(_1e5d56e6e_ArrTypeDecl* _self_) {
	return ((*_self_)._field_Size == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d56e6e_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d576bc_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d57a74_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d58e82_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d5926d_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d59823_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d59b0e_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e5d5a318_IsNil(_1e5d59eb6_LitExpr* _self_) {
	return ((*_self_)._field_Value == jule::Str("nil", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d59eb6_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d5a6c0_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d5aa77_CoExpr _Src) {
	_Stream << "CoExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e5d5b34c_IsSelf(_1e5d5aeea_IdentExpr* _self_) {
	return ((*_self_)._field_Ident == jule::Str("self", 4));
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d5aeea_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d5b704_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d5baab_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d5be63_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d5c31a_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d5c78d_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "IsSelf:" << _Src._field_IsSelf << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d5cc11_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e5d5d5b3_Unhandled(_1e5d5d250_FnCallExpr* _self_) {
	return ((*_self_)._field_Exception == nullptr);
}



inline jule::Bool _1e5d5d827_Ignored(_1e5d5d250_FnCallExpr* _self_) {
	return (((*_self_)._field_Exception != nullptr) && (*_self_)._field_Exception.get()._field_Deferred);
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d5d250_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e5d5e031_IsTargeted(_1e5d5dbce_FieldExprPair* _self_) {
	return ((*_self_)._field_Field != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d5dbce_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d5e42c_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e5d60021_IsEmpty(_1e5d5e8a0_BraceLit* _self_) {
	return ((*_self_)._field_Exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d5e8a0_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d603b7_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e5d60b8c_IsEmpty(_1e5d6083a_SliceExpr* _self_) {
	return ((*_self_)._field_Exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d6083a_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d611cb_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d617d6_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d61ac2_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d62045_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d623ec_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d627a4_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d62a90_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d6319a_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d636d9_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d64674_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d64c7e_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e5d657b8_IsSelf(_1e5d65455_ParamDecl* _self_) {
	return (((*_self_)._field_Ident == jule::Str("&self", 5)) || ((*_self_)._field_Ident == jule::Str("self", 4)));
}



inline jule::Bool _1e5d65a2c_IsRef(_1e5d65455_ParamDecl* _self_) {
	return ((!((*_self_)._field_Ident.empty())) && ((*_self_)._field_Ident[0LL] == '&'));
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d65455_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e5d66ac7_IsAnon(_1e5d66775_FnDecl* _self_) {
	return ((*_self_)._field_Ident == jule::Str("<anonymous>", 11));
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d66775_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d67754_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d67b0b_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e5d685bd_IsInf(_1e5d6826b_Iter* _self_) {
	return ((*_self_)._field_Kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d6826b_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e5d68d93_IsWhileNext(_1e5d68a41_WhileKind* _self_) {
	return ((*_self_)._field_Next != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d68a41_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d693d2_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d69789_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d69b41_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d6a0b4_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d6a46b_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d6a8de_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d6b0b5_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d6b538_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d6bc0e_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d6c4a1_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e5d6cc76_AutoExpr(_1e5d6c924_EnumItemDecl* _self_) {
	return ((*_self_)._field_Expr == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d6c924_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e5d6d9d0_DefaultTyped(_1e5d6d44c_EnumDecl* _self_) {
	return ((*_self_)._field_Kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d6d44c_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d6de53_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d6e151_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d6e6a1_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d7000e_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d70619_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e5d71087_IsTraitImpl(_1e5d70c24_Impl* _self_) {
	return ((*_self_)._field_Base != nullptr);
}



inline jule::Bool _1e5d712eb_IsStructImpl(_1e5d70c24_Impl* _self_) {
	return ((*_self_)._field_Base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d70c24_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e5da6ba0_Const> static__1e5e0bc27_NewI64(jule::I64 _1322_x) {
	return jule::new_ptr<_1e5da6ba0_Const>(_1e5da6ba0_Const{._field_data=jule::Any(_1322_x)});
}



inline jule::Ptr<_1e5da6ba0_Const> static__1e5e0bd59_NewU64(jule::U64 _1622_x) {
	return jule::new_ptr<_1e5da6ba0_Const>(_1e5da6ba0_Const{._field_data=jule::Any(_1622_x)});
}



inline jule::Ptr<_1e5da6ba0_Const> static__1e5e0bee1_NewBool(jule::Bool _1923_x) {
	return jule::new_ptr<_1e5da6ba0_Const>(_1e5da6ba0_Const{._field_data=jule::Any(_1923_x)});
}



inline jule::Ptr<_1e5da6ba0_Const> static__1e5e0c288_NewStr(jule::Str _2222_x) {
	return jule::new_ptr<_1e5da6ba0_Const>(_1e5da6ba0_Const{._field_data=jule::Any(_2222_x)});
}



inline jule::Ptr<_1e5da6ba0_Const> static__1e5e0c530_NewF64(jule::F64 _2522_x) {
	return jule::new_ptr<_1e5da6ba0_Const>(_1e5da6ba0_Const{._field_data=jule::Any(_2522_x)});
}



inline jule::Ptr<_1e5da6ba0_Const> static__1e5e0c72d_NewNil(void) {
	return jule::new_ptr<_1e5da6ba0_Const>(_1e5da6ba0_Const{._field_data=nullptr});
}



inline jule::I64 _1e5e0cd27_ReadI64(_1e5da6ba0_Const* _self_) {
	if ((!(_1e5e101c0_IsI64(&(*_self_))))) {
		return 0LL;
	};
	return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
}



inline jule::U64 _1e5e0d08b_ReadU64(_1e5da6ba0_Const* _self_) {
	if ((!(_1e5e10434_IsU64(&(*_self_))))) {
		return 0LLU;
	};
	return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
}



inline jule::Bool _1e5e0d300_ReadBool(_1e5da6ba0_Const* _self_) {
	if ((!(_1e5e10698_IsBool(&(*_self_))))) {
		return false;
	};
	return (*_self_)._field_data.operator jule::Bool();
}



inline jule::Str _1e5e0d564_ReadStr(_1e5da6ba0_Const* _self_) {
	if ((!(_1e5e1090c_IsStr(&(*_self_))))) {
		return jule::Str();
	};
	return (*_self_)._field_data.operator jule::Str();
}



inline jule::F64 _1e5e0d7c8_ReadF64(_1e5da6ba0_Const* _self_) {
	if ((!(_1e5e10b71_IsF64(&(*_self_))))) {
		return 0LL;
	};
	return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
}



inline jule::I64 _1e5e0da3c_AsI64(_1e5da6ba0_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1b189147c:;
			{
				return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1b18914e3:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1b1890d50:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_1b1890c73:;
			{
				return 0LL;
			}
		}
		_match_end_1b1890569:;
	};
}



inline jule::U64 _1e5e0dca1_AsU64(_1e5da6ba0_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1b1892428:;
			{
				return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1b1892eb7:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1b189302d:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_1b18915c0:;
			{
				return 0LLU;
			}
		}
		_match_end_1b189156a:;
	};
}



inline jule::F64 _1e5e0e015_AsF64(_1e5da6ba0_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1b1893e63:;
			{
				return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1b1894a02:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1b1894a68:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else {
			_case_begin_1b1892a66:;
			{
				return 0LL;
			}
		}
		_match_end_1b1892a11:;
	};
}



inline void _1e5e0e28a_SetI64(_1e5da6ba0_Const* _self_, jule::I64 _13525_x) {
	(*_self_)._field_data=jule::Any(_13525_x);
}



inline void _1e5e0e510_SetU64(_1e5da6ba0_Const* _self_, jule::U64 _13825_x) {
	(*_self_)._field_data=jule::Any(_13825_x);
}



inline void _1e5e0e785_SetBool(_1e5da6ba0_Const* _self_, jule::Bool _14126_x) {
	(*_self_)._field_data=jule::Any(_14126_x);
}



inline void _1e5e0ea0a_SetStr(_1e5da6ba0_Const* _self_, jule::Str _14425_x) {
	(*_self_)._field_data=jule::Any(_14425_x);
}



inline void _1e5e0ec80_SetF64(_1e5da6ba0_Const* _self_, jule::F64 _14725_x) {
	(*_self_)._field_data=jule::Any(_14725_x);
}



inline void _1e5e0ee5b_SetNil(_1e5da6ba0_Const* _self_) {
	(*_self_)._field_data=nullptr;
}



inline jule::Bool _1e5e101c0_IsI64(_1e5da6ba0_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1b18987a3:;
			{
				return true;
			}
		}
		else {
			_case_begin_1b18986c6:;
			{
				return false;
			}
		}
		_match_end_1b1898671:;
	};
}



inline jule::Bool _1e5e10434_IsU64(_1e5da6ba0_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1b1899375:;
			{
				return true;
			}
		}
		else {
			_case_begin_1b1899056:;
			{
				return false;
			}
		}
		_match_end_1b1898c6a:;
	};
}



inline jule::Bool _1e5e10698_IsBool(_1e5da6ba0_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_1b1899d9d:;
			{
				return true;
			}
		}
		else {
			_case_begin_1b1899a7e:;
			{
				return false;
			}
		}
		_match_end_1b1899771:;
	};
}



inline jule::Bool _1e5e1090c_IsStr(_1e5da6ba0_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1b189a8c6:;
			{
				return true;
			}
		}
		else {
			_case_begin_1b189a5a7:;
			{
				return false;
			}
		}
		_match_end_1b189a299:;
	};
}



inline jule::Bool _1e5e10b71_IsF64(_1e5da6ba0_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1b189b3ee:;
			{
				return true;
			}
		}
		else {
			_case_begin_1b189b0d0:;
			{
				return false;
			}
		}
		_match_end_1b189acc2:;
	};
}



inline jule::Bool _1e5e10dd5_IsNil(_1e5da6ba0_Const* _self_) {
	return ((*_self_)._field_data == nullptr);
}



inline jule::Bool _1e5e111e3_AreSameTypes(_1e5da6ba0_Const* _self_, _1e5da6ba0_Const _21027_x) {
	{
		
		if ((_1e5e101c0_IsI64(&(*_self_)) == _1e5e101c0_IsI64(&_21027_x))) {
			_case_begin_1b189cc91:;
			{
				return true;
			}
		}
		else if ((_1e5e10434_IsU64(&(*_self_)) == _1e5e10434_IsU64(&_21027_x))) {
			_case_begin_1b189c532:;
			{
				return true;
			}
		}
		else if ((_1e5e10b71_IsF64(&(*_self_)) == _1e5e10b71_IsF64(&_21027_x))) {
			_case_begin_1b189c5a9:;
			{
				return true;
			}
		}
		else if ((_1e5e10698_IsBool(&(*_self_)) == _1e5e10698_IsBool(&_21027_x))) {
			_case_begin_1b189c631:;
			{
				return true;
			}
		}
		else if ((_1e5e1090c_IsStr(&(*_self_)) == _1e5e1090c_IsStr(&_21027_x))) {
			_case_begin_1b189c6a8:;
			{
				return true;
			}
		}
		else if ((_1e5e10dd5_IsNil(&(*_self_)) == _1e5e10dd5_IsNil(&_21027_x))) {
			_case_begin_1b189c950:;
			{
				return true;
			}
		}
		else {
			_case_begin_1b189c4aa:;
			{
				return false;
			}
		}
		_match_end_1b189c3cd:;
	};
}



inline jule::Bool _1e5e11501_And(_1e5da6ba0_Const* _self_, _1e5da6ba0_Const _23518_x) {
	{
		
		if ((_1e5e10698_IsBool(&(*_self_)) && _1e5e10698_IsBool(&_23518_x))) {
			_case_begin_1b18a11d4:;
			{
				return (_1e5e0d300_ReadBool(&(*_self_)) && _1e5e0d300_ReadBool(&_23518_x));
			}
		}
		else {
			_case_begin_1b18a07dd:;
			{
				return false;
			}
		}
		_match_end_1b18a0711:;
	};
}



inline jule::Bool _1e5e1180e_Or(_1e5da6ba0_Const* _self_, _1e5da6ba0_Const _24617_x) {
	{
		
		if ((_1e5e10698_IsBool(&(*_self_)) && _1e5e10698_IsBool(&_24617_x))) {
			_case_begin_1b18a25d1:;
			{
				return (_1e5e0d300_ReadBool(&(*_self_)) || _1e5e0d300_ReadBool(&_24617_x));
			}
		}
		else {
			_case_begin_1b18a1547:;
			{
				return false;
			}
		}
		_match_end_1b18a146a:;
	};
}



inline jule::Bool _1e5e11b1c_Eq(_1e5da6ba0_Const* _self_, _1e5da6ba0_Const _25717_x) {
	{
		
		if (_1e5e10dd5_IsNil(&(*_self_))) {
			_case_begin_1b18a3a55:;
			{
				return _1e5e10dd5_IsNil(&_25717_x);
			}
		}
		else if (_1e5e10698_IsBool(&(*_self_))) {
			_case_begin_1b18a3329:;
			{
				return (_1e5e10698_IsBool(&_25717_x) && (_1e5e0d300_ReadBool(&(*_self_)) == _1e5e0d300_ReadBool(&_25717_x)));
			}
		}
		else if (_1e5e1090c_IsStr(&(*_self_))) {
			_case_begin_1b18a3390:;
			{
				return (_1e5e1090c_IsStr(&_25717_x) && (_1e5e0d564_ReadStr(&(*_self_)) == _1e5e0d564_ReadStr(&_25717_x)));
			}
		}
		else if (_1e5e101c0_IsI64(&(*_self_))) {
			_case_begin_1b18a3417:;
			{
				return (_1e5e0cd27_ReadI64(&(*_self_)) == _1e5e0da3c_AsI64(&_25717_x));
			}
		}
		else if (_1e5e10434_IsU64(&(*_self_))) {
			_case_begin_1b18a348e:;
			{
				return (_1e5e0d08b_ReadU64(&(*_self_)) == _1e5e0dca1_AsU64(&_25717_x));
			}
		}
		else if (_1e5e10b71_IsF64(&(*_self_))) {
			_case_begin_1b18a3736:;
			{
				return (_1e5e0d7c8_ReadF64(&(*_self_)) == _1e5e0e015_AsF64(&_25717_x));
			}
		}
		else {
			_case_begin_1b18a2966:;
			{
				return false;
			}
		}
		_match_end_1b18a2889:;
	};
}



inline jule::Bool _1e5e11e2a_Lt(_1e5da6ba0_Const* _self_, _1e5da6ba0_Const _28417_x) {
	{
		
		if (_1e5e1090c_IsStr(&(*_self_))) {
			_case_begin_1b18a7bd0:;
			{
				return (_1e5e1090c_IsStr(&_28417_x) && (_1e5e0d564_ReadStr(&(*_self_)) < _1e5e0d564_ReadStr(&_28417_x)));
			}
		}
		else if (_1e5e101c0_IsI64(&(*_self_))) {
			_case_begin_1b18a7581:;
			{
				return (_1e5e0cd27_ReadI64(&(*_self_)) < _1e5e0da3c_AsI64(&_28417_x));
			}
		}
		else if (_1e5e10434_IsU64(&(*_self_))) {
			_case_begin_1b18a75e7:;
			{
				return (_1e5e0d08b_ReadU64(&(*_self_)) < _1e5e0dca1_AsU64(&_28417_x));
			}
		}
		else if (_1e5e10b71_IsF64(&(*_self_))) {
			_case_begin_1b18a765d:;
			{
				return (_1e5e0d7c8_ReadF64(&(*_self_)) < _1e5e0e015_AsF64(&_28417_x));
			}
		}
		else {
			_case_begin_1b18a3d85:;
			{
				return false;
			}
		}
		_match_end_1b18a7031:;
	};
}



inline jule::Bool _1e5e12238_LtEq(_1e5da6ba0_Const* _self_, _1e5da6ba0_Const _30719_x) {
	{
		
		if (_1e5e1090c_IsStr(&(*_self_))) {
			_case_begin_1b18aac6b:;
			{
				return (_1e5e1090c_IsStr(&_30719_x) && (_1e5e0d564_ReadStr(&(*_self_)) <= _1e5e0d564_ReadStr(&_30719_x)));
			}
		}
		else if (_1e5e101c0_IsI64(&(*_self_))) {
			_case_begin_1b18aa61c:;
			{
				return (_1e5e0cd27_ReadI64(&(*_self_)) <= _1e5e0da3c_AsI64(&_30719_x));
			}
		}
		else if (_1e5e10434_IsU64(&(*_self_))) {
			_case_begin_1b18aa683:;
			{
				return (_1e5e0d08b_ReadU64(&(*_self_)) <= _1e5e0dca1_AsU64(&_30719_x));
			}
		}
		else if (_1e5e10b71_IsF64(&(*_self_))) {
			_case_begin_1b18aa6e9:;
			{
				return (_1e5e0d7c8_ReadF64(&(*_self_)) <= _1e5e0e015_AsF64(&_30719_x));
			}
		}
		else {
			_case_begin_1b18a7dde:;
			{
				return false;
			}
		}
		_match_end_1b18a9d36:;
	};
}



inline jule::Bool _1e5e12546_Gt(_1e5da6ba0_Const* _self_, _1e5da6ba0_Const _33017_x) {
	{
		
		if (_1e5e1090c_IsStr(&(*_self_))) {
			_case_begin_1b18add07:;
			{
				return (_1e5e1090c_IsStr(&_33017_x) && (_1e5e0d564_ReadStr(&(*_self_)) > _1e5e0d564_ReadStr(&_33017_x)));
			}
		}
		else if (_1e5e101c0_IsI64(&(*_self_))) {
			_case_begin_1b18ad6a8:;
			{
				return (_1e5e0cd27_ReadI64(&(*_self_)) > _1e5e0da3c_AsI64(&_33017_x));
			}
		}
		else if (_1e5e10434_IsU64(&(*_self_))) {
			_case_begin_1b18ad71e:;
			{
				return (_1e5e0d08b_ReadU64(&(*_self_)) > _1e5e0dca1_AsU64(&_33017_x));
			}
		}
		else if (_1e5e10b71_IsF64(&(*_self_))) {
			_case_begin_1b18ad785:;
			{
				return (_1e5e0d7c8_ReadF64(&(*_self_)) > _1e5e0e015_AsF64(&_33017_x));
			}
		}
		else {
			_case_begin_1b18aae7a:;
			{
				return false;
			}
		}
		_match_end_1b18acdc2:;
	};
}



inline jule::Bool _1e5e12854_GtEq(_1e5da6ba0_Const* _self_, _1e5da6ba0_Const _35319_x) {
	{
		
		if (_1e5e1090c_IsStr(&(*_self_))) {
			_case_begin_1b18b1d93:;
			{
				return (_1e5e1090c_IsStr(&_35319_x) && (_1e5e0d564_ReadStr(&(*_self_)) >= _1e5e0d564_ReadStr(&_35319_x)));
			}
		}
		else if (_1e5e101c0_IsI64(&(*_self_))) {
			_case_begin_1b18b1744:;
			{
				return (_1e5e0cd27_ReadI64(&(*_self_)) >= _1e5e0da3c_AsI64(&_35319_x));
			}
		}
		else if (_1e5e10434_IsU64(&(*_self_))) {
			_case_begin_1b18b17aa:;
			{
				return (_1e5e0d08b_ReadU64(&(*_self_)) >= _1e5e0dca1_AsU64(&_35319_x));
			}
		}
		else if (_1e5e10b71_IsF64(&(*_self_))) {
			_case_begin_1b18b1821:;
			{
				return (_1e5e0d7c8_ReadF64(&(*_self_)) >= _1e5e0e015_AsF64(&_35319_x));
			}
		}
		else {
			_case_begin_1b18ae016:;
			{
				return false;
			}
		}
		_match_end_1b18b0e5d:;
	};
}



inline jule::Bool _1e5e12b62_Add(_1e5da6ba0_Const* _self_, _1e5da6ba0_Const _37422_x) {
	{
		
		if (_1e5e1090c_IsStr(&(*_self_))) {
			_case_begin_1b18b4e2e:;
			{
				if ((!(_1e5e1090c_IsStr(&_37422_x)))) {
					return false;
				};
				_1e5e0ea0a_SetStr(&(*_self_), (_1e5e0d564_ReadStr(&(*_self_)) + _1e5e0d564_ReadStr(&_37422_x)));
			}
		}
		else if (_1e5e10b71_IsF64(&(*_self_))) {
			_case_begin_1b18b47d0:;
			{
				_1e5e0ec80_SetF64(&(*_self_), static_cast<jule::F64>((_1e5e0d7c8_ReadF64(&(*_self_)) + _1e5e0e015_AsF64(&_37422_x))));
			}
		}
		else if (_1e5e101c0_IsI64(&(*_self_))) {
			_case_begin_1b18b4846:;
			{
				if (_1e5e10b71_IsF64(&_37422_x)) {
					_1e5e0ec80_SetF64(&(*_self_), static_cast<jule::F64>((_1e5e0e015_AsF64(&(*_self_)) + _1e5e0d7c8_ReadF64(&_37422_x))));
				} else {
					_1e5e0e28a_SetI64(&(*_self_), static_cast<jule::I64>((_1e5e0cd27_ReadI64(&(*_self_)) + _1e5e0da3c_AsI64(&_37422_x))));
				};
			}
		}
		else if (_1e5e10434_IsU64(&(*_self_))) {
			_case_begin_1b18b48ac:;
			{
				if (_1e5e10b71_IsF64(&_37422_x)) {
					_1e5e0ec80_SetF64(&(*_self_), static_cast<jule::F64>((_1e5e0e015_AsF64(&(*_self_)) + _1e5e0d7c8_ReadF64(&_37422_x))));
				} else {
					_1e5e0e510_SetU64(&(*_self_), static_cast<jule::U64>((_1e5e0d08b_ReadU64(&(*_self_)) + _1e5e0dca1_AsU64(&_37422_x))));
				};
			}
		}
		else {
			_case_begin_1b18b20a2:;
			{
				return false;
			}
		}
		_match_end_1b18b3ee9:;
	};
	return true;
}



inline jule::Bool _1e5e12e70_Sub(_1e5da6ba0_Const* _self_, _1e5da6ba0_Const _40322_x) {
	{
		
		if (_1e5e10b71_IsF64(&(*_self_))) {
			_case_begin_1b18ba709:;
			{
				_1e5e0ec80_SetF64(&(*_self_), static_cast<jule::F64>((_1e5e0d7c8_ReadF64(&(*_self_)) - _1e5e0e015_AsF64(&_40322_x))));
			}
		}
		else if (_1e5e101c0_IsI64(&(*_self_))) {
			_case_begin_1b18b9ebc:;
			{
				if (_1e5e10b71_IsF64(&_40322_x)) {
					_1e5e0ec80_SetF64(&(*_self_), static_cast<jule::F64>((_1e5e0e015_AsF64(&(*_self_)) - _1e5e0d7c8_ReadF64(&_40322_x))));
				} else {
					_1e5e0e28a_SetI64(&(*_self_), static_cast<jule::I64>((_1e5e0cd27_ReadI64(&(*_self_)) - _1e5e0da3c_AsI64(&_40322_x))));
				};
			}
		}
		else if (_1e5e10434_IsU64(&(*_self_))) {
			_case_begin_1b18ba033:;
			{
				if (_1e5e10b71_IsF64(&_40322_x)) {
					_1e5e0ec80_SetF64(&(*_self_), static_cast<jule::F64>((_1e5e0e015_AsF64(&(*_self_)) - _1e5e0d7c8_ReadF64(&_40322_x))));
				} else {
					_1e5e0e510_SetU64(&(*_self_), static_cast<jule::U64>((_1e5e0d08b_ReadU64(&(*_self_)) - _1e5e0dca1_AsU64(&_40322_x))));
				};
			}
		}
		else {
			_case_begin_1b18b9e56:;
			{
				return false;
			}
		}
		_match_end_1b18b961a:;
	};
	return true;
}



inline jule::Bool _1e5e1327d_Mul(_1e5da6ba0_Const* _self_, _1e5da6ba0_Const _42722_x) {
	{
		
		if (_1e5e10b71_IsF64(&(*_self_))) {
			_case_begin_1b18bee7d:;
			{
				_1e5e0ec80_SetF64(&(*_self_), static_cast<jule::F64>((_1e5e0d7c8_ReadF64(&(*_self_)) * _1e5e0e015_AsF64(&_42722_x))));
			}
		}
		else if (_1e5e101c0_IsI64(&(*_self_))) {
			_case_begin_1b18be741:;
			{
				if (_1e5e10b71_IsF64(&_42722_x)) {
					_1e5e0ec80_SetF64(&(*_self_), static_cast<jule::F64>((_1e5e0e015_AsF64(&(*_self_)) * _1e5e0d7c8_ReadF64(&_42722_x))));
				} else {
					_1e5e0e28a_SetI64(&(*_self_), static_cast<jule::I64>((_1e5e0cd27_ReadI64(&(*_self_)) * _1e5e0da3c_AsI64(&_42722_x))));
				};
			}
		}
		else if (_1e5e10434_IsU64(&(*_self_))) {
			_case_begin_1b18be7a7:;
			{
				if (_1e5e10b71_IsF64(&_42722_x)) {
					_1e5e0ec80_SetF64(&(*_self_), static_cast<jule::F64>((_1e5e0e015_AsF64(&(*_self_)) * _1e5e0d7c8_ReadF64(&_42722_x))));
				} else {
					_1e5e0e510_SetU64(&(*_self_), static_cast<jule::U64>((_1e5e0d08b_ReadU64(&(*_self_)) * _1e5e0dca1_AsU64(&_42722_x))));
				};
			}
		}
		else {
			_case_begin_1b18be6ca:;
			{
				return false;
			}
		}
		_match_end_1b18bdc07:;
	};
	return true;
}



inline jule::Bool _1e5e1358b_Div(_1e5da6ba0_Const* _self_, _1e5da6ba0_Const _45522_x) {
	{
		
		if (_1e5e10b71_IsF64(&(*_self_))) {
			_case_begin_1b18c4702:;
			{
				jule::F64 _45817_l = _1e5e0e015_AsF64(&_45522_x);;
				if ((_45817_l == 0LL)) {
					return false;
				};
				_1e5e0ec80_SetF64(&(*_self_), static_cast<jule::F64>(jule::div(_1e5e0d7c8_ReadF64(&(*_self_)),_45817_l)));
			}
		}
		else if (_1e5e101c0_IsI64(&(*_self_))) {
			_case_begin_1b18c3eb5:;
			{
				jule::F64 _46417_l = _1e5e0e015_AsF64(&_45522_x);;
				if ((_46417_l == 0LL)) {
					return false;
				};
				_1e5e0ec80_SetF64(&(*_self_), static_cast<jule::F64>(jule::div(_1e5e0e015_AsF64(&(*_self_)),_46417_l)));
			}
		}
		else if (_1e5e10434_IsU64(&(*_self_))) {
			_case_begin_1b18c402b:;
			{
				jule::F64 _47017_l = _1e5e0e015_AsF64(&_45522_x);;
				if ((_47017_l == 0LL)) {
					return false;
				};
				_1e5e0ec80_SetF64(&(*_self_), static_cast<jule::F64>(jule::div(_1e5e0e015_AsF64(&(*_self_)),_47017_l)));
			}
		}
		else {
			_case_begin_1b18c3e4e:;
			{
				return false;
			}
		}
		_match_end_1b18c347b:;
	};
	return true;
}



inline jule::Bool _1e5e13899_Mod(_1e5da6ba0_Const* _self_, _1e5da6ba0_Const _48422_x) {
	{
		
		if (_1e5e101c0_IsI64(&(*_self_))) {
			_case_begin_1b18c8ea9:;
			{
				jule::I64 _48717_l = _1e5e0da3c_AsI64(&_48422_x);;
				if ((_48717_l == 0LL)) {
					return false;
				};
				_1e5e0e28a_SetI64(&(*_self_), static_cast<jule::I64>(jule::mod(_1e5e0cd27_ReadI64(&(*_self_)),_48717_l)));
			}
		}
		else if (_1e5e10434_IsU64(&(*_self_))) {
			_case_begin_1b18c877d:;
			{
				jule::U64 _49317_l = _1e5e0dca1_AsU64(&_48422_x);;
				if ((_49317_l == 0LLU)) {
					return false;
				};
				_1e5e0e510_SetU64(&(*_self_), static_cast<jule::U64>(jule::mod(_1e5e0d08b_ReadU64(&(*_self_)),_49317_l)));
			}
		}
		else {
			_case_begin_1b18c8717:;
			{
				return false;
			}
		}
		_match_end_1b18c863a:;
	};
	return true;
}



inline jule::Bool _1e5e13ba7_BitwiseAnd(_1e5da6ba0_Const* _self_, _1e5da6ba0_Const _50629_x) {
	{
		
		if (_1e5e101c0_IsI64(&(*_self_))) {
			_case_begin_1b18cc30e:;
			{
				_1e5e0e28a_SetI64(&(*_self_), static_cast<jule::I64>((_1e5e0cd27_ReadI64(&(*_self_)) & _1e5e0da3c_AsI64(&_50629_x))));
			}
		}
		else if (_1e5e10434_IsU64(&(*_self_))) {
			_case_begin_1b18cbad3:;
			{
				_1e5e0e510_SetU64(&(*_self_), static_cast<jule::U64>((_1e5e0d08b_ReadU64(&(*_self_)) & _1e5e0dca1_AsU64(&_50629_x))));
			}
		}
		else {
			_case_begin_1b18cba6c:;
			{
				return false;
			}
		}
		_match_end_1b18cb990:;
	};
	return true;
}



inline jule::Bool _1e5e13eb5_BitwiseOr(_1e5da6ba0_Const* _self_, _1e5da6ba0_Const _52028_x) {
	{
		
		if (_1e5e101c0_IsI64(&(*_self_))) {
			_case_begin_1b18ce498:;
			{
				_1e5e0e28a_SetI64(&(*_self_), static_cast<jule::I64>((_1e5e0cd27_ReadI64(&(*_self_)) | _1e5e0da3c_AsI64(&_52028_x))));
			}
		}
		else if (_1e5e10434_IsU64(&(*_self_))) {
			_case_begin_1b18cdc6c:;
			{
				_1e5e0e510_SetU64(&(*_self_), static_cast<jule::U64>((_1e5e0d08b_ReadU64(&(*_self_)) | _1e5e0dca1_AsU64(&_52028_x))));
			}
		}
		else {
			_case_begin_1b18cdc06:;
			{
				return false;
			}
		}
		_match_end_1b18cdb29:;
	};
	return true;
}



inline jule::Bool _1e5e142c3_Xor(_1e5da6ba0_Const* _self_, _1e5da6ba0_Const _53422_x) {
	{
		
		if (_1e5e101c0_IsI64(&(*_self_))) {
			_case_begin_1b18d1632:;
			{
				_1e5e0e28a_SetI64(&(*_self_), static_cast<jule::I64>((_1e5e0cd27_ReadI64(&(*_self_)) ^ _1e5e0da3c_AsI64(&_53422_x))));
			}
		}
		else if (_1e5e10434_IsU64(&(*_self_))) {
			_case_begin_1b18d0e06:;
			{
				_1e5e0e510_SetU64(&(*_self_), static_cast<jule::U64>((_1e5e0d08b_ReadU64(&(*_self_)) ^ _1e5e0dca1_AsU64(&_53422_x))));
			}
		}
		else {
			_case_begin_1b18d0d90:;
			{
				return false;
			}
		}
		_match_end_1b18d0cb3:;
	};
	return true;
}



inline jule::Bool _1e5e145d1_Lshift(_1e5da6ba0_Const* _self_, _1e5da6ba0_Const _54825_x) {
	{
		
		if (_1e5e101c0_IsI64(&(*_self_))) {
			_case_begin_1b18d37bb:;
			{
				jule::I64 _55117_l = _1e5e0da3c_AsI64(&(*_self_));;
				if ((_55117_l < 0LL)) {
					jule::U64 _55321_r = _1e5e0dca1_AsU64(&_54825_x);;
					_1e5e0e28a_SetI64(&(*_self_), static_cast<jule::I64>((_55117_l << _55321_r)));
				} else {
					_1e5e14c52_lshiftUnsig((*_self_),_54825_x);
				};
			}
		}
		else if (_1e5e10434_IsU64(&(*_self_))) {
			_case_begin_1b18d3090:;
			{
				_1e5e14c52_lshiftUnsig((*_self_),_54825_x);
			}
		}
		else {
			_case_begin_1b18d3029:;
			{
				return false;
			}
		}
		_match_end_1b18d2e4c:;
	};
	return true;
}



inline jule::Bool _1e5e148de_Rshift(_1e5da6ba0_Const* _self_, _1e5da6ba0_Const _56825_x) {
	{
		
		if (_1e5e101c0_IsI64(&(*_self_))) {
			_case_begin_1b18d62d5:;
			{
				jule::I64 _57117_l = _1e5e0da3c_AsI64(&(*_self_));;
				if ((_57117_l < 0LL)) {
					jule::U64 _57321_r = _1e5e0dca1_AsU64(&_56825_x);;
					_1e5e0e28a_SetI64(&(*_self_), static_cast<jule::I64>((_57117_l >> _57321_r)));
				} else {
					_1e5e1504e_rshiftUnsig((*_self_),_56825_x);
				};
			}
		}
		else if (_1e5e10434_IsU64(&(*_self_))) {
			_case_begin_1b18d5aa9:;
			{
				_1e5e1504e_rshiftUnsig((*_self_),_56825_x);
			}
		}
		else {
			_case_begin_1b18d5a43:;
			{
				return false;
			}
		}
		_match_end_1b18d5966:;
	};
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5da6ba0_Const _Src) {
	_Stream << "Const{";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e65c747a_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e64ce0da_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a023cc_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e686a421_set(_1e6a02740_decimal* _self_, jule::Str _23322_s) {
	jule::Bool _23332_ok = jule::Bool();
	jule::I64 _23417_i = 0LL;;
	(*_self_)._field_neg=false;
	(*_self_)._field_trunc=false;
	if ((_23417_i >= _23322_s.len())) {
		return _23332_ok;
	};
	{
		
		if ((_23322_s[_23417_i] == '+')) {
			_case_begin_1b1e2b40c:;
			{
				(_23417_i)++;
			}
		}
		else if ((_23322_s[_23417_i] == '-')) {
			_case_begin_1b1e2b473:;
			{
				(*_self_)._field_neg=true;
				(_23417_i)++;
			}
		}
		_match_end_1b1e2b264:;
	};
	jule::Bool _25117_sawdot = false;;
	jule::Bool _25217_sawdigits = false;;
	for (; (_23417_i < _23322_s.len()); (_23417_i)++) {
		{
			{
				
				if ((_23322_s[_23417_i] == '_')) {
					_case_begin_1b1e2d70b:;
					{
						goto _iter_next_1b1e2ce47;
					}
				}
				else if ((_23322_s[_23417_i] == '.')) {
					_case_begin_1b1e2d783:;
					{
						if (_25117_sawdot) {
							return _23332_ok;
						};
						_25117_sawdot=true;
						(*_self_)._field_dp=(*_self_)._field_nd;
						goto _iter_next_1b1e2ce47;
					}
				}
				else if ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9'))) {
					_case_begin_1b1e2d80a:;
					{
						_25217_sawdigits=true;
						if (((_23322_s[_23417_i] == '0') && ((*_self_)._field_nd == 0LL))) {
							((*_self_)._field_dp)--;
							goto _iter_next_1b1e2ce47;
						};
						if (((*_self_)._field_nd < 800LL)) {
							(*_self_)._field_d[(*_self_)._field_nd]=_23322_s[_23417_i];
							((*_self_)._field_nd)++;
						} else if ((_23322_s[_23417_i] != '0')) {
							(*_self_)._field_trunc=true;
						};
						goto _iter_next_1b1e2ce47;
					}
				}
				_match_end_1b1e2d5c9:;
			};
			goto _iter_end_1b1e2ce47;
		}
	_iter_next_1b1e2ce47:;
	}
	_iter_end_1b1e2ce47:;;
	if ((!(_25217_sawdigits))) {
		return _23332_ok;
	};
	if ((!(_25117_sawdot))) {
		(*_self_)._field_dp=(*_self_)._field_nd;
	};
	if (((_23417_i < _23322_s.len()) && (_1e663e48c_lower(_23322_s[_23417_i]) == 'e'))) {
		(_23417_i)++;
		if ((_23417_i >= _23322_s.len())) {
			return _23332_ok;
		};
		jule::I64 _29721_esign = 1LL;;
		if ((_23322_s[_23417_i] == '+')) {
			(_23417_i)++;
		} else if ((_23322_s[_23417_i] == '-')) {
			(_23417_i)++;
			_29721_esign=-1LL;
		};
		if ((((_23417_i >= _23322_s.len()) || (_23322_s[_23417_i] < '0')) || (_23322_s[_23417_i] > '9'))) {
			return _23332_ok;
		};
		jule::I64 _30721_e = 0LL;;
		for (; ((_23417_i < _23322_s.len()) && ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9')) || (_23322_s[_23417_i] == '_'))); (_23417_i)++) {
			{
				if ((_23322_s[_23417_i] == '_')) {
					goto _iter_next_1b1e3624c;
				};
				if ((_30721_e < 10000LL)) {
					_30721_e=static_cast<jule::I64>((((_30721_e * 10LL) + static_cast<jule::I64>(_23322_s[_23417_i])) - '0'));
				};
			}
		_iter_next_1b1e3624c:;
		}
		_iter_end_1b1e3624c:;;
		(*_self_)._field_dp+=(_30721_e * _29721_esign);
	};
	if ((_23417_i != _23322_s.len())) {
		return _23332_ok;
	};
	_23332_ok=true;
	return _23332_ok;
}



inline std::tuple<jule::U64,jule::Bool> _1e64de33c_floatBits(_1e6a02740_decimal* _self_, _1e65c747a_floatInfo& _32729_flt) {
	jule::U64 _32747_b = jule::U64();
	jule::Bool _32755_overflow = jule::Bool();
	jule::I64 _32817_exp = 0LL;;
	jule::U64 _32917_mant = 0LLU;;
	if (((*_self_)._field_nd == 0LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32729_flt._field_bias;
		goto _julec_label_out;
	};
	if (((*_self_)._field_dp > 310LL)) {
		goto _julec_label_overflow;
	};
	if (((*_self_)._field_dp < -330LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32729_flt._field_bias;
		goto _julec_label_out;
	};
	_32817_exp=0LL;
	while (((*_self_)._field_dp > 0LL)) {
		{
			jule::I64 _35421_n = 0LL;;
			if (((*_self_)._field_dp >= _1e6511b9a_powtab.len())) {
				_35421_n=27LL;
			} else {
				_35421_n=_1e6511b9a_powtab[(*_self_)._field_dp];
			};
			_1e6a02a5e_shift(&(*_self_), static_cast<jule::I64>((-(_35421_n))));
			_32817_exp+=_35421_n;
		}
	_iter_next_1b1e3cc59:;
	}
	_iter_end_1b1e3cc59:;;
	while ((((*_self_)._field_dp < 0LL) || (((*_self_)._field_dp == 0LL) && ((*_self_)._field_d[0LL] < '5')))) {
		{
			jule::I64 _36421_n = 0LL;;
			if (((-((*_self_)._field_dp)) >= _1e6511b9a_powtab.len())) {
				_36421_n=27LL;
			} else {
				_36421_n=_1e6511b9a_powtab[(-((*_self_)._field_dp))];
			};
			_1e6a02a5e_shift(&(*_self_), _36421_n);
			_32817_exp-=_36421_n;
		}
	_iter_next_1b1e3d463:;
	}
	_iter_end_1b1e3d463:;;
	(_32817_exp)--;
	if ((_32817_exp < (_32729_flt._field_bias + 1LL))) {
		jule::I64 _38117_n = ((_32729_flt._field_bias + 1LL) - _32817_exp);;
		_1e6a02a5e_shift(&(*_self_), static_cast<jule::I64>((-(_38117_n))));
		_32817_exp+=_38117_n;
	};
	if (((_32817_exp - _32729_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32729_flt._field_expbits) - 1LL)))) {
		goto _julec_label_overflow;
	};
	_1e6a02a5e_shift(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>((1LL + _32729_flt._field_mantbits))));
	_32917_mant=static_cast<jule::U64>(_1e6a03037_roundedInteger(&(*_self_)));
	if ((_32917_mant == (2LLU << _32729_flt._field_mantbits))) {
		_32917_mant>>=1LLU;
		(_32817_exp)++;
		if (((_32817_exp - _32729_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32729_flt._field_expbits) - 1LL)))) {
			goto _julec_label_overflow;
		};
	};
	if (((_32917_mant & (1LLU << _32729_flt._field_mantbits)) == 0LLU)) {
		_32817_exp=_32729_flt._field_bias;
	};
	goto _julec_label_out;
	_julec_label_overflow:;
	_32917_mant=0LLU;
	_32817_exp=static_cast<jule::I64>(static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << _32729_flt._field_expbits) - 1LLU) + static_cast<jule::U64>(_32729_flt._field_bias))));
	_32755_overflow=true;
	_julec_label_out:;
	jule::U64 _41717_bits = (_32917_mant & ((1LLU << _32729_flt._field_mantbits) - 1LLU));;
	_41717_bits|=(static_cast<jule::U64>(((_32817_exp - _32729_flt._field_bias) & static_cast<jule::I64>(((1LL << _32729_flt._field_expbits) - 1LL)))) << _32729_flt._field_mantbits);
	if ((*_self_)._field_neg) {
		_41717_bits|=((1LLU << _32729_flt._field_mantbits) << _32729_flt._field_expbits);
	};
	_32747_b = _41717_bits;
	return std::make_tuple(_32747_b,_32755_overflow);
}



inline void _1e6a0292c_assign(_1e6a02740_decimal* _self_, jule::U64 _33029_v) {
	jule::Array<jule::U8,24> _33117_buf = jule::Array<jule::U8,24>();;
	jule::I64 _33417_n = 0LL;;
	while ((_33029_v > 0LLU)) {
		{
			jule::U64 _33617_v1 = (_33029_v / 10LLU);;
			_33029_v-=(10LLU * _33617_v1);
			_33117_buf[_33417_n]=static_cast<jule::U8>(static_cast<jule::U8>((_33029_v + '0')));
			(_33417_n)++;
			_33029_v=_33617_v1;
		}
	_iter_next_1b1e4b5a3:;
	}
	_iter_end_1b1e4b5a3:;;
	(*_self_)._field_nd=0LL;
	(_33417_n)--;
	for (; (_33417_n >= 0LL); (_33417_n)--) {
		{
			(*_self_)._field_d[(*_self_)._field_nd]=_33117_buf[_33417_n];
			((*_self_)._field_nd)++;
		}
	_iter_next_1b1e4ca8d:;
	}
	_iter_end_1b1e4ca8d:;;
	(*_self_)._field_dp=(*_self_)._field_nd;
	_1e6a0329b_trim((*_self_));
}



inline void _1e6a02a5e_shift(_1e6a02740_decimal* _self_, jule::I64 _35528_k) {
	{
		
		if (((*_self_)._field_nd == 0LL)) {
			_case_begin_1b1e4e210:;
		}
		else if ((_35528_k > 0LL)) {
			_case_begin_1b1e4e287:;
			{
				while ((_35528_k > 60LL)) {
					{
						_1e6a03642_leftShift((*_self_),60LLU);
						_35528_k-=60LL;
					}
				_iter_next_1b1e4e8b4:;
				}
				_iter_end_1b1e4e8b4:;;
				_1e6a03642_leftShift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>(_35528_k)));
			}
		}
		else if ((_35528_k < 0LL)) {
			_case_begin_1b1e4e30e:;
			{
				while ((_35528_k < -60LL)) {
					{
						_1e6a033cd_rightShift((*_self_),60LLU);
						_35528_k+=60LL;
					}
				_iter_next_1b1e50992:;
				}
				_iter_end_1b1e50992:;;
				_1e6a033cd_rightShift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>((-(_35528_k)))));
			}
		}
		_match_end_1b1e4e0cd:;
	};
}



inline void _1e6a02b91_roundDown(_1e6a02740_decimal* _self_, jule::I64 _37528_nd) {
	if (((_37528_nd < 0LL) || (_37528_nd >= (*_self_)._field_nd))) {
		return;;
	};
	(*_self_)._field_nd=_37528_nd;
	_1e6a0329b_trim((*_self_));
}



inline void _1e6a02cc3_roundUp(_1e6a02740_decimal* _self_, jule::I64 _38426_nd) {
	if (((_38426_nd < 0LL) || (_38426_nd >= (*_self_)._field_nd))) {
		return;;
	};
	jule::I64 _39017_i = (_38426_nd - 1LL);;
	for (; (_39017_i >= 0LL); (_39017_i)--) {
		{
			jule::U8 _39217_c = (*_self_)._field_d[_39017_i];;
			if ((_39217_c < '9')) {
				((*_self_)._field_d[_39017_i])++;
				(*_self_)._field_nd=static_cast<jule::I64>((_39017_i + 1LL));
				return;;
			};
		}
	_iter_next_1b1e53c3c:;
	}
	_iter_end_1b1e53c3c:;;
	(*_self_)._field_d[0LL]='1';
	(*_self_)._field_nd=1LL;
	((*_self_)._field_dp)++;
}



inline void _1e6a02e05_round(_1e6a02740_decimal* _self_, jule::I64 _41124_nd) {
	if (((_41124_nd < 0LL) || (_41124_nd >= (*_self_)._field_nd))) {
		return;;
	};
	if (_1e6a03774_shouldRoundUp((*_self_),_41124_nd)) {
		_1e6a02cc3_roundUp(&(*_self_), _41124_nd);
	} else {
		_1e6a02b91_roundDown(&(*_self_), _41124_nd);
	};
}



inline jule::U64 _1e6a03037_roundedInteger(_1e6a02740_decimal* _self_) {
	if (((*_self_)._field_dp > 20LL)) {
		return jule::MAX_U64;
	};
	jule::I64 _42817_i = 0LL;;
	jule::U64 _42917_n = 0LLU;;
	for (; ((_42817_i < (*_self_)._field_dp) && (_42817_i < (*_self_)._field_nd)); (_42817_i)++) {
		{
			_42917_n=static_cast<jule::U64>(((_42917_n * 10LLU) + static_cast<jule::U64>(((*_self_)._field_d[_42817_i] - '0'))));
		}
	_iter_next_1b1e56a75:;
	}
	_iter_end_1b1e56a75:;;
	for (; (_42817_i < (*_self_)._field_dp); (_42817_i)++) {
		{
			_42917_n*=10LLU;
		}
	_iter_next_1b1e59616:;
	}
	_iter_end_1b1e59616:;;
	if (_1e6a03774_shouldRoundUp((*_self_),(*_self_)._field_dp)) {
		(_42917_n)++;
	};
	return _42917_n;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a02740_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e5d4c805_FieldIns> _1e5c48e93_instance(jule::Ptr<_1e5d37658_Field> _self_) {
	return jule::new_ptr<_1e5d4c805_FieldIns>(_1e5d4c805_FieldIns{._field_Decl=_self_, });
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d37658_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d46ab8_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e5d714d8_StructIns> _1e5d2649e_instance(jule::Ptr<_1e5d4518d_Struct> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];
	};
	jule::Ptr<_1e5d714d8_StructIns> _9917_ins = jule::new_ptr<_1e5d714d8_StructIns>(_1e5d714d8_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_1e5d4c805_FieldIns>>::alloc(0LL,_self_.get()._field_Fields.len()), ._field_Refers=static__1e5e2348b_new(), });;
	{
		auto &expr = _self_.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1b2238939:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d37658_Field> _10521_f = *it;
			{
				_9917_ins.get()._field_Fields = jule::alloc_for_append(_9917_ins.get()._field_Fields,1);_9917_ins.get()._field_Fields.__push(_1e5c48e93_instance(_10521_f));;
				if ((((!(_10521_f.get()._field_Mutable)) && (_10521_f.get()._field_Kind.get()._field_Kind != nullptr)) && _1e6ab7e87_Mutable(_10521_f.get()._field_Kind.get()._field_Kind.ptr()))) {
					_9917_ins.get()._field_Mutable=true;
				};
			}
			_iter_next_1b2238939:;
			++it;
			goto _iter_begin_1b2238939;
		}
		_iter_end_1b2238939:;
	};
	if ((_self_.get()._field_Generics.len() == 0LL)) {
		_9917_ins.get()._field_Methods=_self_.get()._field_Methods;
	} else {
		_9917_ins.get()._field_Methods=jule::Slice<jule::Ptr<_1e5e1c62d_Fn>>::alloc(0LL,_self_.get()._field_Methods.len());
		{
			auto &expr = _self_.get()._field_Methods;
			auto it = expr.begin();
			_iter_begin_1b223bb90:;
			if (it != expr.end()) {
				jule::Ptr<_1e5e1c62d_Fn> _11625_f = *it;
				{
					jule::Ptr<_1e5e1c62d_Fn> _11725_fins = jule::new_ptr<_1e5e1c62d_Fn>((*(_11625_f)));;
					_11725_fins.get()._field_Instances=nullptr;
					_9917_ins.get()._field_Methods = jule::alloc_for_append(_9917_ins.get()._field_Methods,1);_9917_ins.get()._field_Methods.__push(_11725_fins);;
				}
				_iter_next_1b223bb90:;
				++it;
				goto _iter_begin_1b223bb90;
			}
			_iter_end_1b223bb90:;
		};
	};
	return _9917_ins;
}



inline jule::Ptr<_1e5d714d8_StructIns> _1e5d2c593_appendInstance(_1e5d4518d_Struct* _self_, jule::Ptr<_1e5d714d8_StructIns>& _12838_ins) {
	if ((((*_self_)._field_Generics.len() == 0LL) && ((*_self_)._field_Instances.len() == 1LL))) {
		return (*_self_)._field_Instances[0LL];
	};
	{
		auto &expr = (*_self_)._field_Instances;
		auto it = expr.begin();
		_iter_begin_1b223e137:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d714d8_StructIns> _13421_ains = *it;
			{
				if (_1e5d47ed7_Same(_13421_ains.ptr(), _12838_ins)) {
					return _13421_ains;
				};
			}
			_iter_next_1b223e137:;
			++it;
			goto _iter_begin_1b223e137;
		}
		_iter_end_1b223e137:;
	};
	(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
	return nullptr;
}



inline jule::Ptr<_1e5e1c62d_Fn> _1e5d3180b_FindMethod(_1e5d4518d_Struct* _self_, jule::Str _14629_ident, jule::Bool _14641_statically) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_1b2240688:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e1c62d_Fn> _14721_f = *it;
			{
				if (((_14721_f.get()._field_Statically == _14641_statically) && (_14721_f.get()._field_Ident == _14629_ident))) {
					return _14721_f;
				};
			}
			_iter_next_1b2240688:;
			++it;
			goto _iter_begin_1b2240688;
		}
		_iter_end_1b2240688:;
	};
	return nullptr;
}



inline jule::Ptr<_1e6a3dd20_Var> _1e5d345ab_FindStatic(_1e5d4518d_Struct* _self_, jule::Str _15729_ident) {
	{
		auto &expr = (*_self_)._field_Statics;
		auto it = expr.begin();
		_iter_begin_1b22418ba:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a3dd20_Var> _15821_v = *it;
			{
				if ((_15821_v.get()._field_Ident == _15729_ident)) {
					return _15821_v;
				};
			}
			_iter_next_1b22418ba:;
			++it;
			goto _iter_begin_1b22418ba;
		}
		_iter_end_1b22418ba:;
	};
	return nullptr;
}



inline jule::Ptr<_1e5d37658_Field> _1e5d355bd_FindField(_1e5d4518d_Struct* _self_, jule::Str _16828_ident) {
	{
		auto &expr = (*_self_)._field_Fields;
		auto it = expr.begin();
		_iter_begin_1b2242855:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d37658_Field> _16921_f = *it;
			{
				if ((_16921_f.get()._field_Ident == _16828_ident)) {
					return _16921_f;
				};
			}
			_iter_next_1b2242855:;
			++it;
			goto _iter_begin_1b2242855;
		}
		_iter_end_1b2242855:;
	};
	return nullptr;
}



inline jule::Bool _1e5d34a0c_IsImplements(_1e5d4518d_Struct* _self_, jule::Ptr<_1e5e2e4db_Trait> _17827_t) {
	{
		auto &expr = (*_self_)._field_Implements;
		auto it = expr.begin();
		_iter_begin_1b2242d2d:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e2e4db_Trait> &_17916_it = *it;
			{
				if ((_17827_t == _17916_it)) {
					return true;
				};
			}
			_iter_next_1b2242d2d:;
			++it;
			goto _iter_begin_1b2242d2d;
		}
		_iter_end_1b2242d2d:;
	};
	return false;
}



inline jule::Bool _1e5d36cd9_IsDerives(_1e5d4518d_Struct* _self_, jule::Str _18824_ident) {
	{
		auto &expr = (*_self_)._field_Directives;
		auto it = expr.begin();
		_iter_begin_1b2243d40:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d21268_Directive> &_18916_d = *it;
			{
				if ((_18916_d.get()._field_Tag.get()._field_Kind == jule::Str("derive", 6))) {
					if (((_18916_d.get()._field_Args.len() == 1LL) && (_18916_d.get()._field_Args[0LL].get()._field_Kind == _18824_ident))) {
						return true;
					};
				};
			}
			_iter_next_1b2243d40:;
			++it;
			goto _iter_begin_1b2243d40;
		}
		_iter_end_1b2243d40:;
	};
	return false;
}



inline jule::Bool _1e5d361e5_IsUses(_1e5d4518d_Struct* _self_, jule::Ptr<_1e5d4518d_Struct> _20021_s) {
	{
		auto &expr = (*_self_)._field_Uses;
		auto it = expr.begin();
		_iter_begin_1b22465e5:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d4518d_Struct> &_20116_u = *it;
			{
				while ((_20021_s == _20116_u)) {
					{
						return true;
					}
				_iter_next_1b2246d98:;
				}
				_iter_end_1b2246d98:;;
			}
			_iter_next_1b22465e5:;
			++it;
			goto _iter_begin_1b22465e5;
		}
		_iter_end_1b22465e5:;
	};
	return false;
}



inline jule::Bool _1e5d39e96_HasRefAccessible(_1e5d4518d_Struct* _self_) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_1b2247096:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e1c62d_Fn> &_21116_m = *it;
			{
				if (((_21116_m.get()._field_Params.len() > 0LL) && _1e5e1b682_IsRef(_21116_m.get()._field_Params[0LL].ptr()))) {
					return true;
				};
			}
			_iter_next_1b2247096:;
			++it;
			goto _iter_begin_1b2247096;
		}
		_iter_end_1b2247096:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d4518d_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d4c805_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e151b4_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e153a1_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e1558d_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e1577a_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e15967_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e15b54_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e15d41_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e1602d_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e1621a_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e16407_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e165e4_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e167d1_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e169bd_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e16baa_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e16d97_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e172b5_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e174a2_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e1768e_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e1787b_CommonIdentExprModel _Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e17a68_CommonSubIdentExprModel _Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "ExprKind:" << _Src._field_ExprKind << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e17c55_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e17e42_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e1812e_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e1831b_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e18508_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e186e5_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e188d2_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e18abe_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e18cab_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e18e98_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e19185_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e17084_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e197e5_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e199d2_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e19bbe_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e19dab_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e1a098_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e1a62b_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e5e1e410_ParamIns> _1e5e1b1a9_instance(jule::Ptr<_1e5e1ace1_Param> _self_) {
	return jule::new_ptr<_1e5e1e410_ParamIns>(_1e5e1e410_ParamIns{._field_Decl=_self_, });
}



inline jule::Bool _1e5e1b41d_IsSelf(_1e5e1ace1_Param* _self_) {
	return (((*_self_)._field_Ident == jule::Str("&self", 5)) || ((*_self_)._field_Ident == jule::Str("self", 4)));
}



inline jule::Bool _1e5e1b682_IsRef(_1e5e1ace1_Param* _self_) {
	return ((!((*_self_)._field_Ident.empty())) && ((*_self_)._field_Ident[0LL] == '&'));
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e1ace1_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e5e1ca90_IsVoid(_1e5e1c62d_Fn* _self_) {
	return ((*_self_)._field_Result == nullptr);
}



inline jule::Bool _1e5e1cd04_IsMethod(_1e5e1c62d_Fn* _self_) {
	return ((*_self_)._field_Owner != nullptr);
}



inline jule::Bool _1e5e1d068_IsEntryPoint(_1e5e1c62d_Fn* _self_) {
	return ((*_self_)._field_Ident == jule::Str("main", 4));
}



inline jule::Bool _1e5e1d2cc_IsInit(_1e5e1c62d_Fn* _self_) {
	return ((*_self_)._field_Ident == jule::Str("init", 4));
}



inline jule::Bool _1e5e1d541_IsAnon(_1e5e1c62d_Fn* _self_) {
	return _1e47162e1_IsAnonIdent((*_self_)._field_Ident);
}



inline jule::Bool _1e5e1d7a5_AnyVar(_1e5e1c62d_Fn* _self_) {
	return (((*_self_)._field_Result != nullptr) && ((*_self_)._field_Result.get()._field_Idents.len() > 0LL));
}



inline jule::Ptr<_1e5e202ce_FnIns> _1e5e1da19_instanceForce(jule::Ptr<_1e5e1c62d_Fn> _self_) {
	jule::Ptr<_1e5e202ce_FnIns> _10017_ins = jule::new_ptr<_1e5e202ce_FnIns>(_1e5e202ce_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_1e6a06700_Scope>(), ._field_Refers=static__1e5e2348b_new(), });;
	_10017_ins.get()._field_Params=jule::Slice<jule::Ptr<_1e5e1e410_ParamIns>>::alloc(0LL,_self_.get()._field_Params.len());
	{
		auto &expr = _self_.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1b225a928:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e1ace1_Param> _10721_p = *it;
			{
				_10017_ins.get()._field_Params = jule::alloc_for_append(_10017_ins.get()._field_Params,1);_10017_ins.get()._field_Params.__push(_1e5e1b1a9_instance(_10721_p));;
			}
			_iter_next_1b225a928:;
			++it;
			goto _iter_begin_1b225a928;
		}
		_iter_end_1b225a928:;
	};
	if ((_10017_ins.get()._field_Decl.get()._field_Result != nullptr)) {
		_10017_ins.get()._field_Result=_10017_ins.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Kind;
	};
	return _10017_ins;
}



inline jule::Ptr<_1e5e202ce_FnIns> _1e5e1dc7d_instance(jule::Ptr<_1e5e1c62d_Fn> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];
	};
	return _1e5e1da19_instanceForce(_self_);
}



inline jule::Ptr<_1e5e202ce_FnIns> _1e5e1e058_appendInstance(_1e5e1c62d_Fn* _self_, jule::Ptr<_1e5e202ce_FnIns>& _12838_ins) {
	if (((*_self_)._field_Generics.len() == 0LL)) {
		if (((*_self_)._field_Instances.len() == 1LL)) {
			return (*_self_)._field_Instances[0LL];
		};
		(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
		return nullptr;
	};
	if (((*_self_)._field_Instances.len() == 0LL)) {
		(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_Instances;
		auto it = expr.begin();
		_iter_begin_1b2264833:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e202ce_FnIns> _14421_ains = *it;
			{
				if (_1e5e21bd7_Same(_14421_ains.ptr(), _12838_ins)) {
					return _14421_ains;
				};
			}
			_iter_next_1b2264833:;
			++it;
			goto _iter_begin_1b2264833;
		}
		_iter_end_1b2264833:;
	};
	(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e1c62d_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e5e1e7d9_Str(_1e5e1e410_ParamIns* _self_) {
	jule::Str _16617_s = jule::Str();;
	if ((*_self_)._field_Decl.get()._field_Mutable) {
		_16617_s+=jule::Str("mut ", 4);
	};
	if ((*_self_)._field_Decl.get()._field_Reference) {
		_16617_s+=jule::Str("&_:", 3);
	};
	if (_1e5e1b41d_IsSelf((*_self_)._field_Decl.ptr())) {
		if (_1e5e1b682_IsRef((*_self_)._field_Decl.ptr())) {
			_16617_s+=jule::Str("&", 1);
		};
		_16617_s+=jule::Str("self", 4);
		return _16617_s;
	};
	if ((*_self_)._field_Decl.get()._field_Variadic) {
		_16617_s+=jule::Str("...", 3);
	};
	if (((*_self_)._field_Kind != nullptr)) {
		_16617_s+=_1e6ab6e86_Str((*_self_)._field_Kind.ptr());
	};
	return _16617_s;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e1e410_ParamIns _Src) {
	_Stream << "ParamIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e5e2060e_Str(_1e5e202ce_FnIns* _self_) {
	;
	return _1e5e21ee5_GetKindStr(&(*_self_), false);
}



inline jule::Bool _1e5e2091c_Equals(jule::Ptr<_1e5e202ce_FnIns> _self_, jule::Ptr<_1e6ab6a8a_TypeKind> _21722_other) {
	jule::Ptr<_1e5e202ce_FnIns> _21813_f = _1e6ab9d8a_Fn(_21722_other.ptr());;
	if ((_21813_f == nullptr)) {
		return false;
	};
	return _1e5e20d7e_EqualsFn(_self_, _21813_f);
}



inline jule::Bool _1e5e20d7e_EqualsFn(jule::Ptr<_1e5e202ce_FnIns> _self_, jule::Ptr<_1e5e202ce_FnIns>& _22825_f) {
	if ((_self_.get()._field_Decl.get()._field_Exceptional != _22825_f.get()._field_Decl.get()._field_Exceptional)) {
		return false;
	};
	if ((_self_.get()._field_Decl.get()._field_Unsafety != _22825_f.get()._field_Decl.get()._field_Unsafety)) {
		return false;
	};
	if ((_1e5e1ca90_IsVoid(_self_.get()._field_Decl.ptr()) != _1e5e1ca90_IsVoid(_22825_f.get()._field_Decl.ptr()))) {
		return false;
	};
	jule::Fn<jule::Bool(jule::Ptr<_1e5e1e410_ParamIns>,jule::Ptr<_1e5e1e410_ParamIns>)> _23813_checkParams = jule::Fn<jule::Bool(jule::Ptr<_1e5e1e410_ParamIns>,jule::Ptr<_1e5e1e410_ParamIns>)>([=](jule::Ptr<_1e5e1e410_ParamIns> _23830_p1, jule::Ptr<_1e5e1e410_ParamIns> _23845_p2) mutable -> jule::Bool {
		if ((_23830_p1.get()._field_Decl.get()._field_Mutable != _23845_p2.get()._field_Decl.get()._field_Mutable)) {
			return false;
		};
		if (_1e5e1b41d_IsSelf(_23830_p1.get()._field_Decl.ptr())) {
			if ((!(_1e5e1b41d_IsSelf(_23845_p2.get()._field_Decl.ptr())))) {
				return false;
			};
			if ((_1e5e1b682_IsRef(_23830_p1.get()._field_Decl.ptr()) != _1e5e1b682_IsRef(_23845_p2.get()._field_Decl.ptr()))) {
				return false;
			};
			return true;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Reference != _23845_p2.get()._field_Decl.get()._field_Reference)) {
			return false;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Variadic != _23845_p2.get()._field_Decl.get()._field_Variadic)) {
			return false;
		};
		return _1e6ab7294_Equals(_23830_p1.get()._field_Kind, _23845_p2.get()._field_Kind);
	});;
	if ((_22825_f.get()._field_Params.len() != _self_.get()._field_Params.len())) {
		return false;
	};
	jule::I64 _27017_i = 0LL;;
	for (; (_27017_i < _self_.get()._field_Params.len()); (_27017_i)++) {
		{
			if ((!(_23813_checkParams(_self_.get()._field_Params[_27017_i],_22825_f.get()._field_Params[_27017_i])))) {
				return false;
			};
		}
	_iter_next_1b22731d2:;
	}
	_iter_end_1b22731d2:;;
	if ((!(_1e5e1ca90_IsVoid(_self_.get()._field_Decl.ptr())))) {
		if ((!(_1e6ab7294_Equals(_self_.get()._field_Result, _22825_f.get()._field_Result)))) {
			return false;
		};
	};
	return true;
}



inline jule::Bool _1e5e2118c_equalsTrait(jule::Ptr<_1e5e202ce_FnIns> _self_, jule::Ptr<_1e5e202ce_FnIns>& _28728_other) {
	if ((!(_1e5e20d7e_EqualsFn(_self_, _28728_other)))) {
		return false;
	};
	if ((_self_.get()._field_Decl.get()._field_Generics.len() != _28728_other.get()._field_Decl.get()._field_Generics.len())) {
		return false;
	};
	return true;
}



inline jule::Slice<jule::Ptr<_1e6ab6a8a_TypeKind>> _1e5e21401_Types(_1e5e202ce_FnIns* _self_) {
	{
		
		if (((*_self_)._field_Result == nullptr)) {
			_case_begin_1b2276823:;
			{
				return nullptr;
			}
		}
		else if ((_1e6aba83b_Tup((*_self_)._field_Result.ptr()) == nullptr)) {
			_case_begin_1b2276889:;
			{
				return jule::Slice<jule::Ptr<_1e6ab6a8a_TypeKind>>::make({(*_self_)._field_Result});
			}
		}
		else {
			_case_begin_1b22767ac:;
			{
				return _1e6aba83b_Tup((*_self_)._field_Result.ptr()).get()._field_Types;
			}
		}
		_match_end_1b22766d0:;
	};
}



inline jule::Bool _1e5e21665_IsBuiltin(_1e5e202ce_FnIns* _self_) {
	return ((*_self_)._field_caller != nullptr);
}



inline jule::Bool _1e5e218c9_IsAnon(_1e5e202ce_FnIns* _self_) {
	return ((*_self_)._field_Anon || (((*_self_)._field_Decl != nullptr) && _1e5e1d541_IsAnon((*_self_)._field_Decl.ptr())));
}



inline jule::Bool _1e5e21bd7_Same(_1e5e202ce_FnIns* _self_, jule::Ptr<_1e5e202ce_FnIns> _32419_f) {
	if ((((*_self_)._field_Decl != _32419_f.get()._field_Decl) || (_32419_f.get()._field_Generics.len() != (*_self_)._field_Generics.len()))) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_Generics;
		auto it = expr.begin();
		_iter_begin_1b227a1ea:;
		if (it != expr.end()) {
			jule::I64 _32913_i = it - expr.begin();
			jule::Ptr<_1e6ab535d_InsGeneric> &_32916_g = *it;
			{
				if ((!(_1e6ab7294_Equals(_32916_g.get()._field_Kind, _32419_f.get()._field_Generics[_32913_i].get()._field_Kind)))) {
					return false;
				};
			}
			_iter_next_1b227a1ea:;
			++it;
			_32913_i++;
			goto _iter_begin_1b227a1ea;
		}
		_iter_end_1b227a1ea:;
	};
	return true;
}



inline jule::Str _1e5e21ee5_GetKindStr(_1e5e202ce_FnIns* _self_, jule::Bool _34025_ident) {
	jule::Str _34117_s = jule::Str();;
	if ((*_self_)._field_Decl.get()._field_Unsafety) {
		_34117_s+=jule::Str("unsafe ", 7);
	};
	_34117_s+=jule::Str("fn", 2);
	if ((_34025_ident && ((*_self_)._field_Decl != nullptr))) {
		_34117_s+=(jule::Str(" ", 1) + (*_self_)._field_Decl.get()._field_Ident);
	};
	_34117_s+=jule::Str("(", 1);
	jule::I64 _35413_n = (*_self_)._field_Params.len();;
	if ((_35413_n > 0LL)) {
		{
			auto &expr = (*_self_)._field_Params;
			auto it = expr.begin();
			_iter_begin_1b227e188:;
			if (it != expr.end()) {
				jule::Ptr<_1e5e1e410_ParamIns> &_35620_p = *it;
				{
					_34117_s+=_1e5e1e7d9_Str(_35620_p.ptr());
					_34117_s+=jule::Str(",", 1);
				}
				_iter_next_1b227e188:;
				++it;
				goto _iter_begin_1b227e188;
			}
			_iter_end_1b227e188:;
		};
		(_34117_s).mut_slice(0LL,(_34117_s.len() - 1LL));;
	};
	_34117_s+=jule::Str(")", 1);
	if ((*_self_)._field_Decl.get()._field_Exceptional) {
		_34117_s+=jule::Str("!", 1);
	};
	if ((!(_1e5e1ca90_IsVoid((*_self_)._field_Decl.ptr())))) {
		_34117_s+=jule::Str(":", 1);
		_34117_s+=_1e6ab6e86_Str((*_self_)._field_Result.ptr());
	};
	return _34117_s;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e202ce_FnIns _Src) {
	_Stream << "FnIns{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Anon:" << _Src._field_Anon << ", ";
	_Stream << "caller:" << _Src._field_caller << ", ";
	_Stream << "reloaded:" << _Src._field_reloaded;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e5e231a0_ReferenceStack> static__1e5e2348b_new(void) {
	return jule::new_ptr<_1e5e231a0_ReferenceStack>(_1e5e231a0_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL,10LL)});
}



inline jule::I64 _1e5e23821_Len(_1e5e231a0_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*_self_)._field_buffer.len());
}



inline jule::Any _1e5e23b2e_At(_1e5e231a0_ReferenceStack* _self_, jule::I64 _6821_i) {
	return jule::Any((*_self_)._field_buffer[_6821_i]);
}



inline void _1e5e23da4_Push(_1e5e231a0_ReferenceStack* _self_, jule::Any _7327_ref) {
	(*_self_)._field_buffer = jule::alloc_for_append((*_self_)._field_buffer,1);(*_self_)._field_buffer.__push(jule::Any(_7327_ref));;
}



inline jule::Bool _1b286ab70_Exist(_1e5e231a0_ReferenceStack* _self_, jule::Ptr<_1e5e202ce_FnIns> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1b286be5c:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7823_t)) {
					return true;
				};
			}
			_iter_next_1b286be5c:;
			++it;
			goto _iter_begin_1b286be5c;
		}
		_iter_end_1b286be5c:;
	};
	return false;
}

inline jule::Bool _1b288046a_Exist(_1e5e231a0_ReferenceStack* _self_, jule::Ptr<_1e6a3dd20_Var> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1b2881713:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7823_t)) {
					return true;
				};
			}
			_iter_next_1b2881713:;
			++it;
			goto _iter_begin_1b2881713;
		}
		_iter_end_1b2881713:;
	};
	return false;
}

inline jule::Bool _1b29200ba_Exist(_1e5e231a0_ReferenceStack* _self_, jule::Ptr<_1e5d714d8_StructIns> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1b29213a7:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7823_t)) {
					return true;
				};
			}
			_iter_next_1b29213a7:;
			++it;
			goto _iter_begin_1b29213a7;
		}
		_iter_end_1b29213a7:;
	};
	return false;
}

inline jule::Bool _1b2b9b599_Exist(_1e5e231a0_ReferenceStack* _self_, jule::Ptr<_1e5e2e4db_Trait> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1b2b9c842:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7823_t)) {
					return true;
				};
			}
			_iter_next_1b2b9c842:;
			++it;
			goto _iter_begin_1b2b9c842;
		}
		_iter_end_1b2b9c842:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e231a0_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e24569_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e5e28a13_symbolBuilder> _1e5e28eb9_getRoot(jule::Ptr<_1e5e28a13_symbolBuilder> _self_) {
	jule::Ptr<_1e5e28a13_symbolBuilder> _31617_root = _self_;;
	while ((_31617_root.get()._field_owner != nullptr)) {
		{
			_31617_root=_31617_root.get()._field_owner;
		}
	_iter_next_1b2297646:;
	}
	_iter_end_1b2297646:;;
	return _31617_root;
}



inline void _1e5e29382_pushErr(_1e5e28a13_symbolBuilder* _self_, jule::Ptr<_1e47137a5_Token>& _32327_token, jule::Str _32342_fmt, jule::Slice<jule::Any> _32355_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1e6a20a27_compilerErr(_32327_token,true,_32342_fmt,jule::Any(_32355_args)));;
}



inline void _1e5e2974a_pushErrText(_1e5e28a13_symbolBuilder* _self_, jule::Ptr<_1e47137a5_Token>& _32731_token, jule::Str _32746_fmt, jule::Slice<jule::Any> _32759_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1e6a20a27_compilerErr(_32731_token,false,_32746_fmt,jule::Any(_32759_args)));;
}



inline void _1e5e29a69_pushSuggestion(_1e5e28a13_symbolBuilder* _self_, jule::Str _33233_fmt, jule::Slice<jule::Any> _33246_args) {
	{
		_1e6a21eac_pushSugggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_33233_fmt,jule::Any(_33246_args));
	};
}



inline jule::Bool _1e5e29e21_checkCppUseDeclPath(_1e5e28a13_symbolBuilder* _self_, jule::Ptr<_1e5d6c4a1_UseDecl>& _33639_decl, jule::Str _33655_path) {
	jule::Bool _33668_ok = jule::Bool();
	jule::Str _33713_ext = _1e34d2432_Ext(_33655_path);;
	if (((!(_1e43d70e4_IsValidHeaderExt(_33713_ext))) && (!(_1e43d7347_IsValidCppExt(_33713_ext))))) {
		_1e5e29382_pushErr(&(*_self_), _33639_decl.get()._field_Token,jule::Str("invalid C++ extension: @", 24),jule::Slice<jule::Any>::make({jule::Any(_33713_ext)}));
		_33668_ok = false;
		return _33668_ok;
	};
	jule::Ptr<_1e32e8c71_Status> _34413_info = ({
		auto except = static__1e341a722_Of(_33655_path);
		(except.ok()) ? (except.result) : ({{
			_1e5e29382_pushErr(&(*_self_), _33639_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_33639_decl.get()._field_LinkPath)}));
			_33668_ok = false;
			return _33668_ok;
		} jule::Ptr<_1e32e8c71_Status>();});
	});;
	if (_1e26092c4_IsDir(_34413_info.ptr())) {
		_1e5e29382_pushErr(&(*_self_), _33639_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_33639_decl.get()._field_LinkPath)}));
		_33668_ok = false;
		return _33668_ok;
	};
	_33668_ok = true;
	return _33668_ok;
}



inline jule::Ptr<_1e6a192e5_ImportInfo> _1e5e2a1eb_buildCppHeaderImport(_1e5e28a13_symbolBuilder* _self_, jule::Ptr<_1e5d6c4a1_UseDecl>& _35644_decl) {
	jule::Str _35717_path = _35644_decl.get()._field_LinkPath;;
	if ((!(_1e43d6eb2_IsStdHeaderPath(_35644_decl.get()._field_LinkPath)))) {
		_35717_path=_1e34d0919_Join(jule::Slice<jule::Str>::make({_1e4719536_Dir(_35644_decl.get()._field_Token.get()._field_File.ptr()),_35644_decl.get()._field_LinkPath}));
		jule::Bool _36121_ok = _1e5e29e21_checkCppUseDeclPath(&(*_self_), _35644_decl,_35717_path);;
		if ((!(_36121_ok))) {
			return nullptr;
		};
		std::tie(_35717_path,_36121_ok) = _1e34aee26_Abs(_35717_path);
		if ((!(_36121_ok))) {
			_1e5e29382_pushErr(&(*_self_), _35644_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_35644_decl.get()._field_LinkPath)}));
		};
	};
	return jule::new_ptr<_1e6a192e5_ImportInfo>(_1e6a192e5_ImportInfo{._field_Token=_35644_decl.get()._field_Token, ._field_Path=_35717_path, ._field_LinkPath=_35644_decl.get()._field_LinkPath, ._field_Ident=jule::Str(), ._field_CppLinked=true, ._field_Std=false, ._field_Package=nullptr, });
}



inline jule::Ptr<_1e6a192e5_ImportInfo> _1e5e2a509_buildStdImport(_1e5e28a13_symbolBuilder* _self_, jule::Ptr<_1e5d6c4a1_UseDecl>& _38438_decl) {
	jule::Str _38517_path = _38438_decl.get()._field_LinkPath.slice(5LL);;
	_38517_path=_1e438dee1_Replace(_38517_path,jule::Str("::", 2),static_cast<jule::Str>(92LL),-1LL);
	_38517_path=_1e34d0919_Join(jule::Slice<jule::Str>::make({_1e441574e_PathStdlib,_38517_path}));
	jule::Bool _38820_ok;;
	std::tie(_38517_path,_38820_ok) = _1e34aee26_Abs(_38517_path);
	if ((!(_38820_ok))) {
		_1e5e29382_pushErr(&(*_self_), _38438_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38438_decl.get()._field_LinkPath)}));
		return nullptr;
	};
	jule::Ptr<_1e32e8c71_Status> _39513_info = ({
		auto except = static__1e341a722_Of(_38517_path);
		(except.ok()) ? (except.result) : ({{
			_1e5e29382_pushErr(&(*_self_), _38438_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38438_decl.get()._field_LinkPath)}));
			return nullptr;
		} jule::Ptr<_1e32e8c71_Status>();});
	});;
	if ((!(_1e26092c4_IsDir(_39513_info.ptr())))) {
		_1e5e29382_pushErr(&(*_self_), _38438_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38438_decl.get()._field_LinkPath)}));
		return nullptr;
	};
	jule::I64 _40513_i = (_1e42de958_FindLast(_38438_decl.get()._field_LinkPath,jule::Str("::", 2)) + 1LL);;
	jule::Str _40613_ident = _38438_decl.get()._field_LinkPath.slice(_40513_i);;
	return jule::new_ptr<_1e6a192e5_ImportInfo>(_1e6a192e5_ImportInfo{._field_Token=_38438_decl.get()._field_Token, ._field_Path=_38517_path, ._field_LinkPath=_38438_decl.get()._field_LinkPath, ._field_Ident=_40613_ident, ._field_Alias=_38438_decl.get()._field_Alias, ._field_CppLinked=false, ._field_Std=true, ._field_ImportAll=_38438_decl.get()._field_Full, ._field_Package=jule::new_ptr<_1e6a1c24e_Package>(_1e6a1c24e_Package{._field_Files=nullptr}), });
}



inline jule::Ptr<_1e6a192e5_ImportInfo> _1e5e2a817_buildIdentImport(jule::Ptr<_1e5e28a13_symbolBuilder> _self_, jule::Ptr<_1e5d6c4a1_UseDecl>& _42341_decl) {
	jule::Str _42413_modPath = _1e6a16a62_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e6a15bc6_GetModPath(_self_.get()._field_importer);;
	if ((_42413_modPath.len() == 0LL)) {
		_1e5e29382_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("no module file found in current directory or any parent directory", 65),jule::Slice<jule::Any>());
		_1e5e29a69_pushSuggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Str _43117_path = _42341_decl.get()._field_LinkPath;;
	_43117_path=_1e438dee1_Replace(_43117_path,jule::Str("::", 2),static_cast<jule::Str>(92LL),-1LL);
	_43117_path=_1e34d0919_Join(jule::Slice<jule::Str>::make({_42413_modPath,_43117_path}));
	jule::Bool _43520_ok;;
	std::tie(_43117_path,_43520_ok) = _1e34aee26_Abs(_43117_path);
	if ((!(_43520_ok))) {
		_1e5e29382_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42341_decl.get()._field_LinkPath)}));
		return nullptr;
	};
	jule::Ptr<_1e32e8c71_Status> _44213_info = ({
		auto except = static__1e341a722_Of(_43117_path);
		(except.ok()) ? (except.result) : ({{
			_1e5e29382_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42341_decl.get()._field_LinkPath)}));
			return nullptr;
		} jule::Ptr<_1e32e8c71_Status>();});
	});;
	if ((!(_1e26092c4_IsDir(_44213_info.ptr())))) {
		_1e5e29382_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42341_decl.get()._field_LinkPath)}));
		return nullptr;
	};
	jule::I64 _45213_i = (_1e42de958_FindLast(_42341_decl.get()._field_LinkPath,jule::Str("::", 2)) + 1LL);;
	jule::Str _45313_ident = _42341_decl.get()._field_LinkPath.slice(_45213_i);;
	return jule::new_ptr<_1e6a192e5_ImportInfo>(_1e6a192e5_ImportInfo{._field_Token=_42341_decl.get()._field_Token, ._field_Path=_43117_path, ._field_LinkPath=_42341_decl.get()._field_LinkPath, ._field_Ident=_45313_ident, ._field_Alias=_42341_decl.get()._field_Alias, ._field_CppLinked=false, ._field_Std=false, ._field_ImportAll=_42341_decl.get()._field_Full, ._field_Package=jule::new_ptr<_1e6a1c24e_Package>(_1e6a1c24e_Package{._field_Files=nullptr}), });
}



inline jule::Ptr<_1e6a192e5_ImportInfo> _1e5e2ab25_buildImport(jule::Ptr<_1e5e28a13_symbolBuilder> _self_, jule::Ptr<_1e5d6c4a1_UseDecl>& _47036_decl) {
	{
		
		if (_47036_decl.get()._field_CppLinked) {
			_case_begin_1b22b1077:;
			{
				return _1e5e2a1eb_buildCppHeaderImport(_self_.ptr(), _47036_decl);
			}
		}
		else if (_47036_decl.get()._field_Std) {
			_case_begin_1b22b12db:;
			{
				return _1e5e2a509_buildStdImport(_self_.ptr(), _47036_decl);
			}
		}
		else {
			_case_begin_1b22b0807:;
			{
				return _1e5e2a817_buildIdentImport(_self_, _47036_decl);
			}
		}
		_match_end_1b22b072a:;
	};
}



inline jule::Bool _1e5e2ae33_checkDuplicateUseDecl(_1e5e28a13_symbolBuilder* _self_, jule::Ptr<_1e6a192e5_ImportInfo>& _48141_pkg) {
	jule::Bool _48161_ok = jule::Bool();
	jule::Ptr<_1e6a192e5_ImportInfo> _48313_lpkg = _1e6a8683a_SelectPackage((*_self_)._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_1e6a192e5_ImportInfo>)>([=](jule::Ptr<_1e6a192e5_ImportInfo> _48348_spkg) mutable -> jule::Bool {
		return (_48141_pkg.get()._field_Path == _48348_spkg.get()._field_Path);
	}));;
	if ((_48313_lpkg == nullptr)) {
		_48161_ok = true;
		return _48161_ok;
	};
	_1e5e29382_pushErr(&(*_self_), _48141_pkg.get()._field_Token,jule::Str("use declaration duplication: @ is already used above", 52),jule::Slice<jule::Any>::make({jule::Any(_48141_pkg.get()._field_LinkPath)}));
	_1e5e29a69_pushSuggestion(&(*_self_), jule::Str("remove this use declaration, already used, it is safe", 53),jule::Slice<jule::Any>());
	_48161_ok = false;
	return _48161_ok;
}



inline void _1e5e2b252_implImportSelections(_1e5e28a13_symbolBuilder* _self_, jule::Ptr<_1e6a192e5_ImportInfo>& _49544_imp, jule::Ptr<_1e5d6c4a1_UseDecl>& _49567_decl) {
	_49544_imp.get()._field_Selected=_49567_decl.get()._field_Selected;
	{
		auto &expr = _49544_imp.get()._field_Selected;
		auto it = expr.begin();
		_iter_begin_1b22b4ce5:;
		if (it != expr.end()) {
			jule::Ptr<_1e47137a5_Token> _49716_item = *it;
			{
				{
					auto &expr = _49544_imp.get()._field_Selected;
					auto it = expr.begin();
					_iter_begin_1b22b5873:;
					if (it != expr.end()) {
						jule::Ptr<_1e47137a5_Token> _49820_citem = *it;
						{
							if ((_49716_item == _49820_citem)) {
								goto _iter_end_1b22b5873;
							} else if ((_49716_item.get()._field_Kind == _49820_citem.get()._field_Kind)) {
								_1e5e29382_pushErr(&(*_self_), _49716_item,jule::Str("duplicated selection: @ is already selected", 43),jule::Slice<jule::Any>::make({jule::Any(_49716_item.get()._field_Kind)}));
								_1e5e29a69_pushSuggestion(&(*_self_), jule::Str("remove this use selection, already selected, it is safe", 55),jule::Slice<jule::Any>());
								goto _iter_end_1b22b5873;
							};
						}
						_iter_next_1b22b5873:;
						++it;
						goto _iter_begin_1b22b5873;
					}
					_iter_end_1b22b5873:;
				};
			}
			_iter_next_1b22b4ce5:;
			++it;
			goto _iter_begin_1b22b4ce5;
		}
		_iter_end_1b22b4ce5:;
	};
}



inline jule::Str _1e5e2b560_getAsLinkPath(jule::Ptr<_1e5e28a13_symbolBuilder> _self_, jule::Str _51037_path) {
	if (_1e350be95_HasPrefix(_51037_path,_1e441574e_PathStdlib)) {
		(_51037_path).mut_slice(_1e441574e_PathStdlib.len());;
		return (jule::Str("std", 3) + _1e438dee1_Replace(_51037_path,static_cast<jule::Str>(92LL),jule::Str("::", 2),-1LL));
	};
	jule::Str _51614_root;;
	std::tie(_51614_root,std::ignore) = _1e34aee26_Abs(_1e6a16a62_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e6a15bc6_GetModPath(_self_.get()._field_importer));
	(_51037_path).mut_slice(_51614_root.len());;
	if ((_51037_path[0LL] == 92LLU)) {
		(_51037_path).mut_slice(1LL);;
	};
	return _1e438dee1_Replace(_51037_path,static_cast<jule::Str>(92LL),jule::Str("::", 2),-1LL);
}



inline void _1e5e2b928_pushCycleError(jule::Ptr<_1e5e28a13_symbolBuilder> _self_, jule::Ptr<_1e5e28a13_symbolBuilder>& _52435_sb, jule::Str _52455_path, jule::Str& _52471_message) {
	;
	jule::Str _52613_refersTo = _1e43e3e58_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_1e5e2b560_getAsLinkPath(_self_, _1e4719536_Dir(_52435_sb.get()._field_table.get()._field_File.ptr()))),jule::Any(_1e5e2b560_getAsLinkPath(_self_, _52455_path))}));;
	(_52471_message).buffer.insert(0, (((_1e350c9ac_Repeat(jule::Str(" ", 1),4LL) + _52613_refersTo) + jule::Str("\n", 1))));;
}



inline void _1e5e2bce1_pushCrossCycleError(jule::Ptr<_1e5e28a13_symbolBuilder> _self_, jule::Ptr<_1e5e28a13_symbolBuilder>& _53340_target, jule::Ptr<_1e6a192e5_ImportInfo>& _53365_imp, jule::Ptr<_1e47137a5_Token>& _53384_errorToken) {
	jule::Str _53417_message = jule::Str();;
	_1e5e2b928_pushCycleError(_self_, _self_,_53365_imp.get()._field_Path,_53417_message);
	jule::Ptr<_1e5e28a13_symbolBuilder> _53817_owner = _self_.get()._field_owner;;
	jule::Ptr<_1e5e28a13_symbolBuilder> _53917_old = _self_;;
	while ((_53817_owner.get()._field_owner != nullptr)) {
		{
			_1e5e2b928_pushCycleError(_self_, _53917_old.get()._field_owner,_1e4719536_Dir(_53917_old.get()._field_table.get()._field_File.ptr()),_53417_message);
			if ((_53817_owner.get()._field_owner == _53340_target)) {
				_1e5e2b928_pushCycleError(_self_, _53340_target,_1e4719536_Dir(_53817_owner.get()._field_table.get()._field_File.ptr()),_53417_message);
				goto _iter_end_1b22bc3c4;
			};
			_53917_old=_53817_owner;
			_53817_owner=_53817_owner.get()._field_owner;
		}
	_iter_next_1b22bc3c4:;
	}
	_iter_end_1b22bc3c4:;;
	_1e5e29382_pushErr(_self_.ptr(), _53384_errorToken,jule::Str("illegal cross cycle in use declarations;\n@", 42),jule::Slice<jule::Any>::make({jule::Any(_53417_message)}));
}



inline jule::Bool _1e5e2c198_checkImportCycles(jule::Ptr<_1e5e28a13_symbolBuilder> _self_, jule::Ptr<_1e6a192e5_ImportInfo> _55637_imp, jule::Ptr<_1e5d6c4a1_UseDecl>& _55656_decl) {
	if ((_55637_imp.get()._field_Path == _1e4719536_Dir(_self_.get()._field_table.get()._field_File.ptr()))) {
		_1e5e29382_pushErr(_self_.ptr(), _55656_decl.get()._field_Token,jule::Str("illegal cycle in use declaration, package @ refers to itself", 60),jule::Slice<jule::Any>::make({jule::Any(_1e5e2b560_getAsLinkPath(_self_, _55637_imp.get()._field_Path))}));
		return false;
	};
	if ((_self_.get()._field_owner == nullptr)) {
		return true;
	};
	if ((_1e4719536_Dir(_self_.get()._field_owner.get()._field_table.get()._field_File.ptr()) == _55637_imp.get()._field_Path)) {
		_1e5e2bce1_pushCrossCycleError(_self_, _self_.get()._field_owner,_55637_imp,_55656_decl.get()._field_Token);
		return false;
	};
	jule::Ptr<_1e5e28a13_symbolBuilder> _57117_owner = _self_.get()._field_owner;;
	_julec_label_iter:;
	if ((_1e4719536_Dir(_57117_owner.get()._field_table.get()._field_File.ptr()) == _55637_imp.get()._field_Path)) {
		_1e5e2bce1_pushCrossCycleError(_self_, _57117_owner,_55637_imp,_55656_decl.get()._field_Token);
		return false;
	};
	if ((_57117_owner.get()._field_owner != nullptr)) {
		_57117_owner=_57117_owner.get()._field_owner;
		goto _julec_label_iter;
	};
	return true;
}



inline void _1e5e2c583_checkPackageAccessibility(_1e5e28a13_symbolBuilder* _self_, jule::Ptr<_1e5d6c4a1_UseDecl>& _59245_decl, jule::Str& _59262_mod, jule::Str& _59273_path) {
	if (((_1e6a16a62_Importer_mptr_data[((*_self_)._field_importer).type_offset]._1e6a15bc6_GetModPath((*_self_)._field_importer) != _59262_mod) && _1e438d8d6_Contains(_59273_path,jule::Str("internal", 8)))) {
		_1e5e29382_pushErr(&(*_self_), _59245_decl.get()._field_Token,jule::Str("you cannot access to internal packages", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1e5e2c94b_importPackage(jule::Ptr<_1e5e28a13_symbolBuilder> _self_, jule::Ptr<_1e6a192e5_ImportInfo>& _59838_imp, jule::Ptr<_1e5d6c4a1_UseDecl>& _59861_decl) {
	jule::Bool _59879_ok = jule::Bool();
	if (_59838_imp.get()._field_CppLinked) {
		_59879_ok = true;
		return _59879_ok;
	};
	jule::Ptr<_1e6a192e5_ImportInfo> _60317_port = _1e6a16a62_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e6a162e2_GetImport(_self_.get()._field_importer, _59838_imp.get()._field_Path);;
	if ((_60317_port != nullptr)) {
		_59838_imp.get()._field_Package=_60317_port.get()._field_Package;
		_59838_imp.get()._field_Duplicate=true;
		jule::Str _60817_oldMod = _1e6a16a62_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e6a15bc6_GetModPath(_self_.get()._field_importer);;
		_1e6a16a62_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e6a15984_SetModPath(_self_.get()._field_importer, _1e6a16a62_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e6a15ed4_ModById(_self_.get()._field_importer, _59838_imp.get()._field_ModId));
		_1e5e2c583_checkPackageAccessibility(_self_.ptr(), _59861_decl,_60817_oldMod,_60317_port.get()._field_Path);
		_1e6a16a62_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e6a15984_SetModPath(_self_.get()._field_importer, _60817_oldMod);
	} else {
		if ((!(_1e5e2c198_checkImportCycles(_self_, _59838_imp,_59861_decl)))) {
			_59879_ok = false;
			return _59879_ok;
		};
		jule::Str _61717_oldMod = _1e6a16a62_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e6a15bc6_GetModPath(_self_.get()._field_importer);;
		__JULE_DEFER({
			_1e6a16a62_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e6a15984_SetModPath(_self_.get()._field_importer, _61717_oldMod);
		});;
		if (_59838_imp.get()._field_Std) {
			_1e6a16a62_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e6a15984_SetModPath(_self_.get()._field_importer, _1e441574e_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1e5d201bd_Ast>> _62222_asts;;
		jule::Slice<_1e43e3a18_Log> _62232_errors;;
		std::tie(_62222_asts,_62232_errors) = _1e6a16a62_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e6a16699_ImportPackage(_self_.get()._field_importer, _59838_imp.get()._field_Path,(!(_59838_imp.get()._field_Std)));
		if ((_62232_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62232_errors);
			_59879_ok = false;
			return _59879_ok;
		};
		_1e5e2c583_checkPackageAccessibility(_self_.ptr(), _59861_decl,_61717_oldMod,_59838_imp.get()._field_Path);
		{
			auto &expr = _62222_asts;
			auto it = expr.begin();
			_iter_begin_1b22ccc86:;
			if (it != expr.end()) {
				jule::Ptr<_1e5d201bd_Ast> _63025_ast = *it;
				{
					jule::Ptr<_1e6a86010_SymbolTable> _63125_table = nullptr;;
					std::tie(_63125_table,_62232_errors) = _1e6ad315b_buildSymbols(_63025_ast,_self_.get()._field_importer,_self_);
					if ((_62232_errors.len() > 0LL)) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62232_errors);
						_1e5e2974a_pushErrText(_self_.ptr(), _59838_imp.get()._field_Token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>::make({jule::Any(_59838_imp.get()._field_LinkPath)}));
						_59879_ok = false;
						return _59879_ok;
					};
					_59838_imp.get()._field_Package.get()._field_Files = jule::alloc_for_append(_59838_imp.get()._field_Package.get()._field_Files,1);_59838_imp.get()._field_Package.get()._field_Files.__push(_63125_table);;
				}
				_iter_next_1b22ccc86:;
				++it;
				goto _iter_begin_1b22ccc86;
			}
			_iter_end_1b22ccc86:;
		};
	};
	_1e5e2b252_implImportSelections(_self_.ptr(), _59838_imp,_59861_decl);
	_59879_ok = true;
	return _59879_ok;
}



inline jule::Ptr<_1e6a192e5_ImportInfo> _1e5e2cc59_importUseDecl(jule::Ptr<_1e5e28a13_symbolBuilder> _self_, jule::Ptr<_1e5d6c4a1_UseDecl>& _65038_decl) {
	jule::Ptr<_1e6a192e5_ImportInfo> _65117_imp = _1e5e2ab25_buildImport(_self_, _65038_decl);;
	if ((_65117_imp == nullptr)) {
		return nullptr;
	};
	jule::Bool _65717_ok = _1e5e2ae33_checkDuplicateUseDecl(_self_.ptr(), _65117_imp);;
	if ((!(_65717_ok))) {
		return nullptr;
	};
	_65717_ok=_1e5e2c94b_importPackage(_self_, _65117_imp,_65038_decl);
	_self_.get()._field_table.get()._field_Imports = jule::alloc_for_append(_self_.get()._field_table.get()._field_Imports,1);_self_.get()._field_table.get()._field_Imports.__push(_65117_imp);;
	if (_65717_ok) {
		_1e6a16a62_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e6a1691e_Imported(_self_.get()._field_importer, _65117_imp);
		return _65117_imp;
	};
	return nullptr;
}



inline void _1e5e2ce35_importUseDecls(jule::Ptr<_1e5e28a13_symbolBuilder> _self_) {
	{
		auto &expr = _self_.get()._field_ast.get()._field_UseDecls;
		auto it = expr.begin();
		_iter_begin_1b22d374d:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d6c4a1_UseDecl> _67221_decl = *it;
			{
				_1e5e2cc59_importUseDecl(_self_, _67221_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					goto _iter_end_1b22d374d;
				};
			}
			_iter_next_1b22d374d:;
			++it;
			goto _iter_begin_1b22d374d;
		}
		_iter_end_1b22d374d:;
	};
}



inline void _1e5e2d1aa_appendNode(_1e5e28a13_symbolBuilder* _self_, _1e5d20d6c_Node& _68134_node) {
	{
		auto &_match_expr{ _68134_node._field_Data };
		
		if (_match_expr.type_is<jule::Ptr<_1e5d70c24_Impl>>()) {
			_case_begin_1b22d52cc:;
			{
				(*_self_)._field_table.get()._field_Impls = jule::alloc_for_append((*_self_)._field_table.get()._field_Impls,1);(*_self_)._field_table.get()._field_Impls.__push(_1e5e284b3_buildImpl(_68134_node._field_Data.operator jule::Ptr<_1e5d70c24_Impl>()));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d6b0b5_TypeAliasDecl>>()) {
			_case_begin_1b22d4012:;
			{
				jule::Ptr<_1e6ab5d97_TypeAlias> _68621_ta = _1e5e24e4e_buildTypeAlias(_68134_node._field_Data.operator jule::Ptr<_1e5d6b0b5_TypeAliasDecl>());;
				(*_self_)._field_table.get()._field_TypeAliases = jule::alloc_for_append((*_self_)._field_table.get()._field_TypeAliases,1);(*_self_)._field_table.get()._field_TypeAliases.__push(_68621_ta);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d7000e_StructDecl>>()) {
			_case_begin_1b22d4dd1:;
			{
				jule::Ptr<_1e5d4518d_Struct> _68921_srct = _1e5e257ac_buildStruct(_68134_node._field_Data.operator jule::Ptr<_1e5d7000e_StructDecl>());;
				(*_self_)._field_table.get()._field_Structs = jule::alloc_for_append((*_self_)._field_table.get()._field_Structs,1);(*_self_)._field_table.get()._field_Structs.__push(_68921_srct);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d66775_FnDecl>>()) {
			_case_begin_1b22d4e47:;
			{
				jule::Ptr<_1e5e1c62d_Fn> _69221_f = _1e5e26417_buildFn(_68134_node._field_Data.operator jule::Ptr<_1e5d66775_FnDecl>());;
				(*_self_)._field_table.get()._field_Funcs = jule::alloc_for_append((*_self_)._field_table.get()._field_Funcs,1);(*_self_)._field_table.get()._field_Funcs.__push(_69221_f);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d70619_TraitDecl>>()) {
			_case_begin_1b22d573e:;
			{
				jule::Ptr<_1e5e2e4db_Trait> _69521_t = _1e5e26956_buildTrait(_68134_node._field_Data.operator jule::Ptr<_1e5d70619_TraitDecl>());;
				(*_self_)._field_table.get()._field_Traits = jule::alloc_for_append((*_self_)._field_table.get()._field_Traits,1);(*_self_)._field_table.get()._field_Traits.__push(_69521_t);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d67754_VarDecl>>()) {
			_case_begin_1b22d57a5:;
			{
				jule::Ptr<_1e6a3dd20_Var> _69821_v = _1e5e27e74_buildVar(_68134_node._field_Data.operator jule::Ptr<_1e5d67754_VarDecl>());;
				(*_self_)._field_table.get()._field_Vars = jule::alloc_for_append((*_self_)._field_table.get()._field_Vars,1);(*_self_)._field_table.get()._field_Vars.__push(_69821_v);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d6d44c_EnumDecl>>()) {
			_case_begin_1b22d581b:;
			{
				jule::Ptr<_1e5e31631_Enum> _70121_e = _1e5e2723c_buildEnum(_68134_node._field_Data.operator jule::Ptr<_1e5d6d44c_EnumDecl>());;
				(*_self_)._field_table.get()._field_Enums = jule::alloc_for_append((*_self_)._field_table.get()._field_Enums,1);(*_self_)._field_table.get()._field_Enums.__push(_70121_e);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d6e151_TypeEnumDecl>>()) {
			_case_begin_1b22d5882:;
			{
				jule::Ptr<_1e5e32c2b_TypeEnum> _70421_e = _1e5e27bcc_buildTypeEnum(_68134_node._field_Data.operator jule::Ptr<_1e5d6e151_TypeEnumDecl>());;
				(*_self_)._field_table.get()._field_TypeEnums = jule::alloc_for_append((*_self_)._field_table.get()._field_TypeEnums,1);(*_self_)._field_table.get()._field_TypeEnums.__push(_70421_e);;
			}
		}
		else {
			_case_begin_1b22d4c49:;
			{
				_1e5e29382_pushErr(&(*_self_), _68134_node._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1b22d4144:;
	};
}



inline void _1e5e2d386_appendNodes(_1e5e28a13_symbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_Nodes;
		auto it = expr.begin();
		_iter_begin_1b22de171:;
		if (it != expr.end()) {
			_1e5d20d6c_Node _71221_node = *it;
			{
				_1e5e2d1aa_appendNode(&(*_self_), _71221_node);
			}
			_iter_next_1b22de171:;
			++it;
			goto _iter_begin_1b22de171;
		}
		_iter_end_1b22de171:;
	};
}



inline void _1e5e2d60b_pushDirectivePass(_1e5e28a13_symbolBuilder* _self_, jule::Ptr<_1e5d21268_Directive>& _71741_d) {
	if ((_71741_d.get()._field_Args.len() == 0LL)) {
		_1e5e29382_pushErr(&(*_self_), _71741_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_71741_d.get()._field_Args.len() > 1LL)) {
		jule::Ptr<_1e47137a5_Token> _72217_arg = _71741_d.get()._field_Args[1LL];;
		_1e5e29382_pushErr(&(*_self_), _72217_arg,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e47137a5_Token> _72613_arg = _71741_d.get()._field_Args[0LL];;
	if ((_72613_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_1e5e29382_pushErr(&(*_self_), _72613_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_72613_arg.get()._field_Kind[0LL] != '\"')) {
		_1e5e29382_pushErr(&(*_self_), _72613_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	(*_self_)._field_table.get()._field_Passes = jule::alloc_for_append((*_self_)._field_table.get()._field_Passes,1);(*_self_)._field_table.get()._field_Passes.__push(_1e5e24569_Pass{._field_Token=_71741_d.get()._field_Tag, ._field_Text=_72613_arg.get()._field_Kind.slice(1LL,(_72613_arg.get()._field_Kind.len() - 1LL))});;
}



inline void _1e5e2d7d7_appendTopDirectives(_1e5e28a13_symbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_TopDirectives;
		auto it = expr.begin();
		_iter_begin_1b22e20b9:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d21268_Directive> _74421_d = *it;
			{
				{
					auto &_match_expr{ _74421_d.get()._field_Tag.get()._field_Kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_1b22e5078:;
						{
							_1e5e2d60b_pushDirectivePass(&(*_self_), _74421_d);
						}
					}
					_match_end_1b22e4ebd:;
				};
			}
			_iter_next_1b22e20b9:;
			++it;
			goto _iter_begin_1b22e20b9;
		}
		_iter_end_1b22e20b9:;
	};
}



inline void _1e5e2d9b3_build(jule::Ptr<_1e5e28a13_symbolBuilder> _self_) {
	_self_.get()._field_table=jule::new_ptr<_1e6a86010_SymbolTable>(_1e6a86010_SymbolTable{._field_File=_self_.get()._field_ast.get()._field_File, });
	_1e5e2d7d7_appendTopDirectives(_self_.ptr());
	_1e5e2ce35_importUseDecls(_self_);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	_1e5e2d386_appendNodes(_self_.ptr());
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e28a13_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e5e2e8d7_Str(_1e5e2e4db_Trait* _self_) {
	return (*_self_)._field_Ident;
}



inline jule::Bool _1e5e2ebe5_Equals(jule::Ptr<_1e5e2e4db_Trait> _self_, jule::Ptr<_1e6ab6a8a_TypeKind> _2522_other) {
	jule::Ptr<_1e5e2e4db_Trait> _2613_trt = _1e6aba363_Trait(_2522_other.ptr());;
	return (_self_ == _2613_trt);
}



inline jule::Bool _1e5e30058_IsBuiltin(_1e5e2e4db_Trait* _self_) {
	return ((*_self_)._field_Token == nullptr);
}



inline jule::Ptr<_1e5e1c62d_Fn> _1e5e30366_FindMethod(_1e5e2e4db_Trait* _self_, jule::Str _3929_ident) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_1b22e8e39:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e1c62d_Fn> _4021_f = *it;
			{
				if ((_4021_f.get()._field_Ident == _3929_ident)) {
					return _4021_f;
				};
			}
			_iter_next_1b22e8e39:;
			++it;
			goto _iter_begin_1b22e8e39;
		}
		_iter_end_1b22e8e39:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e2e4db_Trait _Src) {
	_Stream << "Trait{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Implemented:" << _Src._field_Implemented;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e5e31026_AutoExpr(_1e5e30b3b_EnumItem* _self_) {
	return ((*_self_)._field_Value == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e30b3b_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e5e31994_Str(_1e5e31631_Enum* _self_) {
	return (*_self_)._field_Ident;
}



inline jule::Bool _1e5e31ca2_Equals(jule::Ptr<_1e5e31631_Enum> _self_, jule::Ptr<_1e6ab6a8a_TypeKind> _3822_other) {
	jule::Ptr<_1e5e31631_Enum> _3913_enm = _1e6ab93d9_Enum(_3822_other.ptr());;
	return (_self_ == _3913_enm);
}



inline jule::Ptr<_1e5e30b3b_EnumItem> _1e5e321e2_FindItem(_1e5e31631_Enum* _self_, jule::Str _4727_ident) {
	{
		auto &expr = (*_self_)._field_Items;
		auto it = expr.begin();
		_iter_begin_1b22eb6cd:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e30b3b_EnumItem> _4821_item = *it;
			{
				if ((_4821_item.get()._field_Ident == _4727_ident)) {
					return _4821_item;
				};
			}
			_iter_next_1b22eb6cd:;
			++it;
			goto _iter_begin_1b22eb6cd;
		}
		_iter_end_1b22eb6cd:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e31631_Enum _Src) {
	_Stream << "Enum{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e32665_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e5e3305b_Str(_1e5e32c2b_TypeEnum* _self_) {
	return (*_self_)._field_Ident;
}



inline jule::Bool _1e5e33369_Equals(jule::Ptr<_1e5e32c2b_TypeEnum> _self_, jule::Ptr<_1e6ab6a8a_TypeKind> _8022_other) {
	jule::Ptr<_1e5e32c2b_TypeEnum> _8113_tenm = _1e6ab964d_TypeEnum(_8022_other.ptr());;
	return (_self_ == _8113_tenm);
}



inline jule::Ptr<_1e5e32665_TypeEnumItem> _1e5e33765_FindItem(_1e5e32c2b_TypeEnum* _self_, jule::Str _8927_ident) {
	{
		auto &expr = (*_self_)._field_Items;
		auto it = expr.begin();
		_iter_begin_1b22ed911:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e32665_TypeEnumItem> _9021_item = *it;
			{
				if ((_9021_item.get()._field_Ident == _8927_ident)) {
					return _9021_item;
				};
			}
			_iter_next_1b22ed911:;
			++it;
			goto _iter_begin_1b22ed911;
		}
		_iter_end_1b22ed911:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e32c2b_TypeEnum _Src) {
	_Stream << "TypeEnum{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items;
	_Stream << "}";
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_1e6a22441_Sema>&,jule::Slice<jule::Ptr<_1e6ab5d97_TypeAlias>>&)> _1e5e60aa0_readyFn(jule::Ptr<_1e5e50683_constraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_1e6a22441_Sema>&,jule::Slice<jule::Ptr<_1e6ab5d97_TypeAlias>>&)>([=](jule::Ptr<_1e6a22441_Sema>& _6321_sema, jule::Slice<jule::Ptr<_1e6ab5d97_TypeAlias>>& _6339_generics) mutable -> jule::Bool {
		{
			auto &expr = _self_.get()._field_genericsD;
			auto it = expr.begin();
			_iter_begin_1b230b699:;
			if (it != expr.end()) {
				jule::I64 _6418_i = it - expr.begin();
				jule::Ptr<_1e5d62045_GenericDecl> _6425_g = *it;
				{
					jule::Ptr<_1e6ab535d_InsGeneric> _6525_generic = _self_.get()._field_generics[_6418_i];;
					if (((_6425_g.get()._field_Constraint == nullptr) || (_6425_g.get()._field_Constraint.get()._field_Mask.len() == 0LL))) {
						goto _iter_next_1b230b699;
					};
					_6525_generic.get()._field_Constraint=jule::Slice<jule::Ptr<_1e6ab6a8a_TypeKind>>::alloc(0LL,_6425_g.get()._field_Constraint.get()._field_Mask.len());
					{
						auto &expr = _6425_g.get()._field_Constraint.get()._field_Mask;
						auto it = expr.begin();
						_iter_begin_1b230dbeb:;
						if (it != expr.end()) {
							jule::Ptr<_1e5d54961_TypeDecl> _7029_mask = *it;
							{
								jule::I64 _7125_n = _6321_sema.get()._field_errors.len();;
								jule::Ptr<_1e6ab6a8a_TypeKind> _7229_kind = _1e6a283c0_buildTypeWithRefers(_6321_sema, _7029_mask,jule::Trait<_1e6ad2600_Lookup>(_6321_sema, 3),_6339_generics,nullptr);;
								if ((_7229_kind == nullptr)) {
									{
										auto &_match_expr{ _7029_mask.get()._field_Kind };
										
										if (_match_expr.type_is<jule::Ptr<_1e5d55027_IdentTypeDecl>>()) {
											_case_begin_1b2310a88:;
											{
												jule::Ptr<_1e5d55027_IdentTypeDecl> _7637_itd = _7029_mask.get()._field_Kind.operator jule::Ptr<_1e5d55027_IdentTypeDecl>();;
												if (((_7637_itd.get()._field_Generics.len() == 0LL) && _1e5e9780c_isBuiltinConstraint(_7637_itd.get()._field_Ident))) {
													_7229_kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(_7637_itd.get()._field_Ident), 6)});
													_6321_sema.get()._field_errors=_6321_sema.get()._field_errors.slice(0LL,_7125_n);
													goto _julec_label_success;
												};
											}
										}
										_match_end_1b2310a33:;
									};
									return false;
								};
								_julec_label_success:;
								_6525_generic.get()._field_Constraint = jule::alloc_for_append(_6525_generic.get()._field_Constraint,1);_6525_generic.get()._field_Constraint.__push(_7229_kind);;
							}
							_iter_next_1b230dbeb:;
							++it;
							goto _iter_begin_1b230dbeb;
						}
						_iter_end_1b230dbeb:;
					};
				}
				_iter_next_1b230b699:;
				++it;
				_6418_i++;
				goto _iter_begin_1b230b699;
			}
			_iter_end_1b230b699:;
		};
		return true;
	});
}



inline jule::Bool _1e5e77ad9_readyFi(jule::Ptr<_1e5e50683_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_fi.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_fi.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _1e6a2c7c0_fnEnvironment(_self_.get()._field_s, _self_.get()._field_fi,_1e5e60aa0_readyFn(_self_)));
}



inline jule::Bool _1e5e92483_readySi(jule::Ptr<_1e5e50683_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_si.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_si.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _1e5e60aa0_readyFn(_self_)(_self_.get()._field_s,_self_.get()._field_genericsA));
}



inline jule::Bool _1e5e942cb_ready(jule::Ptr<_1e5e50683_constraintChecker> _self_) {
	if ((_self_.get()._field_fi != nullptr)) {
		return _1e5e77ad9_readyFi(_self_);
	};
	return _1e5e92483_readySi(_self_);
}



inline jule::Bool _1e5e954b9_check(jule::Ptr<_1e5e50683_constraintChecker> _self_) {
	if ((!(_1e5e942cb_ready(_self_)))) {
		return false;
	};
	_julec_label_lookup:;
	{
		auto &expr = _self_.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1b2317a7e:;
		if (it != expr.end()) {
			jule::I64 _11914_i = it - expr.begin();
			jule::Ptr<_1e6ab535d_InsGeneric> _11921_g = *it;
			{
				if ((_11921_g.get()._field_Constraint == nullptr)) {
					goto _iter_next_1b2317a7e;
				};
				{
					auto &expr = _11921_g.get()._field_Constraint;
					auto it = expr.begin();
					_iter_begin_1b2318750:;
					if (it != expr.end()) {
						jule::Ptr<_1e6ab6a8a_TypeKind> _12325_c2 = *it;
						{
							jule::Ptr<_1e6abb562_Prim> _12425_prim = _1e6ab8b9c_Prim(_12325_c2.ptr());;
							if (((_12425_prim != nullptr) && _1e6abc156_IsConstraint(_12425_prim.ptr()))) {
								if (_1e5e95c17_matchConstraint(_12425_prim.get()._field_Kind,_11921_g.get()._field_Kind)) {
									goto _iter_next_1b2317a7e;
								};
								goto _iter_next_1b2318750;
							};
							if (_1e6ab7294_Equals(_12325_c2, _11921_g.get()._field_Kind)) {
								goto _iter_next_1b2317a7e;
							};
						}
						_iter_next_1b2318750:;
						++it;
						goto _iter_begin_1b2318750;
					}
					_iter_end_1b2318750:;
				};
				_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _self_.get()._field_et,jule::Str("type @ is not matched with @'s constraint", 41),jule::Slice<jule::Any>::make({jule::Any(_1e6ab6e86_Str(_11921_g.get()._field_Kind.ptr())),jule::Any(_self_.get()._field_genericsD[_11914_i].get()._field_Ident)}));
				return false;
			}
			_iter_next_1b2317a7e:;
			++it;
			_11914_i++;
			goto _iter_begin_1b2317a7e;
		}
		_iter_end_1b2317a7e:;
	};
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5e50683_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e5e989ea_IsTraitImpl(_1e5eb8a5e_Impl* _self_) {
	return ((*_self_)._field_Base != nullptr);
}



inline jule::Bool _1e5e99248_IsStructImpl(_1e5eb8a5e_Impl* _self_) {
	return ((*_self_)._field_Base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e5eb8a5e_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a06700_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a068dc_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a06ac9_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a06cb6_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a06ea3_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e5eb8c4b_IsWhileNext(_1e6a07190_WhileIter* _self_) {
	return ((*_self_)._field_Next != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a07190_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a0737c_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a07569_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a07756_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a07943_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a07b30_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a07d1c_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a08009_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a081e6_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e6a08801_IsGenericTypeMatch(_1e6a083d3_Match* _self_) {
	return (((*_self_)._field_TypeMatch && ((*_self_)._field_Expr != nullptr)) && (*_self_)._field_Expr.get()._field_Kind.get()._field_Generic);
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a083d3_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e6a08b20_isDefault(_1e6a08933_Case* _self_) {
	return ((*_self_)._field_Exprs == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a08933_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a08c52_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a08e3e_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a0912b_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a09318_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e6a192e5_ImportInfo> _1e6a096e2_FindPackage(_1e6a09505_scopeChecker* _self_, jule::Str _45630_ident) {
	return _1e6a2295d_FindPackage((*_self_)._field_s.ptr(), _45630_ident);
}



inline jule::Ptr<_1e6a192e5_ImportInfo> _1e6a09824_SelectPackage(_1e6a09505_scopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_1e6a192e5_ImportInfo>)> _46632_selector) {
	return _1e6a22c6b_SelectPackage((*_self_)._field_s.ptr(), _46632_selector);
}



inline jule::Ptr<_1e6a3dd20_Var> _1e6a09956_FindVar(_1e6a09505_scopeChecker* _self_, jule::Str _47726_ident, jule::Bool _47738_cpp_linked) {
	;
	jule::Ptr<_1e6a3dd20_Var> _48017_v = _1e6a887a4_findVar((*_self_)._field_table.ptr(), _47726_ident,_47738_cpp_linked,true);;
	if ((_48017_v != nullptr)) {
		return _48017_v;
	};
	jule::Ptr<_1e6a09505_scopeChecker> _48517_parent = (*_self_)._field_parent;;
	while ((_48517_parent != nullptr)) {
		{
			_48017_v=_1e6a887a4_findVar(_48517_parent.get()._field_table.ptr(), _47726_ident,_47738_cpp_linked,true);
			if ((_48017_v != nullptr)) {
				return _48017_v;
			};
			_48517_parent=_48517_parent.get()._field_parent;
		}
	_iter_next_1b23449e0:;
	}
	_iter_end_1b23449e0:;;
	return _1e6a23123_FindVar((*_self_)._field_s.ptr(), _47726_ident,_47738_cpp_linked);
}



inline jule::Ptr<_1e6ab5d97_TypeAlias> _1e6a09a88_FindTypeAlias(_1e6a09505_scopeChecker* _self_, jule::Str _50432_ident, jule::Bool _50444_cppLinked) {
	;
	jule::Ptr<_1e6ab5d97_TypeAlias> _50717_ta = _1e6a88c05_findTypeAlias((*_self_)._field_table.ptr(), _50432_ident,_50444_cppLinked,true);;
	if ((_50717_ta != nullptr)) {
		return _50717_ta;
	};
	jule::Ptr<_1e6a09505_scopeChecker> _51217_parent = (*_self_)._field_parent;;
	while ((_51217_parent != nullptr)) {
		{
			_50717_ta=_1e6a88c05_findTypeAlias(_51217_parent.get()._field_table.ptr(), _50432_ident,_50444_cppLinked,true);
			if ((_50717_ta != nullptr)) {
				return _50717_ta;
			};
			_51217_parent=_51217_parent.get()._field_parent;
		}
	_iter_next_1b234787d:;
	}
	_iter_end_1b234787d:;;
	return _1e6a234ca_FindTypeAlias((*_self_)._field_s.ptr(), _50432_ident,_50444_cppLinked);
}



inline jule::Ptr<_1e5d4518d_Struct> _1e6a09bba_FindStruct(_1e6a09505_scopeChecker* _self_, jule::Str _52929_ident, jule::Bool _52941_cppLinked) {
	return _1e6a23882_FindStruct((*_self_)._field_s.ptr(), _52929_ident,_52941_cppLinked);
}



inline jule::Ptr<_1e5e1c62d_Fn> _1e6a09cec_FindFn(_1e6a09505_scopeChecker* _self_, jule::Str _53825_ident, jule::Bool _53837_cppLinked) {
	return _1e6a23c39_FindFn((*_self_)._field_s.ptr(), _53825_ident,_53837_cppLinked);
}



inline jule::Ptr<_1e5e2e4db_Trait> _1e6a09e2e_FindTrait(_1e6a09505_scopeChecker* _self_, jule::Str _54728_ident) {
	return _1e6a24047_FindTrait((*_self_)._field_s.ptr(), _54728_ident);
}



inline jule::Ptr<_1e5e31631_Enum> _1e6a0a061_FindEnum(_1e6a09505_scopeChecker* _self_, jule::Str _55627_ident) {
	return _1e6a24355_FindEnum((*_self_)._field_s.ptr(), _55627_ident);
}



inline jule::Ptr<_1e5e32c2b_TypeEnum> _1e6a0a193_FindTypeEnum(_1e6a09505_scopeChecker* _self_, jule::Str _56531_ident) {
	return _1e6a24663_FindTypeEnum((*_self_)._field_s.ptr(), _56531_ident);
}



inline jule::Bool _1e6a0a2c5_isUnsafe(jule::Ptr<_1e6a09505_scopeChecker> _self_) {
	jule::Ptr<_1e6a09505_scopeChecker> _57317_scope = _self_;;
	_julec_label_iter:;
	if (_57317_scope.get()._field_scope.get()._field_Unsafety) {
		return true;
	};
	if ((_57317_scope.get()._field_parent != nullptr)) {
		_57317_scope=_57317_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Bool _1e6a0a407_isRoot(_1e6a09505_scopeChecker* _self_) {
	return (((*_self_)._field_parent == nullptr) || ((*_self_)._field_owner != nullptr));
}



inline void _1e6a0a539_stop(_1e6a09505_scopeChecker* _self_) {
	(*_self_)._field_i=-1LL;
}



inline jule::Bool _1e6a0a66b_stopped(_1e6a09505_scopeChecker* _self_) {
	return ((*_self_)._field_i == -1LL);
}



inline jule::Bool _1e6a0a79d_isDeferred(jule::Ptr<_1e6a09505_scopeChecker> _self_) {
	jule::Ptr<_1e6a09505_scopeChecker> _60617_scope = _self_;;
	_julec_label_iter:;
	if (_60617_scope.get()._field_scope.get()._field_Deferred) {
		return true;
	};
	if ((_60617_scope.get()._field_parent != nullptr)) {
		_60617_scope=_60617_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Ptr<_1e6a09505_scopeChecker> _1e6a0a8d0_getRoot(jule::Ptr<_1e6a09505_scopeChecker> _self_) {
	jule::Ptr<_1e6a09505_scopeChecker> _62417_root = _self_;;
	while (((_62417_root.get()._field_parent != nullptr) && (_62417_root.get()._field_owner == nullptr))) {
		{
			_62417_root=_62417_root.get()._field_parent;
		}
	_iter_next_1b2351d4e:;
	}
	_iter_end_1b2351d4e:;;
	return _62417_root;
}



inline jule::Ptr<_1e6a09505_scopeChecker> _1e6a0aa12_getHardRoot(jule::Ptr<_1e6a09505_scopeChecker> _self_) {
	jule::Ptr<_1e6a09505_scopeChecker> _63417_root = _self_;;
	while ((_63417_root.get()._field_parent != nullptr)) {
		{
			_63417_root=_63417_root.get()._field_parent;
		}
	_iter_next_1b2353119:;
	}
	_iter_end_1b2353119:;;
	return _63417_root;
}



inline jule::Ptr<_1e6a07943_Label> _1e6a0ab44_findLabel(_1e6a09505_scopeChecker* _self_, jule::Str _64428_ident) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_1b2353dc8:;
		if (it != expr.end()) {
			jule::Any _64521_st = *it;
			{
				{
					auto &_match_expr{ _64521_st };
					
					if (_match_expr.type_is<jule::Ptr<_1e6a07943_Label>>()) {
						_case_begin_1b23546d1:;
						{
							jule::Ptr<_1e6a07943_Label> _64825_label = _64521_st.operator jule::Ptr<_1e6a07943_Label>();;
							if ((_64825_label.get()._field_Ident == _64428_ident)) {
								return _64825_label;
							};
						}
					}
					_match_end_1b23545d2:;
				};
			}
			_iter_next_1b2353dc8:;
			++it;
			goto _iter_begin_1b2353dc8;
		}
		_iter_end_1b2353dc8:;
	};
	return nullptr;
}



inline jule::Ptr<_1e6a0912b_scopeLabel> _1e6a0ac76_findLabelScope(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Str _66034_ident) {
	jule::Ptr<_1e6a0912b_scopeLabel> _66117_label = _1e6a0ada8_findLabelAll(_self_.ptr(), _66034_ident);;
	if (((_66117_label != nullptr) && (_66117_label.get()._field_scope == _self_))) {
		return _66117_label;
	};
	return nullptr;
}



inline jule::Ptr<_1e6a0912b_scopeLabel> _1e6a0ada8_findLabelAll(_1e6a09505_scopeChecker* _self_, jule::Str _67231_ident) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1b2356a9b:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a0912b_scopeLabel> _67321_lbl = *it;
			{
				if ((_67321_lbl.get()._field_label.get()._field_Ident == _67231_ident)) {
					return _67321_lbl;
				};
			}
			_iter_next_1b2356a9b:;
			++it;
			goto _iter_begin_1b2356a9b;
		}
		_iter_end_1b2356a9b:;
	};
	return nullptr;
}



inline jule::Bool _1e6a0aeda_isDuplicatedIdent(_1e6a09505_scopeChecker* _self_, jule::Uintptr _68436_itself, jule::Str _68453_ident) {
	jule::Ptr<_1e6a3dd20_Var> _68513_v = _1e6a09956_FindVar(&(*_self_), _68453_ident,false);;
	if (((_68513_v != nullptr) && (static_cast<jule::Uintptr>(_68513_v) != _68436_itself))) {
		if ((_68513_v.get()._field_Scope == nullptr)) {
			return false;
		};
		return ((_68513_v.get()._field_Scope == (*_self_)._field_scope) || (!(_1e6a249b5_isFlag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));
	};
	jule::Ptr<_1e6ab5d97_TypeAlias> _69313_ta = _1e6a09a88_FindTypeAlias(&(*_self_), _68453_ident,false);;
	if (((_69313_ta != nullptr) && (static_cast<jule::Uintptr>(_69313_ta) != _68436_itself))) {
		if ((_69313_ta.get()._field_Scope == nullptr)) {
			return false;
		};
		return ((_69313_ta.get()._field_Scope == (*_self_)._field_tree) || (!(_1e6a249b5_isFlag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));
	};
	return false;
}



inline void _1e6a0b11c_checkVarDecl(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Ptr<_1e5d67754_VarDecl> _70436_decl) {
	jule::Ptr<_1e6a3dd20_Var> _70517_v = _1e5e27e74_buildVar(_70436_decl);;
	_70517_v.get()._field_Scope=_self_.get()._field_scope;
	__JULE_DEFER({
		_self_.get()._field_table.get()._field_Vars = jule::alloc_for_append(_self_.get()._field_table.get()._field_Vars,1);_self_.get()._field_table.get()._field_Vars.__push(_70517_v);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_70517_v));;
	});;
	if (_1e6a0aeda_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_70517_v)),_70517_v.get()._field_Ident)) {
		_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _70517_v.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_70517_v.get()._field_Ident)}));
		_1e6a25422_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_1e6a0a539_stop(_self_.ptr());
		return;;
	};
	_1e6a33243_checkVarDecl(_self_.get()._field_s, _70517_v,jule::Trait<_1e6ad2600_Lookup>(_self_, 0));
	if (((!(_1e6a3e43b_IsTypeInferred(_70517_v.ptr()))) && ((_70517_v.get()._field_Kind == nullptr) || (_70517_v.get()._field_Kind.get()._field_Kind == nullptr)))) {
		return;;
	};
	_1e6a36884_checkTypeVar(_self_.get()._field_s, _70517_v,jule::Trait<_1e6ad2600_Lookup>(_self_, 0));
}



inline void _1e6a0b24e_checkTypeAliasDecl(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Ptr<_1e5d6b0b5_TypeAliasDecl> _72842_decl) {
	jule::Ptr<_1e6ab5d97_TypeAlias> _72917_ta = _1e5e24e4e_buildTypeAlias(_72842_decl);;
	if (_1e6a0aeda_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_72917_ta)),_72917_ta.get()._field_Ident)) {
		_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _72917_ta.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_72917_ta.get()._field_Ident)}));
		_1e6a25422_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_1e6a0a539_stop(_self_.ptr());
		return;;
	};
	_1e6a2e085_checkTypeAliasDecl(_self_.get()._field_s, _72917_ta,jule::Trait<_1e6ad2600_Lookup>(_self_, 0));
	_self_.get()._field_table.get()._field_TypeAliases = jule::alloc_for_append(_self_.get()._field_table.get()._field_TypeAliases,1);_self_.get()._field_table.get()._field_TypeAliases.__push(_72917_ta);;
	if ((_72917_ta.get()._field_Kind.get()._field_Kind == nullptr)) {
		_1e6a0a539_stop(_self_.ptr());
	};
}



inline jule::Ptr<_1e6a06700_Scope> _1e6a0b381_getChild(_1e6a09505_scopeChecker* _self_) {
	return jule::new_ptr<_1e6a06700_Scope>(_1e6a06700_Scope{._field_Parent=(*_self_)._field_scope, });
}



inline void _1e6a0b4b3_checkChildSsc(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Ptr<_1e5d64c7e_ScopeTree>& _75238_tree, jule::Ptr<_1e6a06700_Scope>& _75261_s, jule::Ptr<_1e6a09505_scopeChecker>& _75277_ssc) {
	_75277_ssc.get()._field_parent=_self_;
	_1e6a1283d_check(_75277_ssc, _75238_tree,_75261_s);
}



inline jule::Ptr<_1e6a06700_Scope> _1e6a0b5e5_checkChildSc(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Ptr<_1e5d64c7e_ScopeTree>& _75737_tree, jule::Ptr<_1e6a09505_scopeChecker>& _75760_ssc) {
	jule::Ptr<_1e6a06700_Scope> _75817_s = _1e6a0b381_getChild(_self_.ptr());;
	_1e6a0b4b3_checkChildSsc(_self_, _75737_tree,_75817_s,_75760_ssc);
	return _75817_s;
}



inline jule::Ptr<_1e6a06700_Scope> _1e6a0b727_checkChild(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Ptr<_1e5d64c7e_ScopeTree>& _76335_tree) {
	jule::Ptr<_1e6a09505_scopeChecker> _76417_ssc = _1e6a12aa2_newChildChecker(_self_);;
	return _1e6a0b5e5_checkChildSc(_self_, _76335_tree,_76417_ssc);
}



inline void _1e6a0b859_checkAnonScope(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Ptr<_1e5d64c7e_ScopeTree> _76838_tree) {
	jule::Ptr<_1e6a06700_Scope> _76917_s = _1e6a0b727_checkChild(_self_, _76838_tree);;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_76917_s));;
}



inline void _1e6a0b98b_processErrorCall(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Ptr<_1e5e19185_BuiltinErrorCallExprModel>& _77341_m, jule::Ptr<_1e47137a5_Token> _77372_err) {
	if (_1e6a0a79d_isDeferred(_self_)) {
		_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _77372_err,jule::Str("deferred scopes are not supports error calls", 44),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e6a09505_scopeChecker> _77817_root = _1e6a0a8d0_getRoot(_self_);;
	if ((!(_77817_root.get()._field_owner.get()._field_Decl.get()._field_Exceptional))) {
		_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _77372_err,jule::Str("error call can only useable for exceptional functions", 53),jule::Slice<jule::Any>());
		_1e6a25422_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57),jule::Slice<jule::Any>());
	};
	_77341_m.get()._field_Func=_77817_root.get()._field_owner;
}



inline void _1e6a0babd_checkExpr(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Ptr<_1e5d58e82_Expr> _78633_expr) {
	jule::Ptr<_1e6a8c7db_Eval> _78717_eval = _1e6a2a669_eval(_self_.get()._field_s, jule::Trait<_1e6ad2600_Lookup>(_self_, 0));;
	_78717_eval.get()._field_ignored=true;
	jule::Ptr<_1e6a8ac6d_Data> _78917_d = _1e6aa832e_evalExpr(_78717_eval, _78633_expr);;
	if ((_78917_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _78917_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1e5e19185_BuiltinErrorCallExprModel>>()) {
			_case_begin_1b236d222:;
			{
				jule::Ptr<_1e5e19185_BuiltinErrorCallExprModel> _79621_m = _78917_d.get()._field_Model.operator jule::Ptr<_1e5e19185_BuiltinErrorCallExprModel>();;
				_1e6a0b98b_processErrorCall(_self_, _79621_m,_78633_expr.get()._field_Token);
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_78917_d));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e19dab_BackendEmitExprModel>>() || _match_expr.type_is<jule::Ptr<_1e5e18cab_BuiltinAppendCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e5e1831b_BuiltinCloneCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e5e17e42_BuiltinOutCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e5e1812e_BuiltinOutlnCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e5e186e5_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e5e188d2_BuiltinAssertCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e5e18e98_BuiltinCopyCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e5e1a098_FreeExprModel>>() || _match_expr.type_is<jule::Ptr<_1e5e1602d_FnCallExprModel>>()) {
			_case_begin_1b236d420:;
			{
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_78917_d));;
			}
		}
		else {
			_case_begin_1b236d0ce:;
			{
				_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _78633_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1b236d079:;
	};
}



inline void _1e6a0bc00_checkCoExpr(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Ptr<_1e5d5aa77_CoExpr> _81535_expr) {
	jule::Ptr<_1e6a8c7db_Eval> _81617_eval = _1e6a2a669_eval(_self_.get()._field_s, jule::Trait<_1e6ad2600_Lookup>(_self_, 0));;
	_81617_eval.get()._field_ignored=true;
	jule::Ptr<_1e6a8ac6d_Data> _81817_d = _1e6aa832e_evalExpr(_81617_eval, _81535_expr.get()._field_Expr);;
	if ((_81817_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _81817_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1e5e1602d_FnCallExprModel>>()) {
			_case_begin_1b2373502:;
			{
				jule::Ptr<_1e5e1602d_FnCallExprModel> _82521_model = _81817_d.get()._field_Model.operator jule::Ptr<_1e5e1602d_FnCallExprModel>();;
				if (_82521_model.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
					_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _81535_expr.get()._field_Token,jule::Str("concurrent calls not supports exceptionals", 42),jule::Slice<jule::Any>());
					_1e6a25422_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63),jule::Slice<jule::Any>());
				};
				_82521_model.get()._field_IsCo=true;
				_1e6aa01c2_checkFnOfConcurrentCall(_81617_eval.ptr(), _82521_model.get()._field_Func,_81535_expr.get()._field_Expr.get()._field_Token);
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_81817_d));;
			}
		}
		else {
			_case_begin_1b237339d:;
			{
				_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _81535_expr.get()._field_Token,jule::Str("statement must have function call expression", 44),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1b2373348:;
	};
}



inline jule::Ptr<_1e6a068dc_If> _1e6a0bd32_checkIf(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Ptr<_1e5d6a0b4_If> _83931_i) {
	jule::Ptr<_1e6a06700_Scope> _84017_s = _1e6a0b727_checkChild(_self_, _83931_i.get()._field_Scope);;
	jule::Ptr<_1e6a8ac6d_Data> _84217_d = _1e6aa832e_evalExpr(_1e6a2a669_eval(_self_.get()._field_s, jule::Trait<_1e6ad2600_Lookup>(_self_, 0)), _83931_i.get()._field_Expr);;
	if ((_84217_d == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1e6abb562_Prim> _84717_prim = _1e6ab8b9c_Prim(_84217_d.get()._field_Kind.ptr());;
	if (((_84717_prim == nullptr) || (!(_1e6abe532_IsBool(_84717_prim.ptr()))))) {
		_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _83931_i.get()._field_Expr.get()._field_Token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1e6a068dc_If>(_1e6a068dc_If{._field_Expr=_84217_d.get()._field_Model, ._field_Scope=_84017_s});
}



inline jule::Ptr<_1e6a06ac9_Else> _1e6a0be64_checkElse(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Ptr<_1e5d6a46b_Else> _85933_e) {
	return jule::new_ptr<_1e6a06ac9_Else>(_1e6a06ac9_Else{._field_Scope=_1e6a0b727_checkChild(_self_, _85933_e.get()._field_Scope)});
}



inline void _1e6a0c096_checkConditional(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Ptr<_1e5d6a8de_Conditional> _86540_conditional) {
	jule::Ptr<_1e6a06cb6_Conditional> _86617_c = jule::new_ptr<_1e6a06cb6_Conditional>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_86617_c));;
	_86617_c.get()._field_Elifs=jule::Slice<jule::Ptr<_1e6a068dc_If>>::alloc(0LL,(_86540_conditional.get()._field_Tail.len() + 1LL));
	_86617_c.get()._field_Elifs = jule::alloc_for_append(_86617_c.get()._field_Elifs,1);_86617_c.get()._field_Elifs.__push(_1e6a0bd32_checkIf(_self_, _86540_conditional.get()._field_Head));;
	{
		auto &expr = _86540_conditional.get()._field_Tail;
		auto it = expr.begin();
		_iter_begin_1b237b6e7:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d6a0b4_If> _87221_elif = *it;
			{
				_86617_c.get()._field_Elifs = jule::alloc_for_append(_86617_c.get()._field_Elifs,1);_86617_c.get()._field_Elifs.__push(_1e6a0bd32_checkIf(_self_, _87221_elif));;
			}
			_iter_next_1b237b6e7:;
			++it;
			goto _iter_begin_1b237b6e7;
		}
		_iter_end_1b237b6e7:;
	};
	if ((_86540_conditional.get()._field_Default != nullptr)) {
		_86617_c.get()._field_Default=_1e6a0be64_checkElse(_self_, _86540_conditional.get()._field_Default);
	};
}



inline void _1e6a0c1c8_checkIterScopeSsc(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Uintptr _88137_it, jule::Ptr<_1e5d64c7e_ScopeTree> _88154_tree, jule::Ptr<_1e6a06700_Scope>& _88177_s, jule::Ptr<_1e6a09505_scopeChecker> _88192_ssc) {
	_88192_ssc.get()._field_it=_88137_it;
	_1e6a0b4b3_checkChildSsc(_self_, _88154_tree,_88177_s,_88192_ssc);
}



inline jule::Ptr<_1e6a06700_Scope> _1e6a0c30a_checkIterScopeSc(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Uintptr _88636_it, jule::Ptr<_1e5d64c7e_ScopeTree> _88653_tree, jule::Ptr<_1e6a09505_scopeChecker> _88675_ssc) {
	jule::Ptr<_1e6a06700_Scope> _88717_scope = _1e6a0b381_getChild(_self_.ptr());;
	_1e6a0c1c8_checkIterScopeSsc(_self_, _88636_it,_88653_tree,_88717_scope,_88675_ssc);
	return _88717_scope;
}



inline jule::Ptr<_1e6a06700_Scope> _1e6a0c43c_checkIterScope(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Uintptr _89234_it, jule::Ptr<_1e5d64c7e_ScopeTree>& _89252_tree) {
	jule::Ptr<_1e6a09505_scopeChecker> _89317_ssc = _1e6a12aa2_newChildChecker(_self_);;
	return _1e6a0c30a_checkIterScopeSc(_self_, _89234_it,_89252_tree,_89317_ssc);
}



inline void _1e6a0c56e_checkInfIter(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Ptr<_1e5d6826b_Iter>& _89737_it) {
	jule::Ptr<_1e6a06ea3_InfIter> _89817_kind = jule::new_ptr<_1e6a06ea3_InfIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_89817_kind));;
	_89817_kind.get()._field_Scope=_1e6a0c43c_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_89817_kind)),_89737_it.get()._field_Scope);
}



inline void _1e6a0c6a1_checkWhileIter(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Ptr<_1e5d6826b_Iter>& _90339_it) {
	jule::Ptr<_1e5d68a41_WhileKind> _90417_wh = _90339_it.get()._field_Kind.operator jule::Ptr<_1e5d68a41_WhileKind>();;
	if (((_90417_wh.get()._field_Expr == nullptr) && (_90417_wh.get()._field_Next == nullptr))) {
		_1e6a0c56e_checkInfIter(_self_, _90339_it);
		return;;
	};
	jule::Ptr<_1e6a07190_WhileIter> _91017_kind = jule::new_ptr<_1e6a07190_WhileIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_91017_kind));;
	_91017_kind.get()._field_Scope=_1e6a0c43c_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_91017_kind)),_90339_it.get()._field_Scope);
	if ((_90417_wh.get()._field_Expr != nullptr)) {
		jule::Ptr<_1e6a8ac6d_Data> _91521_d = _1e6aa832e_evalExpr(_1e6a2a669_eval(_self_.get()._field_s, jule::Trait<_1e6ad2600_Lookup>(_self_, 0)), _90417_wh.get()._field_Expr);;
		if ((_91521_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1e6abb562_Prim> _92017_prim = _1e6ab8b9c_Prim(_91521_d.get()._field_Kind.ptr());;
		if ((_92017_prim == nullptr)) {
			_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _90339_it.get()._field_Token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1e6abe532_IsBool(_92017_prim.ptr())))) {
			_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _90339_it.get()._field_Token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		_91017_kind.get()._field_Expr=_91521_d.get()._field_Model;
	};
	if (_1e5d68d93_IsWhileNext(_90417_wh.ptr())) {
		if ((!(_1e5eb2ccd_isValidAstStForNextSt(_90417_wh.get()._field_Next)))) {
			_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _90417_wh.get()._field_NextToken,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _94017_n = _self_.get()._field_scope.get()._field_Stmts.len();;
		_1e6a115d9_checkNode(_self_, _90417_wh.get()._field_Next);
		if ((_94017_n < _self_.get()._field_scope.get()._field_Stmts.len())) {
			jule::Any _94325_st = _self_.get()._field_scope.get()._field_Stmts[_94017_n];;
			_self_.get()._field_scope.get()._field_Stmts=_self_.get()._field_scope.get()._field_Stmts.slice(0LL,_94017_n);
			if ((!(_1e5e64ad7_isValidStForNextSt(_94325_st)))) {
				_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _90417_wh.get()._field_NextToken,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			};
			_91017_kind.get()._field_Next=_94325_st;
		};
	};
}



inline void _1e6a0c7d3_checkRangeIter(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Ptr<_1e5d6826b_Iter>& _95339_it) {
	jule::Ptr<_1e5d693d2_RangeKind> _95417_rang = _95339_it.get()._field_Kind.operator jule::Ptr<_1e5d693d2_RangeKind>();;
	jule::Ptr<_1e6a8ac6d_Data> _95617_d = _1e6aa832e_evalExpr(_1e6a2a669_eval(_self_.get()._field_s, jule::Trait<_1e6ad2600_Lookup>(_self_, 0)), _95417_rang.get()._field_Expr);;
	if ((_95617_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1e6a0737c_RangeIter> _96117_kind = jule::new_ptr<_1e6a0737c_RangeIter>(_1e6a0737c_RangeIter{._field_Expr=_95617_d, });;
	_1e6a8200b_rangeChecker _96517_rc = _1e6a8200b_rangeChecker{._field_sc=_self_, ._field_rang=_95417_rang, ._field_Kind=_96117_kind, ._field_d=_95617_d};;
	jule::Bool _97113_ok = _1e6a838c0_check(&_96517_rc);;
	if ((!(_97113_ok))) {
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_96117_kind));;
	jule::Ptr<_1e6a09505_scopeChecker> _97817_ssc = _1e6a12aa2_newChildChecker(_self_);;
	jule::Ptr<_1e6a06700_Scope> _97917_scope = _1e6a0b381_getChild(_self_.ptr());;
	if ((_96117_kind.get()._field_KeyA != nullptr)) {
		if (((!(_1e6a249b5_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1e6a0aeda_isDuplicatedIdent(_self_.ptr(), 0LLU,_96117_kind.get()._field_KeyA.get()._field_Ident))) {
			_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _96117_kind.get()._field_KeyA.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_96117_kind.get()._field_KeyA.get()._field_Ident)}));
			_1e6a25422_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_96117_kind.get()._field_KeyA.get()._field_Scope=_97917_scope;
		_97817_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_97817_ssc.get()._field_table.get()._field_Vars,1);_97817_ssc.get()._field_table.get()._field_Vars.__push(_96117_kind.get()._field_KeyA);;
	};
	if ((_96117_kind.get()._field_KeyB != nullptr)) {
		if (((!(_1e6a249b5_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1e6a0aeda_isDuplicatedIdent(_self_.ptr(), 0LLU,_96117_kind.get()._field_KeyB.get()._field_Ident))) {
			_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _96117_kind.get()._field_KeyB.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_96117_kind.get()._field_KeyB.get()._field_Ident)}));
			_1e6a25422_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_96117_kind.get()._field_KeyB.get()._field_Scope=_97917_scope;
		_97817_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_97817_ssc.get()._field_table.get()._field_Vars,1);_97817_ssc.get()._field_table.get()._field_Vars.__push(_96117_kind.get()._field_KeyB);;
	};
	_1e6a0c1c8_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_96117_kind)),_95339_it.get()._field_Scope,_97917_scope,_97817_ssc);
	_96117_kind.get()._field_Scope=_97917_scope;
}



inline void _1e6a0c915_checkIter(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Ptr<_1e5d6826b_Iter> _100333_it) {
	if (_1e5d685bd_IsInf(_100333_it.ptr())) {
		_1e6a0c56e_checkInfIter(_self_, _100333_it);
		return;;
	};
	{
		auto &_match_expr{ _100333_it.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e5d68a41_WhileKind>>()) {
			_case_begin_1b239945c:;
			{
				_1e6a0c6a1_checkWhileIter(_self_, _100333_it);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d693d2_RangeKind>>()) {
			_case_begin_1b23988bd:;
			{
				_1e6a0c7d3_checkRangeIter(_self_, _100333_it);
			}
		}
		else {
			_case_begin_1b239878b:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1b2398deb:;
	};
}



inline jule::Bool _1e6a0ca47_checkValidContLabel(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Uintptr _101939_it) {
	jule::Ptr<_1e6a09505_scopeChecker> _102017_scope = _self_;;
	_julec_label_iter:;
	if ((_102017_scope.get()._field_it == _101939_it)) {
		return true;
	};
	if ((_102017_scope.get()._field_parent != nullptr)) {
		_102017_scope=_102017_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Bool _1e6a0cb79_checkValidBreakLabel(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Uintptr _103540_ptr) {
	jule::Ptr<_1e6a09505_scopeChecker> _103617_scope = _self_;;
	_julec_label_iter:;
	if ((_103617_scope.get()._field_it == _103540_ptr)) {
		return true;
	};
	if ((_103617_scope.get()._field_cse != 0LLU)) {
		jule::Uintptr _104417_mtch = static_cast<jule::Uintptr>(((_1e6a08933_Case*)(_103617_scope.get()._field_cse))->_field_Owner);;
		if ((_104417_mtch == _103540_ptr)) {
			return true;
		};
	};
	if ((_103617_scope.get()._field_parent != nullptr)) {
		_103617_scope=_103617_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Ptr<_1e6a07569_ContSt> _1e6a0ccab_checkContValidScope(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Ptr<_1e5d69b41_ContSt> _105839_c) {
	if (_1e6a0a79d_isDeferred(_self_)) {
		_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _105839_c.get()._field_Token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_105839_c.get()._field_Label != nullptr)) {
		return jule::new_ptr<_1e6a07569_ContSt>();
	};
	jule::Ptr<_1e6a09505_scopeChecker> _106817_scope = _self_;;
	_julec_label_iter:;
	{
		
		if ((((_106817_scope.get()._field_it == 0LLU) && (_106817_scope.get()._field_parent != nullptr)) && (_106817_scope.get()._field_owner == nullptr))) {
			_case_begin_1b23a1a3b:;
			{
				_106817_scope=_106817_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_106817_scope.get()._field_it != 0LLU)) {
			_case_begin_1b23a1ab3:;
			{
				return jule::new_ptr<_1e6a07569_ContSt>(_1e6a07569_ContSt{._field_It=_106817_scope.get()._field_it});
			}
		}
		_match_end_1b23a19b4:;
	};
	_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _105839_c.get()._field_Token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _1e6a0cddd_checkCont(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Ptr<_1e5d69b41_ContSt> _108229_c) {
	jule::Ptr<_1e6a07569_ContSt> _108317_cont = _1e6a0ccab_checkContValidScope(_self_, _108229_c);;
	if ((_108317_cont == nullptr)) {
		return;;
	};
	if ((_108229_c.get()._field_Label != nullptr)) {
		jule::Ptr<_1e6a0912b_scopeLabel> _108921_label = _1e5ea351b_findLabelParent(_108229_c.get()._field_Label.get()._field_Kind,_self_.get()._field_parent);;
		if ((_108921_label == nullptr)) {
			_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _108229_c.get()._field_Label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_108229_c.get()._field_Label.get()._field_Kind)}));
			return;;
		};
		_108921_label.get()._field_used=true;
		if (((_108921_label.get()._field_pos + 1LL) >= _108921_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _108229_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_108229_c.get()._field_Label.get()._field_Kind)}));
			return;;
		};
		jule::I64 _110217_i = (_108921_label.get()._field_pos + 1LL);;
		if ((_110217_i >= _108921_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _108229_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>());
		} else {
			jule::Any _110625_st = _108921_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_110217_i];;
			{
				auto &_match_expr{ _110625_st };
				
				if (_match_expr.type_is<jule::Ptr<_1e6a06ea3_InfIter>>()) {
					_case_begin_1b23a7437:;
					{
						_108317_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_110625_st.operator jule::Ptr<_1e6a06ea3_InfIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1e6a0737c_RangeIter>>()) {
					_case_begin_1b23aa4c3:;
					{
						_108317_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_110625_st.operator jule::Ptr<_1e6a0737c_RangeIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1e6a07190_WhileIter>>()) {
					_case_begin_1b23aa539:;
					{
						_108317_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_110625_st.operator jule::Ptr<_1e6a07190_WhileIter>()));
					}
				}
				else {
					_case_begin_1b23aa36e:;
					{
						_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _108229_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_108229_c.get()._field_Label.get()._field_Kind)}));
					}
				}
				_match_end_1b23aa292:;
			};
		};
	};
	if ((_108317_cont.get()._field_It != 0LLU)) {
		if ((!(_1e6a0ca47_checkValidContLabel(_self_, _108317_cont.get()._field_It)))) {
			_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _108229_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_108229_c.get()._field_Label.get()._field_Kind)}));
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_108317_cont));;
}



inline void _1e6a0d020_checkLabel(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Ptr<_1e5d623ec_LabelSt> _112934_l) {
	if ((_1e6a0ab44_findLabel(_self_.ptr(), _112934_l.get()._field_Ident) != nullptr)) {
		_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _112934_l.get()._field_Token,jule::Str("label is already exist in this identifier: @", 44),jule::Slice<jule::Any>::make({jule::Any(_112934_l.get()._field_Ident)}));
		return;;
	};
	jule::Ptr<_1e6a07943_Label> _113517_label = jule::new_ptr<_1e6a07943_Label>(_1e6a07943_Label{._field_Ident=_112934_l.get()._field_Ident});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_113517_label));;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1e6a0912b_scopeLabel>>::make({jule::new_ptr<_1e6a0912b_scopeLabel>(_1e6a0912b_scopeLabel{._field_token=_112934_l.get()._field_Token, ._field_label=_113517_label, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL)), ._field_scope=_self_, })}));
}



inline void _1e6a0d152_pushGoto(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Ptr<_1e5d627a4_GotoSt> _114832_gt) {
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(jule::new_ptr<_1e6a07b30_GotoSt>(_1e6a07b30_GotoSt{._field_Ident=_114832_gt.get()._field_Label.get()._field_Kind})));;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1e6a09318_scopeGoto>>::make({jule::new_ptr<_1e6a09318_scopeGoto>(_1e6a09318_scopeGoto{._field_gt=_114832_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL))})}));
}



inline void _1e6a0d284_checkPostfix(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Ptr<_1e5d636d9_AssignSt> _116036_a) {
	if ((_116036_a.get()._field_Left.len() > 1LL)) {
		_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _116036_a.get()._field_Setter,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e5d58e82_Expr> _116617_expr = _116036_a.get()._field_Left[0LL].get()._field_Expr;;
	jule::Ptr<_1e6a8ac6d_Data> _116717_d = _1e6aa832e_evalExpr(_1e6a2a669_eval(_self_.get()._field_s, jule::Trait<_1e6ad2600_Lookup>(_self_, 0)), _116617_expr);;
	if ((_116717_d == nullptr)) {
		return;;
	};
	_1e5eb7662_checkAssign(_self_.get()._field_s,_116717_d,nullptr,_116036_a.get()._field_Setter);
	if ((_1e6ab9175_Ptr(_116717_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1e6ac335a_Ptr> _117521_ptr = _1e6ab9175_Ptr(_116717_d.get()._field_Kind.ptr());;
		if (_1e6ac3d2d_IsUnsafe(_117521_ptr.ptr())) {
			_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _116036_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_116036_a.get()._field_Setter.get()._field_Kind),jule::Any(_1e6ab6e86_Str(_116717_d.get()._field_Kind.ptr()))}));
			return;;
		};
	} else {
		if (((_1e6ab8b9c_Prim(_116717_d.get()._field_Kind.ptr()) == nullptr) || (!(_1e6a062b0_IsNum(_1e6ab8b9c_Prim(_116717_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _116036_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_116036_a.get()._field_Setter.get()._field_Kind),jule::Any(_1e6ab6e86_Str(_116717_d.get()._field_Kind.ptr()))}));
			return;;
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(jule::new_ptr<_1e6a07d1c_Postfix>(_1e6a07d1c_Postfix{._field_Expr=_116717_d.get()._field_Model, ._field_Op=_116036_a.get()._field_Setter.get()._field_Kind})));;
}



inline jule::Bool _1e6a0d3b6_isNewAssignIdent(_1e6a09505_scopeChecker* _self_, jule::Str _119335_ident) {
	if ((_1e4716049_IsIgnoreIdent(_119335_ident) || _119335_ident.empty())) {
		return false;
	};
	return (_1e6a890ac_defByIdent((*_self_)._field_table.ptr(), _119335_ident,false) == nullptr);
}



inline jule::Bool _1e6a0d4e8_checkStructureAssignOp(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Ptr<_1e5d714d8_StructIns>& _120047_s, jule::Ptr<_1e5d636d9_AssignSt>& _120067_a, jule::Ptr<_1e6a8ac6d_Data>& _120086_r) {
	jule::Ptr<_1e5e202ce_FnIns> _120317_overload = nullptr;;
	{
		auto &_match_expr{ _120067_a.get()._field_Setter.get()._field_Kind };
		
		if (_match_expr == jule::Str("+=", 2)) {
			_case_begin_1b23c2c7c:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == jule::Str("-=", 2)) {
			_case_begin_1b23c2ce3:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == jule::Str("/=", 2)) {
			_case_begin_1b23c3c06:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == jule::Str("*=", 2)) {
			_case_begin_1b23c3c6c:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == jule::Str("%=", 2)) {
			_case_begin_1b23c3cd3:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == jule::Str("<<=", 3)) {
			_case_begin_1b23c3d49:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == jule::Str(">>=", 3)) {
			_case_begin_1b23c3db0:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == jule::Str("|=", 2)) {
			_case_begin_1b23c3e7b:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == jule::Str("&=", 2)) {
			_case_begin_1b23c3ee2:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == jule::Str("^=", 2)) {
			_case_begin_1b23c4058:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1b23c2b4a:;
			{
				_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _120067_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_120067_a.get()._field_Setter.get()._field_Kind),jule::Any(_1e5d3a65b_Str(_120047_s.ptr()))}));
				return false;
			}
		}
		_match_end_1b23c2a90:;
	};
	if ((_120317_overload == nullptr)) {
		_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _120067_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_120067_a.get()._field_Setter.get()._field_Kind),jule::Any(_1e5d3a65b_Str(_120047_s.ptr()))}));
		return false;
	};
	jule::Ptr<_1e5e1e410_ParamIns> _123517_p = _120317_overload.get()._field_Params[1LL];;
	return _1e6a2ab64_checkAssignType(_self_.get()._field_s, _123517_p.get()._field_Decl.get()._field_Reference,_123517_p.get()._field_Kind,_120086_r,_120067_a.get()._field_Setter);
}



inline void _1e6a0d62a_checkSingleAssign(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Ptr<_1e5d636d9_AssignSt>& _123942_a) {
	jule::Ptr<_1e6a8ac6d_Data> _124017_l = nullptr;;
	if ((!(_1e4716049_IsIgnoreIdent(_123942_a.get()._field_Left[0LL].get()._field_Ident)))) {
		jule::Ptr<_1e5d58e82_Expr> _124321_expr = _123942_a.get()._field_Left[0LL].get()._field_Expr;;
		_124017_l=_1e6aa832e_evalExpr(_1e6a2a669_eval(_self_.get()._field_s, jule::Trait<_1e6ad2600_Lookup>(_self_, 0)), _124321_expr);
		if ((_124017_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1e6a8c7db_Eval> _125017_eval = nullptr;;
	if ((_124017_l != nullptr)) {
		_125017_eval=_1e6a2a35b_evalp(_self_.get()._field_s, jule::Trait<_1e6ad2600_Lookup>(_self_, 0),_124017_l.get()._field_Kind);
	} else {
		_125017_eval=_1e6a2a669_eval(_self_.get()._field_s, jule::Trait<_1e6ad2600_Lookup>(_self_, 0));
	};
	_125017_eval.get()._field_unsafety=_1e6a0a2c5_isUnsafe(_self_);
	jule::Ptr<_1e6a8ac6d_Data> _125717_r = _1e6aa832e_evalExpr(_125017_eval, _123942_a.get()._field_Right);;
	if ((_125717_r == nullptr)) {
		return;;
	};
	if ((_124017_l == nullptr)) {
		if (_1e6ab7c23_Void(_125717_r.get()._field_Kind.ptr())) {
			_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _123942_a.get()._field_Right.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_125717_r));;
		return;;
	};
	if ((!(_1e5eb7662_checkAssign(_self_.get()._field_s,_124017_l,_125717_r,_123942_a.get()._field_Setter)))) {
		return;;
	};
	if ((_1e6aba83b_Tup(_125717_r.get()._field_Kind.ptr()) != nullptr)) {
		_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _123942_a.get()._field_Setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e5e151b4_OperandExprModel> _127917_lm = jule::new_ptr<_1e5e151b4_OperandExprModel>(_1e5e151b4_OperandExprModel{._field_Kind=_124017_l.get()._field_Kind, ._field_Model=_124017_l.get()._field_Model});;
	jule::Ptr<_1e5e151b4_OperandExprModel> _128317_rm = jule::new_ptr<_1e5e151b4_OperandExprModel>(_1e5e151b4_OperandExprModel{._field_Kind=_125717_r.get()._field_Kind, ._field_Model=_125717_r.get()._field_Model});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(jule::new_ptr<_1e6a08009_Assign>(_1e6a08009_Assign{._field_L=_127917_lm, ._field_R=_128317_rm, ._field_Op=_123942_a.get()._field_Setter})));;
	if ((_123942_a.get()._field_Setter.get()._field_Kind != jule::Str("=", 1))) {
		jule::Ptr<_1e5d714d8_StructIns> _129021_strct = _1e6aba0ee_Struct(_124017_l.get()._field_Kind.ptr());;
		if ((_129021_strct != nullptr)) {
			_1e6a0d4e8_checkStructureAssignOp(_self_, _129021_strct,_123942_a,_125717_r);
			return;;
		};
		_123942_a.get()._field_Setter.get()._field_Kind=_123942_a.get()._field_Setter.get()._field_Kind.slice(0LL,(_123942_a.get()._field_Setter.get()._field_Kind.len() - 1LL));
		_1e6aaa540_binaryEval _129721_solver = static__1e6aaae47_new(_125017_eval,_123942_a.get()._field_Setter);;
		_125717_r=_1e6ab0ac8_solveExplicit(&_129721_solver, _124017_l,_125717_r);
		if ((_125717_r == nullptr)) {
			return;;
		};
		_123942_a.get()._field_Setter.get()._field_Kind+=jule::Str("=", 1);
		return;;
	};
	_1e6a76808_assignTypeChecker _130617_checker = _1e6a76808_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_124017_l.get()._field_Kind, ._field_d=_125717_r, ._field_errorToken=_123942_a.get()._field_Setter};;
	if (_1e6a77980_check(&_130617_checker)) {
		_128317_rm.get()._field_Model=_125717_r.get()._field_Model;
		_127917_lm.get()._field_Model=_124017_l.get()._field_Model;
	};
}



inline void _1e6a0d75c_processEndPartOfMultiAssign(_1e6a09505_scopeChecker* _self_, jule::Ptr<_1e6a081e6_MultiAssign> _131850_st, jule::Ptr<_1e5d636d9_AssignSt> _131913_a, jule::Ptr<_1e5d6319a_AssignLeft> _131931_lexpr, jule::Ptr<_1e6a8ac6d_Data> _131955_l, jule::Ptr<_1e6a8ac6d_Data> _131969_r) {
	if (_1e4716049_IsIgnoreIdent(_131931_lexpr.get()._field_Ident)) {
		if (_1e6ab7c23_Void(_131969_r.get()._field_Kind.ptr())) {
			_1e6a25103_pushErr((*_self_)._field_s.ptr(), _131913_a.get()._field_Right.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_131850_st.get()._field_L = jule::alloc_for_append(_131850_st.get()._field_L,1);_131850_st.get()._field_L.__push(nullptr);;
		return;;
	};
	if ((_131913_a.get()._field_Declarative && _1e6a0d3b6_isNewAssignIdent(&(*_self_), _131931_lexpr.get()._field_Ident))) {
		if (_1e6a0aeda_isDuplicatedIdent(&(*_self_), 0LLU,_131931_lexpr.get()._field_Ident)) {
			_1e6a25103_pushErr((*_self_)._field_s.ptr(), _131931_lexpr.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_131931_lexpr.get()._field_Ident)}));
			_1e6a25422_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
			_1e6a0a539_stop(&(*_self_));
			return;;
		};
		jule::Ptr<_1e6a3dd20_Var> _133721_v = jule::new_ptr<_1e6a3dd20_Var>(_1e6a3dd20_Var{._field_Scope=(*_self_)._field_scope, ._field_Token=_131931_lexpr.get()._field_Token, ._field_Ident=_131931_lexpr.get()._field_Ident, ._field_Mutable=_131931_lexpr.get()._field_Mutable, ._field_Reference=_131931_lexpr.get()._field_Reference, ._field_Value=jule::new_ptr<_1e6a8bce6_Value>(_1e6a8bce6_Value{._field_Expr=_131913_a.get()._field_Right, ._field_Data=_131969_r}), });;
		_1e6a36565_checkVar((*_self_)._field_s, _133721_v);
		_131850_st.get()._field_L = jule::alloc_for_append(_131850_st.get()._field_L,1);_131850_st.get()._field_L.__push(static_cast<jule::Any>(_133721_v));;
		(*_self_)._field_table.get()._field_Vars = jule::alloc_for_append((*_self_)._field_table.get()._field_Vars,1);(*_self_)._field_table.get()._field_Vars.__push(_133721_v);;
		(*_self_)._field_scope.get()._field_Stmts = jule::alloc_for_append((*_self_)._field_scope.get()._field_Stmts,1);(*_self_)._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_133721_v));;
		return;;
	};
	if ((_131931_lexpr.get()._field_Mutable || _131931_lexpr.get()._field_Reference)) {
		_1e6a25103_pushErr((*_self_)._field_s.ptr(), _131931_lexpr.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_131931_lexpr.get()._field_Ident)}));
		_1e6a25422_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((!(_1e5eb7662_checkAssign((*_self_)._field_s,_131955_l,_131969_r,_131913_a.get()._field_Setter)))) {
		return;;
	};
	;
	_1e6a2d89d_checkValidityForInitExpr((*_self_)._field_s, _131955_l.get()._field_Mutable,false,_131955_l.get()._field_Kind,_131969_r,_131913_a.get()._field_Setter);
	_1e6a76808_assignTypeChecker _137217_checker = _1e6a76808_assignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_131955_l.get()._field_Kind, ._field_d=_131969_r, ._field_errorToken=_131913_a.get()._field_Setter};;
	_1e6a77980_check(&_137217_checker);
	_131850_st.get()._field_L = jule::alloc_for_append(_131850_st.get()._field_L,1);_131850_st.get()._field_L.__push(_131955_l.get()._field_Model);;
}



inline void _1e6a0d88e_checkRetMultiAssign(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Ptr<_1e5d636d9_AssignSt>& _138344_a) {
	jule::Ptr<_1e6a8ac6d_Data> _138417_rd = _1e6aa832e_evalExpr(_1e6a2a669_eval(_self_.get()._field_s, jule::Trait<_1e6ad2600_Lookup>(_self_, 0)), _138344_a.get()._field_Right);;
	if ((_138417_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1e6a8ac6d_Data>> _138917_r = _1e5eb3152_getDatasFromTupleData(_138417_rd);;
	{
		
		if ((_138344_a.get()._field_Left.len() > _138917_r.len())) {
			_case_begin_1b23e3b5a:;
			{
				_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _138344_a.get()._field_Setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((_138344_a.get()._field_Left.len() < _138917_r.len())) {
			_case_begin_1b23e3bd2:;
			{
				_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _138344_a.get()._field_Setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1b23e3330:;
	};
	jule::Ptr<_1e6a081e6_MultiAssign> _140017_st = jule::new_ptr<_1e6a081e6_MultiAssign>(_1e6a081e6_MultiAssign{._field_R=_138417_rd.get()._field_Model});;
	if ((_1e6aba83b_Tup(_138417_rd.get()._field_Kind.ptr()) == nullptr)) {
		_140017_st.get()._field_R=static_cast<jule::Any>(jule::new_ptr<_1e5e17c55_TupleExprModel>(_1e5e17c55_TupleExprModel{._field_Datas=_138917_r}));
	};
	{
		auto &expr = _138344_a.get()._field_Left;
		auto it = expr.begin();
		_iter_begin_1b23e68a5:;
		if (it != expr.end()) {
			jule::I64 _140813_i = it - expr.begin();
			{
				jule::Ptr<_1e5d6319a_AssignLeft> _140921_lexpr = _138344_a.get()._field_Left[_140813_i];;
				jule::Ptr<_1e6a8ac6d_Data> _141021_l = nullptr;;
				if (((!(_1e4716049_IsIgnoreIdent(_140921_lexpr.get()._field_Ident))) && ((!(_138344_a.get()._field_Declarative)) || (!(_1e6a0d3b6_isNewAssignIdent(_self_.ptr(), _140921_lexpr.get()._field_Ident)))))) {
					_141021_l=_1e6aa832e_evalExpr(_1e6a2a669_eval(_self_.get()._field_s, jule::Trait<_1e6ad2600_Lookup>(_self_, 0)), _140921_lexpr.get()._field_Expr);
					if ((_141021_l == nullptr)) {
						goto _iter_next_1b23e68a5;
					};
				};
				_1e6a0d75c_processEndPartOfMultiAssign(_self_.ptr(), _140017_st,_138344_a,_140921_lexpr,_141021_l,_138917_r[_140813_i]);
			}
			_iter_next_1b23e68a5:;
			++it;
			_140813_i++;
			goto _iter_begin_1b23e68a5;
		}
		_iter_end_1b23e68a5:;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_140017_st));;
}



inline void _1e6a0d9c1_checkMultiAssign(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Ptr<_1e5d636d9_AssignSt>& _142641_a) {
	{
		auto &_match_expr{ _142641_a.get()._field_Right.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e5d5d250_FnCallExpr>>()) {
			_case_begin_1b23ea8ba:;
			{
				_1e6a0d88e_checkRetMultiAssign(_self_, _142641_a);
				return;;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d5a6c0_UnsafeExpr>>()) {
			_case_begin_1b23ea942:;
			{
				{
					auto &_match_expr{ _142641_a.get()._field_Right.get()._field_Kind.operator jule::Ptr<_1e5d5a6c0_UnsafeExpr>().get()._field_Expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_1e5d5d250_FnCallExpr>>()) {
						_case_begin_1b23ebc1d:;
						{
							_1e6a0d88e_checkRetMultiAssign(_self_, _142641_a);
							return;;
						}
					}
					_match_end_1b23ebb96:;
				};
			}
		}
		_match_end_1b23ea1b1:;
	};
	jule::Slice<jule::Any> _143917_right = _1e5eb609a_getExprModels(_142641_a.get()._field_Right.get()._field_Kind);;
	{
		
		if ((_142641_a.get()._field_Left.len() > _143917_right.len())) {
			_case_begin_1b23eca43:;
			{
				_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _142641_a.get()._field_Setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((_142641_a.get()._field_Left.len() < _143917_right.len())) {
			_case_begin_1b23ecaba:;
			{
				_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _142641_a.get()._field_Setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1b23ec900:;
	};
	jule::Ptr<_1e5e17c55_TupleExprModel> _145017_rightTuple = jule::new_ptr<_1e5e17c55_TupleExprModel>();;
	jule::Ptr<_1e6a081e6_MultiAssign> _145217_st = jule::new_ptr<_1e6a081e6_MultiAssign>(_1e6a081e6_MultiAssign{._field_R=static_cast<jule::Any>(_145017_rightTuple)});;
	{
		auto &expr = _142641_a.get()._field_Left;
		auto it = expr.begin();
		_iter_begin_1b2400392:;
		if (it != expr.end()) {
			jule::I64 _145613_i = it - expr.begin();
			{
				jule::Ptr<_1e5d6319a_AssignLeft> _145721_lexpr = _142641_a.get()._field_Left[_145613_i];;
				jule::Ptr<_1e6a8ac6d_Data> _145821_l = nullptr;;
				if (((!(_1e4716049_IsIgnoreIdent(_145721_lexpr.get()._field_Ident))) && ((!(_142641_a.get()._field_Declarative)) || (!(_1e6a0d3b6_isNewAssignIdent(_self_.ptr(), _145721_lexpr.get()._field_Ident)))))) {
					_145821_l=_1e6aa832e_evalExpr(_1e6a2a669_eval(_self_.get()._field_s, jule::Trait<_1e6ad2600_Lookup>(_self_, 0)), _145721_lexpr.get()._field_Expr);
					if ((_145821_l == nullptr)) {
						goto _iter_next_1b2400392;
					};
				};
				jule::Ptr<_1e5d58e82_Expr> _146821_expr = jule::new_ptr<_1e5d58e82_Expr>(_1e5d58e82_Expr{._field_Token=_142641_a.get()._field_Right.get()._field_Token, ._field_Kind=_143917_right[_145613_i]});;
				jule::Ptr<_1e6a8c7db_Eval> _147221_eval = nullptr;;
				if ((_145821_l != nullptr)) {
					_147221_eval=_1e6a2a35b_evalp(_self_.get()._field_s, jule::Trait<_1e6ad2600_Lookup>(_self_, 0),_145821_l.get()._field_Kind);
				} else {
					_147221_eval=_1e6a2a669_eval(_self_.get()._field_s, jule::Trait<_1e6ad2600_Lookup>(_self_, 0));
				};
				jule::Ptr<_1e6a8ac6d_Data> _147821_r = _1e6aa832e_evalExpr(_147221_eval, _146821_expr);;
				if ((_147821_r == nullptr)) {
					goto _iter_next_1b2400392;
				};
				_145017_rightTuple.get()._field_Datas = jule::alloc_for_append(_145017_rightTuple.get()._field_Datas,1);_145017_rightTuple.get()._field_Datas.__push(_147821_r);;
				_1e6a0d75c_processEndPartOfMultiAssign(_self_.ptr(), _145217_st,_142641_a,_145721_lexpr,_145821_l,_147821_r);
			}
			_iter_next_1b2400392:;
			++it;
			_145613_i++;
			goto _iter_begin_1b2400392;
		}
		_iter_end_1b2400392:;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_145217_st));;
}



inline void _1e6a0db03_checkAssignSt(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Ptr<_1e5d636d9_AssignSt> _149137_a) {
	{
		
		if (_1e47180e5_IsPostfixOp(_149137_a.get()._field_Setter.get()._field_Kind)) {
			_case_begin_1b2406e9d:;
			{
				_1e6a0d284_checkPostfix(_self_, _149137_a);
			}
		}
		else if (((_149137_a.get()._field_Left.len() == 1LL) && (!(_149137_a.get()._field_Declarative)))) {
			_case_begin_1b2406b6d:;
			{
				_1e6a0d62a_checkSingleAssign(_self_, _149137_a);
			}
		}
		else {
			_case_begin_1b2406b07:;
			{
				_1e6a0d9c1_checkMultiAssign(_self_, _149137_a);
			}
		}
		_match_end_1b2406596:;
	};
}



inline jule::Ptr<_1e6a06700_Scope> _1e6a0dc35_checkCaseScope(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Ptr<_1e6a08933_Case>& _150235_c, jule::Ptr<_1e5d64c7e_ScopeTree>& _150250_tree) {
	jule::Ptr<_1e6a09505_scopeChecker> _150317_ssc = _1e6a12aa2_newChildChecker(_self_);;
	_150317_ssc.get()._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_150235_c));
	return _1e6a0b5e5_checkChildSc(_self_, _150250_tree,_150317_ssc);
}



inline jule::Ptr<_1e6a08933_Case> _1e6a0dd67_checkCase(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Ptr<_1e6a083d3_Match> _150833_m, jule::I64 _150844_i, jule::Ptr<_1e5d6b538_Case> _150856_c, jule::Ptr<_1e6a8ac6d_Data> _150875_expr) {
	jule::Ptr<_1e6a08933_Case> _150917_case = _150833_m.get()._field_Cases[_150844_i];;
	_150917_case.get()._field_Exprs=jule::Slice<jule::Ptr<_1e6a8ac6d_Data>>::alloc(0LL,_150856_c.get()._field_Exprs.len());
	jule::Bool _151117_genericMatched = false;;
	jule::Ptr<_1e6a8c7db_Eval> _151217_eval = _1e6a2a669_eval(_self_.get()._field_s, jule::Trait<_1e6ad2600_Lookup>(_self_, 0));;
	{
		auto &expr = _150856_c.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1b240be4d:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d58e82_Expr> _151321_e = *it;
			{
				jule::Ptr<_1e6a8ac6d_Data> _151421_d = _1e6aa7c13_evalExprKind(_151217_eval, _151321_e.get()._field_Kind);;
				if ((_151421_d == nullptr)) {
					goto _iter_next_1b240be4d;
				};
				if (_150833_m.get()._field_TypeMatch) {
					_150917_case.get()._field_Exprs = jule::alloc_for_append(_150917_case.get()._field_Exprs,1);_150917_case.get()._field_Exprs.__push(_151421_d);;
					if ((_1e5ea5397_countMatchType(_150833_m,_151421_d.get()._field_Kind) > 1LL)) {
						_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _151321_e.get()._field_Token,jule::Str("duplicated pattern: type @ is already matched", 45),jule::Slice<jule::Any>::make({jule::Any(_1e6ab6e86_Str(_151421_d.get()._field_Kind.ptr()))}));
					};
					if (_150875_expr.get()._field_Kind.get()._field_Generic) {
						_151117_genericMatched=(_151117_genericMatched || _1e6ab7294_Equals(_150875_expr.get()._field_Kind, _151421_d.get()._field_Kind));
					} else {
						if ((_1e6ab964d_TypeEnum(_150875_expr.get()._field_Kind.ptr()) != nullptr)) {
							_1e6a2b0b5_checkTypeCompatibility(_self_.get()._field_s, _150875_expr.get()._field_Kind,_151421_d.get()._field_Kind,_151321_e.get()._field_Token);
						} else {
							jule::Ptr<_1e5e2e4db_Trait> _152929_trt = _1e6aba363_Trait(_150875_expr.get()._field_Kind.ptr());;
							if ((_152929_trt != nullptr)) {
								_1e6a2b0b5_checkTypeCompatibility(_self_.get()._field_s, _150875_expr.get()._field_Kind,_151421_d.get()._field_Kind,_151321_e.get()._field_Token);
							};
						};
					};
					goto _iter_next_1b240be4d;
				};
				if (_151421_d.get()._field_Decl) {
					_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _151321_e.get()._field_Token,jule::Str("expecting expression, found type declaration", 44),jule::Slice<jule::Any>());
					_1e6a25422_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49),jule::Slice<jule::Any>());
					goto _iter_next_1b240be4d;
				};
				_150917_case.get()._field_Exprs = jule::alloc_for_append(_150917_case.get()._field_Exprs,1);_150917_case.get()._field_Exprs.__push(_151421_d);;
				_1e6a76808_assignTypeChecker _154721_checker = _1e6a76808_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_150875_expr.get()._field_Kind, ._field_d=_151421_d, ._field_errorToken=_151321_e.get()._field_Token};;
				_1e6a77980_check(&_154721_checker);
			}
			_iter_next_1b240be4d:;
			++it;
			goto _iter_begin_1b240be4d;
		}
		_iter_end_1b240be4d:;
	};
	if ((((!(_150833_m.get()._field_TypeMatch)) || (!(_150875_expr.get()._field_Kind.get()._field_Generic))) || _151117_genericMatched)) {
		_150917_case.get()._field_Scope=_1e6a0dc35_checkCaseScope(_self_, _150917_case,_150856_c.get()._field_Scope);
	};
	return _150917_case;
}



inline void _1e6a0e087_checkCases(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Ptr<_1e5d6bc0e_MatchCase>& _156135_m, jule::Ptr<_1e6a083d3_Match> _156154_rm, jule::Ptr<_1e6a8ac6d_Data> _156170_expr) {
	_156154_rm.get()._field_Cases=jule::Slice<jule::Ptr<_1e6a08933_Case>>::alloc(0LL,_156135_m.get()._field_Cases.len());
	{
		auto &expr = _156135_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1b24155e9:;
		if (it != expr.end()) {
			jule::I64 _156313_i = it - expr.begin();
			{
				jule::Ptr<_1e6a08933_Case> _156421_case = jule::new_ptr<_1e6a08933_Case>(_1e6a08933_Case{._field_Owner=_156154_rm, });;
				if ((_156313_i > 0LL)) {
					_156154_rm.get()._field_Cases[(_156313_i - 1LL)].get()._field_Next=_156421_case;
				};
				_156154_rm.get()._field_Cases = jule::alloc_for_append(_156154_rm.get()._field_Cases,1);_156154_rm.get()._field_Cases.__push(_156421_case);;
			}
			_iter_next_1b24155e9:;
			++it;
			_156313_i++;
			goto _iter_begin_1b24155e9;
		}
		_iter_end_1b24155e9:;
	};
	if (((_156154_rm.get()._field_Default != nullptr) && (_156135_m.get()._field_Cases.len() > 0LL))) {
		_156154_rm.get()._field_Cases[(_156154_rm.get()._field_Cases.len() - 1LL)].get()._field_Next=_156154_rm.get()._field_Default;
	};
	{
		auto &expr = _156135_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1b2418b6e:;
		if (it != expr.end()) {
			jule::I64 _157714_i = it - expr.begin();
			jule::Ptr<_1e5d6b538_Case> _157721_c = *it;
			{
				_1e6a0dd67_checkCase(_self_, _156154_rm,_157714_i,_157721_c,_156170_expr);
			}
			_iter_next_1b2418b6e:;
			++it;
			_157714_i++;
			goto _iter_begin_1b2418b6e;
		}
		_iter_end_1b2418b6e:;
	};
}



inline jule::Ptr<_1e6a08933_Case> _1e6a0e43e_checkDefault(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Ptr<_1e6a083d3_Match> _158236_m, jule::Ptr<_1e5d6a46b_Else> _158251_d) {
	jule::Ptr<_1e6a08933_Case> _158317_def = jule::new_ptr<_1e6a08933_Case>(_1e6a08933_Case{._field_Owner=_158236_m, });;
	_158317_def.get()._field_Scope=_1e6a0dc35_checkCaseScope(_self_, _158317_def,_158251_d.get()._field_Scope);
	return _158317_def;
}



inline void _1e6a0e6b4_checkComptimePanic(_1e6a09505_scopeChecker* _self_, jule::Ptr<_1e6a06700_Scope>& _159038_s) {
	if ((_159038_s.get()._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _159513_stmt = _159038_s.get()._field_Stmts[0LL];;
	{
		auto &_match_expr{ _159513_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1e6a8ac6d_Data>>()) {
			_case_begin_1b241be80:;
			{
				jule::Ptr<_1e6a8ac6d_Data> _159817_d = _159513_stmt.operator jule::Ptr<_1e6a8ac6d_Data>();;
				{
					auto &_match_expr{ _159817_d.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_1e5e186e5_BuiltinPanicCallExprModel>>()) {
						_case_begin_1b241ccb6:;
						{
							jule::Ptr<_1e5e186e5_BuiltinPanicCallExprModel> _160121_m = _159817_d.get()._field_Model.operator jule::Ptr<_1e5e186e5_BuiltinPanicCallExprModel>();;
							{
								auto &_match_expr{ _160121_m.get()._field_Expr };
								
								if (_match_expr.type_is<jule::Ptr<_1e5da6ba0_Const>>()) {
									_case_begin_1b241dca6:;
									{
										jule::Ptr<_1e5da6ba0_Const> _160425_c = _160121_m.get()._field_Expr.operator jule::Ptr<_1e5da6ba0_Const>();;
										if (_1e5e1090c_IsStr(_160425_c.ptr())) {
											_1e6a25103_pushErr((*_self_)._field_s.ptr(), (*_self_)._field_calledFrom,jule::Str("compile-time panic: @", 21),jule::Slice<jule::Any>::make({jule::Any(_1e5e0d564_ReadStr(_160425_c.ptr()))}));
										};
									}
								}
								_match_end_1b241dc0c:;
							};
						}
					}
					_match_end_1b241cb73:;
				};
			}
		}
		_match_end_1b241be2a:;
	};
}



inline void _1e6a0e9d3_pushTypeMatch(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Ptr<_1e6a083d3_Match> _161337_tm, jule::Ptr<_1e5d6bc0e_MatchCase>& _161354_m) {
	if (_161337_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic) {
		{
			auto &expr = _161337_tm.get()._field_Cases;
			auto it = expr.begin();
			_iter_begin_1b241d26c:;
			if (it != expr.end()) {
				jule::Ptr<_1e6a08933_Case> _161725_c = *it;
				{
					if ((_161725_c.get()._field_Scope != nullptr)) {
						_1e6a0e6b4_checkComptimePanic(_self_.ptr(), _161725_c.get()._field_Scope);
						_161337_tm.get()._field_Default=_161725_c;
						_161337_tm.get()._field_Cases=nullptr;
						goto _julec_label_push;
					};
				}
				_iter_next_1b241d26c:;
				++it;
				goto _iter_begin_1b241d26c;
			}
			_iter_end_1b241d26c:;
		};
		if ((_161354_m.get()._field_Default != nullptr)) {
			_161337_tm.get()._field_Cases=nullptr;
			_161337_tm.get()._field_Default=_1e6a0e43e_checkDefault(_self_, _161337_tm,_161354_m.get()._field_Default);
			if ((_161337_tm.get()._field_Default != nullptr)) {
				_1e6a0e6b4_checkComptimePanic(_self_.ptr(), _161337_tm.get()._field_Default.get()._field_Scope);
			};
		};
	};
	_julec_label_push:;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_161337_tm));;
}



inline void _1e6a0ec58_checkTypeMatch(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Ptr<_1e5d6bc0e_MatchCase>& _163739_m) {
	jule::Ptr<_1e6a8ac6d_Data> _163817_d = _1e6aa8021_eval(_1e6a2a669_eval(_self_.get()._field_s, jule::Trait<_1e6ad2600_Lookup>(_self_, 0)), _163739_m.get()._field_Expr);;
	if ((_163817_d == nullptr)) {
		return;;
	};
	if (((!(_163817_d.get()._field_Kind.get()._field_Generic)) && (!(((((_1e6ab8b9c_Prim(_163817_d.get()._field_Kind.ptr()) != nullptr) && _1e6abea0a_IsAny(_1e6ab8b9c_Prim(_163817_d.get()._field_Kind.ptr()).ptr())) || (_1e6aba363_Trait(_163817_d.get()._field_Kind.ptr()) != nullptr)) || (_1e6ab964d_TypeEnum(_163817_d.get()._field_Kind.ptr()) != nullptr)))))) {
		_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _163739_m.get()._field_Expr.get()._field_Token,jule::Str("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e6a083d3_Match> _164917_tm = jule::new_ptr<_1e6a083d3_Match>(_1e6a083d3_Match{._field_Expr=_163817_d, ._field_TypeMatch=true, });;
	if (((!(_164917_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic)) && (_163739_m.get()._field_Default != nullptr))) {
		_164917_tm.get()._field_Default=_1e6a0e43e_checkDefault(_self_, _164917_tm,_163739_m.get()._field_Default);
	};
	_1e6a0e087_checkCases(_self_, _163739_m,_164917_tm,_163817_d);
	_1e6a0e9d3_pushTypeMatch(_self_, _164917_tm,_163739_m);
}



inline void _1e6a0eecd_checkCommonMatch(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Ptr<_1e5d6bc0e_MatchCase>& _166241_m) {
	jule::Ptr<_1e6a8ac6d_Data> _166317_d = nullptr;;
	if ((_166241_m.get()._field_Expr == nullptr)) {
		_166317_d=jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_Constant=static__1e5e0bee1_NewBool(true)});
		_166317_d.get()._field_Model=static_cast<jule::Any>(_166317_d.get()._field_Constant);
	} else {
		_166317_d=_1e6aa832e_evalExpr(_1e6a2a669_eval(_self_.get()._field_s, jule::Trait<_1e6ad2600_Lookup>(_self_, 0)), _166241_m.get()._field_Expr);
		if ((_166317_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1e6a083d3_Match> _167717_mc = jule::new_ptr<_1e6a083d3_Match>(_1e6a083d3_Match{._field_Expr=_166317_d, });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_167717_mc));;
	if ((_166241_m.get()._field_Default != nullptr)) {
		_167717_mc.get()._field_Default=_1e6a0e43e_checkDefault(_self_, _167717_mc,_166241_m.get()._field_Default);
	};
	_1e6a0e087_checkCases(_self_, _166241_m,_167717_mc,_166317_d);
}



inline void _1e6a10253_checkMatch(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Ptr<_1e5d6bc0e_MatchCase> _168934_m) {
	if (_168934_m.get()._field_TypeMatch) {
		_1e6a0ec58_checkTypeMatch(_self_, _168934_m);
		return;;
	};
	_1e6a0eecd_checkCommonMatch(_self_, _168934_m);
}



inline void _1e6a104c8_checkFall(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Ptr<_1e5d62a90_FallSt> _169729_f) {
	if ((((_self_.get()._field_cse == 0LLU) || ((_self_.get()._field_scope.get()._field_Stmts.len() + 1LL) < _self_.get()._field_scope.get()._field_Stmts.len())) || _1e6a0a79d_isDeferred(_self_))) {
		_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _169729_f.get()._field_Token,jule::Str("fall keyword can only useable at end of the case scopes", 55),jule::Slice<jule::Any>());
		return;;
	};
	_1e6a08933_Case* _170517_case = ((_1e6a08933_Case*)(_self_.get()._field_cse));;
	if ((_170517_case->_field_Next == nullptr)) {
		_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _169729_f.get()._field_Token,jule::Str("fall cannot useable at final case", 33),jule::Slice<jule::Any>());
		_1e6a25422_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21),jule::Slice<jule::Any>());
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(jule::new_ptr<_1e6a08c52_FallSt>(_1e6a08c52_FallSt{._field_DestCase=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_170517_case->_field_Next))})));;
}



inline jule::Ptr<_1e6a07756_BreakSt> _1e6a107d6_checkBreakWithLabel(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Ptr<_1e5d69789_BreakSt> _171739_b) {
	jule::Ptr<_1e6a07756_BreakSt> _171817_brk = _1e6a10ae4_checkPlainBreak(_self_, _171739_b);;
	if ((_171817_brk == nullptr)) {
		return nullptr;
	};
	_171817_brk.get()._field_It=0LLU;
	_171817_brk.get()._field_Mtch=0LLU;
	jule::Ptr<_1e6a0912b_scopeLabel> _172817_label = _1e5ea351b_findLabelParent(_171739_b.get()._field_Label.get()._field_Kind,_self_.get()._field_parent);;
	if ((_172817_label == nullptr)) {
		_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _171739_b.get()._field_Label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_171739_b.get()._field_Label.get()._field_Kind)}));
		return nullptr;
	};
	_172817_label.get()._field_used=true;
	if (((_172817_label.get()._field_pos + 1LL) >= _172817_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _171739_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171739_b.get()._field_Label.get()._field_Kind)}));
		return nullptr;
	};
	jule::I64 _174113_i = (_172817_label.get()._field_pos + 1LL);;
	if ((_174113_i >= _172817_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _171739_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171739_b.get()._field_Label.get()._field_Kind)}));
	} else {
		jule::Any _174521_st = _172817_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_174113_i];;
		{
			auto &_match_expr{ _174521_st };
			
			if (_match_expr.type_is<jule::Ptr<_1e6a06ea3_InfIter>>()) {
				_case_begin_1b2436dbd:;
				{
					_171817_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174521_st.operator jule::Ptr<_1e6a06ea3_InfIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1e6a0737c_RangeIter>>()) {
				_case_begin_1b243a421:;
				{
					_171817_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174521_st.operator jule::Ptr<_1e6a0737c_RangeIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1e6a07190_WhileIter>>()) {
				_case_begin_1b243a487:;
				{
					_171817_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174521_st.operator jule::Ptr<_1e6a07190_WhileIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1e6a083d3_Match>>()) {
				_case_begin_1b243a4ed:;
				{
					_171817_brk.get()._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174521_st.operator jule::Ptr<_1e6a083d3_Match>()));
				}
			}
			else {
				_case_begin_1b243a2bc:;
				{
					_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _171739_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171739_b.get()._field_Label.get()._field_Kind)}));
				}
			}
			_match_end_1b243a1e0:;
		};
	};
	if ((_171817_brk.get()._field_It != 0LLU)) {
		if ((!(_1e6a0cb79_checkValidBreakLabel(_self_, _171817_brk.get()._field_It)))) {
			_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _171739_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171739_b.get()._field_Label.get()._field_Kind)}));
		};
	};
	if ((_171817_brk.get()._field_Mtch != 0LLU)) {
		if ((!(_1e6a0cb79_checkValidBreakLabel(_self_, _171817_brk.get()._field_Mtch)))) {
			_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _171739_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171739_b.get()._field_Label.get()._field_Kind)}));
		};
	};
	return _171817_brk;
}



inline jule::Ptr<_1e6a07756_BreakSt> _1e6a10ae4_checkPlainBreak(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Ptr<_1e5d69789_BreakSt> _177535_b) {
	if (_1e6a0a79d_isDeferred(_self_)) {
		_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _177535_b.get()._field_Token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e6a09505_scopeChecker> _178117_scope = _self_;;
	_julec_label_iter:;
	{
		
		if (((((_178117_scope.get()._field_it == 0LLU) && (_178117_scope.get()._field_cse == 0LLU)) && (_178117_scope.get()._field_parent != nullptr)) && (_178117_scope.get()._field_owner == nullptr))) {
			_case_begin_1b244179b:;
			{
				_178117_scope=_178117_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_178117_scope.get()._field_it != 0LLU)) {
			_case_begin_1b2441823:;
			{
				return jule::new_ptr<_1e6a07756_BreakSt>(_1e6a07756_BreakSt{._field_It=_178117_scope.get()._field_it, });
			}
		}
		else if ((_178117_scope.get()._field_cse != 0LLU)) {
			_case_begin_1b244189a:;
			{
				return jule::new_ptr<_1e6a07756_BreakSt>(_1e6a07756_BreakSt{._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(((_1e6a08933_Case*)(_178117_scope.get()._field_cse))->_field_Owner))});
			}
		}
		_match_end_1b24416d0:;
	};
	_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _177535_b.get()._field_Token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _1e6a10d69_checkBreak(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Ptr<_1e5d69789_BreakSt> _179730_b) {
	if ((_179730_b.get()._field_Label != nullptr)) {
		jule::Ptr<_1e6a07756_BreakSt> _179921_brk = _1e6a107d6_checkBreakWithLabel(_self_, _179730_b);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_179921_brk));;
		return;;
	};
	jule::Ptr<_1e6a07756_BreakSt> _180417_brk = _1e6a10ae4_checkPlainBreak(_self_, _179730_b);;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_180417_brk));;
}



inline void _1e6a110de_checkRet(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Ptr<_1e5d67b0b_RetSt> _180832_r) {
	if (_1e6a0a79d_isDeferred(_self_)) {
		_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _180832_r.get()._field_Token,jule::Str("deferred scopes are not supports return statements", 50),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e6a08e3e_RetSt> _181317_rt = jule::new_ptr<_1e6a08e3e_RetSt>(_1e6a08e3e_RetSt{._field_Func=_1e6a0a8d0_getRoot(_self_).get()._field_owner, });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_181317_rt));;
	jule::Ptr<_1e6a84162_retTypeChecker> _181817_rtc = jule::new_ptr<_1e6a84162_retTypeChecker>(_1e6a84162_retTypeChecker{._field_sc=_self_, ._field_f=_181317_rt.get()._field_Func, ._field_errorToken=_180832_r.get()._field_Token, });;
	jule::Bool _182313_ok = _1e6a85053_check(_181817_rtc.ptr(), _180832_r.get()._field_Expr);;
	if ((!(_182313_ok))) {
		return;;
	};
	if (((_180832_r.get()._field_Expr == nullptr) && (_181817_rtc.get()._field_vars.len() == 0LL))) {
		return;;
	};
	_181317_rt.get()._field_Vars=_181817_rtc.get()._field_vars;
	if ((_180832_r.get()._field_Expr != nullptr)) {
		_181317_rt.get()._field_Expr=_181817_rtc.get()._field_model;
	};
}



inline void _1e6a11364_checkUseExpr(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Ptr<_1e5d59823_UseExpr> _183932_ue) {
	if ((_self_.get()._field_result == nullptr)) {
		_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _183932_ue.get()._field_Token,jule::Str("use expressions cannot useable out of exceptional handler scopes", 64),jule::Slice<jule::Any>());
		return;;
	};
	if (_1e6a0a79d_isDeferred(_self_)) {
		_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _183932_ue.get()._field_Token,jule::Str("use expressions cannot useable in deferred scopes", 49),jule::Slice<jule::Any>());
	};
	if (((_self_.get()._field_i + 1LL) < _self_.get()._field_tree.get()._field_Stmts.len())) {
		_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _183932_ue.get()._field_Token,jule::Str("use expressions must be last statement of scope", 47),jule::Slice<jule::Any>());
	};
}



inline void _1e6a115d9_checkNode(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Any& _185534_node) {
	{
		auto &_match_expr{ _185534_node };
		
		if (_match_expr.type_is<jule::Ptr<_1e5d64c7e_ScopeTree>>()) {
			_case_begin_1b244ed2b:;
			{
				_1e6a0b859_checkAnonScope(_self_, _185534_node.operator jule::Ptr<_1e5d64c7e_ScopeTree>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d67754_VarDecl>>()) {
			_case_begin_1b244e820:;
			{
				_1e6a0b11c_checkVarDecl(_self_, _185534_node.operator jule::Ptr<_1e5d67754_VarDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d6b0b5_TypeAliasDecl>>()) {
			_case_begin_1b244ec2c:;
			{
				_1e6a0b24e_checkTypeAliasDecl(_self_, _185534_node.operator jule::Ptr<_1e5d6b0b5_TypeAliasDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d58e82_Expr>>()) {
			_case_begin_1b245006d:;
			{
				_1e6a0babd_checkExpr(_self_, _185534_node.operator jule::Ptr<_1e5d58e82_Expr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d5aa77_CoExpr>>()) {
			_case_begin_1b2450227:;
			{
				_1e6a0bc00_checkCoExpr(_self_, _185534_node.operator jule::Ptr<_1e5d5aa77_CoExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d6a8de_Conditional>>()) {
			_case_begin_1b245028d:;
			{
				_1e6a0c096_checkConditional(_self_, _185534_node.operator jule::Ptr<_1e5d6a8de_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d6826b_Iter>>()) {
			_case_begin_1b2450304:;
			{
				_1e6a0c915_checkIter(_self_, _185534_node.operator jule::Ptr<_1e5d6826b_Iter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d69b41_ContSt>>()) {
			_case_begin_1b245036a:;
			{
				_1e6a0cddd_checkCont(_self_, _185534_node.operator jule::Ptr<_1e5d69b41_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d623ec_LabelSt>>()) {
			_case_begin_1b24503d1:;
			{
				_1e6a0d020_checkLabel(_self_, _185534_node.operator jule::Ptr<_1e5d623ec_LabelSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d627a4_GotoSt>>()) {
			_case_begin_1b2450447:;
			{
				_1e6a0d152_pushGoto(_self_, _185534_node.operator jule::Ptr<_1e5d627a4_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d636d9_AssignSt>>()) {
			_case_begin_1b24504ad:;
			{
				_1e6a0db03_checkAssignSt(_self_, _185534_node.operator jule::Ptr<_1e5d636d9_AssignSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d6bc0e_MatchCase>>()) {
			_case_begin_1b2450524:;
			{
				_1e6a10253_checkMatch(_self_, _185534_node.operator jule::Ptr<_1e5d6bc0e_MatchCase>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d62a90_FallSt>>()) {
			_case_begin_1b245058a:;
			{
				_1e6a104c8_checkFall(_self_, _185534_node.operator jule::Ptr<_1e5d62a90_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d69789_BreakSt>>()) {
			_case_begin_1b2450601:;
			{
				_1e6a10d69_checkBreak(_self_, _185534_node.operator jule::Ptr<_1e5d69789_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d67b0b_RetSt>>()) {
			_case_begin_1b2450667:;
			{
				_1e6a110de_checkRet(_self_, _185534_node.operator jule::Ptr<_1e5d67b0b_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d59823_UseExpr>>()) {
			_case_begin_1b24506cd:;
			{
				_1e6a11364_checkUseExpr(_self_, _185534_node.operator jule::Ptr<_1e5d59823_UseExpr>());
			}
		}
		else {
			_case_begin_1b244e996:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1b244e8b9:;
	};
}



inline void _1e6a117b5_checkResult(jule::Ptr<_1e6a09505_scopeChecker> _self_) {
	_1e5d64674_Stmt _189517_stmt = _self_.get()._field_tree.get()._field_Stmts[(_self_.get()._field_tree.get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _189517_stmt._field_Data };
		
		if (_match_expr.type_is<jule::Ptr<_1e5d59823_UseExpr>>()) {
			_case_begin_1b245960a:;
			{
				jule::Ptr<_1e5d59823_UseExpr> _189821_ue = _189517_stmt._field_Data.operator jule::Ptr<_1e5d59823_UseExpr>();;
				jule::Ptr<_1e6a8ac6d_Data> _189921_d = _1e6aa832e_evalExpr(_1e6a2a669_eval(_self_.get()._field_s, jule::Trait<_1e6ad2600_Lookup>(_self_, 0)), _189821_ue.get()._field_Expr);;
				if ((_189921_d == nullptr)) {
					return;;
				};
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_189921_d));;
				jule::Ptr<_1e6a84162_retTypeChecker> _190421_rtc = jule::new_ptr<_1e6a84162_retTypeChecker>(_1e6a84162_retTypeChecker{._field_sc=_self_, ._field_types=_1e5e21401_Types(_self_.get()._field_result.ptr()), ._field_errorToken=_189821_ue.get()._field_Expr.get()._field_Token, });;
				_1e6a85053_check(_190421_rtc.ptr(), _189821_ue.get()._field_Expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d58e82_Expr>>()) {
			_case_begin_1b2459671:;
			{
				jule::Ptr<_1e5d58e82_Expr> _191121_expr = _189517_stmt._field_Data.operator jule::Ptr<_1e5d58e82_Expr>();;
				jule::Ptr<_1e6a8ac6d_Data> _191221_d = _1e6aa832e_evalExpr(_1e6a2a669_eval(_self_.get()._field_s, jule::Trait<_1e6ad2600_Lookup>(_self_, 0)), _191121_expr);;
				if ((_191221_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ _191221_d.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_1e5e19185_BuiltinErrorCallExprModel>>()) {
						_case_begin_1b245dd5c:;
						{
							jule::Ptr<_1e5e19185_BuiltinErrorCallExprModel> _191825_m = _191221_d.get()._field_Model.operator jule::Ptr<_1e5e19185_BuiltinErrorCallExprModel>();;
							_1e6a0b98b_processErrorCall(_self_, _191825_m,_191121_expr.get()._field_Token);
							_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_191221_d));;
						}
					}
					else {
						_case_begin_1b245dc19:;
						{
							return;;
						}
					}
					_match_end_1b245dbb4:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d627a4_GotoSt>>() || _match_expr.type_is<jule::Ptr<_1e5d69789_BreakSt>>() || _match_expr.type_is<jule::Ptr<_1e5d69b41_ContSt>>() || _match_expr.type_is<jule::Ptr<_1e5d67b0b_RetSt>>()) {
			_case_begin_1b2458cbe:;
			{
				_1e6a115d9_checkNode(_self_, _189517_stmt._field_Data);
			}
		}
		else {
			_case_begin_1b2458c58:;
			{
				_1e6a115d9_checkNode(_self_, _189517_stmt._field_Data);
				return;;
			}
		}
		_match_end_1b2458ad2:;
	};
	_self_.get()._field_result=nullptr;
}



inline void _1e6a11991_checkTree(jule::Ptr<_1e6a09505_scopeChecker> _self_) {
	_self_.get()._field_i=0LL;
	jule::I64 _194017_n = _self_.get()._field_tree.get()._field_Stmts.len();;
	if ((_self_.get()._field_result != nullptr)) {
		(_194017_n)--;
	};
	for (; (_self_.get()._field_i < _194017_n); (_self_.get()._field_i)++) {
		{
			_1e5d64674_Stmt _194821_stmt = _self_.get()._field_tree.get()._field_Stmts[_self_.get()._field_i];;
			_1e6a115d9_checkNode(_self_, _194821_stmt._field_Data);
			if (_1e6a0a66b_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_1b24622a0:;
	}
	_iter_end_1b24622a0:;;
	if (((_self_.get()._field_result != nullptr) && (_self_.get()._field_tree.get()._field_Stmts.len() != 0LL))) {
		_1e6a117b5_checkResult(_self_);
	};
}



inline void _1e6a11cb0_checkGoto(_1e6a09505_scopeChecker* _self_, jule::Ptr<_1e6a09318_scopeGoto>& _195933_gt, jule::Ptr<_1e6a0912b_scopeLabel>& _195954_label) {
	jule::Ptr<_1e6a09505_scopeChecker> _196017_gtsc = _195933_gt.get()._field_scope;;
	while (((_196017_gtsc.get()._field_childIndex - 1LL) > _195954_label.get()._field_scope.get()._field_childIndex)) {
		{
			_196017_gtsc=_196017_gtsc.get()._field_parent;
		}
	_iter_next_1b2465391:;
	}
	_iter_end_1b2465391:;;
	jule::I64 _196517_n = 0LL;;
	if ((_196017_gtsc.get()._field_scope == _195954_label.get()._field_scope.get()._field_scope)) {
		if ((_195933_gt.get()._field_pos > _195954_label.get()._field_pos)) {
			return;;
		};
		_196517_n=_195933_gt.get()._field_pos;
	};
	jule::I64 _197817_i = (_195954_label.get()._field_pos - 1LL);;
	if ((_196517_n == 0LL)) {
		{
			auto &expr = _195954_label.get()._field_scope.get()._field_scope.get()._field_Stmts;
			auto it = expr.begin();
			_iter_begin_1b246798c:;
			if (it != expr.end()) {
				jule::I64 _198117_j = it - expr.begin();
				jule::Any _198120_stmt = *it;
				{
					if (_1e5ea44d9_stmtIsGotoScope(_198120_stmt,_196017_gtsc.get()._field_scope)) {
						_196517_n=_198117_j;
						goto _iter_end_1b246798c;
					};
				}
				_iter_next_1b246798c:;
				++it;
				_198117_j++;
				goto _iter_begin_1b246798c;
			}
			_iter_end_1b246798c:;
		};
	};
	for (; (_197817_i >= _196517_n); (_197817_i)--) {
		{
			jule::Any _199121_stmt = _195954_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_197817_i];;
			if (_1e5ea1393_stmtIsDef(_199121_stmt)) {
				_1e6a25103_pushErr((*_self_)._field_s.ptr(), _195933_gt.get()._field_gt.get()._field_Token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>::make({jule::Any(_195933_gt.get()._field_gt.get()._field_Label.get()._field_Kind)}));
				return;;
			};
		}
	_iter_next_1b2467508:;
	}
	_iter_end_1b2467508:;;
}



inline void _1e6a11e8b_checkGotos(_1e6a09505_scopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_gotos));
		auto it = expr.begin();
		_iter_begin_1b24698e5:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a09318_scopeGoto> _200021_gt = *it;
			{
				jule::Ptr<_1e6a0912b_scopeLabel> _200121_label = _1e6a0ada8_findLabelAll(&(*_self_), _200021_gt.get()._field_gt.get()._field_Label.get()._field_Kind);;
				if ((_200121_label == nullptr)) {
					_1e6a25103_pushErr((*_self_)._field_s.ptr(), _200021_gt.get()._field_gt.get()._field_Token,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_200021_gt.get()._field_gt.get()._field_Label.get()._field_Kind)}));
					goto _iter_next_1b24698e5;
				};
				_200121_label.get()._field_used=true;
				_1e6a11cb0_checkGoto(&(*_self_), _200021_gt,_200121_label);
			}
			_iter_next_1b24698e5:;
			++it;
			goto _iter_begin_1b24698e5;
		}
		_iter_end_1b24698e5:;
	};
}



inline void _1e6a12167_checkLabels(_1e6a09505_scopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1b246cd8d:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a0912b_scopeLabel> _201316_l = *it;
			{
				if ((!(_201316_l.get()._field_used))) {
					_1e6a25103_pushErr((*_self_)._field_s.ptr(), _201316_l.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_201316_l.get()._field_label.get()._field_Ident)}));
				};
			}
			_iter_next_1b246cd8d:;
			++it;
			goto _iter_begin_1b246cd8d;
		}
		_iter_end_1b246cd8d:;
	};
}



inline void _1e6a12343_checkVars(_1e6a09505_scopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1b246d278:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a3dd20_Var> _202116_v = *it;
			{
				if (((((!(_202116_v.get()._field_Used)) && (!(_1e4716049_IsIgnoreIdent(_202116_v.get()._field_Ident)))) && (!(_1e47162e1_IsAnonIdent(_202116_v.get()._field_Ident)))) && (_202116_v.get()._field_Ident != jule::Str("self", 4)))) {
					_1e6a25103_pushErr((*_self_)._field_s.ptr(), _202116_v.get()._field_Token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_202116_v.get()._field_Ident)}));
				};
			}
			_iter_next_1b246d278:;
			++it;
			goto _iter_begin_1b246d278;
		}
		_iter_end_1b246d278:;
	};
}



inline void _1e6a1251e_checkAliases(_1e6a09505_scopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_1b2470005:;
		if (it != expr.end()) {
			jule::Ptr<_1e6ab5d97_TypeAlias> _202916_a = *it;
			{
				if ((((!(_202916_a.get()._field_Used)) && (!(_1e4716049_IsIgnoreIdent(_202916_a.get()._field_Ident)))) && (!(_1e47162e1_IsAnonIdent(_202916_a.get()._field_Ident))))) {
					_1e6a25103_pushErr((*_self_)._field_s.ptr(), _202916_a.get()._field_Token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_202916_a.get()._field_Ident)}));
				};
			}
			_iter_next_1b2470005:;
			++it;
			goto _iter_begin_1b2470005;
		}
		_iter_end_1b2470005:;
	};
}



inline void _1e6a1283d_check(jule::Ptr<_1e6a09505_scopeChecker> _self_, jule::Ptr<_1e5d64c7e_ScopeTree>& _203730_tree, jule::Ptr<_1e6a06700_Scope>& _203753_s) {
	_203753_s.get()._field_Deferred=_203730_tree.get()._field_Deferred;
	_203753_s.get()._field_Unsafety=_203730_tree.get()._field_Unsafety;
	jule::I64 _204113_errors = _self_.get()._field_s.get()._field_errors.len();;
	_self_.get()._field_tree=_203730_tree;
	_self_.get()._field_scope=_203753_s;
	_1e6a11991_checkTree(_self_);
	if ((_204113_errors == _self_.get()._field_s.get()._field_errors.len())) {
		_1e6a12343_checkVars(_self_.ptr());
		_1e6a1251e_checkAliases(_self_.ptr());
		if (_1e6a0a407_isRoot(_self_.ptr())) {
			_1e6a11e8b_checkGotos(_self_.ptr());
			_1e6a12167_checkLabels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_1e6a09505_scopeChecker> _1e6a12aa2_newChildChecker(jule::Ptr<_1e6a09505_scopeChecker> _self_) {
	jule::Ptr<_1e6a09505_scopeChecker> _206117_base = _1e5ea1ad0_newScopeCheckerBase(_self_.get()._field_s,nullptr);;
	_206117_base.get()._field_parent=_self_;
	_206117_base.get()._field_labels=_self_.get()._field_labels;
	_206117_base.get()._field_gotos=_self_.get()._field_gotos;
	_206117_base.get()._field_childIndex=static_cast<jule::I64>((_self_.get()._field_childIndex + 1LL));
	return _206117_base;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a09505_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1e6a13a92_checkCdef(_1e6a13652_directiveChecker* _self_, jule::Ptr<_1e5d21268_Directive>& _1629_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1e5e1c62d_Fn>>()) {
			_case_begin_1b24777e3:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1e5e1c62d_Fn>().get()._field_CppLinked) {
					goto _match_end_1b2477a35;
				};
				goto _case_begin_1b2477a8a;
			}
		}
		else {
			_case_begin_1b2477a8a:;
			{
				_1e6a25103_pushErr((*_self_)._field_s.ptr(), _1629_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_1629_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1b2477a35:;
	};
	if ((_1629_d.get()._field_Args.len() > 0LL)) {
		_1e6a25103_pushErr((*_self_)._field_s.ptr(), _1629_d.get()._field_Args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1e6a13d17_checkTypedef(_1e6a13652_directiveChecker* _self_, jule::Ptr<_1e5d21268_Directive>& _3232_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1e5d4518d_Struct>>()) {
			_case_begin_1b247a8c3:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1e5d4518d_Struct>().get()._field_CppLinked) {
					goto _match_end_1b247a285;
				};
				goto _case_begin_1b247a2da;
			}
		}
		else {
			_case_begin_1b247a2da:;
			{
				_1e6a25103_pushErr((*_self_)._field_s.ptr(), _3232_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_3232_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1b247a285:;
	};
	if ((_3232_d.get()._field_Args.len() > 0LL)) {
		_1e6a25103_pushErr((*_self_)._field_s.ptr(), _3232_d.get()._field_Args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1e6a1408c_checkDerive(_1e6a13652_directiveChecker* _self_, jule::Ptr<_1e5d21268_Directive>& _4831_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1e5d4518d_Struct>>()) {
			_case_begin_1b247c7d7:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1e5d4518d_Struct>().get()._field_CppLinked))) {
					goto _match_end_1b247ca07;
				};
				goto _case_begin_1b247ca5c;
			}
		}
		else {
			_case_begin_1b247ca5c:;
			{
				_1e6a25103_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>());
			}
		}
		_match_end_1b247ca07:;
	};
	if ((_4831_d.get()._field_Args.len() == 0LL)) {
		_1e6a25103_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_1e6a25422_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	} else if ((_4831_d.get()._field_Args.len() > 1LL)) {
		_1e6a25103_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	{
		auto &_match_expr{ _4831_d.get()._field_Args[0LL].get()._field_Kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_1b24814de:;
		}
		else {
			_case_begin_1b247cb8e:;
			{
				_1e6a25103_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Args[0LL],jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_4831_d.get()._field_Args[0LL].get()._field_Kind)}));
			}
		}
		_match_end_1b248109e:;
	};
}



inline void _1e6a14312_checkNamespace(_1e6a13652_directiveChecker* _self_, jule::Ptr<_1e5d21268_Directive>& _7438_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1e5d4518d_Struct>>()) {
			_case_begin_1b2482ea2:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1e5d4518d_Struct>().get()._field_CppLinked))) {
					_1e6a25103_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e1c62d_Fn>>()) {
			_case_begin_1b2482556:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1e5e1c62d_Fn>().get()._field_CppLinked))) {
					_1e6a25103_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a3dd20_Var>>()) {
			_case_begin_1b24829eb:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1e6a3dd20_Var>().get()._field_CppLinked))) {
					_1e6a25103_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else {
			_case_begin_1b24828b9:;
			{
				_1e6a25103_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1b2482864:;
	};
	if ((_7438_d.get()._field_Args.len() == 0LL)) {
		_1e6a25103_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_7438_d.get()._field_Args.len() > 1LL)) {
		_1e6a25103_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e47137a5_Token> _9913_arg = _7438_d.get()._field_Args[0LL];;
	if ((_9913_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_1e6a25103_pushErr((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_9913_arg.get()._field_Kind[0LL] != '\"')) {
		_1e6a25103_pushErr((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_7438_d.get()._field_Args[0LL].get()._field_Kind=_9913_arg.get()._field_Kind.slice(1LL,(_9913_arg.get()._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1e5d4518d_Struct>>()) {
			_case_begin_1b248b0ed:;
			{
				if ((_1e6ab12d2_findDirective((*((*_self_)._field_d)),jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_1e5d21268_Directive> _11625_typedef = jule::new_ptr<_1e5d21268_Directive>(_1e5d21268_Directive{._field_Tag=_7438_d.get()._field_Tag, });;
					_11625_typedef.get()._field_Tag.get()._field_Kind=jule::Str("typedef", 7);
					(*((*_self_)._field_d))=jule::append((*((*_self_)._field_d)),jule::Slice<jule::Ptr<_1e5d21268_Directive>>::make({_11625_typedef}));
				};
			}
		}
		_match_end_1b2488eca:;
	};
}



inline void _1e6a14587_checkDeprecated(_1e6a13652_directiveChecker* _self_, jule::Ptr<_1e5d21268_Directive>& _12539_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1e5d4518d_Struct>>()) {
			_case_begin_1b248bd68:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1e5d4518d_Struct>().get()._field_CppLinked) {
					_1e6a25103_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e1c62d_Fn>>()) {
			_case_begin_1b248d386:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1e5e1c62d_Fn>().get()._field_CppLinked) {
					_1e6a25103_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a3dd20_Var>>()) {
			_case_begin_1b248d3ec:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1e6a3dd20_Var>().get()._field_CppLinked) {
					_1e6a25103_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else {
			_case_begin_1b248cc8c:;
			{
				_1e6a25103_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1b248b65e:;
	};
	if ((_12539_d.get()._field_Args.len() == 0LL)) {
		return;;
	};
	if ((_12539_d.get()._field_Args.len() > 1LL)) {
		_1e6a25103_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e47137a5_Token> _15013_arg = _12539_d.get()._field_Args[0LL];;
	if ((_15013_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_1e6a25103_pushErr((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_15013_arg.get()._field_Kind[0LL] != '\"')) {
		_1e6a25103_pushErr((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_12539_d.get()._field_Args[0LL].get()._field_Kind=_15013_arg.get()._field_Kind.slice(1LL,(_15013_arg.get()._field_Kind.len() - 1LL));
}



inline void _1e6a1480c_checkTest(_1e6a13652_directiveChecker* _self_, jule::Ptr<_1e5d21268_Directive>& _16429_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1e5e1c62d_Fn>>()) {
			_case_begin_1b2495b63:;
			{
				jule::Ptr<_1e5e1c62d_Fn> _16717_f = (*_self_)._field_o.operator jule::Ptr<_1e5e1c62d_Fn>();;
				if ((((!(_16717_f.get()._field_CppLinked)) && (!(_1e5e1d2cc_IsInit(_16717_f.ptr())))) && (!(_1e5e1d068_IsEntryPoint(_16717_f.ptr()))))) {
					goto _match_end_1b249667a;
				};
				if (_1e5e1cd04_IsMethod(_16717_f.ptr())) {
					_1e6a25103_pushErr((*_self_)._field_s.ptr(), _16717_f.get()._field_Token,jule::Str("you cannot declare test methods", 31),jule::Slice<jule::Any>());
					goto _match_end_1b249667a;
				};
				goto _case_begin_1b24966d0;
			}
		}
		else {
			_case_begin_1b24966d0:;
			{
				_1e6a25103_pushErr((*_self_)._field_s.ptr(), _16429_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_16429_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1b249667a:;
	};
	if ((_16429_d.get()._field_Args.len() > 0LL)) {
		_1e6a25103_pushErr((*_self_)._field_s.ptr(), _16429_d.get()._field_Args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1e6a14a82_checkDirective(_1e6a13652_directiveChecker* _self_, jule::Ptr<_1e5d21268_Directive>& _18538_d) {
	{
		auto &_match_expr{ _18538_d.get()._field_Tag.get()._field_Kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_1b249ae76:;
			{
				_1e6a13a92_checkCdef(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_1b249a64b:;
			{
				_1e6a13d17_checkTypedef(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_1b249a6b2:;
			{
				_1e6a1408c_checkDerive(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_1b249a728:;
			{
				_1e6a14312_checkNamespace(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_1b249a78e:;
			{
				_1e6a14587_checkDeprecated(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_1b249b3d8:;
			{
				_1e6a1480c_checkTest(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_1b249b44e:;
			{
				_1e6a25103_pushErr((*_self_)._field_s.ptr(), _18538_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_18538_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		else {
			_case_begin_1b249a5d5:;
			{
				_1e6a25103_pushErr((*_self_)._field_s.ptr(), _18538_d.get()._field_Tag,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_18538_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1b249a52a:;
	};
}



inline void _1e6a14c5d_check(_1e6a13652_directiveChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_d));
		auto it = expr.begin();
		_iter_begin_1b249da17:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d21268_Directive> _20821_d = *it;
			{
				_1e6a14a82_checkDirective(&(*_self_), _20821_d);
			}
			_iter_next_1b249da17:;
			++it;
			goto _iter_begin_1b249da17;
		}
		_iter_end_1b249da17:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a13652_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e6a192e5_ImportInfo> _1e6a19812_FindPackage(_1e6a192e5_ImportInfo* _self_, jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_1e6a192e5_ImportInfo> _1e6a19b20_SelectPackage(_1e6a192e5_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_1e6a192e5_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_1e6a3dd20_Var> _1e6a19ec7_FindVar(_1e6a192e5_ImportInfo* _self_, jule::Str _18126_ident, jule::Bool ) {
	if ((!(_1e6a1b8ad_isLookupable(&(*_self_), _18126_ident)))) {
		return nullptr;
	};
	return _1e6a16de7_findVarInPackage((*_self_)._field_Package.get()._field_Files,_18126_ident,false);
}



inline jule::Ptr<_1e6ab5d97_TypeAlias> _1e6a1a37e_FindTypeAlias(_1e6a192e5_ImportInfo* _self_, jule::Str _19332_ident, jule::Bool ) {
	if ((!(_1e6a1b8ad_isLookupable(&(*_self_), _19332_ident)))) {
		return nullptr;
	};
	return _1e6a17326_findTypeAliasInPackage((*_self_)._field_Package.get()._field_Files,_19332_ident,false);
}



inline jule::Ptr<_1e5d4518d_Struct> _1e6a1a736_FindStruct(_1e6a192e5_ImportInfo* _self_, jule::Str _20529_ident, jule::Bool ) {
	if ((!(_1e6a1b8ad_isLookupable(&(*_self_), _20529_ident)))) {
		return nullptr;
	};
	return _1e6a17711_findStructInPackage((*_self_)._field_Package.get()._field_Files,_20529_ident,false);
}



inline jule::Ptr<_1e5e1c62d_Fn> _1e6a1aadd_FindFn(_1e6a192e5_ImportInfo* _self_, jule::Str _21725_ident, jule::Bool ) {
	if ((!(_1e6a1b8ad_isLookupable(&(*_self_), _21725_ident)))) {
		return nullptr;
	};
	return _1e6a17b73_findFnInPackage((*_self_)._field_Package.get()._field_Files,_21725_ident,false);
}



inline jule::Ptr<_1e5e2e4db_Trait> _1e6a1adeb_FindTrait(_1e6a192e5_ImportInfo* _self_, jule::Str _22828_ident) {
	if ((!(_1e6a1b8ad_isLookupable(&(*_self_), _22828_ident)))) {
		return nullptr;
	};
	return _1e6a17e81_findTraitInPackage((*_self_)._field_Package.get()._field_Files,_22828_ident);
}



inline jule::Ptr<_1e5e31631_Enum> _1e6a1b209_FindEnum(_1e6a192e5_ImportInfo* _self_, jule::Str _23927_ident) {
	if ((!(_1e6a1b8ad_isLookupable(&(*_self_), _23927_ident)))) {
		return nullptr;
	};
	return _1e6a182c2_findEnumInPackage((*_self_)._field_Package.get()._field_Files,_23927_ident);
}



inline jule::Ptr<_1e5e32c2b_TypeEnum> _1e6a1b517_FindTypeEnum(_1e6a192e5_ImportInfo* _self_, jule::Str _25031_ident) {
	if ((!(_1e6a1b8ad_isLookupable(&(*_self_), _25031_ident)))) {
		return nullptr;
	};
	return _1e6a18613_findTypeEnumInPackage((*_self_)._field_Package.get()._field_Files,_25031_ident);
}



inline jule::Bool _1e6a1b8ad_isLookupable(_1e6a192e5_ImportInfo* _self_, jule::Str _25927_ident) {
	if ((*_self_)._field_CppLinked) {
		return false;
	};
	if ((!((*_self_)._field_ImportAll))) {
		if ((((*_self_)._field_Alias.len() != 0LL) || _1e6a1bbbb_existIdent(&(*_self_), jule::Str("self", 4)))) {
			return true;
		};
		if (((*_self_)._field_Selected.len() > 0LL)) {
			if ((!(_1e6a1bbbb_existIdent(&(*_self_), _25927_ident)))) {
				return false;
			};
		};
	};
	return true;
}



inline jule::Bool _1e6a1bbbb_existIdent(_1e6a192e5_ImportInfo* _self_, jule::Str _27925_ident) {
	{
		auto &expr = (*_self_)._field_Selected;
		auto it = expr.begin();
		_iter_begin_1b24b382e:;
		if (it != expr.end()) {
			jule::Ptr<_1e47137a5_Token> &_28016_sident = *it;
			{
				if ((_28016_sident.get()._field_Kind == _27925_ident)) {
					return true;
				};
			}
			_iter_next_1b24b382e:;
			++it;
			goto _iter_begin_1b24b382e;
		}
		_iter_end_1b24b382e:;
	};
	return false;
}



inline jule::Bool _1e6a1be52_isAccessibleViaSelection(_1e6a192e5_ImportInfo* _self_) {
	return (((*_self_)._field_ImportAll || ((*_self_)._field_Selected.len() == 0LL)) || _1e6a1bbbb_existIdent(&(*_self_), jule::Str("self", 4)));
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a192e5_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e6a192e5_ImportInfo> _1e6a1c727_FindPackage(_1e6a1c24e_Package* _self_, jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_1e6a192e5_ImportInfo> _1e6a1ca35_SelectPackage(_1e6a1c24e_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_1e6a192e5_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_1e6a3dd20_Var> _1e6a1cddc_FindVar(_1e6a1c24e_Package* _self_, jule::Str _30926_ident, jule::Bool _30938_cpp_linked) {
	return _1e6a16de7_findVarInPackage((*_self_)._field_Files,_30926_ident,_30938_cpp_linked);
}



inline jule::Ptr<_1e6ab5d97_TypeAlias> _1e6a1d294_FindTypeAlias(_1e6a1c24e_Package* _self_, jule::Str _31532_ident, jule::Bool _31544_cpp_linked) {
	return _1e6a17326_findTypeAliasInPackage((*_self_)._field_Files,_31532_ident,_31544_cpp_linked);
}



inline jule::Ptr<_1e5d4518d_Struct> _1e6a1d64b_FindStruct(_1e6a1c24e_Package* _self_, jule::Str _32129_ident, jule::Bool _32141_cpp_linked) {
	return _1e6a17711_findStructInPackage((*_self_)._field_Files,_32129_ident,_32141_cpp_linked);
}



inline jule::Ptr<_1e5e1c62d_Fn> _1e6a1da03_FindFn(_1e6a1c24e_Package* _self_, jule::Str _32725_ident, jule::Bool _32737_cpp_linked) {
	return _1e6a17b73_findFnInPackage((*_self_)._field_Files,_32725_ident,_32737_cpp_linked);
}



inline jule::Ptr<_1e5e2e4db_Trait> _1e6a1dd11_FindTrait(_1e6a1c24e_Package* _self_, jule::Str _33328_ident) {
	return _1e6a17e81_findTraitInPackage((*_self_)._field_Files,_33328_ident);
}



inline jule::Ptr<_1e5e31631_Enum> _1e6a1e11e_FindEnum(_1e6a1c24e_Package* _self_, jule::Str _33927_ident) {
	return _1e6a182c2_findEnumInPackage((*_self_)._field_Files,_33927_ident);
}



inline jule::Ptr<_1e5e32c2b_TypeEnum> _1e6a1e42c_FindTypeEnum(_1e6a1c24e_Package* _self_, jule::Str _34531_ident) {
	return _1e6a18613_findTypeEnumInPackage((*_self_)._field_Files,_34531_ident);
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a1c24e_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e6a192e5_ImportInfo> _1e6a2295d_FindPackage(_1e6a22441_Sema* _self_, jule::Str _21930_ident) {
	return _1e6a8652c_FindPackage((*_self_)._field_file.ptr(), _21930_ident);
}



inline jule::Ptr<_1e6a192e5_ImportInfo> _1e6a22c6b_SelectPackage(_1e6a22441_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_1e6a192e5_ImportInfo>)> _22932_selector) {
	return _1e6a8683a_SelectPackage((*_self_)._field_file.ptr(), _22932_selector);
}



inline jule::Ptr<_1e6a3dd20_Var> _1e6a23123_FindVar(_1e6a22441_Sema* _self_, jule::Str _23926_ident, jule::Bool _23938_cpp_linked) {
	jule::Ptr<_1e6a3dd20_Var> _24117_v = _1e6a16de7_findVarInPackage((*_self_)._field_files,_23926_ident,_23938_cpp_linked);;
	if ((_24117_v != nullptr)) {
		return _24117_v;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1b24d6368:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a192e5_ImportInfo> _24721_imp = *it;
			{
				if ((!(_1e6a20d68_impIsLookupable(_24721_imp,_23926_ident)))) {
					goto _iter_next_1b24d6368;
				};
				_24117_v=_1e6a19ec7_FindVar(_24721_imp.ptr(), _23926_ident,_23938_cpp_linked);
				if (((_24117_v != nullptr) && _1e6a257c9_isAccessibleDefine(&(*_self_), _24117_v.get()._field_Public,_24117_v.get()._field_Token))) {
					return _24117_v;
				};
			}
			_iter_next_1b24d6368:;
			++it;
			goto _iter_begin_1b24d6368;
		}
		_iter_end_1b24d6368:;
	};
	return nullptr;
}



inline jule::Ptr<_1e6ab5d97_TypeAlias> _1e6a234ca_FindTypeAlias(_1e6a22441_Sema* _self_, jule::Str _26632_ident, jule::Bool _26644_cpp_linked) {
	jule::Ptr<_1e6ab5d97_TypeAlias> _26817_ta = _1e6a17326_findTypeAliasInPackage((*_self_)._field_files,_26632_ident,_26644_cpp_linked);;
	if ((_26817_ta != nullptr)) {
		return _26817_ta;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1b24d8d1b:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a192e5_ImportInfo> _27421_imp = *it;
			{
				if ((!(_1e6a20d68_impIsLookupable(_27421_imp,_26632_ident)))) {
					goto _iter_next_1b24d8d1b;
				};
				_26817_ta=_1e6a1a37e_FindTypeAlias(_27421_imp.ptr(), _26632_ident,_26644_cpp_linked);
				if (((_26817_ta != nullptr) && _1e6a257c9_isAccessibleDefine(&(*_self_), _26817_ta.get()._field_Public,_26817_ta.get()._field_Token))) {
					return _26817_ta;
				};
			}
			_iter_next_1b24d8d1b:;
			++it;
			goto _iter_begin_1b24d8d1b;
		}
		_iter_end_1b24d8d1b:;
	};
	return nullptr;
}



inline jule::Ptr<_1e5d4518d_Struct> _1e6a23882_FindStruct(_1e6a22441_Sema* _self_, jule::Str _29329_ident, jule::Bool _29341_cppLinked) {
	jule::Ptr<_1e5d4518d_Struct> _29517_s = _1e6a17711_findStructInPackage((*_self_)._field_files,_29329_ident,_29341_cppLinked);;
	if ((_29517_s != nullptr)) {
		return _29517_s;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1b24db7be:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a192e5_ImportInfo> _30021_imp = *it;
			{
				if ((!(_1e6a20d68_impIsLookupable(_30021_imp,_29329_ident)))) {
					goto _iter_next_1b24db7be;
				};
				_29517_s=_1e6a1a736_FindStruct(_30021_imp.ptr(), _29329_ident,_29341_cppLinked);
				if (((_29517_s != nullptr) && _1e6a257c9_isAccessibleDefine(&(*_self_), _29517_s.get()._field_Public,_29517_s.get()._field_Token))) {
					return _29517_s;
				};
			}
			_iter_next_1b24db7be:;
			++it;
			goto _iter_begin_1b24db7be;
		}
		_iter_end_1b24db7be:;
	};
	return nullptr;
}



inline jule::Ptr<_1e5e1c62d_Fn> _1e6a23c39_FindFn(_1e6a22441_Sema* _self_, jule::Str _31825_ident, jule::Bool _31837_cpp_linked) {
	jule::Ptr<_1e5e1c62d_Fn> _32017_f = _1e6a17b73_findFnInPackage((*_self_)._field_files,_31825_ident,_31837_cpp_linked);;
	if ((_32017_f != nullptr)) {
		return _32017_f;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1b24de272:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a192e5_ImportInfo> _32621_imp = *it;
			{
				if ((!(_1e6a20d68_impIsLookupable(_32621_imp,_31825_ident)))) {
					goto _iter_next_1b24de272;
				};
				_32017_f=_1e6a1aadd_FindFn(_32621_imp.ptr(), _31825_ident,_31837_cpp_linked);
				if (((_32017_f != nullptr) && _1e6a257c9_isAccessibleDefine(&(*_self_), _32017_f.get()._field_Public,_32017_f.get()._field_Token))) {
					return _32017_f;
				};
			}
			_iter_next_1b24de272:;
			++it;
			goto _iter_begin_1b24de272;
		}
		_iter_end_1b24de272:;
	};
	return nullptr;
}



inline jule::Ptr<_1e5e2e4db_Trait> _1e6a24047_FindTrait(_1e6a22441_Sema* _self_, jule::Str _34528_ident) {
	jule::Ptr<_1e5e2e4db_Trait> _34717_t = _1e6a17e81_findTraitInPackage((*_self_)._field_files,_34528_ident);;
	if ((_34717_t != nullptr)) {
		return _34717_t;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1b24e18b2:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a192e5_ImportInfo> _35321_imp = *it;
			{
				if ((!(_1e6a20d68_impIsLookupable(_35321_imp,_34528_ident)))) {
					goto _iter_next_1b24e18b2;
				};
				_34717_t=_1e6a1adeb_FindTrait(_35321_imp.ptr(), _34528_ident);
				if (((_34717_t != nullptr) && _1e6a257c9_isAccessibleDefine(&(*_self_), _34717_t.get()._field_Public,_34717_t.get()._field_Token))) {
					return _34717_t;
				};
			}
			_iter_next_1b24e18b2:;
			++it;
			goto _iter_begin_1b24e18b2;
		}
		_iter_end_1b24e18b2:;
	};
	return nullptr;
}



inline jule::Ptr<_1e5e31631_Enum> _1e6a24355_FindEnum(_1e6a22441_Sema* _self_, jule::Str _37227_ident) {
	jule::Ptr<_1e5e31631_Enum> _37417_e = _1e6a182c2_findEnumInPackage((*_self_)._field_files,_37227_ident);;
	if ((_37417_e != nullptr)) {
		return _37417_e;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1b24e4101:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a192e5_ImportInfo> _38021_imp = *it;
			{
				if ((!(_1e6a20d68_impIsLookupable(_38021_imp,_37227_ident)))) {
					goto _iter_next_1b24e4101;
				};
				_37417_e=_1e6a1b209_FindEnum(_38021_imp.ptr(), _37227_ident);
				if (((_37417_e != nullptr) && _1e6a257c9_isAccessibleDefine(&(*_self_), _37417_e.get()._field_Public,_37417_e.get()._field_Token))) {
					return _37417_e;
				};
			}
			_iter_next_1b24e4101:;
			++it;
			goto _iter_begin_1b24e4101;
		}
		_iter_end_1b24e4101:;
	};
	return nullptr;
}



inline jule::Ptr<_1e5e32c2b_TypeEnum> _1e6a24663_FindTypeEnum(_1e6a22441_Sema* _self_, jule::Str _39931_ident) {
	jule::Ptr<_1e5e32c2b_TypeEnum> _40117_e = _1e6a18613_findTypeEnumInPackage((*_self_)._field_files,_39931_ident);;
	if ((_40117_e != nullptr)) {
		return _40117_e;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1b24e6840:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a192e5_ImportInfo> _40721_imp = *it;
			{
				if ((!(_1e6a20d68_impIsLookupable(_40721_imp,_39931_ident)))) {
					goto _iter_next_1b24e6840;
				};
				_40117_e=_1e6a1b517_FindTypeEnum(_40721_imp.ptr(), _39931_ident);
				if (((_40117_e != nullptr) && _1e6a257c9_isAccessibleDefine(&(*_self_), _40117_e.get()._field_Public,_40117_e.get()._field_Token))) {
					return _40117_e;
				};
			}
			_iter_next_1b24e6840:;
			++it;
			goto _iter_begin_1b24e6840;
		}
		_iter_end_1b24e6840:;
	};
	return nullptr;
}



inline jule::Bool _1e6a249b5_isFlag(_1e6a22441_Sema* _self_, jule::I64 _42321_flags) {
	return (((*_self_)._field_flags & _42321_flags) == _42321_flags);
}



inline void _1e6a24c3a_setCurrentFile(_1e6a22441_Sema* _self_, jule::Ptr<_1e6a86010_SymbolTable> _42537_f) {
	(*_self_)._field_file=_42537_f;
}



inline void _1e6a25103_pushErr(_1e6a22441_Sema* _self_, jule::Ptr<_1e47137a5_Token> _42726_token, jule::Str _42741_fmt, jule::Slice<jule::Any> _42754_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1e6a20a27_compilerErr(_42726_token,true,_42741_fmt,jule::Any(_42754_args)));;
}



inline void _1e6a25422_pushSugggestion(_1e6a22441_Sema* _self_, jule::Str _43234_fmt, jule::Slice<jule::Any> _43247_args) {
	{
		_1e6a21eac_pushSugggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_43234_fmt,jule::Any(_43247_args));
	};
}



inline jule::Bool _1e6a257c9_isAccessibleDefine(_1e6a22441_Sema* _self_, jule::Bool _43733_public, jule::Ptr<_1e47137a5_Token> _43747_token) {
	return ((_43733_public || (_43747_token.get()._field_File == nullptr)) || (_1e4719536_Dir((*_self_)._field_file.get()._field_File.ptr()) == _1e4719536_Dir(_43747_token.get()._field_File.ptr())));
}



inline jule::Bool _1e6a25c2a_isDuplicatedIdent(_1e6a22441_Sema* _self_, jule::Uintptr _44432_itself, jule::Str _44449_ident, jule::Bool _44461_cpp_linked) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1b24ed506:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a86010_SymbolTable> &_44516_f = *it;
			{
				if (_1e6a8950d_isDuplicatedIdent(_44516_f.ptr(), _44432_itself,_44449_ident,_44461_cpp_linked)) {
					return true;
				};
				{
					auto &expr = _44516_f.get()._field_Imports;
					auto it = expr.begin();
					_iter_begin_1b24eddb9:;
					if (it != expr.end()) {
						jule::Ptr<_1e6a192e5_ImportInfo> &_45020_imp = *it;
						{
							{
								auto &expr = _45020_imp.get()._field_Selected;
								auto it = expr.begin();
								_iter_begin_1b24eec55:;
								if (it != expr.end()) {
									jule::Ptr<_1e47137a5_Token> &_45124_selected = *it;
									{
										if ((_45124_selected.get()._field_Kind == _44449_ident)) {
											return true;
										};
									}
									_iter_next_1b24eec55:;
									++it;
									goto _iter_begin_1b24eec55;
								}
								_iter_end_1b24eec55:;
							};
						}
						_iter_next_1b24eddb9:;
						++it;
						goto _iter_begin_1b24eddb9;
					}
					_iter_end_1b24eddb9:;
				};
			}
			_iter_next_1b24ed506:;
			++it;
			goto _iter_begin_1b24ed506;
		}
		_iter_end_1b24ed506:;
	};
	return false;
}



inline void _1e6a26049_checkDirectives(jule::Ptr<_1e6a22441_Sema> _self_, jule::Slice<jule::Ptr<_1e5d21268_Directive>>& _46140_d, jule::Any _46166_o) {
	_1e6a13652_directiveChecker _46217_dc = _1e6a13652_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1e5d21268_Directive>>>)((&(_46140_d)))), ._field_o=jule::Any(_46166_o)};;
	_1e6a14c5d_check(&_46217_dc);
}



inline jule::Bool _1e6a2649a_checkGenericQuantity(_1e6a22441_Sema* _self_, jule::I64 _47039_required, jule::I64 _47054_given, jule::Ptr<_1e47137a5_Token> _47066_token) {
	jule::Bool _47083_ok = jule::Bool();
	{
		
		if (((_47039_required == 0LL) && (_47054_given > 0LL))) {
			_case_begin_1b250298e:;
			{
				_1e6a25103_pushErr(&(*_self_), _47066_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
				_47083_ok = false;
				return _47083_ok;
			}
		}
		else if (((_47039_required > 0LL) && (_47054_given == 0LL))) {
			_case_begin_1b2502a6b:;
			{
				_1e6a25103_pushErr(&(*_self_), _47066_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				_47083_ok = false;
				return _47083_ok;
			}
		}
		else if ((_47039_required < _47054_given)) {
			_case_begin_1b2502ad2:;
			{
				_1e6a25103_pushErr(&(*_self_), _47066_token,jule::Str("overflow generics", 17),jule::Slice<jule::Any>());
				_47083_ok = false;
				return _47083_ok;
			}
		}
		else if ((_47039_required > _47054_given)) {
			_case_begin_1b25027b3:;
			{
				_1e6a25103_pushErr(&(*_self_), _47066_token,jule::Str("missing generics", 16),jule::Slice<jule::Any>());
				_47083_ok = false;
				return _47083_ok;
			}
		}
		else {
			_case_begin_1b250232e:;
			{
				_47083_ok = true;
				return _47083_ok;
			}
		}
		_match_end_1b2502252:;
	};
}



inline jule::Bool _1e6a26874_isDuplicatedImportSelection(_1e6a22441_Sema* _self_, jule::Uintptr _48942_itself, jule::Str _48959_ident) {
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1b2505a19:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a192e5_ImportInfo> &_49016_imp = *it;
			{
				if ((static_cast<jule::Uintptr>(_49016_imp) == _48942_itself)) {
					goto _iter_end_1b2505a19;
				};
				if (_1e6a1bbbb_existIdent(_49016_imp.ptr(), _48959_ident)) {
					return true;
				};
			}
			_iter_next_1b2505a19:;
			++it;
			goto _iter_begin_1b2505a19;
		}
		_iter_end_1b2505a19:;
	};
	return false;
}



inline jule::Any _1e6a26c3c_getImportDef(_1e6a22441_Sema* _self_, jule::Str _50227_ident, jule::Ptr<_1e6a192e5_ImportInfo>& _50244_imp) {
	if ((_1e6b656e9_findPackageBuiltinDef(_50244_imp.get()._field_LinkPath,_50227_ident) != nullptr)) {
		return jule::Any(true);
	};
	{
		auto &expr = _50244_imp.get()._field_Package.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1b2507367:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a86010_SymbolTable> _50621_f = *it;
			{
				;
				jule::Any _50921_def = _1e6a890ac_defByIdent(_50621_f.ptr(), _50227_ident,false);;
				if ((_50921_def != nullptr)) {
					return jule::Any(_50921_def);
				};
			}
			_iter_next_1b2507367:;
			++it;
			goto _iter_begin_1b2507367;
		}
		_iter_end_1b2507367:;
	};
	return nullptr;
}



inline jule::Bool _1e6a2704a_checkImportSelections(_1e6a22441_Sema* _self_, jule::Ptr<_1e6a192e5_ImportInfo>& _51745_imp) {
	jule::Bool _51765_ok = jule::Bool();
	_51765_ok=true;
	{
		auto &expr = _51745_imp.get()._field_Selected;
		auto it = expr.begin();
		_iter_begin_1b25098ca:;
		if (it != expr.end()) {
			jule::Ptr<_1e47137a5_Token> _51916_ident = *it;
			{
				if ((_51916_ident.get()._field_Kind == jule::Str("self", 4))) {
					goto _iter_next_1b25098ca;
				};
				if (_1e6a26874_isDuplicatedImportSelection(&(*_self_), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_51745_imp)),_51916_ident.get()._field_Kind)) {
					_1e6a25103_pushErr(&(*_self_), _51916_ident,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_51916_ident.get()._field_Kind)}));
					_1e6a25422_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
					_51765_ok=false;
					goto _iter_next_1b25098ca;
				};
				jule::Any _53121_def = _1e6a26c3c_getImportDef(&(*_self_), _51916_ident.get()._field_Kind,_51745_imp);;
				{
					auto &_match_expr{ _53121_def };
					
					if (_match_expr.type_is<jule::Bool>()) {
						_case_begin_1b250b965:;
						{
							goto _iter_next_1b25098ca;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e6a3dd20_Var>>()) {
						_case_begin_1b250c3d3:;
						{
							jule::Ptr<_1e6a3dd20_Var> _53725_v = _53121_def.operator jule::Ptr<_1e6a3dd20_Var>();;
							if (_1e6a257c9_isAccessibleDefine(&(*_self_), _53725_v.get()._field_Public,_53725_v.get()._field_Token)) {
								goto _iter_next_1b25098ca;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e6ab5d97_TypeAlias>>()) {
						_case_begin_1b250c449:;
						{
							jule::Ptr<_1e6ab5d97_TypeAlias> _54225_ta = _53121_def.operator jule::Ptr<_1e6ab5d97_TypeAlias>();;
							if (_1e6a257c9_isAccessibleDefine(&(*_self_), _54225_ta.get()._field_Public,_54225_ta.get()._field_Token)) {
								goto _iter_next_1b25098ca;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e5d4518d_Struct>>()) {
						_case_begin_1b250c4b0:;
						{
							jule::Ptr<_1e5d4518d_Struct> _54725_strct = _53121_def.operator jule::Ptr<_1e5d4518d_Struct>();;
							if (_1e6a257c9_isAccessibleDefine(&(*_self_), _54725_strct.get()._field_Public,_54725_strct.get()._field_Token)) {
								goto _iter_next_1b25098ca;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e5e2e4db_Trait>>()) {
						_case_begin_1b250d03d:;
						{
							jule::Ptr<_1e5e2e4db_Trait> _55225_t = _53121_def.operator jule::Ptr<_1e5e2e4db_Trait>();;
							if (_1e6a257c9_isAccessibleDefine(&(*_self_), _55225_t.get()._field_Public,_55225_t.get()._field_Token)) {
								goto _iter_next_1b25098ca;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e5e31631_Enum>>()) {
						_case_begin_1b250d0a4:;
						{
							jule::Ptr<_1e5e31631_Enum> _55725_e = _53121_def.operator jule::Ptr<_1e5e31631_Enum>();;
							if (_1e6a257c9_isAccessibleDefine(&(*_self_), _55725_e.get()._field_Public,_55725_e.get()._field_Token)) {
								goto _iter_next_1b25098ca;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e5e32c2b_TypeEnum>>()) {
						_case_begin_1b250d11a:;
						{
							jule::Ptr<_1e5e32c2b_TypeEnum> _56225_e = _53121_def.operator jule::Ptr<_1e5e32c2b_TypeEnum>();;
							if (_1e6a257c9_isAccessibleDefine(&(*_self_), _56225_e.get()._field_Public,_56225_e.get()._field_Token)) {
								goto _iter_next_1b25098ca;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e5e1c62d_Fn>>()) {
						_case_begin_1b250d181:;
						{
							jule::Ptr<_1e5e1c62d_Fn> _56725_f = _53121_def.operator jule::Ptr<_1e5e1c62d_Fn>();;
							if (_1e6a257c9_isAccessibleDefine(&(*_self_), _56725_f.get()._field_Public,_56725_f.get()._field_Token)) {
								goto _iter_next_1b25098ca;
							};
						}
					}
					else {
						_case_begin_1b250c16e:;
						{
							_1e6a25103_pushErr(&(*_self_), _51916_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_51916_ident.get()._field_Kind)}));
							_51765_ok=false;
							goto _iter_next_1b25098ca;
						}
					}
					_match_end_1b250a0e5:;
				};
				_1e6a25103_pushErr(&(*_self_), _51916_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51916_ident.get()._field_Kind)}));
				_1e6a25422_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
				_51765_ok=false;
			}
			_iter_next_1b25098ca:;
			++it;
			goto _iter_begin_1b25098ca;
		}
		_iter_end_1b25098ca:;
	};
	return _51765_ok;
}



inline jule::Bool _1e6a27358_isUseAliasDuplication(_1e6a22441_Sema* _self_, jule::Ptr<_1e6a192e5_ImportInfo>& _58441_imp) {
	if ((_58441_imp.get()._field_Alias.len() == 0LL)) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1b2515dc0:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a192e5_ImportInfo> _58921_imp2 = *it;
			{
				if ((_58921_imp2 == _58441_imp)) {
					goto _iter_end_1b2515dc0;
				};
				if ((_58921_imp2.get()._field_Alias == _58441_imp.get()._field_Alias)) {
					return true;
				};
				if (((_58921_imp2.get()._field_Ident == _58921_imp2.get()._field_LinkPath) && (_58921_imp2.get()._field_Ident == _58441_imp.get()._field_Alias))) {
					return true;
				};
			}
			_iter_next_1b2515dc0:;
			++it;
			goto _iter_begin_1b2515dc0;
		}
		_iter_end_1b2515dc0:;
	};
	return false;
}



inline jule::Bool _1e6a27666_checkImport(_1e6a22441_Sema* _self_, jule::Ptr<_1e6a192e5_ImportInfo>& _60435_imp) {
	if ((_60435_imp.get()._field_CppLinked || (_60435_imp.get()._field_Package.get()._field_Files.len() == 0LL))) {
		return true;
	};
	if (_1e6a27358_isUseAliasDuplication(&(*_self_), _60435_imp)) {
		_1e6a25103_pushErr(&(*_self_), _60435_imp.get()._field_Token,jule::Str("identifier duplication: @ is already used for another use declaration above", 75),jule::Slice<jule::Any>::make({jule::Any(_60435_imp.get()._field_Alias)}));
		_1e6a25422_pushSugggestion(&(*_self_), jule::Str("rename alias for this use declaration to avoid duplication", 58),jule::Slice<jule::Any>());
	};
	if ((!(_60435_imp.get()._field_Duplicate))) {
		jule::Ptr<_1e6a22441_Sema> _61521_sema = jule::new_ptr<_1e6a22441_Sema>(_1e6a22441_Sema{._field_flags=(*_self_)._field_flags});;
		_1e6a3ad3e_check(_61521_sema, _60435_imp.get()._field_Package.get()._field_Files);
		if ((_61521_sema.get()._field_errors.len() != 0LL)) {
			(*_self_)._field_errors=jule::append((*_self_)._field_errors,_61521_sema.get()._field_errors);
			_61521_sema.get()._field_errors=nullptr;
			return false;
		};
	};
	return _1e6a2704a_checkImportSelections(&(*_self_), _60435_imp);
}



inline void _1e6a27842_checkImports(_1e6a22441_Sema* _self_) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1b251b14a:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a86010_SymbolTable> _62921_file = *it;
			{
				_1e6a24c3a_setCurrentFile(&(*_self_), _62921_file);
				{
					auto &expr = _62921_file.get()._field_Imports;
					auto it = expr.begin();
					_iter_begin_1b251c679:;
					if (it != expr.end()) {
						jule::Ptr<_1e6a192e5_ImportInfo> _63125_imp = *it;
						{
							jule::Bool _63221_ok = _1e6a27666_checkImport(&(*_self_), _63125_imp);;
							if ((!(_63221_ok))) {
								_1e6a25103_pushErr(&(*_self_), _63125_imp.get()._field_Token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>::make({jule::Any(_63125_imp.get()._field_LinkPath)}));
								return;;
							};
						}
						_iter_next_1b251c679:;
						++it;
						goto _iter_begin_1b251c679;
					}
					_iter_end_1b251c679:;
				};
			}
			_iter_next_1b251b14a:;
			++it;
			goto _iter_begin_1b251b14a;
		}
		_iter_end_1b251b14a:;
	};
}



inline void _1e6a27a1d_implFileImpls(jule::Ptr<_1e6a22441_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Impls;
		auto it = expr.begin();
		_iter_begin_1b251cd94:;
		if (it != expr.end()) {
			jule::Ptr<_1e5eb8a5e_Impl> _64321_imp = *it;
			{
				_1e6a32e24_implImpl(_self_, _64321_imp);
			}
			_iter_next_1b251cd94:;
			++it;
			goto _iter_begin_1b251cd94;
		}
		_iter_end_1b251cd94:;
	};
}



inline void _1e6a27be9_implImpls(jule::Ptr<_1e6a22441_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1b251e56b:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a86010_SymbolTable> _64921_file = *it;
			{
				_1e6a24c3a_setCurrentFile(_self_.ptr(), _64921_file);
				_1e6a27a1d_implFileImpls(_self_);
			}
			_iter_next_1b251e56b:;
			++it;
			goto _iter_begin_1b251e56b;
		}
		_iter_end_1b251e56b:;
	};
}



inline void _1e6a27dc5_checkEnums(jule::Ptr<_1e6a22441_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1b2520b00:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a86010_SymbolTable> _65621_file = *it;
			{
				_1e6a24c3a_setCurrentFile(_self_.ptr(), _65621_file);
				_1e6a3054d_checkEnumDecls(_self_);
			}
			_iter_next_1b2520b00:;
			++it;
			goto _iter_begin_1b2520b00;
		}
		_iter_end_1b2520b00:;
	};
}



inline jule::Ptr<_1e6ab6a8a_TypeKind> _1e6a283c0_buildTypeWithRefers(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e5d54961_TypeDecl>& _66344_t, jule::Trait<_1e6ad2600_Lookup> _66367_l, jule::Slice<jule::Ptr<_1e6ab5d97_TypeAlias>> _66413_generics, jule::Ptr<_1e6ac42a1_referencer> _66441_referencer) {
	_1e6ac4ee9_typeChecker _66517_tc = _1e6ac4ee9_typeChecker{._field_s=_self_, ._field_lookup=_66367_l, ._field_referencer=_66441_referencer, ._field_useGenerics=_66413_generics, };;
	{
		auto &_match_expr{ _66367_l };
		
		if (_match_expr.type_is<jule::Ptr<_1e6a09505_scopeChecker>>()) {
			_case_begin_1b252762e:;
			{
				jule::Ptr<_1e6a09505_scopeChecker> _67321_hard = _1e6a0aa12_getHardRoot(_66367_l.operator jule::Ptr<_1e6a09505_scopeChecker>());;
				_66517_tc._field_refers=_67321_hard.get()._field_owner.get()._field_Refers;
			}
		}
		_match_end_1b2527530:;
	};
	if (((_66441_referencer != nullptr) && (_66441_referencer.get()._field_refs != nullptr))) {
		{
			auto &_match_expr{ _66441_referencer.get()._field_owner };
			
			if (_match_expr.type_is<jule::Ptr<_1e6ab5d97_TypeAlias>>()) {
				_case_begin_1b2527ac4:;
				{
					_66517_tc._field_ownerAlias=_66441_referencer.get()._field_owner.operator jule::Ptr<_1e6ab5d97_TypeAlias>();
				}
			}
			_match_end_1b2527a6e:;
		};
	};
	return _1e6acc265_checkDecl(&_66517_tc, _66344_t);
}



inline jule::Bool _1e6a288ba_checkTypeWithRefers(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e6ababe3_TypeSymbol>& _69044_t, jule::Trait<_1e6ad2600_Lookup> _69064_l, jule::Slice<jule::Ptr<_1e6ab5d97_TypeAlias>> _69113_generics, jule::Ptr<_1e6ac42a1_referencer> _69141_referencer) {
	jule::Bool _69168_ok = jule::Bool();
	if (_1e6abb09a_checked(_69044_t.ptr())) {
		_69168_ok = true;
		return _69168_ok;
	};
	_69044_t.get()._field_Kind=_1e6a283c0_buildTypeWithRefers(_self_, _69044_t.get()._field_Decl,_69064_l,_69113_generics,_69141_referencer);
	_69168_ok = _1e6abb09a_checked(_69044_t.ptr());
	return _69168_ok;
}



inline jule::Ptr<_1e5e50683_constraintChecker> _1e6a28b2e_constraintChecker(jule::Ptr<_1e6a22441_Sema> _self_) {
	return jule::new_ptr<_1e5e50683_constraintChecker>(_1e5e50683_constraintChecker{._field_s=_self_, });
}



inline jule::Bool _1e6a28ed6_checkType(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e6ababe3_TypeSymbol>& _70534_t, jule::Trait<_1e6ad2600_Lookup> _70554_l) {
	return _1e6a288ba_checkTypeWithRefers(_self_, _70534_t,_70554_l,nullptr,nullptr);
}



inline jule::Ptr<_1e6ab6a8a_TypeKind> _1e6a29437_buildTypeWithGenerics(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e5d54961_TypeDecl>& _71146_t, jule::Slice<jule::Ptr<_1e6ab5d97_TypeAlias>> _71213_generics, jule::Ptr<_1e5e231a0_ReferenceStack> _71241_refers) {
	jule::Ptr<_1e6ac4ee9_typeChecker> _71317_tc = jule::new_ptr<_1e6ac4ee9_typeChecker>(_1e6ac4ee9_typeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_1e6ad2600_Lookup>(_self_, 3), ._field_refers=_71241_refers, ._field_useGenerics=_71213_generics, });;
	return _1e6acc265_checkDecl(_71317_tc.ptr(), _71146_t);
}



inline jule::Ptr<_1e6ab6a8a_TypeKind> _1e6a29745_buildType(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e5d54961_TypeDecl>& _72334_t) {
	return _1e6a29437_buildTypeWithGenerics(_self_, _72334_t,nullptr,nullptr);
}



inline jule::Ptr<_1e6ab6a8a_TypeKind> _1e6a29a53_selectType(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e5d54961_TypeDecl>& _72835_t) {
	jule::Ptr<_1e6ac4ee9_typeChecker> _72917_tc = jule::new_ptr<_1e6ac4ee9_typeChecker>(_1e6ac4ee9_typeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_1e6ad2600_Lookup>(_self_, 3), ._field_selection=true, });;
	return _1e6acc265_checkDecl(_72917_tc.ptr(), _72835_t);
}



inline jule::Ptr<_1e6a8c7db_Eval> _1e6a29ea4_evalpd(jule::Ptr<_1e6a22441_Sema> _self_, jule::Trait<_1e6ad2600_Lookup> _73930_l, jule::Ptr<_1e6ab6a8a_TypeKind> _73945_p, jule::Ptr<_1e6a3dd20_Var> _73963_owner) {
	jule::Ptr<_1e6a8c7db_Eval> _74017_e = jule::new_ptr<_1e6a8c7db_Eval>(_1e6a8c7db_Eval{._field_s=_self_, ._field_lookup=_73930_l, ._field_owner=_73963_owner, });;
	{
		auto &_match_expr{ _73930_l };
		
		if (_match_expr.type_is<jule::Ptr<_1e6a09505_scopeChecker>>()) {
			_case_begin_1b253122b:;
			{
				_74017_e.get()._field_unsafety=_1e6a0a2c5_isUnsafe(_73930_l.operator jule::Ptr<_1e6a09505_scopeChecker>());
			}
		}
		_match_end_1b25311b5:;
	};
	_74017_e.get()._field_prefix=_73945_p;
	return _74017_e;
}



inline jule::Ptr<_1e6a8c7db_Eval> _1e6a2a35b_evalp(jule::Ptr<_1e6a22441_Sema> _self_, jule::Trait<_1e6ad2600_Lookup> _75429_l, jule::Ptr<_1e6ab6a8a_TypeKind> _75444_p) {
	return _1e6a29ea4_evalpd(_self_, _75429_l,_75444_p,nullptr);
}



inline jule::Ptr<_1e6a8c7db_Eval> _1e6a2a669_eval(jule::Ptr<_1e6a22441_Sema> _self_, jule::Trait<_1e6ad2600_Lookup> _75928_l) {
	return _1e6a2a35b_evalp(_self_, _75928_l,nullptr);
}



inline jule::Bool _1e6a2ab64_checkAssignType(jule::Ptr<_1e6a22441_Sema> _self_, jule::Bool _76335_destIsRef, jule::Ptr<_1e6ab6a8a_TypeKind>& _76357_dest, jule::Ptr<_1e6a8ac6d_Data>& _76414_d, jule::Ptr<_1e47137a5_Token> _76428_errorToken) {
	if (_76414_d.get()._field_Decl) {
		_1e6a25103_pushErr(_self_.ptr(), _76428_errorToken,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return false;
	};
	if (_76335_destIsRef) {
		if ((!(_1e6ab7294_Equals(_76357_dest, _76414_d.get()._field_Kind)))) {
			_1e6a25103_pushErr(_self_.ptr(), _76428_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1e6ab6e86_Str(_76357_dest.ptr())),jule::Any(_1e6ab6e86_Str(_76414_d.get()._field_Kind.ptr()))}));
			return false;
		};
	} else {
		jule::Ptr<_1e6a76808_assignTypeChecker> _77521_atc = jule::new_ptr<_1e6a76808_assignTypeChecker>(_1e6a76808_assignTypeChecker{._field_s=_self_, ._field_dest=_76357_dest, ._field_d=_76414_d, ._field_errorToken=_76428_errorToken});;
		jule::Bool _78117_ok = _1e6a77980_check(_77521_atc.ptr());;
		if ((!(_78117_ok))) {
			return false;
		};
	};
	if (((!(_1e6a8b631_IsConst(_76414_d.ptr()))) || (_1e6ab8b9c_Prim(_76357_dest.ptr()) == nullptr))) {
		return true;
	};
	jule::Str _79117_kind = _1e6ab8b9c_Prim(_76357_dest.ptr()).get()._field_Kind;;
	{
		
		if (_1e6a05cd7_IsSigInt(_79117_kind)) {
			_case_begin_1b2537b17:;
			{
				_1e5e0e28a_SetI64(_76414_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1e5e0da3c_AsI64(_76414_d.get()._field_Constant.ptr())));
			}
		}
		else if (_1e6a05e19_IsUnsigInt(_79117_kind)) {
			_case_begin_1b2537b8e:;
			{
				_1e5e0e510_SetU64(_76414_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1e5e0dca1_AsU64(_76414_d.get()._field_Constant.ptr())));
			}
		}
		else if (_1e6a0617d_IsFloat(_79117_kind)) {
			_case_begin_1b2537c16:;
			{
				_1e5e0ec80_SetF64(_76414_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1e5e0e015_AsF64(_76414_d.get()._field_Constant.ptr())));
			}
		}
		_match_end_1b2537a4b:;
	};
	return true;
}



inline jule::Bool _1e6a2b0b5_checkTypeCompatibility(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e6ab6a8a_TypeKind>& _80547_dest, jule::Ptr<_1e6ab6a8a_TypeKind>& _80614_src, jule::Ptr<_1e47137a5_Token>& _80635_errorToken) {
	if ((_80614_src == nullptr)) {
		_1e6a25103_pushErr(_self_.ptr(), _80635_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1e6ab6e86_Str(_80547_dest.ptr())),jule::Any(_1e6ab6e86_Str(_80614_src.ptr()))}));
		return false;
	};
	if ((_1e6aba83b_Tup(_80614_src.ptr()) != nullptr)) {
		_1e6a25103_pushErr(_self_.ptr(), _80635_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1e6ab6e86_Str(_80547_dest.ptr())),jule::Any(_1e6ab6e86_Str(_80614_src.ptr()))}));
		return false;
	};
	_1e6a74bd0_typeCompatibilityChecker _82017_tcc = _1e6a74bd0_typeCompatibilityChecker{._field_s=_self_, ._field_dest=_80547_dest, ._field_src=_80614_src, ._field_errorToken=_80635_errorToken};;
	if (_1e6a762b9_check(&_82017_tcc)) {
		return true;
	};
	_1e6a25103_pushErr(_self_.ptr(), _80635_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1e6ab6e86_Str(_80547_dest.ptr())),jule::Any(_1e6ab6e86_Str(_80614_src.ptr()))}));
	return false;
}



inline jule::Ptr<_1e6ab6a8a_TypeKind> _1e6a2b48e_buildNonGenericTypeKind(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e5d54961_TypeDecl>& _84148_ast, jule::Slice<jule::Ptr<_1e5d62045_GenericDecl>>& _84214_generics) {
	jule::Ptr<_1e6ac4ee9_typeChecker> _84317_tc = jule::new_ptr<_1e6ac4ee9_typeChecker>(_1e6ac4ee9_typeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_1e6ad2600_Lookup>(_self_, 3), ._field_ignoreGenerics=_84214_generics, });;
	return _1e6acc265_checkDecl(_84317_tc.ptr(), _84148_ast);
}



inline void _1e6a2b747_buildFnNonGenericTypeKinds(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e5e202ce_FnIns>& _85151_f) {
	jule::Slice<jule::Ptr<_1e5d62045_GenericDecl>> _85217_generics = nullptr;;
	if (_1e5e1cd04_IsMethod(_85151_f.get()._field_Decl.ptr())) {
		_85217_generics=jule::append(_85151_f.get()._field_Decl.get()._field_Generics,_85151_f.get()._field_Decl.get()._field_Owner.get()._field_Generics);
	} else {
		_85217_generics=_85151_f.get()._field_Decl.get()._field_Generics;
	};
	{
		auto &expr = _85151_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1b2541516:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e1e410_ParamIns> _85921_p = *it;
			{
				if ((!(_1e5e1b41d_IsSelf(_85921_p.get()._field_Decl.ptr())))) {
					_85921_p.get()._field_Kind=_1e6a2b48e_buildNonGenericTypeKind(_self_, _85921_p.get()._field_Decl.get()._field_Kind.get()._field_Decl,_85217_generics);
				};
			}
			_iter_next_1b2541516:;
			++it;
			goto _iter_begin_1b2541516;
		}
		_iter_end_1b2541516:;
	};
	if ((!(_1e5e1ca90_IsVoid(_85151_f.get()._field_Decl.ptr())))) {
		_85151_f.get()._field_Result=_1e6a2b48e_buildNonGenericTypeKind(_self_, _85151_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl,_85217_generics);
	};
}



inline jule::Ptr<_1e5e202ce_FnIns> _1e6a2ba66_getTraitCheckFnKind(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e5e1c62d_Fn>& _86944_f) {
	if ((_86944_f.get()._field_Instances.len() == 1LL)) {
		return _86944_f.get()._field_Instances[0LL];
	};
	jule::Ptr<_1e5e202ce_FnIns> _87317_ins = _1e5e1da19_instanceForce(_86944_f);;
	jule::Ptr<_1e6ac4ee9_typeChecker> _87517_tc = jule::new_ptr<_1e6ac4ee9_typeChecker>(_1e6ac4ee9_typeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_1e6ad2600_Lookup>(_self_, 3), });;
	{
		auto &expr = _87317_ins.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1b25450ca:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e1e410_ParamIns> _87921_p = *it;
			{
				if ((!(_1e5e1b41d_IsSelf(_87921_p.get()._field_Decl.ptr())))) {
					_87921_p.get()._field_Kind=_1e6acc265_checkDecl(_87517_tc.ptr(), _87921_p.get()._field_Decl.get()._field_Kind.get()._field_Decl);
				};
			}
			_iter_next_1b25450ca:;
			++it;
			goto _iter_begin_1b25450ca;
		}
		_iter_end_1b25450ca:;
	};
	if ((!(_1e5e1ca90_IsVoid(_86944_f.ptr())))) {
		_87317_ins.get()._field_Result=_1e6acc265_checkDecl(_87517_tc.ptr(), _86944_f.get()._field_Result.get()._field_Kind.get()._field_Decl);
	};
	return _87317_ins;
}



inline jule::Bool _1e6a2beb7_checkConstraintsFn(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e5e202ce_FnIns>& _89143_f, jule::Ptr<_1e47137a5_Token>& _89159_et, jule::Ptr<_1e5e202ce_FnIns> _89175_exist) {
	jule::Ptr<_1e5e50683_constraintChecker> _89217_cc = _1e6a28b2e_constraintChecker(_self_);;
	_89217_cc.get()._field_et=_89159_et;
	_89217_cc.get()._field_fi=_89143_f;
	if ((_89175_exist != nullptr)) {
		{
			auto &expr = _89175_exist.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_1b254840d:;
			if (it != expr.end()) {
				jule::I64 _89618_i = it - expr.begin();
				jule::Ptr<_1e6ab535d_InsGeneric> _89625_g = *it;
				{
					_89143_f.get()._field_Generics[_89618_i].get()._field_Constraint=_89625_g.get()._field_Constraint;
				}
				_iter_next_1b254840d:;
				++it;
				_89618_i++;
				goto _iter_begin_1b254840d;
			}
			_iter_end_1b254840d:;
		};
	} else {
		_89217_cc.get()._field_uniq=true;
	};
	return _1e5e954b9_check(_89217_cc);
}



inline jule::Bool _1e6a2c418_checkConstraintsStruct(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e5d714d8_StructIns>& _90547_s, jule::Ptr<_1e47137a5_Token>& _90567_et, jule::Ptr<_1e5d714d8_StructIns> _90583_exist) {
	jule::Ptr<_1e5e50683_constraintChecker> _90617_cc = _1e6a28b2e_constraintChecker(_self_);;
	_90617_cc.get()._field_et=_90567_et;
	_90617_cc.get()._field_si=_90547_s;
	if ((_90583_exist != nullptr)) {
		{
			auto &expr = _90583_exist.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_1b254ae9e:;
			if (it != expr.end()) {
				jule::I64 _91018_i = it - expr.begin();
				jule::Ptr<_1e6ab535d_InsGeneric> _91025_g = *it;
				{
					_90547_s.get()._field_Generics[_91018_i].get()._field_Constraint=_91025_g.get()._field_Constraint;
				}
				_iter_next_1b254ae9e:;
				++it;
				_91018_i++;
				goto _iter_begin_1b254ae9e;
			}
			_iter_end_1b254ae9e:;
		};
	} else {
		_90617_cc.get()._field_uniq=true;
	};
	return _1e5e954b9_check(_90617_cc);
}



inline jule::Bool _1e6a2c7c0_fnEnvironment(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e5e202ce_FnIns>& _92238_f, jule::Fn<jule::Bool(jule::Ptr<_1e6a22441_Sema>&,jule::Slice<jule::Ptr<_1e6ab5d97_TypeAlias>>&)> _92249_algo) {
	jule::Ptr<_1e6a22441_Sema> _92317_sema = _92238_f.get()._field_Decl.get()._field_sema;;
	jule::Ptr<_1e6a86010_SymbolTable> _92417_old = _92238_f.get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1e6a24c3a_setCurrentFile(_92238_f.get()._field_Decl.get()._field_sema.ptr(), _92417_old);
	});;
	jule::Ptr<_1e6a86010_SymbolTable> _92617_file = _1e6a21a4a_findFile(_92238_f.get()._field_Decl.get()._field_sema.get()._field_files,_92238_f.get()._field_Decl.get()._field_Token.get()._field_File);;
	if ((_92617_file != nullptr)) {
		_1e6a24c3a_setCurrentFile(_92238_f.get()._field_Decl.get()._field_sema.ptr(), _92617_file);
	};
	jule::I64 _93117_size = _92238_f.get()._field_Generics.len();;
	if (((_92238_f.get()._field_Decl != nullptr) && (_92238_f.get()._field_Decl.get()._field_Owner != nullptr))) {
		_93117_size+=_92238_f.get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1e6ab5d97_TypeAlias>> _93617_generics = jule::Slice<jule::Ptr<_1e6ab5d97_TypeAlias>>::alloc(0LL,_93117_size);;
	_1e6a216e8_appendGenericTypeAliases(_93617_generics,_92238_f);
	jule::Bool _93913_ok = _92249_algo(_92317_sema,_93617_generics);;
	if ((_92317_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_92317_sema.get()._field_errors);
		_92317_sema.get()._field_errors=nullptr;
	};
	return _93913_ok;
}



inline void _1e6a2ca45_checkFnParamKind(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e5e1e410_ParamIns>& _94941_p) {
	_94941_p.get()._field_Kind.get()._field_Variadic=_94941_p.get()._field_Decl.get()._field_Variadic;
	if ((_94941_p.get()._field_Decl.get()._field_Reference && (!(_1e6ace07a_isValidForRef(_94941_p.get()._field_Kind))))) {
		_1e6a25103_pushErr(_self_.ptr(), _94941_p.get()._field_Decl.get()._field_Token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_1e6ab6e86_Str(_94941_p.get()._field_Kind.ptr()))}));
	};
}



inline jule::Bool _1e6a2cd53_reloadFnInsTypes(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e5e202ce_FnIns> _95640_f) {
	if ((_1e5e21665_IsBuiltin(_95640_f.ptr()) || _1e5e218c9_IsAnon(_95640_f.ptr()))) {
		return true;
	};
	return _1e6a2c7c0_fnEnvironment(_self_, _95640_f,jule::Fn<jule::Bool(jule::Ptr<_1e6a22441_Sema>&,jule::Slice<jule::Ptr<_1e6ab5d97_TypeAlias>>&)>([=](jule::Ptr<_1e6a22441_Sema>& _96043_sema, jule::Slice<jule::Ptr<_1e6ab5d97_TypeAlias>>& _96061_generics) mutable -> jule::Bool {
		jule::Bool _96121_ok = true;;
		{
			auto &expr = _95640_f.get()._field_Params;
			auto it = expr.begin();
			_iter_begin_1b255742d:;
			if (it != expr.end()) {
				jule::Ptr<_1e5e1e410_ParamIns> _96225_p = *it;
				{
					if (_1e5e1b41d_IsSelf(_96225_p.get()._field_Decl.ptr())) {
						if (_1e5e1b682_IsRef(_96225_p.get()._field_Decl.ptr())) {
							_96225_p.get()._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(jule::new_ptr<_1e6abece6_Sptr>(_1e6abece6_Sptr{._field_Elem=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_95640_f.get()._field_Owner, 0)})}), 7)});
						} else {
							_96225_p.get()._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_95640_f.get()._field_Owner, 0)});
						};
					} else {
						_96225_p.get()._field_Kind=_1e6a29437_buildTypeWithGenerics(_96043_sema, _96225_p.get()._field_Decl.get()._field_Kind.get()._field_Decl,_96061_generics,_95640_f.get()._field_Refers);
						if ((_96225_p.get()._field_Kind != nullptr)) {
							_1e6a2ca45_checkFnParamKind(_self_, _96225_p);
						} else {
							_96121_ok=false;
						};
					};
				}
				_iter_next_1b255742d:;
				++it;
				goto _iter_begin_1b255742d;
			}
			_iter_end_1b255742d:;
		};
		if ((!(_1e5e1ca90_IsVoid(_95640_f.get()._field_Decl.ptr())))) {
			_95640_f.get()._field_Result=_1e6a29437_buildTypeWithGenerics(_96043_sema, _95640_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl,_96061_generics,_95640_f.get()._field_Refers);
			_96121_ok=((_95640_f.get()._field_Result != nullptr) && _96121_ok);
		};
		return _96121_ok;
	}));
}



inline jule::Bool _1e6a2d2c6_checkRefValidityForInitExpr(jule::Ptr<_1e6a22441_Sema> _self_, jule::Bool _99247_leftMut, jule::Ptr<_1e6a8ac6d_Data>& _99267_d, jule::Ptr<_1e47137a5_Token>& _99282_errorToken) {
	{
		auto &_match_expr{ _99267_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1e6a3dd20_Var>>()) {
			_case_begin_1b255c972:;
			{
				goto _match_end_1b255bec1;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e16d97_TraitSubIdentExprModel>>()) {
			_case_begin_1b255c9d8:;
			{
				jule::Ptr<_1e5e16d97_TraitSubIdentExprModel> _99721_model = _99267_d.get()._field_Model.operator jule::Ptr<_1e5e16d97_TraitSubIdentExprModel>();;
				if ((!(_1e6a20582_isValidModelForRef(_99721_model.get()._field_Expr)))) {
					_1e6a25103_pushErr(_self_.ptr(), _99282_errorToken,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_99721_model.get()._field_Method.get()._field_Ident)}));
					return false;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e172b5_StructSubIdentExprModel>>()) {
			_case_begin_1b255cab5:;
			{
				jule::Ptr<_1e5e172b5_StructSubIdentExprModel> _100321_model = _99267_d.get()._field_Model.operator jule::Ptr<_1e5e172b5_StructSubIdentExprModel>();;
				if ((!(_1e6a20582_isValidModelForRef(_100321_model.get()._field_Expr.get()._field_Model)))) {
					_1e6a25103_pushErr(_self_.ptr(), _99282_errorToken,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_100321_model.get()._field_Field.get()._field_Decl.get()._field_Ident)}));
					return false;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e1787b_CommonIdentExprModel>>() || _match_expr.type_is<jule::Ptr<_1e5e17a68_CommonSubIdentExprModel>>()) {
			_case_begin_1b255cb2b:;
			{
				_1e6a25103_pushErr(_self_.ptr(), _99282_errorToken,jule::Str("built-in defines cannot pass to references", 42),jule::Slice<jule::Any>());
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e1558d_UnaryExprModel>>()) {
			_case_begin_1b255c114:;
			{
				jule::Ptr<_1e5e1558d_UnaryExprModel> _101321_unary = _99267_d.get()._field_Model.operator jule::Ptr<_1e5e1558d_UnaryExprModel>();;
				if ((_101321_unary.get()._field_Op.get()._field_Kind == jule::Str("*", 1))) {
					if ((!(_1e6a20582_isValidModelForRef(_99267_d.get()._field_Model)))) {
						_1e6a25103_pushErr(_self_.ptr(), _99282_errorToken,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(jule::Str("address from * &T", 17))}));
						return false;
					};
					goto _match_end_1b255bec1;
				};
				goto _case_begin_1b255c026;
			}
		}
		else {
			_case_begin_1b255c026:;
			{
				_1e6a25103_pushErr(_self_.ptr(), _99282_errorToken,jule::Str("references requires variable for assignment", 43),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_1b255bec1:;
	};
	if ((_99247_leftMut && (!(_99267_d.get()._field_Mutable)))) {
		_1e6a25103_pushErr(_self_.ptr(), _99282_errorToken,jule::Str("mutable reference cannot point to immutable data", 48),jule::Slice<jule::Any>());
		return false;
	};
	return true;
}



inline jule::Bool _1e6a2d89d_checkValidityForInitExpr(jule::Ptr<_1e6a22441_Sema> _self_, jule::Bool _103344_leftMut, jule::Bool _103359_leftRef, jule::Ptr<_1e6ab6a8a_TypeKind>& _103410_leftKind, jule::Ptr<_1e6a8ac6d_Data>& _103436_d, jule::Ptr<_1e47137a5_Token>& _103451_errorToken) {
	if (((_103344_leftMut && (!(_103436_d.get()._field_Mutable))) && _1e6ab7e87_Mutable(_103436_d.get()._field_Kind.ptr()))) {
		_1e6a25103_pushErr(_self_.ptr(), _103451_errorToken,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_1e6ab6e86_Str(_103436_d.get()._field_Kind.ptr()))}));
		return false;
	};
	if (_103359_leftRef) {
		if ((!(_1e6a2d2c6_checkRefValidityForInitExpr(_self_, _103344_leftMut,_103436_d,_103451_errorToken)))) {
			return false;
		};
	};
	jule::Ptr<_1e6a76808_assignTypeChecker> _104417_atc = jule::new_ptr<_1e6a76808_assignTypeChecker>(_1e6a76808_assignTypeChecker{._field_s=_self_, ._field_d=_103436_d, ._field_errorToken=_103451_errorToken});;
	return _1e6a76ece_checkValidity(_104417_atc.ptr());
}



inline jule::Bool _1e6a2dc66_checkTypeAliasDeclKind(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e6ab5d97_TypeAlias>& _105247_ta, jule::Trait<_1e6ad2600_Lookup> _105267_l) {
	jule::Bool _105280_ok = jule::Bool();
	jule::Ptr<_1e6a86010_SymbolTable> _105317_old = _self_.get()._field_file;;
	__JULE_DEFER({
		_1e6a24c3a_setCurrentFile(_self_.ptr(), _105317_old);
	});;
	if ((_105247_ta.get()._field_Token != nullptr)) {
		jule::Ptr<_1e6a86010_SymbolTable> _105821_file = _1e6a21a4a_findFile(_self_.get()._field_files,_105247_ta.get()._field_Token.get()._field_File);;
		if ((_105821_file != nullptr)) {
			_1e6a24c3a_setCurrentFile(_self_.ptr(), _105821_file);
		};
	};
	_105280_ok=_1e6a288ba_checkTypeWithRefers(_self_, _105247_ta.get()._field_Kind,_105267_l,nullptr,jule::new_ptr<_1e6ac42a1_referencer>(_1e6ac42a1_referencer{._field_ident=_105247_ta.get()._field_Ident, ._field_owner=jule::Any(_105247_ta), ._field_refs=(&(_105247_ta.get()._field_Refers))}));
	if (((_105280_ok && (_1e6ab98b2_Arr(_105247_ta.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) && _1e6ab98b2_Arr(_105247_ta.get()._field_Kind.get()._field_Kind.ptr()).get()._field_Auto)) {
		_1e6a25103_pushErr(_self_.ptr(), _105247_ta.get()._field_Kind.get()._field_Decl.get()._field_Token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
		_105280_ok=false;
	};
	return _105280_ok;
}



inline void _1e6a2e085_checkTypeAliasDecl(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e6ab5d97_TypeAlias>& _107543_ta, jule::Trait<_1e6ad2600_Lookup> _107563_l) {
	if (_1e4716049_IsIgnoreIdent(_107543_ta.get()._field_Ident)) {
		_1e6a25103_pushErr(_self_.ptr(), _107543_ta.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_1e6a2dc66_checkTypeAliasDeclKind(_self_, _107543_ta,_107563_l);
}



inline void _1e6a2e30a_checkTypeAliasDeclDup(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e6ab5d97_TypeAlias>& _108346_ta) {
	if (_1e4716049_IsIgnoreIdent(_108346_ta.get()._field_Ident)) {
		_1e6a25103_pushErr(_self_.ptr(), _108346_ta.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	if (_1e6a25c2a_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_108346_ta)),_108346_ta.get()._field_Ident,_108346_ta.get()._field_CppLinked)) {
		_1e6a25103_pushErr(_self_.ptr(), _108346_ta.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_108346_ta.get()._field_Ident)}));
		_1e6a25422_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1e6a2dc66_checkTypeAliasDeclKind(_self_, _108346_ta,jule::Trait<_1e6ad2600_Lookup>(_self_, 3));
}



inline jule::Bool _1e6a2e56e_checkTypeAliasDecls(jule::Ptr<_1e6a22441_Sema> _self_) {
	jule::Bool _109541_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_1b256ec92:;
		if (it != expr.end()) {
			jule::Ptr<_1e6ab5d97_TypeAlias> _109621_ta = *it;
			{
				_1e6a2e30a_checkTypeAliasDeclDup(_self_, _109621_ta);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_109541_ok = false;
					return _109541_ok;
				};
			}
			_iter_next_1b256ec92:;
			++it;
			goto _iter_begin_1b256ec92;
		}
		_iter_end_1b256ec92:;
	};
	_109541_ok = true;
	return _109541_ok;
}



inline void _1b25810e4_checkEnumItemsDup(_1e6a22441_Sema* _self_, jule::Slice<jule::Ptr<_1e5e30b3b_EnumItem>> _110739_items) {
	{
		auto &expr = _110739_items;
		auto it = expr.begin();
		_iter_begin_1b25823c0:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e30b3b_EnumItem> &_110816_item = *it;
			{
				if (_110816_item.get()._field_Ident.empty()) {
					goto _iter_next_1b25823c0;
				} else if (_1e4716049_IsIgnoreIdent(_110816_item.get()._field_Ident)) {
					_1e6a25103_pushErr(&(*_self_), _110816_item.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _110739_items;
						auto it = expr.begin();
						_iter_begin_1b2583107:;
						if (it != expr.end()) {
							jule::Ptr<_1e5e30b3b_EnumItem> &_111424_citem = *it;
							{
								if ((_110816_item == _111424_citem)) {
									goto _iter_end_1b2583107;
								} else if ((_110816_item.get()._field_Ident == _111424_citem.get()._field_Ident)) {
									_1e6a25103_pushErr(&(*_self_), _110816_item.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_110816_item.get()._field_Ident)}));
									_1e6a25422_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_1b2583107;
								};
							}
							_iter_next_1b2583107:;
							++it;
							goto _iter_begin_1b2583107;
						}
						_iter_end_1b2583107:;
					};
				};
			}
			_iter_next_1b25823c0:;
			++it;
			goto _iter_begin_1b25823c0;
		}
		_iter_end_1b25823c0:;
	};
}

inline void _1b258b918_checkEnumItemsDup(_1e6a22441_Sema* _self_, jule::Slice<jule::Ptr<_1e5e32665_TypeEnumItem>> _110739_items) {
	{
		auto &expr = _110739_items;
		auto it = expr.begin();
		_iter_begin_1b258cbe4:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e32665_TypeEnumItem> &_110816_item = *it;
			{
				if (_110816_item.get()._field_Ident.empty()) {
					goto _iter_next_1b258cbe4;
				} else if (_1e4716049_IsIgnoreIdent(_110816_item.get()._field_Ident)) {
					_1e6a25103_pushErr(&(*_self_), _110816_item.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _110739_items;
						auto it = expr.begin();
						_iter_begin_1b258d92b:;
						if (it != expr.end()) {
							jule::Ptr<_1e5e32665_TypeEnumItem> &_111424_citem = *it;
							{
								if ((_110816_item == _111424_citem)) {
									goto _iter_end_1b258d92b;
								} else if ((_110816_item.get()._field_Ident == _111424_citem.get()._field_Ident)) {
									_1e6a25103_pushErr(&(*_self_), _110816_item.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_110816_item.get()._field_Ident)}));
									_1e6a25422_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_1b258d92b;
								};
							}
							_iter_next_1b258d92b:;
							++it;
							goto _iter_begin_1b258d92b;
						}
						_iter_end_1b258d92b:;
					};
				};
			}
			_iter_next_1b258cbe4:;
			++it;
			goto _iter_begin_1b258cbe4;
		}
		_iter_end_1b258cbe4:;
	};
}



inline void _1e6a2ea69_checkEnumItemsStr(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e5e31631_Enum>& _112742_e) {
	jule::Ptr<_1e6a8c7db_Eval> _112817_eval = _1e6a2a669_eval(_self_, jule::Trait<_1e6ad2600_Lookup>(_self_, 3));;
	{
		auto &expr = _112742_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_1b2571a96:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e30b3b_EnumItem> _112921_item = *it;
			{
				if (_1e5e31026_AutoExpr(_112921_item.ptr())) {
					_112921_item.get()._field_Value=jule::new_ptr<_1e6a8bce6_Value>(_1e6a8bce6_Value{._field_Data=jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Constant=static__1e5e0c288_NewStr(_112921_item.get()._field_Ident)})});
					_112921_item.get()._field_Value.get()._field_Data.get()._field_Model=static_cast<jule::Any>(_112921_item.get()._field_Value.get()._field_Data.get()._field_Constant);
				} else {
					jule::Ptr<_1e6a8ac6d_Data> _113825_d = _1e6aa832e_evalExpr(_112817_eval, _112921_item.get()._field_Value.get()._field_Expr);;
					if ((_113825_d == nullptr)) {
						goto _iter_next_1b2571a96;
					};
					if ((!(_1e6a8b631_IsConst(_113825_d.ptr())))) {
						_1e6a25103_pushErr(_self_.ptr(), _112921_item.get()._field_Value.get()._field_Expr.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_1e6a2ab64_checkAssignType(_self_, false,_112742_e.get()._field_Kind.get()._field_Kind,_113825_d,_112921_item.get()._field_Token);
					_112921_item.get()._field_Value.get()._field_Data=_113825_d;
				};
			}
			_iter_next_1b2571a96:;
			++it;
			goto _iter_begin_1b2571a96;
		}
		_iter_end_1b2571a96:;
	};
}



inline void _1e6a2ecde_checkEnumItemsInt(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e5e31631_Enum>& _115342_e) {
	jule::Ptr<_1e6abb562_Prim> _115413_prim = _1e6ab8b9c_Prim(_115342_e.get()._field_Kind.get()._field_Kind.ptr());;
	jule::U64 _115517_max = static_cast<jule::U64>(_1e63bcc43_Max(_1e6abb8c5_Str(_115413_prim.ptr())));;
	jule::Ptr<_1e6a8c7db_Eval> _115617_eval = _1e6a2a669_eval(_self_, jule::Trait<_1e6ad2600_Lookup>(_self_, 3));;
	{
		auto &expr = _115342_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_1b257700d:;
		if (it != expr.end()) {
			jule::I64 _115714_i = it - expr.begin();
			jule::Ptr<_1e5e30b3b_EnumItem> _115721_item = *it;
			{
				if ((_115517_max == 0LLU)) {
					_1e6a25103_pushErr(_self_.ptr(), _115721_item.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					(_115517_max)--;
				};
				if (_1e5e31026_AutoExpr(_115721_item.ptr())) {
					_115721_item.get()._field_Value=jule::new_ptr<_1e6a8bce6_Value>(_1e6a8bce6_Value{._field_Data=jule::new_ptr<_1e6a8ac6d_Data>()});
					{
						
						if (_1e6a05cd7_IsSigInt(_1e6abb8c5_Str(_115413_prim.ptr()))) {
							_case_begin_1b2579593:;
							{
								_115721_item.get()._field_Value.get()._field_Data.get()._field_Constant=static__1e5e0bc27_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((_115517_max - (_115517_max - static_cast<jule::U64>(_115714_i))))));
							}
						}
						else {
							_case_begin_1b25791ec:;
							{
								_115721_item.get()._field_Value.get()._field_Data.get()._field_Constant=static__1e5e0bd59_NewU64(static_cast<jule::U64>((_115517_max - (_115517_max - static_cast<jule::U64>(_115714_i)))));
							}
						}
						_match_end_1b2579186:;
					};
					_115721_item.get()._field_Value.get()._field_Data.get()._field_Model=static_cast<jule::Any>(_115721_item.get()._field_Value.get()._field_Data.get()._field_Constant);
				} else {
					jule::Ptr<_1e6a8ac6d_Data> _117525_d = _1e6aa832e_evalExpr(_115617_eval, _115721_item.get()._field_Value.get()._field_Expr);;
					if ((_117525_d == nullptr)) {
						goto _iter_next_1b257700d;
					};
					if ((!(_1e6a8b631_IsConst(_117525_d.ptr())))) {
						_1e6a25103_pushErr(_self_.ptr(), _115721_item.get()._field_Value.get()._field_Expr.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_1e6a2ab64_checkAssignType(_self_, false,_115342_e.get()._field_Kind.get()._field_Kind,_117525_d,_115721_item.get()._field_Token);
					_115721_item.get()._field_Value.get()._field_Data=_117525_d;
				};
			}
			_iter_next_1b257700d:;
			++it;
			_115714_i++;
			goto _iter_begin_1b257700d;
		}
		_iter_end_1b257700d:;
	};
}



inline void _1e6a30064_checkEnumDecl(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e5e31631_Enum>& _118838_e) {
	if (_1e4716049_IsIgnoreIdent(_118838_e.get()._field_Ident)) {
		_1e6a25103_pushErr(_self_.ptr(), _118838_e.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1e6a25c2a_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_118838_e)),_118838_e.get()._field_Ident,false)) {
		_1e6a25103_pushErr(_self_.ptr(), _118838_e.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_118838_e.get()._field_Ident)}));
		_1e6a25422_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_118838_e.get()._field_Items.len() == 0LL)) {
		_1e6a25103_pushErr(_self_.ptr(), _118838_e.get()._field_Token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>::make({jule::Any(_118838_e.get()._field_Ident)}));
	};
	_1b25810e4_checkEnumItemsDup(_self_.ptr(), _118838_e.get()._field_Items);
	if ((_118838_e.get()._field_Kind != nullptr)) {
		if ((!(_1e6a28ed6_checkType(_self_, _118838_e.get()._field_Kind,jule::Trait<_1e6ad2600_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		_118838_e.get()._field_Kind=jule::new_ptr<_1e6ababe3_TypeSymbol>(_1e6ababe3_TypeSymbol{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("int", 3)), 6)})});
	};
	jule::Ptr<_1e6abb562_Prim> _121517_t = _1e6ab8b9c_Prim(_118838_e.get()._field_Kind.get()._field_Kind.ptr());;
	if ((_121517_t == nullptr)) {
		_1e6a25103_pushErr(_self_.ptr(), _118838_e.get()._field_Token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1e6abe796_IsStr(_121517_t.ptr())) {
			_case_begin_1b2587804:;
			{
				_1e6a2ea69_checkEnumItemsStr(_self_, _118838_e);
			}
		}
		else if (_1e6a0604b_IsInt(_1e6abb8c5_Str(_121517_t.ptr()))) {
			_case_begin_1b258754b:;
			{
				_1e6a2ecde_checkEnumItemsInt(_self_, _118838_e);
			}
		}
		else {
			_case_begin_1b258679d:;
			{
				_1e6a25103_pushErr(_self_.ptr(), _118838_e.get()._field_Token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
			}
		}
		_match_end_1b2586a9a:;
	};
}



inline void _1e6a302d9_checkTypeEnumDecl(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e5e32c2b_TypeEnum>& _123242_e) {
	if (_1e4716049_IsIgnoreIdent(_123242_e.get()._field_Ident)) {
		_1e6a25103_pushErr(_self_.ptr(), _123242_e.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1e6a25c2a_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_123242_e)),_123242_e.get()._field_Ident,false)) {
		_1e6a25103_pushErr(_self_.ptr(), _123242_e.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_123242_e.get()._field_Ident)}));
		_1e6a25422_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_123242_e.get()._field_Items.len() == 0LL)) {
		_1e6a25103_pushErr(_self_.ptr(), _123242_e.get()._field_Token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>::make({jule::Any(_123242_e.get()._field_Ident)}));
		return;;
	};
	_1b258b918_checkEnumItemsDup(_self_.ptr(), _123242_e.get()._field_Items);
	{
		auto &expr = _123242_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_1b258c3a8:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e32665_TypeEnumItem> _124621_item = *it;
			{
				if ((_124621_item.get()._field_Kind == nullptr)) {
					_1e6a25103_pushErr(_self_.ptr(), _124621_item.get()._field_Token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					goto _iter_next_1b258c3a8;
				};
				jule::Bool _125117_ok = _1e6a28ed6_checkType(_self_, _124621_item.get()._field_Kind,jule::Trait<_1e6ad2600_Lookup>(_self_, 3));;
				if ((!(_125117_ok))) {
					goto _iter_next_1b258c3a8;
				};
				jule::Ptr<_1e6abb562_Prim> _125517_p = _1e6ab8b9c_Prim(_124621_item.get()._field_Kind.get()._field_Kind.ptr());;
				if (((_125517_p != nullptr) && _1e6abea0a_IsAny(_125517_p.ptr()))) {
					_1e6a25103_pushErr(_self_.ptr(), _124621_item.get()._field_Token,jule::Str("the <any> type is not allowed for type-enum declarations", 56),jule::Slice<jule::Any>());
				};
			}
			_iter_next_1b258c3a8:;
			++it;
			goto _iter_begin_1b258c3a8;
		}
		_iter_end_1b258c3a8:;
	};
	if ((_123242_e.get()._field_Items.len() == 1LL)) {
		jule::Ptr<_1e5e32665_TypeEnumItem> _126121_item = _123242_e.get()._field_Items[0LL];;
		_1e6ab6a8a_TypeKind _126217_tk = _1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_123242_e, 4)};;
		if (((_126121_item.get()._field_Kind.get()._field_Kind != nullptr) && _1e6ab7294_Equals(_126121_item.get()._field_Kind.get()._field_Kind, ((jule::Ptr<_1e6ab6a8a_TypeKind>)((&(_126217_tk))))))) {
			_1e6a25103_pushErr(_self_.ptr(), _126121_item.get()._field_Token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any(_1e5e3305b_Str(_123242_e.ptr()))}));
		};
	};
}



inline jule::Bool _1e6a3054d_checkEnumDecls(jule::Ptr<_1e6a22441_Sema> _self_) {
	jule::Bool _127236_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_Enums;
		auto it = expr.begin();
		_iter_begin_1b2596208:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e31631_Enum> _127321_e = *it;
			{
				_1e6a30064_checkEnumDecl(_self_, _127321_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_127236_ok = false;
					return _127236_ok;
				};
			}
			_iter_next_1b2596208:;
			++it;
			goto _iter_begin_1b2596208;
		}
		_iter_end_1b2596208:;
	};
	_127236_ok = true;
	return _127236_ok;
}



inline jule::Bool _1e6a307b2_checkTypeEnumDecls(jule::Ptr<_1e6a22441_Sema> _self_) {
	jule::Bool _128440_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_1b25978e1:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e32c2b_TypeEnum> _128521_e = *it;
			{
				_1e6a302d9_checkTypeEnumDecl(_self_, _128521_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_128440_ok = false;
					return _128440_ok;
				};
			}
			_iter_next_1b25978e1:;
			++it;
			goto _iter_begin_1b25978e1;
		}
		_iter_end_1b25978e1:;
	};
	_128440_ok = true;
	return _128440_ok;
}



inline jule::Bool _1e6a30ac0_checkDeclGenerics(_1e6a22441_Sema* _self_, jule::Slice<jule::Ptr<_1e5d62045_GenericDecl>>& _129537_generics) {
	jule::Bool _129570_ok = jule::Bool();
	_129570_ok=true;
	{
		auto &expr = _129537_generics;
		auto it = expr.begin();
		_iter_begin_1b259922d:;
		if (it != expr.end()) {
			jule::I64 _129713_i = it - expr.begin();
			jule::Ptr<_1e5d62045_GenericDecl> &_129716_g = *it;
			{
				if (_1e4716049_IsIgnoreIdent(_129716_g.get()._field_Ident)) {
					_1e6a25103_pushErr(&(*_self_), _129716_g.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
					_129570_ok=false;
					goto _iter_next_1b259922d;
				};
				_julec_label_duplicationLookup:;
				{
					auto &expr = _129537_generics;
					auto it = expr.begin();
					_iter_begin_1b259a2c8:;
					if (it != expr.end()) {
						jule::I64 _130617_j = it - expr.begin();
						jule::Ptr<_1e5d62045_GenericDecl> &_130620_ct = *it;
						{
							{
								
								if ((_130617_j >= _129713_i)) {
									_case_begin_1b259bb26:;
									{
										goto _iter_end_1b259a2c8;
									}
								}
								else if ((_129716_g.get()._field_Ident == _130620_ct.get()._field_Ident)) {
									_case_begin_1b259bb9d:;
									{
										_1e6a25103_pushErr(&(*_self_), _129716_g.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_129716_g.get()._field_Ident)}));
										_1e6a25422_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										_129570_ok=false;
										goto _iter_end_1b259a2c8;
									}
								}
								_match_end_1b259ba05:;
							};
						}
						_iter_next_1b259a2c8:;
						++it;
						_130617_j++;
						goto _iter_begin_1b259a2c8;
					}
					_iter_end_1b259a2c8:;
				};
			}
			_iter_next_1b259922d:;
			++it;
			_129713_i++;
			goto _iter_begin_1b259922d;
		}
		_iter_end_1b259922d:;
	};
	return _129570_ok;
}



inline jule::Bool _1e6a30dcd_checkFnDeclParamsDup(_1e6a22441_Sema* _self_, jule::Ptr<_1e5e1c62d_Fn>& _132240_f) {
	jule::Bool _132250_ok = jule::Bool();
	_132250_ok=true;
	_julec_label_check:;
	{
		auto &expr = _132240_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1b259e024:;
		if (it != expr.end()) {
			jule::I64 _132513_i = it - expr.begin();
			jule::Ptr<_1e5e1ace1_Param> &_132516_p = *it;
			{
				{
					auto &expr = _132240_f.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1b259ec8e:;
					if (it != expr.end()) {
						jule::Ptr<_1e5d62045_GenericDecl> &_132720_g = *it;
						{
							if ((_132516_p.get()._field_Ident == _132720_g.get()._field_Ident)) {
								_132250_ok=false;
								_1e6a25103_pushErr(&(*_self_), _132516_p.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_132516_p.get()._field_Ident)}));
								_1e6a25422_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								goto _iter_next_1b259e024;
							};
						}
						_iter_next_1b259ec8e:;
						++it;
						goto _iter_begin_1b259ec8e;
					}
					_iter_end_1b259ec8e:;
				};
				_julec_label_paramsLookup:;
				{
					auto &expr = _132240_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_1b25a0223:;
					if (it != expr.end()) {
						jule::I64 _133717_j = it - expr.begin();
						jule::Ptr<_1e5e1ace1_Param> &_133720_jp = *it;
						{
							{
								
								if ((_133717_j >= _132513_i)) {
									_case_begin_1b25a2522:;
									{
										goto _iter_end_1b25a0223;
									}
								}
								else if ((_1e47162e1_IsAnonIdent(_132516_p.get()._field_Ident) || _1e47162e1_IsAnonIdent(_133720_jp.get()._field_Ident))) {
									_case_begin_1b25a2599:;
									{
										goto _iter_end_1b25a0223;
									}
								}
								else if ((_132516_p.get()._field_Ident == _133720_jp.get()._field_Ident)) {
									_case_begin_1b25a2621:;
									{
										_132250_ok=false;
										_1e6a25103_pushErr(&(*_self_), _132516_p.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_132516_p.get()._field_Ident)}));
										_1e6a25422_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_next_1b259e024;
									}
								}
								_match_end_1b25a23e0:;
							};
						}
						_iter_next_1b25a0223:;
						++it;
						_133717_j++;
						goto _iter_begin_1b25a0223;
					}
					_iter_end_1b25a0223:;
				};
			}
			_iter_next_1b259e024:;
			++it;
			_132513_i++;
			goto _iter_begin_1b259e024;
		}
		_iter_end_1b259e024:;
	};
	return _132250_ok;
}



inline jule::Bool _1e6a311db_checkFnDeclResultDup(_1e6a22441_Sema* _self_, jule::Ptr<_1e5e1c62d_Fn>& _135640_f) {
	jule::Bool _135650_ok = jule::Bool();
	_135650_ok=true;
	if (_1e5e1ca90_IsVoid(_135640_f.ptr())) {
		return _135650_ok;
	};
	{
		auto &expr = _135640_f.get()._field_Result.get()._field_Idents;
		auto it = expr.begin();
		_iter_begin_1b25a51e5:;
		if (it != expr.end()) {
			jule::I64 _136313_i = it - expr.begin();
			jule::Ptr<_1e47137a5_Token> &_136316_v = *it;
			{
				if ((_1e4716049_IsIgnoreIdent(_136316_v.get()._field_Kind) || _1e47162e1_IsAnonIdent(_136316_v.get()._field_Kind))) {
					goto _iter_next_1b25a51e5;
				};
				{
					auto &expr = _135640_f.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1b25a6933:;
					if (it != expr.end()) {
						jule::Ptr<_1e5d62045_GenericDecl> &_136820_g = *it;
						{
							if ((_136316_v.get()._field_Kind == _136820_g.get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1b25a6933:;
						++it;
						goto _iter_begin_1b25a6933;
					}
					_iter_end_1b25a6933:;
				};
				{
					auto &expr = _135640_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_1b25a7bba:;
					if (it != expr.end()) {
						jule::Ptr<_1e5e1ace1_Param> &_137420_p = *it;
						{
							if ((_136316_v.get()._field_Kind == _137420_p.get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1b25a7bba:;
						++it;
						goto _iter_begin_1b25a7bba;
					}
					_iter_end_1b25a7bba:;
				};
				_julec_label_itself_lookup:;
				{
					auto &expr = _135640_f.get()._field_Result.get()._field_Idents;
					auto it = expr.begin();
					_iter_begin_1b25a8e63:;
					if (it != expr.end()) {
						jule::I64 _138217_j = it - expr.begin();
						jule::Ptr<_1e47137a5_Token> &_138220_jv = *it;
						{
							{
								
								if ((_138217_j >= _136313_i)) {
									_case_begin_1b25a9c00:;
									{
										goto _iter_end_1b25a8e63;
									}
								}
								else if ((_138220_jv.get()._field_Kind == _136316_v.get()._field_Kind)) {
									_case_begin_1b25a9c77:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_1b25a9ace:;
							};
						}
						_iter_next_1b25a8e63:;
						++it;
						_138217_j++;
						goto _iter_begin_1b25a8e63;
					}
					_iter_end_1b25a8e63:;
				};
				goto _iter_next_1b25a51e5;
				_julec_label_exist:;
				_1e6a25103_pushErr(&(*_self_), _136316_v,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_136316_v.get()._field_Kind)}));
				_1e6a25422_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
				_135650_ok=false;
			}
			_iter_next_1b25a51e5:;
			++it;
			_136313_i++;
			goto _iter_begin_1b25a51e5;
		}
		_iter_end_1b25a51e5:;
	};
	return _135650_ok;
}



inline void _1e6a31461_checkFnDeclPrototype(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e5e1c62d_Fn>& _140345_f) {
	if ((_140345_f.get()._field_Exceptional && _140345_f.get()._field_CppLinked)) {
		_1e6a25103_pushErr(_self_.ptr(), _140345_f.get()._field_Token,jule::Str("cpp-linked defines cannot be exceptional", 40),jule::Slice<jule::Any>());
		return;;
	};
	if (_140345_f.get()._field_Exceptional) {
		if (_1e5e1d068_IsEntryPoint(_140345_f.ptr())) {
			_1e6a25103_pushErr(_self_.ptr(), _140345_f.get()._field_Token,jule::Str("entry point cannot be exceptional", 33),jule::Slice<jule::Any>());
		} else if (_1e5e1d2cc_IsInit(_140345_f.ptr())) {
			_1e6a25103_pushErr(_self_.ptr(), _140345_f.get()._field_Token,jule::Str("initializer function cannot be exceptional", 42),jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1e6a30ac0_checkDeclGenerics(_self_.ptr(), _140345_f.get()._field_Generics)))) {
			_case_begin_1b25ad066:;
		}
		else if ((!(_1e6a30dcd_checkFnDeclParamsDup(_self_.ptr(), _140345_f)))) {
			_case_begin_1b25ae3ec:;
		}
		else if ((!(_1e6a311db_checkFnDeclResultDup(_self_.ptr(), _140345_f)))) {
			_case_begin_1b25ae463:;
		}
		_match_end_1b25acdac:;
	};
}



inline void _1e6a316d6_checkTraitDeclMethod(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e5e1c62d_Fn>& _142445_f) {
	if (_1e4716049_IsIgnoreIdent(_142445_f.get()._field_Ident)) {
		_1e6a25103_pushErr(_self_.ptr(), _142445_f.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_142445_f.get()._field_sema=_self_;
	_1e6a31461_checkFnDeclPrototype(_self_, _142445_f);
	jule::Ptr<_1e5e202ce_FnIns> _143117_ins = _1e5e1dc7d_instance(_142445_f);;
	_1e6a2cd53_reloadFnInsTypes(_self_, _143117_ins);
	_143117_ins.get()._field_reloaded=true;
	_1e5e1e058_appendInstance(_142445_f.ptr(), _143117_ins);
}



inline void _1e6a3195b_checkTraitDeclMethods(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e5e2e4db_Trait>& _143746_t) {
	{
		auto &expr = _143746_t.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1b25b29c7:;
		if (it != expr.end()) {
			jule::I64 _143814_i = it - expr.begin();
			jule::Ptr<_1e5e1c62d_Fn> _143821_f = *it;
			{
				_1e6a316d6_checkTraitDeclMethod(_self_, _143821_f);
				_143746_t.get()._field_Mutable=(_143746_t.get()._field_Mutable || _143821_f.get()._field_Params[0LL].get()._field_Mutable);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return;;
				};
				_julec_label_duplicateLookup:;
				{
					auto &expr = _143746_t.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1b25b4721:;
					if (it != expr.end()) {
						jule::I64 _144917_j = it - expr.begin();
						jule::Ptr<_1e5e1c62d_Fn> _144920_jf = *it;
						{
							{
								
								if ((_144917_j >= _143814_i)) {
									_case_begin_1b25b58a9:;
									{
										goto _iter_end_1b25b4721;
									}
								}
								else if ((_143821_f.get()._field_Ident == _144920_jf.get()._field_Ident)) {
									_case_begin_1b25b5931:;
									{
										_1e6a25103_pushErr(_self_.ptr(), _143821_f.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_143821_f.get()._field_Ident)}));
										_1e6a25422_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_end_1b25b4721;
									}
								}
								_match_end_1b25b5788:;
							};
						}
						_iter_next_1b25b4721:;
						++it;
						_144917_j++;
						goto _iter_begin_1b25b4721;
					}
					_iter_end_1b25b4721:;
				};
			}
			_iter_next_1b25b29c7:;
			++it;
			_143814_i++;
			goto _iter_begin_1b25b29c7;
		}
		_iter_end_1b25b29c7:;
	};
}



inline void _1e6a31bd1_checkTraitDecl(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e5e2e4db_Trait>& _146839_t) {
	if (_1e4716049_IsIgnoreIdent(_146839_t.get()._field_Ident)) {
		_1e6a25103_pushErr(_self_.ptr(), _146839_t.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1e6a25c2a_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_146839_t)),_146839_t.get()._field_Ident,false)) {
		_1e6a25103_pushErr(_self_.ptr(), _146839_t.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_146839_t.get()._field_Ident)}));
		_1e6a25422_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1e6a3195b_checkTraitDeclMethods(_self_, _146839_t);
}



inline jule::Bool _1e6a31e45_checkTraitDecls(jule::Ptr<_1e6a22441_Sema> _self_) {
	jule::Bool _148037_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_Traits;
		auto it = expr.begin();
		_iter_begin_1b25b98d0:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e2e4db_Trait> _148121_t = *it;
			{
				_1e6a31bd1_checkTraitDecl(_self_, _148121_t);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_148037_ok = false;
					return _148037_ok;
				};
			}
			_iter_next_1b25b98d0:;
			++it;
			goto _iter_begin_1b25b98d0;
		}
		_iter_end_1b25b98d0:;
	};
	_148037_ok = true;
	return _148037_ok;
}



inline jule::Bool _1e6a322ec_checkTraitImplMethods(_1e6a22441_Sema* _self_, jule::Ptr<_1e5e2e4db_Trait>& _149145_base, jule::Ptr<_1e5eb8a5e_Impl>& _149160_ipl) {
	jule::Bool _149174_ok = jule::Bool();
	_149174_ok=true;
	{
		auto &expr = _149160_ipl.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1b25bb65c:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e1c62d_Fn> &_149316_f = *it;
			{
				if ((_1e5e30366_FindMethod(_149145_base.ptr(), _149316_f.get()._field_Ident) == nullptr)) {
					_1e6a25103_pushErr(&(*_self_), _149316_f.get()._field_Token,jule::Str("undefined identifier: trait @ has no define @", 45),jule::Slice<jule::Any>::make({jule::Any(_149145_base.get()._field_Ident),jule::Any(_149316_f.get()._field_Ident)}));
					_149174_ok=false;
				};
			}
			_iter_next_1b25bb65c:;
			++it;
			goto _iter_begin_1b25bb65c;
		}
		_iter_end_1b25bb65c:;
	};
	return _149174_ok;
}



inline jule::Bool _1e6a326a4_implToStruct(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e5d4518d_Struct>& _150237_dest, jule::Ptr<_1e5eb8a5e_Impl>& _150257_ipl) {
	jule::Bool _150271_ok = jule::Bool();
	_150271_ok=true;
	{
		auto &expr = _150257_ipl.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1b25bd9a0:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e1c62d_Fn> _150621_f = *it;
			{
				if (((_1e5d3180b_FindMethod(_150237_dest.ptr(), _150621_f.get()._field_Ident,_150621_f.get()._field_Statically) != nullptr) || (_1e5d355bd_FindField(_150237_dest.ptr(), _150621_f.get()._field_Ident) != nullptr))) {
					_1e6a25103_pushErr(_self_.ptr(), _150621_f.get()._field_Token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_150237_dest.get()._field_Ident),jule::Any(_150621_f.get()._field_Ident)}));
					_150271_ok=false;
					goto _iter_next_1b25bd9a0;
				};
				if (((_150237_dest.get()._field_Generics.len() > 0LL) && (_150621_f.get()._field_Generics.len() > 0LL))) {
					{
						auto &expr = _150621_f.get()._field_Generics;
						auto it = expr.begin();
						_iter_begin_1b25c109b:;
						if (it != expr.end()) {
							jule::Ptr<_1e5d62045_GenericDecl> _151424_fg = *it;
							{
								{
									auto &expr = _150237_dest.get()._field_Generics;
									auto it = expr.begin();
									_iter_begin_1b25c18d7:;
									if (it != expr.end()) {
										jule::Ptr<_1e5d62045_GenericDecl> _151528_dg = *it;
										{
											if ((_151424_fg.get()._field_Ident == _151528_dg.get()._field_Ident)) {
												_1e6a25103_pushErr(_self_.ptr(), _151424_fg.get()._field_Token,jule::Str("methods cannot have same generic identifier with owner same time", 64),jule::Slice<jule::Any>());
												_150271_ok=false;
											};
										}
										_iter_next_1b25c18d7:;
										++it;
										goto _iter_begin_1b25c18d7;
									}
									_iter_end_1b25c18d7:;
								};
							}
							_iter_next_1b25c109b:;
							++it;
							goto _iter_begin_1b25c109b;
						}
						_iter_end_1b25c109b:;
					};
				};
				_1e6a26049_checkDirectives(_self_, _150621_f.get()._field_Directives,jule::Any(_150621_f));
				_150621_f.get()._field_sema=_self_;
				_150621_f.get()._field_Owner=_150237_dest;
				_150237_dest.get()._field_Methods = jule::alloc_for_append(_150237_dest.get()._field_Methods,1);_150237_dest.get()._field_Methods.__push(_150621_f);;
			}
			_iter_next_1b25bd9a0:;
			++it;
			goto _iter_begin_1b25bd9a0;
		}
		_iter_end_1b25bd9a0:;
	};
	{
		auto &expr = _150257_ipl.get()._field_Statics;
		auto it = expr.begin();
		_iter_begin_1b25c37c9:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a3dd20_Var> _153121_v = *it;
			{
				;
				if (((_1e5d3180b_FindMethod(_150237_dest.ptr(), _153121_v.get()._field_Ident,true) != nullptr) || (_1e5d345ab_FindStatic(_150237_dest.ptr(), _153121_v.get()._field_Ident) != nullptr))) {
					_1e6a25103_pushErr(_self_.ptr(), _153121_v.get()._field_Token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_150237_dest.get()._field_Ident),jule::Any(_153121_v.get()._field_Ident)}));
					_150271_ok=false;
					goto _iter_next_1b25c37c9;
				};
				_1e6a33243_checkVarDecl(_self_, _153121_v,jule::Trait<_1e6ad2600_Lookup>(_self_, 3));
				_1e6a36884_checkTypeVar(_self_, _153121_v,jule::Trait<_1e6ad2600_Lookup>(_self_, 3));
				_150237_dest.get()._field_Statics = jule::alloc_for_append(_150237_dest.get()._field_Statics,1);_150237_dest.get()._field_Statics.__push(_153121_v);;
			}
			_iter_next_1b25c37c9:;
			++it;
			goto _iter_begin_1b25c37c9;
		}
		_iter_end_1b25c37c9:;
	};
	return _150271_ok;
}



inline void _1e6a32929_implTrait(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e5eb8a5e_Impl>& _154634_decl) {
	jule::Ptr<_1e6ab6a8a_TypeKind> _154717_base_t = _1e6a29a53_selectType(_self_, _154634_decl.get()._field_Base);;
	if ((_154717_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1e5e2e4db_Trait> _155117_base = _1e6aba363_Trait(_154717_base_t.ptr());;
	if ((_155117_base == nullptr)) {
		_1e6a25103_pushErr(_self_.ptr(), _154634_decl.get()._field_Base.get()._field_Token,jule::Str("invalid base type for impl: @", 29),jule::Slice<jule::Any>::make({jule::Any(_1e6ab6e86_Str(_154717_base_t.ptr()))}));
		_1e6a25422_pushSugggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e6ab6a8a_TypeKind> _155817_destT = _1e6a29a53_selectType(_self_, _154634_decl.get()._field_Dest);;
	if ((_155817_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1e5d714d8_StructIns> _156217_destS = _1e6aba0ee_Struct(_155817_destT.ptr());;
	if ((_156217_destS == nullptr)) {
		_1e6a25103_pushErr(_self_.ptr(), _154634_decl.get()._field_Dest.get()._field_Token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_1e6ab6e86_Str(_155817_destT.ptr()))}));
		_1e6a25422_pushSugggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e5d4518d_Struct> _156917_dest = _156217_destS.get()._field_Decl;;
	if ((_1e4719536_Dir(_156917_dest.get()._field_Token.get()._field_File.ptr()) != _1e4719536_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_1e6a25103_pushErr(_self_.ptr(), _154634_decl.get()._field_Dest.get()._field_Token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	_155117_base.get()._field_Implemented = jule::alloc_for_append(_155117_base.get()._field_Implemented,1);_155117_base.get()._field_Implemented.__push(_156917_dest);;
	_156917_dest.get()._field_Implements = jule::alloc_for_append(_156917_dest.get()._field_Implements,1);_156917_dest.get()._field_Implements.__push(_155117_base);;
	if ((_154634_decl.get()._field_Statics.len() > 0LL)) {
		_1e6a25103_pushErr(_self_.ptr(), _154634_decl.get()._field_Statics[0LL].get()._field_Token,jule::Str("trait implementations cannot implement static field", 51),jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1e6a322ec_checkTraitImplMethods(_self_.ptr(), _155117_base,_154634_decl)))) {
			_case_begin_1b25ce20d:;
			{
				return;;
			}
		}
		else if ((!(_1e6a326a4_implToStruct(_self_, _156917_dest,_154634_decl)))) {
			_case_begin_1b25ce274:;
			{
				return;;
			}
		}
		_match_end_1b25cd3b6:;
	};
}



inline void _1e6a32b9e_implStruct(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e5eb8a5e_Impl>& _159135_decl) {
	jule::Ptr<_1e6ab6a8a_TypeKind> _159217_destT = _1e6a29a53_selectType(_self_, _159135_decl.get()._field_Dest);;
	if ((_159217_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1e5d714d8_StructIns> _159617_destS = _1e6aba0ee_Struct(_159217_destT.ptr());;
	if ((_159617_destS == nullptr)) {
		_1e6a25103_pushErr(_self_.ptr(), _159135_decl.get()._field_Dest.get()._field_Token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_1e6ab6e86_Str(_159217_destT.ptr()))}));
		_1e6a25422_pushSugggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e5d4518d_Struct> _160317_dest = _159617_destS.get()._field_Decl;;
	if ((_1e4719536_Dir(_160317_dest.get()._field_Token.get()._field_File.ptr()) != _1e4719536_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_1e6a25103_pushErr(_self_.ptr(), _159135_decl.get()._field_Dest.get()._field_Token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1e6a326a4_implToStruct(_self_, _160317_dest,_159135_decl)))) {
			_case_begin_1b25d3d06:;
			{
				return;;
			}
		}
		_match_end_1b25d26a6:;
	};
}



inline void _1e6a32e24_implImpl(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e5eb8a5e_Impl>& _161633_decl) {
	{
		
		if (_1e5e989ea_IsTraitImpl(_161633_decl.ptr())) {
			_case_begin_1b25d48ea:;
			{
				_1e6a32929_implTrait(_self_, _161633_decl);
			}
		}
		else if (_1e5e99248_IsStructImpl(_161633_decl.ptr())) {
			_case_begin_1b25d4972:;
			{
				_1e6a32b9e_implStruct(_self_, _161633_decl);
			}
		}
		_match_end_1b25d47c9:;
	};
}



inline void _1e6a33243_checkVarDecl(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e6a3dd20_Var>& _162737_decl, jule::Trait<_1e6ad2600_Lookup> _162753_l) {
	if (_1e4716049_IsIgnoreIdent(_162737_decl.get()._field_Ident)) {
		_1e6a25103_pushErr(_self_.ptr(), _162737_decl.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	if (_1e6a3e43b_IsTypeInferred(_162737_decl.ptr())) {
		if ((!(_1e6a3e1c7_IsInitialized(_162737_decl.ptr())))) {
			_1e6a25103_pushErr(_self_.ptr(), _162737_decl.get()._field_Token,jule::Str("type inferred declarations should have a initializer expression", 63),jule::Slice<jule::Any>());
		};
	} else {
		_1e6a28ed6_checkType(_self_, _162737_decl.get()._field_Kind,_162753_l);
	};
	if ((_162737_decl.get()._field_Constant && _162737_decl.get()._field_Reference)) {
		_1e6a25103_pushErr(_self_.ptr(), _162737_decl.get()._field_Token,jule::Str("references cannot be constant", 29),jule::Slice<jule::Any>());
	};
	if ((!(_1e6a3e1c7_IsInitialized(_162737_decl.ptr())))) {
		if (_162737_decl.get()._field_Constant) {
			_1e6a25103_pushErr(_self_.ptr(), _162737_decl.get()._field_Token,jule::Str("missing expression for constant variable initialization", 55),jule::Slice<jule::Any>());
		};
		if (_162737_decl.get()._field_Statically) {
			_1e6a25103_pushErr(_self_.ptr(), _162737_decl.get()._field_Token,jule::Str("static variables must be have initialize expression", 51),jule::Slice<jule::Any>());
		};
		if (_162737_decl.get()._field_Reference) {
			_1e6a25103_pushErr(_self_.ptr(), _162737_decl.get()._field_Token,jule::Str("reference variables must be have lvalue initialize expression", 61),jule::Slice<jule::Any>());
		};
	};
}



inline void _1e6a334b8_checkGlobalVarDecl(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e6a3dd20_Var>& _165943_decl) {
	if (_1e6a25c2a_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_165943_decl)),_165943_decl.get()._field_Ident,_165943_decl.get()._field_CppLinked)) {
		_1e6a25103_pushErr(_self_.ptr(), _165943_decl.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_165943_decl.get()._field_Ident)}));
		_1e6a25422_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_165943_decl.get()._field_CppLinked && _165943_decl.get()._field_Constant)) {
		_1e6a25103_pushErr(_self_.ptr(), _165943_decl.get()._field_Token,jule::Str("cpp linked variables cannot be constant", 39),jule::Slice<jule::Any>());
	};
	if ((((!(_165943_decl.get()._field_CppLinked)) && (!(_165943_decl.get()._field_Constant))) && (!(_165943_decl.get()._field_Statically)))) {
		_1e6a25103_pushErr(_self_.ptr(), _165943_decl.get()._field_Token,jule::Str("global variables must be static", 31),jule::Slice<jule::Any>());
		_1e6a25422_pushSugggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30),jule::Slice<jule::Any>());
	};
	_1e6a26049_checkDirectives(_self_, _165943_decl.get()._field_Directives,jule::Any(_165943_decl));
	_1e6a33243_checkVarDecl(_self_, _165943_decl,jule::Trait<_1e6ad2600_Lookup>(_self_, 3));
}



inline jule::Bool _1e6a3372c_checkGlobalDecls(jule::Ptr<_1e6a22441_Sema> _self_) {
	jule::Bool _167638_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1b25de40a:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a3dd20_Var> _167721_decl = *it;
			{
				_1e6a334b8_checkGlobalVarDecl(_self_, _167721_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_167638_ok = false;
					return _167638_ok;
				};
			}
			_iter_next_1b25de40a:;
			++it;
			goto _iter_begin_1b25de40a;
		}
		_iter_end_1b25de40a:;
	};
	_167638_ok = true;
	return _167638_ok;
}



inline jule::Bool _1e6a33ad4_checkStructTraitImpl(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e5d4518d_Struct>& _168745_strct, jule::Ptr<_1e5e2e4db_Trait>& _168766_trt) {
	jule::Bool _168781_ok = jule::Bool();
	{
		auto &expr = _168766_trt.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1b25e0e34:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e1c62d_Fn> _168821_tf = *it;
			{
				jule::Bool _168921_exist = false;;
				jule::Ptr<_1e5e1c62d_Fn> _169021_sf = _1e5d3180b_FindMethod(_168745_strct.ptr(), _168821_tf.get()._field_Ident,_168821_tf.get()._field_Statically);;
				jule::Ptr<_1e5e202ce_FnIns> _169117_tfK = _1e6a2ba66_getTraitCheckFnKind(_self_, _168821_tf);;
				if ((_169021_sf != nullptr)) {
					jule::Ptr<_1e5e202ce_FnIns> _169325_sfK = _1e6a2ba66_getTraitCheckFnKind(_self_, _169021_sf);;
					_168921_exist=(((_169117_tfK.get()._field_Decl.get()._field_Public == _169325_sfK.get()._field_Decl.get()._field_Public) && (_169117_tfK.get()._field_Decl.get()._field_Ident == _169325_sfK.get()._field_Decl.get()._field_Ident)) && _1e5e2118c_equalsTrait(_169117_tfK, _169325_sfK));
				};
				if (_168921_exist) {
					jule::Ptr<_1e5d21268_Directive> _169921_d = _1e6ab12d2_findDirective(_169021_sf.get()._field_Directives,jule::Str("deprecated", 10));;
					if ((_169921_d != nullptr)) {
						_1e6a25103_pushErr(_self_.ptr(), _169921_d.get()._field_Tag,jule::Str("trait implementations cannot have deprecated code", 49),jule::Slice<jule::Any>());
					};
					_168781_ok=false;
				} else {
					;
					jule::Str _170625_s = _1e5e21ee5_GetKindStr(_169117_tfK.ptr(), true);;
					if (_168821_tf.get()._field_Public) {
						(_170625_s).buffer.insert(0, (jule::Str()));;
					};
					_1e6a25103_pushErr(_self_.ptr(), _168745_strct.get()._field_Token,jule::Str("trait @ derived but not implemented define @", 44),jule::Slice<jule::Any>::make({jule::Any(_168766_trt.get()._field_Ident),jule::Any(_170625_s)}));
					_168781_ok=false;
				};
			}
			_iter_next_1b25e0e34:;
			++it;
			goto _iter_begin_1b25e0e34;
		}
		_iter_end_1b25e0e34:;
	};
	return _168781_ok;
}



inline jule::Bool _1e6a33de2_checkStructImpls(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e5d4518d_Struct>& _171741_s) {
	jule::Bool _171755_ok = jule::Bool();
	_171755_ok=true;
	{
		auto &expr = _171741_s.get()._field_Implements;
		auto it = expr.begin();
		_iter_begin_1b25e7aa6:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e2e4db_Trait> _171921_trt = *it;
			{
				_171755_ok=(_1e6a33ad4_checkStructTraitImpl(_self_, _171741_s,_171921_trt) && _171755_ok);
			}
			_iter_next_1b25e7aa6:;
			++it;
			goto _iter_begin_1b25e7aa6;
		}
		_iter_end_1b25e7aa6:;
	};
	return _171755_ok;
}



inline jule::Bool _1e6a34200_checkStructFields(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e5d4518d_Struct>& _172542_st) {
	jule::Bool _172557_ok = jule::Bool();
	_172557_ok=true;
	{
		auto &expr = _172542_st.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1b25e8ee7:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d37658_Field> _172721_f = *it;
			{
				_172721_f.get()._field_Owner=_172542_st;
				{
					auto &expr = _172542_st.get()._field_Fields;
					auto it = expr.begin();
					_iter_begin_1b25e9adb:;
					if (it != expr.end()) {
						jule::Ptr<_1e5d37658_Field> _172920_cf = *it;
						{
							if ((_172721_f == _172920_cf)) {
								goto _iter_end_1b25e9adb;
							} else if ((_172721_f.get()._field_Ident == _172920_cf.get()._field_Ident)) {
								_1e6a25103_pushErr(_self_.ptr(), _172721_f.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_172721_f.get()._field_Ident)}));
								_1e6a25422_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								_172557_ok=false;
							};
						}
						_iter_next_1b25e9adb:;
						++it;
						goto _iter_begin_1b25e9adb;
					}
					_iter_end_1b25e9adb:;
				};
			}
			_iter_next_1b25e8ee7:;
			++it;
			goto _iter_begin_1b25e8ee7;
		}
		_iter_end_1b25e8ee7:;
	};
	return _172557_ok;
}



inline void _1e6a34475_checkStructDecl(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e5d4518d_Struct>& _174240_s) {
	if (_1e4716049_IsIgnoreIdent(_174240_s.get()._field_Ident)) {
		_1e6a25103_pushErr(_self_.ptr(), _174240_s.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1e6a25c2a_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174240_s)),_174240_s.get()._field_Ident,_174240_s.get()._field_CppLinked)) {
		_1e6a25103_pushErr(_self_.ptr(), _174240_s.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_174240_s.get()._field_Ident)}));
		_1e6a25422_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1e6a26049_checkDirectives(_self_, _174240_s.get()._field_Directives,jule::Any(_174240_s));
	{
		
		if ((!(_1e6a30ac0_checkDeclGenerics(_self_.ptr(), _174240_s.get()._field_Generics)))) {
			_case_begin_1b25eda24:;
		}
		else if ((!(_1e6a34200_checkStructFields(_self_, _174240_s)))) {
			_case_begin_1b25eda8a:;
		}
		else if ((!(_1e6a33de2_checkStructImpls(_self_, _174240_s)))) {
			_case_begin_1b25edb01:;
		}
		_match_end_1b25ed8d1:;
	};
}



inline jule::Bool _1e6a346d9_checkStructDecls(jule::Ptr<_1e6a22441_Sema> _self_) {
	jule::Bool _176038_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_1b25eeddd:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d4518d_Struct> _176121_s = *it;
			{
				_1e6a34475_checkStructDecl(_self_, _176121_s);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_176038_ok = false;
					return _176038_ok;
				};
			}
			_iter_next_1b25eeddd:;
			++it;
			goto _iter_begin_1b25eeddd;
		}
		_iter_end_1b25eeddd:;
	};
	_176038_ok = true;
	return _176038_ok;
}



inline void _1e6a3495e_checkFnDecl(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e5e1c62d_Fn>& _177136_f) {
	if (_1e4716049_IsIgnoreIdent(_177136_f.get()._field_Ident)) {
		_1e6a25103_pushErr(_self_.ptr(), _177136_f.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_1e6a26049_checkDirectives(_self_, _177136_f.get()._field_Directives,jule::Any(_177136_f));
	_177136_f.get()._field_sema=_self_;
	_1e6a31461_checkFnDeclPrototype(_self_, _177136_f);
	if (_1e6a25c2a_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_177136_f)),_177136_f.get()._field_Ident,_177136_f.get()._field_CppLinked)) {
		if ((_177136_f.get()._field_Ident == jule::Str("init", 4))) {
			jule::Ptr<_1e5e1c62d_Fn> _178321_init = _1e6a23c39_FindFn(_self_.ptr(), jule::Str("init", 4),false);;
			if ((_178321_init != nullptr)) {
				return;;
			};
		};
		_1e6a25103_pushErr(_self_.ptr(), _177136_f.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_177136_f.get()._field_Ident)}));
		_1e6a25422_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1e6a34bc3_checkFnDecls(jule::Ptr<_1e6a22441_Sema> _self_) {
	jule::Bool _179434_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1b2605113:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e1c62d_Fn> _179521_f = *it;
			{
				_1e6a3495e_checkFnDecl(_self_, _179521_f);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_179434_ok = false;
					return _179434_ok;
				};
			}
			_iter_next_1b2605113:;
			++it;
			goto _iter_begin_1b2605113;
		}
		_iter_end_1b2605113:;
	};
	_179434_ok = true;
	return _179434_ok;
}



inline void _1e6a3508b_pushCycleError(_1e6a22441_Sema* _self_, jule::Ptr<_1e5d4518d_Struct>& _180530_st1, jule::Ptr<_1e5d4518d_Struct>& _180545_st2, jule::Str& _180564_message) {
	;
	jule::Str _180713_refers_to = _1e43e3e58_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_180530_st1.get()._field_Ident),jule::Any(_180545_st2.get()._field_Ident)}));;
	(_180564_message).buffer.insert(0, (((_1e350c9ac_Repeat(jule::Str(" ", 1),4LL) + _180713_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1e6a354dc_checkCrossCycle(_1e6a22441_Sema* _self_, jule::Ptr<_1e5d4518d_Struct>& _181131_st1, jule::Ptr<_1e5d4518d_Struct>& _181146_st2, jule::Str& _181165_message) {
	{
		auto &expr = _181146_st2.get()._field_Uses;
		auto it = expr.begin();
		_iter_begin_1b26086aa:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d4518d_Struct> &_181216_u = *it;
			{
				if ((_181216_u == _181131_st1)) {
					_1e6a3508b_pushCycleError(&(*_self_), _181146_st2,_181216_u,_181165_message);
					return false;
				};
				if ((!(_1e6a354dc_checkCrossCycle(&(*_self_), _181131_st1,_181216_u,_181165_message)))) {
					_1e6a3508b_pushCycleError(&(*_self_), _181146_st2,_181216_u,_181165_message);
					return false;
				};
			}
			_iter_next_1b26086aa:;
			++it;
			goto _iter_begin_1b26086aa;
		}
		_iter_end_1b26086aa:;
	};
	return true;
}



inline jule::Bool _1e6a35960_checkStructDeriveIllegalCycles(_1e6a22441_Sema* _self_, jule::Str _182649_derive, jule::Ptr<_1e5d4518d_Struct>& _182663_st1, jule::Ptr<_1e6ab6a8a_TypeKind>& _182682_k) {
	jule::Bool _182698_ok = jule::Bool();
	jule::Ptr<_1e5d4518d_Struct> _182717_st2 = _1e6acec18_getStructFromKind(_182682_k);;
	if ((_182717_st2 == nullptr)) {
		_182698_ok = true;
		return _182698_ok;
	};
	if ((_182663_st1 == _182717_st2)) {
		_1e6a25103_pushErr(&(*_self_), _182663_st1.get()._field_Token,jule::Str("illegal cycle for derive @, struct @ refers to itself", 53),jule::Slice<jule::Any>::make({jule::Any(_182649_derive),jule::Any(_182663_st1.get()._field_Ident)}));
		_182698_ok = false;
		return _182698_ok;
	};
	jule::Str _183917_message = jule::Str();;
	if ((!(_1e6a354dc_checkCrossCycle(&(*_self_), _182663_st1,_182717_st2,_183917_message)))) {
		jule::Str _184121_errMsg = _183917_message;;
		_183917_message=jule::Str();
		_1e6a3508b_pushCycleError(&(*_self_), _182663_st1,_182717_st2,_183917_message);
		_184121_errMsg=(_184121_errMsg + _183917_message);
		_1e6a25103_pushErr(&(*_self_), _182663_st1.get()._field_Token,jule::Str("illegal cross cycle for derive @;\n@", 35),jule::Slice<jule::Any>::make({jule::Any(_182649_derive),jule::Any(_184121_errMsg)}));
		_182698_ok = false;
		return _182698_ok;
	};
	_182698_ok = true;
	return _182698_ok;
}



inline jule::Bool _1e6a35ca1_checkStructInsDeriveClone(_1e6a22441_Sema* _self_, jule::Ptr<_1e5d714d8_StructIns> _185148_st) {
	jule::Bool _185166_ok = jule::Bool();
	if ((!(_1e5d36cd9_IsDerives(_185148_st.get()._field_Decl.ptr(), jule::Str("Clone", 5))))) {
		_185166_ok = true;
		return _185166_ok;
	};
	{
		auto &expr = _185148_st.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1b260eded:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d4c805_FieldIns> _185521_f = *it;
			{
				if ((_185521_f.get()._field_Kind == nullptr)) {
					goto _iter_next_1b260eded;
				};
				if ((!(_1e6ab86c4_SupportsCloning(_185521_f.get()._field_Kind.ptr())))) {
					_1e6a25103_pushErr(&(*_self_), _185148_st.get()._field_Decl.get()._field_Token,jule::Str("type @ is not compatible to derive @", 36),jule::Slice<jule::Any>::make({jule::Any(_1e6ab6e86_Str(_185521_f.get()._field_Kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					_185166_ok = false;
					return _185166_ok;
				};
				if ((!(_1e6a35960_checkStructDeriveIllegalCycles(&(*_self_), jule::Str("Clone", 5),_185148_st.get()._field_Decl,_185521_f.get()._field_Kind)))) {
					_185166_ok = false;
					return _185166_ok;
				};
			}
			_iter_next_1b260eded:;
			++it;
			goto _iter_begin_1b260eded;
		}
		_iter_end_1b260eded:;
	};
	_185166_ok = true;
	return _185166_ok;
}



inline void _1e6a35e8d_checkPackageDecls(jule::Ptr<_1e6a22441_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1b26104e7:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a86010_SymbolTable> _187321_f = *it;
			{
				_1e6a24c3a_setCurrentFile(_self_.ptr(), _187321_f);
				if ((!(_1e6a307b2_checkTypeEnumDecls(_self_)))) {
					return;;
				};
				if ((!(_1e6a2e56e_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1b26104e7:;
			++it;
			goto _iter_begin_1b26104e7;
		}
		_iter_end_1b26104e7:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1b2612a7c:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a86010_SymbolTable> _188321_f = *it;
			{
				_1e6a24c3a_setCurrentFile(_self_.ptr(), _188321_f);
				if ((!(_1e6a31e45_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1b2612a7c:;
			++it;
			goto _iter_begin_1b2612a7c;
		}
		_iter_end_1b2612a7c:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1b2613b9e:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a86010_SymbolTable> _189021_f = *it;
			{
				_1e6a24c3a_setCurrentFile(_self_.ptr(), _189021_f);
				if ((!(_1e6a3372c_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1b2613b9e:;
			++it;
			goto _iter_begin_1b2613b9e;
		}
		_iter_end_1b2613b9e:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1b26141bb:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a86010_SymbolTable> _189721_f = *it;
			{
				_1e6a24c3a_setCurrentFile(_self_.ptr(), _189721_f);
				{
					
					if ((!(_1e6a34bc3_checkFnDecls(_self_)))) {
						_case_begin_1b26163ee:;
					}
					else if ((!(_1e6a346d9_checkStructDecls(_self_)))) {
						_case_begin_1b2616465:;
					}
					else {
						_case_begin_1b2616388:;
						{
							goto _iter_next_1b26141bb;
						}
					}
					_match_end_1b2616322:;
				};
				return;;
			}
			_iter_next_1b26141bb:;
			++it;
			goto _iter_begin_1b26141bb;
		}
		_iter_end_1b26141bb:;
	};
}



inline void _1e6a362ce_checkDataForTypeInference(_1e6a22441_Sema* _self_, jule::Ptr<_1e6a8ac6d_Data>& _190945_d, jule::Ptr<_1e47137a5_Token>& _190956_err_token) {
	{
		
		if (_1e6a8b158_IsNil(_190945_d.ptr())) {
			_case_begin_1b2617422:;
			{
				_1e6a25103_pushErr(&(*_self_), _190956_err_token,jule::Str("nil is cannot use with type inferred definitions", 48),jule::Slice<jule::Any>());
			}
		}
		else if (_1e6a8b3bc_IsVoid(_190945_d.ptr())) {
			_case_begin_1b2617499:;
			{
				_1e6a25103_pushErr(&(*_self_), _190956_err_token,jule::Str("void data is cannot use for type inferred definitions", 53),jule::Slice<jule::Any>());
			}
		}
		else if (_190945_d.get()._field_Kind.get()._field_Variadic) {
			_case_begin_1b2617521:;
			{
				_1e6a25103_pushErr(&(*_self_), _190956_err_token,jule::Str("invalid expression for type inference", 37),jule::Slice<jule::Any>());
			}
		}
		_match_end_1b26172e0:;
	};
}



inline void _1e6a36565_checkVar(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e6a3dd20_Var>& _192033_v) {
	if (_192033_v.get()._field_CppLinked) {
		return;;
	};
	if (_1e6a3e43b_IsTypeInferred(_192033_v.ptr())) {
		_192033_v.get()._field_Kind=jule::new_ptr<_1e6ababe3_TypeSymbol>(_1e6ababe3_TypeSymbol{._field_Kind=_192033_v.get()._field_Value.get()._field_Data.get()._field_Kind});
		_1e6a362ce_checkDataForTypeInference(_self_.ptr(), _192033_v.get()._field_Value.get()._field_Data,_192033_v.get()._field_Value.get()._field_Expr.get()._field_Token);
		_1e6a2d89d_checkValidityForInitExpr(_self_, _192033_v.get()._field_Mutable,_192033_v.get()._field_Reference,_192033_v.get()._field_Kind.get()._field_Kind,_192033_v.get()._field_Value.get()._field_Data,_192033_v.get()._field_Value.get()._field_Expr.get()._field_Token);
	} else {
		jule::Ptr<_1e6ac28ed_Arr> _193721_arr = _1e6ab98b2_Arr(_192033_v.get()._field_Kind.get()._field_Kind.ptr());;
		if ((_193721_arr != nullptr)) {
			if (_193721_arr.get()._field_Auto) {
				jule::Ptr<_1e6ac28ed_Arr> _194025_dataArr = _1e6ab98b2_Arr(_192033_v.get()._field_Value.get()._field_Data.get()._field_Kind.ptr());;
				if ((_194025_dataArr != nullptr)) {
					_193721_arr.get()._field_N=_194025_dataArr.get()._field_N;
				};
			};
		};
		if (_1e6a2ab64_checkAssignType(_self_, _192033_v.get()._field_Reference,_192033_v.get()._field_Kind.get()._field_Kind,_192033_v.get()._field_Value.get()._field_Data,_192033_v.get()._field_Value.get()._field_Expr.get()._field_Token)) {
			_1e6a2d89d_checkValidityForInitExpr(_self_, _192033_v.get()._field_Mutable,_192033_v.get()._field_Reference,_192033_v.get()._field_Kind.get()._field_Kind,_192033_v.get()._field_Value.get()._field_Data,_192033_v.get()._field_Value.get()._field_Expr.get()._field_Token);
		};
	};
	if ((_192033_v.get()._field_Reference && (!(_1e6ace07a_isValidForRef(_192033_v.get()._field_Kind.get()._field_Kind))))) {
		_1e6a25103_pushErr(_self_.ptr(), _192033_v.get()._field_Token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_1e6ab6e86_Str(_192033_v.get()._field_Kind.get()._field_Kind.ptr()))}));
	};
	if (_192033_v.get()._field_Constant) {
		if ((!(_1e6a8b631_IsConst(_192033_v.get()._field_Value.get()._field_Data.ptr())))) {
			_1e6a25103_pushErr(_self_.ptr(), _192033_v.get()._field_Value.get()._field_Expr.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		};
	} else {
		_192033_v.get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
	};
	if ((_1e6aba83b_Tup(_192033_v.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
		_192033_v.get()._field_Kind.get()._field_Kind=nullptr;
	};
}



inline void _1e6a36884_checkTypeVar(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e6a3dd20_Var>& _197537_decl, jule::Trait<_1e6ad2600_Lookup> _197553_l) {
	if ((_197537_decl.get()._field_CppLinked || (!(_1e6a3e1c7_IsInitialized(_197537_decl.ptr()))))) {
		return;;
	};
	jule::Ptr<_1e6a8c7db_Eval> _198017_eval = nullptr;;
	if ((_197537_decl.get()._field_Kind != nullptr)) {
		_198017_eval=_1e6a29ea4_evalpd(_self_, _197553_l,_197537_decl.get()._field_Kind.get()._field_Kind,_197537_decl);
	} else {
		_198017_eval=_1e6a29ea4_evalpd(_self_, _197553_l,nullptr,_197537_decl);
	};
	_198017_eval.get()._field_immutable=(!(_197537_decl.get()._field_Mutable));
	_197537_decl.get()._field_Value.get()._field_Data=_1e6aa832e_evalExpr(_198017_eval, _197537_decl.get()._field_Value.get()._field_Expr);
	if ((_197537_decl.get()._field_Value.get()._field_Data == nullptr)) {
		return;;
	};
	_1e6a36565_checkVar(_self_, _197537_decl);
}



inline void _1e6a36a60_checkGlobalTypes(jule::Ptr<_1e6a22441_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1b26264ec:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a3dd20_Var> _199621_decl = *it;
			{
				if (((_1e6a3e1c7_IsInitialized(_199621_decl.ptr()) && (_199621_decl.get()._field_Value.get()._field_Data == nullptr)) || (_1e6a3e43b_IsTypeInferred(_199621_decl.ptr()) && (_199621_decl.get()._field_Kind.get()._field_Kind == nullptr)))) {
					_1e6a36884_checkTypeVar(_self_, _199621_decl,jule::Trait<_1e6ad2600_Lookup>(_self_, 3));
				};
			}
			_iter_next_1b26264ec:;
			++it;
			goto _iter_begin_1b26264ec;
		}
		_iter_end_1b26264ec:;
	};
}



inline jule::Ptr<_1e5e202ce_FnIns> _1e6a36e17_readyToCheckFn(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e5d714d8_StructIns>& _200739_s, jule::Ptr<_1e5e1c62d_Fn>& _200759_f) {
	jule::Ptr<_1e5e202ce_FnIns> _200817_ins = _1e5e1dc7d_instance(_200759_f);;
	if ((_200759_f.get()._field_Instances.len() != 0LL)) {
		return _200817_ins;
	};
	_200817_ins.get()._field_Owner=_200739_s;
	_1e5e1e058_appendInstance(_200759_f.ptr(), _200817_ins);
	_200817_ins.get()._field_reloaded=true;
	if (_1e6a2cd53_reloadFnInsTypes(_self_, _200817_ins)) {
		return _200817_ins;
	};
	return nullptr;
}



inline void _1e6a37236_checkTypeMethod(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e5d714d8_StructIns>& _202140_s, jule::Ptr<_1e5e1c62d_Fn>& _202160_f) {
	if ((_202160_f.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1e5e202ce_FnIns> _202617_ins = _202160_f.get()._field_Instances[0LL];;
	if ((_202617_ins.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1e6a3990e_checkFnIns(_self_, _202617_ins);
}



inline jule::Ptr<_1e5e202ce_FnIns> _1e6a37687_checkStructInsOp(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e5d714d8_StructIns>& _203441_s, jule::Ptr<_1e5e1c62d_Fn>& _203461_f, jule::Fn<jule::Bool(jule::Ptr<_1e5e1c62d_Fn>)> _203469_p) {
	if ((((_203461_f == nullptr) || (_203461_f.get()._field_Generics.len() > 0LL)) || (!(_203469_p(_203461_f))))) {
		return nullptr;
	};
	return _203461_f.get()._field_Instances[0LL];
}



inline jule::Bool _1e6a37a3e_checkStructEnv(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e5d714d8_StructIns>& _204439_s, jule::Ptr<_1e47137a5_Token> _204458_errorToken) {
	jule::Bool _204480_ok = jule::Bool();
	_1e6ac4ee9_typeChecker _204517_tc = _1e6ac4ee9_typeChecker{._field_s=_204439_s.get()._field_Decl.get()._field_sema, ._field_lookup=jule::Trait<_1e6ad2600_Lookup>(_204439_s.get()._field_Decl.get()._field_sema, 3), ._field_referencer=jule::new_ptr<_1e6ac42a1_referencer>(_1e6ac42a1_referencer{._field_ident=_204439_s.get()._field_Decl.get()._field_Ident, ._field_owner=jule::Any(_204439_s.get()._field_Decl), }), ._field_refers=_204439_s.get()._field_Refers, };;
	if ((_204439_s.get()._field_Generics.len() > 0LL)) {
		_204517_tc._field_useGenerics=jule::Slice<jule::Ptr<_1e6ab5d97_TypeAlias>>::alloc(0LL,_204439_s.get()._field_Generics.len());
		{
			auto &expr = _204439_s.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_1b26305e4:;
			if (it != expr.end()) {
				jule::I64 _205718_i = it - expr.begin();
				jule::Ptr<_1e6ab535d_InsGeneric> _205725_g = *it;
				{
					_204517_tc._field_useGenerics = jule::alloc_for_append(_204517_tc._field_useGenerics,1);_204517_tc._field_useGenerics.__push(jule::new_ptr<_1e6ab5d97_TypeAlias>(_1e6ab5d97_TypeAlias{._field_Ident=_204439_s.get()._field_Decl.get()._field_Generics[_205718_i].get()._field_Ident, ._field_Kind=jule::new_ptr<_1e6ababe3_TypeSymbol>(_1e6ababe3_TypeSymbol{._field_Kind=_205725_g.get()._field_Kind}), }));;
				}
				_iter_next_1b26305e4:;
				++it;
				_205718_i++;
				goto _iter_begin_1b26305e4;
			}
			_iter_end_1b26305e4:;
		};
	};
	jule::Ptr<_1e6a86010_SymbolTable> _206517_oldFile = _self_.get()._field_file;;
	__JULE_DEFER({
		_1e6a24c3a_setCurrentFile(_self_.ptr(), _206517_oldFile);
	});;
	if ((_self_.get()._field_file.get()._field_File != _204439_s.get()._field_Decl.get()._field_Token.get()._field_File)) {
		jule::Ptr<_1e6a86010_SymbolTable> _206921_file = _1e6a21a4a_findFile(_self_.get()._field_files,_204439_s.get()._field_Decl.get()._field_Token.get()._field_File);;
		if ((_206921_file != nullptr)) {
			_1e6a24c3a_setCurrentFile(_self_.ptr(), _206921_file);
		};
	};
	if ((_204439_s.get()._field_Generics.len() > 0LL)) {
		jule::Ptr<_1e5e50683_constraintChecker> _207621_cc = _1e6a28b2e_constraintChecker(_self_);;
		_207621_cc.get()._field_et=_204458_errorToken;
		_207621_cc.get()._field_si=_204439_s;
		_207621_cc.get()._field_genericsA=_204517_tc._field_useGenerics;
		_207621_cc.get()._field_uniq=true;
		if ((!(_1e5e954b9_check(_207621_cc)))) {
			return _204480_ok;
		};
	};
	jule::Ptr<_1e6a8c7db_Eval> _208617_eval = _1e6a2a669_eval(_self_, jule::Trait<_1e6ad2600_Lookup>(_self_, 3));;
	_204480_ok=true;
	{
		auto &expr = _204439_s.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1b263661c:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d4c805_FieldIns> _208821_f = *it;
			{
				jule::Ptr<_1e6ab6a8a_TypeKind> _208921_kind = _1e6acc265_checkDecl(&_204517_tc, _208821_f.get()._field_Decl.get()._field_Kind.get()._field_Decl);;
				_204480_ok=((_208921_kind != nullptr) && _204480_ok);
				if ((_208921_kind == nullptr)) {
					if (((_self_ != _204439_s.get()._field_Decl.get()._field_sema) && (_204439_s.get()._field_Decl.get()._field_sema.get()._field_errors.len() > 0LL))) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_204439_s.get()._field_Decl.get()._field_sema.get()._field_errors);
						_204439_s.get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
					};
					goto _iter_next_1b263661c;
				};
				_208821_f.get()._field_Kind=_208921_kind;
				_204439_s.get()._field_Mutable=(_204439_s.get()._field_Mutable || ((!(_208821_f.get()._field_Decl.get()._field_Mutable)) && _1e6ab7e87_Mutable(_208821_f.get()._field_Kind.ptr())));
				_1e6a35ca1_checkStructInsDeriveClone(_self_.ptr(), _204439_s);
				if ((_208821_f.get()._field_Decl.get()._field_Default == nullptr)) {
					goto _iter_next_1b263661c;
				};
				_208617_eval.get()._field_prefix=_208821_f.get()._field_Kind;
				_208617_eval.get()._field_field=_208821_f;
				_208821_f.get()._field_Default=_1e6aa832e_evalExpr(_208617_eval, _208821_f.get()._field_Decl.get()._field_Default);
				if ((_208821_f.get()._field_Default == nullptr)) {
					goto _iter_next_1b263661c;
				};
				;
				_1e6a2ab64_checkAssignType(_self_, false,_208821_f.get()._field_Kind,_208821_f.get()._field_Default,_208821_f.get()._field_Decl.get()._field_Default.get()._field_Token);
			}
			_iter_next_1b263661c:;
			++it;
			goto _iter_begin_1b263661c;
		}
		_iter_end_1b263661c:;
	};
	return _204480_ok;
}



inline jule::Bool _1e6a37de6_precheckStructIns(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e5d714d8_StructIns>& _212242_s, jule::Ptr<_1e47137a5_Token> _212261_errorToken) {
	jule::Bool _212283_ok = jule::Bool();
	_212283_ok=_1e6a37a3e_checkStructEnv(_self_, _212242_s,_212261_errorToken);
	if ((!(_212283_ok))) {
		_212283_ok = false;
		return _212283_ok;
	};
	{
		auto &expr = _212242_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1b263d091:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e1c62d_Fn> _212721_f = *it;
			{
				if ((_212721_f.get()._field_Generics.len() == 0LL)) {
					if ((_1e6a36e17_readyToCheckFn(_self_, _212242_s,_212721_f) == nullptr)) {
						_212283_ok = false;
						return _212283_ok;
					};
				};
			}
			_iter_next_1b263d091:;
			++it;
			goto _iter_begin_1b263d091;
		}
		_iter_end_1b263d091:;
	};
	_212283_ok = true;
	return _212283_ok;
}



inline void _1e6a3816b_checkStructIns(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e5d714d8_StructIns>& _213739_s) {
	{
		auto &expr = _213739_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1b263eb42:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e1c62d_Fn> _213821_f = *it;
			{
				_1e6a37236_checkTypeMethod(_self_, _213739_s,_213821_f);
			}
			_iter_next_1b263eb42:;
			++it;
			goto _iter_begin_1b263eb42;
		}
		_iter_end_1b263eb42:;
	};
}



inline void _1e6a383e1_checkTypeStruct(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e5d4518d_Struct>& _214340_s) {
	if (_214340_s.get()._field_CppLinked) {
		return;;
	};
	if ((_214340_s.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _214340_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1b264114e:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d714d8_StructIns> _215621_ins = *it;
			{
				_1e6a3816b_checkStructIns(_self_, _215621_ins);
			}
			_iter_next_1b264114e:;
			++it;
			goto _iter_begin_1b264114e;
		}
		_iter_end_1b264114e:;
	};
}



inline void _1e6a385bc_checkStructTypes(jule::Ptr<_1e6a22441_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_1b2641c65:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d4518d_Struct> _216221_s = *it;
			{
				_1e6a383e1_checkTypeStruct(_self_, _216221_s);
			}
			_iter_next_1b2641c65:;
			++it;
			goto _iter_begin_1b2641c65;
		}
		_iter_end_1b2641c65:;
	};
}



inline void _1e6a38864_checkStructInsOperators(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e5d714d8_StructIns> _216747_s) {
	{
		auto &expr = _216747_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1b26430b8:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e1c62d_Fn> _216821_m = *it;
			{
				{
					auto &_match_expr{ _216821_m.get()._field_Ident };
					
					if (_match_expr == jule::Str("Eq", 2)) {
						_case_begin_1b2643d44:;
						{
							_216747_s.get()._field_Operators._field_Eq=_1e6a37687_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e5e1c62d_Fn>)>([=](jule::Ptr<_1e5e1c62d_Fn> _217165_f) mutable -> jule::Bool {
								return static__1e6a40849_Eq(_217165_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Gt", 2)) {
						_case_begin_1b2643daa:;
						{
							_216747_s.get()._field_Operators._field_Gt=_1e6a37687_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e5e1c62d_Fn>)>([=](jule::Ptr<_1e5e1c62d_Fn> _217365_f) mutable -> jule::Bool {
								return static__1e6a40ae1_Gt(_217365_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("GtEq", 4)) {
						_case_begin_1b2643e32:;
						{
							_216747_s.get()._field_Operators._field_GtEq=_1e6a37687_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e5e1c62d_Fn>)>([=](jule::Ptr<_1e5e1c62d_Fn> _217567_f) mutable -> jule::Bool {
								return static__1e6a40d88_GtEq(_217567_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Lt", 2)) {
						_case_begin_1b2643ea9:;
						{
							_216747_s.get()._field_Operators._field_Lt=_1e6a37687_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e5e1c62d_Fn>)>([=](jule::Ptr<_1e5e1c62d_Fn> _217765_f) mutable -> jule::Bool {
								return static__1e6a41130_Lt(_217765_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("LtEq", 4)) {
						_case_begin_1b2644031:;
						{
							_216747_s.get()._field_Operators._field_LtEq=_1e6a37687_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e5e1c62d_Fn>)>([=](jule::Ptr<_1e5e1c62d_Fn> _217967_f) mutable -> jule::Bool {
								return static__1e6a413c7_LtEq(_217967_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Shl", 3)) {
						_case_begin_1b26440a8:;
						{
							_216747_s.get()._field_Operators._field_Shl=_1e6a37687_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e5e1c62d_Fn>)>([=](jule::Ptr<_1e5e1c62d_Fn> _218166_f) mutable -> jule::Bool {
								return static__1e6a4690a_Shl(_218166_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Shr", 3)) {
						_case_begin_1b2644130:;
						{
							_216747_s.get()._field_Operators._field_Shr=_1e6a37687_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e5e1c62d_Fn>)>([=](jule::Ptr<_1e5e1c62d_Fn> _218366_f) mutable -> jule::Bool {
								return static__1e6a46ab4_Shr(_218366_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Add", 3)) {
						_case_begin_1b26441a7:;
						{
							_216747_s.get()._field_Operators._field_Add=_1e6a37687_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e5e1c62d_Fn>)>([=](jule::Ptr<_1e5e1c62d_Fn> _218566_f) mutable -> jule::Bool {
								return static__1e6a46d5b_Add(_218566_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Sub", 3)) {
						_case_begin_1b264422e:;
						{
							_216747_s.get()._field_Operators._field_Sub=_1e6a37687_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e5e1c62d_Fn>)>([=](jule::Ptr<_1e5e1c62d_Fn> _218766_f) mutable -> jule::Bool {
								return static__1e6a47103_Sub(_218766_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Div", 3)) {
						_case_begin_1b26442a6:;
						{
							_216747_s.get()._field_Operators._field_Div=_1e6a37687_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e5e1c62d_Fn>)>([=](jule::Ptr<_1e5e1c62d_Fn> _218966_f) mutable -> jule::Bool {
								return static__1e6a4739a_Div(_218966_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Mul", 3)) {
						_case_begin_1b264432d:;
						{
							_216747_s.get()._field_Operators._field_Mul=_1e6a37687_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e5e1c62d_Fn>)>([=](jule::Ptr<_1e5e1c62d_Fn> _219166_f) mutable -> jule::Bool {
								return static__1e6a47642_Mul(_219166_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Mod", 3)) {
						_case_begin_1b26443a5:;
						{
							_216747_s.get()._field_Operators._field_Mod=_1e6a37687_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e5e1c62d_Fn>)>([=](jule::Ptr<_1e5e1c62d_Fn> _219366_f) mutable -> jule::Bool {
								return static__1e6a478d9_Mod(_219366_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitAnd", 6)) {
						_case_begin_1b264442c:;
						{
							_216747_s.get()._field_Operators._field_BitAnd=_1e6a37687_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e5e1c62d_Fn>)>([=](jule::Ptr<_1e5e1c62d_Fn> _219569_f) mutable -> jule::Bool {
								return static__1e6a47b81_BitAnd(_219569_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitOr", 5)) {
						_case_begin_1b26444a4:;
						{
							_216747_s.get()._field_Operators._field_BitOr=_1e6a37687_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e5e1c62d_Fn>)>([=](jule::Ptr<_1e5e1c62d_Fn> _219768_f) mutable -> jule::Bool {
								return static__1e6a47e28_BitOr(_219768_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitXor", 6)) {
						_case_begin_1b264452b:;
						{
							_216747_s.get()._field_Operators._field_BitXor=_1e6a37687_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e5e1c62d_Fn>)>([=](jule::Ptr<_1e5e1c62d_Fn> _219969_f) mutable -> jule::Bool {
								return static__1e6a481c0_BitXor(_219969_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Neg", 3)) {
						_case_begin_1b26445a3:;
						{
							_216747_s.get()._field_Operators._field_Neg=_1e6a37687_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e5e1c62d_Fn>)>([=](jule::Ptr<_1e5e1c62d_Fn> _220166_f) mutable -> jule::Bool {
								return static__1e6a487a8_Neg(_220166_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Pos", 3)) {
						_case_begin_1b264462a:;
						{
							_216747_s.get()._field_Operators._field_Pos=_1e6a37687_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e5e1c62d_Fn>)>([=](jule::Ptr<_1e5e1c62d_Fn> _220366_f) mutable -> jule::Bool {
								return static__1e6a48a50_Pos(_220366_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitNot", 6)) {
						_case_begin_1b26446a2:;
						{
							_216747_s.get()._field_Operators._field_BitNot=_1e6a37687_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e5e1c62d_Fn>)>([=](jule::Ptr<_1e5e1c62d_Fn> _220569_f) mutable -> jule::Bool {
								return static__1e6a48ce7_BitNot(_220569_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("AddAssign", 9)) {
						_case_begin_1b2644729:;
						{
							_216747_s.get()._field_Operators._field_AddAssign=_1e6a37687_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e5e1c62d_Fn>)>([=](jule::Ptr<_1e5e1c62d_Fn> _220772_f) mutable -> jule::Bool {
								return static__1e6a493d0_AddAssign(_220772_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("SubAssign", 9)) {
						_case_begin_1b26447a1:;
						{
							_216747_s.get()._field_Operators._field_SubAssign=_1e6a37687_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e5e1c62d_Fn>)>([=](jule::Ptr<_1e5e1c62d_Fn> _220972_f) mutable -> jule::Bool {
								return static__1e6a49677_SubAssign(_220972_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("DivAssign", 9)) {
						_case_begin_1b2644828:;
						{
							_216747_s.get()._field_Operators._field_DivAssign=_1e6a37687_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e5e1c62d_Fn>)>([=](jule::Ptr<_1e5e1c62d_Fn> _221172_f) mutable -> jule::Bool {
								return static__1e6a4991e_DivAssign(_221172_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("MulAssign", 9)) {
						_case_begin_1b26448a0:;
						{
							_216747_s.get()._field_Operators._field_MulAssign=_1e6a37687_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e5e1c62d_Fn>)>([=](jule::Ptr<_1e5e1c62d_Fn> _221372_f) mutable -> jule::Bool {
								return static__1e6a49bb6_MulAssign(_221372_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("ModAssign", 9)) {
						_case_begin_1b2644927:;
						{
							_216747_s.get()._field_Operators._field_ModAssign=_1e6a37687_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e5e1c62d_Fn>)>([=](jule::Ptr<_1e5e1c62d_Fn> _221572_f) mutable -> jule::Bool {
								return static__1e6a49e5d_ModAssign(_221572_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("ShlAssign", 9)) {
						_case_begin_1b264499e:;
						{
							_216747_s.get()._field_Operators._field_ShlAssign=_1e6a37687_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e5e1c62d_Fn>)>([=](jule::Ptr<_1e5e1c62d_Fn> _221772_f) mutable -> jule::Bool {
								return static__1e6a4a205_ShlAssign(_221772_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("ShrAssign", 9)) {
						_case_begin_1b2644a26:;
						{
							_216747_s.get()._field_Operators._field_ShrAssign=_1e6a37687_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e5e1c62d_Fn>)>([=](jule::Ptr<_1e5e1c62d_Fn> _221972_f) mutable -> jule::Bool {
								return static__1e6a4a49c_ShrAssign(_221972_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitOrAssign", 11)) {
						_case_begin_1b2644a9d:;
						{
							_216747_s.get()._field_Operators._field_BitOrAssign=_1e6a37687_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e5e1c62d_Fn>)>([=](jule::Ptr<_1e5e1c62d_Fn> _222174_f) mutable -> jule::Bool {
								return static__1e6a4a744_BitOrAssign(_222174_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitAndAssign", 12)) {
						_case_begin_1b2644b25:;
						{
							_216747_s.get()._field_Operators._field_BitAndAssign=_1e6a37687_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e5e1c62d_Fn>)>([=](jule::Ptr<_1e5e1c62d_Fn> _222375_f) mutable -> jule::Bool {
								return static__1e6a4a9db_BitAndAssign(_222375_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitXorAssign", 12)) {
						_case_begin_1b2644b9c:;
						{
							_216747_s.get()._field_Operators._field_BitXorAssign=_1e6a37687_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e5e1c62d_Fn>)>([=](jule::Ptr<_1e5e1c62d_Fn> _222575_f) mutable -> jule::Bool {
								return static__1e6a4ac83_BitXorAssign(_222575_f);
							}));
						}
					}
					_match_end_1b2643926:;
				};
			}
			_iter_next_1b26430b8:;
			++it;
			goto _iter_begin_1b26430b8;
		}
		_iter_end_1b26430b8:;
	};
}



inline void _1e6a38aea_precheckStructType(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e5d4518d_Struct>& _223043_s) {
	if (_223043_s.get()._field_CppLinked) {
		return;;
	};
	if ((_223043_s.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if ((_223043_s.get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_1e5d714d8_StructIns> _224121_ins = _1e5d2649e_instance(_223043_s);;
		_224121_ins.get()._field_Checked=true;
		_1e5d2c593_appendInstance(_223043_s.ptr(), _224121_ins);
		_1e6a37de6_precheckStructIns(_self_, _224121_ins,nullptr);
	};
	_1e6a38864_checkStructInsOperators(_self_, _223043_s.get()._field_Instances[0LL]);
}



inline void _1e6a38cc6_precheckStructTypes(jule::Ptr<_1e6a22441_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_1b266ec1b:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d4518d_Struct> _225121_s = *it;
			{
				_1e6a38aea_precheckStructType(_self_, _225121_s);
			}
			_iter_next_1b266ec1b:;
			++it;
			goto _iter_begin_1b266ec1b;
		}
		_iter_end_1b266ec1b:;
	};
}



inline void _1e6a3904b_checkRets(_1e6a22441_Sema* _self_, jule::Ptr<_1e5e202ce_FnIns>& _225633_f) {
	if (_1e5e1ca90_IsVoid(_225633_f.get()._field_Decl.ptr())) {
		return;;
	};
	_1e6a3b1e6_missingRetChecker _226013_mrc = static__1e6a3b5ae_new();;
	jule::Bool _226113_ok = _1e6a3c5c1_check(&_226013_mrc, _225633_f.get()._field_Scope);;
	if ((!(_226113_ok))) {
		_1e6a25103_pushErr(&(*_self_), _225633_f.get()._field_Decl.get()._field_Token,jule::Str("missing return at end of function", 33),jule::Slice<jule::Any>());
	};
}



inline void _1e6a3936a_checkFnInsSc(_1e6a22441_Sema* _self_, jule::Ptr<_1e5e202ce_FnIns>& _226736_f, jule::Ptr<_1e6a09505_scopeChecker>& _226752_sc) {
	_1e6a21165_appendRetVars(_226752_sc.get()._field_table.get()._field_Vars,_226736_f);
	_1e6a2141d_appendParamVars(_226752_sc.get()._field_table.get()._field_Vars,_226736_f);
	_1e6a216e8_appendGenericTypeAliases(_226752_sc.get()._field_table.get()._field_TypeAliases,_226736_f);
	_1e6a1283d_check(_226752_sc, _226736_f.get()._field_Decl.get()._field_Scope,_226736_f.get()._field_Scope);
	if ((!(_1e6a0a66b_stopped(_226752_sc.ptr())))) {
		_1e6a3904b_checkRets(&(*_self_), _226736_f);
	};
}



inline void _1e6a39689_checkFnInsCaller(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e5e202ce_FnIns>& _228041_f, jule::Ptr<_1e47137a5_Token> _228056_caller) {
	if (_228041_f.get()._field_Decl.get()._field_CppLinked) {
		return;;
	};
	jule::Ptr<_1e6a86010_SymbolTable> _228517_old = _228041_f.get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1e6a24c3a_setCurrentFile(_228041_f.get()._field_Decl.get()._field_sema.ptr(), _228517_old);
	});;
	jule::Ptr<_1e6a86010_SymbolTable> _228717_file = _1e6a21a4a_findFile(_228041_f.get()._field_Decl.get()._field_sema.get()._field_files,_228041_f.get()._field_Decl.get()._field_Token.get()._field_File);;
	if ((_228717_file != nullptr)) {
		_1e6a24c3a_setCurrentFile(_228041_f.get()._field_Decl.get()._field_sema.ptr(), _228717_file);
	};
	jule::Ptr<_1e6a09505_scopeChecker> _229217_sc = _1e5ea265d_newScopeChecker(_228041_f.get()._field_Decl.get()._field_sema,_228041_f);;
	_229217_sc.get()._field_calledFrom=_228056_caller;
	_1e6a3936a_checkFnInsSc(_self_.ptr(), _228041_f,_229217_sc);
	if ((_228041_f.get()._field_Decl.get()._field_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_228041_f.get()._field_Decl.get()._field_sema.get()._field_errors);
		_228041_f.get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
	};
}



inline void _1e6a3990e_checkFnIns(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e5e202ce_FnIns>& _230235_f) {
	_1e6a39689_checkFnInsCaller(_self_, _230235_f,nullptr);
}



inline void _1e6a39b84_checkTypeFn(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e5e1c62d_Fn>& _230636_f) {
	if (_230636_f.get()._field_CppLinked) {
		return;;
	};
	if ((_230636_f.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _230636_f.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1b267a342:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e202ce_FnIns> _231621_ins = *it;
			{
				_1e6a3990e_checkFnIns(_self_, _231621_ins);
			}
			_iter_next_1b267a342:;
			++it;
			goto _iter_begin_1b267a342;
		}
		_iter_end_1b267a342:;
	};
}



inline void _1e6a39e09_checkTestFn(_1e6a22441_Sema* _self_, jule::Ptr<_1e5e202ce_FnIns>& _232135_f) {
	if (_232135_f.get()._field_Decl.get()._field_Public) {
		_1e6a25103_pushErr(&(*_self_), _232135_f.get()._field_Decl.get()._field_Token,jule::Str("test function cannot be public", 30),jule::Slice<jule::Any>());
		_1e6a25422_pushSugggestion(&(*_self_), jule::Str("remove \"pub\" modifier", 21),jule::Slice<jule::Any>());
		return;;
	};
	if (((_232135_f.get()._field_Params.len() != 1LL) || (_232135_f.get()._field_Result != nullptr))) {
		_1e6a25103_pushErr(&(*_self_), _232135_f.get()._field_Decl.get()._field_Token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1e6a25422_pushSugggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e6abece6_Sptr> _233417_sptr = _1e6ab8e11_Sptr(_232135_f.get()._field_Params[0LL].get()._field_Kind.ptr());;
	if ((_233417_sptr == nullptr)) {
		_1e6a25103_pushErr(&(*_self_), _232135_f.get()._field_Decl.get()._field_Token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1e6a25422_pushSugggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e5d714d8_StructIns> _234113_s = _1e6aba0ee_Struct(_233417_sptr.get()._field_Elem.ptr());;
	if (((_234113_s == nullptr) || (!(_1e6a1e828_isStdPackage(_234113_s.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path,jule::Str("testing", 7)))))) {
		_1e6a25103_pushErr(&(*_self_), _232135_f.get()._field_Decl.get()._field_Token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1e6a25422_pushSugggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1e6a3a17e_precheckTypeFn(jule::Ptr<_1e6a22441_Sema> _self_, jule::Ptr<_1e5e1c62d_Fn>& _234939_f) {
	if (_234939_f.get()._field_CppLinked) {
		return;;
	};
	if ((_234939_f.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if ((_234939_f.get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_1e5e202ce_FnIns> _236021_ins = _1e5e1da19_instanceForce(_234939_f);;
		_234939_f.get()._field_Instances = jule::alloc_for_append(_234939_f.get()._field_Instances,1);_234939_f.get()._field_Instances.__push(_236021_ins);;
		_1e6a2cd53_reloadFnInsTypes(_self_, _236021_ins);
		_236021_ins.get()._field_reloaded=true;
		if (_1e6acd71c_hasDirective(_234939_f.get()._field_Directives,jule::Str("test", 4))) {
			_1e6a39e09_checkTestFn(_self_.ptr(), _236021_ins);
		};
	};
}



inline void _1e6a3a35a_precheckFnTypes(jule::Ptr<_1e6a22441_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Traits;
		auto it = expr.begin();
		_iter_begin_1b2689c7a:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e2e4db_Trait> _237321_decl = *it;
			{
				{
					auto &expr = _237321_decl.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1b268a63d:;
					if (it != expr.end()) {
						jule::Ptr<_1e5e1c62d_Fn> _237425_m = *it;
						{
							_1e6a3a17e_precheckTypeFn(_self_, _237425_m);
						}
						_iter_next_1b268a63d:;
						++it;
						goto _iter_begin_1b268a63d;
					}
					_iter_end_1b268a63d:;
				};
			}
			_iter_next_1b2689c7a:;
			++it;
			goto _iter_begin_1b2689c7a;
		}
		_iter_end_1b2689c7a:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1b268a352:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e1c62d_Fn> _237821_decl = *it;
			{
				_1e6a3a17e_precheckTypeFn(_self_, _237821_decl);
			}
			_iter_next_1b268a352:;
			++it;
			goto _iter_begin_1b268a352;
		}
		_iter_end_1b268a352:;
	};
}



inline void _1e6a3a536_checkFnTypes(jule::Ptr<_1e6a22441_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1b268ba07:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e1c62d_Fn> _238521_decl = *it;
			{
				_1e6a39b84_checkTypeFn(_self_, _238521_decl);
			}
			_iter_next_1b268ba07:;
			++it;
			goto _iter_begin_1b268ba07;
		}
		_iter_end_1b268ba07:;
	};
}



inline void _1e6a3a712_checkPackageTypes(jule::Ptr<_1e6a22441_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1b268c321:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a86010_SymbolTable> _239321_f = *it;
			{
				_1e6a24c3a_setCurrentFile(_self_.ptr(), _239321_f);
				_1e6a36a60_checkGlobalTypes(_self_);
				_1e6a3a35a_precheckFnTypes(_self_);
				_1e6a38cc6_precheckStructTypes(_self_);
			}
			_iter_next_1b268c321:;
			++it;
			goto _iter_begin_1b268c321;
		}
		_iter_end_1b268c321:;
	};
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1b268e18b:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a86010_SymbolTable> _240421_f = *it;
			{
				_1e6a24c3a_setCurrentFile(_self_.ptr(), _240421_f);
				_1e6a3a536_checkFnTypes(_self_);
				_1e6a385bc_checkStructTypes(_self_);
			}
			_iter_next_1b268e18b:;
			++it;
			goto _iter_begin_1b268e18b;
		}
		_iter_end_1b268e18b:;
	};
}



inline void _1e6a3a8dd_setFileSemaFields(jule::Ptr<_1e6a22441_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1b268e774:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e1c62d_Fn> _241221_f = *it;
			{
				_241221_f.get()._field_sema=_self_;
			}
			_iter_next_1b268e774:;
			++it;
			goto _iter_begin_1b268e774;
		}
		_iter_end_1b268e774:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_1b2690885:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d4518d_Struct> _241521_st = *it;
			{
				_241521_st.get()._field_sema=_self_;
			}
			_iter_next_1b2690885:;
			++it;
			goto _iter_begin_1b2690885;
		}
		_iter_end_1b2690885:;
	};
}



inline void _1e6a3aab9_setSemaFields(jule::Ptr<_1e6a22441_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1b269138b:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a86010_SymbolTable> _242121_file = *it;
			{
				_1e6a24c3a_setCurrentFile(_self_.ptr(), _242121_file);
				_1e6a3a8dd_setFileSemaFields(_self_);
			}
			_iter_next_1b269138b:;
			++it;
			goto _iter_begin_1b269138b;
		}
		_iter_end_1b269138b:;
	};
}



inline void _1e6a3ad3e_check(jule::Ptr<_1e6a22441_Sema> _self_, jule::Slice<jule::Ptr<_1e6a86010_SymbolTable>>& _242730_files) {
	_self_.get()._field_files=_242730_files;
	_1e6a27842_checkImports(_self_.ptr());
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1e6a3aab9_setSemaFields(_self_);
	_1e6a27dc5_checkEnums(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1e6a27be9_implImpls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1e6a35e8d_checkPackageDecls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1e6a3a712_checkPackageTypes(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a22441_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline _1e6a3b1e6_missingRetChecker static__1e6a3b5ae_new(void) {
	return _1e6a3b1e6_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LL), };
}



inline jule::Bool _1e6a3b889_checkConditional(_1e6a3b1e6_missingRetChecker* _self_, jule::Ptr<_1e6a06cb6_Conditional> _247035_c) {
	{
		auto &expr = _247035_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1b26957e1:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a068dc_If> _247121_elif = *it;
			{
				if ((_247121_elif == nullptr)) {
					return false;
				};
				if ((!(_1e6a3c2b3_checkScope(&(*_self_), _247121_elif.get()._field_Scope)))) {
					return false;
				};
			}
			_iter_next_1b26957e1:;
			++it;
			goto _iter_begin_1b26957e1;
		}
		_iter_end_1b26957e1:;
	};
	return ((_247035_c.get()._field_Default != nullptr) && _1e6a3c2b3_checkScope(&(*_self_), _247035_c.get()._field_Default.get()._field_Scope));
}



inline jule::Bool _1e6a3bb97_checkMatch(_1e6a3b1e6_missingRetChecker* _self_, jule::Ptr<_1e6a083d3_Match> _248229_m) {
	{
		auto &expr = _248229_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1b2697c44:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a08933_Case> _248321_c = *it;
			{
				if ((_248321_c == nullptr)) {
					return false;
				};
				jule::I64 _248717_n = (*_self_)._field_breaked.len();;
				jule::Bool _248817_ok = _1e6a3c2b3_checkScope(&(*_self_), _248321_c.get()._field_Scope);;
				{
					
					if ((_248717_n != (*_self_)._field_breaked.len())) {
						_case_begin_1b26999b0:;
						{
							return false;
						}
					}
					else if ((!(_248817_ok))) {
						_case_begin_1b2699a37:;
						{
							if ((!((*_self_)._field_falled))) {
								return false;
							};
							goto _case_begin_1b2699aae;
						}
					}
					else if ((*_self_)._field_falled) {
						_case_begin_1b2699aae:;
						{
							(*_self_)._field_falled=false;
							if ((_248321_c.get()._field_Next == nullptr)) {
								return false;
							};
							goto _iter_next_1b2697c44;
						}
					}
					_match_end_1b2699916:;
				};
			}
			_iter_next_1b2697c44:;
			++it;
			goto _iter_begin_1b2697c44;
		}
		_iter_end_1b2697c44:;
	};
	return ((_248229_m.get()._field_Default != nullptr) && _1e6a3c2b3_checkScope(&(*_self_), _248229_m.get()._field_Default.get()._field_Scope));
}



inline jule::Bool _1e6a3bea5_checkInfIter(_1e6a3b1e6_missingRetChecker* _self_, jule::Ptr<_1e6a06ea3_InfIter> _250831_it) {
	jule::I64 _250913_n = (*_self_)._field_breaked.len();;
	if (_1e6a3c2b3_checkScope(&(*_self_), _250831_it.get()._field_Scope)) {
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_250913_n);
		return true;
	};
	if ((_250913_n != (*_self_)._field_breaked.len())) {
		jule::Uintptr _251517_itaddr = static_cast<jule::Uintptr>(_250831_it);;
		{
			auto expr = (*_self_)._field_breaked.slice(_250913_n);
			auto it = expr.begin();
			_iter_begin_1b269d82c:;
			if (it != expr.end()) {
				jule::Uintptr _251620_addr = *it;
				{
					if ((_251517_itaddr == _251620_addr)) {
						(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_250913_n);
						return false;
					};
				}
				_iter_next_1b269d82c:;
				++it;
				goto _iter_begin_1b269d82c;
			}
			_iter_end_1b269d82c:;
		};
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_250913_n);
	};
	return true;
}



inline jule::Bool _1e6a3c2b3_checkScope(_1e6a3b1e6_missingRetChecker* _self_, jule::Ptr<_1e6a06700_Scope> _252729_s) {
	if ((_252729_s == nullptr)) {
		return false;
	};
	{
		auto &expr = _252729_s.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_1b26a0510:;
		if (it != expr.end()) {
			jule::Any _253121_st = *it;
			{
				{
					auto &_match_expr{ _253121_st };
					
					if (_match_expr.type_is<jule::Ptr<_1e6a08c52_FallSt>>()) {
						_case_begin_1b26a0e06:;
						{
							(*_self_)._field_falled=true;
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e6a07756_BreakSt>>()) {
						_case_begin_1b26a0ea0:;
						{
							jule::Uintptr _253721_addr = _253121_st.operator jule::Ptr<_1e6a07756_BreakSt>().get()._field_It;;
							if ((_253721_addr != 0LLU)) {
								(*_self_)._field_breaked = jule::alloc_for_append((*_self_)._field_breaked,1);(*_self_)._field_breaked.__push(_253721_addr);;
							};
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e6a07569_ContSt>>()) {
						_case_begin_1b26a1016:;
						{
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e6a06ea3_InfIter>>()) {
						_case_begin_1b26a107c:;
						{
							if (_1e6a3bea5_checkInfIter(&(*_self_), _253121_st.operator jule::Ptr<_1e6a06ea3_InfIter>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e6a08e3e_RetSt>>()) {
						_case_begin_1b26a10e3:;
						{
							return true;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e6a06700_Scope>>()) {
						_case_begin_1b26a1159:;
						{
							if (_1e6a3c2b3_checkScope(&(*_self_), _253121_st.operator jule::Ptr<_1e6a06700_Scope>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e6a8ac6d_Data>>()) {
						_case_begin_1b26a11d1:;
						{
							{
								auto &_match_expr{ _253121_st.operator jule::Ptr<_1e6a8ac6d_Data>().get()._field_Model };
								
								if (_match_expr.type_is<jule::Ptr<_1e5e186e5_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e5e19185_BuiltinErrorCallExprModel>>()) {
									_case_begin_1b26a4d3e:;
									{
										return true;
									}
								}
								_match_end_1b26a4a97:;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e6a06cb6_Conditional>>()) {
						_case_begin_1b26a1258:;
						{
							if (_1e6a3b889_checkConditional(&(*_self_), _253121_st.operator jule::Ptr<_1e6a06cb6_Conditional>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e6a083d3_Match>>()) {
						_case_begin_1b26a12d0:;
						{
							if (_1e6a3bb97_checkMatch(&(*_self_), _253121_st.operator jule::Ptr<_1e6a083d3_Match>())) {
								return true;
							};
						}
					}
					_match_end_1b26a0c5d:;
				};
			}
			_iter_next_1b26a0510:;
			++it;
			goto _iter_begin_1b26a0510;
		}
		_iter_end_1b26a0510:;
	};
	return false;
}



inline jule::Bool _1e6a3c5c1_check(_1e6a3b1e6_missingRetChecker* _self_, jule::Ptr<_1e6a06700_Scope> _257324_s) {
	return _1e6a3c2b3_checkScope(&(*_self_), _257324_s);
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a3b1e6_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a3cda7_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "Range:" << _Src._field_Range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e6a3e1c7_IsInitialized(_1e6a3dd20_Var* _self_) {
	return ((*_self_)._field_Value != nullptr);
}



inline jule::Bool _1e6a3e43b_IsTypeInferred(_1e6a3dd20_Var* _self_) {
	return (((*_self_)._field_Kind == nullptr) || ((*_self_)._field_Kind.get()._field_Decl == nullptr));
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a3dd20_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "IterRelation:" << _Src._field_IterRelation << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1e6a3eeb9_Dispose(jule::Ptr<_1e5e1c62d_Fn> _1023_f) {
	return ((((((((((_1023_f != nullptr) && (_1023_f.get()._field_Owner != nullptr)) && (_1023_f.get()._field_Ident == jule::Str("Dispose", 7))) && (!(_1023_f.get()._field_Statically))) && (!(_1023_f.get()._field_Unsafety))) && _1e5e1ca90_IsVoid(_1023_f.ptr())) && (_1023_f.get()._field_Generics.len() == 0LL)) && (_1023_f.get()._field_Params.len() == 1LL)) && _1023_f.get()._field_Params[0LL].get()._field_Mutable) && (!(_1e5e1b682_IsRef(_1023_f.get()._field_Params[0LL].ptr()))));
}



inline jule::Bool static__1e6a40261_Str(jule::Ptr<_1e5e1c62d_Fn> _2419_f) {
	if (((((((((((_2419_f == nullptr) || (_2419_f.get()._field_Owner == nullptr)) || (_2419_f.get()._field_Ident != jule::Str("Str", 3))) || _2419_f.get()._field_Statically) || _2419_f.get()._field_Unsafety) || _1e5e1ca90_IsVoid(_2419_f.ptr())) || (_2419_f.get()._field_Generics.len() != 0LL)) || (_2419_f.get()._field_Params.len() != 1LL)) || _2419_f.get()._field_Params[0LL].get()._field_Mutable) || _1e5e1b682_IsRef(_2419_f.get()._field_Params[0LL].ptr()))) {
		return false;
	};
	jule::Ptr<_1e5e202ce_FnIns> _3817_ins = _2419_f.get()._field_Instances[0LL];;
	jule::Ptr<_1e6abb562_Prim> _3913_prim = _1e6ab8b9c_Prim(_3817_ins.get()._field_Result.ptr());;
	if ((_3913_prim == nullptr)) {
		return false;
	};
	return _1e6abe796_IsStr(_3913_prim.ptr());
}



inline jule::Bool static__1e6a405a2_logical(jule::Ptr<_1e5e1c62d_Fn>& _4624_f, jule::Str _4632_ident) {
	if ((((((((((((((_4624_f == nullptr) || (_4624_f.get()._field_Ident != _4632_ident)) || (_4624_f.get()._field_Owner == nullptr)) || (_4624_f.get()._field_Instances.len() == 0LL)) || _4624_f.get()._field_Statically) || _4624_f.get()._field_Unsafety) || _1e5e1ca90_IsVoid(_4624_f.ptr())) || (_4624_f.get()._field_Generics.len() != 0LL)) || (_4624_f.get()._field_Params.len() != 2LL)) || _4624_f.get()._field_Params[0LL].get()._field_Mutable) || _1e5e1b682_IsRef(_4624_f.get()._field_Params[0LL].ptr())) || _4624_f.get()._field_Params[1LL].get()._field_Mutable) || _4624_f.get()._field_Params[1LL].get()._field_Reference)) {
		return false;
	};
	jule::Ptr<_1e5e202ce_FnIns> _6317_ins = _4624_f.get()._field_Instances[0LL];;
	jule::Ptr<_1e6abb562_Prim> _6413_prim = _1e6ab8b9c_Prim(_6317_ins.get()._field_Result.ptr());;
	if (((_6413_prim == nullptr) || (!(_1e6abe532_IsBool(_6413_prim.ptr()))))) {
		return false;
	};
	return (_6317_ins.get()._field_Owner == _1e6aba0ee_Struct(_6317_ins.get()._field_Params[1LL].get()._field_Kind.ptr()));
}



inline jule::Bool static__1e6a40849_Eq(jule::Ptr<_1e5e1c62d_Fn> _7218_f) {
	return static__1e6a405a2_logical(_7218_f,jule::Str("Eq", 2));
}



inline jule::Bool static__1e6a40ae1_Gt(jule::Ptr<_1e5e1c62d_Fn> _7718_f) {
	return static__1e6a405a2_logical(_7718_f,jule::Str("Gt", 2));
}



inline jule::Bool static__1e6a40d88_GtEq(jule::Ptr<_1e5e1c62d_Fn> _8220_f) {
	return static__1e6a405a2_logical(_8220_f,jule::Str("GtEq", 4));
}



inline jule::Bool static__1e6a41130_Lt(jule::Ptr<_1e5e1c62d_Fn> _8718_f) {
	return static__1e6a405a2_logical(_8718_f,jule::Str("Lt", 2));
}



inline jule::Bool static__1e6a413c7_LtEq(jule::Ptr<_1e5e1c62d_Fn> _9220_f) {
	return static__1e6a405a2_logical(_9220_f,jule::Str("LtEq", 4));
}



inline jule::Bool static__1e6a41718_result(jule::Ptr<_1e5e1c62d_Fn>& _9623_f, jule::Str _9631_ident) {
	if ((((((((((((((_9623_f == nullptr) || (_9623_f.get()._field_Ident != _9631_ident)) || (_9623_f.get()._field_Owner == nullptr)) || (_9623_f.get()._field_Instances.len() == 0LL)) || _9623_f.get()._field_Statically) || _9623_f.get()._field_Unsafety) || _1e5e1ca90_IsVoid(_9623_f.ptr())) || (_9623_f.get()._field_Generics.len() != 0LL)) || (_9623_f.get()._field_Params.len() != 2LL)) || _9623_f.get()._field_Params[0LL].get()._field_Mutable) || _1e5e1b682_IsRef(_9623_f.get()._field_Params[0LL].ptr())) || _9623_f.get()._field_Params[1LL].get()._field_Mutable) || _9623_f.get()._field_Params[1LL].get()._field_Reference)) {
		return false;
	};
	jule::Ptr<_1e5e202ce_FnIns> _11317_ins = _9623_f.get()._field_Instances[0LL];;
	return (_1e6aba0ee_Struct(_11317_ins.get()._field_Result.ptr()) == _11317_ins.get()._field_Owner);
}



inline jule::Bool static__1e6a4690a_Shl(jule::Ptr<_1e5e1c62d_Fn> _11819_f) {
	return static__1e6a41718_result(_11819_f,jule::Str("Shl", 3));
}



inline jule::Bool static__1e6a46ab4_Shr(jule::Ptr<_1e5e1c62d_Fn> _12319_f) {
	return static__1e6a41718_result(_12319_f,jule::Str("Shr", 3));
}



inline jule::Bool static__1e6a46d5b_Add(jule::Ptr<_1e5e1c62d_Fn> _12819_f) {
	return static__1e6a41718_result(_12819_f,jule::Str("Add", 3));
}



inline jule::Bool static__1e6a47103_Sub(jule::Ptr<_1e5e1c62d_Fn> _13319_f) {
	return static__1e6a41718_result(_13319_f,jule::Str("Sub", 3));
}



inline jule::Bool static__1e6a4739a_Div(jule::Ptr<_1e5e1c62d_Fn> _13819_f) {
	return static__1e6a41718_result(_13819_f,jule::Str("Div", 3));
}



inline jule::Bool static__1e6a47642_Mul(jule::Ptr<_1e5e1c62d_Fn> _14319_f) {
	return static__1e6a41718_result(_14319_f,jule::Str("Mul", 3));
}



inline jule::Bool static__1e6a478d9_Mod(jule::Ptr<_1e5e1c62d_Fn> _14819_f) {
	return static__1e6a41718_result(_14819_f,jule::Str("Mod", 3));
}



inline jule::Bool static__1e6a47b81_BitAnd(jule::Ptr<_1e5e1c62d_Fn> _15322_f) {
	return static__1e6a41718_result(_15322_f,jule::Str("BitAnd", 6));
}



inline jule::Bool static__1e6a47e28_BitOr(jule::Ptr<_1e5e1c62d_Fn> _15821_f) {
	return static__1e6a41718_result(_15821_f,jule::Str("BitOr", 5));
}



inline jule::Bool static__1e6a481c0_BitXor(jule::Ptr<_1e5e1c62d_Fn> _16322_f) {
	return static__1e6a41718_result(_16322_f,jule::Str("BitXor", 6));
}



inline jule::Bool static__1e6a48511_unary(jule::Ptr<_1e5e1c62d_Fn>& _16722_f, jule::Str _16730_ident) {
	if ((((((((((((_16722_f == nullptr) || (_16722_f.get()._field_Ident != _16730_ident)) || (_16722_f.get()._field_Owner == nullptr)) || (_16722_f.get()._field_Instances.len() == 0LL)) || _16722_f.get()._field_Statically) || _16722_f.get()._field_Unsafety) || _1e5e1ca90_IsVoid(_16722_f.ptr())) || (_16722_f.get()._field_Generics.len() != 0LL)) || (_16722_f.get()._field_Params.len() != 1LL)) || _16722_f.get()._field_Params[0LL].get()._field_Mutable) || _1e5e1b682_IsRef(_16722_f.get()._field_Params[0LL].ptr()))) {
		return false;
	};
	jule::Ptr<_1e5e202ce_FnIns> _18217_ins = _16722_f.get()._field_Instances[0LL];;
	return (_1e6aba0ee_Struct(_18217_ins.get()._field_Result.ptr()) == _18217_ins.get()._field_Owner);
}



inline jule::Bool static__1e6a487a8_Neg(jule::Ptr<_1e5e1c62d_Fn> _18719_f) {
	return static__1e6a48511_unary(_18719_f,jule::Str("Neg", 3));
}



inline jule::Bool static__1e6a48a50_Pos(jule::Ptr<_1e5e1c62d_Fn> _19219_f) {
	return static__1e6a48511_unary(_19219_f,jule::Str("Pos", 3));
}



inline jule::Bool static__1e6a48ce7_BitNot(jule::Ptr<_1e5e1c62d_Fn> _19722_f) {
	return static__1e6a48511_unary(_19722_f,jule::Str("BitNot", 6));
}



inline jule::Bool static__1e6a49138_assign(jule::Ptr<_1e5e1c62d_Fn>& _20123_f, jule::Str _20131_ident) {
	if ((((((((((((((_20123_f == nullptr) || (_20123_f.get()._field_Ident != _20131_ident)) || (_20123_f.get()._field_Owner == nullptr)) || (_20123_f.get()._field_Instances.len() == 0LL)) || _20123_f.get()._field_Statically) || _20123_f.get()._field_Unsafety) || (!(_1e5e1ca90_IsVoid(_20123_f.ptr())))) || (_20123_f.get()._field_Generics.len() != 0LL)) || (_20123_f.get()._field_Params.len() != 2LL)) || (!(_20123_f.get()._field_Params[0LL].get()._field_Mutable))) || _1e5e1b682_IsRef(_20123_f.get()._field_Params[0LL].ptr())) || _20123_f.get()._field_Params[1LL].get()._field_Mutable) || _20123_f.get()._field_Params[1LL].get()._field_Reference)) {
		return false;
	};
	return true;
}



inline jule::Bool static__1e6a493d0_AddAssign(jule::Ptr<_1e5e1c62d_Fn> _22125_f) {
	return static__1e6a49138_assign(_22125_f,jule::Str("AddAssign", 9));
}



inline jule::Bool static__1e6a49677_SubAssign(jule::Ptr<_1e5e1c62d_Fn> _22625_f) {
	return static__1e6a49138_assign(_22625_f,jule::Str("SubAssign", 9));
}



inline jule::Bool static__1e6a4991e_DivAssign(jule::Ptr<_1e5e1c62d_Fn> _23125_f) {
	return static__1e6a49138_assign(_23125_f,jule::Str("DivAssign", 9));
}



inline jule::Bool static__1e6a49bb6_MulAssign(jule::Ptr<_1e5e1c62d_Fn> _23625_f) {
	return static__1e6a49138_assign(_23625_f,jule::Str("MulAssign", 9));
}



inline jule::Bool static__1e6a49e5d_ModAssign(jule::Ptr<_1e5e1c62d_Fn> _24125_f) {
	return static__1e6a49138_assign(_24125_f,jule::Str("ModAssign", 9));
}



inline jule::Bool static__1e6a4a205_ShlAssign(jule::Ptr<_1e5e1c62d_Fn> _24625_f) {
	return static__1e6a49138_assign(_24625_f,jule::Str("ShlAssign", 9));
}



inline jule::Bool static__1e6a4a49c_ShrAssign(jule::Ptr<_1e5e1c62d_Fn> _25125_f) {
	return static__1e6a49138_assign(_25125_f,jule::Str("ShrAssign", 9));
}



inline jule::Bool static__1e6a4a744_BitOrAssign(jule::Ptr<_1e5e1c62d_Fn> _25627_f) {
	return static__1e6a49138_assign(_25627_f,jule::Str("BitOrAssign", 11));
}



inline jule::Bool static__1e6a4a9db_BitAndAssign(jule::Ptr<_1e5e1c62d_Fn> _26128_f) {
	return static__1e6a49138_assign(_26128_f,jule::Str("BitAndAssign", 12));
}



inline jule::Bool static__1e6a4ac83_BitXorAssign(jule::Ptr<_1e5e1c62d_Fn> _26628_f) {
	return static__1e6a49138_assign(_26628_f,jule::Str("BitXorAssign", 12));
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a3e848_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1e6a751ec_pushErr(_1e6a74bd0_typeCompatibilityChecker* _self_, jule::Str _11726_fmt, jule::Slice<jule::Any> _11739_args) {
	_1e6a25103_pushErr((*_self_)._field_s.ptr(), (*_self_)._field_errorToken,_11726_fmt,jule::Any(_11739_args));
}



inline jule::Bool _1e6a75461_checkTrait(_1e6a74bd0_typeCompatibilityChecker* _self_) {
	jule::Bool _12131_ok = jule::Bool();
	if (_1e6ab79ae_IsNil((*_self_)._field_src.ptr())) {
		_12131_ok = true;
		return _12131_ok;
	};
	jule::Ptr<_1e5e2e4db_Trait> _12513_trt = _1e6aba363_Trait((*_self_)._field_dest.ptr());;
	jule::Bool _12617_ref = false;;
	{
		
		if ((_1e6ab8e11_Sptr((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1b26ddad1:;
			{
				_12617_ref=true;
				(*_self_)._field_src=_1e6ab8e11_Sptr((*_self_)._field_src.ptr()).get()._field_Elem;
				if ((_1e6aba0ee_Struct((*_self_)._field_src.ptr()) == nullptr)) {
					_12131_ok = false;
					return _12131_ok;
				};
				goto _case_begin_1b26ddbbe;
			}
		}
		else if ((_1e6aba0ee_Struct((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1b26ddbbe:;
			{
				jule::Ptr<_1e5d714d8_StructIns> _13617_s = _1e6aba0ee_Struct((*_self_)._field_src.ptr());;
				if ((!(_1e5d34a0c_IsImplements(_13617_s.get()._field_Decl.ptr(), _12513_trt)))) {
					_12131_ok = false;
					return _12131_ok;
				};
				if (((!(_12617_ref)) && _1e6a65121_traitHasReferenceReceiver(_12513_trt))) {
					_1e6a751ec_pushErr(&(*_self_), jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88),jule::Slice<jule::Any>());
					_12131_ok = false;
					return _12131_ok;
				};
				_12131_ok = true;
				return _12131_ok;
			}
		}
		else if ((_1e6aba363_Trait((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1b26ddc35:;
			{
				_12131_ok = (_12513_trt == _1e6aba363_Trait((*_self_)._field_src.ptr()));
				return _12131_ok;
			}
		}
		else {
			_case_begin_1b26dd471:;
			{
				_12131_ok = false;
				return _12131_ok;
			}
		}
		_match_end_1b26dd41b:;
	};
}



inline jule::Bool _1e6a756c5_checkPtr(_1e6a74bd0_typeCompatibilityChecker* _self_) {
	jule::Bool _15229_ok = jule::Bool();
	if (_1e6ab79ae_IsNil((*_self_)._field_src.ptr())) {
		_15229_ok = true;
		return _15229_ok;
	};
	jule::Ptr<_1e6ac335a_Ptr> _15617_dest = _1e6ab9175_Ptr((*_self_)._field_dest.ptr());;
	if (_1e6ac3d2d_IsUnsafe(_15617_dest.ptr())) {
		_15229_ok = true;
		return _15229_ok;
	};
	_15229_ok = _1e6ab7294_Equals((*_self_)._field_dest, (*_self_)._field_src);
	return _15229_ok;
}



inline jule::Bool _1e6a75939_checkPrim(_1e6a74bd0_typeCompatibilityChecker* _self_) {
	jule::Bool _16330_ok = jule::Bool();
	if ((!((*_self_)._field_dest.get()._field_Variadic))) {
		jule::Ptr<_1e6abb562_Prim> _16517_prim = _1e6ab8b9c_Prim((*_self_)._field_dest.ptr());;
		if (((_16517_prim != nullptr) && _1e6abea0a_IsAny(_16517_prim.ptr()))) {
			_16330_ok = true;
			return _16330_ok;
		};
	};
	_16330_ok = _1e6ab7294_Equals((*_self_)._field_dest, (*_self_)._field_src);
	return _16330_ok;
}



inline jule::Bool _1e6a75ce1_typeEnum(_1e6a74bd0_typeCompatibilityChecker* _self_, jule::Ptr<_1e5e32c2b_TypeEnum>& _17328_e, jule::Ptr<_1e6ab6a8a_TypeKind>& _17347_t2) {
	jule::Bool _17364_ok = jule::Bool();
	{
		auto &expr = _17328_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_1b26e6765:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e32665_TypeEnumItem> _17421_item = *it;
			{
				if (_1e6ab7294_Equals(_17421_item.get()._field_Kind.get()._field_Kind, _17347_t2)) {
					_17364_ok = true;
					return _17364_ok;
				};
				jule::Ptr<_1e5e32c2b_TypeEnum> _17821_ke = _1e6ab964d_TypeEnum(_17421_item.get()._field_Kind.get()._field_Kind.ptr());;
				if ((_17821_ke == nullptr)) {
					goto _iter_next_1b26e6765;
				};
				if (_1e6a75ce1_typeEnum(&(*_self_), _17821_ke,_17347_t2)) {
					_17364_ok = true;
					return _17364_ok;
				};
			}
			_iter_next_1b26e6765:;
			++it;
			goto _iter_begin_1b26e6765;
		}
		_iter_end_1b26e6765:;
	};
	_17364_ok = false;
	return _17364_ok;
}



inline jule::Bool _1e6a76055_checkTypeEnum(_1e6a74bd0_typeCompatibilityChecker* _self_) {
	jule::Bool _18934_ok = jule::Bool();
	if (_1e6ab7294_Equals((*_self_)._field_dest, (*_self_)._field_src)) {
		_18934_ok = true;
		return _18934_ok;
	};
	jule::Ptr<_1e5e32c2b_TypeEnum> _19317_e = _1e6ab964d_TypeEnum((*_self_)._field_dest.ptr());;
	_18934_ok = _1e6a75ce1_typeEnum(&(*_self_), _19317_e,(*_self_)._field_src);
	return _18934_ok;
}



inline jule::Bool _1e6a762b9_check(_1e6a74bd0_typeCompatibilityChecker* _self_) {
	jule::Bool _19726_ok = jule::Bool();
	if ((_1e6ab9175_Ptr((*_self_)._field_dest.ptr()) != nullptr)) {
		_19726_ok = _1e6a756c5_checkPtr(&(*_self_));
		return _19726_ok;
	};
	if (_1e6ab81eb_NilCompatible((*_self_)._field_dest.ptr())) {
		if (_1e6ab79ae_IsNil((*_self_)._field_src.ptr())) {
			_19726_ok = true;
			return _19726_ok;
		};
	};
	{
		
		if ((_1e6ab8b9c_Prim((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1b26ebb99:;
			{
				_19726_ok = _1e6a75939_checkPrim(&(*_self_));
				return _19726_ok;
			}
		}
		else if ((_1e6ab964d_TypeEnum((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1b26ebc10:;
			{
				_19726_ok = _1e6a76055_checkTypeEnum(&(*_self_));
				return _19726_ok;
			}
		}
		else if ((_1e6aba363_Trait((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1b26ebeeb:;
			{
				_19726_ok = _1e6a75461_checkTrait(&(*_self_));
				return _19726_ok;
			}
		}
		else {
			_case_begin_1b26ead30:;
			{
				_19726_ok = _1e6ab7294_Equals((*_self_)._field_dest, (*_self_)._field_src);
				return _19726_ok;
			}
		}
		_match_end_1b26eabdc:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a74bd0_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _1e6a76c6a_pushErr(_1e6a76808_assignTypeChecker* _self_, jule::Str _22926_fmt, jule::Slice<jule::Any> _22939_args) {
	_1e6a25103_pushErr((*_self_)._field_s.ptr(), (*_self_)._field_errorToken,_22926_fmt,jule::Any(_22939_args));
}



inline jule::Bool _1e6a76ece_checkValidity(_1e6a76808_assignTypeChecker* _self_) {
	jule::Bool _23417_valid = true;;
	{
		
		if ((_1e6ab9d8a_Fn((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b270030c:;
			{
				jule::Ptr<_1e5e202ce_FnIns> _23717_f = _1e6ab9d8a_Fn((*_self_)._field_d.get()._field_Kind.ptr());;
				{
					
					if (_1e5e21665_IsBuiltin(_23717_f.ptr())) {
						_case_begin_1b27018d5:;
						{
							_1e6a76c6a_pushErr(&(*_self_), jule::Str("builtin define cannot use as anonymous function", 47),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (_23717_f.get()._field_Decl.get()._field_CppLinked) {
						_case_begin_1b270195c:;
						{
							_1e6a76c6a_pushErr(&(*_self_), jule::Str("cpp-linked functions cannot use as anonymous function", 53),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (((!(_23717_f.get()._field_Decl.get()._field_Statically)) && _1e5e1cd04_IsMethod(_23717_f.get()._field_Decl.ptr()))) {
						_case_begin_1b27019d4:;
						{
							_1e6a76c6a_pushErr(&(*_self_), jule::Str("non-static methods cannot use as anonymous function", 51),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (((_23717_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_23717_f.get()._field_Generics.len() == 0LL))) {
						_case_begin_1b2701a5b:;
						{
							_1e6a76c6a_pushErr(&(*_self_), jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
							_1e6a25422_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("instantiate generic function to use as anonymous function", 57),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					_match_end_1b2701808:;
				};
			}
		}
		else if ((_1e6aba83b_Tup((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2700384:;
			{
				_1e6a76c6a_pushErr(&(*_self_), jule::Str("tuples cannot assign to single define in same time", 50),jule::Slice<jule::Any>());
				_23417_valid=false;
			}
		}
		_match_end_1b2700252:;
	};
	return _23417_valid;
}



inline jule::Bool _1e6a77243_checkConst(_1e6a76808_assignTypeChecker* _self_) {
	if (((((!(_1e6a8b631_IsConst((*_self_)._field_d.ptr()))) || (_1e6ab8b9c_Prim((*_self_)._field_dest.ptr()) == nullptr)) || (_1e6ab8b9c_Prim((*_self_)._field_d.get()._field_Kind.ptr()) == nullptr)) || (!(_1e6a062b0_IsNum(_1e6ab8b9c_Prim((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
		return false;
	};
	if (((*_self_)._field_d.get()._field_Model != (*_self_)._field_d.get()._field_Constant)) {
		return false;
	};
	jule::Str _27413_kind = _1e6ab8b9c_Prim((*_self_)._field_dest.ptr()).get()._field_Kind;;
	{
		
		if (_1e6a0617d_IsFloat(_27413_kind)) {
			_case_begin_1b27091e5:;
			{
				if ((!(_1e6a5c14b_floatAssignable(_27413_kind,(*_self_)._field_d)))) {
					_1e6a76c6a_pushErr(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				};
			}
		}
		else if (_1e6a0604b_IsInt(_27413_kind)) {
			_case_begin_1b2708a0d:;
			{
				if ((!(_1e6a7399d_intAssignable(_27413_kind,(*_self_)._field_d)))) {
					_1e6a76c6a_pushErr(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				};
			}
		}
		else {
			_case_begin_1b2708997:;
			{
				return false;
			}
		}
		_match_end_1b2708942:;
	};
	return true;
}



inline jule::Bool _1e6a774a7_isPrim(_1e6a76808_assignTypeChecker* _self_) {
	if (((*_self_)._field_dest.get()._field_Variadic || (*_self_)._field_d.get()._field_Kind.get()._field_Variadic)) {
		return false;
	};
	if ((_1e6ab774a_CppLinked((*_self_)._field_dest.ptr()) || _1e6ab774a_CppLinked((*_self_)._field_d.get()._field_Kind.ptr()))) {
		return false;
	};
	return ((_1e6ab8b9c_Prim((*_self_)._field_dest.ptr()) != nullptr) && (_1e6ab8b9c_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr));
}



inline jule::Bool _1e6a7771b_checkCompatibility(_1e6a76808_assignTypeChecker* _self_) {
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1b270cc98:;
			{
				return false;
			}
		}
		else if ((!(_1e6a76ece_checkValidity(&(*_self_))))) {
			_case_begin_1b270cd20:;
			{
				return false;
			}
		}
		else if (_1e6a77243_checkConst(&(*_self_))) {
			_case_begin_1b270cd97:;
			{
				return true;
			}
		}
		else if ((_1e6ab93d9_Enum((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b270ce1e:;
			{
				jule::Ptr<_1e6ab6a8a_TypeKind> _31621_dkind = (*_self_)._field_dest;;
				if ((_1e6ab93d9_Enum((*_self_)._field_dest.ptr()) != nullptr)) {
					_31621_dkind=_1e6ab93d9_Enum((*_self_)._field_dest.ptr()).get()._field_Kind.get()._field_Kind;
				} else if ((_1e6ab8b9c_Prim((*_self_)._field_dest.ptr()) == nullptr)) {
					goto _match_end_1b270cb77;
				};
				if (_1e6286898_TypesAreCompatible(_1e6ab8b9c_Prim(_1e6ab93d9_Enum((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).get()._field_Kind,_1e6ab8b9c_Prim(_31621_dkind.ptr()).get()._field_Kind)) {
					return true;
				};
			}
		}
		else if (_1e6a774a7_isPrim(&(*_self_))) {
			_case_begin_1b270ce96:;
			{
				jule::Ptr<_1e6abb562_Prim> _32617_dest = _1e6ab8b9c_Prim((*_self_)._field_dest.ptr());;
				if (_1e6abea0a_IsAny(_32617_dest.ptr())) {
					return true;
				};
				jule::Ptr<_1e6abb562_Prim> _33021_src = _1e6ab8b9c_Prim((*_self_)._field_d.get()._field_Kind.ptr());;
				if (_1e6286898_TypesAreCompatible(_32617_dest.get()._field_Kind,_33021_src.get()._field_Kind)) {
					return true;
				};
			}
		}
		_match_end_1b270cb77:;
	};
	return _1e6a2b0b5_checkTypeCompatibility((*_self_)._field_s, (*_self_)._field_dest,(*_self_)._field_d.get()._field_Kind,(*_self_)._field_errorToken);
}



inline jule::Bool _1e6a77980_check(_1e6a76808_assignTypeChecker* _self_) {
	jule::Bool _33913_ok = _1e6a7771b_checkCompatibility(&(*_self_));;
	if (_33913_ok) {
		_1e6ad0268_applyImplicitCast((*_self_)._field_dest,(*_self_)._field_d);
	};
	return _33913_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a76808_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b2726a81_annotateConstraintElem(_1e6a78222_dynamicTypeAnnotation* _self_, jule::Ptr<_1e6ab6a8a_TypeKind>& _35849_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e5d56e6e_ArrTypeDecl>>()) {
			_case_begin_1b272816a:;
			{
				jule::Ptr<_1e6ab6a8a_TypeKind> _36121_elem = nullptr;;
				{
					
{
						_case_begin_1b2728ee5:;
						{
							_36121_elem=_1e6ab98b2_Arr(_35849_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_1b2728e3a:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1e5d56e6e_ArrTypeDecl>().get()._field_Elem;
				return _1e6a79872_annotateConstraint(&(*_self_), _36121_elem);
			}
		}
		_match_end_1b27280b0:;
	};
	return false;
}

inline jule::Bool _1b27261bd_annotateConstraintElem(_1e6a78222_dynamicTypeAnnotation* _self_, jule::Ptr<_1e6ab6a8a_TypeKind>& _35849_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e5d56215_SlcTypeDecl>>()) {
			_case_begin_1b272b7cd:;
			{
				jule::Ptr<_1e6ab6a8a_TypeKind> _36121_elem = nullptr;;
				{
					
{
						_case_begin_1b272c702:;
						{
							_36121_elem=_1e6ab9b26_Slc(_35849_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_1b272c59d:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1e5d56215_SlcTypeDecl>().get()._field_Elem;
				return _1e6a79872_annotateConstraint(&(*_self_), _36121_elem);
			}
		}
		_match_end_1b272b723:;
	};
	return false;
}

inline jule::Bool _1b2728445_annotateConstraintElem(_1e6a78222_dynamicTypeAnnotation* _self_, jule::Ptr<_1e6ab6a8a_TypeKind>& _35849_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e5d567dc_PtrTypeDecl>>()) {
			_case_begin_1b272eea7:;
			{
				jule::Ptr<_1e6ab6a8a_TypeKind> _36121_elem = nullptr;;
				{
					
{
						_case_begin_1b2730e42:;
						{
							_36121_elem=_1e6ab9175_Ptr(_35849_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_1b2730c77:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1e5d567dc_PtrTypeDecl>().get()._field_Elem;
				return _1e6a79872_annotateConstraint(&(*_self_), _36121_elem);
			}
		}
		_match_end_1b272edec:;
	};
	return false;
}

inline jule::Bool _1b272e54a_annotateConstraintElem(_1e6a78222_dynamicTypeAnnotation* _self_, jule::Ptr<_1e6ab6a8a_TypeKind>& _35849_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e5d55d19_SptrTypeDecl>>()) {
			_case_begin_1b27332eb:;
			{
				jule::Ptr<_1e6ab6a8a_TypeKind> _36121_elem = nullptr;;
				{
					
{
						_case_begin_1b27342ec:;
						{
							_36121_elem=_1e6ab8e11_Sptr(_35849_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_1b27340bb:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1e5d55d19_SptrTypeDecl>().get()._field_Elem;
				return _1e6a79872_annotateConstraint(&(*_self_), _36121_elem);
			}
		}
		_match_end_1b2733241:;
	};
	return false;
}



inline jule::Bool _1e6a78b07_annotateConstraintMap(_1e6a78222_dynamicTypeAnnotation* _self_, jule::Ptr<_1e6ab6a8a_TypeKind>& _37845_k) {
	jule::Bool _37861_ok = jule::Bool();
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e5d576bc_MapTypeDecl>>()) {
			_case_begin_1b2715795:;
			{
				jule::Ptr<_1e6ac1d09_Map> _38121_m = _1e6aba5c7_Map(_37845_k.ptr());;
				jule::Ptr<_1e5d576bc_MapTypeDecl> _38221_m2 = (*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1e5d576bc_MapTypeDecl>();;
				(*_self_)._field_c=_38221_m2.get()._field_Key;
				if (_1e6a79872_annotateConstraint(&(*_self_), _38121_m.get()._field_Key)) {
					_37861_ok = true;
					return _37861_ok;
				};
				(*_self_)._field_c=_38221_m2.get()._field_Val;
				_37861_ok = _1e6a79872_annotateConstraint(&(*_self_), _38121_m.get()._field_Val);
				return _37861_ok;
			}
		}
		_match_end_1b271571d:;
	};
	_37861_ok = false;
	return _37861_ok;
}



inline jule::Bool _1e6a78e15_annotateConstraintTup(_1e6a78222_dynamicTypeAnnotation* _self_, jule::Ptr<_1e6ab6a8a_TypeKind>& _39345_k) {
	jule::Bool _39361_ok = jule::Bool();
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e5d56501_TupleTypeDecl>>()) {
			_case_begin_1b27182ae:;
			{
				jule::Ptr<_1e5d56501_TupleTypeDecl> _39621_tup = (*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1e5d56501_TupleTypeDecl>();;
				jule::Ptr<_1e6ac12d1_Tuple> _39721_tup2 = _1e6aba83b_Tup(_39345_k.ptr());;
				{
					auto &expr = _39721_tup2.get()._field_Types;
					auto it = expr.begin();
					_iter_begin_1b2719733:;
					if (it != expr.end()) {
						jule::Ptr<_1e6ab6a8a_TypeKind> _39825_t2 = *it;
						{
							{
								auto &expr = _39621_tup.get()._field_Types;
								auto it = expr.begin();
								_iter_begin_1b271a06e:;
								if (it != expr.end()) {
									jule::Ptr<_1e5d54961_TypeDecl> _39929_t = *it;
									{
										(*_self_)._field_c=_39929_t;
										if (_1e6a79872_annotateConstraint(&(*_self_), _39825_t2)) {
											_39361_ok = true;
											return _39361_ok;
										};
									}
									_iter_next_1b271a06e:;
									++it;
									goto _iter_begin_1b271a06e;
								}
								_iter_end_1b271a06e:;
							};
						}
						_iter_next_1b2719733:;
						++it;
						goto _iter_begin_1b2719733;
					}
					_iter_end_1b2719733:;
				};
			}
		}
		_match_end_1b2718237:;
	};
	_39361_ok = false;
	return _39361_ok;
}



inline jule::Bool _1e6a79223_annotateConstraintFn(_1e6a78222_dynamicTypeAnnotation* _self_, jule::Ptr<_1e6ab6a8a_TypeKind>& _41044_k) {
	jule::Bool _41060_ok = jule::Bool();
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e5d66775_FnDecl>>()) {
			_case_begin_1b271a4d1:;
			{
				jule::Ptr<_1e5d66775_FnDecl> _41321_pf = (*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1e5d66775_FnDecl>();;
				jule::Ptr<_1e5e202ce_FnIns> _41421_f = _1e6ab9d8a_Fn(_41044_k.ptr());;
				{
					auto &expr = _41421_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_1b271c55a:;
					if (it != expr.end()) {
						jule::I64 _41518_i = it - expr.begin();
						jule::Ptr<_1e5e1e410_ParamIns> _41525_fp = *it;
						{
							(*_self_)._field_c=_41321_pf.get()._field_Params[_41518_i].get()._field_Kind;
							if (_1e6a79872_annotateConstraint(&(*_self_), _41525_fp.get()._field_Kind)) {
								_41060_ok = true;
								return _41060_ok;
							};
						}
						_iter_next_1b271c55a:;
						++it;
						_41518_i++;
						goto _iter_begin_1b271c55a;
					}
					_iter_end_1b271c55a:;
				};
				if ((_41321_pf.get()._field_Result != nullptr)) {
					(*_self_)._field_c=_41321_pf.get()._field_Result.get()._field_Kind;
					if (_1e6a79872_annotateConstraint(&(*_self_), _41421_f.get()._field_Result)) {
						_41060_ok = true;
						return _41060_ok;
					};
				};
			}
		}
		_match_end_1b2719e81:;
	};
	_41060_ok = false;
	return _41060_ok;
}



inline jule::Bool _1e6a79553_annotateConstraintIdent(_1e6a78222_dynamicTypeAnnotation* _self_, jule::Ptr<_1e6ab6a8a_TypeKind>& _43147_k) {
	jule::Ptr<_1e5d55027_IdentTypeDecl> _43217_ident = (*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1e5d55027_IdentTypeDecl>();;
	jule::Ptr<_1e5d714d8_StructIns> _43317_s = _1e6aba0ee_Struct(_43147_k.ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_Decl.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1b2720470:;
		if (it != expr.end()) {
			jule::I64 _43413_i = it - expr.begin();
			jule::Ptr<_1e5d62045_GenericDecl> _43416_g = *it;
			{
				if ((_43416_g.get()._field_Ident == _43217_ident.get()._field_Ident)) {
					jule::Ptr<_1e6ab535d_InsGeneric> _43625_fg = (*_self_)._field_f.get()._field_Generics[_43413_i];;
					if ((_43625_fg != nullptr)) {
						return false;
					};
					_1e6a79b91_pushGeneric(&(*_self_), _43147_k,_43413_i);
					return true;
				};
				if ((_43317_s == nullptr)) {
					goto _iter_next_1b2720470;
				};
				jule::Ptr<_1e5d54961_TypeDecl> _44621_c = (*_self_)._field_c;;
				{
					auto &expr = _43217_ident.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1b27233c9:;
					if (it != expr.end()) {
						jule::Ptr<_1e5d54961_TypeDecl> _44725_ig = *it;
						{
							(*_self_)._field_c=_44725_ig;
							{
								auto &expr = _43317_s.get()._field_Generics;
								auto it = expr.begin();
								_iter_begin_1b2724144:;
								if (it != expr.end()) {
									jule::Ptr<_1e6ab535d_InsGeneric> _44929_sg = *it;
									{
										if (_1e6a79872_annotateConstraint(&(*_self_), _44929_sg.get()._field_Kind)) {
											return true;
										};
									}
									_iter_next_1b2724144:;
									++it;
									goto _iter_begin_1b2724144;
								}
								_iter_end_1b2724144:;
							};
						}
						_iter_next_1b27233c9:;
						++it;
						goto _iter_begin_1b27233c9;
					}
					_iter_end_1b27233c9:;
				};
				(*_self_)._field_c=_44621_c;
			}
			_iter_next_1b2720470:;
			++it;
			_43413_i++;
			goto _iter_begin_1b2720470;
		}
		_iter_end_1b2720470:;
	};
	return false;
}



inline jule::Bool _1e6a79872_annotateConstraint(_1e6a78222_dynamicTypeAnnotation* _self_, jule::Ptr<_1e6ab6a8a_TypeKind>& _46042_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e5d55027_IdentTypeDecl>>()) {
			_case_begin_1b27238e6:;
			{
				return _1e6a79553_annotateConstraintIdent(&(*_self_), _46042_k);
			}
		}
		_match_end_1b2724683:;
	};
	{
		
		if ((_1e6ab98b2_Arr(_46042_k.ptr()) != nullptr)) {
			_case_begin_1b2725189:;
			{
				return _1b2726a81_annotateConstraintElem(&(*_self_), _46042_k);
			}
		}
		else if ((_1e6ab9b26_Slc(_46042_k.ptr()) != nullptr)) {
			_case_begin_1b2725200:;
			{
				return _1b27261bd_annotateConstraintElem(&(*_self_), _46042_k);
			}
		}
		else if ((_1e6ab9175_Ptr(_46042_k.ptr()) != nullptr)) {
			_case_begin_1b2725266:;
			{
				return _1b2728445_annotateConstraintElem(&(*_self_), _46042_k);
			}
		}
		else if ((_1e6ab8e11_Sptr(_46042_k.ptr()) != nullptr)) {
			_case_begin_1b2725a3b:;
			{
				return _1b272e54a_annotateConstraintElem(&(*_self_), _46042_k);
			}
		}
		else if ((_1e6aba5c7_Map(_46042_k.ptr()) != nullptr)) {
			_case_begin_1b2725aa2:;
			{
				return _1e6a78b07_annotateConstraintMap(&(*_self_), _46042_k);
			}
		}
		else if ((_1e6ab9d8a_Fn(_46042_k.ptr()) != nullptr)) {
			_case_begin_1b2725b18:;
			{
				return _1e6a79223_annotateConstraintFn(&(*_self_), _46042_k);
			}
		}
		else if ((_1e6aba83b_Tup(_46042_k.ptr()) != nullptr)) {
			_case_begin_1b2725b7e:;
			{
				return _1e6a78e15_annotateConstraintTup(&(*_self_), _46042_k);
			}
		}
		else {
			_case_begin_1b2725992:;
			{
				return false;
			}
		}
		_match_end_1b272593c:;
	};
}



inline void _1e6a79b91_pushGeneric(_1e6a78222_dynamicTypeAnnotation* _self_, jule::Ptr<_1e6ab6a8a_TypeKind>& _48535_k, jule::I64 _48549_i) {
	(*_self_)._field_f.get()._field_Generics[_48549_i]=jule::new_ptr<_1e6ab535d_InsGeneric>(_1e6ab535d_InsGeneric{._field_Kind=_48535_k, });
	jule::Ptr<_1e5d62045_GenericDecl> _48717_gd = (*_self_)._field_f.get()._field_Decl.get()._field_Generics[_48549_i];;
	if (((_48717_gd.get()._field_Constraint == nullptr) || (_48717_gd.get()._field_Constraint.get()._field_Mask.len() != 1LL))) {
		return;;
	};
	(*_self_)._field_c=_48717_gd.get()._field_Constraint.get()._field_Mask[0LL];
	_1e6a79872_annotateConstraint(&(*_self_), _48535_k);
}



inline jule::Bool _1e6a79e9e_annotatePrim(_1e6a78222_dynamicTypeAnnotation* _self_, jule::Ptr<_1e6ab6a8a_TypeKind>& _49543_k) {
	jule::Bool _49559_ok = jule::Bool();
	_49559_ok = _1e6a7bcc5_annotateAny(&(*_self_), _49543_k);
	return _49559_ok;
}



inline jule::Bool _1e6a7a2ac_annotateArr(_1e6a78222_dynamicTypeAnnotation* _self_, jule::Ptr<_1e6ab6a8a_TypeKind>& _49942_k) {
	jule::Bool _49958_ok = jule::Bool();
	jule::Ptr<_1e6ac28ed_Arr> _50017_parr = _1e6ab98b2_Arr((*((*_self_)._field_k)).ptr());;
	if ((_50017_parr == nullptr)) {
		_49958_ok = false;
		return _49958_ok;
	};
	jule::Ptr<_1e6ac28ed_Arr> _50417_arr = _1e6ab98b2_Arr(_49942_k.ptr());;
	(*_self_)._field_k=(&(_50017_parr.get()._field_Elem));
	_49958_ok = _1e6a7c0d3_annotateKind(&(*_self_), _50417_arr.get()._field_Elem);
	return _49958_ok;
}



inline jule::Bool _1e6a7a5ba_annotateSlc(_1e6a78222_dynamicTypeAnnotation* _self_, jule::Ptr<_1e6ab6a8a_TypeKind>& _50942_k) {
	jule::Bool _50958_ok = jule::Bool();
	jule::Ptr<_1e6ac0753_Slc> _51017_pslc = _1e6ab9b26_Slc((*((*_self_)._field_k)).ptr());;
	if ((_51017_pslc == nullptr)) {
		_50958_ok = false;
		return _50958_ok;
	};
	jule::Ptr<_1e6ac0753_Slc> _51417_slc = _1e6ab9b26_Slc(_50942_k.ptr());;
	(*_self_)._field_k=(&(_51017_pslc.get()._field_Elem));
	_50958_ok = _1e6a7c0d3_annotateKind(&(*_self_), _51417_slc.get()._field_Elem);
	return _50958_ok;
}



inline jule::Bool _1e6a7a972_checkMapKey(_1e6a78222_dynamicTypeAnnotation* _self_, jule::Ptr<_1e6ab6a8a_TypeKind>* _51941_k, jule::Ptr<_1e6ab6a8a_TypeKind>& _51961_ck) {
	jule::Bool _51978_ok = jule::Bool();
	jule::Ptr<_1e6ab6a8a_TypeKind>* _52017_old = (*_self_)._field_k;;
	(*_self_)._field_k=_51941_k;
	_51978_ok=_1e6a7c0d3_annotateKind(&(*_self_), _51961_ck);
	(*_self_)._field_k=_52017_old;
	return _51978_ok;
}



inline jule::Bool _1e6a7ac80_annotateMap(_1e6a78222_dynamicTypeAnnotation* _self_, jule::Ptr<_1e6ab6a8a_TypeKind>& _52742_k) {
	jule::Bool _52758_ok = jule::Bool();
	jule::Ptr<_1e6ac1d09_Map> _52817_pmap = _1e6aba5c7_Map((*((*_self_)._field_k)).ptr());;
	if ((_52817_pmap == nullptr)) {
		_52758_ok = false;
		return _52758_ok;
	};
	jule::Ptr<_1e6ac1d09_Map> _53217_m = _1e6aba5c7_Map(_52742_k.ptr());;
	_52758_ok = (_1e6a7a972_checkMapKey(&(*_self_), (&(_52817_pmap.get()._field_Key)),_53217_m.get()._field_Key) && _1e6a7a972_checkMapKey(&(*_self_), (&(_52817_pmap.get()._field_Val)),_53217_m.get()._field_Val));
	return _52758_ok;
}



inline jule::Bool _1e6a7b08d_annotateFn(_1e6a78222_dynamicTypeAnnotation* _self_, jule::Ptr<_1e6ab6a8a_TypeKind>& _53741_k) {
	jule::Bool _53757_ok = jule::Bool();
	jule::Ptr<_1e5e202ce_FnIns> _53817_pf = _1e6ab9d8a_Fn((*((*_self_)._field_k)).ptr());;
	if ((_53817_pf == nullptr)) {
		_53757_ok = false;
		return _53757_ok;
	};
	jule::Ptr<_1e5e202ce_FnIns> _54217_f = _1e6ab9d8a_Fn(_53741_k.ptr());;
	{
		
		if ((_53817_pf.get()._field_Params.len() != _54217_f.get()._field_Params.len())) {
			_case_begin_1b274322e:;
			{
				_53757_ok = false;
				return _53757_ok;
			}
		}
		else if ((_1e5e1ca90_IsVoid(_53817_pf.get()._field_Decl.ptr()) != _1e5e1ca90_IsVoid(_54217_f.get()._field_Decl.ptr()))) {
			_case_begin_1b27432a6:;
			{
				_53757_ok = false;
				return _53757_ok;
			}
		}
		_match_end_1b27431a7:;
	};
	_53757_ok=true;
	jule::Ptr<_1e6ab6a8a_TypeKind>* _55117_old = (*_self_)._field_k;;
	{
		auto &expr = _54217_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1b2744b8c:;
		if (it != expr.end()) {
			jule::I64 _55214_i = it - expr.begin();
			jule::Ptr<_1e5e1e410_ParamIns> _55221_fp = *it;
			{
				(*_self_)._field_k=(&(_53817_pf.get()._field_Params[_55214_i].get()._field_Kind));
				_53757_ok=(_1e6a7c0d3_annotateKind(&(*_self_), _55221_fp.get()._field_Kind) && _53757_ok);
			}
			_iter_next_1b2744b8c:;
			++it;
			_55214_i++;
			goto _iter_begin_1b2744b8c;
		}
		_iter_end_1b2744b8c:;
	};
	if ((!(_1e5e1ca90_IsVoid(_53817_pf.get()._field_Decl.ptr())))) {
		(*_self_)._field_k=(&(_53817_pf.get()._field_Result));
		_53757_ok=(_1e6a7c0d3_annotateKind(&(*_self_), _54217_f.get()._field_Result) && _53757_ok);
	};
	(*_self_)._field_k=_55117_old;
	return _53757_ok;
}



inline jule::Bool _1e6a7b39b_annotatePtr(_1e6a78222_dynamicTypeAnnotation* _self_, jule::Ptr<_1e6ab6a8a_TypeKind>& _56642_k) {
	jule::Bool _56658_ok = jule::Bool();
	jule::Ptr<_1e6ac335a_Ptr> _56717_pptr = _1e6ab9175_Ptr((*((*_self_)._field_k)).ptr());;
	if ((_56717_pptr == nullptr)) {
		_56658_ok = false;
		return _56658_ok;
	};
	jule::Ptr<_1e6ac335a_Ptr> _57117_ptr = _1e6ab9175_Ptr(_56642_k.ptr());;
	(*_self_)._field_k=(&(_56717_pptr.get()._field_Elem));
	_56658_ok = _1e6a7c0d3_annotateKind(&(*_self_), _57117_ptr.get()._field_Elem);
	return _56658_ok;
}



inline jule::Bool _1e6a7b6a9_annotateSptr(_1e6a78222_dynamicTypeAnnotation* _self_, jule::Ptr<_1e6ab6a8a_TypeKind>& _57643_k) {
	jule::Bool _57659_ok = jule::Bool();
	jule::Ptr<_1e6abece6_Sptr> _57717_ssptr = _1e6ab8e11_Sptr((*((*_self_)._field_k)).ptr());;
	if ((_57717_ssptr == nullptr)) {
		_57659_ok = false;
		return _57659_ok;
	};
	jule::Ptr<_1e6abece6_Sptr> _58117_sptr = _1e6ab8e11_Sptr(_57643_k.ptr());;
	(*_self_)._field_k=(&(_57717_ssptr.get()._field_Elem));
	_57659_ok = _1e6a7c0d3_annotateKind(&(*_self_), _58117_sptr.get()._field_Elem);
	return _57659_ok;
}



inline jule::Bool _1e6a7b9b7_annotateStruct(_1e6a78222_dynamicTypeAnnotation* _self_, jule::Ptr<_1e6ab6a8a_TypeKind>& _58645_k) {
	jule::Bool _58661_ok = jule::Bool();
	jule::Ptr<_1e5d714d8_StructIns> _58717_s = _1e6aba0ee_Struct((*((*_self_)._field_k)).ptr());;
	if ((_58717_s == nullptr)) {
		_58661_ok = false;
		return _58661_ok;
	};
	jule::Ptr<_1e5d714d8_StructIns> _59117_s2 = _1e6aba0ee_Struct(_58645_k.ptr());;
	if ((_58717_s.get()._field_Generics.len() != _59117_s2.get()._field_Generics.len())) {
		_58661_ok = false;
		return _58661_ok;
	};
	{
		auto &expr = _58717_s.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1b274d5ad:;
		if (it != expr.end()) {
			jule::I64 _59514_i = it - expr.begin();
			jule::Ptr<_1e6ab535d_InsGeneric> _59521_g = *it;
			{
				jule::Ptr<_1e6ab535d_InsGeneric> _59621_g2 = _59117_s2.get()._field_Generics[_59514_i];;
				if (_1e6ab7294_Equals(_59521_g.get()._field_Kind, _59621_g2.get()._field_Kind)) {
					goto _iter_next_1b274d5ad;
				};
				(*_self_)._field_k=(&(_59521_g.get()._field_Kind));
				if ((!(_1e6a7c0d3_annotateKind(&(*_self_), _59621_g2.get()._field_Kind)))) {
					_58661_ok = false;
					return _58661_ok;
				};
			}
			_iter_next_1b274d5ad:;
			++it;
			_59514_i++;
			goto _iter_begin_1b274d5ad;
		}
		_iter_end_1b274d5ad:;
	};
	_58661_ok = true;
	return _58661_ok;
}



inline jule::Bool _1e6a7bcc5_annotateAny(_1e6a78222_dynamicTypeAnnotation* _self_, jule::Ptr<_1e6ab6a8a_TypeKind>& _60842_k) {
	jule::Bool _60858_ok = jule::Bool();
	jule::Str _60913_kind = _1e6ab6e86_Str((*((*_self_)._field_k)).ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_Decl.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1b2751517:;
		if (it != expr.end()) {
			jule::I64 _61013_i = it - expr.begin();
			jule::Ptr<_1e5d62045_GenericDecl> _61016_g = *it;
			{
				if ((_60913_kind != _61016_g.get()._field_Ident)) {
					goto _iter_next_1b2751517;
				};
				jule::Ptr<_1e6ab535d_InsGeneric> _61417_t = (*_self_)._field_f.get()._field_Generics[_61013_i];;
				{
					
					if ((_61417_t == nullptr) || (_61417_t.get()._field_Kind == nullptr)) {
						_case_begin_1b27530eb:;
						{
							_1e6a79b91_pushGeneric(&(*_self_), _60842_k,_61013_i);
						}
					}
					else if ((!(_1e6ab7294_Equals(_61417_t.get()._field_Kind, _60842_k)))) {
						_case_begin_1b2753173:;
						{
							_60858_ok = false;
							return _60858_ok;
						}
					}
					_match_end_1b2752ea8:;
				};
				(*((*_self_)._field_k)).get()._field_Kind=_60842_k.get()._field_Kind;
				_60858_ok = true;
				return _60858_ok;
			}
			_iter_next_1b2751517:;
			++it;
			_61013_i++;
			goto _iter_begin_1b2751517;
		}
		_iter_end_1b2751517:;
	};
	_60858_ok = false;
	return _60858_ok;
}



inline jule::Bool _1e6a7c0d3_annotateKind(_1e6a78222_dynamicTypeAnnotation* _self_, jule::Ptr<_1e6ab6a8a_TypeKind>& _63043_k) {
	jule::Bool _63059_ok = jule::Bool();
	if ((((*_self_)._field_k == nullptr) || ((*((*_self_)._field_k)) == nullptr))) {
		return _63059_ok;
	};
	{
		
		if (_1e6a7bcc5_annotateAny(&(*_self_), _63043_k)) {
			_case_begin_1b2756187:;
			{
				_63059_ok = true;
				return _63059_ok;
			}
		}
		else if ((_1e6ab8b9c_Prim(_63043_k.ptr()) != nullptr)) {
			_case_begin_1b27561ed:;
			{
				_63059_ok = _1e6a79e9e_annotatePrim(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_1e6ab98b2_Arr(_63043_k.ptr()) != nullptr)) {
			_case_begin_1b2755d9b:;
			{
				_63059_ok = _1e6a7a2ac_annotateArr(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_1e6ab9b26_Slc(_63043_k.ptr()) != nullptr)) {
			_case_begin_1b2755e12:;
			{
				_63059_ok = _1e6a7a5ba_annotateSlc(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_1e6aba5c7_Map(_63043_k.ptr()) != nullptr)) {
			_case_begin_1b2755e78:;
			{
				_63059_ok = _1e6a7ac80_annotateMap(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_1e6ab9d8a_Fn(_63043_k.ptr()) != nullptr)) {
			_case_begin_1b27559a0:;
			{
				_63059_ok = _1e6a7b08d_annotateFn(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_1e6ab9175_Ptr(_63043_k.ptr()) != nullptr)) {
			_case_begin_1b2755a16:;
			{
				_63059_ok = _1e6a7b39b_annotatePtr(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_1e6ab8e11_Sptr(_63043_k.ptr()) != nullptr)) {
			_case_begin_1b2755a7c:;
			{
				_63059_ok = _1e6a7b6a9_annotateSptr(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_1e6aba0ee_Struct(_63043_k.ptr()) != nullptr)) {
			_case_begin_1b2755ae3:;
			{
				_63059_ok = _1e6a7b9b7_annotateStruct(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else {
			_case_begin_1b2755939:;
			{
				_63059_ok = false;
				return _63059_ok;
			}
		}
		_match_end_1b27558d4:;
	};
}



inline jule::Bool _1e6a7c347_annotate(_1e6a78222_dynamicTypeAnnotation* _self_) {
	jule::Bool _65836_ok = jule::Bool();
	(*_self_)._field_k=(&((*_self_)._field_p.get()._field_Kind));
	_65836_ok = _1e6a7c0d3_annotateKind(&(*_self_), (*_self_)._field_a.get()._field_Kind);
	return _65836_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a78222_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c;
	_Stream << "}";
	return _Stream;
}



inline void _1e6a7d06d_pushErrToken(_1e6a7ca1d_fnCallArgChecker* _self_, jule::Ptr<_1e47137a5_Token> _67431_token, jule::Str _67446_fmt, jule::Slice<jule::Any> _67459_args) {
	_1e6a25103_pushErr((*_self_)._field_e.get()._field_s.ptr(), _67431_token,_67446_fmt,jule::Any(_67459_args));
}



inline void _1e6a7d38c_pushErr(_1e6a7ca1d_fnCallArgChecker* _self_, jule::Str _67826_fmt, jule::Slice<jule::Any> _67839_args) {
	_1e6a7d06d_pushErrToken(&(*_self_), (*_self_)._field_errorToken,_67826_fmt,jule::Any(_67839_args));
}



inline jule::Slice<jule::Ptr<_1e5e1e410_ParamIns>> _1e6a7d601_getParams(_1e6a7ca1d_fnCallArgChecker* _self_) {
	if (((((*_self_)._field_f.get()._field_Params.len() > 0LL) && ((*_self_)._field_f.get()._field_Params[0LL].get()._field_Decl != nullptr)) && _1e5e1b41d_IsSelf((*_self_)._field_f.get()._field_Params[0LL].get()._field_Decl.ptr()))) {
		return (*_self_)._field_f.get()._field_Params.slice(1LL);
	};
	return (*_self_)._field_f.get()._field_Params;
}



inline jule::Bool _1e6a7d90e_checkCounts(_1e6a7ca1d_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1e5e1e410_ParamIns>>& _69131_params) {
	jule::Bool _69154_ok = jule::Bool();
	jule::I64 _69217_n = _69131_params.len();;
	if (((_69217_n > 0LL) && _1e5e1b41d_IsSelf(_69131_params[0LL].get()._field_Decl.ptr()))) {
		(_69217_n)--;
	};
	jule::I64 _69717_diff = (_69217_n - (*_self_)._field_args.len());;
	{
		
		if ((_69717_diff == 0LL)) {
			_case_begin_1b2762737:;
			{
				_69154_ok = true;
				return _69154_ok;
			}
		}
		else if (((_69217_n > 0LL) && _69131_params[(_69217_n - 1LL)].get()._field_Decl.get()._field_Variadic)) {
			_case_begin_1b276279d:;
			{
				_69154_ok = true;
				return _69154_ok;
			}
		}
		else if (((_69717_diff < 0LL) || (_69717_diff > _69131_params.len()))) {
			_case_begin_1b2762814:;
			{
				_1e6a7d38c_pushErr(&(*_self_), jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				_69154_ok = false;
				return _69154_ok;
			}
		}
		_match_end_1b276268d:;
	};
	jule::Str _70817_idents = jule::Str();;
	for (; (_69717_diff > 0LL); (_69717_diff)--) {
		{
			_70817_idents+=(jule::Str(", ", 2) + _69131_params[(_69217_n - _69717_diff)].get()._field_Decl.get()._field_Ident);
		}
	_iter_next_1b27648b0:;
	}
	_iter_end_1b27648b0:;;
	(_70817_idents).mut_slice(2LL);;
	_1e6a7d38c_pushErr(&(*_self_), jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_70817_idents)}));
	_69154_ok = false;
	return _69154_ok;
}



inline jule::Bool _1e6a7dd60_checkArg(_1e6a7ca1d_fnCallArgChecker* _self_, jule::Ptr<_1e5e1e410_ParamIns>& _71832_p, jule::Ptr<_1e6a8ac6d_Data>& _71851_arg, jule::Ptr<_1e47137a5_Token>& _71868_errorToken) {
	jule::Bool _71890_ok = jule::Bool();
	if (((*_self_)._field_dynamicAnnotation && _1e5e223e1_parameterUsesGenerics(_71832_p.get()._field_Decl,(*_self_)._field_f.get()._field_Decl.get()._field_Generics))) {
		_71890_ok=(!(_71832_p.get()._field_Decl.get()._field_Variadic));
		if (_71890_ok) {
			_1e6a78222_dynamicTypeAnnotation _72225_dta = _1e6a78222_dynamicTypeAnnotation{._field_e=(*_self_)._field_e, ._field_f=(*_self_)._field_f, ._field_p=_71832_p, ._field_a=_71851_arg, ._field_errorToken=_71868_errorToken, };;
			_71890_ok=_1e6a7c347_annotate(&_72225_dta);
		};
		if ((!(_71890_ok))) {
			_1e6a7d06d_pushErrToken(&(*_self_), _71868_errorToken,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
			_71890_ok = false;
			return _71890_ok;
		};
	};
	if (_1e6a2d89d_checkValidityForInitExpr((*_self_)._field_e.get()._field_s, _71832_p.get()._field_Decl.get()._field_Mutable,_71832_p.get()._field_Decl.get()._field_Reference,_71832_p.get()._field_Kind,_71851_arg,_71868_errorToken)) {
		_1e6a2ab64_checkAssignType((*_self_)._field_e.get()._field_s, _71832_p.get()._field_Decl.get()._field_Reference,_71832_p.get()._field_Kind,_71851_arg,_71868_errorToken);
	};
	_71890_ok = true;
	return _71890_ok;
}



inline jule::Bool _1e6a7e217_push(_1e6a7ca1d_fnCallArgChecker* _self_, jule::Ptr<_1e5e1e410_ParamIns>& _74528_p, jule::Ptr<_1e5d58e82_Expr> _74546_arg) {
	jule::Bool _74560_ok = jule::Bool();
	jule::Ptr<_1e6ab6a8a_TypeKind> _74617_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _74713_old_immut = (*_self_)._field_e.get()._field_immutable;;
	jule::Ptr<_1e6a8ac6d_Data> _74817_d = nullptr;;
	(*_self_)._field_e.get()._field_immutable=(!(_74528_p.get()._field_Decl.get()._field_Mutable));
	if (((!((*_self_)._field_dynamicAnnotation)) && (!(_74528_p.get()._field_Decl.get()._field_Variadic)))) {
		(*_self_)._field_e.get()._field_prefix=_74528_p.get()._field_Kind;
	} else {
		(*_self_)._field_e.get()._field_prefix=nullptr;
	};
	_74817_d=_1e6aa7c13_evalExprKind((*_self_)._field_e, _74546_arg.get()._field_Kind);
	(*_self_)._field_e.get()._field_prefix=_74617_old;
	(*_self_)._field_e.get()._field_immutable=_74713_old_immut;
	if ((_74817_d == nullptr)) {
		_74560_ok = false;
		return _74560_ok;
	};
	_74560_ok=_1e6a7dd60_checkArg(&(*_self_), _74528_p,_74817_d,_74546_arg.get()._field_Token);
	(*_self_)._field_argModels = jule::alloc_for_append((*_self_)._field_argModels,1);(*_self_)._field_argModels.__push(_74817_d.get()._field_Model);;
	return _74560_ok;
}



inline jule::Bool _1e6a7e5be_pushVariadic(_1e6a7ca1d_fnCallArgChecker* _self_, jule::Ptr<_1e5e1e410_ParamIns>& _77036_p, jule::I64 _77054_i) {
	jule::Bool _77064_ok = jule::Bool();
	_77064_ok=true;
	jule::Bool _77217_variadiced = false;;
	jule::Bool _77313_more = ((_77054_i + 1LL) < (*_self_)._field_args.len());;
	jule::Ptr<_1e5e1621a_SliceExprModel> _77417_model = jule::new_ptr<_1e5e1621a_SliceExprModel>(_1e5e1621a_SliceExprModel{._field_ElemKind=_77036_p.get()._field_Kind, });;
	jule::Ptr<_1e6ab6a8a_TypeKind> _77817_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _78313_variadic = _77036_p.get()._field_Kind.get()._field_Variadic;;
	_77036_p.get()._field_Kind.get()._field_Variadic=false;
	__JULE_DEFER({
		_77036_p.get()._field_Kind.get()._field_Variadic=_78313_variadic;
	});;
	for (; (_77054_i < (*_self_)._field_args.len()); (_77054_i)++) {
		{
			jule::Ptr<_1e5d58e82_Expr> _79021_arg = (*_self_)._field_args[_77054_i];;
			{
				auto &_match_expr{ _79021_arg.get()._field_Kind };
				
				if (_match_expr.type_is<jule::Ptr<_1e5d5baab_VariadicExpr>>()) {
					_case_begin_1b277303e:;
					{
						(*_self_)._field_e.get()._field_prefix=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(jule::new_ptr<_1e6ac0753_Slc>(_1e6ac0753_Slc{._field_Elem=_77036_p.get()._field_Kind}), 8)});
					}
				}
				else {
					_case_begin_1b2773957:;
					{
						(*_self_)._field_e.get()._field_prefix=_77036_p.get()._field_Kind;
					}
				}
				_match_end_1b2773902:;
			};
			jule::Ptr<_1e6a8ac6d_Data> _80321_d = _1e6aa8021_eval((*_self_)._field_e, _79021_arg);;
			if ((_80321_d == nullptr)) {
				_77064_ok=false;
				goto _iter_next_1b2772527;
			};
			if (_80321_d.get()._field_Kind.get()._field_Variadic) {
				_77217_variadiced=true;
				_77036_p.get()._field_Kind.get()._field_Variadic=true;
				_77064_ok=(_77064_ok && _1e6a7dd60_checkArg(&(*_self_), _77036_p,_80321_d,_79021_arg.get()._field_Token));
				{
					auto &_match_expr{ _80321_d.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_1e5e1621a_SliceExprModel>>()) {
						_case_begin_1b2775b79:;
						{
							_77417_model=_80321_d.get()._field_Model.operator jule::Ptr<_1e5e1621a_SliceExprModel>();
							_77417_model.get()._field_ElemKind=_77036_p.get()._field_Kind;
						}
					}
					else {
						_case_begin_1b27769c1:;
						{
							_77417_model=nullptr;
							(*_self_)._field_argModels = jule::alloc_for_append((*_self_)._field_argModels,1);(*_self_)._field_argModels.__push(_80321_d.get()._field_Model);;
						}
					}
					_match_end_1b277675c:;
				};
				(_77054_i)++;
				goto _iter_end_1b2772527;
			};
			_77064_ok=(_77064_ok && _1e6a7dd60_checkArg(&(*_self_), _77036_p,_80321_d,_79021_arg.get()._field_Token));
			_77417_model.get()._field_Elems = jule::alloc_for_append(_77417_model.get()._field_Elems,1);_77417_model.get()._field_Elems.__push(_80321_d.get()._field_Model);;
		}
	_iter_next_1b2772527:;
	}
	_iter_end_1b2772527:;;
	(*_self_)._field_e.get()._field_prefix=_77817_old;
	if ((_77217_variadiced && _77313_more)) {
		_1e6a7d06d_pushErrToken(&(*_self_), (*_self_)._field_args[_77054_i].get()._field_Token,jule::Str("variadic argument can't use with more argument", 46),jule::Slice<jule::Any>());
	};
	if ((_77417_model != nullptr)) {
		(*_self_)._field_argModels = jule::alloc_for_append((*_self_)._field_argModels,1);(*_self_)._field_argModels.__push(static_cast<jule::Any>(_77417_model));;
	};
	return _77064_ok;
}



inline jule::Bool _1e6a7e8cc_checkArgs(_1e6a7ca1d_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1e5e1e410_ParamIns>>& _84633_params) {
	jule::Bool _84656_ok = jule::Bool();
	jule::Bool _84713_arg = (*_self_)._field_e.get()._field_arg;;
	(*_self_)._field_e.get()._field_arg=true;
	_84656_ok=true;
	jule::I64 _85117_i = 0LL;;
	if (((_84633_params.len() > 0LL) && _1e5e1b41d_IsSelf(_84633_params[0LL].get()._field_Decl.ptr()))) {
		(_85117_i)++;
	};
	_julec_label_iter:;
	while ((_85117_i < _84633_params.len())) {
		{
			jule::Ptr<_1e5e1e410_ParamIns> _85821_p = _84633_params[_85117_i];;
			{
				
				if (_85821_p.get()._field_Decl.get()._field_Variadic) {
					_case_begin_1b277d786:;
					{
						_84656_ok=(_1e6a7e5be_pushVariadic(&(*_self_), _85821_p,_85117_i) && _84656_ok);
						goto _iter_end_1b277b5b9;
					}
				}
				else if (((*_self_)._field_args.len() <= _85117_i)) {
					_case_begin_1b277d0c1:;
					{
						_84656_ok=false;
						goto _iter_end_1b277b5b9;
					}
				}
				else {
					_case_begin_1b277cc19:;
					{
						_84656_ok=(_1e6a7e217_push(&(*_self_), _85821_p,(*_self_)._field_args[_85117_i]) && _84656_ok);
					}
				}
				_match_end_1b277cba3:;
			};
			(_85117_i)++;
		}
	_iter_next_1b277b5b9:;
	}
	_iter_end_1b277b5b9:;;
	(*_self_)._field_e.get()._field_arg=_84713_arg;
	return _84656_ok;
}



inline jule::Bool _1e6a7eb63_checkDynamicTypeAnnotation(_1e6a7ca1d_fnCallArgChecker* _self_) {
	jule::Bool _87747_ok = jule::Bool();
	{
		auto &expr = (*_self_)._field_f.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1b2780106:;
		if (it != expr.end()) {
			jule::Ptr<_1e6ab535d_InsGeneric> _87816_g = *it;
			{
				if ((_87816_g == nullptr)) {
					_1e6a7d38c_pushErr(&(*_self_), jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
					_87747_ok = false;
					return _87747_ok;
				};
			}
			_iter_next_1b2780106:;
			++it;
			goto _iter_begin_1b2780106;
		}
		_iter_end_1b2780106:;
	};
	_87747_ok = true;
	return _87747_ok;
}



inline jule::Bool _1e6a7edd8_check(_1e6a7ca1d_fnCallArgChecker* _self_) {
	jule::Bool _88726_ok = jule::Bool();
	jule::Slice<jule::Ptr<_1e5e1e410_ParamIns>> _88817_params = _1e6a7d601_getParams(&(*_self_));;
	_88726_ok=_1e6a7d90e_checkCounts(&(*_self_), _88817_params);
	if ((!(_88726_ok))) {
		_88726_ok = false;
		return _88726_ok;
	};
	_88726_ok=_1e6a7e8cc_checkArgs(&(*_self_), _88817_params);
	if ((_88726_ok && (*_self_)._field_dynamicAnnotation)) {
		_88726_ok=_1e6a7eb63_checkDynamicTypeAnnotation(&(*_self_));
	};
	return _88726_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a7ca1d_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels;
	_Stream << "}";
	return _Stream;
}



inline void _1e6a80933_pushErr(_1e6a80427_structLitChecker* _self_, jule::Ptr<_1e47137a5_Token> _90926_token, jule::Str _90941_fmt, jule::Slice<jule::Any> _90954_args) {
	_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), _90926_token,_90941_fmt,jule::Any(_90954_args));
}



inline void _1e6a80c52_pushSugggestion(_1e6a80427_structLitChecker* _self_, jule::Str _91434_fmt, jule::Slice<jule::Any> _91447_args) {
	_1e6a8d116_pushSugggestion((*_self_)._field_e.ptr(), _91434_fmt,jule::Any(_91447_args));
}



inline void _1e6a8111a_pushMatch(_1e6a80427_structLitChecker* _self_, jule::Ptr<_1e5d4c805_FieldIns>& _91833_f, jule::Ptr<_1e6a8ac6d_Data>& _91852_d, jule::Ptr<_1e47137a5_Token>& _91867_errorToken) {
	;
	if (_1e6a2d89d_checkValidityForInitExpr((*_self_)._field_e.get()._field_s, (!((*_self_)._field_e.get()._field_immutable)),false,_91833_f.get()._field_Kind,_91852_d,_91867_errorToken)) {
		_1e6a2ab64_checkAssignType((*_self_)._field_e.get()._field_s, false,_91833_f.get()._field_Kind,_91852_d,_91867_errorToken);
	};
	(*_self_)._field_args = jule::alloc_for_append((*_self_)._field_args,1);(*_self_)._field_args.__push(jule::new_ptr<_1e5e1577a_StructArgExprModel>(_1e5e1577a_StructArgExprModel{._field_Field=_91833_f, ._field_Expr=_91852_d.get()._field_Model}));;
}



inline void _1e6a81439_checkPair(_1e6a80427_structLitChecker* _self_, jule::Ptr<_1e5d5dbce_FieldExprPair>& _93133_pair, jule::Slice<jule::Ptr<_1e5d58e82_Expr>>& _93160_exprs) {
	jule::Ptr<_1e5d4c805_FieldIns> _93317_f = _1e5d4b65b_FindField((*_self_)._field_s.ptr(), _93133_pair.get()._field_Field.get()._field_Kind);;
	if ((_93317_f == nullptr)) {
		_1e6a80933_pushErr(&(*_self_), _93133_pair.get()._field_Field,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_93133_pair.get()._field_Field.get()._field_Kind)}));
		return;;
	};
	if ((!(_1e6a257c9_isAccessibleDefine((*_self_)._field_e.get()._field_s.ptr(), _93317_f.get()._field_Decl.get()._field_Public,_93317_f.get()._field_Decl.get()._field_Token)))) {
		_1e6a80933_pushErr(&(*_self_), _93133_pair.get()._field_Field,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_93133_pair.get()._field_Field.get()._field_Kind)}));
		_1e6a80c52_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	_julec_label_dup_lookup:;
	{
		auto &expr = _93160_exprs;
		auto it = expr.begin();
		_iter_begin_1b278a1aa:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d58e82_Expr> _94521_expr = *it;
			{
				{
					auto &_match_expr{ _94521_expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_1e5d5dbce_FieldExprPair>>()) {
						_case_begin_1b278aa6d:;
						{
							jule::Ptr<_1e5d5dbce_FieldExprPair> _94825_dpair = _94521_expr.get()._field_Kind.operator jule::Ptr<_1e5d5dbce_FieldExprPair>();;
							{
								
								if ((_93133_pair == _94825_dpair)) {
									_case_begin_1b278ba3b:;
									{
										goto _iter_end_1b278a1aa;
									}
								}
								else if ((_93133_pair.get()._field_Field.get()._field_Kind == _94825_dpair.get()._field_Field.get()._field_Kind)) {
									_case_begin_1b278bab3:;
									{
										_1e6a80933_pushErr(&(*_self_), _93133_pair.get()._field_Field,jule::Str("@ already has expression", 24),jule::Slice<jule::Any>::make({jule::Any(_93133_pair.get()._field_Field.get()._field_Kind)}));
										goto _iter_end_1b278a1aa;
									}
								}
								_match_end_1b278b981:;
							};
						}
					}
					_match_end_1b278a8b4:;
				};
			}
			_iter_next_1b278a1aa:;
			++it;
			goto _iter_begin_1b278a1aa;
		}
		_iter_end_1b278a1aa:;
	};
	jule::Ptr<_1e6ab6a8a_TypeKind> _95917_prefix = (*_self_)._field_e.get()._field_prefix;;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_95917_prefix;
	});;
	(*_self_)._field_e.get()._field_prefix=_93317_f.get()._field_Kind;
	jule::Ptr<_1e6a8ac6d_Data> _96317_d = _1e6aa7c13_evalExprKind((*_self_)._field_e, _93133_pair.get()._field_Expr.get()._field_Kind);;
	if ((_96317_d == nullptr)) {
		return;;
	};
	_1e6a8111a_pushMatch(&(*_self_), _93317_f,_96317_d,_93133_pair.get()._field_Field);
}



inline jule::Bool _1e6a81747_readyExprs(_1e6a80427_structLitChecker* _self_, jule::Slice<jule::Ptr<_1e5d58e82_Expr>>& _97034_exprs) {
	jule::Bool _97117_ok = true;;
	{
		auto &expr = _97034_exprs;
		auto it = expr.begin();
		_iter_begin_1b2790578:;
		if (it != expr.end()) {
			jule::I64 _97214_i = it - expr.begin();
			jule::Ptr<_1e5d58e82_Expr> _97221_expr = *it;
			{
				{
					auto &_match_expr{ _97221_expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_1e5d603b7_KeyValPair>>()) {
						_case_begin_1b27912d2:;
						{
							jule::Ptr<_1e5d603b7_KeyValPair> _97525_pair = _97221_expr.get()._field_Kind.operator jule::Ptr<_1e5d603b7_KeyValPair>();;
							{
								auto &_match_expr{ _97525_pair.get()._field_Key.get()._field_Kind };
								
								if (_match_expr.type_is<jule::Ptr<_1e5d5aeea_IdentExpr>>()) {
									_case_begin_1b2791b51:;
									{
										goto _match_end_1b27920d5;
									}
								}
								else {
									_case_begin_1b279235a:;
									{
										_1e6a80933_pushErr(&(*_self_), _97525_pair.get()._field_Colon,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
										_97117_ok=false;
										goto _iter_next_1b2790578;
									}
								}
								_match_end_1b27920d5:;
							};
							_97034_exprs[_97214_i].get()._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1e5d5dbce_FieldExprPair>(_1e5d5dbce_FieldExprPair{._field_Field=_97525_pair.get()._field_Key.get()._field_Token, ._field_Expr=_97525_pair.get()._field_Val}));
						}
					}
					_match_end_1b2791128:;
				};
			}
			_iter_next_1b2790578:;
			++it;
			_97214_i++;
			goto _iter_begin_1b2790578;
		}
		_iter_end_1b2790578:;
	};
	return _97117_ok;
}



inline void _1e6a819bc_check(_1e6a80427_structLitChecker* _self_, jule::Slice<jule::Ptr<_1e5d58e82_Expr>>& _99429_exprs) {
	if ((_99429_exprs.len() == 0LL)) {
		return;;
	};
	if ((!(_1e6a81747_readyExprs(&(*_self_), _99429_exprs)))) {
		return;;
	};
	jule::Bool _100117_paired = false;;
	{
		auto &expr = _99429_exprs;
		auto it = expr.begin();
		_iter_begin_1b2790413:;
		if (it != expr.end()) {
			jule::I64 _100214_i = it - expr.begin();
			jule::Ptr<_1e5d58e82_Expr> _100221_expr = *it;
			{
				{
					auto &_match_expr{ _100221_expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_1e5d5dbce_FieldExprPair>>()) {
						_case_begin_1b279a709:;
						{
							jule::Ptr<_1e5d5dbce_FieldExprPair> _100525_pair = _100221_expr.get()._field_Kind.operator jule::Ptr<_1e5d5dbce_FieldExprPair>();;
							if (((_100214_i > 0LL) && (!(_100117_paired)))) {
								_1e6a80933_pushErr(&(*_self_), _100525_pair.get()._field_Field,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							};
							_100117_paired=true;
							_1e6a81439_checkPair(&(*_self_), _100525_pair,_99429_exprs);
						}
					}
					else {
						_case_begin_1b27955e4:;
						{
							if (_100117_paired) {
								_1e6a80933_pushErr(&(*_self_), _100221_expr.get()._field_Token,jule::Str("argument must target to field", 29),jule::Slice<jule::Any>());
							};
							if ((_100214_i >= (*_self_)._field_s.get()._field_Fields.len())) {
								_1e6a80933_pushErr(&(*_self_), _100221_expr.get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
								goto _iter_next_1b2790413;
							};
							jule::Ptr<_1e5d4c805_FieldIns> _102025_field = (*_self_)._field_s.get()._field_Fields[_100214_i];;
							if ((!(_1e6a257c9_isAccessibleDefine((*_self_)._field_e.get()._field_s.ptr(), _102025_field.get()._field_Decl.get()._field_Public,_102025_field.get()._field_Decl.get()._field_Token)))) {
								_1e6a80933_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("structure cannot instantiating because it has non-public fields", 63),jule::Slice<jule::Any>());
								_1e6a80c52_pushSugggestion(&(*_self_), jule::Str("use field:expression pairs to instantiate", 41),jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1e6ab6a8a_TypeKind> _102825_prefix = (*_self_)._field_e.get()._field_prefix;;
							__JULE_DEFER({
								(*_self_)._field_e.get()._field_prefix=_102825_prefix;
							});;
							(*_self_)._field_e.get()._field_prefix=_102025_field.get()._field_Kind;
							jule::Ptr<_1e6a8ac6d_Data> _103225_d = _1e6aa7c13_evalExprKind((*_self_)._field_e, _100221_expr.get()._field_Kind);;
							if ((_103225_d == nullptr)) {
								goto _iter_next_1b2790413;
							};
							_1e6a8111a_pushMatch(&(*_self_), _102025_field,_103225_d,_100221_expr.get()._field_Token);
						}
					}
					_match_end_1b279546d:;
				};
			}
			_iter_next_1b2790413:;
			++it;
			_100214_i++;
			goto _iter_begin_1b2790413;
		}
		_iter_end_1b2790413:;
	};
	if ((!(_100117_paired))) {
		jule::I64 _104317_n = (*_self_)._field_s.get()._field_Fields.len();;
		jule::I64 _104421_diff = (_104317_n - _99429_exprs.len());;
		{
			
			if ((_104421_diff <= 0LL)) {
				_case_begin_1b279d0e1:;
				{
					return;;
				}
			}
			_match_end_1b279ce8c:;
		};
		jule::Str _105021_idents = jule::Str();;
		for (; (_104421_diff > 0LL); (_104421_diff)--) {
			{
				_105021_idents+=(jule::Str(", ", 2) + (*_self_)._field_s.get()._field_Fields[(_104317_n - _104421_diff)].get()._field_Decl.get()._field_Ident);
			}
		_iter_next_1b279da3c:;
		}
		_iter_end_1b279da3c:;;
		(_105021_idents).mut_slice(2LL);;
		_1e6a80933_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_105021_idents)}));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a80427_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e6a3dd20_Var> _1e6a824a1_buildVar(_1e6a8200b_rangeChecker* _self_, jule::Ptr<_1e5d67754_VarDecl>& _106928_decl) {
	jule::Ptr<_1e6a3dd20_Var> _107017_v = _1e5e27e74_buildVar(_106928_decl);;
	return _107017_v;
}



inline void _1e6a8267c_setSizeKey(_1e6a8200b_rangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_KeyA == nullptr) || _1e4716049_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	(*_self_)._field_Kind.get()._field_KeyA=_1e6a824a1_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyA);
	(*_self_)._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_1e6ababe3_TypeSymbol>(_1e6ababe3_TypeSymbol{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("int", 3)), 6)})});
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1e6a3dd20_Var>>()) {
			_case_begin_1b27a2711:;
			{
				(*_self_)._field_Kind.get()._field_KeyA.get()._field_IterRelation=jule::new_ptr<_1e6a3cda7_IterRelation>(_1e6a3cda7_IterRelation{._field_Range=(*_self_)._field_d.get()._field_Model.operator jule::Ptr<_1e6a3dd20_Var>()});
			}
		}
		_match_end_1b27a2656:;
	};
}



inline void _1e6a82a45_checkRangeExprValidity(_1e6a8200b_rangeChecker* _self_, jule::Ptr<_1e6a8ac6d_Data>& _110046_d, jule::Ptr<_1e6a3dd20_Var>& _110057_key, jule::Ptr<_1e6ab6a8a_TypeKind>& _110073_k) {
	jule::Bool _110117__mut = _110057_key.get()._field_Mutable;;
	if ((_110117__mut && (!(_1e6ab7e87_Mutable(_110073_k.ptr()))))) {
		_110117__mut=false;
	};
	_1e6a2d89d_checkValidityForInitExpr((*_self_)._field_sc.get()._field_s, _110117__mut,_110057_key.get()._field_Reference,_110057_key.get()._field_Kind.get()._field_Kind,_110046_d,(*_self_)._field_rang.get()._field_InToken);
}



inline void _1e6a82c21_checkSlice(_1e6a8200b_rangeChecker* _self_) {
	_1e6a8267c_setSizeKey(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _1e4716049_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1e6ac0753_Slc> _111917_slc = _1e6ab9b26_Slc((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyB=_1e6a824a1_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1e6ababe3_TypeSymbol>(_1e6ababe3_TypeSymbol{._field_Kind=_111917_slc.get()._field_Elem});
	_1e6a82a45_checkRangeExprValidity(&(*_self_), (*_self_)._field_d,(*_self_)._field_Kind.get()._field_KeyB,_111917_slc.get()._field_Elem);
}



inline void _1e6a82dec_checkArray(_1e6a8200b_rangeChecker* _self_) {
	_1e6a8267c_setSizeKey(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _1e4716049_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1e6ac28ed_Arr> _113217_arr = _1e6ab98b2_Arr((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyB=_1e6a824a1_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1e6ababe3_TypeSymbol>(_1e6ababe3_TypeSymbol{._field_Kind=_113217_arr.get()._field_Elem});
	_1e6a82a45_checkRangeExprValidity(&(*_self_), (*_self_)._field_d,(*_self_)._field_Kind.get()._field_KeyB,_113217_arr.get()._field_Elem);
}



inline void _1e6a830c8_checkMapKeyA(_1e6a8200b_rangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_KeyA == nullptr) || _1e4716049_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1e6ac1d09_Map> _114417_m = _1e6aba5c7_Map((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyA=_1e6a824a1_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyA);
	(*_self_)._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_1e6ababe3_TypeSymbol>(_1e6ababe3_TypeSymbol{._field_Kind=_114417_m.get()._field_Key});
	jule::Ptr<_1e6a8ac6d_Data> _114817_d = jule::new_ptr<_1e6a8ac6d_Data>((*((*_self_)._field_d)));;
	_114817_d.get()._field_Kind=_114417_m.get()._field_Key;
	_1e6a82a45_checkRangeExprValidity(&(*_self_), _114817_d,(*_self_)._field_Kind.get()._field_KeyA,_114417_m.get()._field_Key);
}



inline void _1e6a832a4_checkMapKeyB(_1e6a8200b_rangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _1e4716049_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1e6ac1d09_Map> _115917_m = _1e6aba5c7_Map((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyB=_1e6a824a1_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1e6ababe3_TypeSymbol>(_1e6ababe3_TypeSymbol{._field_Kind=_115917_m.get()._field_Val});
	jule::Ptr<_1e6a8ac6d_Data> _116317_d = jule::new_ptr<_1e6a8ac6d_Data>((*((*_self_)._field_d)));;
	_116317_d.get()._field_Kind=_115917_m.get()._field_Val;
	_1e6a82a45_checkRangeExprValidity(&(*_self_), _116317_d,(*_self_)._field_Kind.get()._field_KeyB,_115917_m.get()._field_Val);
}



inline void _1e6a83480_checkMap(_1e6a8200b_rangeChecker* _self_) {
	_1e6a830c8_checkMapKeyA(&(*_self_));
	_1e6a832a4_checkMapKeyB(&(*_self_));
}



inline void _1e6a8365b_checkStr(_1e6a8200b_rangeChecker* _self_) {
	_1e6a8267c_setSizeKey(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _1e4716049_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	(*_self_)._field_Kind.get()._field_KeyB=_1e6a824a1_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1e6ababe3_TypeSymbol>(_1e6ababe3_TypeSymbol{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("u8", 2)), 6)})});
}



inline jule::Bool _1e6a838c0_check(_1e6a8200b_rangeChecker* _self_) {
	{
		
		if ((*_self_)._field_d.get()._field_Kind.get()._field_Variadic) {
			_case_begin_1b27b62e6:;
		}
		else if ((_1e6ab9b26_Slc((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b27b55e2:;
			{
				_1e6a82c21_checkSlice(&(*_self_));
				return true;
			}
		}
		else if ((_1e6ab98b2_Arr((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b27b5658:;
			{
				_1e6a82dec_checkArray(&(*_self_));
				return true;
			}
		}
		else if ((_1e6aba5c7_Map((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b27b56be:;
			{
				_1e6a83480_checkMap(&(*_self_));
				return true;
			}
		}
		else {
			_case_begin_1b27b557b:;
			{
				jule::Ptr<_1e6abb562_Prim> _120117_prim = _1e6ab8b9c_Prim((*_self_)._field_d.get()._field_Kind.ptr());;
				if (((_120117_prim != nullptr) && _1e6abe796_IsStr(_120117_prim.ptr()))) {
					_1e6a8365b_checkStr(&(*_self_));
					return true;
				};
			}
		}
		_match_end_1b27b549e:;
	};
	_1e6a25103_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_rang.get()._field_InToken,jule::Str("range iterations must be have enumerable expression", 51),jule::Slice<jule::Any>());
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a8200b_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1e6a84618_prepareTypes(_1e6a84162_retTypeChecker* _self_) {
	if (((*_self_)._field_f != nullptr)) {
		(*_self_)._field_types=_1e5e21401_Types((*_self_)._field_f.ptr());
	};
}



inline void _1e6a8488d_prepareExprs(_1e6a84162_retTypeChecker* _self_, jule::Ptr<_1e5d58e82_Expr>& _123036_e) {
	if ((_123036_e == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _123036_e.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e5d59b0e_TupleExpr>>()) {
			_case_begin_1b27bb4e9:;
			{
				(*_self_)._field_exprs=_123036_e.get()._field_Kind.operator jule::Ptr<_1e5d59b0e_TupleExpr>().get()._field_Expr;
			}
		}
		else {
			_case_begin_1b27bb164:;
			{
				(*_self_)._field_exprs = jule::alloc_for_append((*_self_)._field_exprs,1);(*_self_)._field_exprs.__push(_123036_e);;
			}
		}
		_match_end_1b27bac24:;
	};
}



inline void _1e6a84a69_retVars(_1e6a84162_retTypeChecker* _self_) {
	if ((((*_self_)._field_f == nullptr) || _1e5e1ca90_IsVoid((*_self_)._field_f.get()._field_Decl.ptr()))) {
		return;;
	};
	(*_self_)._field_vars=jule::Slice<jule::Ptr<_1e6a3dd20_Var>>::alloc(0LL,(*_self_)._field_f.get()._field_Decl.get()._field_Result.get()._field_Idents.len());
	jule::Ptr<_1e6a09505_scopeChecker> _124817_rootScope = _1e6a0a8d0_getRoot((*_self_)._field_sc);;
	jule::I64 _125017_j = 0LL;;
	{
		auto &expr = (*_self_)._field_f.get()._field_Decl.get()._field_Result.get()._field_Idents;
		auto it = expr.begin();
		_iter_begin_1b27be101:;
		if (it != expr.end()) {
			jule::I64 _125113_i = it - expr.begin();
			jule::Ptr<_1e47137a5_Token> _125116_ident = *it;
			{
				if (((!(_1e4716049_IsIgnoreIdent(_125116_ident.get()._field_Kind))) && (!(_1e47162e1_IsAnonIdent(_125116_ident.get()._field_Kind))))) {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(_124817_rootScope.get()._field_table.get()._field_Vars[_125017_j]);;
					(_125017_j)++;
				} else {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(jule::new_ptr<_1e6a3dd20_Var>(_1e6a3dd20_Var{._field_Ident=jule::Str("_", 1), ._field_Kind=jule::new_ptr<_1e6ababe3_TypeSymbol>(_1e6ababe3_TypeSymbol{._field_Kind=(*_self_)._field_types[_125113_i]}), }));;
				};
			}
			_iter_next_1b27be101:;
			++it;
			_125113_i++;
			goto _iter_begin_1b27be101;
		}
		_iter_end_1b27be101:;
	};
	if ((_125017_j == 0LL)) {
		(*_self_)._field_vars=nullptr;
	};
}



inline void _1e6a84c45_checkExprs(_1e6a84162_retTypeChecker* _self_) {
	if (((*_self_)._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1e6a8ac6d_Data>> _127317_datas = jule::Slice<jule::Ptr<_1e6a8ac6d_Data>>::alloc(0LL,(*_self_)._field_exprs.len());;
	{
		auto &expr = (*_self_)._field_exprs;
		auto it = expr.begin();
		_iter_begin_1b27c2d6e:;
		if (it != expr.end()) {
			jule::I64 _127414_i = it - expr.begin();
			jule::Ptr<_1e5d58e82_Expr> _127421_expr = *it;
			{
				if ((_127414_i >= (*_self_)._field_types.len())) {
					goto _iter_end_1b27c2d6e;
				};
				jule::Ptr<_1e6ab6a8a_TypeKind> _127921_t = (*_self_)._field_types[_127414_i];;
				jule::Ptr<_1e6a8ac6d_Data> _128121_d = _1e6aa832e_evalExpr(_1e6a2a35b_evalp((*_self_)._field_sc.get()._field_s, jule::Trait<_1e6ad2600_Lookup>((*_self_)._field_sc, 0),_127921_t), _127421_expr);;
				if ((_128121_d == nullptr)) {
					goto _iter_next_1b27c2d6e;
				};
				_127317_datas = jule::alloc_for_append(_127317_datas,1);_127317_datas.__push(_128121_d);;
				if (((!(_128121_d.get()._field_Mutable)) && _1e6ab7e87_Mutable(_128121_d.get()._field_Kind.ptr()))) {
					_1e6a25103_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("mutable typed return expressions should be mutable", 50),jule::Slice<jule::Any>());
					return;;
				};
				_1e6a76808_assignTypeChecker _129321_ac = _1e6a76808_assignTypeChecker{._field_s=(*_self_)._field_sc.get()._field_s, ._field_dest=_127921_t, ._field_d=_128121_d, ._field_errorToken=(*_self_)._field_errorToken};;
				_1e6a77980_check(&_129321_ac);
			}
			_iter_next_1b27c2d6e:;
			++it;
			_127414_i++;
			goto _iter_begin_1b27c2d6e;
		}
		_iter_end_1b27c2d6e:;
	};
	if ((_127317_datas.len() > 1LL)) {
		(*_self_)._field_model=static_cast<jule::Any>(jule::new_ptr<_1e5e17c55_TupleExprModel>(_1e5e17c55_TupleExprModel{._field_Datas=_127317_datas}));
	} else if ((_127317_datas.len() == 1LL)) {
		(*_self_)._field_model=_127317_datas[0LL].get()._field_Model;
	};
}



inline jule::Bool _1e6a85053_check(_1e6a84162_retTypeChecker* _self_, jule::Ptr<_1e5d58e82_Expr>& _131229_e) {
	_1e6a84618_prepareTypes(&(*_self_));
	_1e6a8488d_prepareExprs(&(*_self_), _131229_e);
	_1e6a84a69_retVars(&(*_self_));
	jule::I64 _131713_n = (*_self_)._field_exprs.len();;
	if (((_131713_n == 0LL) && ((*_self_)._field_types.len() > 0LL))) {
		if ((!(_1e5e1d7a5_AnyVar((*_self_)._field_f.get()._field_Decl.ptr())))) {
			_1e6a25103_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("return statements of non-void functions should have return expression", 69),jule::Slice<jule::Any>());
			return false;
		};
		return true;
	};
	if ((((_131713_n > 0LL) && ((*_self_)._field_f != nullptr)) && _1e5e1ca90_IsVoid((*_self_)._field_f.get()._field_Decl.ptr()))) {
		_1e6a25103_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("void functions is cannot returns any value", 42),jule::Slice<jule::Any>());
		return false;
	};
	if ((_131713_n > (*_self_)._field_types.len())) {
		_1e6a25103_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("overflow return expressions", 27),jule::Slice<jule::Any>());
	} else if ((_131713_n < (*_self_)._field_types.len())) {
		_1e6a25103_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("missing return expressions for multi-return", 43),jule::Slice<jule::Any>());
	};
	_1e6a84c45_checkExprs(&(*_self_));
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a84162_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e6a192e5_ImportInfo> _1e6a8652c_FindPackage(_1e6a86010_SymbolTable* _self_, jule::Str _2630_ident) {
	{
		auto &expr = (*_self_)._field_Imports;
		auto it = expr.begin();
		_iter_begin_1b27ce40d:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a192e5_ImportInfo> _2721_pkg = *it;
			{
				if ((_2721_pkg.get()._field_Ident == _2630_ident)) {
					return _2721_pkg;
				};
			}
			_iter_next_1b27ce40d:;
			++it;
			goto _iter_begin_1b27ce40d;
		}
		_iter_end_1b27ce40d:;
	};
	return nullptr;
}



inline jule::Ptr<_1e6a192e5_ImportInfo> _1e6a8683a_SelectPackage(_1e6a86010_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_1e6a192e5_ImportInfo>)> _3832_selector) {
	if ((_3832_selector == nullptr)) {
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_Imports;
		auto it = expr.begin();
		_iter_begin_1b27d03a9:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a192e5_ImportInfo> _4221_pkg = *it;
			{
				if (_3832_selector(_4221_pkg)) {
					return _4221_pkg;
				};
			}
			_iter_next_1b27d03a9:;
			++it;
			goto _iter_begin_1b27d03a9;
		}
		_iter_end_1b27d03a9:;
	};
	return nullptr;
}



inline jule::Ptr<_1e6a3dd20_Var> _1e6a86be2_FindVar(_1e6a86010_SymbolTable* _self_, jule::Str _5226_ident, jule::Bool _5238_cppLinked) {
	return _1e6a887a4_findVar(&(*_self_), _5226_ident,_5238_cppLinked,false);
}



inline jule::Ptr<_1e6ab5d97_TypeAlias> _1e6a87099_FindTypeAlias(_1e6a86010_SymbolTable* _self_, jule::Str _5832_ident, jule::Bool _5844_cppLinked) {
	return _1e6a88c05_findTypeAlias(&(*_self_), _5832_ident,_5844_cppLinked,false);
}



inline jule::Ptr<_1e5d4518d_Struct> _1e6a87451_FindStruct(_1e6a86010_SymbolTable* _self_, jule::Str _6429_ident, jule::Bool _6441_cppLinked) {
	{
		auto &expr = (*_self_)._field_Structs;
		auto it = expr.begin();
		_iter_begin_1b27d2dd4:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d4518d_Struct> _6521_s = *it;
			{
				if (((_6521_s.get()._field_Ident == _6429_ident) && (_6521_s.get()._field_CppLinked == _6441_cppLinked))) {
					return _6521_s;
				};
			}
			_iter_next_1b27d2dd4:;
			++it;
			goto _iter_begin_1b27d2dd4;
		}
		_iter_end_1b27d2dd4:;
	};
	return nullptr;
}



inline jule::Ptr<_1e5e1c62d_Fn> _1e6a87808_FindFn(_1e6a86010_SymbolTable* _self_, jule::Str _7525_ident, jule::Bool _7537_cppLinked) {
	{
		auto &expr = (*_self_)._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1b27d437a:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e1c62d_Fn> _7621_f = *it;
			{
				if (((_7621_f.get()._field_Ident == _7525_ident) && (_7621_f.get()._field_CppLinked == _7537_cppLinked))) {
					return _7621_f;
				};
			}
			_iter_next_1b27d437a:;
			++it;
			goto _iter_begin_1b27d437a;
		}
		_iter_end_1b27d437a:;
	};
	return nullptr;
}



inline jule::Ptr<_1e5e2e4db_Trait> _1e6a87b16_FindTrait(_1e6a86010_SymbolTable* _self_, jule::Str _8628_ident) {
	{
		auto &expr = (*_self_)._field_Traits;
		auto it = expr.begin();
		_iter_begin_1b27d5601:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e2e4db_Trait> _8721_t = *it;
			{
				if ((_8721_t.get()._field_Ident == _8628_ident)) {
					return _8721_t;
				};
			}
			_iter_next_1b27d5601:;
			++it;
			goto _iter_begin_1b27d5601;
		}
		_iter_end_1b27d5601:;
	};
	return nullptr;
}



inline jule::Ptr<_1e5e31631_Enum> _1e6a87e24_FindEnum(_1e6a86010_SymbolTable* _self_, jule::Str _9727_ident) {
	{
		auto &expr = (*_self_)._field_Enums;
		auto it = expr.begin();
		_iter_begin_1b27d658b:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e31631_Enum> _9821_e = *it;
			{
				if ((_9821_e.get()._field_Ident == _9727_ident)) {
					return _9821_e;
				};
			}
			_iter_next_1b27d658b:;
			++it;
			goto _iter_begin_1b27d658b;
		}
		_iter_end_1b27d658b:;
	};
	return nullptr;
}



inline jule::Ptr<_1e5e32c2b_TypeEnum> _1e6a88232_FindTypeEnum(_1e6a86010_SymbolTable* _self_, jule::Str _10831_ident) {
	{
		auto &expr = (*_self_)._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_1b27d6a64:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e32c2b_TypeEnum> _10921_e = *it;
			{
				if ((_10921_e.get()._field_Ident == _10831_ident)) {
					return _10921_e;
				};
			}
			_iter_next_1b27d6a64:;
			++it;
			goto _iter_begin_1b27d6a64;
		}
		_iter_end_1b27d6a64:;
	};
	return nullptr;
}



inline jule::Ptr<_1e6a3dd20_Var> _1e6a887a4_findVar(_1e6a86010_SymbolTable* _self_, jule::Str _11926_ident, jule::Bool _11938_cppLinked, jule::Bool _11955_reverse) {
	if (_11955_reverse) {
		jule::I64 _12121_i = ((*_self_)._field_Vars.len() - 1LL);;
		for (; (_12121_i >= 0LL); (_12121_i)--) {
			{
				jule::Ptr<_1e6a3dd20_Var> _12325_v = (*_self_)._field_Vars[_12121_i];;
				if (((_12325_v.get()._field_Ident == _11926_ident) && (_12325_v.get()._field_CppLinked == _11938_cppLinked))) {
					return _12325_v;
				};
			}
		_iter_next_1b27de41d:;
		}
		_iter_end_1b27de41d:;;
	} else {
		{
			auto &expr = (*_self_)._field_Vars;
			auto it = expr.begin();
			_iter_begin_1b27ddd79:;
			if (it != expr.end()) {
				jule::Ptr<_1e6a3dd20_Var> _12925_v = *it;
				{
					if (((_12925_v.get()._field_Ident == _11926_ident) && (_12925_v.get()._field_CppLinked == _11938_cppLinked))) {
						return _12925_v;
					};
				}
				_iter_next_1b27ddd79:;
				++it;
				goto _iter_begin_1b27ddd79;
			}
			_iter_end_1b27ddd79:;
		};
	};
	return nullptr;
}



inline jule::Ptr<_1e6ab5d97_TypeAlias> _1e6a88c05_findTypeAlias(_1e6a86010_SymbolTable* _self_, jule::Str _13832_ident, jule::Bool _13844_cppLinked, jule::Bool _13861_reverse) {
	if (_13861_reverse) {
		jule::I64 _14021_i = ((*_self_)._field_TypeAliases.len() - 1LL);;
		for (; (_14021_i >= 0LL); (_14021_i)--) {
			{
				jule::Ptr<_1e6ab5d97_TypeAlias> _14225_ta = (*_self_)._field_TypeAliases[_14021_i];;
				if (((_14225_ta.get()._field_Ident == _13832_ident) && (_14225_ta.get()._field_CppLinked == _13844_cppLinked))) {
					return _14225_ta;
				};
			}
		_iter_next_1b27e26eb:;
		}
		_iter_end_1b27e26eb:;;
	} else {
		{
			auto &expr = (*_self_)._field_TypeAliases;
			auto it = expr.begin();
			_iter_begin_1b27e2157:;
			if (it != expr.end()) {
				jule::Ptr<_1e6ab5d97_TypeAlias> _14825_ta = *it;
				{
					if (((_14825_ta.get()._field_Ident == _13832_ident) && (_14825_ta.get()._field_CppLinked == _13844_cppLinked))) {
						return _14825_ta;
					};
				}
				_iter_next_1b27e2157:;
				++it;
				goto _iter_begin_1b27e2157;
			}
			_iter_end_1b27e2157:;
		};
	};
	return nullptr;
}



inline jule::Any _1e6a890ac_defByIdent(_1e6a86010_SymbolTable* _self_, jule::Str _15929_ident, jule::Bool _15941_cppLinked) {
	{
		auto &expr = (*_self_)._field_Vars;
		auto it = expr.begin();
		_iter_begin_1b27e4137:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a3dd20_Var> _16021_v = *it;
			{
				if (((_16021_v.get()._field_Ident == _15929_ident) && (_16021_v.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_16021_v);
				};
			}
			_iter_next_1b27e4137:;
			++it;
			goto _iter_begin_1b27e4137;
		}
		_iter_end_1b27e4137:;
	};
	{
		auto &expr = (*_self_)._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_1b27e5963:;
		if (it != expr.end()) {
			jule::Ptr<_1e6ab5d97_TypeAlias> _16621_ta = *it;
			{
				if (((_16621_ta.get()._field_Ident == _15929_ident) && (_16621_ta.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_16621_ta);
				};
			}
			_iter_next_1b27e5963:;
			++it;
			goto _iter_begin_1b27e5963;
		}
		_iter_end_1b27e5963:;
	};
	{
		auto &expr = (*_self_)._field_Structs;
		auto it = expr.begin();
		_iter_begin_1b27e6755:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d4518d_Struct> _17221_s = *it;
			{
				if (((_17221_s.get()._field_Ident == _15929_ident) && (_17221_s.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_17221_s);
				};
			}
			_iter_next_1b27e6755:;
			++it;
			goto _iter_begin_1b27e6755;
		}
		_iter_end_1b27e6755:;
	};
	{
		auto &expr = (*_self_)._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1b27e75d0:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e1c62d_Fn> _17821_f = *it;
			{
				if (((_17821_f.get()._field_Ident == _15929_ident) && (_17821_f.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_17821_f);
				};
			}
			_iter_next_1b27e75d0:;
			++it;
			goto _iter_begin_1b27e75d0;
		}
		_iter_end_1b27e75d0:;
	};
	if (_15941_cppLinked) {
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_Traits;
		auto it = expr.begin();
		_iter_begin_1b27e8977:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e2e4db_Trait> _18821_t = *it;
			{
				if ((_18821_t.get()._field_Ident == _15929_ident)) {
					return jule::Any(_18821_t);
				};
			}
			_iter_next_1b27e8977:;
			++it;
			goto _iter_begin_1b27e8977;
		}
		_iter_end_1b27e8977:;
	};
	{
		auto &expr = (*_self_)._field_Enums;
		auto it = expr.begin();
		_iter_begin_1b27e93b2:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e31631_Enum> _19421_e = *it;
			{
				if ((_19421_e.get()._field_Ident == _15929_ident)) {
					return jule::Any(_19421_e);
				};
			}
			_iter_next_1b27e93b2:;
			++it;
			goto _iter_begin_1b27e93b2;
		}
		_iter_end_1b27e93b2:;
	};
	{
		auto &expr = (*_self_)._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_1b27ea13d:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e32c2b_TypeEnum> _20021_te = *it;
			{
				if ((_20021_te.get()._field_Ident == _15929_ident)) {
					return jule::Any(_20021_te);
				};
			}
			_iter_next_1b27ea13d:;
			++it;
			goto _iter_begin_1b27ea13d;
		}
		_iter_end_1b27ea13d:;
	};
	return nullptr;
}



inline jule::Bool _1e6a8950d_isDuplicatedIdent(_1e6a86010_SymbolTable* _self_, jule::Uintptr _21232_itself, jule::Str _21249_ident, jule::Bool _21261_cppLinked) {
	{
		auto &expr = (*_self_)._field_Vars;
		auto it = expr.begin();
		_iter_begin_1b27ea78c:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a3dd20_Var> &_21316_v = *it;
			{
				if ((((static_cast<jule::Uintptr>(_21316_v) != _21232_itself) && (_21316_v.get()._field_Ident == _21249_ident)) && (_21316_v.get()._field_CppLinked == _21261_cppLinked))) {
					return true;
				};
			}
			_iter_next_1b27ea78c:;
			++it;
			goto _iter_begin_1b27ea78c;
		}
		_iter_end_1b27ea78c:;
	};
	{
		auto &expr = (*_self_)._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_1b27ec41a:;
		if (it != expr.end()) {
			jule::Ptr<_1e6ab5d97_TypeAlias> &_21916_ta = *it;
			{
				if ((((static_cast<jule::Uintptr>(_21916_ta) != _21232_itself) && (_21916_ta.get()._field_Ident == _21249_ident)) && (_21916_ta.get()._field_CppLinked == _21261_cppLinked))) {
					return true;
				};
			}
			_iter_next_1b27ec41a:;
			++it;
			goto _iter_begin_1b27ec41a;
		}
		_iter_end_1b27ec41a:;
	};
	{
		auto &expr = (*_self_)._field_Structs;
		auto it = expr.begin();
		_iter_begin_1b27ec0b8:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d4518d_Struct> &_22516_s = *it;
			{
				if ((((static_cast<jule::Uintptr>(_22516_s) != _21232_itself) && (_22516_s.get()._field_Ident == _21249_ident)) && (_22516_s.get()._field_CppLinked == _21261_cppLinked))) {
					return true;
				};
			}
			_iter_next_1b27ec0b8:;
			++it;
			goto _iter_begin_1b27ec0b8;
		}
		_iter_end_1b27ec0b8:;
	};
	{
		auto &expr = (*_self_)._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1b27ed22e:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e1c62d_Fn> &_23116_f = *it;
			{
				if ((((static_cast<jule::Uintptr>(_23116_f) != _21232_itself) && (_23116_f.get()._field_Ident == _21249_ident)) && (_23116_f.get()._field_CppLinked == _21261_cppLinked))) {
					return true;
				};
			}
			_iter_next_1b27ed22e:;
			++it;
			goto _iter_begin_1b27ed22e;
		}
		_iter_end_1b27ed22e:;
	};
	if (_21261_cppLinked) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_Traits;
		auto it = expr.begin();
		_iter_begin_1b2800d36:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e2e4db_Trait> &_24116_t = *it;
			{
				if (((static_cast<jule::Uintptr>(_24116_t) != _21232_itself) && (_24116_t.get()._field_Ident == _21249_ident))) {
					return true;
				};
			}
			_iter_next_1b2800d36:;
			++it;
			goto _iter_begin_1b2800d36;
		}
		_iter_end_1b2800d36:;
	};
	{
		auto &expr = (*_self_)._field_Enums;
		auto it = expr.begin();
		_iter_begin_1b28019c4:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e31631_Enum> &_24716_e = *it;
			{
				if (((static_cast<jule::Uintptr>(_24716_e) != _21232_itself) && (_24716_e.get()._field_Ident == _21249_ident))) {
					return true;
				};
			}
			_iter_next_1b28019c4:;
			++it;
			goto _iter_begin_1b28019c4;
		}
		_iter_end_1b28019c4:;
	};
	{
		auto &expr = (*_self_)._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_1b28029a3:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e32c2b_TypeEnum> &_25316_te = *it;
			{
				if (((static_cast<jule::Uintptr>(_25316_te) != _21232_itself) && (_25316_te.get()._field_Ident == _21249_ident))) {
					return true;
				};
			}
			_iter_next_1b28029a3:;
			++it;
			goto _iter_begin_1b28029a3;
		}
		_iter_end_1b28029a3:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a86010_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e6a8b158_IsNil(_1e6a8ac6d_Data* _self_) {
	return _1e6ab79ae_IsNil((*_self_)._field_Kind.ptr());
}



inline jule::Bool _1e6a8b3bc_IsVoid(_1e6a8ac6d_Data* _self_) {
	return _1e6ab7c23_Void((*_self_)._field_Kind.ptr());
}



inline jule::Bool _1e6a8b631_IsConst(_1e6a8ac6d_Data* _self_) {
	return ((*_self_)._field_Constant != nullptr);
}



inline jule::Bool _1e6a8b93e_GoodOperand(_1e6a8ac6d_Data* _self_, jule::Ptr<_1e6a8ac6d_Data>& _9631_other) {
	if ((_1e6ab964d_TypeEnum(_9631_other.get()._field_Kind.ptr()) != nullptr)) {
		return false;
	};
	return ((((_1e6ab8b9c_Prim(_9631_other.get()._field_Kind.ptr()) == nullptr) || (!(_1e6abea0a_IsAny(_1e6ab8b9c_Prim(_9631_other.get()._field_Kind.ptr()).ptr())))) && (_1e6aba363_Trait(_9631_other.get()._field_Kind.ptr()) == nullptr)) && (!(_1e6ab79ae_IsNil((*_self_)._field_Kind.ptr()))));
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a8ac6d_Data _Src) {
	_Stream << "Data{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a8bce6_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _1e6a8cce7_pushErr(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e47137a5_Token> _12726_token, jule::Str _12741_fmt, jule::Slice<jule::Any> _12754_args) {
	_1e6a25103_pushErr((*_self_)._field_s.ptr(), _12726_token,_12741_fmt,jule::Any(_12754_args));
}



inline void _1e6a8d116_pushSugggestion(_1e6a8c7db_Eval* _self_, jule::Str _13234_fmt, jule::Slice<jule::Any> _13247_args) {
	_1e6a25422_pushSugggestion((*_self_)._field_s.ptr(), _13234_fmt,jule::Any(_13247_args));
}



inline void _1e6a8d2e2_allowBuiltin(_1e6a8c7db_Eval* _self_) {
	(*_self_)._field_disBuiltin=false;
}



inline void _1e6a8d4bd_disallowBuiltin(_1e6a8c7db_Eval* _self_) {
	(*_self_)._field_disBuiltin=true;
}



inline jule::Bool _1e6a8d732_isUnsafe(_1e6a8c7db_Eval* _self_) {
	return (*_self_)._field_unsafety;
}



inline jule::Bool _1e6a8d996_isGlobal(_1e6a8c7db_Eval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1e6a22441_Sema>>()) {
			_case_begin_1b28325c6:;
			{
				return true;
			}
		}
		else {
			_case_begin_1b28324b6:;
			{
				return false;
			}
		}
		_match_end_1b28320cb:;
	};
}



inline jule::Bool _1e6a8dc71_applyNumericPrefix(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e6a8ac6d_Data>& _15942_d) {
	if (((((_15942_d == nullptr) || (!(_1e6a8b631_IsConst(_15942_d.ptr())))) || (_1e6ab8b9c_Prim(_15942_d.get()._field_Kind.ptr()) == nullptr)) || ((*_self_)._field_prefix == nullptr))) {
		return false;
	};
	jule::Ptr<_1e6abb562_Prim> _16613_prim = _1e6ab8b9c_Prim((*_self_)._field_prefix.ptr());;
	if ((_16613_prim == nullptr)) {
		return false;
	};
	{
		
		if (_1e6a0617d_IsFloat(_1e6abb8c5_Str(_16613_prim.ptr()))) {
			_case_begin_1b2834dd1:;
			{
				_15942_d.get()._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>((*((*_self_)._field_prefix)));
				_1e5e0ec80_SetF64(_15942_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1e5e0e015_AsF64(_15942_d.get()._field_Constant.ptr())));
			}
		}
		else if (_1e6a05cd7_IsSigInt(_1e6abb8c5_Str(_16613_prim.ptr()))) {
			_case_begin_1b2834e47:;
			{
				if ((!(_1e6a5c27d_sigAssignable(_1e6abb8c5_Str(_16613_prim.ptr()),_15942_d)))) {
					return false;
				};
				_15942_d.get()._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>((*((*_self_)._field_prefix)));
				_1e5e0e28a_SetI64(_15942_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1e5e0da3c_AsI64(_15942_d.get()._field_Constant.ptr())));
			}
		}
		else if (_1e6a05e19_IsUnsigInt(_1e6abb8c5_Str(_16613_prim.ptr()))) {
			_case_begin_1b2834ead:;
			{
				if ((!(_1e6a7386b_unsigAssignable(_1e6abb8c5_Str(_16613_prim.ptr()),_15942_d)))) {
					return false;
				};
				_15942_d.get()._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>((*((*_self_)._field_prefix)));
				_1e5e0e510_SetU64(_15942_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1e5e0dca1_AsU64(_15942_d.get()._field_Constant.ptr())));
			}
		}
		_match_end_1b2834b8e:;
	};
	return true;
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6a8ded5_litNil(_1e6a8c7db_Eval* _self_) {
	jule::Ptr<_1e5da6ba0_Const> _19517_constant = static__1e5e0c72d_NewNil();;
	return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=nullptr}), ._field_Model=static_cast<jule::Any>(_19517_constant), ._field_Constant=_19517_constant});
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6a8e2e3_litStr(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e5d59eb6_LitExpr>& _20322_l) {
	jule::Str _20417_s = _20322_l.get()._field_Value.slice(1LL,(_20322_l.get()._field_Value.len() - 1LL));;
	if (_1e4714b08_IsRawStr(_20322_l.get()._field_Value)) {
		_20417_s=_1e6a73b79_ToRawStr(static_cast<jule::Slice<jule::U8>>(_20417_s));
	} else {
		_20417_s=_1e6a73e32_ToStr(static_cast<jule::Slice<jule::U8>>(_20417_s));
	};
	jule::Ptr<_1e5da6ba0_Const> _21017_constant = static__1e5e0c288_NewStr(_20417_s);;
	return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("str", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_21017_constant), ._field_Constant=_21017_constant});
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6a8e601_litBool(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e5d59eb6_LitExpr>& _22123_l) {
	jule::Ptr<_1e5da6ba0_Const> _22217_constant = static__1e5e0bee1_NewBool((_22123_l.get()._field_Value == jule::Str("true", 4)));;
	return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_Model=static_cast<jule::Any>(_22217_constant), ._field_Constant=_22217_constant});
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6a8e90e_litRune(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e5d59eb6_LitExpr>& _23223_l) {
	;
	;
	jule::Str _23713_lt = _23223_l.get()._field_Value.slice(1LL,(_23223_l.get()._field_Value.len() - 1LL));;
	jule::I32 _23813_r = _1e6a5bd60_ToRune(static_cast<jule::Slice<jule::U8>>(_23713_lt));;
	jule::Ptr<_1e6a8ac6d_Data> _23917_data = jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Constant=static__1e5e0bc27_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_23813_r)))});;
	jule::Bool _24313_isAscii = _1e6a5bc2d_IsAscii(_23813_r);;
	if (_24313_isAscii) {
		_23917_data.get()._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("u8", 2)), 6)});
	} else {
		_23917_data.get()._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("i32", 3)), 6)});
	};
	_23917_data.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e5e199d2_RuneExprModel>(_1e5e199d2_RuneExprModel{._field_Code=_23813_r}));
	_23917_data.get()._field_IsRune=true;
	return _23917_data;
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6a8ec1c_litFloat(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e5d59eb6_LitExpr>& _25924_l) {
	;
	jule::F64 _26213_f = ({
		auto except = _1e679c221_ParseFloat(_25924_l.get()._field_Value,64LL);
		(except.ok()) ? (except.result) : ({
			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1e5da6ba0_Const> _26317_constant = static__1e5e0c530_NewF64(_26213_f);;
	return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_26317_constant), ._field_Constant=_26317_constant});
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6a9002a_litInt(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e5d59eb6_LitExpr>& _27426_l) {
	;
	jule::Str _27717_lit = _27426_l.get()._field_Value;;
	jule::I64 _27817_base = 0LL;;
	{
		
		if (_1e350be95_HasPrefix(_27717_lit,jule::Str("0x", 2))) {
			_case_begin_1b2846079:;
			{
				(_27717_lit).mut_slice(2LL);;
				_27817_base=16LL;
			}
		}
		else if (_1e350be95_HasPrefix(_27717_lit,jule::Str("0b", 2))) {
			_case_begin_1b2845c5a:;
			{
				(_27717_lit).mut_slice(2LL);;
				_27817_base=2LL;
			}
		}
		else if (_1e350be95_HasPrefix(_27717_lit,jule::Str("0o", 2))) {
			_case_begin_1b2845cc1:;
			{
				(_27717_lit).mut_slice(2LL);;
				_27817_base=8LL;
			}
		}
		else if (((_27717_lit[0LL] == '0') && (_27717_lit.len() > 1LL))) {
			_case_begin_1b284594c:;
			{
				(_27717_lit).mut_slice(1LL);;
				_27817_base=8LL;
			}
		}
		else {
			_case_begin_1b28458d6:;
			{
				_27817_base=10LL;
			}
		}
		_match_end_1b2845881:;
	};
	jule::Ptr<_1e6a8ac6d_Data> _29817_d = jule::new_ptr<_1e6a8ac6d_Data>();;
	jule::Bool _30017_ok = true;;
	jule::I64 _30113_sig = ({
		auto except = _1e670d605_ParseInt(_27717_lit,_27817_base,64LL);
		(except.ok()) ? (except.result) : ({
			_30017_ok=false;
			0LL;
		});
	});;
	if (_30017_ok) {
		_29817_d.get()._field_Constant=static__1e5e0bc27_NewI64(_30113_sig);
		_29817_d.get()._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("int", 3)), 6)});
	} else {
		jule::U64 _31117_unsig = ({
			auto except = _1e6681974_ParseUint(_27717_lit,_27817_base,64LL);
			(except.ok()) ? (except.result) : ({
				_1e6a8cce7_pushErr(&(*_self_), _27426_l.get()._field_Token,jule::Str("arithmetic value overflow: this value too big", 45),jule::Slice<jule::Any>());
				_1e6a8d116_pushSugggestion(&(*_self_), jule::Str("floating-point literals may solve your problem", 46),jule::Slice<jule::Any>());
				jule::MAX_U64;
			});
		});;
		_29817_d.get()._field_Constant=static__1e5e0bd59_NewU64(_31117_unsig);
		_29817_d.get()._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("uint", 4)), 6)});
	};
	_29817_d.get()._field_Model=static_cast<jule::Any>(_29817_d.get()._field_Constant);
	if ((!(_1e6a8dc71_applyNumericPrefix(&(*_self_), _29817_d)))) {
		_1e6ab1876_fitBitsize(_29817_d);
	};
	return _29817_d;
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6a90338_litNum(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e5d59eb6_LitExpr>& _33226_l) {
	{
		
		if (_1e4715763_IsFloat(_33226_l.get()._field_Value)) {
			_case_begin_1b284db20:;
			{
				return _1e6a8ec1c_litFloat(&(*_self_), _33226_l);
			}
		}
		else {
			_case_begin_1b284d3a0:;
			{
				return _1e6a9002a_litInt(&(*_self_), _33226_l);
			}
		}
		_match_end_1b284d2e5:;
	};
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6a90646_evalLit(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e5d59eb6_LitExpr> _34126_lit) {
	{
		
		if (_1e5d5a318_IsNil(_34126_lit.ptr())) {
			_case_begin_1b284ecec:;
			{
				return _1e6a8ded5_litNil(&(*_self_));
			}
		}
		else if (_1e4714861_IsStr(_34126_lit.get()._field_Value)) {
			_case_begin_1b284e6d1:;
			{
				return _1e6a8e2e3_litStr(&(*_self_), _34126_lit);
			}
		}
		else if (_1e47154bb_IsBool(_34126_lit.get()._field_Value)) {
			_case_begin_1b284e758:;
			{
				return _1e6a8e601_litBool(&(*_self_), _34126_lit);
			}
		}
		else if (_1e4714da0_IsRune(_34126_lit.get()._field_Value)) {
			_case_begin_1b284e7d0:;
			{
				return _1e6a8e90e_litRune(&(*_self_), _34126_lit);
			}
		}
		else if (_1e4715a0a_IsNum(_34126_lit.get()._field_Value)) {
			_case_begin_1b284ea00:;
			{
				return _1e6a90338_litNum(&(*_self_), _34126_lit);
			}
		}
		else {
			_case_begin_1b284e181:;
			{
				return nullptr;
			}
		}
		_match_end_1b284e0c6:;
	};
}



inline jule::Any _1e6a90954_findBuiltins(_1e6a8c7db_Eval* _self_, jule::Str _35831_ident) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1e6a192e5_ImportInfo>>()) {
			_case_begin_1b28500d8:;
			{
				jule::Any _36121_def = _1e6ab1667_findBuiltinsImport(_35831_ident,(*_self_)._field_lookup.operator jule::Ptr<_1e6a192e5_ImportInfo>());;
				if ((_36121_def != nullptr)) {
					return jule::Any(_36121_def);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a22441_Sema>>()) {
			_case_begin_1b285014e:;
			{
				jule::Any _36621_def = _1e6ab2305_findBuiltinsSema(_35831_ident,(*_self_)._field_lookup.operator jule::Ptr<_1e6a22441_Sema>());;
				if ((_36621_def != nullptr)) {
					return jule::Any(_36621_def);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a09505_scopeChecker>>()) {
			_case_begin_1b28523a4:;
			{
				jule::Any _37121_def = _1e6ab2305_findBuiltinsSema(_35831_ident,(*_self_)._field_lookup.operator jule::Ptr<_1e6a09505_scopeChecker>().get()._field_s);;
				if ((_37121_def != nullptr)) {
					return jule::Any(_37121_def);
				};
			}
		}
		_match_end_1b284ee51:;
	};
	if ((*_self_)._field_disBuiltin) {
		return nullptr;
	};
	return jule::Any(_1e6ae0278_findBuiltinDef(_35831_ident));
}



inline jule::Any _1e6a90d0b_getDef(_1e6a8c7db_Eval* _self_, jule::Str _38225_ident, jule::Bool _38237_cppLinked) {
	if ((!(_38237_cppLinked))) {
		jule::Ptr<_1e5e31631_Enum> _38421_enm = _1e6ad2600_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1e6ad219e_FindEnum((*_self_)._field_lookup, _38225_ident);;
		if ((_38421_enm != nullptr)) {
			return jule::Any(_38421_enm);
		};
		jule::Ptr<_1e5e32c2b_TypeEnum> _38921_tenm = _1e6ad2600_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1e6ad24ac_FindTypeEnum((*_self_)._field_lookup, _38225_ident);;
		if ((_38921_tenm != nullptr)) {
			return jule::Any(_38921_tenm);
		};
	};
	jule::Ptr<_1e6a3dd20_Var> _39517_v = _1e6ad2600_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1e6ad0e6c_FindVar((*_self_)._field_lookup, _38225_ident,_38237_cppLinked);;
	if ((_39517_v != nullptr)) {
		return jule::Any(_39517_v);
	};
	jule::Ptr<_1e5e1c62d_Fn> _40017_f = _1e6ad2600_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1e6ad1a83_FindFn((*_self_)._field_lookup, _38225_ident,_38237_cppLinked);;
	if ((_40017_f != nullptr)) {
		return jule::Any(_40017_f);
	};
	jule::Ptr<_1e5d4518d_Struct> _40517_s = _1e6ad2600_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1e6ad16cb_FindStruct((*_self_)._field_lookup, _38225_ident,_38237_cppLinked);;
	if ((_40517_s != nullptr)) {
		return jule::Any(_40517_s);
	};
	jule::Ptr<_1e6ab5d97_TypeAlias> _41017_ta = _1e6ad2600_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1e6ad1324_FindTypeAlias((*_self_)._field_lookup, _38225_ident,_38237_cppLinked);;
	if ((_41017_ta != nullptr)) {
		return jule::Any(_41017_ta);
	};
	return jule::Any(_1e6a90954_findBuiltins(&(*_self_), _38225_ident));
}



inline void _1b2868343_pushReference(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e5e202ce_FnIns>& _41840_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1e6a09505_scopeChecker>>()) {
			_case_begin_1b286a004:;
			{
				jule::Ptr<_1e6a09505_scopeChecker> _42121_sc = _1e6a0aa12_getHardRoot((*_self_)._field_lookup.operator jule::Ptr<_1e6a09505_scopeChecker>());;
				if ((!(_1b286ab70_Exist(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), _41840_ref)))) {
					_1e5e23da4_Push(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any(_41840_ref));
				};
			}
		}
		else {
			_case_begin_1b286982d:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1b286ab70_Exist((*_self_)._field_owner.get()._field_Refers.ptr(), _41840_ref))))) {
					_1e5e23da4_Push((*_self_)._field_owner.get()._field_Refers.ptr(), jule::Any(_41840_ref));
				};
			}
		}
		_match_end_1b28697c8:;
	};
}

inline void _1b287cdb3_pushReference(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e6a3dd20_Var>& _41840_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1e6a09505_scopeChecker>>()) {
			_case_begin_1b287e7ee:;
			{
				jule::Ptr<_1e6a09505_scopeChecker> _42121_sc = _1e6a0aa12_getHardRoot((*_self_)._field_lookup.operator jule::Ptr<_1e6a09505_scopeChecker>());;
				if ((!(_1b288046a_Exist(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), _41840_ref)))) {
					_1e5e23da4_Push(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any(_41840_ref));
				};
			}
		}
		else {
			_case_begin_1b287e128:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1b288046a_Exist((*_self_)._field_owner.get()._field_Refers.ptr(), _41840_ref))))) {
					_1e5e23da4_Push((*_self_)._field_owner.get()._field_Refers.ptr(), jule::Any(_41840_ref));
				};
			}
		}
		_match_end_1b287e0c3:;
	};
}

inline void _1b291c7c1_pushReference(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e5d714d8_StructIns>& _41840_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1e6a09505_scopeChecker>>()) {
			_case_begin_1b291e44e:;
			{
				jule::Ptr<_1e6a09505_scopeChecker> _42121_sc = _1e6a0aa12_getHardRoot((*_self_)._field_lookup.operator jule::Ptr<_1e6a09505_scopeChecker>());;
				if ((!(_1b29200ba_Exist(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), _41840_ref)))) {
					_1e5e23da4_Push(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any(_41840_ref));
				};
			}
		}
		else {
			_case_begin_1b291dc78:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1b29200ba_Exist((*_self_)._field_owner.get()._field_Refers.ptr(), _41840_ref))))) {
					_1e5e23da4_Push((*_self_)._field_owner.get()._field_Refers.ptr(), jule::Any(_41840_ref));
				};
			}
		}
		_match_end_1b291dc23:;
	};
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6a9138e__evalEnum(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e5e31631_Enum> _43228_enm) {
	return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_43228_enm, 3)}), ._field_Decl=true, });
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6a91746_evalEnum(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e5e31631_Enum> _44131_enm, jule::Ptr<_1e47137a5_Token> _44143_errorToken) {
	if ((!(_1e6a257c9_isAccessibleDefine((*_self_)._field_s.ptr(), _44131_enm.get()._field_Public,_44131_enm.get()._field_Token)))) {
		_1e6a8cce7_pushErr(&(*_self_), _44143_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_44131_enm.get()._field_Ident)}));
		_1e6a8d116_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _1e6a9138e__evalEnum(&(*_self_), _44131_enm);
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6a91a54__evalTypeEnum(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e5e32c2b_TypeEnum> _45032_enm) {
	return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_45032_enm, 4)}), ._field_Decl=true, });
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6a91e0b_evalTypeEnum(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e5e32c2b_TypeEnum> _45935_enm, jule::Ptr<_1e47137a5_Token> _45951_errorToken) {
	if ((!(_1e6a257c9_isAccessibleDefine((*_self_)._field_s.ptr(), _45935_enm.get()._field_Public,_45935_enm.get()._field_Token)))) {
		_1e6a8cce7_pushErr(&(*_self_), _45951_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_45935_enm.get()._field_Ident)}));
		_1e6a8d116_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _1e6a91a54__evalTypeEnum(&(*_self_), _45935_enm);
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6a92219__evalStruct(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e5d714d8_StructIns> _46830_s) {
	return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_46830_s, 0)}), ._field_Model=static_cast<jule::Any>(_46830_s), ._field_Decl=true, });
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6a925c1_evalStruct(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e5d714d8_StructIns> _47833_s, jule::Ptr<_1e47137a5_Token> _47848_errorToken) {
	if ((!(_1e6a257c9_isAccessibleDefine((*_self_)._field_s.ptr(), _47833_s.get()._field_Decl.get()._field_Public,_47833_s.get()._field_Decl.get()._field_Token)))) {
		_1e6a8cce7_pushErr(&(*_self_), _47848_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_47833_s.get()._field_Decl.get()._field_Ident)}));
		_1e6a8d116_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1e6a92bed_checkDeprecated(&(*_self_), _47833_s.get()._field_Decl.get()._field_Directives,_47848_errorToken);
	return _1e6a92219__evalStruct(&(*_self_), _47833_s);
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6a928ce_evalFnIns(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e5e202ce_FnIns> _48828_f) {
	return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_48828_f, 1)}), ._field_Model=static_cast<jule::Any>(_48828_f), });
}



inline void _1e6a92bed_checkDeprecated(_1e6a8c7db_Eval* _self_, jule::Slice<jule::Ptr<_1e5d21268_Directive>>& _49739_directives, jule::Ptr<_1e47137a5_Token> _49770_tok) {
	if (_1e6a8d732_isUnsafe(&(*_self_))) {
		return;;
	};
	jule::Ptr<_1e5d21268_Directive> _50213_d = _1e6ab12d2_findDirective(_49739_directives,jule::Str("deprecated", 10));;
	if ((_50213_d != nullptr)) {
		if ((_50213_d.get()._field_Args.len() == 0LL)) {
			_1e6a8cce7_pushErr(&(*_self_), _49770_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(jule::Str("this code is deprecated", 23))}));
		} else {
			_1e6a8cce7_pushErr(&(*_self_), _49770_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(_50213_d.get()._field_Args[0LL].get()._field_Kind)}));
		};
		_1e6a8d116_pushSugggestion(&(*_self_), jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6a930a5_evalFn(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e5e1c62d_Fn> _51329_f, jule::Ptr<_1e47137a5_Token> _51337_errorToken) {
	if ((!(_1e6a257c9_isAccessibleDefine((*_self_)._field_s.ptr(), _51329_f.get()._field_Public,_51329_f.get()._field_Token)))) {
		_1e6a8cce7_pushErr(&(*_self_), _51337_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51329_f.get()._field_Ident)}));
		_1e6a8d116_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1e6a92bed_checkDeprecated(&(*_self_), _51329_f.get()._field_Directives,_51337_errorToken);
	jule::Ptr<_1e5e202ce_FnIns> _52217_ins = _1e5e1dc7d_instance(_51329_f);;
	_1b2868343_pushReference(&(*_self_), _52217_ins);
	return _1e6a928ce_evalFnIns(&(*_self_), _52217_ins);
}



inline void _1e6a9346d_pushIllegalCycleError(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e6a3dd20_Var>& _52741_v1, jule::Ptr<_1e6a3dd20_Var>& _52752_v2, jule::Str& _52767_message) {
	;
	jule::Str _52913_refers_to = _1e43e3e58_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_52741_v1.get()._field_Ident),jule::Any(_52752_v2.get()._field_Ident)}));;
	(_52767_message).buffer.insert(0, (((_1e350c9ac_Repeat(jule::Str(" ", 1),4LL) + _52913_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1e6a93825_checkCrossCycle(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e6a3dd20_Var>& _53335_v, jule::Str& _53349_message) {
	{
		auto &expr = _53335_v.get()._field_Depends;
		auto it = expr.begin();
		_iter_begin_1b2870dd9:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a3dd20_Var> &_53416_d = *it;
			{
				if ((_53416_d == (*_self_)._field_owner)) {
					_1e6a9346d_pushIllegalCycleError(&(*_self_), _53335_v,_53416_d,_53349_message);
					return false;
				};
				if ((!(_1e6a93825_checkCrossCycle(&(*_self_), _53416_d,_53349_message)))) {
					_1e6a9346d_pushIllegalCycleError(&(*_self_), _53335_v,_53416_d,_53349_message);
					return false;
				};
			}
			_iter_next_1b2870dd9:;
			++it;
			goto _iter_begin_1b2870dd9;
		}
		_iter_end_1b2870dd9:;
	};
	return true;
}



inline jule::Bool _1e6a93bcc_checkIllegalCycles(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e6a3dd20_Var>& _55242_v, jule::Ptr<_1e47137a5_Token> _55251_decl_token) {
	jule::Bool _55273_ok = jule::Bool();
	if (((*_self_)._field_owner == nullptr)) {
		_55273_ok = true;
		return _55273_ok;
	};
	if (((*_self_)._field_owner == _55242_v)) {
		_1e6a8cce7_pushErr(&(*_self_), (*_self_)._field_owner.get()._field_Token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_owner.get()._field_Ident)}));
		_55273_ok = false;
		return _55273_ok;
	};
	jule::Str _56417_message = jule::Str();;
	if ((!(_1e6a93825_checkCrossCycle(&(*_self_), _55242_v,_56417_message)))) {
		jule::Str _56721_errMsg = _56417_message;;
		_56417_message=jule::Str();
		_1e6a9346d_pushIllegalCycleError(&(*_self_), (*_self_)._field_owner,_55242_v,_56417_message);
		_56721_errMsg=(_56721_errMsg + _56417_message);
		_1e6a8cce7_pushErr(&(*_self_), _55251_decl_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_56721_errMsg)}));
		_55273_ok = false;
		return _55273_ok;
	};
	(*_self_)._field_owner.get()._field_Depends = jule::alloc_for_append((*_self_)._field_owner.get()._field_Depends,1);(*_self_)._field_owner.get()._field_Depends.__push(_55242_v);;
	_55273_ok = true;
	return _55273_ok;
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6a94084_evalVar(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e6a3dd20_Var> _57930_v, jule::Ptr<_1e47137a5_Token> _57939_errorToken) {
	if ((!(_1e6a257c9_isAccessibleDefine((*_self_)._field_s.ptr(), _57930_v.get()._field_Public,_57930_v.get()._field_Token)))) {
		_1e6a8cce7_pushErr(&(*_self_), _57939_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_57930_v.get()._field_Ident)}));
		_1e6a8d116_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1e6a92bed_checkDeprecated(&(*_self_), _57930_v.get()._field_Directives,_57939_errorToken);
	_57930_v.get()._field_Used=true;
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1e6a22441_Sema>>()) {
			_case_begin_1b2878aa1:;
			{
				jule::Bool _59317_ok = _1e6a93bcc_checkIllegalCycles(&(*_self_), _57930_v,_57939_errorToken);;
				if ((!(_59317_ok))) {
					return nullptr;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a09505_scopeChecker>>()) {
			_case_begin_1b2878b5b:;
			{
				if (((!(_57930_v.get()._field_Reference)) || _1e6a8d732_isUnsafe(&(*_self_)))) {
					goto _match_end_1b2878a4b;
				};
				jule::Ptr<_1e6a09505_scopeChecker> _60121_s = (*_self_)._field_lookup.operator jule::Ptr<_1e6a09505_scopeChecker>();;
				while (((_60121_s.get()._field_owner == nullptr) && (_60121_s.get()._field_parent != nullptr))) {
					{
						_60121_s=_60121_s.get()._field_parent;
					}
				_iter_next_1b287abc4:;
				}
				_iter_end_1b287abc4:;;
				if ((((_60121_s.get()._field_owner != nullptr) && _60121_s.get()._field_owner.get()._field_Anon) && (_57930_v.get()._field_Scope != _60121_s.get()._field_owner.get()._field_Scope))) {
					_1e6a8cce7_pushErr(&(*_self_), _57939_errorToken,jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75),jule::Slice<jule::Any>::make({jule::Any(_57930_v.get()._field_Ident)}));
				};
			}
		}
		_match_end_1b2878a4b:;
	};
	if ((_57930_v.get()._field_Scope == nullptr)) {
		_1b287cdb3_pushReference(&(*_self_), _57930_v);
	};
	if (((!(_57930_v.get()._field_CppLinked)) && ((_57930_v.get()._field_Value == nullptr) || (_57930_v.get()._field_Value.get()._field_Data == nullptr)))) {
		if (_57930_v.get()._field_Constant) {
			_1e6a36884_checkTypeVar((*_self_)._field_s, _57930_v,jule::Trait<_1e6ad2600_Lookup>((*_self_)._field_s, 3));
			if ((_57930_v.get()._field_Value.get()._field_Data == nullptr)) {
				return nullptr;
			};
		};
	};
	if (((_57930_v.get()._field_Kind == nullptr) || (_57930_v.get()._field_Kind.get()._field_Kind == nullptr))) {
		if ((_57930_v.get()._field_Scope != nullptr)) {
			return nullptr;
		};
		_1e6a36884_checkTypeVar((*_self_)._field_s, _57930_v,(*_self_)._field_lookup);
		if (((_57930_v.get()._field_Kind == nullptr) || (_57930_v.get()._field_Kind.get()._field_Kind == nullptr))) {
			return nullptr;
		};
	};
	jule::Ptr<_1e6a8ac6d_Data> _64417_d = jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=_57930_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_57930_v.get()._field_Mutable, ._field_Reference=_57930_v.get()._field_Reference, ._field_Lvalue=(!(_57930_v.get()._field_Constant)), ._field_Model=static_cast<jule::Any>(_57930_v), });;
	if ((((!(_57930_v.get()._field_CppLinked)) && _1e6a3e1c7_IsInitialized(_57930_v.ptr())) && (_57930_v.get()._field_Value.get()._field_Data != nullptr))) {
		_64417_d.get()._field_IsRune=_57930_v.get()._field_Value.get()._field_Data.get()._field_IsRune;
	};
	if ((_57930_v.get()._field_Constant && (_57930_v.get()._field_Value.get()._field_Data.get()._field_Constant != nullptr))) {
		_64417_d.get()._field_Constant=jule::new_ptr<_1e5da6ba0_Const>((*(_57930_v.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_64417_d.get()._field_Model=static_cast<jule::Any>(_64417_d.get()._field_Constant);
	};
	if (_1e6a8b631_IsConst(_64417_d.ptr())) {
		_1e6a8dc71_applyNumericPrefix(&(*_self_), _64417_d);
	};
	return _64417_d;
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6a9443b_evalTypeAlias(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e6ab5d97_TypeAlias> _66836_ta, jule::Ptr<_1e47137a5_Token> _66852_errorToken) {
	if ((!(_1e6a257c9_isAccessibleDefine((*_self_)._field_s.ptr(), _66836_ta.get()._field_Public,_66836_ta.get()._field_Token)))) {
		_1e6a8cce7_pushErr(&(*_self_), _66852_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_66836_ta.get()._field_Ident)}));
		_1e6a8d116_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_66836_ta.get()._field_Used=true;
	jule::Trait<_1e6ab665b_Kind> _67717_kind = _66836_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
	jule::Ptr<_1e6a8ac6d_Data> _67817_d = nullptr;;
	{
		auto &_match_expr{ _67717_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e5d714d8_StructIns>>()) {
			_case_begin_1b288dc1a:;
			{
				_67817_d=_1e6a92219__evalStruct(&(*_self_), _67717_kind.operator jule::Ptr<_1e5d714d8_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e31631_Enum>>()) {
			_case_begin_1b288e26a:;
			{
				_67817_d=_1e6a9138e__evalEnum(&(*_self_), _67717_kind.operator jule::Ptr<_1e5e31631_Enum>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e32c2b_TypeEnum>>()) {
			_case_begin_1b288cd90:;
			{
				_67817_d=_1e6a91a54__evalTypeEnum(&(*_self_), _67717_kind.operator jule::Ptr<_1e5e32c2b_TypeEnum>());
			}
		}
		else {
			_case_begin_1b288cc6e:;
			{
				_67817_d=jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=_66836_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind}), ._field_Decl=true, });
				if (_66836_ta.get()._field_CppLinked) {
					_67817_d.get()._field_Kind.get()._field_CppIdent=_66836_ta.get()._field_Ident;
				} else {
					_67817_d.get()._field_Kind.get()._field_CppIdent=_66836_ta.get()._field_Kind.get()._field_Kind.get()._field_CppIdent;
				};
				_67817_d.get()._field_Model=static_cast<jule::Any>(_67817_d.get()._field_Kind);
			}
		}
		_match_end_1b288cc19:;
	};
	_67817_d.get()._field_Kind.get()._field_Generic=_66836_ta.get()._field_Generic;
	return _67817_d;
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6a947e3_evalDef(_1e6a8c7db_Eval* _self_, jule::Any _70430_def, jule::Ptr<_1e47137a5_Token> _70440_ident) {
	{
		auto &_match_expr{ _70430_def };
		
		if (_match_expr.type_is<jule::Ptr<_1e6a3dd20_Var>>()) {
			_case_begin_1b2891bc9:;
			{
				return _1e6a94084_evalVar(&(*_self_), _70430_def.operator jule::Ptr<_1e6a3dd20_Var>(),_70440_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e31631_Enum>>()) {
			_case_begin_1b2891c40:;
			{
				return _1e6a91746_evalEnum(&(*_self_), _70430_def.operator jule::Ptr<_1e5e31631_Enum>(),_70440_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e32c2b_TypeEnum>>()) {
			_case_begin_1b2891ca6:;
			{
				return _1e6a91e0b_evalTypeEnum(&(*_self_), _70430_def.operator jule::Ptr<_1e5e32c2b_TypeEnum>(),_70440_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d4518d_Struct>>()) {
			_case_begin_1b2891d2d:;
			{
				return _1e6a925c1_evalStruct(&(*_self_), _1e5d2649e_instance(_70430_def.operator jule::Ptr<_1e5d4518d_Struct>()),_70440_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e1c62d_Fn>>()) {
			_case_begin_1b2891d94:;
			{
				jule::Ptr<_1e5e1c62d_Fn> _71521_f = _70430_def.operator jule::Ptr<_1e5e1c62d_Fn>();;
				if ((_71521_f.get()._field_Ident != jule::Str("init", 4))) {
					return _1e6a930a5_evalFn(&(*_self_), _71521_f,_70440_ident);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e202ce_FnIns>>()) {
			_case_begin_1b2891e1b:;
			{
				return _1e6a928ce_evalFnIns(&(*_self_), _70430_def.operator jule::Ptr<_1e5e202ce_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6ab5d97_TypeAlias>>()) {
			_case_begin_1b2891e93:;
			{
				return _1e6a9443b_evalTypeAlias(&(*_self_), _70430_def.operator jule::Ptr<_1e6ab5d97_TypeAlias>(),_70440_ident);
			}
		}
		_match_end_1b2891adb:;
	};
	_1e6a8cce7_pushErr(&(*_self_), _70440_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_70440_ident.get()._field_Kind)}));
	return nullptr;
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6a94b01_evalIdent(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e5d5aeea_IdentExpr> _72828_ident) {
	jule::Any _72917_def = _1e6a90d0b_getDef(&(*_self_), _72828_ident.get()._field_Ident,_72828_ident.get()._field_CppLinked);;
	return _1e6a947e3_evalDef(&(*_self_), jule::Any(_72917_def),_72828_ident.get()._field_Token);
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6a94e0e_evalUnary(jule::Ptr<_1e6a8c7db_Eval> _self_, jule::Ptr<_1e5d5b704_UnaryExpr> _73333_u) {
	_1e6aa87a2_unaryEval _73417_unary = static__1e6aa8c58_new(_self_);;
	return _1e6aaa001_eval(&_73417_unary, _73333_u);
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6a9521c_evalVariadic(jule::Ptr<_1e6a8c7db_Eval> _self_, jule::Ptr<_1e5d5baab_VariadicExpr> _73836_v) {
	if ((_73836_v.get()._field_Expr == nullptr)) {
		_1e6a8cce7_pushErr(_self_.ptr(), _73836_v.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e6ab6a8a_TypeKind> _74417_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_74417_prefix;
	});;
	jule::Ptr<_1e6a8ac6d_Data> _74817_d = _1e6aa7c13_evalExprKind(_self_, _73836_v.get()._field_Expr.get()._field_Kind);;
	if ((_74817_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1e6ab8938_Variadicable(_74817_d.get()._field_Kind.ptr())))) {
		_1e6a8cce7_pushErr(_self_.ptr(), _73836_v.get()._field_Token,jule::Str("type @ is not variadicable", 26),jule::Slice<jule::Any>::make({jule::Any(_1e6ab6e86_Str(_74817_d.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	jule::Ptr<_1e6ac0753_Slc> _75813_slc = _1e6ab9b26_Slc(_74817_d.get()._field_Kind.ptr());;
	_74817_d.get()._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_CppIdent=_75813_slc.get()._field_Elem.get()._field_CppIdent, ._field_Generic=_75813_slc.get()._field_Elem.get()._field_Generic, ._field_Variadic=true, ._field_Kind=_75813_slc.get()._field_Elem.get()._field_Kind});
	return _74817_d;
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6a9552a_evalUnsafe(jule::Ptr<_1e6a8c7db_Eval> _self_, jule::Ptr<_1e5d5a6c0_UnsafeExpr> _76834_u) {
	jule::Bool _76913_unsafety = _self_.get()._field_unsafety;;
	_self_.get()._field_unsafety=true;
	jule::Ptr<_1e6a8ac6d_Data> _77117_d = _1e6aa7c13_evalExprKind(_self_, _76834_u.get()._field_Expr.get()._field_Kind);;
	_self_.get()._field_unsafety=_76913_unsafety;
	return _77117_d;
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6a95838_evalArr(jule::Ptr<_1e6a8c7db_Eval> _self_, jule::Ptr<_1e5d6083a_SliceExpr> _77631_s) {
	jule::Ptr<_1e6ac28ed_Arr> _77817_pt = _1e6ab98b2_Arr(_self_.get()._field_prefix.ptr());;
	jule::Ptr<_1e6ac28ed_Arr> _78017_arr = jule::new_ptr<_1e6ac28ed_Arr>(_1e6ac28ed_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=_77817_pt.get()._field_Elem});;
	jule::Bool _78617_filled = false;;
	if ((_77631_s.get()._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ _77631_s.get()._field_Exprs[1LL].get()._field_Kind };
			
			if (_match_expr.type_is<jule::Ptr<_1e5d5baab_VariadicExpr>>()) {
				_case_begin_1b28a1568:;
				{
					if ((_77631_s.get()._field_Exprs[1LL].get()._field_Kind.operator jule::Ptr<_1e5d5baab_VariadicExpr>().get()._field_Expr != nullptr)) {
						goto _match_end_1b28a1513;
					};
					if (_77817_pt.get()._field_Auto) {
						_1e6a8cce7_pushErr(_self_.ptr(), _77631_s.get()._field_Token,jule::Str("auto-sized arrays cannot filled", 31),jule::Slice<jule::Any>());
						return nullptr;
					};
					_78617_filled=true;
					_77631_s.get()._field_Exprs=_77631_s.get()._field_Exprs.slice(0LL,1LL);
				}
			}
			_match_end_1b28a1513:;
		};
	};
	_78017_arr.get()._field_N=static_cast<jule::I64>(_77631_s.get()._field_Exprs.len());
	if ((!(_77817_pt.get()._field_Auto))) {
		if ((_78017_arr.get()._field_N > _77817_pt.get()._field_N)) {
			_1e6a8cce7_pushErr(_self_.ptr(), _77631_s.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else if ((_78017_arr.get()._field_N < _77817_pt.get()._field_N)) {
			_78017_arr.get()._field_N=_77817_pt.get()._field_N;
		};
	};
	jule::Ptr<_1e5e1768e_ArrayExprModel> _81517_model = jule::new_ptr<_1e5e1768e_ArrayExprModel>(_1e5e1768e_ArrayExprModel{._field_Kind=_78017_arr, });;
	if (_78617_filled) {
		_81517_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL,2LL);
	} else {
		_81517_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL,_77631_s.get()._field_Exprs.len());
	};
	jule::Ptr<_1e6ab6a8a_TypeKind> _82417_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_78017_arr.get()._field_Elem;
	{
		auto &expr = _77631_s.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1b28a632b:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d58e82_Expr> _82621_elem = *it;
			{
				jule::Ptr<_1e6a8ac6d_Data> _82721_d = _1e6aa7c13_evalExprKind(_self_, _82621_elem.get()._field_Kind);;
				if ((_82721_d == nullptr)) {
					goto _iter_next_1b28a632b;
				};
				_1e6a2ab64_checkAssignType(_self_.get()._field_s, false,_78017_arr.get()._field_Elem,_82721_d,_77631_s.get()._field_Token);
				_81517_model.get()._field_Elems = jule::alloc_for_append(_81517_model.get()._field_Elems,1);_81517_model.get()._field_Elems.__push(_82721_d.get()._field_Model);;
			}
			_iter_next_1b28a632b:;
			++it;
			goto _iter_begin_1b28a632b;
		}
		_iter_end_1b28a632b:;
	};
	_self_.get()._field_prefix=_82417_prefix;
	if (_78617_filled) {
		_81517_model.get()._field_Elems = jule::alloc_for_append(_81517_model.get()._field_Elems,1);_81517_model.get()._field_Elems.__push(nullptr);;
	};
	return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_78017_arr, 11)}), ._field_Mutable=true, ._field_Model=static_cast<jule::Any>(_81517_model), });
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6a95c89_evalExpSlc(jule::Ptr<_1e6a8c7db_Eval> _self_, jule::Ptr<_1e5d6083a_SliceExpr> _85134_s, jule::Ptr<_1e6ab6a8a_TypeKind> _85153_t, jule::Any _85171_first) {
	jule::Ptr<_1e6ac0753_Slc> _85217_slc = jule::new_ptr<_1e6ac0753_Slc>(_1e6ac0753_Slc{._field_Elem=_85153_t});;
	jule::Ptr<_1e5e1621a_SliceExprModel> _85617_model = jule::new_ptr<_1e5e1621a_SliceExprModel>(_1e5e1621a_SliceExprModel{._field_ElemKind=_85153_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL,_85134_s.get()._field_Exprs.len())});;
	if ((_85171_first != nullptr)) {
		_85617_model.get()._field_Elems = jule::alloc_for_append(_85617_model.get()._field_Elems,1);_85617_model.get()._field_Elems.__push(_85171_first);;
		_85134_s.get()._field_Exprs=_85134_s.get()._field_Exprs.slice(1LL);
	};
	jule::Ptr<_1e6ab6a8a_TypeKind> _86517_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_85217_slc.get()._field_Elem;
	{
		auto &expr = _85134_s.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1b28abac3:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d58e82_Expr> _86721_elem = *it;
			{
				jule::Ptr<_1e6a8ac6d_Data> _86821_d = _1e6aa7c13_evalExprKind(_self_, _86721_elem.get()._field_Kind);;
				if ((_86821_d == nullptr)) {
					goto _iter_next_1b28abac3;
				};
				_1e6a2ab64_checkAssignType(_self_.get()._field_s, false,_85217_slc.get()._field_Elem,_86821_d,_85134_s.get()._field_Token);
				_85617_model.get()._field_Elems = jule::alloc_for_append(_85617_model.get()._field_Elems,1);_85617_model.get()._field_Elems.__push(_86821_d.get()._field_Model);;
			}
			_iter_next_1b28abac3:;
			++it;
			goto _iter_begin_1b28abac3;
		}
		_iter_end_1b28abac3:;
	};
	_self_.get()._field_prefix=_86517_prefix;
	return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_85217_slc, 8)}), ._field_Mutable=true, ._field_Model=static_cast<jule::Any>(_85617_model), });
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6a96097_evalSliceExpr(jule::Ptr<_1e6a8c7db_Eval> _self_, jule::Ptr<_1e5d6083a_SliceExpr> _88637_s) {
	if ((_self_.get()._field_prefix != nullptr)) {
		{
			
			if ((_1e6ab98b2_Arr(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1b28aeb2b:;
				{
					return _1e6a95838_evalArr(_self_, _88637_s);
				}
			}
			else if ((_1e6ab9b26_Slc(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1b28aeba3:;
				{
					jule::Ptr<_1e6ac0753_Slc> _89225_pt = _1e6ab9b26_Slc(_self_.get()._field_prefix.ptr());;
					return _1e6a95c89_evalExpSlc(_self_, _88637_s,_89225_pt.get()._field_Elem,nullptr);
				}
			}
			_match_end_1b28aea0a:;
		};
	};
	jule::Ptr<_1e6ab6a8a_TypeKind> _89717_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	if ((_88637_s.get()._field_Exprs.len() == 0LL)) {
		_1e6a8cce7_pushErr(_self_.ptr(), _88637_s.get()._field_Token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e6a8ac6d_Data> _90517_first_elem = _1e6aa7c13_evalExprKind(_self_, _88637_s.get()._field_Exprs[0LL].get()._field_Kind);;
	if ((_90517_first_elem == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1e6a8ac6d_Data> _91017_d = _1e6a95c89_evalExpSlc(_self_, _88637_s,_90517_first_elem.get()._field_Kind,_90517_first_elem.get()._field_Model);;
	_self_.get()._field_prefix=_89717_prefix;
	return _91017_d;
}



inline void _1e6a963d8_checkIntegerIndexingByData(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e6a8ac6d_Data>& _91650_d, jule::Ptr<_1e47137a5_Token> _91660_token) {
	jule::Str _91713_err_key = _1e6ab36d0_checkDataForIntegerIndexing(_91650_d);;
	{
		auto &_match_expr{ _91713_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1b28b4e1c:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_1b28b5abb:;
			{
				_1e6a8cce7_pushErr(&(*_self_), _91660_token,_91713_err_key,jule::Slice<jule::Any>::make({jule::Any(_1e6ab6e86_Str(_91650_d.get()._field_Kind.ptr()))}));
			}
		}
		else {
			_case_begin_1b28b52c4:;
			{
				_1e6a8cce7_pushErr(&(*_self_), _91660_token,_91713_err_key,jule::Slice<jule::Any>());
			}
		}
		_match_end_1b28b51e7:;
	};
}



inline void _1e6a967b2_indexingPtr(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e6a8ac6d_Data>& _92835_d, jule::Ptr<_1e6a8ac6d_Data>& _92850_index, jule::Ptr<_1e5d611cb_IndexingExpr>& _92865_i) {
	_1e6a963d8_checkIntegerIndexingByData(&(*_self_), _92850_index,_92865_i.get()._field_Token);
	jule::Ptr<_1e6ac335a_Ptr> _93117_ptr = _1e6ab9175_Ptr(_92835_d.get()._field_Kind.ptr());;
	{
		
		if (_1e6ac3d2d_IsUnsafe(_93117_ptr.ptr())) {
			_case_begin_1b28b7c33:;
			{
				_1e6a8cce7_pushErr(&(*_self_), _92865_i.get()._field_Token,jule::Str("unsafe pointers are not supports indexing", 41),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1e6a8d732_isUnsafe(&(*_self_))))) {
			_case_begin_1b28b7c99:;
			{
				_1e6a8cce7_pushErr(&(*_self_), _92865_i.get()._field_Token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
			}
		}
		_match_end_1b28b7ace:;
	};
	_92835_d.get()._field_Kind=_93117_ptr.get()._field_Elem;
}



inline void _1e6a96b7a_indexingArr(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e6a8ac6d_Data>& _94335_d, jule::Ptr<_1e6a8ac6d_Data>& _94350_index, jule::Ptr<_1e5d611cb_IndexingExpr>& _94365_i) {
	jule::Ptr<_1e6ac28ed_Arr> _94417_arr = _1e6ab98b2_Arr(_94335_d.get()._field_Kind.ptr());;
	_94335_d.get()._field_Kind=_94417_arr.get()._field_Elem;
	_1e6a963d8_checkIntegerIndexingByData(&(*_self_), _94350_index,_94365_i.get()._field_Token);
	if ((_1e6a8b631_IsConst(_94350_index.ptr()) && (_1e5e0e015_AsF64(_94350_index.get()._field_Constant.ptr()) >= static_cast<jule::F64>(_94417_arr.get()._field_N)))) {
		_1e6a8cce7_pushErr(&(*_self_), _94365_i.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
	};
}



inline void _1e6a97043_indexingSlc(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e6a8ac6d_Data>& _95235_d, jule::Ptr<_1e6a8ac6d_Data>& _95250_index, jule::Ptr<_1e5d611cb_IndexingExpr>& _95265_i) {
	jule::Ptr<_1e6ac0753_Slc> _95317_slc = _1e6ab9b26_Slc(_95235_d.get()._field_Kind.ptr());;
	_95235_d.get()._field_Kind=_95317_slc.get()._field_Elem;
	_1e6a963d8_checkIntegerIndexingByData(&(*_self_), _95250_index,_95265_i.get()._field_Token);
	if ((!(_1e6a8b631_IsConst(_95250_index.ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ _95235_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1e5e1621a_SliceExprModel>>()) {
			_case_begin_1b28bd475:;
			{
				jule::Ptr<_1e5e1621a_SliceExprModel> _96321_m = _95235_d.get()._field_Model.operator jule::Ptr<_1e5e1621a_SliceExprModel>();;
				jule::F64 _96417_indx = _1e5e0e015_AsF64(_95250_index.get()._field_Constant.ptr());;
				if ((_96417_indx >= static_cast<jule::F64>(_96321_m.get()._field_Elems.len()))) {
					_1e6a8cce7_pushErr(&(*_self_), _95265_i.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					_95235_d.get()._field_Model=_96321_m.get()._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_96417_indx))];
					_95235_d.get()._field_Decl=true;
				};
			}
		}
		_match_end_1b28bd6c8:;
	};
}



inline void _1e6a9740b_indexingMap(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e6a8ac6d_Data>& _97435_d, jule::Ptr<_1e6a8ac6d_Data>& _97450_index, jule::Ptr<_1e5d611cb_IndexingExpr>& _97469_i) {
	if ((_97450_index == nullptr)) {
		return;;
	};
	jule::Ptr<_1e6ac1d09_Map> _97817_m = _1e6aba5c7_Map(_97435_d.get()._field_Kind.ptr());;
	_1e6a76808_assignTypeChecker _97917_atc = _1e6a76808_assignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_97817_m.get()._field_Key, ._field_d=_97450_index, ._field_errorToken=_97469_i.get()._field_Token};;
	_1e6a77980_check(&_97917_atc);
	_97435_d.get()._field_Kind=_97817_m.get()._field_Val;
}



inline void _1e6a977c4_indexingStr(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e6a8ac6d_Data>& _98935_d, jule::Ptr<_1e6a8ac6d_Data>& _98950_index, jule::Ptr<_1e5d611cb_IndexingExpr>& _98965_i) {
	;
	_98935_d.get()._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("u8", 2)), 6)});
	if ((_98950_index == nullptr)) {
		return;;
	};
	_1e6a963d8_checkIntegerIndexingByData(&(*_self_), _98950_index,_98965_i.get()._field_Token);
	if ((!(_1e6a8b631_IsConst(_98950_index.ptr())))) {
		_98935_d.get()._field_Constant=nullptr;
		return;;
	};
	if (_1e6a8b631_IsConst(_98935_d.ptr())) {
		jule::Ptr<_1e47137a5_Token> _100517_errorToken = _98965_i.get()._field_Token;;
		jule::I64 _100617_j = _1e5e0da3c_AsI64(_98950_index.get()._field_Constant.ptr());;
		jule::Str _100717_s = _1e5e0d564_ReadStr(_98935_d.get()._field_Constant.ptr());;
		if ((static_cast<jule::I64>(_100617_j) >= _100717_s.len())) {
			_1e6a8cce7_pushErr(&(*_self_), _100517_errorToken,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else {
			_1e5e0e510_SetU64(_98935_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_100717_s[_100617_j])));
		};
	};
}



inline void _1e6a97b8c_toIndexing(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e6a8ac6d_Data>& _101634_d, jule::Ptr<_1e6a8ac6d_Data>& _101649_index, jule::Ptr<_1e5d611cb_IndexingExpr>& _101668_i) {
	{
		
		if ((_1e6ab9175_Ptr(_101634_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b28c85b2:;
			{
				_1e6a967b2_indexingPtr(&(*_self_), _101634_d,_101649_index,_101668_i);
				return;;
			}
		}
		else if ((_1e6ab98b2_Arr(_101634_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b28c8639:;
			{
				_1e6a96b7a_indexingArr(&(*_self_), _101634_d,_101649_index,_101668_i);
				return;;
			}
		}
		else if ((_1e6ab9b26_Slc(_101634_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b28c86b1:;
			{
				_1e6a97043_indexingSlc(&(*_self_), _101634_d,_101649_index,_101668_i);
				return;;
			}
		}
		else if ((_1e6aba5c7_Map(_101634_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b28c8738:;
			{
				_1e6a9740b_indexingMap(&(*_self_), _101634_d,_101649_index,_101668_i);
				return;;
			}
		}
		else if ((_1e6ab8b9c_Prim(_101634_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b28c87b0:;
			{
				jule::Ptr<_1e6abb562_Prim> _103117_prim = _1e6ab8b9c_Prim(_101634_d.get()._field_Kind.ptr());;
				{
					
					if (_1e6abe796_IsStr(_103117_prim.ptr())) {
						_case_begin_1b28cc891:;
						{
							_1e6a977c4_indexingStr(&(*_self_), _101634_d,_101649_index,_101668_i);
							return;;
						}
					}
					_match_end_1b28cc7e7:;
				};
			}
		}
		_match_end_1b28c845d:;
	};
	_1e6a8cce7_pushErr(&(*_self_), _101668_i.get()._field_Token,jule::Str("type @ is not support indexing", 30),jule::Slice<jule::Any>::make({jule::Any(_1e6ab6e86_Str(_101634_d.get()._field_Kind.ptr()))}));
}



inline jule::Bool _1e6a98110_pushGenericsFromExprSubIdent(jule::Ptr<_1e6a8c7db_Eval> _self_, jule::Ptr<_1e5d5c78d_SubIdentExpr>& _104153_sexpr, jule::Slice<jule::Ptr<_1e5d54961_TypeDecl>>& _104214_generics, jule::Ptr<_1e5d58e82_Expr>& _104242_expr) {
	jule::Ptr<_1e5d55676_SubIdentTypeDecl> _104317_t = jule::new_ptr<_1e5d55676_SubIdentTypeDecl>();;
	if ((!(_1e6ab44a0_pushSubIdentFromExpr(static_cast<jule::Any>(_104153_sexpr),_104317_t)))) {
		_1e6a8cce7_pushErr(_self_.ptr(), _104242_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	};
	_104214_generics = jule::alloc_for_append(_104214_generics,1);_104214_generics.__push(jule::new_ptr<_1e5d54961_TypeDecl>(_1e5d54961_TypeDecl{._field_Kind=static_cast<jule::Any>(_104317_t)}));;
	return true;
}



inline jule::Bool _1e6a984c8_pushGenericsFromData(jule::Ptr<_1e6a8c7db_Eval> _self_, jule::Slice<jule::Ptr<_1e5d54961_TypeDecl>>& _105245_generics, jule::Ptr<_1e5d58e82_Expr>& _105273_expr) {
	{
		auto &_match_expr{ _105273_expr.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e5d5b704_UnaryExpr>>()) {
			_case_begin_1b28d0db1:;
			{
				jule::Ptr<_1e6a8ac6d_Data> _105721_d = _1e6a94e0e_evalUnary(_self_, _105273_expr.get()._field_Kind.operator jule::Ptr<_1e5d5b704_UnaryExpr>());;
				if ((!(_105721_d.get()._field_Decl))) {
					_1e6a8cce7_pushErr(_self_.ptr(), _105273_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return false;
				};
				_105245_generics = jule::alloc_for_append(_105245_generics,1);_105245_generics.__push(jule::new_ptr<_1e5d54961_TypeDecl>(_1e5d54961_TypeDecl{._field_Token=_105273_expr.get()._field_Token, ._field_Kind=(*(((jule::Any*)((&(_105721_d.get()._field_Kind.get()._field_Kind))))))}));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d54961_TypeDecl>>()) {
			_case_begin_1b28d0e27:;
			{
				_105245_generics = jule::alloc_for_append(_105245_generics,1);_105245_generics.__push(_105273_expr.get()._field_Kind.operator jule::Ptr<_1e5d54961_TypeDecl>());;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d5c78d_SubIdentExpr>>()) {
			_case_begin_1b28d0e8d:;
			{
				jule::Ptr<_1e5d5c78d_SubIdentExpr> _106921_sexpr = _105273_expr.get()._field_Kind.operator jule::Ptr<_1e5d5c78d_SubIdentExpr>();;
				return _1e6a98110_pushGenericsFromExprSubIdent(_self_, _106921_sexpr,_105245_generics,_105273_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d5aeea_IdentExpr>>()) {
			_case_begin_1b28d1796:;
			{
				jule::Ptr<_1e5d5aeea_IdentExpr> _107221_ident = _105273_expr.get()._field_Kind.operator jule::Ptr<_1e5d5aeea_IdentExpr>();;
				_105245_generics = jule::alloc_for_append(_105245_generics,1);_105245_generics.__push(jule::new_ptr<_1e5d54961_TypeDecl>(_1e5d54961_TypeDecl{._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1e5d55027_IdentTypeDecl>(_1e5d55027_IdentTypeDecl{._field_Token=_107221_ident.get()._field_Token, ._field_Ident=_107221_ident.get()._field_Ident, ._field_CppLinked=_107221_ident.get()._field_CppLinked, }))}));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d59b0e_TupleExpr>>()) {
			_case_begin_1b28d180c:;
			{
				{
					auto &expr = _105273_expr.get()._field_Kind.operator jule::Ptr<_1e5d59b0e_TupleExpr>().get()._field_Expr;
					auto it = expr.begin();
					_iter_begin_1b28d5ba7:;
					if (it != expr.end()) {
						jule::Ptr<_1e5d58e82_Expr> _108125_texpr = *it;
						{
							if ((!(_1e6a984c8_pushGenericsFromData(_self_, _105245_generics,_108125_texpr)))) {
								return false;
							};
						}
						_iter_next_1b28d5ba7:;
						++it;
						goto _iter_begin_1b28d5ba7;
					}
					_iter_end_1b28d5ba7:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d5c31a_NsSelectionExpr>>()) {
			_case_begin_1b28d1873:;
			{
				jule::Ptr<_1e5d5c31a_NsSelectionExpr> _108721_ns = _105273_expr.get()._field_Kind.operator jule::Ptr<_1e5d5c31a_NsSelectionExpr>();;
				jule::Ptr<_1e5d55027_IdentTypeDecl> _108821_decl = jule::new_ptr<_1e5d55027_IdentTypeDecl>(_1e5d55027_IdentTypeDecl{._field_Token=_108721_ns.get()._field_Ident, ._field_Ident=_108721_ns.get()._field_Ident.get()._field_Kind, });;
				_105245_generics = jule::alloc_for_append(_105245_generics,1);_105245_generics.__push(jule::new_ptr<_1e5d54961_TypeDecl>(_1e5d54961_TypeDecl{._field_Token=_108821_decl.get()._field_Token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1e5d55a2d_NamespaceTypeDecl>(_1e5d55a2d_NamespaceTypeDecl{._field_Idents=_108721_ns.get()._field_Ns, ._field_Kind=jule::new_ptr<_1e5d54961_TypeDecl>(_1e5d54961_TypeDecl{._field_Token=_108821_decl.get()._field_Token, ._field_Kind=static_cast<jule::Any>(_108821_decl)})}))}));;
			}
		}
		else {
			_case_begin_1b28d0c90:;
			{
				_1e6a8cce7_pushErr(_self_.ptr(), _105273_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_1b28d0ae7:;
	};
	return true;
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6a98808_evalIdentDeclFromIndexing(jule::Ptr<_1e6a8c7db_Eval> _self_, jule::Ptr<_1e5d611cb_IndexingExpr>& _110950_i) {
	jule::Ptr<_1e5d54961_TypeDecl> _111017_tdecl = jule::new_ptr<_1e5d54961_TypeDecl>();;
	jule::Ptr<_1e5d55027_IdentTypeDecl> _111117_decl = nullptr;;
	{
		auto &_match_expr{ _110950_i.get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e5d5aeea_IdentExpr>>()) {
			_case_begin_1b28da30a:;
			{
				jule::Ptr<_1e5d5aeea_IdentExpr> _111421_expr = _110950_i.get()._field_Expr.get()._field_Kind.operator jule::Ptr<_1e5d5aeea_IdentExpr>();;
				_111117_decl=jule::new_ptr<_1e5d55027_IdentTypeDecl>(_1e5d55027_IdentTypeDecl{._field_Token=_111421_expr.get()._field_Token, ._field_Ident=_111421_expr.get()._field_Ident, ._field_CppLinked=_111421_expr.get()._field_CppLinked, });
				_111017_tdecl.get()._field_Kind=static_cast<jule::Any>(_111117_decl);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d5c31a_NsSelectionExpr>>()) {
			_case_begin_1b28da371:;
			{
				jule::Ptr<_1e5d5c31a_NsSelectionExpr> _112221_expr = _110950_i.get()._field_Expr.get()._field_Kind.operator jule::Ptr<_1e5d5c31a_NsSelectionExpr>();;
				_111117_decl=jule::new_ptr<_1e5d55027_IdentTypeDecl>(_1e5d55027_IdentTypeDecl{._field_Token=_112221_expr.get()._field_Ident, ._field_Ident=_112221_expr.get()._field_Ident.get()._field_Kind, });
				_111017_tdecl.get()._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1e5d55a2d_NamespaceTypeDecl>(_1e5d55a2d_NamespaceTypeDecl{._field_Idents=_112221_expr.get()._field_Ns, ._field_Kind=jule::new_ptr<_1e5d54961_TypeDecl>(_1e5d54961_TypeDecl{._field_Token=_111117_decl.get()._field_Token, ._field_Kind=static_cast<jule::Any>(_111117_decl)})}));
			}
		}
		else {
			_case_begin_1b28da294:;
			{
				_1e6a8cce7_pushErr(_self_.ptr(), _110950_i.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1b28da23e:;
	};
	if ((!(_1e6a984c8_pushGenericsFromData(_self_, _111117_decl.get()._field_Generics,_110950_i.get()._field_Index)))) {
		return nullptr;
	};
	return _1e6a9e743_evalType(_self_.ptr(), _111017_tdecl);
}



inline jule::Bool _1e6a98c6a_checkGenericFn(jule::Ptr<_1e6a8c7db_Eval> _self_, jule::Ptr<_1e5e202ce_FnIns>& _114639_f, jule::Ptr<_1e47137a5_Token>& _114655_et, jule::Any& _114672_model) {
	jule::Bool _114713_ok = _1e6a2cd53_reloadFnInsTypes(_self_.get()._field_s, _114639_f);;
	_114639_f.get()._field_reloaded=true;
	if ((!(_114713_ok))) {
		return false;
	};
	jule::Ptr<_1e5e202ce_FnIns> _115217_existInstance = _1e5e1e058_appendInstance(_114639_f.get()._field_Decl.ptr(), _114639_f);;
	if ((!(_1e6a2beb7_checkConstraintsFn(_self_.get()._field_s, _114639_f,_114655_et,_115217_existInstance)))) {
		return false;
	};
	if ((_115217_existInstance != nullptr)) {
		_114639_f=_115217_existInstance;
		_1e6ab425d_updateModelToGenericIns(_114672_model,_115217_existInstance);
	} else {
		_1e6a39689_checkFnInsCaller(_self_.get()._field_s, _114639_f,_114655_et);
	};
	return true;
}



inline void _1e6a990ab_evalFnGenericFromIndexing(jule::Ptr<_1e6a8c7db_Eval> _self_, jule::Ptr<_1e6a8ac6d_Data>& _117150_d, jule::Ptr<_1e5d611cb_IndexingExpr>& _117165_i) {
	jule::Slice<jule::Ptr<_1e5d54961_TypeDecl>> _117217_generics = jule::Slice<jule::Ptr<_1e5d54961_TypeDecl>>::alloc(0LL,8LL);;
	if ((!(_1e6a984c8_pushGenericsFromData(_self_, _117217_generics,_117165_i.get()._field_Index)))) {
		_117150_d=nullptr;
		return;;
	};
	jule::Ptr<_1e5e202ce_FnIns> _117817_f = _1e6ab9d8a_Fn(_117150_d.get()._field_Kind.ptr());;
	jule::I64 _117917_genericsLen = 0LL;;
	if ((_117817_f.get()._field_Decl != nullptr)) {
		_117917_genericsLen=static_cast<jule::I64>(_117817_f.get()._field_Decl.get()._field_Generics.len());
	};
	if ((!(_1e6a2649a_checkGenericQuantity(_self_.get()._field_s.ptr(), _117917_genericsLen,static_cast<jule::I64>(_117217_generics.len()),_117165_i.get()._field_Expr.get()._field_Token)))) {
		_117150_d=nullptr;
		return;;
	};
	_117817_f.get()._field_Generics=jule::Slice<jule::Ptr<_1e6ab535d_InsGeneric>>::alloc(0LL,_117817_f.get()._field_Decl.get()._field_Generics.len());
	{
		auto &expr = _117217_generics;
		auto it = expr.begin();
		_iter_begin_1b28e6239:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d54961_TypeDecl> _119021_g = *it;
			{
				jule::Ptr<_1e6a8ac6d_Data> _119121_k = _1e6a9e743_evalType(_self_.ptr(), _119021_g);;
				if ((_119121_k == nullptr)) {
					_117150_d=nullptr;
					return;;
				};
				_117817_f.get()._field_Generics = jule::alloc_for_append(_117817_f.get()._field_Generics,1);_117817_f.get()._field_Generics.__push(jule::new_ptr<_1e6ab535d_InsGeneric>(_1e6ab535d_InsGeneric{._field_Kind=_119121_k.get()._field_Kind, }));;
			}
			_iter_next_1b28e6239:;
			++it;
			goto _iter_begin_1b28e6239;
		}
		_iter_end_1b28e6239:;
	};
	if (_1e5e21665_IsBuiltin(_117817_f.ptr())) {
		return;;
	};
	if (_1e6a98c6a_checkGenericFn(_self_, _117817_f,_117165_i.get()._field_Expr.get()._field_Token,_117150_d.get()._field_Model)) {
		_117150_d.get()._field_Kind.get()._field_Kind=jule::Trait<_1e6ab665b_Kind>(_117817_f, 1);
	} else {
		_117150_d=nullptr;
	};
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6a993ca_evalIndexing(jule::Ptr<_1e6a8c7db_Eval> _self_, jule::Ptr<_1e5d611cb_IndexingExpr> _121036_i) {
	jule::Ptr<_1e6ab6a8a_TypeKind> _121117_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_121117_prefix;
	});;
	jule::Ptr<_1e6a8ac6d_Data> _121517_d = _1e6aa7c13_evalExprKind(_self_, _121036_i.get()._field_Expr.get()._field_Kind);;
	if ((_121517_d == nullptr)) {
		return nullptr;
	};
	if (_121517_d.get()._field_Decl) {
		return _1e6a98808_evalIdentDeclFromIndexing(_self_, _121036_i);
	};
	if ((_1e6ab9d8a_Fn(_121517_d.get()._field_Kind.ptr()) != nullptr)) {
		_1e6a990ab_evalFnGenericFromIndexing(_self_, _121517_d,_121036_i);
		return _121517_d;
	};
	_1e6a8ac6d_Data _123017_old_d = (*(_121517_d));;
	jule::Ptr<_1e6a8ac6d_Data> _123217_index = _1e6aa7c13_evalExprKind(_self_, _121036_i.get()._field_Index.get()._field_Kind);;
	if ((_123217_index == nullptr)) {
		return nullptr;
	};
	_121517_d.get()._field_Decl=false;
	_1e6a97b8c_toIndexing(_self_.ptr(), _121517_d,_123217_index,_121036_i);
	if (_1e6a8b631_IsConst(_121517_d.ptr())) {
		_121517_d.get()._field_Decl=false;
		_121517_d.get()._field_Model=static_cast<jule::Any>(_121517_d.get()._field_Constant);
	} else if (_121517_d.get()._field_Decl) {
		_121517_d.get()._field_Decl=false;
	} else {
		_121517_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e5e16407_IndexingExprModel>(_1e5e16407_IndexingExprModel{._field_Token=_121036_i.get()._field_Token, ._field_Expr=jule::new_ptr<_1e6a8ac6d_Data>(_123017_old_d), ._field_Index=_123217_index}));
	};
	return _121517_d;
}



inline std::tuple<jule::Ptr<_1e6a8ac6d_Data>,jule::Ptr<_1e6a8ac6d_Data>> _1e6a996d8_evalSlicingExprs(jule::Ptr<_1e6a8c7db_Eval> _self_, jule::Ptr<_1e5d617d6_SlicingExpr>& _126341_s) {
	jule::Ptr<_1e6ab6a8a_TypeKind> _126417_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_126417_prefix;
	});;
	jule::Ptr<_1e6a8ac6d_Data> _126817_l = nullptr;;
	jule::Ptr<_1e6a8ac6d_Data> _126917_r = nullptr;;
	if ((_126341_s.get()._field_Start != nullptr)) {
		_126817_l=_1e6aa7c13_evalExprKind(_self_, _126341_s.get()._field_Start.get()._field_Kind);
		if ((_126817_l != nullptr)) {
			_1e6a963d8_checkIntegerIndexingByData(_self_.ptr(), _126817_l,_126341_s.get()._field_Token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		};
	} else {
		_126817_l=jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Constant=static__1e5e0bc27_NewI64(0LL)});
		_126817_l.get()._field_Model=static_cast<jule::Any>(_126817_l.get()._field_Constant);
	};
	if ((_126341_s.get()._field_To != nullptr)) {
		_126917_r=_1e6aa7c13_evalExprKind(_self_, _126341_s.get()._field_To.get()._field_Kind);
		if ((_126917_r != nullptr)) {
			_1e6a963d8_checkIntegerIndexingByData(_self_.ptr(), _126917_r,_126341_s.get()._field_Token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		};
	};
	return std::make_tuple(_126817_l,_126917_r);
}



inline void _1e6a9995d_slicingArr(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e6a8ac6d_Data>& _129830_d) {
	jule::Ptr<_1e6ab6a8a_TypeKind> _129917_elemType = _1e6ab98b2_Arr(_129830_d.get()._field_Kind.ptr()).get()._field_Elem;;
	_129830_d.get()._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(jule::new_ptr<_1e6ac0753_Slc>(_1e6ac0753_Slc{._field_Elem=_129917_elemType}), 8)});
	_129830_d.get()._field_Lvalue=false;
	_129830_d.get()._field_Mutable=(_129830_d.get()._field_Mutable || (!(_1e6ab7e87_Mutable(_129917_elemType.ptr()))));
}



inline void _1e6a99d26_slicingStr(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e6a8ac6d_Data>& _131330_d, jule::Ptr<_1e6a8ac6d_Data>& _131341_l, jule::Ptr<_1e6a8ac6d_Data>& _131352_r) {
	_131330_d.get()._field_Lvalue=false;
	_131330_d.get()._field_Mutable=true;
	if ((!(_1e6a8b631_IsConst(_131330_d.ptr())))) {
		return;;
	};
	if (((_131341_l == nullptr) || (_131352_r == nullptr))) {
		_131330_d.get()._field_Constant=nullptr;
		return;;
	};
	if ((_1e6a8b631_IsConst(_131341_l.ptr()) && _1e6a8b631_IsConst(_131352_r.ptr()))) {
		jule::I64 _132617_left = _1e5e0da3c_AsI64(_131341_l.get()._field_Constant.ptr());;
		if ((_132617_left < 0LL)) {
			return;;
		};
		jule::Str _133117_s = _1e5e0d564_ReadStr(_131330_d.get()._field_Constant.ptr());;
		jule::I64 _133221_right = 0LL;;
		if ((_131352_r == nullptr)) {
			_133221_right=static_cast<jule::I64>(static_cast<jule::I64>(_133117_s.len()));
		} else {
			_133221_right=static_cast<jule::I64>(_1e5e0da3c_AsI64(_131352_r.get()._field_Constant.ptr()));
		};
		if ((_132617_left > _133221_right)) {
			return;;
		};
		_1e5e0ea0a_SetStr(_131330_d.get()._field_Constant.ptr(), _133117_s.slice(_132617_left,_133221_right));
		_131330_d.get()._field_Decl=true;
	} else {
		_131330_d.get()._field_Constant=nullptr;
	};
}



inline void _1e6a9a288_checkSlicing(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e6a8ac6d_Data>& _134936_d, jule::Ptr<_1e6a8ac6d_Data>& _134947_l, jule::Ptr<_1e6a8ac6d_Data>& _134958_r, jule::Ptr<_1e5d617d6_SlicingExpr>& _134969_s) {
	{
		
		if ((_1e6ab98b2_Arr(_134936_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b290c607:;
			{
				_1e6a9995d_slicingArr(&(*_self_), _134936_d);
				return;;
			}
		}
		else if ((_1e6ab9b26_Slc(_134936_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b290c67e:;
			{
				return;;
			}
		}
		else if ((_1e6ab8b9c_Prim(_134936_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b290c706:;
			{
				jule::Ptr<_1e6abb562_Prim> _135717_prim = _1e6ab8b9c_Prim(_134936_d.get()._field_Kind.ptr());;
				{
					
					if (_1e6abe796_IsStr(_135717_prim.ptr())) {
						_case_begin_1b290ebc0:;
						{
							_1e6a99d26_slicingStr(&(*_self_), _134936_d,_134947_l,_134958_r);
							return;;
						}
					}
					_match_end_1b290eb26:;
				};
			}
		}
		_match_end_1b290c4c5:;
	};
	_1e6a8cce7_pushErr(&(*_self_), _134969_s.get()._field_Token,jule::Str("type @ is not support slicing", 29),jule::Slice<jule::Any>::make({jule::Any(_1e6ab6e86_Str(_134936_d.get()._field_Kind.ptr()))}));
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6a9a596_evalSlicing(jule::Ptr<_1e6a8c7db_Eval> _self_, jule::Ptr<_1e5d617d6_SlicingExpr> _136835_s) {
	jule::Ptr<_1e6a8ac6d_Data> _136917_d = _1e6aa7c13_evalExprKind(_self_, _136835_s.get()._field_Expr.get()._field_Kind);;
	if ((_136917_d == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1e6a8ac6d_Data> _137418_l;;
	jule::Ptr<_1e6a8ac6d_Data> _137425_r;;
	std::tie(_137418_l,_137425_r) = _1e6a996d8_evalSlicingExprs(_self_, _136835_s);
	if ((_137418_l == nullptr)) {
		return _136917_d;
	};
	_136917_d.get()._field_Decl=false;
	_1e6a9a288_checkSlicing(_self_.ptr(), _136917_d,_137418_l,_137425_r,_136835_s);
	if (_1e6a8b631_IsConst(_136917_d.ptr())) {
		_136917_d.get()._field_Decl=false;
		_136917_d.get()._field_Model=static_cast<jule::Any>(_136917_d.get()._field_Constant);
	} else if (_136917_d.get()._field_Decl) {
		_136917_d.get()._field_Decl=false;
	} else {
		jule::Ptr<_1e5e16baa_SlicingExprModel> _139221_model = jule::new_ptr<_1e5e16baa_SlicingExprModel>(_1e5e16baa_SlicingExprModel{._field_Token=_136835_s.get()._field_Token, ._field_Expr=_136917_d.get()._field_Model, ._field_Left=_137418_l.get()._field_Model, });;
		if ((_137425_r != nullptr)) {
			_139221_model.get()._field_Right=_137425_r.get()._field_Model;
		};
		_136917_d.get()._field_Model=static_cast<jule::Any>(_139221_model);
	};
	return _136917_d;
}



inline void _1e6a9a95e_castPtr(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e6ab6a8a_TypeKind> _140530_t, jule::Ptr<_1e6a8ac6d_Data> _140548_d, jule::Ptr<_1e47137a5_Token> _140558_errorToken) {
	jule::Ptr<_1e6abece6_Sptr> _140613_sptr = _1e6ab8e11_Sptr(_140548_d.get()._field_Kind.ptr());;
	if ((_140613_sptr != nullptr)) {
		if ((!(_1e6ab7294_Equals(_1e6ab9175_Ptr(_140530_t.ptr()).get()._field_Elem, _140613_sptr.get()._field_Elem)))) {
			_1e6a8cce7_pushErr(&(*_self_), _140558_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1e6ab6e86_Str(_140548_d.get()._field_Kind.ptr())),jule::Any(_1e6ab6e86_Str(_140530_t.ptr()))}));
		};
		return;;
	};
	if ((!(_1e6a8d732_isUnsafe(&(*_self_))))) {
		_1e6a8cce7_pushErr(&(*_self_), _140558_errorToken,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e6abb562_Prim> _141913_prim = _1e6ab8b9c_Prim(_140548_d.get()._field_Kind.ptr());;
	if (((_1e6ab9175_Ptr(_140548_d.get()._field_Kind.ptr()) == nullptr) && ((_141913_prim == nullptr) || (!(_1e6a0604b_IsInt(_1e6abb8c5_Str(_141913_prim.ptr()))))))) {
		_1e6a8cce7_pushErr(&(*_self_), _140558_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1e6ab6e86_Str(_140548_d.get()._field_Kind.ptr())),jule::Any(_1e6ab6e86_Str(_140530_t.ptr()))}));
	};
	_140548_d.get()._field_Constant=nullptr;
}



inline void _1e6a9ad27_castStruct(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e6ab6a8a_TypeKind> _142733_t, jule::Ptr<_1e6a8ac6d_Data> _142751_d, jule::Ptr<_1e47137a5_Token> _142761_errorToken) {
	jule::Ptr<_1e5e2e4db_Trait> _142817_tr = _1e6aba363_Trait(_142751_d.get()._field_Kind.ptr());;
	if ((_142817_tr == nullptr)) {
		_1e6a8cce7_pushErr(&(*_self_), _142761_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1e6ab6e86_Str(_142751_d.get()._field_Kind.ptr())),jule::Any(_1e6ab6e86_Str(_142733_t.ptr()))}));
		return;;
	};
	jule::Ptr<_1e5d714d8_StructIns> _143417_s = _1e6aba0ee_Struct(_142733_t.ptr());;
	_1b291c7c1_pushReference(&(*_self_), _143417_s);
	if ((!(_1e5d34a0c_IsImplements(_143417_s.get()._field_Decl.ptr(), _142817_tr)))) {
		_1e6a8cce7_pushErr(&(*_self_), _142761_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1e6ab6e86_Str(_142751_d.get()._field_Kind.ptr())),jule::Any(_1e6ab6e86_Str(_142733_t.ptr()))}));
	};
}



inline void _1e6a9b1e0_castRef(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e6ab6a8a_TypeKind> _144230_t, jule::Ptr<_1e6a8ac6d_Data> _144248_d, jule::Ptr<_1e47137a5_Token> _144258_errorToken) {
	jule::Ptr<_1e6abece6_Sptr> _144317_sptr = _1e6ab8e11_Sptr(_144230_t.ptr());;
	jule::Ptr<_1e6ac335a_Ptr> _144517_ptr = _1e6ab9175_Ptr(_144248_d.get()._field_Kind.ptr());;
	if (((_144517_ptr != nullptr) && _1e6ab7294_Equals(_144317_sptr.get()._field_Elem, _144517_ptr.get()._field_Elem))) {
		if ((!(_1e6a8d732_isUnsafe(&(*_self_))))) {
			_1e6a8cce7_pushErr(&(*_self_), _144258_errorToken,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1e6aba0ee_Struct(_144317_sptr.get()._field_Elem.ptr()) != nullptr)) {
		_1e6a9ad27_castStruct(&(*_self_), _144317_sptr.get()._field_Elem,_144248_d,_144258_errorToken);
		return;;
	};
	_1e6a8cce7_pushErr(&(*_self_), _144258_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1e6ab6e86_Str(_144248_d.get()._field_Kind.ptr())),jule::Any(_1e6ab6e86_Str(_144230_t.ptr()))}));
}



inline void _1e6a9b5a8_castSlc(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e6ab6a8a_TypeKind> _146330_t, jule::Ptr<_1e6a8ac6d_Data> _146348_d, jule::Ptr<_1e47137a5_Token> _146358_errorToken) {
	if ((_1e6ab93d9_Enum(_146348_d.get()._field_Kind.ptr()) != nullptr)) {
		if (((_1e6ab8b9c_Prim(_1e6ab93d9_Enum(_146348_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_1e6abe796_IsStr(_1e6ab8b9c_Prim(_1e6ab93d9_Enum(_146348_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).ptr()))))) {
			_1e6a8cce7_pushErr(&(*_self_), _146358_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1e6ab6e86_Str(_146348_d.get()._field_Kind.ptr())),jule::Any(_1e6ab6e86_Str(_146330_t.ptr()))}));
			return;;
		};
	} else if (((_1e6ab8b9c_Prim(_146348_d.get()._field_Kind.ptr()) == nullptr) || (!(_1e6abe796_IsStr(_1e6ab8b9c_Prim(_146348_d.get()._field_Kind.ptr()).ptr()))))) {
		_1e6a8cce7_pushErr(&(*_self_), _146358_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1e6ab6e86_Str(_146348_d.get()._field_Kind.ptr())),jule::Any(_1e6ab6e86_Str(_146330_t.ptr()))}));
		return;;
	};
	_146330_t=_1e6ab9b26_Slc(_146330_t.ptr()).get()._field_Elem;
	jule::Ptr<_1e6abb562_Prim> _147513_prim = _1e6ab8b9c_Prim(_146330_t.ptr());;
	if (((_147513_prim == nullptr) || ((!(_1e6abcd6b_IsU8(_147513_prim.ptr()))) && (!(_1e6abc893_IsI32(_147513_prim.ptr())))))) {
		_1e6a8cce7_pushErr(&(*_self_), _146358_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1e6ab6e86_Str(_146348_d.get()._field_Kind.ptr())),jule::Any(_1e6ab6e86_Str(_146330_t.ptr()))}));
	};
}



inline void _1e6a9b8c7_castStr(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e6a8ac6d_Data> _148130_d, jule::Ptr<_1e47137a5_Token> _148140_errorToken) {
	if ((_1e6ab93d9_Enum(_148130_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1e5e31631_Enum> _148321_e = _1e6ab93d9_Enum(_148130_d.get()._field_Kind.ptr());;
		if (((_1e6ab8b9c_Prim(_148321_e.get()._field_Kind.get()._field_Kind.ptr()) != nullptr) && _1e6abe796_IsStr(_1e6ab8b9c_Prim(_148321_e.get()._field_Kind.get()._field_Kind.ptr()).ptr()))) {
			return;;
		};
	};
	if ((_1e6ab8b9c_Prim(_148130_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1e6abb562_Prim> _149017_prim = _1e6ab8b9c_Prim(_148130_d.get()._field_Kind.ptr());;
		if (((!(_1e6abcd6b_IsU8(_149017_prim.ptr()))) && (!(_1e6abc893_IsI32(_149017_prim.ptr()))))) {
			_1e6a8cce7_pushErr(&(*_self_), _148140_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1e6ab6e86_Str(_148130_d.get()._field_Kind.ptr()))}));
		};
		return;;
	};
	if ((_1e6ab9b26_Slc(_148130_d.get()._field_Kind.ptr()) == nullptr)) {
		_1e6a8cce7_pushErr(&(*_self_), _148140_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1e6ab6e86_Str(_148130_d.get()._field_Kind.ptr()))}));
		return;;
	};
	jule::Ptr<_1e6ab6a8a_TypeKind> _150217_t = _1e6ab9b26_Slc(_148130_d.get()._field_Kind.ptr()).get()._field_Elem;;
	jule::Ptr<_1e6abb562_Prim> _150313_prim = _1e6ab8b9c_Prim(_150217_t.ptr());;
	if (((_150313_prim == nullptr) || ((!(_1e6abcd6b_IsU8(_150313_prim.ptr()))) && (!(_1e6abc893_IsI32(_150313_prim.ptr())))))) {
		_1e6a8cce7_pushErr(&(*_self_), _148140_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1e6ab6e86_Str(_148130_d.get()._field_Kind.ptr()))}));
	};
}



inline void _1e6a9bc90_castInt(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e6ab6a8a_TypeKind> _150930_t, jule::Ptr<_1e6a8ac6d_Data> _150948_d, jule::Ptr<_1e47137a5_Token> _150958_errorToken) {
	if (_1e6a8b631_IsConst(_150948_d.ptr())) {
		jule::Ptr<_1e6abb562_Prim> _151117_prim = _1e6ab8b9c_Prim(_150930_t.ptr());;
		{
			
			if (_1e6a05cd7_IsSigInt(_151117_prim.get()._field_Kind)) {
				_case_begin_1b29374de:;
				{
					_1e5e0e28a_SetI64(_150948_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1e5e0da3c_AsI64(_150948_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1e6a05e19_IsUnsigInt(_151117_prim.get()._field_Kind)) {
				_case_begin_1b2937566:;
				{
					_1e5e0e510_SetU64(_150948_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1e5e0dca1_AsU64(_150948_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1b2937434:;
		};
	};
	if ((_1e6ab93d9_Enum(_150948_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1e5e31631_Enum> _152117_e = _1e6ab93d9_Enum(_150948_d.get()._field_Kind.ptr());;
		if (_1e6a062b0_IsNum(_1e6ab6e86_Str(_152117_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1e6ab8e11_Sptr(_150948_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1e6abb562_Prim> _152817_prim = _1e6ab8b9c_Prim(_150930_t.ptr());;
		if ((!(_1e6abe2bd_IsUintptr(_152817_prim.ptr())))) {
			_1e6a8cce7_pushErr(&(*_self_), _150958_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1e6ab6e86_Str(_150948_d.get()._field_Kind.ptr())),jule::Any(_1e6ab6e86_Str(_150930_t.ptr()))}));
		};
		return;;
	};
	if ((_1e6ab9175_Ptr(_150948_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1e6abb562_Prim> _153517_prim = _1e6ab8b9c_Prim(_150930_t.ptr());;
		if (_1e6abe2bd_IsUintptr(_153517_prim.ptr())) {
		} else if ((!(_1e6a8d732_isUnsafe(&(*_self_))))) {
			_1e6a8cce7_pushErr(&(*_self_), _150958_errorToken,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		} else if ((((((!(_1e6abc893_IsI32(_153517_prim.ptr()))) && (!(_1e6abcb07_IsI64(_153517_prim.ptr())))) && (!(_1e6abd0d0_IsU16(_153517_prim.ptr())))) && (!(_1e6abd344_IsU32(_153517_prim.ptr())))) && (!(_1e6abd5a8_IsU64(_153517_prim.ptr()))))) {
			_1e6a8cce7_pushErr(&(*_self_), _150958_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1e6ab6e86_Str(_150948_d.get()._field_Kind.ptr())),jule::Any(_1e6ab6e86_Str(_150930_t.ptr()))}));
		};
		return;;
	};
	jule::Ptr<_1e6abb562_Prim> _154613_prim = _1e6ab8b9c_Prim(_150948_d.get()._field_Kind.ptr());;
	if (((_154613_prim != nullptr) && _1e6a062b0_IsNum(_1e6abb8c5_Str(_154613_prim.ptr())))) {
		return;;
	};
	_1e6a8cce7_pushErr(&(*_self_), _150958_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1e6ab6e86_Str(_150948_d.get()._field_Kind.ptr())),jule::Any(_1e6ab6e86_Str(_150930_t.ptr()))}));
}



inline void _1e6a9c158_castNum(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e6ab6a8a_TypeKind> _155430_t, jule::Ptr<_1e6a8ac6d_Data> _155448_d, jule::Ptr<_1e47137a5_Token> _155458_errorToken) {
	if (_1e6a8b631_IsConst(_155448_d.ptr())) {
		jule::Ptr<_1e6abb562_Prim> _155617_prim = _1e6ab8b9c_Prim(_155430_t.ptr());;
		{
			
			if (_1e6a0617d_IsFloat(_155617_prim.get()._field_Kind)) {
				_case_begin_1b294295b:;
				{
					_1e5e0ec80_SetF64(_155448_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1e5e0e015_AsF64(_155448_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1e6a05cd7_IsSigInt(_155617_prim.get()._field_Kind)) {
				_case_begin_1b29429d3:;
				{
					_1e5e0e28a_SetI64(_155448_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1e5e0da3c_AsI64(_155448_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1e6a05e19_IsUnsigInt(_155617_prim.get()._field_Kind)) {
				_case_begin_1b2942a5a:;
				{
					_1e5e0e510_SetU64(_155448_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1e5e0dca1_AsU64(_155448_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1b2942890:;
		};
	};
	if ((_1e6ab93d9_Enum(_155448_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1e5e31631_Enum> _156817_e = _1e6ab93d9_Enum(_155448_d.get()._field_Kind.ptr());;
		if (_1e6a062b0_IsNum(_1e6ab6e86_Str(_156817_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1e6abb562_Prim> _157413_prim = _1e6ab8b9c_Prim(_155448_d.get()._field_Kind.ptr());;
	if (((_157413_prim != nullptr) && _1e6a062b0_IsNum(_1e6abb8c5_Str(_157413_prim.ptr())))) {
		return;;
	};
	_1e6a8cce7_pushErr(&(*_self_), _155458_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1e6ab6e86_Str(_155448_d.get()._field_Kind.ptr())),jule::Any(_1e6ab6e86_Str(_155430_t.ptr()))}));
}



inline void _1e6a9c521_castPrim(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e6ab6a8a_TypeKind> _158231_t, jule::Ptr<_1e6a8ac6d_Data> _158249_d, jule::Ptr<_1e47137a5_Token> _158259_errorToken) {
	jule::Ptr<_1e6abb562_Prim> _158313_prim = _1e6ab8b9c_Prim(_158231_t.ptr());;
	{
		
		if (_1e6abea0a_IsAny(_158313_prim.ptr())) {
			_case_begin_1b294d2a2:;
		}
		else if (_1e6abe796_IsStr(_158313_prim.ptr())) {
			_case_begin_1b294d824:;
			{
				_1e6a9b8c7_castStr(&(*_self_), _158249_d,_158259_errorToken);
			}
		}
		else if (_1e6a0604b_IsInt(_1e6abb8c5_Str(_158313_prim.ptr()))) {
			_case_begin_1b294d88a:;
			{
				_1e6a9bc90_castInt(&(*_self_), _158231_t,_158249_d,_158259_errorToken);
			}
		}
		else if (_1e6a062b0_IsNum(_1e6abb8c5_Str(_158313_prim.ptr()))) {
			_case_begin_1b294d901:;
			{
				_1e6a9c158_castNum(&(*_self_), _158231_t,_158249_d,_158259_errorToken);
			}
		}
		else {
			_case_begin_1b294d7ad:;
			{
				_1e6a8cce7_pushErr(&(*_self_), _158259_errorToken,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_1e6ab6e86_Str(_158231_t.ptr()))}));
			}
		}
		_match_end_1b294d747:;
	};
}



inline void _1e6a9c840_castConstant(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e6ab6a8a_TypeKind>& _159836_t, jule::Ptr<_1e6a8ac6d_Data>& _159855_d) {
	if (((_159855_d == nullptr) || (!(_1e6a8b631_IsConst(_159855_d.ptr()))))) {
		return;;
	};
	jule::Ptr<_1e6abb562_Prim> _160213_prim = _1e6ab8b9c_Prim(_159836_t.ptr());;
	_1e6ab3c52_castConstByType(_160213_prim.get()._field_Kind,_159855_d);
	_159855_d.get()._field_Model=static_cast<jule::Any>(_159855_d.get()._field_Constant);
}



inline void _1e6a9cc08_castTypeEnum(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e6ab6a8a_TypeKind>& _160736_t, jule::Ptr<_1e6a8ac6d_Data>& _160755_d, jule::Ptr<_1e47137a5_Token>& _160770_errorToken) {
	jule::I64 _160813_n = (*_self_)._field_s.get()._field_errors.len();;
	if ((!(_1e6a2b0b5_checkTypeCompatibility((*_self_)._field_s, _160755_d.get()._field_Kind,_160736_t,_160770_errorToken)))) {
		(*_self_)._field_s.get()._field_errors=(*_self_)._field_s.get()._field_errors.slice(0LL,_160813_n);
		_1e6a8cce7_pushErr(&(*_self_), _160770_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1e6ab6e86_Str(_160755_d.get()._field_Kind.ptr())),jule::Any(_1e6ab6e86_Str(_160736_t.ptr()))}));
	};
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6a9d159_evalCastByTypeNData(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e6ab6a8a_TypeKind> _161542_t, jule::Ptr<_1e6a8ac6d_Data> _161560_d, jule::Ptr<_1e47137a5_Token> _161574_errorToken) {
	if (((_161560_d != nullptr) && _161560_d.get()._field_Decl)) {
		_1e6a8cce7_pushErr(&(*_self_), _161574_errorToken,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	{
		
		if (((_1e6ab8b9c_Prim(_161560_d.get()._field_Kind.ptr()) != nullptr) && _1e6abea0a_IsAny(_1e6ab8b9c_Prim(_161560_d.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1b2957069:;
			{
				if ((_1e6ab93d9_Enum(_161542_t.ptr()) != nullptr)) {
					_1e6a8cce7_pushErr(&(*_self_), _161574_errorToken,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
					_1e6a8d116_pushSugggestion(&(*_self_), jule::Str("try cast to type of enum fields instead of enum", 47),jule::Slice<jule::Any>());
				} else if ((_1e6ab964d_TypeEnum(_161542_t.ptr()) != nullptr)) {
					_1e6a8cce7_pushErr(&(*_self_), _161574_errorToken,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
				};
			}
		}
		else if ((_1e6ab964d_TypeEnum(_161560_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b29563cb:;
			{
				_1e6a9cc08_castTypeEnum(&(*_self_), _161542_t,_161560_d,_161574_errorToken);
			}
		}
		else if ((_1e6ab9175_Ptr(_161542_t.ptr()) != nullptr)) {
			_case_begin_1b2956442:;
			{
				_1e6a9a95e_castPtr(&(*_self_), _161542_t,_161560_d,_161574_errorToken);
			}
		}
		else if ((_1e6ab8e11_Sptr(_161542_t.ptr()) != nullptr)) {
			_case_begin_1b29564a8:;
			{
				_1e6a9b1e0_castRef(&(*_self_), _161542_t,_161560_d,_161574_errorToken);
			}
		}
		else if ((_1e6ab9b26_Slc(_161542_t.ptr()) != nullptr)) {
			_case_begin_1b295651e:;
			{
				_1e6a9b5a8_castSlc(&(*_self_), _161542_t,_161560_d,_161574_errorToken);
			}
		}
		else if ((_1e6aba0ee_Struct(_161542_t.ptr()) != nullptr)) {
			_case_begin_1b29571bd:;
			{
				_1e6a9ad27_castStruct(&(*_self_), _161542_t,_161560_d,_161574_errorToken);
			}
		}
		else if ((_1e6ab8b9c_Prim(_161542_t.ptr()) != nullptr)) {
			_case_begin_1b2957234:;
			{
				_1e6a9c521_castPrim(&(*_self_), _161542_t,_161560_d,_161574_errorToken);
				_1e6a9c840_castConstant(&(*_self_), _161542_t,_161560_d);
			}
		}
		else {
			_case_begin_1b2956365:;
			{
				_1e6a8cce7_pushErr(&(*_self_), _161574_errorToken,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_1e6ab6e86_Str(_161542_t.ptr()))}));
				_161560_d=nullptr;
			}
		}
		_match_end_1b2956310:;
	};
	if ((_161560_d == nullptr)) {
		return nullptr;
	};
	_161560_d.get()._field_Mutable=(_161560_d.get()._field_Mutable || ((!(_1e6ab7e87_Mutable(_161560_d.get()._field_Kind.ptr()))) && _1e6ab7e87_Mutable(_161542_t.ptr())));
	_161560_d.get()._field_Lvalue=false;
	_161560_d.get()._field_Decl=false;
	if (((_1e6ab93d9_Enum(_161560_d.get()._field_Kind.ptr()) == nullptr) || (!(_1e6ab7294_Equals(_1e6ab93d9_Enum(_161560_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind, _161542_t))))) {
		_1e6ab3218_applyCastKind(_161560_d,_161542_t);
		_161560_d.get()._field_Model.operator jule::Ptr<_1e5e15d41_CastingExprModel>().get()._field_Token=_161574_errorToken;
	} else {
		_161560_d.get()._field_Kind=_161542_t;
	};
	return _161560_d;
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6a9d5aa_evalCastT(jule::Ptr<_1e6a8c7db_Eval> _self_, jule::Ptr<_1e6ab6a8a_TypeKind>& _166834_t, jule::Ptr<_1e5d58e82_Expr>& _166853_e, jule::Ptr<_1e47137a5_Token>& _166868_et) {
	jule::Ptr<_1e6ab6a8a_TypeKind> _166917_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_166917_prefix;
	});;
	if ((_1e6ab9b26_Slc(_166834_t.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _166853_e.get()._field_Kind };
			
			if (_match_expr.type_is<jule::Ptr<_1e5d6083a_SliceExpr>>()) {
				_case_begin_1b296255d:;
				{
					_self_.get()._field_prefix=_166834_t;
				}
			}
			_match_end_1b296264b:;
		};
	};
	jule::Ptr<_1e6a8ac6d_Data> _167817_d = _1e6aa7c13_evalExprKind(_self_, _166853_e.get()._field_Kind);;
	if (((_167817_d == nullptr) || (_self_.get()._field_prefix != nullptr))) {
		return _167817_d;
	};
	return _1e6a9d159_evalCastByTypeNData(_self_.ptr(), _166834_t,_167817_d,_166868_et);
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6a9d8b8_evalCast(jule::Ptr<_1e6a8c7db_Eval> _self_, jule::Ptr<_1e5d5be63_CastExpr> _168532_c) {
	jule::Ptr<_1e6ababe3_TypeSymbol> _168617_t = _1e5e248bb_buildType(_168532_c.get()._field_Kind);;
	jule::Bool _168713_ok = _1e6a28ed6_checkType(_self_.get()._field_s, _168617_t,_self_.get()._field_lookup);;
	if ((!(_168713_ok))) {
		return nullptr;
	};
	return _1e6a9d5aa_evalCastT(_self_, _168617_t.get()._field_Kind,_168532_c.get()._field_Expr,_168532_c.get()._field_Kind.get()._field_Token);
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6a9dbc6_evalNsSelection(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e5d5c31a_NsSelectionExpr> _169434_s) {
	jule::Str _169513_path = _1e6ace5b9_buildLinkPathByTokens(_169434_s.get()._field_Ns);;
	jule::Ptr<_1e6a192e5_ImportInfo> _169617_imp = _1e6ad2600_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1e6ad0ab5_SelectPackage((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1e6a192e5_ImportInfo>)>([=](jule::Ptr<_1e6a192e5_ImportInfo> _169652_imp) mutable -> jule::Bool {
		if (((_169434_s.get()._field_Ns.len() == 1LL) && (_169652_imp.get()._field_Alias == _169513_path))) {
			return true;
		};
		return ((_169652_imp.get()._field_LinkPath == _169513_path) && _1e6a1be52_isAccessibleViaSelection(_169652_imp.ptr()));
	}));;
	if ((_169617_imp == nullptr)) {
		_1e6a8cce7_pushErr(&(*_self_), _169434_s.get()._field_Ident,jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_169513_path)}));
		return nullptr;
	};
	jule::Trait<_1e6ad2600_Lookup> _170817_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_1e6ad2600_Lookup>(_169617_imp, 1);
	;
	_1e6a8d4bd_disallowBuiltin(&(*_self_));
	jule::Any _171317_def = _1e6a90d0b_getDef(&(*_self_), _169434_s.get()._field_Ident.get()._field_Kind,false);;
	_1e6a8d2e2_allowBuiltin(&(*_self_));
	(*_self_)._field_lookup=_170817_lookup;
	jule::Ptr<_1e6a8ac6d_Data> _171617_d = _1e6a947e3_evalDef(&(*_self_), jule::Any(_171317_def),_169434_s.get()._field_Ident);;
	return _171617_d;
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6a9e127_evalStructLitExplicit(jule::Ptr<_1e6a8c7db_Eval> _self_, jule::Ptr<_1e5d714d8_StructIns> _172045_s, jule::Slice<jule::Ptr<_1e5d58e82_Expr>> _172113_exprs, jule::Ptr<_1e47137a5_Token> _172133_errorToken) {
	jule::Bool _172213_ok = _1e6a2649a_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_172045_s.get()._field_Decl.get()._field_Generics.len()),static_cast<jule::I64>(_172045_s.get()._field_Generics.len()),_172133_errorToken);;
	if ((!(_172213_ok))) {
		return nullptr;
	};
	if (((_self_.get()._field_field != nullptr) && (_self_.get()._field_field.get()._field_Decl.get()._field_Owner == _172045_s.get()._field_Decl))) {
		_1e6a8cce7_pushErr(_self_.ptr(), _172133_errorToken,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any(_172045_s.get()._field_Decl.get()._field_Ident)}));
	};
	_1b291c7c1_pushReference(_self_.ptr(), _172045_s);
	_1e6a92bed_checkDeprecated(_self_.ptr(), _172045_s.get()._field_Decl.get()._field_Directives,_172133_errorToken);
	_1e6a80427_structLitChecker _173517_slc = _1e6a80427_structLitChecker{._field_e=_self_, ._field_errorToken=_172133_errorToken, ._field_s=_172045_s, };;
	_1e6a819bc_check(&_173517_slc, _172113_exprs);
	return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_172045_s, 0)}), ._field_Mutable=(!(_self_.get()._field_immutable)), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e5e15967_StructLitExprModel>(_1e5e15967_StructLitExprModel{._field_Strct=_172045_s, ._field_Args=_173517_slc._field_args})), });
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6a9e435_evalStructLit(jule::Ptr<_1e6a8c7db_Eval> _self_, jule::Ptr<_1e5d5e42c_StructLit> _175437_lit) {
	jule::Ptr<_1e6ababe3_TypeSymbol> _175517_t = _1e5e248bb_buildType(_175437_lit.get()._field_Kind);;
	jule::Bool _175613_ok = _1e6a28ed6_checkType(_self_.get()._field_s, _175517_t,_self_.get()._field_lookup);;
	if ((!(_175613_ok))) {
		return nullptr;
	};
	jule::Ptr<_1e5d714d8_StructIns> _176117_s = _1e6aba0ee_Struct(_175517_t.get()._field_Kind.ptr());;
	if ((_176117_s == nullptr)) {
		if ((_1e6ab8e11_Sptr(_175517_t.get()._field_Kind.ptr()) != nullptr)) {
			_176117_s=_1e6aba0ee_Struct(_1e6ab8e11_Sptr(_175517_t.get()._field_Kind.ptr()).get()._field_Elem.ptr());
			if ((_176117_s != nullptr)) {
				goto _julec_label_eval;
			};
		};
		_1e6a8cce7_pushErr(_self_.ptr(), _175437_lit.get()._field_Kind.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_julec_label_eval:;
	jule::Ptr<_1e6a8ac6d_Data> _177417_d = _1e6a9e127_evalStructLitExplicit(_self_, _176117_s,_175437_lit.get()._field_Exprs,_175437_lit.get()._field_Kind.get()._field_Token);;
	if ((_1e6ab8e11_Sptr(_175517_t.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1e5e15967_StructLitExprModel> _177621_model = _177417_d.get()._field_Model.operator jule::Ptr<_1e5e15967_StructLitExprModel>();;
		_1e6ab1b73_makeStructLitAlloc(_177417_d,_177621_model);
	};
	return _177417_d;
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6a9e743_evalType(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e5d54961_TypeDecl> _178231_t) {
	jule::Ptr<_1e6ababe3_TypeSymbol> _178317_tk = _1e5e248bb_buildType(_178231_t);;
	jule::Bool _178413_ok = _1e6a28ed6_checkType((*_self_)._field_s, _178317_tk,(*_self_)._field_lookup);;
	if ((!(_178413_ok))) {
		return nullptr;
	};
	return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=_178317_tk.get()._field_Kind, ._field_Model=static_cast<jule::Any>(_178317_tk.get()._field_Kind), ._field_Decl=true, });
}



inline void _1e6a9ea62_callTypeFn(jule::Ptr<_1e6a8c7db_Eval> _self_, jule::Ptr<_1e5d5d250_FnCallExpr>& _179535_fc, jule::Ptr<_1e6a8ac6d_Data>& _179557_d) {
	if ((_179535_fc.get()._field_Args.len() < 1LL)) {
		_1e6a8cce7_pushErr(_self_.ptr(), _179535_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1))}));
	} else if ((_179535_fc.get()._field_Args.len() > 1LL)) {
		_1e6a8cce7_pushErr(_self_.ptr(), _179535_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	if ((_179535_fc.get()._field_Args.len() > 0LL)) {
		jule::Ptr<_1e5d58e82_Expr> _180321_arg = _179535_fc.get()._field_Args[0LL];;
		_179557_d=_1e6a9d5aa_evalCastT(_self_, _179557_d.get()._field_Kind,_180321_arg,_180321_arg.get()._field_Token);
		return;;
	};
	if ((_179557_d != nullptr)) {
		_179557_d.get()._field_Decl=false;
	};
}



inline void _1e6a9ed81_callBuiltinFn(jule::Ptr<_1e6a8c7db_Eval> _self_, jule::Ptr<_1e5d5d250_FnCallExpr>& _181338_fc, jule::Ptr<_1e6a8ac6d_Data>& _181360_d) {
	_181360_d=_1e6ab9d8a_Fn(_181360_d.get()._field_Kind.ptr()).get()._field_caller(_self_,_181338_fc,_181360_d);
	if ((_181360_d == nullptr)) {
		return;;
	};
	_181360_d.get()._field_Mutable=true;
}



inline void _1e6aa01c2_checkFnOfConcurrentCall(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e5e202ce_FnIns>& _182143_f, jule::Ptr<_1e47137a5_Token> _182154_errorToken) {
	if (_1e6a8d732_isUnsafe(&(*_self_))) {
		return;;
	};
	{
		auto &expr = _182143_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1b298049e:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e1e410_ParamIns> &_182516_p = *it;
			{
				if (_182516_p.get()._field_Decl.get()._field_Reference) {
					_1e6a8cce7_pushErr(&(*_self_), _182154_errorToken,jule::Str("concurrent calls does not support functions which is has reference parameter(s)", 79),jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1b298049e:;
			++it;
			goto _iter_begin_1b298049e;
		}
		_iter_end_1b298049e:;
	};
}



inline void _1e6aa05bd_processExceptionalHandler(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e5e202ce_FnIns>& _183349_f, jule::Ptr<_1e5d5d250_FnCallExpr>& _183365_fc, jule::Ptr<_1e6a8ac6d_Data>& _183387_d) {
	jule::Bool _183413_resultNeeded = ((!(_1e5e1ca90_IsVoid(_183349_f.get()._field_Decl.ptr()))) && ((*_self_)._field_arg || (!((*_self_)._field_ignored))));;
	jule::Ptr<_1e6a09505_scopeChecker> _183517_csc = nullptr;;
	jule::Ptr<_1e6a06700_Scope> _183617_ch = nullptr;;
	jule::Ptr<_1e5e1602d_FnCallExprModel> _183817_model = _183387_d.get()._field_Model.operator jule::Ptr<_1e5e1602d_FnCallExprModel>();;
	jule::Ptr<_1e6a09505_scopeChecker> _184217_sc = (*_self_)._field_lookup.operator jule::Ptr<_1e6a09505_scopeChecker>();;
	_183517_csc=_1e6a12aa2_newChildChecker(_184217_sc);
	if (_183413_resultNeeded) {
		_183517_csc.get()._field_result=_183349_f;
	};
	_183617_ch=_1e6a0b381_getChild(_184217_sc.ptr());
	_183365_fc.get()._field_Exception.get()._field_Parent=_184217_sc.get()._field_tree;
	_183517_csc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_183517_csc.get()._field_table.get()._field_Vars,1);_183517_csc.get()._field_table.get()._field_Vars.__push(_1e6ab1eb4_buildErrorVar(_183617_ch,_183365_fc));;
	_1e6a0b4b3_checkChildSsc(_184217_sc, _183365_fc.get()._field_Exception,_183617_ch,_183517_csc);
	_183817_model.get()._field_Assigned=_183413_resultNeeded;
	_183817_model.get()._field_Except=_183617_ch;
	if ((_183413_resultNeeded && (_183517_csc.get()._field_result != nullptr))) {
		_1e6a8cce7_pushErr(&(*_self_), _183365_fc.get()._field_Token,jule::Str("assignments requires expression", 31),jule::Slice<jule::Any>());
	};
}



inline void _1e6aa08ed_callFn(jule::Ptr<_1e6a8c7db_Eval> _self_, jule::Ptr<_1e5d5d250_FnCallExpr>& _186031_fc, jule::Ptr<_1e6a8ac6d_Data>& _186053_d) {
	jule::Ptr<_1e5e202ce_FnIns> _186117_f = _1e6ab9d8a_Fn(_186053_d.get()._field_Kind.ptr());;
	if ((_1e6a8d996_isGlobal(_self_.ptr()) && _186117_f.get()._field_Decl.get()._field_Exceptional)) {
		_1e6a8cce7_pushErr(_self_.ptr(), _186031_fc.get()._field_Token,jule::Str("exceptionals are not allowed in global scope", 44),jule::Slice<jule::Any>());
		_1e6a8d116_pushSugggestion(_self_.ptr(), jule::Str("wrap exceptional with a non-exceptional function", 48),jule::Slice<jule::Any>());
		_186053_d=nullptr;
		return;;
	};
	if (_1e5e21665_IsBuiltin(_186117_f.ptr())) {
		_1e6a9ed81_callBuiltinFn(_self_, _186031_fc,_186053_d);
		return;;
	};
	if (((!(_1e5e1cd04_IsMethod(_186117_f.get()._field_Decl.ptr()))) && _1e6acd71c_hasDirective(_186117_f.get()._field_Decl.get()._field_Directives,jule::Str("test", 4)))) {
		_1e6a8cce7_pushErr(_self_.ptr(), _186031_fc.get()._field_Token,jule::Str("you cannot call test functions", 30),jule::Slice<jule::Any>());
		_186053_d=nullptr;
		return;;
	};
	if (((((!(_186053_d.get()._field_Mutable)) && _1e5e1cd04_IsMethod(_186117_f.get()._field_Decl.ptr())) && (!(_186117_f.get()._field_Decl.get()._field_Statically))) && _186117_f.get()._field_Decl.get()._field_Params[0LL].get()._field_Mutable)) {
		_1e6a8cce7_pushErr(_self_.ptr(), _186031_fc.get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	} else if (((!(_1e6a8d732_isUnsafe(_self_.ptr()))) && _186117_f.get()._field_Decl.get()._field_Unsafety)) {
		_1e6a8cce7_pushErr(_self_.ptr(), _186031_fc.get()._field_Token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	jule::Bool _188517_dynamicAnnotation = (((_186117_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_186117_f.get()._field_Generics.len() == 0LL)) && (_186117_f.get()._field_Params.len() > 0LL));;
	if (_188517_dynamicAnnotation) {
		_186117_f.get()._field_Generics=jule::Slice<jule::Ptr<_1e6ab535d_InsGeneric>>::alloc(_186117_f.get()._field_Decl.get()._field_Generics.len());
	} else if ((_186117_f.get()._field_Generics.len() != _186117_f.get()._field_Decl.get()._field_Generics.len())) {
		_1e6a2649a_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_186117_f.get()._field_Decl.get()._field_Generics.len()),static_cast<jule::I64>(_186117_f.get()._field_Generics.len()),_186031_fc.get()._field_Token);
		_186053_d=nullptr;
		return;;
	};
	jule::Ptr<_1e6a22441_Sema> _189417_old = _self_.get()._field_s;;
	if ((_186117_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		_self_.get()._field_s=_186117_f.get()._field_Decl.get()._field_Owner.get()._field_sema;
	};
	__JULE_DEFER({
		if ((_189417_old != _self_.get()._field_s)) {
			_189417_old.get()._field_errors=jule::append(_189417_old.get()._field_errors,_self_.get()._field_s.get()._field_errors);
			_self_.get()._field_s.get()._field_errors=nullptr;
		};
		_self_.get()._field_s=_189417_old;
	});;
	if ((!(_188517_dynamicAnnotation))) {
		if ((!(_186117_f.get()._field_reloaded))) {
			jule::Bool _190921_ok = _1e6a2cd53_reloadFnInsTypes(_self_.get()._field_s, _186117_f);;
			_186117_f.get()._field_reloaded=true;
			if ((!(_190921_ok))) {
				_186053_d=nullptr;
				return;;
			};
		};
		jule::Ptr<_1e5e202ce_FnIns> _191621_existInstance = _1e5e1e058_appendInstance(_186117_f.get()._field_Decl.ptr(), _186117_f);;
		if ((_191621_existInstance != nullptr)) {
			_186117_f=_191621_existInstance;
		};
	} else {
		_1e6a2b747_buildFnNonGenericTypeKinds(_self_.get()._field_s, _186117_f);
	};
	_1e6a7ca1d_fnCallArgChecker _192417_fcac = _1e6a7ca1d_fnCallArgChecker{._field_e=_self_, ._field_args=_186031_fc.get()._field_Args, ._field_errorToken=_186031_fc.get()._field_Token, ._field_f=_186117_f, ._field_dynamicAnnotation=_188517_dynamicAnnotation, };;
	jule::Bool _193117_ok = false;;
	if ((_186117_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		std::tie(_189417_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_189417_old);
		_193117_ok=_1e6a7edd8_check(&_192417_fcac);
		std::tie(_189417_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_189417_old);
	} else {
		_193117_ok=_1e6a7edd8_check(&_192417_fcac);
	};
	if (_188517_dynamicAnnotation) {
		if ((!(_193117_ok))) {
			_186053_d=nullptr;
			return;;
		};
		if ((!(_1e6a98c6a_checkGenericFn(_self_, _186117_f,_186031_fc.get()._field_Token,_186053_d.get()._field_Model)))) {
			_186053_d=nullptr;
			return;;
		};
	};
	jule::Any _195117_callModel = _186053_d.get()._field_Model;;
	if (_1e5e1ca90_IsVoid(_186117_f.get()._field_Decl.ptr())) {
		_186053_d=_1e6ab3416_buildVoidData();
	} else {
		_186053_d.get()._field_Kind=_186117_f.get()._field_Result;
		_186053_d.get()._field_Lvalue=false;
	};
	jule::Ptr<_1e5e1602d_FnCallExprModel> _196017_model = jule::new_ptr<_1e5e1602d_FnCallExprModel>(_1e5e1602d_FnCallExprModel{._field_Token=_186031_fc.get()._field_Token, ._field_Func=_186117_f, ._field_Expr=_195117_callModel, ._field_Args=_192417_fcac._field_argModels, });;
	_186053_d.get()._field_Model=static_cast<jule::Any>(_196017_model);
	_186053_d.get()._field_Mutable=true;
	if (_186117_f.get()._field_Decl.get()._field_Exceptional) {
		{
			
			if (_1e5d5d5b3_Unhandled(_186031_fc.ptr())) {
				_case_begin_1b299ab29:;
				{
					_1e6a8cce7_pushErr(_self_.ptr(), _186031_fc.get()._field_Token,jule::Str("exceptionals must be handled", 28),jule::Slice<jule::Any>());
					_1e6a8d116_pushSugggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47),jule::Slice<jule::Any>());
				}
			}
			else if (_1e5d5d827_Ignored(_186031_fc.ptr())) {
				_case_begin_1b298c5bb:;
				{
					goto _match_end_1b299a6a6;
				}
			}
			else {
				_case_begin_1b299a783:;
				{
					_1e6aa05bd_processExceptionalHandler(_self_.ptr(), _186117_f,_186031_fc,_186053_d);
				}
			}
			_match_end_1b299a6a6:;
		};
	} else if ((!(_1e5d5d5b3_Unhandled(_186031_fc.ptr())))) {
		_1e6a8cce7_pushErr(_self_.ptr(), _186031_fc.get()._field_Token,jule::Str("non-exceptionals cannot handled like exceptionals", 49),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa0c0b_evalFnCall(jule::Ptr<_1e6a8c7db_Eval> _self_, jule::Ptr<_1e5d5d250_FnCallExpr> _198634_fc) {
	jule::Ptr<_1e6ab6a8a_TypeKind> _198717_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_198717_prefix;
	});;
	{
		auto &_match_expr{ _198634_fc.get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e5d5aeea_IdentExpr>>()) {
			_case_begin_1b299d258:;
			{
				if ((_198634_fc.get()._field_Expr.get()._field_Token.get()._field_Kind == jule::Str("error", 5))) {
					return _1e6b41450_builtinCallerError(_self_,_198634_fc);
				};
			}
		}
		_match_end_1b299d203:;
	};
	jule::Ptr<_1e6a8ac6d_Data> _200017_d = _1e6aa7c13_evalExprKind(_self_, _198634_fc.get()._field_Expr.get()._field_Kind);;
	if ((_200017_d == nullptr)) {
		return nullptr;
	};
	if (_200017_d.get()._field_Decl) {
		_1e6a9ea62_callTypeFn(_self_, _198634_fc,_200017_d);
		return _200017_d;
	};
	if ((_1e6ab9d8a_Fn(_200017_d.get()._field_Kind.ptr()) == nullptr)) {
		_1e6a8cce7_pushErr(_self_.ptr(), _198634_fc.get()._field_Token,jule::Str("attempting to call a non-function", 33),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1e6aa08ed_callFn(_self_, _198634_fc,_200017_d);
	return _200017_d;
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa10b3_evalEnumStatic(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e5e31631_Enum> _201937_enm, jule::Ptr<_1e47137a5_Token> _201949_ident) {
	jule::Ptr<_1e6a8ac6d_Data> _202017_d = jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_201937_enm, 3)}), });;
	jule::Ptr<_1e5e30b3b_EnumItem> _202617_item = _1e5e321e2_FindItem(_201937_enm.ptr(), _201949_ident.get()._field_Kind);;
	if ((_202617_item == nullptr)) {
		_1e6a8cce7_pushErr(&(*_self_), _201949_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_201937_enm.get()._field_Ident),jule::Any(_201949_ident.get()._field_Kind)}));
	} else {
		_202017_d.get()._field_Constant=jule::new_ptr<_1e5da6ba0_Const>((*(_202617_item.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_202017_d.get()._field_Model=static_cast<jule::Any>(_202017_d.get()._field_Constant);
		_1e6ab3999_applyCastModelByEnum(_202017_d,_201937_enm);
	};
	return _202017_d;
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa146a_evalTypeEnumStatic(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e5e32c2b_TypeEnum> _203841_enm, jule::Ptr<_1e47137a5_Token> _203857_ident) {
	jule::Ptr<_1e5e32665_TypeEnumItem> _203917_item = _1e5e33765_FindItem(_203841_enm.ptr(), _203857_ident.get()._field_Kind);;
	if ((_203917_item == nullptr)) {
		_1e6a8cce7_pushErr(&(*_self_), _203857_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_203841_enm.get()._field_Ident),jule::Any(_203857_ident.get()._field_Kind)}));
		return nullptr;
	};
	{
		
		if ((_1e6ab93d9_Enum(_203917_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b29a6c23:;
			{
				return _1e6a9138e__evalEnum(&(*_self_), _1e6ab93d9_Enum(_203917_item.get()._field_Kind.get()._field_Kind.ptr()));
			}
		}
		else if ((_1e6ab964d_TypeEnum(_203917_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b29a6e21:;
			{
				return _1e6a91a54__evalTypeEnum(&(*_self_), _1e6ab964d_TypeEnum(_203917_item.get()._field_Kind.get()._field_Kind.ptr()));
			}
		}
		else if ((_1e6aba0ee_Struct(_203917_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b29a6140:;
			{
				return _1e6a92219__evalStruct(&(*_self_), _1e6aba0ee_Struct(_203917_item.get()._field_Kind.get()._field_Kind.ptr()));
			}
		}
		else {
			_case_begin_1b29a5392:;
			{
				jule::Ptr<_1e6a8ac6d_Data> _205221_d = jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=_203917_item.get()._field_Kind.get()._field_Kind, ._field_Decl=true, });;
				_205221_d.get()._field_Model=static_cast<jule::Any>(_205221_d.get()._field_Kind);
				return _205221_d;
			}
		}
		_match_end_1b29a533c:;
	};
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa1822_evalStructStatic(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e5d714d8_StructIns> _206139_s, jule::Ptr<_1e47137a5_Token> _206154_ident) {
	jule::Ptr<_1e6a8ac6d_Data> _206217_d = jule::new_ptr<_1e6a8ac6d_Data>();;
	;
	jule::Ptr<_1e5e1c62d_Fn> _206617_method = _1e5d4a33b_FindMethod(_206139_s.ptr(), _206154_ident.get()._field_Kind,true);;
	if ((_206617_method != nullptr)) {
		if ((!(_1e6a257c9_isAccessibleDefine((*_self_)._field_s.ptr(), _206617_method.get()._field_Public,_206617_method.get()._field_Token)))) {
			_1e6a8cce7_pushErr(&(*_self_), _206154_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_206154_ident.get()._field_Kind)}));
			_1e6a8d116_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_1e5e202ce_FnIns> _207321_ins = _1e5e1dc7d_instance(_206617_method);;
		_207321_ins.get()._field_Owner=_206139_s;
		_1b2868343_pushReference(&(*_self_), _207321_ins);
		_206217_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e5e174a2_StructStaticIdentExprModel>(_1e5e174a2_StructStaticIdentExprModel{._field_Structure=_206139_s, ._field_Expr=_206217_d.get()._field_Model, ._field_Method=_207321_ins}));
		_206217_d.get()._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_207321_ins, 1)});
		return _206217_d;
	};
	jule::Ptr<_1e6a3dd20_Var> _208717_sttc = _1e5d345ab_FindStatic(_206139_s.get()._field_Decl.ptr(), _206154_ident.get()._field_Kind);;
	if ((_208717_sttc != nullptr)) {
		return _1e6a94084_evalVar(&(*_self_), _208717_sttc,_206154_ident);
	};
	_1e6a8cce7_pushErr(&(*_self_), _206154_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_206139_s.get()._field_Decl.get()._field_Ident),jule::Any(_206154_ident.get()._field_Kind)}));
	return nullptr;
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa1c73_evalTraitSubIdent(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e6a8ac6d_Data> _209640_d, jule::Ptr<_1e5e2e4db_Trait> _209654_trt, jule::Ptr<_1e47137a5_Token> _209671_ident) {
	jule::Ptr<_1e5e1c62d_Fn> _209717_f = _1e5e30366_FindMethod(_209654_trt.ptr(), _209671_ident.get()._field_Kind);;
	if ((_209717_f == nullptr)) {
		_1e6a8cce7_pushErr(&(*_self_), _209671_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_209654_trt.get()._field_Ident),jule::Any(_209671_ident.get()._field_Kind)}));
		return nullptr;
	};
	return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e5e1dc7d_instance(_209717_f), 1)}), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e5e16d97_TraitSubIdentExprModel>(_1e5e16d97_TraitSubIdentExprModel{._field_Token=_209671_ident, ._field_Expr=_209640_d.get()._field_Model, ._field_Method=_209717_f, ._field_Trt=_209654_trt})), });
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa226d_evalStructSubIdent(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e6a8ac6d_Data> _211541_d, jule::Ptr<_1e5d714d8_StructIns> _211555_s, jule::Ptr<_1e5d5c78d_SubIdentExpr> _211574_si, jule::Bool _211593_ref) {
	jule::Ptr<_1e5d4c805_FieldIns> _211617_f = _1e5d4b65b_FindField(_211555_s.ptr(), _211574_si.get()._field_Ident.get()._field_Kind);;
	if ((_211617_f != nullptr)) {
		if ((!(_1e6a257c9_isAccessibleDefine((*_self_)._field_s.ptr(), _211617_f.get()._field_Decl.get()._field_Public,_211617_f.get()._field_Decl.get()._field_Token)))) {
			_1e6a8cce7_pushErr(&(*_self_), _211574_si.get()._field_Ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_211617_f.get()._field_Decl.get()._field_Ident)}));
			_1e6a8d116_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_1e5e172b5_StructSubIdentExprModel> _212321_model = jule::new_ptr<_1e5e172b5_StructSubIdentExprModel>(_1e5e172b5_StructSubIdentExprModel{._field_Token=_211574_si.get()._field_Ident, ._field_Expr=jule::new_ptr<_1e6a8ac6d_Data>((*(_211541_d))), ._field_ExprKind=_211541_d.get()._field_Kind, ._field_Field=_211617_f});;
		_211541_d.get()._field_Model=static_cast<jule::Any>(_212321_model);
		_211541_d.get()._field_Kind=_211617_f.get()._field_Kind;
		_211541_d.get()._field_Lvalue=true;
		if ((_211617_f.get()._field_Decl.get()._field_Mutable && (!(_211541_d.get()._field_Mutable)))) {
			{
				auto &_match_expr{ (*_self_)._field_lookup };
				
				if (_match_expr.type_is<jule::Ptr<_1e6a09505_scopeChecker>>()) {
					_case_begin_1b29b7c12:;
					{
						jule::Ptr<_1e6a09505_scopeChecker> _213725_scope = _1e6a0a8d0_getRoot((*_self_)._field_lookup.operator jule::Ptr<_1e6a09505_scopeChecker>());;
						_211541_d.get()._field_Mutable=((_213725_scope.get()._field_owner != nullptr) && (_213725_scope.get()._field_owner.get()._field_Owner == _211555_s));
					}
				}
				_match_end_1b29b7bac:;
			};
		};
		return _211541_d;
	};
	;
	jule::Ptr<_1e5e1c62d_Fn> _214617_m = _1e5d4a33b_FindMethod(_211555_s.ptr(), _211574_si.get()._field_Ident.get()._field_Kind,false);;
	if ((_214617_m == nullptr)) {
		_1e6a8cce7_pushErr(&(*_self_), _211574_si.get()._field_Ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_211555_s.get()._field_Decl.get()._field_Ident),jule::Any(_211574_si.get()._field_Ident.get()._field_Kind)}));
		return nullptr;
	};
	if ((!(_1e6a257c9_isAccessibleDefine((*_self_)._field_s.ptr(), _214617_m.get()._field_Public,_214617_m.get()._field_Token)))) {
		_1e6a8cce7_pushErr(&(*_self_), _211574_si.get()._field_Ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_214617_m.get()._field_Ident)}));
		_1e6a8d116_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	if ((_1e5e1b682_IsRef(_214617_m.get()._field_Params[0LL].ptr()) && (!(_211593_ref)))) {
		_1e6a8cce7_pushErr(&(*_self_), _211574_si.get()._field_Ident,jule::Str("reference method cannot use with non-reference instance", 55),jule::Slice<jule::Any>());
	};
	_1e6a92bed_checkDeprecated(&(*_self_), _214617_m.get()._field_Directives,_211574_si.get()._field_Ident);
	jule::Ptr<_1e5e202ce_FnIns> _216217_ins = _1e5e1dc7d_instance(_214617_m);;
	_216217_ins.get()._field_Owner=_211555_s;
	_1b2868343_pushReference(&(*_self_), _216217_ins);
	jule::Ptr<_1e6a8ac6d_Data> _216517_model = jule::new_ptr<_1e6a8ac6d_Data>((*(_211541_d)));;
	_211541_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e5e172b5_StructSubIdentExprModel>(_1e5e172b5_StructSubIdentExprModel{._field_Token=_211574_si.get()._field_Ident, ._field_Expr=_216517_model, ._field_ExprKind=_211541_d.get()._field_Kind, ._field_Method=_216217_ins, }));
	_211541_d.get()._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_216217_ins, 1)});
	return _211541_d;
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa2625_evalSliceSubIdent(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e6a8ac6d_Data> _217640_d, jule::Ptr<_1e47137a5_Token> _217654_ident) {
	{
		auto &_match_expr{ _217654_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1b29c1776:;
			{
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Mutable=false, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e5e17a68_CommonSubIdentExprModel>(_1e5e17a68_CommonSubIdentExprModel{._field_ExprKind=_217640_d.get()._field_Kind, ._field_Expr=_217640_d.get()._field_Model, ._field_Token=_217654_ident, ._field_Ident=jule::Str("len()", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1b29c17dc:;
			{
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Mutable=false, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e5e17a68_CommonSubIdentExprModel>(_1e5e17a68_CommonSubIdentExprModel{._field_ExprKind=_217640_d.get()._field_Kind, ._field_Expr=_217640_d.get()._field_Model, ._field_Token=_217654_ident, ._field_Ident=jule::Str("cap()", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1b29c1853:;
			{
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(jule::new_ptr<_1e5e202ce_FnIns>(_1e5e202ce_FnIns{._field_Params=jule::Slice<jule::Ptr<_1e5e1e410_ParamIns>>::make({jule::new_ptr<_1e5e1e410_ParamIns>(_1e5e1e410_ParamIns{._field_Decl=jule::new_ptr<_1e5e1ace1_Param>(_1e5e1ace1_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("int", 3)), 6)})}),jule::new_ptr<_1e5e1e410_ParamIns>(_1e5e1e410_ParamIns{._field_Decl=jule::new_ptr<_1e5e1ace1_Param>(_1e5e1ace1_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_1e6a8ac6d_Data>(jule::Ptr<_1e6a8c7db_Eval>&,jule::Ptr<_1e5d5d250_FnCallExpr>&,jule::Ptr<_1e6a8ac6d_Data>&)>(_1e6b66112_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_217640_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e5e17a68_CommonSubIdentExprModel>(_1e5e17a68_CommonSubIdentExprModel{._field_ExprKind=_217640_d.get()._field_Kind, ._field_Expr=_217640_d.get()._field_Model, ._field_Token=_217654_ident, ._field_Ident=jule::Str("swap", 4)})), });
			}
		}
		else {
			_case_begin_1b29c1710:;
			{
				_1e6a8cce7_pushErr(&(*_self_), _217654_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1e6ab6e86_Str(_217640_d.get()._field_Kind.ptr())),jule::Any(_217654_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1b29c14bd:;
	};
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa29cc_evalArraySubIdent(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e6a8ac6d_Data> _223540_d, jule::Ptr<_1e47137a5_Token> _223554_ident) {
	{
		auto &_match_expr{ _223554_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1b29c2a85:;
			{
				jule::Ptr<_1e5da6ba0_Const> _223821_c = static__1e5e0bc27_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1e6ab98b2_Arr(_223540_d.get()._field_Kind.ptr()).get()._field_N)));;
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_223821_c), ._field_Constant=_223821_c});
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1b29c798b:;
			{
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(jule::new_ptr<_1e5e202ce_FnIns>(_1e5e202ce_FnIns{._field_Params=jule::Slice<jule::Ptr<_1e5e1e410_ParamIns>>::make({jule::new_ptr<_1e5e1e410_ParamIns>(_1e5e1e410_ParamIns{._field_Decl=jule::new_ptr<_1e5e1ace1_Param>(_1e5e1ace1_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("int", 3)), 6)})}),jule::new_ptr<_1e5e1e410_ParamIns>(_1e5e1e410_ParamIns{._field_Decl=jule::new_ptr<_1e5e1ace1_Param>(_1e5e1ace1_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_1e6a8ac6d_Data>(jule::Ptr<_1e6a8c7db_Eval>&,jule::Ptr<_1e5d5d250_FnCallExpr>&,jule::Ptr<_1e6a8ac6d_Data>&)>(_1e6b66112_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_223540_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e5e17a68_CommonSubIdentExprModel>(_1e5e17a68_CommonSubIdentExprModel{._field_ExprKind=_223540_d.get()._field_Kind, ._field_Expr=_223540_d.get()._field_Model, ._field_Token=_223554_ident, ._field_Ident=jule::Str("swap", 4)})), });
			}
		}
		else {
			_case_begin_1b29c6968:;
			{
				_1e6a8cce7_pushErr(&(*_self_), _223554_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1e6ab6e86_Str(_223540_d.get()._field_Kind.ptr())),jule::Any(_223554_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1b29c68ad:;
	};
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa2d84_evalMapSubIdent(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e6a8ac6d_Data> _227938_d, jule::Ptr<_1e47137a5_Token> _227952_ident) {
	jule::Ptr<_1e6ac1d09_Map> _228017_mapKind = _1e6aba5c7_Map(_227938_d.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ _227952_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1b29cc74e:;
			{
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e5e17a68_CommonSubIdentExprModel>(_1e5e17a68_CommonSubIdentExprModel{._field_ExprKind=_227938_d.get()._field_Kind, ._field_Expr=_227938_d.get()._field_Model, ._field_Token=_227952_ident, ._field_Ident=jule::Str("len()", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("clear", 5)) {
			_case_begin_1b29cc7b5:;
			{
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(jule::new_ptr<_1e5e202ce_FnIns>(_1e5e202ce_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e6a8ac6d_Data>(jule::Ptr<_1e6a8c7db_Eval>&,jule::Ptr<_1e5d5d250_FnCallExpr>&,jule::Ptr<_1e6a8ac6d_Data>&)>(_1e6b66112_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_227938_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e5e17a68_CommonSubIdentExprModel>(_1e5e17a68_CommonSubIdentExprModel{._field_ExprKind=_227938_d.get()._field_Kind, ._field_Expr=_227938_d.get()._field_Model, ._field_Token=_227952_ident, ._field_Ident=jule::Str("clear", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("keys", 4)) {
			_case_begin_1b29cc62d:;
			{
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(jule::new_ptr<_1e5e202ce_FnIns>(_1e5e202ce_FnIns{._field_Result=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(jule::new_ptr<_1e6ac0753_Slc>(_1e6ac0753_Slc{._field_Elem=_228017_mapKind.get()._field_Key}), 8)}), ._field_caller=jule::Fn<jule::Ptr<_1e6a8ac6d_Data>(jule::Ptr<_1e6a8c7db_Eval>&,jule::Ptr<_1e5d5d250_FnCallExpr>&,jule::Ptr<_1e6a8ac6d_Data>&)>(_1e6b66112_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_227938_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e5e17a68_CommonSubIdentExprModel>(_1e5e17a68_CommonSubIdentExprModel{._field_ExprKind=_227938_d.get()._field_Kind, ._field_Expr=_227938_d.get()._field_Model, ._field_Token=_227952_ident, ._field_Ident=jule::Str("keys", 4)})), });
			}
		}
		else if (_match_expr == jule::Str("values", 6)) {
			_case_begin_1b29cc694:;
			{
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(jule::new_ptr<_1e5e202ce_FnIns>(_1e5e202ce_FnIns{._field_Result=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(jule::new_ptr<_1e6ac0753_Slc>(_1e6ac0753_Slc{._field_Elem=_228017_mapKind.get()._field_Val}), 8)}), ._field_caller=jule::Fn<jule::Ptr<_1e6a8ac6d_Data>(jule::Ptr<_1e6a8c7db_Eval>&,jule::Ptr<_1e5d5d250_FnCallExpr>&,jule::Ptr<_1e6a8ac6d_Data>&)>(_1e6b66112_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_227938_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e5e17a68_CommonSubIdentExprModel>(_1e5e17a68_CommonSubIdentExprModel{._field_ExprKind=_227938_d.get()._field_Kind, ._field_Expr=_227938_d.get()._field_Model, ._field_Token=_227952_ident, ._field_Ident=jule::Str("values", 6)})), });
			}
		}
		else if (_match_expr == jule::Str("has", 3)) {
			_case_begin_1b29cb8e6:;
			{
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(jule::new_ptr<_1e5e202ce_FnIns>(_1e5e202ce_FnIns{._field_Params=jule::Slice<jule::Ptr<_1e5e1e410_ParamIns>>::make({jule::new_ptr<_1e5e1e410_ParamIns>(_1e5e1e410_ParamIns{._field_Decl=jule::new_ptr<_1e5e1ace1_Param>(_1e5e1ace1_Param{._field_Ident=jule::Str("key", 3)}), ._field_Kind=_228017_mapKind.get()._field_Key})}), ._field_Result=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_caller=jule::Fn<jule::Ptr<_1e6a8ac6d_Data>(jule::Ptr<_1e6a8c7db_Eval>&,jule::Ptr<_1e5d5d250_FnCallExpr>&,jule::Ptr<_1e6a8ac6d_Data>&)>(_1e6b49e5e_builtinCallerCommon), }), 1)}), ._field_Mutable=_227938_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e5e17a68_CommonSubIdentExprModel>(_1e5e17a68_CommonSubIdentExprModel{._field_ExprKind=_227938_d.get()._field_Kind, ._field_Expr=_227938_d.get()._field_Model, ._field_Token=_227952_ident, ._field_Ident=jule::Str("has", 3)})), });
			}
		}
		else if (_match_expr == jule::Str("del", 3)) {
			_case_begin_1b29cb95c:;
			{
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(jule::new_ptr<_1e5e202ce_FnIns>(_1e5e202ce_FnIns{._field_Params=jule::Slice<jule::Ptr<_1e5e1e410_ParamIns>>::make({jule::new_ptr<_1e5e1e410_ParamIns>(_1e5e1e410_ParamIns{._field_Decl=jule::new_ptr<_1e5e1ace1_Param>(_1e5e1ace1_Param{._field_Ident=jule::Str("key", 3)}), ._field_Kind=_228017_mapKind.get()._field_Key})}), ._field_caller=jule::Fn<jule::Ptr<_1e6a8ac6d_Data>(jule::Ptr<_1e6a8c7db_Eval>&,jule::Ptr<_1e5d5d250_FnCallExpr>&,jule::Ptr<_1e6a8ac6d_Data>&)>(_1e6b66112_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_227938_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e5e17a68_CommonSubIdentExprModel>(_1e5e17a68_CommonSubIdentExprModel{._field_ExprKind=_227938_d.get()._field_Kind, ._field_Expr=_227938_d.get()._field_Model, ._field_Token=_227952_ident, ._field_Ident=jule::Str("del", 3)})), });
			}
		}
		else {
			_case_begin_1b29cb880:;
			{
				_1e6a8cce7_pushErr(&(*_self_), _227952_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1e6ac216c_Str(_228017_mapKind.ptr())),jule::Any(_227952_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1b29cb7d6:;
	};
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa323b_evalStrSubIdent(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e6a8ac6d_Data> _240138_d, jule::Ptr<_1e47137a5_Token> _240152_ident) {
	jule::Ptr<_1e6ab6a8a_TypeKind> _240217_strKind = jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("str", 3)), 6)});;
	{
		auto &_match_expr{ _240152_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1b29d600a:;
			{
				jule::Ptr<_1e6a8ac6d_Data> _240521_sd = jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("int", 3)), 6)}), });;
				if (_1e6a8b631_IsConst(_240138_d.ptr())) {
					_240521_sd.get()._field_Constant=static__1e5e0bc27_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1e5e0d564_ReadStr(_240138_d.get()._field_Constant.ptr()).len())));
					_240521_sd.get()._field_Model=static_cast<jule::Any>(_240521_sd.get()._field_Constant);
				} else {
					_240521_sd.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e5e17a68_CommonSubIdentExprModel>(_1e5e17a68_CommonSubIdentExprModel{._field_ExprKind=_240138_d.get()._field_Kind, ._field_Expr=_240138_d.get()._field_Model, ._field_Token=_240152_ident, ._field_Ident=jule::Str("len()", 5)}));
				};
				return _240521_sd;
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1b29d6071:;
			{
				jule::Ptr<_1e6a8ac6d_Data> _242121_sd = jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("int", 3)), 6)}), });;
				if (_1e6a8b631_IsConst(_240138_d.ptr())) {
					_242121_sd.get()._field_Constant=static__1e5e0bc27_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1e5e0d564_ReadStr(_240138_d.get()._field_Constant.ptr()).cap())));
					_242121_sd.get()._field_Model=static_cast<jule::Any>(_242121_sd.get()._field_Constant);
				} else {
					_242121_sd.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e5e17a68_CommonSubIdentExprModel>(_1e5e17a68_CommonSubIdentExprModel{._field_ExprKind=_240138_d.get()._field_Kind, ._field_Expr=_240138_d.get()._field_Model, ._field_Token=_240152_ident, ._field_Ident=jule::Str("cap()", 5)}));
				};
				return _242121_sd;
			}
		}
		else {
			_case_begin_1b29d5e94:;
			{
				_1e6a8cce7_pushErr(&(*_self_), _240152_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1e6ab6e86_Str(_240217_strKind.ptr())),jule::Any(_240152_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1b29d5dea:;
	};
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa3549_evalIntTypeStatic(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e47137a5_Token> _244236_ident) {
	;
	{
		auto &_match_expr{ _244236_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b29dbede:;
			{
				jule::Ptr<_1e5da6ba0_Const> _244721_c = static__1e5e0bc27_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1e63bcc43_Max(jule::Str("int", 3)))));;
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_244721_c), ._field_Constant=_244721_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1b29dce8a:;
			{
				jule::Ptr<_1e5da6ba0_Const> _245421_c = static__1e5e0bc27_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1e63b4e16_Min(jule::Str("int", 3)))));;
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_245421_c), ._field_Constant=_245421_c});
			}
		}
		else {
			_case_begin_1b29dc1cb:;
			{
				_1e6a8cce7_pushErr(&(*_self_), _244236_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("int", 3)),jule::Any(_244236_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1b29dc176:;
	};
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa3857_evalUintTypeStatic(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e47137a5_Token> _246637_ident) {
	;
	{
		auto &_match_expr{ _246637_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b29e0ad6:;
			{
				jule::Ptr<_1e5da6ba0_Const> _247121_c = static__1e5e0bd59_NewU64(static_cast<jule::U64>(static_cast<jule::U64>(_1e63bcc43_Max(jule::Str("uint", 4)))));;
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("uint", 4)), 6)}), ._field_Model=static_cast<jule::Any>(_247121_c), ._field_Constant=_247121_c});
			}
		}
		else {
			_case_begin_1b29e0a3c:;
			{
				_1e6a8cce7_pushErr(&(*_self_), _246637_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("uint", 4)),jule::Any(_246637_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1b29e09d7:;
	};
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa3b65_evalI8TypeStatic(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e47137a5_Token> _248335_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _248335_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b29e3ad9:;
			{
				jule::Ptr<_1e5da6ba0_Const> _249021_c = static__1e5e0bc27_NewI64(127LL);;
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("i8", 2)), 6)}), ._field_Model=static_cast<jule::Any>(_249021_c), ._field_Constant=_249021_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1b29e3b50:;
			{
				jule::Ptr<_1e5da6ba0_Const> _249721_c = static__1e5e0bc27_NewI64(-128LL);;
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("i8", 2)), 6)}), ._field_Model=static_cast<jule::Any>(_249721_c), ._field_Constant=_249721_c});
			}
		}
		else {
			_case_begin_1b29e3a2e:;
			{
				_1e6a8cce7_pushErr(&(*_self_), _248335_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i8", 2)),jule::Any(_248335_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1b29e39c9:;
	};
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa3e73_evalI16TypeStatic(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e47137a5_Token> _250936_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _250936_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b29e77be:;
			{
				jule::Ptr<_1e5da6ba0_Const> _251621_c = static__1e5e0bc27_NewI64(32767LL);;
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("i16", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_251621_c), ._field_Constant=_251621_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1b29e7835:;
			{
				jule::Ptr<_1e5da6ba0_Const> _252321_c = static__1e5e0bc27_NewI64(-32768LL);;
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("i16", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_252321_c), ._field_Constant=_252321_c});
			}
		}
		else {
			_case_begin_1b29e7714:;
			{
				_1e6a8cce7_pushErr(&(*_self_), _250936_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i16", 3)),jule::Any(_250936_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1b29e76ae:;
	};
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa4281_evalI32TypeStatic(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e47137a5_Token> _253536_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _253536_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b29eb4a4:;
			{
				jule::Ptr<_1e5da6ba0_Const> _254221_c = static__1e5e0bc27_NewI64(2147483647LL);;
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("i32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_254221_c), ._field_Constant=_254221_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1b29eb51a:;
			{
				jule::Ptr<_1e5da6ba0_Const> _254921_c = static__1e5e0bc27_NewI64(-2147483648LL);;
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("i32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_254921_c), ._field_Constant=_254921_c});
			}
		}
		else {
			_case_begin_1b29eb3e9:;
			{
				_1e6a8cce7_pushErr(&(*_self_), _253536_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i32", 3)),jule::Any(_253536_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1b29eb394:;
	};
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa458e_evalI64TypeStatic(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e47137a5_Token> _256136_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _256136_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b2a00189:;
			{
				jule::Ptr<_1e5da6ba0_Const> _256821_c = static__1e5e0bc27_NewI64(jule::MAX_I64);;
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("i64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_256821_c), ._field_Constant=_256821_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1b2a00200:;
			{
				jule::Ptr<_1e5da6ba0_Const> _257521_c = static__1e5e0bc27_NewI64(jule::MIN_I64);;
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("i64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_257521_c), ._field_Constant=_257521_c});
			}
		}
		else {
			_case_begin_1b2a000ce:;
			{
				_1e6a8cce7_pushErr(&(*_self_), _256136_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i64", 3)),jule::Any(_256136_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1b2a00079:;
	};
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa489c_evalU8TypeStatic(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e47137a5_Token> _258735_ident) {
	;
	;
	{
		auto &_match_expr{ _258735_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b2a038eb:;
			{
				jule::Ptr<_1e5da6ba0_Const> _259321_c = static__1e5e0bd59_NewU64(255LLU);;
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("u8", 2)), 6)}), ._field_Model=static_cast<jule::Any>(_259321_c), ._field_Constant=_259321_c});
			}
		}
		else {
			_case_begin_1b2a02de5:;
			{
				_1e6a8cce7_pushErr(&(*_self_), _258735_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u8", 2)),jule::Any(_258735_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1b2a03797:;
	};
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa4baa_evalU16TypeStatic(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e47137a5_Token> _260536_ident) {
	;
	;
	{
		auto &_match_expr{ _260536_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b2a062a0:;
			{
				jule::Ptr<_1e5da6ba0_Const> _261121_c = static__1e5e0bd59_NewU64(65535LLU);;
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("u16", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_261121_c), ._field_Constant=_261121_c});
			}
		}
		else {
			_case_begin_1b2a05799:;
			{
				_1e6a8cce7_pushErr(&(*_self_), _260536_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u16", 3)),jule::Any(_260536_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1b2a0614b:;
	};
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa4eb8_evalU32TypeStatic(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e47137a5_Token> _262336_ident) {
	;
	;
	{
		auto &_match_expr{ _262336_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b2a08b54:;
			{
				jule::Ptr<_1e5da6ba0_Const> _262921_c = static__1e5e0bd59_NewU64(4294967295LLU);;
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("u32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_262921_c), ._field_Constant=_262921_c});
			}
		}
		else {
			_case_begin_1b2a0814d:;
			{
				_1e6a8cce7_pushErr(&(*_self_), _262336_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u32", 3)),jule::Any(_262336_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1b2a08a00:;
	};
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa52c6_evalU64TypeStatic(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e47137a5_Token> _264136_ident) {
	;
	;
	{
		auto &_match_expr{ _264136_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b2a0b508:;
			{
				jule::Ptr<_1e5da6ba0_Const> _264721_c = static__1e5e0bd59_NewU64(jule::MAX_U64);;
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("u64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_264721_c), ._field_Constant=_264721_c});
			}
		}
		else {
			_case_begin_1b2a0aa02:;
			{
				_1e6a8cce7_pushErr(&(*_self_), _264136_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u64", 3)),jule::Any(_264136_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1b2a0b3a4:;
	};
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa55d4_evalF32TypeStatic(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e47137a5_Token> _265936_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _265936_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b2a0e682:;
			{
				jule::Ptr<_1e5da6ba0_Const> _266721_c = static__1e5e0c530_NewF64(340282346638528860000000000000000000000.0);;
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_266721_c), ._field_Constant=_266721_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1b2a0e6e8:;
			{
				jule::Ptr<_1e5da6ba0_Const> _267421_c = static__1e5e0c530_NewF64(-340282346638528860000000000000000000000.0);;
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_267421_c), ._field_Constant=_267421_c});
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1b2a0e75e:;
			{
				jule::Ptr<_1e5da6ba0_Const> _268121_c = static__1e5e0c530_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_268121_c), ._field_Constant=_268121_c});
			}
		}
		else {
			_case_begin_1b2a0e583:;
			{
				_1e6a8cce7_pushErr(&(*_self_), _265936_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f32", 3)),jule::Any(_265936_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1b2a0e51c:;
	};
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa58e2_evalF64TypeStatic(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e47137a5_Token> _269336_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _269336_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b2a145ee:;
			{
				jule::Ptr<_1e5da6ba0_Const> _270121_c = static__1e5e0c530_NewF64(jule::MAX_F64);;
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_270121_c), ._field_Constant=_270121_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1b2a14665:;
			{
				jule::Ptr<_1e5da6ba0_Const> _270821_c = static__1e5e0c530_NewF64(jule::MIN_F64);;
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_270821_c), ._field_Constant=_270821_c});
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1b2a146cb:;
			{
				jule::Ptr<_1e5da6ba0_Const> _271521_c = static__1e5e0c530_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_271521_c), ._field_Constant=_271521_c});
			}
		}
		else {
			_case_begin_1b2a14500:;
			{
				_1e6a8cce7_pushErr(&(*_self_), _269336_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f64", 3)),jule::Any(_269336_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1b2a14489:;
	};
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa5c99_evalPrimStatic(_1e6a8c7db_Eval* _self_, jule::Str _272733_kind, jule::Ptr<_1e47137a5_Token> _272744_ident) {
	{
		auto &_match_expr{ _272733_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1b2a18625:;
			{
				return _1e6aa3549_evalIntTypeStatic(&(*_self_), _272744_ident);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1b2a1868b:;
			{
				return _1e6aa3857_evalUintTypeStatic(&(*_self_), _272744_ident);
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1b2a1902c:;
			{
				return _1e6aa3b65_evalI8TypeStatic(&(*_self_), _272744_ident);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1b2a19093:;
			{
				return _1e6aa3e73_evalI16TypeStatic(&(*_self_), _272744_ident);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1b2a19109:;
			{
				return _1e6aa4281_evalI32TypeStatic(&(*_self_), _272744_ident);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1b2a19170:;
			{
				return _1e6aa458e_evalI64TypeStatic(&(*_self_), _272744_ident);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1b2a191d6:;
			{
				return _1e6aa489c_evalU8TypeStatic(&(*_self_), _272744_ident);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1b2a19291:;
			{
				return _1e6aa4baa_evalU16TypeStatic(&(*_self_), _272744_ident);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1b2a19307:;
			{
				return _1e6aa4eb8_evalU32TypeStatic(&(*_self_), _272744_ident);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1b2a1936d:;
			{
				return _1e6aa52c6_evalU64TypeStatic(&(*_self_), _272744_ident);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1b2a193d4:;
			{
				return _1e6aa55d4_evalF32TypeStatic(&(*_self_), _272744_ident);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1b2a1944a:;
			{
				return _1e6aa58e2_evalF64TypeStatic(&(*_self_), _272744_ident);
			}
		}
		else {
			_case_begin_1b2a17b52:;
			{
				_1e6a8cce7_pushErr(&(*_self_), _272744_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_272733_kind),jule::Any(_272744_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1b2a184b0:;
	};
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa6151_evalTypeStatic(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e6a8ac6d_Data> _275937_d, jule::Ptr<_1e5d5c78d_SubIdentExpr> _275951_si) {
	{
		
		if ((_1e6ab8b9c_Prim(_275937_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2a1d8c2:;
			{
				return _1e6aa5c99_evalPrimStatic(&(*_self_), _1e6abb8c5_Str(_1e6ab8b9c_Prim(_275937_d.get()._field_Kind.ptr()).ptr()),_275951_si.get()._field_Ident);
			}
		}
		else if ((_1e6ab93d9_Enum(_275937_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2a1d938:;
			{
				return _1e6aa10b3_evalEnumStatic(&(*_self_), _1e6ab93d9_Enum(_275937_d.get()._field_Kind.ptr()),_275951_si.get()._field_Ident);
			}
		}
		else if ((_1e6ab964d_TypeEnum(_275937_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2a1d99e:;
			{
				return _1e6aa146a_evalTypeEnumStatic(&(*_self_), _1e6ab964d_TypeEnum(_275937_d.get()._field_Kind.ptr()),_275951_si.get()._field_Ident);
			}
		}
		else if ((_1e6aba0ee_Struct(_275937_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2a1da15:;
			{
				return _1e6aa1822_evalStructStatic(&(*_self_), _1e6aba0ee_Struct(_275937_d.get()._field_Kind.ptr()),_275951_si.get()._field_Ident);
			}
		}
		else {
			_case_begin_1b2a1d85b:;
			{
				_1e6a8cce7_pushErr(&(*_self_), _275951_si.get()._field_Ident,jule::Str("type @ is not supports sub-defines", 34),jule::Slice<jule::Any>::make({jule::Any(_1e6ab6e86_Str(_275937_d.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1b2a1d7a1:;
	};
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa6508_evalObjSubIdent(_1e6a8c7db_Eval* _self_, jule::Ptr<_1e6a8ac6d_Data> _277538_d, jule::Ptr<_1e5d5c78d_SubIdentExpr> _277552_si) {
	if (_1e4716049_IsIgnoreIdent(_277552_si.get()._field_Ident.get()._field_Kind)) {
		_1e6a8cce7_pushErr(&(*_self_), _277552_si.get()._field_Ident,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e6ab6a8a_TypeKind> _278117_kind = _277538_d.get()._field_Kind;;
	{
		
		if ((_1e6ab9175_Ptr(_277538_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2a24587:;
			{
				jule::Ptr<_1e6ac335a_Ptr> _278417_ptr = _1e6ab9175_Ptr(_277538_d.get()._field_Kind.ptr());;
				if (_1e6ac3d2d_IsUnsafe(_278417_ptr.ptr())) {
					goto _match_end_1b2a24433;
				};
				if (((!(_277552_si.get()._field_IsSelf)) && (!(_1e6a8d732_isUnsafe(&(*_self_)))))) {
					_1e6a8cce7_pushErr(&(*_self_), _277552_si.get()._field_Ident,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				_278117_kind=_1e6ab9175_Ptr(_277538_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else if ((_1e6ab8e11_Sptr(_277538_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2a245ed:;
			{
				_278117_kind=_1e6ab8e11_Sptr(_277538_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		_match_end_1b2a24433:;
	};
	{
		
		if ((_1e6aba363_Trait(_277538_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2a2706d:;
			{
				return _1e6aa1c73_evalTraitSubIdent(&(*_self_), _277538_d,_1e6aba363_Trait(_277538_d.get()._field_Kind.ptr()),_277552_si.get()._field_Ident);
			}
		}
		else if ((_1e6aba0ee_Struct(_278117_kind.ptr()) != nullptr)) {
			_case_begin_1b2a270e5:;
			{
				jule::Ptr<_1e5d714d8_StructIns> _280017_s = _1e6aba0ee_Struct(_278117_kind.ptr());;
				if (_1e6ab2954_isInstancedStruct(_280017_s)) {
					jule::Bool _280225_usedReferenceElem = (_1e6ab8e11_Sptr(_277538_d.get()._field_Kind.ptr()) != nullptr);;
					return _1e6aa226d_evalStructSubIdent(&(*_self_), _277538_d,_1e6aba0ee_Struct(_278117_kind.ptr()),_277552_si,_280225_usedReferenceElem);
				};
			}
		}
		else if ((_1e6ab9b26_Slc(_278117_kind.ptr()) != nullptr)) {
			_case_begin_1b2a2716c:;
			{
				return _1e6aa2625_evalSliceSubIdent(&(*_self_), _277538_d,_277552_si.get()._field_Ident);
			}
		}
		else if ((_1e6ab98b2_Arr(_278117_kind.ptr()) != nullptr)) {
			_case_begin_1b2a271e4:;
			{
				return _1e6aa29cc_evalArraySubIdent(&(*_self_), _277538_d,_277552_si.get()._field_Ident);
			}
		}
		else if ((_1e6aba5c7_Map(_278117_kind.ptr()) != nullptr)) {
			_case_begin_1b2a27755:;
			{
				return _1e6aa2d84_evalMapSubIdent(&(*_self_), _277538_d,_277552_si.get()._field_Ident);
			}
		}
		else if ((_1e6ab8b9c_Prim(_278117_kind.ptr()) != nullptr)) {
			_case_begin_1b2a277cc:;
			{
				jule::Ptr<_1e6abb562_Prim> _281217_p = _1e6ab8b9c_Prim(_278117_kind.ptr());;
				{
					auto &_match_expr{ _281217_p.get()._field_Kind };
					
					if (_match_expr == jule::Str("str", 3)) {
						_case_begin_1b2a2ceca:;
						{
							return _1e6aa323b_evalStrSubIdent(&(*_self_), _277538_d,_277552_si.get()._field_Ident);
						}
					}
					_match_end_1b2a2cd21:;
				};
			}
		}
		_match_end_1b2a26e6e:;
	};
	_1e6a8cce7_pushErr(&(*_self_), _277552_si.get()._field_Ident,jule::Str("object @ is not supports sub-defines", 36),jule::Slice<jule::Any>::make({jule::Any(_1e6ab6e86_Str(_277538_d.get()._field_Kind.ptr()))}));
	return nullptr;
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa6816_evalSubIdent(jule::Ptr<_1e6a8c7db_Eval> _self_, jule::Ptr<_1e5d5c78d_SubIdentExpr> _282236_si) {
	jule::Ptr<_1e6ab6a8a_TypeKind> _282317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_282317_prefix;
	});;
	jule::Ptr<_1e6a8ac6d_Data> _282717_d = _1e6aa7c13_evalExprKind(_self_, _282236_si.get()._field_Expr.get()._field_Kind);;
	if ((_282717_d == nullptr)) {
		return nullptr;
	};
	if (_282717_d.get()._field_Decl) {
		return _1e6aa6151_evalTypeStatic(_self_.ptr(), _282717_d,_282236_si);
	};
	return _1e6aa6508_evalObjSubIdent(_self_.ptr(), _282717_d,_282236_si);
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa6b24_evalTuple(jule::Ptr<_1e6a8c7db_Eval> _self_, jule::Ptr<_1e5d59b0e_TupleExpr> _283933_tup) {
	jule::Ptr<_1e6ac12d1_Tuple> _284017_tupT = jule::new_ptr<_1e6ac12d1_Tuple>();;
	_284017_tupT.get()._field_Types=jule::Slice<jule::Ptr<_1e6ab6a8a_TypeKind>>::alloc(0LL,_283933_tup.get()._field_Expr.len());
	jule::Ptr<_1e5e17c55_TupleExprModel> _284317_model = jule::new_ptr<_1e5e17c55_TupleExprModel>(_1e5e17c55_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_1e6a8ac6d_Data>>::alloc(0LL,_283933_tup.get()._field_Expr.len())});;
	jule::Bool _284717_ok = true;;
	{
		auto &expr = _283933_tup.get()._field_Expr;
		auto it = expr.begin();
		_iter_begin_1b2a33178:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d58e82_Expr> _284821_expr = *it;
			{
				jule::Ptr<_1e6a8ac6d_Data> _284921_d = _1e6aa7c13_evalExprKind(_self_, _284821_expr.get()._field_Kind);;
				if ((_284921_d == nullptr)) {
					_284717_ok=false;
					goto _iter_next_1b2a33178;
				};
				_284017_tupT.get()._field_Types = jule::alloc_for_append(_284017_tupT.get()._field_Types,1);_284017_tupT.get()._field_Types.__push(_284921_d.get()._field_Kind);;
				_284317_model.get()._field_Datas = jule::alloc_for_append(_284317_model.get()._field_Datas,1);_284317_model.get()._field_Datas.__push(_284921_d);;
			}
			_iter_next_1b2a33178:;
			++it;
			goto _iter_begin_1b2a33178;
		}
		_iter_end_1b2a33178:;
	};
	if ((!(_284717_ok))) {
		return nullptr;
	};
	return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_284017_tupT, 9)}), ._field_Model=static_cast<jule::Any>(_284317_model), });
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa6ecb_evalMap(jule::Ptr<_1e6a8c7db_Eval> _self_, jule::Ptr<_1e6ac1d09_Map> _286831_m, jule::Ptr<_1e5d5e8a0_BraceLit> _286844_lit) {
	jule::Ptr<_1e5e169bd_MapExprModel> _286917_model = jule::new_ptr<_1e5e169bd_MapExprModel>(_1e5e169bd_MapExprModel{._field_KeyKind=_286831_m.get()._field_Key, ._field_ValKind=_286831_m.get()._field_Val, });;
	{
		auto &expr = _286844_lit.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1b2a36500:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d58e82_Expr> _287421_expr = *it;
			{
				{
					auto &_match_expr{ _287421_expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_1e5d603b7_KeyValPair>>()) {
						_case_begin_1b2a37039:;
						{
							goto _match_end_1b2a36d19;
						}
					}
					else {
						_case_begin_1b2a36e90:;
						{
							_1e6a8cce7_pushErr(_self_.ptr(), _286844_lit.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							return nullptr;
						}
					}
					_match_end_1b2a36d19:;
				};
				jule::Ptr<_1e5d603b7_KeyValPair> _288421_pair = _287421_expr.get()._field_Kind.operator jule::Ptr<_1e5d603b7_KeyValPair>();;
				jule::Ptr<_1e6a8ac6d_Data> _288621_key = _1e6aa7c13_evalExprKind(_self_, _288421_pair.get()._field_Key.get()._field_Kind);;
				if ((_288621_key == nullptr)) {
					return nullptr;
				};
				jule::Ptr<_1e6a8ac6d_Data> _289121_val = _1e6aa7c13_evalExprKind(_self_, _288421_pair.get()._field_Val.get()._field_Kind);;
				if ((_289121_val == nullptr)) {
					return nullptr;
				};
				_1e6a2ab64_checkAssignType(_self_.get()._field_s, false,_286831_m.get()._field_Key,_288621_key,_288421_pair.get()._field_Colon);
				_1e6a2ab64_checkAssignType(_self_.get()._field_s, false,_286831_m.get()._field_Val,_289121_val,_288421_pair.get()._field_Colon);
				_286917_model.get()._field_Entries = jule::alloc_for_append(_286917_model.get()._field_Entries,1);_286917_model.get()._field_Entries.__push(jule::new_ptr<_1e5e167d1_KeyValPairExprModel>(_1e5e167d1_KeyValPairExprModel{._field_Key=_288621_key.get()._field_Model, ._field_Val=_289121_val.get()._field_Model}));;
			}
			_iter_next_1b2a36500:;
			++it;
			goto _iter_begin_1b2a36500;
		}
		_iter_end_1b2a36500:;
	};
	return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_286831_m, 10)}), ._field_Mutable=true, ._field_Model=static_cast<jule::Any>(_286917_model), });
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa72d9_evalBraceLit(jule::Ptr<_1e6a8c7db_Eval> _self_, jule::Ptr<_1e5d5e8a0_BraceLit> _291236_lit) {
	{
		
		if ((_self_.get()._field_prefix == nullptr)) {
			_case_begin_1b2a3b802:;
			{
				_1e6a8cce7_pushErr(_self_.ptr(), _291236_lit.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else if ((_1e6aba5c7_Map(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1b2a3b868:;
			{
				return _1e6aa6ecb_evalMap(_self_, _1e6aba5c7_Map(_self_.get()._field_prefix.ptr()),_291236_lit);
			}
		}
		else if ((_1e6aba0ee_Struct(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1b2a3b8ce:;
			{
				return _1e6a9e127_evalStructLitExplicit(_self_, _1e6aba0ee_Struct(_self_.get()._field_prefix.ptr()),_291236_lit.get()._field_Exprs,_291236_lit.get()._field_Token);
			}
		}
		else {
			_case_begin_1b2a3b747:;
			{
				_1e6a8cce7_pushErr(_self_.ptr(), _291236_lit.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1b2a3b66a:;
	};
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa75e7_evalAnonFn(jule::Ptr<_1e6a8c7db_Eval> _self_, jule::Ptr<_1e5d66775_FnDecl> _292734_decl) {
	_1e6ac4ee9_typeChecker _292817_tc = _1e6ac4ee9_typeChecker{._field_s=_self_.get()._field_s, ._field_lookup=_self_.get()._field_lookup, };;
	jule::Ptr<_1e5e202ce_FnIns> _293217_ins = _1e6acb83b_buildFn(&_292817_tc, _292734_decl);;
	{
		auto &_match_expr{ _self_.get()._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1e6a09505_scopeChecker>>()) {
			_case_begin_1b2a3d419:;
			{
				jule::Ptr<_1e6a09505_scopeChecker> _293521_sc = _self_.get()._field_lookup.operator jule::Ptr<_1e6a09505_scopeChecker>();;
				jule::Ptr<_1e6a09505_scopeChecker> _293621_scc = _1e6a12aa2_newChildChecker(_293521_sc);;
				_293621_scc.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1e6a0912b_scopeLabel>>>(nullptr);
				_293621_scc.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1e6a09318_scopeGoto>>>(nullptr);
				_293621_scc.get()._field_owner=nullptr;
				_293621_scc.get()._field_childIndex=0LL;
				_293621_scc.get()._field_it=0LLU;
				_293621_scc.get()._field_cse=0LLU;
				_293621_scc.get()._field_owner=_293217_ins;
				_1e6a3936a_checkFnInsSc(_self_.get()._field_s.ptr(), _293217_ins,_293621_scc);
			}
		}
		else {
			_case_begin_1b2a40ac0:;
			{
				_1e6a3990e_checkFnIns(_self_.get()._field_s, _293217_ins);
			}
		}
		_match_end_1b2a4099e:;
	};
	return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_293217_ins, 1)}), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e5e165e4_AnonFnExprModel>(_1e5e165e4_AnonFnExprModel{._field_Func=_293217_ins, ._field_Global=_1e6a8d996_isGlobal(_self_.ptr())})), });
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa7905_evalBinop(jule::Ptr<_1e6a8c7db_Eval> _self_, jule::Ptr<_1e5d5cc11_BinopExpr> _295833_op) {
	_1e6aaa540_binaryEval _295917_bs = static__1e6aaab06_newPlain(_self_);;
	if ((_self_.get()._field_prefix != nullptr)) {
		jule::Ptr<_1e6abb562_Prim> _296217_prim = _1e6ab8b9c_Prim(_self_.get()._field_prefix.ptr());;
		if (((_296217_prim == nullptr) || (!(_1e6a062b0_IsNum(_1e6abb8c5_Str(_296217_prim.ptr())))))) {
			jule::Ptr<_1e6ab6a8a_TypeKind> _296425_prefix = _self_.get()._field_prefix;;
			_self_.get()._field_prefix=nullptr;
			__JULE_DEFER({
				_self_.get()._field_prefix=_296425_prefix;
			});;
			return _1e6ab0dd6_eval(&_295917_bs, _295833_op);
		};
	};
	return _1e6ab0dd6_eval(&_295917_bs, _295833_op);
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa7c13_evalExprKind(jule::Ptr<_1e6a8c7db_Eval> _self_, jule::Any _297336_kind) {
	{
		auto &_match_expr{ _297336_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e5d5926d_RangeExpr>>()) {
			_case_begin_1b2a47d4c:;
			{
				jule::Ptr<_1e5d5926d_RangeExpr> _297621_e = _297336_kind.operator jule::Ptr<_1e5d5926d_RangeExpr>();;
				return _1e6aa7c13_evalExprKind(_self_, _297621_e.get()._field_Expr.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d59eb6_LitExpr>>()) {
			_case_begin_1b2a47ec3:;
			{
				return _1e6a90646_evalLit(_self_.ptr(), _297336_kind.operator jule::Ptr<_1e5d59eb6_LitExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d5aeea_IdentExpr>>()) {
			_case_begin_1b2a48039:;
			{
				return _1e6a94b01_evalIdent(_self_.ptr(), _297336_kind.operator jule::Ptr<_1e5d5aeea_IdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d5b704_UnaryExpr>>()) {
			_case_begin_1b2a480a0:;
			{
				return _1e6a94e0e_evalUnary(_self_, _297336_kind.operator jule::Ptr<_1e5d5b704_UnaryExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d5baab_VariadicExpr>>()) {
			_case_begin_1b2a48116:;
			{
				return _1e6a9521c_evalVariadic(_self_, _297336_kind.operator jule::Ptr<_1e5d5baab_VariadicExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d5a6c0_UnsafeExpr>>()) {
			_case_begin_1b2a4817c:;
			{
				return _1e6a9552a_evalUnsafe(_self_, _297336_kind.operator jule::Ptr<_1e5d5a6c0_UnsafeExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d6083a_SliceExpr>>()) {
			_case_begin_1b2a48204:;
			{
				return _1e6a96097_evalSliceExpr(_self_, _297336_kind.operator jule::Ptr<_1e5d6083a_SliceExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d611cb_IndexingExpr>>()) {
			_case_begin_1b2a482ae:;
			{
				return _1e6a993ca_evalIndexing(_self_, _297336_kind.operator jule::Ptr<_1e5d611cb_IndexingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d617d6_SlicingExpr>>()) {
			_case_begin_1b2a48325:;
			{
				return _1e6a9a596_evalSlicing(_self_, _297336_kind.operator jule::Ptr<_1e5d617d6_SlicingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d5be63_CastExpr>>()) {
			_case_begin_1b2a4838b:;
			{
				return _1e6a9d8b8_evalCast(_self_, _297336_kind.operator jule::Ptr<_1e5d5be63_CastExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d5c31a_NsSelectionExpr>>()) {
			_case_begin_1b2a48402:;
			{
				return _1e6a9dbc6_evalNsSelection(_self_.ptr(), _297336_kind.operator jule::Ptr<_1e5d5c31a_NsSelectionExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d5e42c_StructLit>>()) {
			_case_begin_1b2a48479:;
			{
				return _1e6a9e435_evalStructLit(_self_, _297336_kind.operator jule::Ptr<_1e5d5e42c_StructLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d54961_TypeDecl>>()) {
			_case_begin_1b2a48501:;
			{
				return _1e6a9e743_evalType(_self_.ptr(), _297336_kind.operator jule::Ptr<_1e5d54961_TypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d5d250_FnCallExpr>>()) {
			_case_begin_1b2a48578:;
			{
				return _1e6aa0c0b_evalFnCall(_self_, _297336_kind.operator jule::Ptr<_1e5d5d250_FnCallExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d5c78d_SubIdentExpr>>()) {
			_case_begin_1b2a48600:;
			{
				return _1e6aa6816_evalSubIdent(_self_, _297336_kind.operator jule::Ptr<_1e5d5c78d_SubIdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d59b0e_TupleExpr>>()) {
			_case_begin_1b2a48677:;
			{
				return _1e6aa6b24_evalTuple(_self_, _297336_kind.operator jule::Ptr<_1e5d59b0e_TupleExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d5e8a0_BraceLit>>()) {
			_case_begin_1b2a486ee:;
			{
				return _1e6aa72d9_evalBraceLit(_self_, _297336_kind.operator jule::Ptr<_1e5d5e8a0_BraceLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d66775_FnDecl>>()) {
			_case_begin_1b2a48776:;
			{
				return _1e6aa75e7_evalAnonFn(_self_, _297336_kind.operator jule::Ptr<_1e5d66775_FnDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d5cc11_BinopExpr>>()) {
			_case_begin_1b2a487ed:;
			{
				return _1e6aa7905_evalBinop(_self_, _297336_kind.operator jule::Ptr<_1e5d5cc11_BinopExpr>());
			}
		}
		else {
			_case_begin_1b2a47a83:;
			{
				return nullptr;
			}
		}
		_match_end_1b2a47995:;
	};
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa8021_eval(jule::Ptr<_1e6a8c7db_Eval> _self_, jule::Ptr<_1e5d58e82_Expr> _302128_expr) {
	jule::Ptr<_1e6a8ac6d_Data> _302217_d = _1e6aa7c13_evalExprKind(_self_, _302128_expr.get()._field_Kind);;
	if (((_302217_d == nullptr) || (_302217_d.get()._field_Kind == nullptr))) {
		return nullptr;
	};
	{
		
		if ((_1e6ab9d8a_Fn(_302217_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2a53572:;
			{
				jule::Ptr<_1e5e202ce_FnIns> _302921_f = _1e6ab9d8a_Fn(_302217_d.get()._field_Kind.ptr());;
				if (_1e5e21665_IsBuiltin(_302921_f.ptr())) {
					goto _match_end_1b2a5341d;
				};
				if ((_302921_f.get()._field_Generics.len() != _302921_f.get()._field_Decl.get()._field_Generics.len())) {
					_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _302128_expr.get()._field_Token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				};
				if (((!(_302921_f.get()._field_Decl.get()._field_Statically)) && _1e5e1cd04_IsMethod(_302921_f.get()._field_Decl.ptr()))) {
					_1e6a25103_pushErr(_self_.get()._field_s.ptr(), _302128_expr.get()._field_Token,jule::Str("methods should be invoked", 25),jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1b2a5341d:;
	};
	return _302217_d;
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aa832e_evalExpr(jule::Ptr<_1e6a8c7db_Eval> _self_, jule::Ptr<_1e5d58e82_Expr> _304732_expr) {
	jule::Ptr<_1e6a8ac6d_Data> _304817_d = _1e6aa8021_eval(_self_, _304732_expr);;
	{
		
		if ((_304817_d == nullptr)) {
			_case_begin_1b2a571e1:;
			{
				return nullptr;
			}
		}
		else if (_304817_d.get()._field_Decl) {
			_case_begin_1b2a57268:;
			{
				_1e6a8cce7_pushErr(_self_.ptr(), _304732_expr.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else {
			_case_begin_1b2a57158:;
			{
				return _304817_d;
			}
		}
		_match_end_1b2a570e2:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a8c7db_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1e6aa87a2_unaryEval static__1e6aa8c58_new(jule::Ptr<_1e6a8c7db_Eval> _306823_e) {
	return _1e6aa87a2_unaryEval{._field_e=_306823_e, };
}



inline void _1e6aa8e34_minus(_1e6aa87a2_unaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1b2a58d2a:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1e6ab8b9c_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2a5926a:;
			{
				if ((!(_1e6a062b0_IsNum(_1e6ab6e86_Str((*_self_)._field_d.get()._field_Kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1e6aba0ee_Struct((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2a592d1:;
			{
				if ((_1e6aba0ee_Struct((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Neg == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1b2a58973:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b2a585bb:;
	};
	if (_1e6a8b631_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_1e5e10b71_IsF64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b2a5c49e:;
				{
					_1e5e0ec80_SetF64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((-(_1e5e0d7c8_ReadF64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1e5e101c0_IsI64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b2a5c526:;
				{
					_1e5e0e28a_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_1e5e0cd27_ReadI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1e5e10434_IsU64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b2a5c59d:;
				{
					_1e5e0e28a_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_1e5e0da3c_AsI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1b2a5c36c:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e5e1558d_UnaryExprModel>(_1e5e1558d_UnaryExprModel{._field_Expr=jule::new_ptr<_1e6a8ac6d_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
}



inline void _1e6aa9110_plus(_1e6aa87a2_unaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1b2a61a25:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1e6ab8b9c_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2a61e65:;
			{
				if ((!(_1e6a062b0_IsNum(_1e6ab6e86_Str((*_self_)._field_d.get()._field_Kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1e6aba0ee_Struct((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2a61ecb:;
			{
				if ((_1e6aba0ee_Struct((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Pos == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1b2a6166d:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b2a61591:;
	};
	if (_1e6a8b631_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_1e5e10b71_IsF64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b2a65199:;
				{
					_1e5e0ec80_SetF64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((+(_1e5e0d7c8_ReadF64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1e5e101c0_IsI64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b2a65221:;
				{
					_1e5e0e28a_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_1e5e0cd27_ReadI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1e5e10434_IsU64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b2a65298:;
				{
					_1e5e0e28a_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_1e5e0da3c_AsI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1b2a65067:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e5e1558d_UnaryExprModel>(_1e5e1558d_UnaryExprModel{._field_Expr=jule::new_ptr<_1e6a8ac6d_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
}



inline void _1e6aa92db_caret(_1e6aa87a2_unaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1b2a69720:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1e6ab8b9c_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2a69b60:;
			{
				if ((!(_1e6a0604b_IsInt(_1e6ab6e86_Str((*_self_)._field_d.get()._field_Kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1e6aba0ee_Struct((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2a69bc6:;
			{
				if ((_1e6aba0ee_Struct((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_BitNot == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1b2a69368:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b2a6928b:;
	};
	if (_1e6a8b631_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_1e5e101c0_IsI64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b2a6cd83:;
				{
					_1e5e0e28a_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((~(_1e5e0cd27_ReadI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1e5e10434_IsU64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b2a6ce0a:;
				{
					_1e5e0e510_SetU64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::U64>((~(_1e5e0d08b_ReadU64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1b2a6cc62:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e5e1558d_UnaryExprModel>(_1e5e1558d_UnaryExprModel{._field_Expr=jule::new_ptr<_1e6a8ac6d_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
}



inline void _1e6aa94b7_excl(_1e6aa87a2_unaryEval* _self_) {
	jule::Ptr<_1e6abb562_Prim> _318713_t = _1e6ab8b9c_Prim((*_self_)._field_d.get()._field_Kind.ptr());;
	if (((_318713_t == nullptr) || (!(_1e6abe532_IsBool(_318713_t.ptr()))))) {
		(*_self_)._field_d=nullptr;
		return;;
	};
	if (_1e6a8b631_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_1e5e10698_IsBool((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b2a727a0:;
				{
					_1e5e0e785_SetBool((*_self_)._field_d.get()._field_Constant.ptr(), (!(_1e5e0d300_ReadBool((*_self_)._field_d.get()._field_Constant.ptr()))));
				}
			}
			_match_end_1b2a72690:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e5e1558d_UnaryExprModel>(_1e5e1558d_UnaryExprModel{._field_Expr=jule::new_ptr<_1e6a8ac6d_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
}



inline void _1e6aa9693_star(_1e6aa87a2_unaryEval* _self_) {
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e5e1558d_UnaryExprModel>(_1e5e1558d_UnaryExprModel{._field_Expr=jule::new_ptr<_1e6a8ac6d_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
	{
		
		if ((_1e6ab9175_Ptr((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2a75693:;
			{
				if ((!(_1e6a8d732_isUnsafe((*_self_)._field_e.ptr())))) {
					_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_Op,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				jule::Ptr<_1e6ac335a_Ptr> _321921_t = _1e6ab9175_Ptr((*_self_)._field_d.get()._field_Kind.ptr());;
				if (_1e6ac3d2d_IsUnsafe(_321921_t.ptr())) {
					(*_self_)._field_d=nullptr;
					return;;
				};
				(*_self_)._field_d.get()._field_Kind=_321921_t.get()._field_Elem;
			}
		}
		else if ((_1e6ab8e11_Sptr((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2a75ae4:;
			{
				(*_self_)._field_d.get()._field_Kind=_1e6ab8e11_Sptr((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else {
			_case_begin_1b2a752ec:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b2a75286:;
	};
	(*_self_)._field_d.get()._field_Constant=nullptr;
	(*_self_)._field_d.get()._field_Lvalue=true;
}



inline void _1e6aa986e_amper(_1e6aa87a2_unaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1e5e15967_StructLitExprModel>>()) {
			_case_begin_1b2a796ca:;
			{
				jule::Ptr<_1e5e15967_StructLitExprModel> _323921_lit = (*_self_)._field_d.get()._field_Model.operator jule::Ptr<_1e5e15967_StructLitExprModel>();;
				_1e6ab1b73_makeStructLitAlloc((*_self_)._field_d,_323921_lit);
			}
		}
		else {
			_case_begin_1b2a79a3d:;
			{
				{
					
					if (_1e6acd9b4_canGetPtr((*_self_)._field_d)) {
						_case_begin_1b2a7a676:;
						{
							(*_self_)._field_d.get()._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(jule::new_ptr<_1e6ac335a_Ptr>(_1e6ac335a_Ptr{._field_Elem=(*_self_)._field_d.get()._field_Kind}), 12)});
							(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e5e1558d_UnaryExprModel>(_1e5e1558d_UnaryExprModel{._field_Expr=jule::new_ptr<_1e6a8ac6d_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
						}
					}
					else {
						_case_begin_1b2a7a0d2:;
						{
							(*_self_)._field_d=nullptr;
						}
					}
					_match_end_1b2a7a005:;
				};
			}
		}
		_match_end_1b2a799b6:;
	};
	if (((*_self_)._field_d != nullptr)) {
		(*_self_)._field_d.get()._field_Constant=nullptr;
		(*_self_)._field_d.get()._field_Lvalue=false;
	};
}



inline void _1e6aa9a4a_typeDecl(_1e6aa87a2_unaryEval* _self_) {
	_1e6ac4ee9_typeChecker _326317_tc = _1e6ac4ee9_typeChecker{._field_s=(*_self_)._field_e.get()._field_s, ._field_lookup=(*_self_)._field_e.get()._field_lookup, ._field_errorToken=(*_self_)._field_u.get()._field_Op, };;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1b2a7d7bc:;
			{
				(*_self_)._field_d.get()._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6aca1ca_buildPtrFromType(&_326317_tc, (*_self_)._field_d.get()._field_Kind), 12)});
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1b2a80c42:;
			{
				(*_self_)._field_d.get()._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ac9aae_buildSptrFromType(&_326317_tc, (*_self_)._field_d.get()._field_Kind), 7)});
			}
		}
		else {
			_case_begin_1b2a7e56a:;
			{
				_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_Op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_Op.get()._field_Kind),jule::Any(_1e6ab6e86_Str((*_self_)._field_d.get()._field_Kind.ptr()))}));
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b2a7e515:;
	};
	(*_self_)._field_d.get()._field_Decl=true;
}



inline void _1e6aa9c26_evalData(_1e6aa87a2_unaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1b2a7e5d1:;
			{
				jule::Ptr<_1e6ab6a8a_TypeKind> _328521_prefix = (*_self_)._field_e.get()._field_prefix;;
				(*_self_)._field_e.get()._field_prefix=nullptr;
				(*_self_)._field_d=_1e6aa7c13_evalExprKind((*_self_)._field_e, (*_self_)._field_u.get()._field_Expr.get()._field_Kind);
				(*_self_)._field_e.get()._field_prefix=_328521_prefix;
			}
		}
		else {
			_case_begin_1b2a82c33:;
			{
				(*_self_)._field_d=_1e6aa7c13_evalExprKind((*_self_)._field_e, (*_self_)._field_u.get()._field_Expr.get()._field_Kind);
			}
		}
		_match_end_1b2a82b78:;
	};
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aaa001_eval(_1e6aa87a2_unaryEval* _self_, jule::Ptr<_1e5d5b704_UnaryExpr> _329427_u) {
	(*_self_)._field_u=_329427_u;
	_1e6aa9c26_evalData(&(*_self_));
	if (((*_self_)._field_d == nullptr)) {
		return nullptr;
	};
	if ((*_self_)._field_d.get()._field_Decl) {
		_1e6aa9a4a_typeDecl(&(*_self_));
		return (*_self_)._field_d;
	};
	jule::Ptr<_1e6ab6a8a_TypeKind> _330513_kind = (*_self_)._field_d.get()._field_Kind;;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1b2a87430:;
			{
				_1e6aa8e34_minus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1b2a86e79:;
			{
				_1e6aa9110_plus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1b2a86ee0:;
			{
				_1e6aa92db_caret(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1b2a87056:;
			{
				_1e6aa94b7_excl(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1b2a870bc:;
			{
				_1e6aa9693_star(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1b2a875ea:;
			{
				_1e6aa986e_amper(&(*_self_));
			}
		}
		else {
			_case_begin_1b2a86e13:;
			{
				(*_self_)._field_d=nullptr;
			}
		}
		_match_end_1b2a86dad:;
	};
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1b2a89454:;
			{
				_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_Op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_Op.get()._field_Kind),jule::Any(_1e6ab6e86_Str(_330513_kind.ptr()))}));
				return nullptr;
			}
		}
		else if (_1e6a8b631_IsConst((*_self_)._field_d.ptr())) {
			_case_begin_1b2a87919:;
			{
				(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>((*_self_)._field_d.get()._field_Constant);
			}
		}
		_match_end_1b2a893dd:;
	};
	(*_self_)._field_d.get()._field_Mutable=true;
	return (*_self_)._field_d;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6aa87a2_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1e6aaa540_binaryEval static__1e6aaab06_newPlain(jule::Ptr<_1e6a8c7db_Eval> _334328_e) {
	return _1e6aaa540_binaryEval{._field_e=_334328_e, };
}



inline _1e6aaa540_binaryEval static__1e6aaae47_new(jule::Ptr<_1e6a8c7db_Eval> _334923_e, jule::Ptr<_1e47137a5_Token> _334937_op) {
	return _1e6aaa540_binaryEval{._field_e=_334923_e, ._field_op=_334937_op};
}



inline jule::Bool _1e6aab1ab_checkTypeCompatibility(_1e6aaa540_binaryEval* _self_) {
	return _1e6a2b0b5_checkTypeCompatibility((*_self_)._field_e.get()._field_s, (*_self_)._field_l.get()._field_Kind,(*_self_)._field_r.get()._field_Kind,(*_self_)._field_op);
}



inline jule::Bool _1e6aab453_checkStructCommonOperatorCompatibility(_1e6aaa540_binaryEval* _self_) {
	jule::Ptr<_1e5e202ce_FnIns> _336317_overload = nullptr;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1b2a8ddd7:;
			{
				_336317_overload=_1e6aba0ee_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1b2a8de4d:;
			{
				_336317_overload=_1e6aba0ee_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1b2a8ee71:;
			{
				_336317_overload=_1e6aba0ee_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Add;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1b2a8eed7:;
			{
				_336317_overload=_1e6aba0ee_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1b2a9004d:;
			{
				_336317_overload=_1e6aba0ee_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Div;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1b2a900b4:;
			{
				_336317_overload=_1e6aba0ee_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1b2a9012a:;
			{
				_336317_overload=_1e6aba0ee_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1b2a90191:;
			{
				_336317_overload=_1e6aba0ee_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1b2a90218:;
			{
				_336317_overload=_1e6aba0ee_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1b2a9027e:;
			{
				_336317_overload=_1e6aba0ee_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1b2a8dca5:;
			{
				_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1e6ab6e86_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return false;
			}
		}
		_match_end_1b2a8db2e:;
	};
	if ((_336317_overload == nullptr)) {
		_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1e6ab6e86_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
		return false;
	};
	jule::Ptr<_1e5e1e410_ParamIns> _339517_p = _336317_overload.get()._field_Params[1LL];;
	return _1e6a2ab64_checkAssignType((*_self_)._field_e.get()._field_s, _339517_p.get()._field_Decl.get()._field_Reference,_339517_p.get()._field_Kind,(*_self_)._field_r,(*_self_)._field_op);
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aab6ea_evalNil(_1e6aaa540_binaryEval* _self_) {
	if ((!(_1e6ab81eb_NilCompatible((*_self_)._field_r.get()._field_Kind.ptr())))) {
		_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("nil", 3)),jule::Any(_1e6ab6e86_Str((*_self_)._field_r.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b2a99222:;
			{
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1b2a991ab:;
			{
				_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(jule::Str("nil", 3))}));
				return nullptr;
			}
		}
		_match_end_1b2a99123:;
	};
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aab95e_evalEnum(_1e6aaa540_binaryEval* _self_) {
	jule::Ptr<_1e5e31631_Enum> _342017_enm = _1e6ab93d9_Enum((*_self_)._field_l.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b2a9b3de:;
			{
				jule::Ptr<_1e6ab6a8a_TypeKind> _342421_rkind = (*_self_)._field_r.get()._field_Kind;;
				if ((_1e6ab93d9_Enum((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
					_342421_rkind=_1e6ab93d9_Enum((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind;
				};
				if ((!(_1e6a2b0b5_checkTypeCompatibility((*_self_)._field_e.get()._field_s, _342017_enm.get()._field_Kind.get()._field_Kind,_342421_rkind,(*_self_)._field_op)))) {
					return nullptr;
				};
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1b2a9b334:;
	};
	if (((_1e6ab93d9_Enum((*_self_)._field_r.get()._field_Kind.ptr()) == nullptr) || (_342017_enm != _1e6ab93d9_Enum((*_self_)._field_r.get()._field_Kind.ptr())))) {
		_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_342017_enm.get()._field_Ident),jule::Any(_1e6ab6e86_Str((*_self_)._field_r.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1b2aa56b2:;
			{
				if ((!(_1e6a062b0_IsNum(_1e6ab6e86_Str(_342017_enm.get()._field_Kind.get()._field_Kind.ptr()))))) {
					_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_342017_enm.get()._field_Ident)}));
					return nullptr;
				};
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1b2aa5728:;
			{
				if (((_1e6ab8b9c_Prim(_342017_enm.get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_1e6a0604b_IsInt(_1e6abb8c5_Str(_1e6ab8b9c_Prim(_342017_enm.get()._field_Kind.get()._field_Kind.ptr()).ptr())))))) {
					_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_342017_enm.get()._field_Ident)}));
				};
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1b2aa564b:;
			{
				_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_342017_enm.get()._field_Ident)}));
				return nullptr;
			}
		}
		_match_end_1b2aa555d:;
	};
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aabbc3_evalTypeEnum(_1e6aaa540_binaryEval* _self_) {
	jule::Ptr<_1e5e32c2b_TypeEnum> _347117_enm = _1e6ab964d_TypeEnum((*_self_)._field_l.get()._field_Kind.ptr());;
	if ((!(_1e6aab1ab_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b2aab5a8:;
			{
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1b2aaacb1:;
			{
				_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1e5e3305b_Str(_347117_enm.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1b2aab432:;
	};
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aabe37_evalSptr(_1e6aaa540_binaryEval* _self_) {
	if ((!(_1e6aab1ab_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b2aad643:;
			{
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1b2aad5cc:;
			{
				_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1e6ab6e86_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1b2aad456:;
	};
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aac19b_evalPtr(_1e6aaa540_binaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1b2ab0535:;
			{
				if ((!(_1e6aab1ab_checkTypeCompatibility(&(*_self_))))) {
					return nullptr;
				};
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1)) {
			_case_begin_1b2ab059b:;
			{
				if ((_1e6ab9175_Ptr((*_self_)._field_l.get()._field_Kind.ptr()) == nullptr)) {
					std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				};
				if (_1e6ac3d2d_IsUnsafe(_1e6ab9175_Ptr((*_self_)._field_l.get()._field_Kind.ptr()).ptr())) {
					_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1e6ab6e86_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				};
				if ((!(_1e6ab2c1d_isPtrArithmeticCompatibleInt((*_self_)._field_r)))) {
					_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("type @ is incompatible to use for pointer arithmetic", 52),jule::Slice<jule::Any>::make({jule::Any(_1e6ab6e86_Str((*_self_)._field_r.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1b2aaecb5:;
			{
				_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1e6ab6e86_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1b2aae897:;
	};
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aac410_evalArr(_1e6aaa540_binaryEval* _self_) {
	if ((!(_1e6aab1ab_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b2ab66c3:;
			{
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1b2ab665c:;
			{
				_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1e6ab6e86_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1b2ab1da5:;
	};
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aac674_evalSlc(_1e6aaa540_binaryEval* _self_) {
	if ((!(_1e6aab1ab_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b2ab8917:;
			{
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1b2ab88a1:;
			{
				_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1e6ab6e86_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1b2ab872a:;
	};
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aac8d8_evalFn(_1e6aaa540_binaryEval* _self_) {
	if ((!(_1e6aab1ab_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b2abab5b:;
			{
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1b2abaae5:;
			{
				_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1e6ab6e86_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1b2aba96e:;
	};
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aacb4c_evalStruct(_1e6aaa540_binaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1b2abc344:;
			{
				if ((_1e6aba0ee_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Gt == nullptr)) {
					_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1e6ab6e86_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1b2abc3aa:;
			{
				if ((_1e6aba0ee_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_GtEq == nullptr)) {
					_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1e6ab6e86_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1b2abc421:;
			{
				if ((_1e6aba0ee_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Lt == nullptr)) {
					_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1e6ab6e86_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1b2abca4d:;
			{
				if ((_1e6aba0ee_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_LtEq == nullptr)) {
					_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1e6ab6e86_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b2abcac5:;
			{
				if ((!(_1e6aab1ab_checkTypeCompatibility(&(*_self_))))) {
					return nullptr;
				};
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1b2abbdb0:;
	};
	if ((!(_1e6aab453_checkStructCommonOperatorCompatibility(&(*_self_))))) {
		return nullptr;
	};
	return (*_self_)._field_l;
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aacdb1_evalTrait(_1e6aaa540_binaryEval* _self_) {
	if ((!(_1e6aab1ab_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b2ac7052:;
			{
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1b2ac6edb:;
			{
				_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1e6ab6e86_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1b2ac6d54:;
	};
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aad125_evalAny(_1e6aaa540_binaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b2ac8e44:;
			{
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1b2ac86c4:;
			{
				_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(jule::Str("any", 3))}));
				return nullptr;
			}
		}
		_match_end_1b2ac82a6:;
	};
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aad389_evalBool(_1e6aaa540_binaryEval* _self_) {
	if ((!(_1e6aab1ab_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("&&", 2) || _match_expr == jule::Str("||", 2)) {
			_case_begin_1b2acacae:;
			{
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1b2acac48:;
			{
				_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1e6ab6e86_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1b2acaac2:;
	};
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aad5ed_evalStr(_1e6aaa540_binaryEval* _self_) {
	jule::Str _371317_rk = _1e6ab6e86_Str((*_self_)._field_r.get()._field_Kind.ptr());;
	if ((_371317_rk != jule::Str("str", 3))) {
		_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_371317_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1b2acde9e:;
			{
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1b2ace015:;
			{
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1b2accdc1:;
			{
				_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(jule::Str("str", 3))}));
				return nullptr;
			}
		}
		_match_end_1b2acd102:;
	};
}



inline void _1e6aad7c9_setTypeToGreater(_1e6aaa540_binaryEval* _self_) {
	if (_1e6a8b631_IsConst((*_self_)._field_l.ptr())) {
		if ((!(_1e6a8b631_IsConst((*_self_)._field_r.ptr())))) {
			(*_self_)._field_l.get()._field_Kind=(*_self_)._field_r.get()._field_Kind;
			return;;
		};
		goto _julec_label_set;
	};
	if (_1e6a8b631_IsConst((*_self_)._field_r.ptr())) {
		return;;
	};
	_julec_label_set:;
	if (_1e6a05897_IsGreater(_1e6ab8b9c_Prim((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind,_1e6ab8b9c_Prim((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Kind)) {
		(*_self_)._field_l.get()._field_Kind=(*_self_)._field_r.get()._field_Kind;
	};
}



inline void _1e6aada1b_checkModData(_1e6aaa540_binaryEval* _self_, jule::Ptr<_1e6a8ac6d_Data>& _375636_d) {
	if ((!(_1e6a8b631_IsConst(_375636_d.ptr())))) {
		if (((_1e6ab8b9c_Prim(_375636_d.get()._field_Kind.ptr()) == nullptr) || (!(_1e6a0604b_IsInt(_1e6ab8b9c_Prim(_375636_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1e6a5c27d_sigAssignable(jule::Str("i64", 3),_375636_d)) {
			_case_begin_1b2ad5d0d:;
			{
				_1e5e0e28a_SetI64(_375636_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1e5e0da3c_AsI64(_375636_d.get()._field_Constant.ptr())));
			}
		}
		else if (_1e6a7386b_unsigAssignable(jule::Str("u64", 3),_375636_d)) {
			_case_begin_1b2ad59de:;
			{
				_1e5e0e510_SetU64(_375636_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1e5e0dca1_AsU64(_375636_d.get()._field_Constant.ptr())));
			}
		}
		else {
			_case_begin_1b2ad5978:;
			{
				_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
			}
		}
		_match_end_1b2ad4317:;
	};
}



inline void _1e6aadbe7_mod(_1e6aaa540_binaryEval* _self_) {
	_1e6aada1b_checkModData(&(*_self_), (*_self_)._field_l);
	_1e6aada1b_checkModData(&(*_self_), (*_self_)._field_r);
}



inline jule::Bool _1e6aae09e_numbersAreCompatibile(_1e6aaa540_binaryEval* _self_, jule::Str& _377837_lk, jule::Str& _377847_rk) {
	if ((!(_1e6a062b0_IsNum(_377847_rk)))) {
		return false;
	};
	if (_1e6a8b631_IsConst((*_self_)._field_l.ptr())) {
		return true;
	};
	if ((_377837_lk == jule::Str("f32", 3))) {
		if (_1e6a8b631_IsConst((*_self_)._field_r.ptr())) {
			return true;
		};
		return (_377847_rk == jule::Str("f32", 3));
	};
	if ((_377837_lk == jule::Str("f64", 3))) {
		if (_1e6a8b631_IsConst((*_self_)._field_r.ptr())) {
			return true;
		};
		return (_377847_rk == jule::Str("f64", 3));
	};
	if (_1e6a8b631_IsConst((*_self_)._field_r.ptr())) {
		return true;
	};
	return (_377837_lk == _377847_rk);
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aae313_evalFloat(_1e6aaa540_binaryEval* _self_) {
	jule::Str _380813_lk = _1e6ab8b9c_Prim((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _380913_rk = _1e6ab8b9c_Prim((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	if ((!(_1e6aae09e_numbersAreCompatibile(&(*_self_), _380813_lk,_380913_rk)))) {
		_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_380813_lk),jule::Any(_380913_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1b2add662:;
			{
				if (((!(_1e6a8b631_IsConst((*_self_)._field_l.ptr()))) || (!(_1e6a7399d_intAssignable(jule::Str("i64", 3),(*_self_)._field_l))))) {
					_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_380813_lk),jule::Any(_380913_rk)}));
					return nullptr;
				};
				if (((!(_1e6a8b631_IsConst((*_self_)._field_r.ptr()))) || (!(_1e6a7399d_intAssignable(jule::Str("u64", 3),(*_self_)._field_r))))) {
					_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_380813_lk),jule::Any(_380913_rk)}));
					return nullptr;
				};
				_1e5e0e28a_SetI64((*_self_)._field_l.get()._field_Constant.ptr(), static_cast<jule::I64>(_1e5e0da3c_AsI64((*_self_)._field_l.get()._field_Constant.ptr())));
				_1e5e0e510_SetU64((*_self_)._field_r.get()._field_Constant.ptr(), static_cast<jule::U64>(_1e5e0dca1_AsU64((*_self_)._field_r.get()._field_Constant.ptr())));
				if ((!(_1e6ab259c_isOkForShifting((*_self_)._field_r)))) {
					_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		_match_end_1b2add585:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1b2ae307e:;
			{
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1b2ae3029:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1)) {
			_case_begin_1b2ae3a1e:;
			{
				_1e6aad7c9_setTypeToGreater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1b2ae3a85:;
			{
				if ((!(_1e6a0604b_IsInt(_380913_rk)))) {
					_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_380813_lk),jule::Any(_380913_rk)}));
					return nullptr;
				};
				_1e6aadbe7_mod(&(*_self_));
				return (*_self_)._field_r;
			}
		}
		else {
			_case_begin_1b2ae3e4d:;
			{
				_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for floating-point type(s)", 52),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1b2ae3d60:;
	};
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aae577_evalInt(_1e6aaa540_binaryEval* _self_) {
	jule::Str _387213_lk = _1e6ab8b9c_Prim((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _387313_rk = _1e6ab8b9c_Prim((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1b2ae3aeb:;
			{
				if (((!(_1e6a0604b_IsInt(_387213_lk))) || (!(_1e6a0604b_IsInt(_387313_rk))))) {
					_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_387213_lk),jule::Any(_387313_rk)}));
					return nullptr;
				};
				if ((!(_1e6ab259c_isOkForShifting((*_self_)._field_r)))) {
					_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		_match_end_1b2ae821b:;
	};
	if ((!(_1e6aae09e_numbersAreCompatibile(&(*_self_), _387213_lk,_387313_rk)))) {
		_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_387213_lk),jule::Any(_387313_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1b2aeb395:;
			{
				return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1b2aeb340:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1b2aebb7b:;
			{
				_1e6aad7c9_setTypeToGreater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1b2aebbe2:;
			{
				_1e6aadbe7_mod(&(*_self_));
				_1e6aad7c9_setTypeToGreater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1b2aec0aa:;
			{
				_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for integer type(s)", 45),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1b2aebebc:;
	};
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aae7db_evalPrim(_1e6aaa540_binaryEval* _self_) {
	jule::Ptr<_1e6abb562_Prim> _393113_prim = _1e6ab8b9c_Prim((*_self_)._field_l.get()._field_Kind.ptr());;
	{
		
		if (_1e6abe532_IsBool(_393113_prim.ptr())) {
			_case_begin_1b2b003bb:;
			{
				return _1e6aad389_evalBool(&(*_self_));
			}
		}
		else if (_1e6abe796_IsStr(_393113_prim.ptr())) {
			_case_begin_1b2b00443:;
			{
				return _1e6aad5ed_evalStr(&(*_self_));
			}
		}
		_match_end_1b2b00311:;
	};
	if ((_1e6ab8b9c_Prim((*_self_)._field_r.get()._field_Kind.ptr()) == nullptr)) {
		_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1e6abb8c5_Str(_393113_prim.ptr())),jule::Any(_1e6ab6e86_Str((*_self_)._field_r.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	{
		
		if (_1e6a0617d_IsFloat(_393113_prim.get()._field_Kind)) {
			_case_begin_1b2b02d2a:;
			{
				return _1e6aae313_evalFloat(&(*_self_));
			}
		}
		else if (_1e6a0604b_IsInt(_393113_prim.get()._field_Kind)) {
			_case_begin_1b2b02698:;
			{
				return _1e6aae577_evalInt(&(*_self_));
			}
		}
		else {
			_case_begin_1b2b02632:;
			{
				return nullptr;
			}
		}
		_match_end_1b2b02456:;
	};
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6aaea50_evalOp(_1e6aaa540_binaryEval* _self_) {
	{
		
		if (_1e6ab7c23_Void((*_self_)._field_l.get()._field_Kind.ptr())) {
			_case_begin_1b2b03677:;
			{
				_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(jule::Str("void", 4))}));
				return nullptr;
			}
		}
		else if (((_1e6ab8b9c_Prim((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr) && _1e6abea0a_IsAny(_1e6ab8b9c_Prim((*_self_)._field_r.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1b2b0437b:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1b2b040d4;
			}
		}
		else if (((_1e6ab8b9c_Prim((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr) && _1e6abea0a_IsAny(_1e6ab8b9c_Prim((*_self_)._field_l.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1b2b040d4:;
			{
				return _1e6aad125_evalAny(&(*_self_));
			}
		}
		else if ((_1e6ab964d_TypeEnum((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2b0414a:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1b2b041b1;
			}
		}
		else if ((_1e6ab964d_TypeEnum((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2b041b1:;
			{
				return _1e6aabbc3_evalTypeEnum(&(*_self_));
			}
		}
		else if (_1e6ab79ae_IsNil((*_self_)._field_l.get()._field_Kind.ptr())) {
			_case_begin_1b2b04227:;
			{
				return _1e6aab6ea_evalNil(&(*_self_));
			}
		}
		else if ((_1e6ab93d9_Enum((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2b0428d:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1b2b04447;
			}
		}
		else if ((_1e6ab93d9_Enum((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2b04447:;
			{
				return _1e6aab95e_evalEnum(&(*_self_));
			}
		}
		else if ((_1e6ab8e11_Sptr((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2b044ad:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1b2b04524;
			}
		}
		else if ((_1e6ab8e11_Sptr((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2b04524:;
			{
				return _1e6aabe37_evalSptr(&(*_self_));
			}
		}
		else if ((_1e6ab9175_Ptr((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2b0459b:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1b2b04623;
			}
		}
		else if ((_1e6ab9175_Ptr((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2b04623:;
			{
				return _1e6aac19b_evalPtr(&(*_self_));
			}
		}
		else if ((_1e6ab98b2_Arr((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2b0469a:;
			{
				return _1e6aac410_evalArr(&(*_self_));
			}
		}
		else if ((_1e6ab9b26_Slc((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2b04722:;
			{
				return _1e6aac674_evalSlc(&(*_self_));
			}
		}
		else if ((_1e6ab9d8a_Fn((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2b04799:;
			{
				return _1e6aac8d8_evalFn(&(*_self_));
			}
		}
		else if ((_1e6aba363_Trait((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2b04821:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1b2b04898;
			}
		}
		else if ((_1e6aba363_Trait((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2b04898:;
			{
				return _1e6aacdb1_evalTrait(&(*_self_));
			}
		}
		else if ((_1e6aba0ee_Struct((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2b04920:;
			{
				return _1e6aacb4c_evalStruct(&(*_self_));
			}
		}
		else if ((_1e6ab8b9c_Prim((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2b04997:;
			{
				return _1e6aae7db_evalPrim(&(*_self_));
			}
		}
		else {
			_case_begin_1b2b0308e:;
			{
				return nullptr;
			}
		}
		_match_end_1b2b02e4b:;
	};
}



inline void _1e6aaecc5_evalConst(_1e6aaa540_binaryEval* _self_, jule::Ptr<_1e6a8ac6d_Data>& _400633_d) {
	{
		
		if ((_400633_d == nullptr)) {
			_case_begin_1b2b135aa:;
			{
				return;;
			}
		}
		else if ((!(_1e6a8b631_IsConst((*_self_)._field_l.ptr()))) || (!(_1e6a8b631_IsConst((*_self_)._field_r.ptr())))) {
			_case_begin_1b2b13c4d:;
			{
				_400633_d.get()._field_Constant=nullptr;
				return;;
			}
		}
		_match_end_1b2b13489:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1b2b152e3:;
			{
				_400633_d.get()._field_Constant=static__1e5e0bee1_NewBool(_1e5e11b1c_Eq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1b2b15359:;
			{
				_400633_d.get()._field_Constant=static__1e5e0bee1_NewBool((!(_1e5e11b1c_Eq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))))));
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1b2b153c0:;
			{
				_400633_d.get()._field_Constant=static__1e5e0bee1_NewBool(_1e5e1180e_Or((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1b2b15436:;
			{
				_400633_d.get()._field_Constant=static__1e5e0bee1_NewBool(_1e5e11501_And((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1b2b1549c:;
			{
				_400633_d.get()._field_Constant=static__1e5e0bee1_NewBool(_1e5e12546_Gt((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1b2b15513:;
			{
				_400633_d.get()._field_Constant=static__1e5e0bee1_NewBool(_1e5e11e2a_Lt((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1b2b15579:;
			{
				_400633_d.get()._field_Constant=static__1e5e0bee1_NewBool(_1e5e12854_GtEq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1b2b155e0:;
			{
				_400633_d.get()._field_Constant=static__1e5e0bee1_NewBool(_1e5e12238_LtEq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1b2b15656:;
			{
				_1e5e12b62_Add((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_400633_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1b2b156bc:;
			{
				_1e5e12e70_Sub((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_400633_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1b2b15733:;
			{
				_1e5e1327d_Mul((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_400633_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1b2b15799:;
			{
				jule::Bool _404317_ok = _1e5e1358b_Div((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));;
				if (((!(_404317_ok)) && (_1e5e0e015_AsF64((*_self_)._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_400633_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
				jule::Ptr<_1e6abb562_Prim> _404821_prim = _1e6ab8b9c_Prim(_400633_d.get()._field_Kind.ptr());;
				{
					
					if (_1e6a05cd7_IsSigInt(_404821_prim.get()._field_Kind)) {
						_case_begin_1b2b22223:;
						{
							_1e5e0e28a_SetI64(_400633_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1e5e0da3c_AsI64(_400633_d.get()._field_Constant.ptr())));
						}
					}
					else if (_1e6a05e19_IsUnsigInt(_404821_prim.get()._field_Kind)) {
						_case_begin_1b2b2229a:;
						{
							_1e5e0e510_SetU64(_400633_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1e5e0dca1_AsU64(_400633_d.get()._field_Constant.ptr())));
						}
					}
					_match_end_1b2b22168:;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1b2b15821:;
			{
				jule::Bool _405617_ok = _1e5e13899_Mod((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));;
				if (((!(_405617_ok)) && (_1e5e0e015_AsF64((*_self_)._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_400633_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1b2b15898:;
			{
				_1e5e13eb5_BitwiseOr((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_400633_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1b2b15920:;
			{
				_1e5e13ba7_BitwiseAnd((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_400633_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1b2b15997:;
			{
				_1e5e142c3_Xor((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_400633_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1b2b15a1e:;
			{
				_1e5e145d1_Lshift((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_400633_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1b2b15a96:;
			{
				_1e5e148de_Rshift((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_400633_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		_match_end_1b2b14a62:;
	};
	_1e6ab3999_applyCastModelByEnum(_400633_d,_1e6ab93d9_Enum(_400633_d.get()._field_Kind.ptr()));
	jule::Ptr<_1e6abb562_Prim> _408017_prim = _1e6ab8b9c_Prim(_400633_d.get()._field_Kind.ptr());;
	if (((_408017_prim == nullptr) || (!(_1e6a062b0_IsNum(_1e6abb8c5_Str(_408017_prim.ptr())))))) {
		_400633_d.get()._field_Model=static_cast<jule::Any>(_400633_d.get()._field_Constant);
		return;;
	};
	if ((((*_self_)._field_op.get()._field_Kind != jule::Str("<<", 2)) && ((*_self_)._field_op.get()._field_Kind != jule::Str(">>", 2)))) {
		if ((((*_self_)._field_l.get()._field_Model == (*_self_)._field_l.get()._field_Constant) && ((*_self_)._field_r.get()._field_Model != (*_self_)._field_r.get()._field_Constant))) {
			_400633_d.get()._field_Kind=(*_self_)._field_r.get()._field_Kind;
			_408017_prim=_1e6ab8b9c_Prim(_400633_d.get()._field_Kind.ptr());
		};
	};
	_1e6ab1876_fitBitsize(_400633_d);
	_1e6ab3c52_castConstByType(_408017_prim.get()._field_Kind,_400633_d);
}



inline void _1e6ab004a_checkData(_1e6aaa540_binaryEval* _self_, jule::Ptr<_1e6a8ac6d_Data>& _409633_d) {
	jule::Ptr<_1e5e202ce_FnIns> _409713_f = _1e6ab9d8a_Fn(_409633_d.get()._field_Kind.ptr());;
	if ((((_409713_f != nullptr) && (_409713_f.get()._field_Decl != nullptr)) && _1e5e1cd04_IsMethod(_409713_f.get()._field_Decl.ptr()))) {
		_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("invalid expression used for binary operation", 44),jule::Slice<jule::Any>());
	};
}



inline void _1e6ab0226_checkDatas(_1e6aaa540_binaryEval* _self_) {
	_1e6ab004a_checkData(&(*_self_), (*_self_)._field_l);
	_1e6ab004a_checkData(&(*_self_), (*_self_)._field_r);
}



inline void _1e6ab049b_setModel(_1e6aaa540_binaryEval* _self_, jule::Ptr<_1e6a8ac6d_Data>& _410832_d) {
	if (_1e6a8b631_IsConst(_410832_d.ptr())) {
		if ((((*_self_)._field_l.get()._field_Model == (*_self_)._field_l.get()._field_Constant) && ((*_self_)._field_r.get()._field_Model == (*_self_)._field_r.get()._field_Constant))) {
			return;;
		};
	};
	jule::Ptr<_1e6a8ac6d_Data> _411618_l = (*_self_)._field_l;;
	jule::Ptr<_1e6a8ac6d_Data> _411625_r = (*_self_)._field_r;;
	std::tie(_411618_l,_411625_r) = std::make_tuple((*_self_)._field_l,(*_self_)._field_r);
	if ((!(_1e6a8b93e_GoodOperand(_411618_l.ptr(), _411625_r)))) {
		std::tie(_411618_l,_411625_r) = std::make_tuple(_411625_r,_411618_l);
	};
	_410832_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e5e153a1_BinopExprModel>(_1e5e153a1_BinopExprModel{._field_Left=jule::new_ptr<_1e5e151b4_OperandExprModel>(_1e5e151b4_OperandExprModel{._field_Kind=_411618_l.get()._field_Kind, ._field_Model=_411618_l.get()._field_Model}), ._field_Right=jule::new_ptr<_1e5e151b4_OperandExprModel>(_1e5e151b4_OperandExprModel{._field_Kind=_411625_r.get()._field_Kind, ._field_Model=_411625_r.get()._field_Model}), ._field_Op=(*_self_)._field_op}));
}



inline void _1e6ab0721_postEval(_1e6aaa540_binaryEval* _self_, jule::Ptr<_1e6a8ac6d_Data>& _413432_d) {
	_413432_d.get()._field_Lvalue=false;
	_1e6ab049b_setModel(&(*_self_), _413432_d);
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6ab0ac8_solveExplicit(_1e6aaa540_binaryEval* _self_, jule::Ptr<_1e6a8ac6d_Data>& _413937_l, jule::Ptr<_1e6a8ac6d_Data>& _413952_r) {
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_413937_l,_413952_r);
	_1e6ab0226_checkDatas(&(*_self_));
	jule::Ptr<_1e6a8ac6d_Data> _414417_d = _1e6aaea50_evalOp(&(*_self_));;
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_413937_l,_413952_r);
	_1e6aaecc5_evalConst(&(*_self_), _414417_d);
	if ((_414417_d != nullptr)) {
		_414417_d.get()._field_Mutable=true;
		_1e6ab0721_postEval(&(*_self_), _414417_d);
	};
	return _414417_d;
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6ab0dd6_eval(_1e6aaa540_binaryEval* _self_, jule::Ptr<_1e5d5cc11_BinopExpr>& _415928_op) {
	if ((_415928_op.get()._field_Op.get()._field_Kind == jule::Str("=", 1))) {
		_1e6a8cce7_pushErr((*_self_)._field_e.ptr(), _415928_op.get()._field_Op,jule::Str("assignments not available for expressions", 41),jule::Slice<jule::Any>());
		_1e6a8d116_pushSugggestion((*_self_)._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e6a8ac6d_Data> _416617_l = _1e6aa7c13_evalExprKind((*_self_)._field_e, _415928_op.get()._field_Left.get()._field_Kind);;
	if (((_416617_l == nullptr) || (_416617_l.get()._field_Kind == nullptr))) {
		return nullptr;
	};
	jule::Ptr<_1e6ab6a8a_TypeKind> _417117_prefix = (*_self_)._field_e.get()._field_prefix;;
	(*_self_)._field_e.get()._field_prefix=_416617_l.get()._field_Kind;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_417117_prefix;
	});;
	jule::Ptr<_1e6a8ac6d_Data> _417417_r = _1e6aa7c13_evalExprKind((*_self_)._field_e, _415928_op.get()._field_Right.get()._field_Kind);;
	if (((_417417_r == nullptr) || (_417417_r.get()._field_Kind == nullptr))) {
		return nullptr;
	};
	(*_self_)._field_op=_415928_op.get()._field_Op;
	jule::Ptr<_1e6a8ac6d_Data> _418117_d = _1e6ab0ac8_solveExplicit(&(*_self_), _416617_l,_417417_r);;
	if ((((_418117_d != nullptr) && _416617_l.get()._field_IsRune) && _417417_r.get()._field_IsRune)) {
		_418117_d.get()._field_IsRune=true;
	};
	return _418117_d;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6aaa540_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6ab535d_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6ab5d97_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e6ab6e86_Str(_1e6ab6a8a_TypeKind* _self_) {
	if (_1e6ab79ae_IsNil(&(*_self_))) {
		return jule::Str("nil", 3);
	};
	jule::Str _7417_kind = jule::Str();;
	if ((*_self_)._field_Variadic) {
		_7417_kind+=jule::Str("...", 3);
	};
	if (_1e6ab774a_CppLinked(&(*_self_))) {
		_7417_kind+=jule::Str("cpp.", 4);
		_7417_kind+=(*_self_)._field_CppIdent;
	} else {
		_7417_kind+=_1e6ab665b_Kind_mptr_data[((*_self_)._field_Kind).type_offset]._1e6ab620a_Str((*_self_)._field_Kind);
	};
	return _7417_kind;
}



inline jule::Bool _1e6ab7294_Equals(jule::Ptr<_1e6ab6a8a_TypeKind> _self_, jule::Ptr<_1e6ab6a8a_TypeKind> _9022_other) {
	if (_1e6ab79ae_IsNil(_self_.ptr())) {
		return _1e6ab79ae_IsNil(_9022_other.ptr());
	};
	if (_1e6ab774a_CppLinked(_self_.ptr())) {
		return (_1e6ab774a_CppLinked(_9022_other.ptr()) && (_self_.get()._field_CppIdent == _9022_other.get()._field_CppIdent));
	};
	return _1e6ab665b_Kind_mptr_data[(_self_.get()._field_Kind).type_offset]._1e6ab6518_Equals(_self_.get()._field_Kind, _9022_other);
}



inline jule::Bool _1e6ab774a_CppLinked(_1e6ab6a8a_TypeKind* _self_) {
	return ((*_self_)._field_CppIdent.len() != 0LL);
}



inline jule::Bool _1e6ab79ae_IsNil(_1e6ab6a8a_TypeKind* _self_) {
	return ((*_self_)._field_Kind == nullptr);
}



inline jule::Bool _1e6ab7c23_Void(_1e6ab6a8a_TypeKind* _self_) {
	jule::Ptr<_1e6abb562_Prim> _11113_prim = _1e6ab8b9c_Prim(&(*_self_));;
	return ((_11113_prim != nullptr) && (_11113_prim.get()._field_Kind == jule::Str("void", 4)));
}



inline jule::Bool _1e6ab7e87_Mutable(_1e6ab6a8a_TypeKind* _self_) {
	{
		_1e6ab6a8a_TypeKind* _11821__self = (&((*_self_)));;
		if ((_1e6aba0ee_Struct(_11821__self) != nullptr)) {
			return _1e6aba0ee_Struct(_11821__self).get()._field_Mutable;
		};
		if ((_1e6aba363_Trait(_11821__self) != nullptr)) {
			return _1e6aba363_Trait(_11821__self).get()._field_Mutable;
		};
		if ((_1e6ab8b9c_Prim(_11821__self) != nullptr)) {
			jule::Ptr<_1e6abb562_Prim> _12721_p = _1e6ab8b9c_Prim(_11821__self);;
			return _1e6abea0a_IsAny(_12721_p.ptr());
		};
		if ((_1e6ab98b2_Arr(_11821__self) != nullptr)) {
			return _1e6ab7e87_Mutable(_1e6ab98b2_Arr(_11821__self).get()._field_Elem.ptr());
		};
		return (((_1e6ab9b26_Slc(_11821__self) != nullptr) || (_1e6ab9175_Ptr(_11821__self) != nullptr)) || (_1e6ab8e11_Sptr(_11821__self) != nullptr));
	};
}



inline jule::Bool _1e6ab81eb_NilCompatible(_1e6ab6a8a_TypeKind* _self_) {
	{
		_1e6ab6a8a_TypeKind* _14221__self = (&((*_self_)));;
		jule::Ptr<_1e6abb562_Prim> _14417_prim = _1e6ab8b9c_Prim(_14221__self);;
		if (((_14417_prim != nullptr) && _1e6abea0a_IsAny(_14417_prim.ptr()))) {
			return true;
		};
		return (((((((_1e6ab79ae_IsNil(_14221__self) || (_1e6ab9d8a_Fn(_14221__self) != nullptr)) || (_1e6ab8e11_Sptr(_14221__self) != nullptr)) || (_1e6ab9175_Ptr(_14221__self) != nullptr)) || (_1e6aba363_Trait(_14221__self) != nullptr)) || (_1e6ab9b26_Slc(_14221__self) != nullptr)) || (_1e6aba5c7_Map(_14221__self) != nullptr)) || (_1e6ab964d_TypeEnum(_14221__self) != nullptr));
	};
}



inline jule::Bool _1e6ab8460_PerformsRC(_1e6ab6a8a_TypeKind* _self_) {
	{
		_1e6ab6a8a_TypeKind* _16321__self = (&((*_self_)));;
		return (((_1e6ab8e11_Sptr(_16321__self) != nullptr) || (_1e6ab9b26_Slc(_16321__self) != nullptr)) || (_1e6aba363_Trait(_16321__self) != nullptr));
	};
}



inline jule::Bool _1e6ab86c4_SupportsCloning(_1e6ab6a8a_TypeKind* _self_) {
	{
		_1e6ab6a8a_TypeKind* _17121__self = (&((*_self_)));;
		{
			
			if ((_1e6ab8b9c_Prim(_17121__self) != nullptr)) {
				_case_begin_1b2b63099:;
				{
					return (!(_1e6abea0a_IsAny(_1e6ab8b9c_Prim(_17121__self).ptr())));
				}
			}
			else if ((_1e6ab93d9_Enum(_17121__self) != nullptr)) {
				_case_begin_1b2b63110:;
				{
					return true;
				}
			}
			else if ((_1e6ab9d8a_Fn(_17121__self) != nullptr)) {
				_case_begin_1b2b6340c:;
				{
					return true;
				}
			}
			else if ((_1e6ab9175_Ptr(_17121__self) != nullptr)) {
				_case_begin_1b2b63473:;
				{
					return true;
				}
			}
			else if ((_1e6ab9b26_Slc(_17121__self) != nullptr)) {
				_case_begin_1b2b634d9:;
				{
					return _1e6ab86c4_SupportsCloning(_1e6ab9b26_Slc(_17121__self).get()._field_Elem.ptr());
				}
			}
			else if ((_1e6aba5c7_Map(_17121__self) != nullptr)) {
				_case_begin_1b2b63550:;
				{
					jule::Ptr<_1e6ac1d09_Map> _18421_m = _1e6aba5c7_Map(_17121__self);;
					return (_1e6ab86c4_SupportsCloning(_18421_m.get()._field_Key.ptr()) && _1e6ab86c4_SupportsCloning(_18421_m.get()._field_Val.ptr()));
				}
			}
			else if ((_1e6ab98b2_Arr(_17121__self) != nullptr)) {
				_case_begin_1b2b635b6:;
				{
					return _1e6ab86c4_SupportsCloning(_1e6ab98b2_Arr(_17121__self).get()._field_Elem.ptr());
				}
			}
			else if ((_1e6ab8e11_Sptr(_17121__self) != nullptr)) {
				_case_begin_1b2b6362c:;
				{
					return _1e6ab86c4_SupportsCloning(_1e6ab8e11_Sptr(_17121__self).get()._field_Elem.ptr());
				}
			}
			else if ((_1e6aba0ee_Struct(_17121__self) != nullptr)) {
				_case_begin_1b2b636a4:;
				{
					jule::Ptr<_1e5d714d8_StructIns> _19125_s = _1e6aba0ee_Struct(_17121__self);;
					return (((_19125_s.get()._field_Decl != nullptr) && (!(_19125_s.get()._field_Decl.get()._field_CppLinked))) && _1e5d36cd9_IsDerives(_19125_s.get()._field_Decl.ptr(), jule::Str("Clone", 5)));
				}
			}
			else {
				_case_begin_1b2b62e78:;
				{
					return false;
				}
			}
			_match_end_1b2b62e12:;
		};
	};
}



inline jule::Bool _1e6ab8938_Variadicable(_1e6ab6a8a_TypeKind* _self_) {
	{
		_1e6ab6a8a_TypeKind* _20421__self = (&((*_self_)));;
		return (_1e6ab9b26_Slc(_20421__self) != nullptr);
	};
}



inline jule::Ptr<_1e6abb562_Prim> _1e6ab8b9c_Prim(_1e6ab6a8a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e6abb562_Prim>>()) {
			_case_begin_1b2b6acc7:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1e6abb562_Prim>();
			}
		}
		else {
			_case_begin_1b2b6a689:;
			{
				return nullptr;
			}
		}
		_match_end_1b2b6a634:;
	};
}



inline jule::Ptr<_1e6abece6_Sptr> _1e6ab8e11_Sptr(_1e6ab6a8a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e6abece6_Sptr>>()) {
			_case_begin_1b2b6b9ba:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1e6abece6_Sptr>();
			}
		}
		else {
			_case_begin_1b2b6b4c0:;
			{
				return nullptr;
			}
		}
		_match_end_1b2b6b46a:;
	};
}



inline jule::Ptr<_1e6ac335a_Ptr> _1e6ab9175_Ptr(_1e6ab6a8a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e6ac335a_Ptr>>()) {
			_case_begin_1b2b6c713:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1e6ac335a_Ptr>();
			}
		}
		else {
			_case_begin_1b2b6c218:;
			{
				return nullptr;
			}
		}
		_match_end_1b2b6c1b3:;
	};
}



inline jule::Ptr<_1e5e31631_Enum> _1e6ab93d9_Enum(_1e6ab6a8a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e5e31631_Enum>>()) {
			_case_begin_1b2b6d45b:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1e5e31631_Enum>();
			}
		}
		else {
			_case_begin_1b2b6ce61:;
			{
				return nullptr;
			}
		}
		_match_end_1b2b6ce0b:;
	};
}



inline jule::Ptr<_1e5e32c2b_TypeEnum> _1e6ab964d_TypeEnum(_1e6ab6a8a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e5e32c2b_TypeEnum>>()) {
			_case_begin_1b2b6e1a4:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1e5e32c2b_TypeEnum>();
			}
		}
		else {
			_case_begin_1b2b6dba9:;
			{
				return nullptr;
			}
		}
		_match_end_1b2b6db54:;
	};
}



inline jule::Ptr<_1e6ac28ed_Arr> _1e6ab98b2_Arr(_1e6ab6a8a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e6ac28ed_Arr>>()) {
			_case_begin_1b2b6edec:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1e6ac28ed_Arr>();
			}
		}
		else {
			_case_begin_1b2b6e902:;
			{
				return nullptr;
			}
		}
		_match_end_1b2b6e89c:;
	};
}



inline jule::Ptr<_1e6ac0753_Slc> _1e6ab9b26_Slc(_1e6ab6a8a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e6ac0753_Slc>>()) {
			_case_begin_1b2b70b45:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1e6ac0753_Slc>();
			}
		}
		else {
			_case_begin_1b2b7064a:;
			{
				return nullptr;
			}
		}
		_match_end_1b2b705e5:;
	};
}



inline jule::Ptr<_1e5e202ce_FnIns> _1e6ab9d8a_Fn(_1e6ab6a8a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e5e202ce_FnIns>>()) {
			_case_begin_1b2b7188d:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1e5e202ce_FnIns>();
			}
		}
		else {
			_case_begin_1b2b71393:;
			{
				return nullptr;
			}
		}
		_match_end_1b2b7133d:;
	};
}



inline jule::Ptr<_1e5d714d8_StructIns> _1e6aba0ee_Struct(_1e6ab6a8a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e5d714d8_StructIns>>()) {
			_case_begin_1b2b725d6:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1e5d714d8_StructIns>();
			}
		}
		else {
			_case_begin_1b2b720db:;
			{
				return nullptr;
			}
		}
		_match_end_1b2b72086:;
	};
}



inline jule::Ptr<_1e5e2e4db_Trait> _1e6aba363_Trait(_1e6ab6a8a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e5e2e4db_Trait>>()) {
			_case_begin_1b2b7332e:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1e5e2e4db_Trait>();
			}
		}
		else {
			_case_begin_1b2b72d34:;
			{
				return nullptr;
			}
		}
		_match_end_1b2b72cce:;
	};
}



inline jule::Ptr<_1e6ac1d09_Map> _1e6aba5c7_Map(_1e6ab6a8a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e6ac1d09_Map>>()) {
			_case_begin_1b2b74077:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1e6ac1d09_Map>();
			}
		}
		else {
			_case_begin_1b2b73a7c:;
			{
				return nullptr;
			}
		}
		_match_end_1b2b73a27:;
	};
}



inline jule::Ptr<_1e6ac12d1_Tuple> _1e6aba83b_Tup(_1e6ab6a8a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e6ac12d1_Tuple>>()) {
			_case_begin_1b2b74cc0:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1e6ac12d1_Tuple>();
			}
		}
		else {
			_case_begin_1b2b747c5:;
			{
				return nullptr;
			}
		}
		_match_end_1b2b74770:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e6ab6a8a_TypeKind _Src) {
	_Stream << "TypeKind{";
	_Stream << "CppIdent:" << _Src._field_CppIdent << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e6abb09a_checked(_1e6ababe3_TypeSymbol* _self_) {
	return ((*_self_)._field_Kind != nullptr);
}



inline void _1e6abb276_removeKind(_1e6ababe3_TypeSymbol* _self_) {
	(*_self_)._field_Kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6ababe3_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e6abb8c5_Str(_1e6abb562_Prim* _self_) {
	return (*_self_)._field_Kind;
}



inline jule::Bool _1e6abbbd3_Equals(jule::Ptr<_1e6abb562_Prim> _self_, jule::Ptr<_1e6ab6a8a_TypeKind> _35722_other) {
	jule::Ptr<_1e6abb562_Prim> _35813_prim = _1e6ab8b9c_Prim(_35722_other.ptr());;
	if ((_35813_prim == nullptr)) {
		return false;
	};
	return (_self_.get()._field_Kind == _35813_prim.get()._field_Kind);
}



inline jule::Bool _1e6abc156_IsConstraint(_1e6abb562_Prim* _self_) {
	return ((((!(_1e6abe796_IsStr(&(*_self_)))) && (!(_1e6abea0a_IsAny(&(*_self_))))) && (!(_1e6abe532_IsBool(&(*_self_))))) && (!(_1e6a062b0_IsNum((*_self_)._field_Kind))));
}



inline jule::Bool _1e6abc3ba_IsI8(_1e6abb562_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i8", 2));
}



inline jule::Bool _1e6abc62e_IsI16(_1e6abb562_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i16", 3));
}



inline jule::Bool _1e6abc893_IsI32(_1e6abb562_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i32", 3));
}



inline jule::Bool _1e6abcb07_IsI64(_1e6abb562_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i64", 3));
}



inline jule::Bool _1e6abcd6b_IsU8(_1e6abb562_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u8", 2));
}



inline jule::Bool _1e6abd0d0_IsU16(_1e6abb562_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u16", 3));
}



inline jule::Bool _1e6abd344_IsU32(_1e6abb562_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u32", 3));
}



inline jule::Bool _1e6abd5a8_IsU64(_1e6abb562_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u64", 3));
}



inline jule::Bool _1e6abd81c_IsF32(_1e6abb562_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("f32", 3));
}



inline jule::Bool _1e6abda81_IsF64(_1e6abb562_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("f64", 3));
}



inline jule::Bool _1e6abdce5_IsInt(_1e6abb562_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("int", 3));
}



inline jule::Bool _1e6abe059_IsUint(_1e6abb562_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("uint", 4));
}



inline jule::Bool _1e6abe2bd_IsUintptr(_1e6abb562_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("uintptr", 7));
}



inline jule::Bool _1e6abe532_IsBool(_1e6abb562_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("bool", 4));
}



inline jule::Bool _1e6abe796_IsStr(_1e6abb562_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("str", 3));
}



inline jule::Bool _1e6abea0a_IsAny(_1e6abb562_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("any", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _1e6abb562_Prim _Src) {
	_Stream << "Prim{";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e6ac0159_Str(_1e6abece6_Sptr* _self_) {
	return (jule::Str("&", 1) + _1e6ab6e86_Str((*_self_)._field_Elem.ptr()));
}



inline jule::Bool _1e6ac0467_Equals(jule::Ptr<_1e6abece6_Sptr> _self_, jule::Ptr<_1e6ab6a8a_TypeKind> _43422_other) {
	jule::Ptr<_1e6abece6_Sptr> _43513_sptr = _1e6ab8e11_Sptr(_43422_other.ptr());;
	if ((_43513_sptr == nullptr)) {
		return false;
	};
	return _1e6ab7294_Equals(_self_.get()._field_Elem, _43513_sptr.get()._field_Elem);
}







std::ostream &operator<<(std::ostream &_Stream, _1e6abece6_Sptr _Src) {
	_Stream << "Sptr{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e6ac0c5e_Str(_1e6ac0753_Slc* _self_) {
	return (jule::Str("[]", 2) + _1e6ab6e86_Str((*_self_)._field_Elem.ptr()));
}



inline jule::Bool _1e6ac106c_Equals(jule::Ptr<_1e6ac0753_Slc> _self_, jule::Ptr<_1e6ab6a8a_TypeKind> _45322_other) {
	jule::Ptr<_1e6ac0753_Slc> _45413_slc = _1e6ab9b26_Slc(_45322_other.ptr());;
	if ((_45413_slc == nullptr)) {
		return false;
	};
	return _1e6ab7294_Equals(_self_.get()._field_Elem, _45413_slc.get()._field_Elem);
}







std::ostream &operator<<(std::ostream &_Stream, _1e6ac0753_Slc _Src) {
	_Stream << "Slc{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e6ac1644_Str(_1e6ac12d1_Tuple* _self_) {
	jule::Str _47017_s = jule::Str("(", 1);;
	_47017_s+=_1e6ab6e86_Str((*_self_)._field_Types[0LL].ptr());
	{
		auto expr = (*_self_)._field_Types.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1b2b83927:;
		if (it != expr.end()) {
			jule::Ptr<_1e6ab6a8a_TypeKind> &_47216_t = *it;
			{
				_47017_s+=jule::Str(",", 1);
				_47017_s+=_1e6ab6e86_Str(_47216_t.ptr());
			}
			_iter_next_1b2b83927:;
			++it;
			goto _iter_begin_1b2b83927;
		}
		_iter_end_1b2b83927:;
	};
	_47017_s+=jule::Str(")", 1);
	return _47017_s;
}



inline jule::Bool _1e6ac1952_Equals(jule::Ptr<_1e6ac12d1_Tuple> _self_, jule::Ptr<_1e6ab6a8a_TypeKind> _48122_other) {
	jule::Ptr<_1e6ac12d1_Tuple> _48213_tup = _1e6aba83b_Tup(_48122_other.ptr());;
	if ((_48213_tup == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_Types.len() != _48213_tup.get()._field_Types.len())) {
		return false;
	};
	jule::I64 _48917_i = 0LL;;
	for (; (_48917_i < _self_.get()._field_Types.len()); (_48917_i)++) {
		{
			if ((!(_1e6ab7294_Equals(_self_.get()._field_Types[_48917_i], _48213_tup.get()._field_Types[_48917_i])))) {
				return false;
			};
		}
	_iter_next_1b2b87013:;
	}
	_iter_end_1b2b87013:;;
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6ac12d1_Tuple _Src) {
	_Stream << "Tuple{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e6ac216c_Str(_1e6ac1d09_Map* _self_) {
	jule::Str _50917_s = jule::Str("[", 1);;
	_50917_s+=_1e6ab6e86_Str((*_self_)._field_Key.ptr());
	_50917_s+=jule::Str(":", 1);
	_50917_s+=_1e6ab6e86_Str((*_self_)._field_Val.ptr());
	_50917_s+=jule::Str("]", 1);
	return _50917_s;
}



inline jule::Bool _1e6ac247a_Equals(jule::Ptr<_1e6ac1d09_Map> _self_, jule::Ptr<_1e6ab6a8a_TypeKind> _51822_other) {
	jule::Ptr<_1e6ac1d09_Map> _51913_map = _1e6aba5c7_Map(_51822_other.ptr());;
	if ((_51913_map == nullptr)) {
		return false;
	};
	return (_1e6ab7294_Equals(_self_.get()._field_Key, _51913_map.get()._field_Key) && _1e6ab7294_Equals(_self_.get()._field_Val, _51913_map.get()._field_Val));
}







std::ostream &operator<<(std::ostream &_Stream, _1e6ac1d09_Map _Src) {
	_Stream << "Map{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e6ac2c61_Str(_1e6ac28ed_Arr* _self_) {
	jule::Str _53717_s = jule::Str("[", 1);;
	_53717_s+=_1e6a04566_Itoa((*_self_)._field_N);
	_53717_s+=jule::Str("]", 1);
	_53717_s+=_1e6ab6e86_Str((*_self_)._field_Elem.ptr());
	return _53717_s;
}



inline jule::Bool _1e6ac306e_Equals(jule::Ptr<_1e6ac28ed_Arr> _self_, jule::Ptr<_1e6ab6a8a_TypeKind> _54522_other) {
	jule::Ptr<_1e6ac28ed_Arr> _54613_arr = _1e6ab98b2_Arr(_54522_other.ptr());;
	if ((_54613_arr == nullptr)) {
		return false;
	};
	return ((_self_.get()._field_N == _54613_arr.get()._field_N) && _1e6ab7294_Equals(_self_.get()._field_Elem, _54613_arr.get()._field_Elem));
}







std::ostream &operator<<(std::ostream &_Stream, _1e6ac28ed_Arr _Src) {
	_Stream << "Arr{";
	_Stream << "Auto:" << _Src._field_Auto << ", ";
	_Stream << "N:" << _Src._field_N << ", ";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e6ac36bd_Str(_1e6ac335a_Ptr* _self_) {
	if (_1e6ac3d2d_IsUnsafe(&(*_self_))) {
		return jule::Str("*unsafe", 7);
	};
	return (jule::Str("*", 1) + _1e6ab6e86_Str((*_self_)._field_Elem.ptr()));
}



inline jule::Bool _1e6ac39cb_Equals(jule::Ptr<_1e6ac335a_Ptr> _self_, jule::Ptr<_1e6ab6a8a_TypeKind> _56922_other) {
	jule::Ptr<_1e6ac335a_Ptr> _57013_ptr = _1e6ab9175_Ptr(_56922_other.ptr());;
	if ((_57013_ptr == nullptr)) {
		return false;
	};
	return _1e6ab7294_Equals(_self_.get()._field_Elem, _57013_ptr.get()._field_Elem);
}



inline jule::Bool _1e6ac3d2d_IsUnsafe(_1e6ac335a_Ptr* _self_) {
	return ((*_self_)._field_Elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e6ac335a_Ptr _Src) {
	_Stream << "Ptr{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6ac42a1_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1e6ac5703_pushErr(_1e6ac4ee9_typeChecker* _self_, jule::Ptr<_1e47137a5_Token> _64726_token, jule::Str _64741_fmt, jule::Slice<jule::Any> _64754_args) {
	_1e6a25103_pushErr((*_self_)._field_s.ptr(), _64726_token,_64741_fmt,jule::Any(_64754_args));
}



inline void _1e6ac58ce_allowBuiltin(_1e6ac4ee9_typeChecker* _self_) {
	(*_self_)._field_disBuiltin=false;
}



inline void _1e6ac5aaa_disallowBuiltin(_1e6ac4ee9_typeChecker* _self_) {
	(*_self_)._field_disBuiltin=true;
}



inline jule::Ptr<_1e6abb562_Prim> _1e6ac5db8_buildPrim(_1e6ac4ee9_typeChecker* _self_, jule::Ptr<_1e5d55027_IdentTypeDecl>& _65929_decl) {
	if ((!(_1e6aceeb0_isPrim(_65929_decl.get()._field_Ident)))) {
		_1e6ac5703_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_65929_decl.get()._field_Generics.len() > 0LL)) {
		_1e6ac5703_pushErr(&(*_self_), _65929_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_65929_decl.get()._field_Ident)}));
		return nullptr;
	};
	return _1e6ace971_buildPrimType(_65929_decl.get()._field_Ident);
}



inline void _1b2b968d5_pushReference(_1e6ac4ee9_typeChecker* _self_, jule::Ptr<_1e5d714d8_StructIns>& _67340_t) {
	if (((*_self_)._field_refers == nullptr)) {
		return;;
	};
	if (_1b29200ba_Exist((*_self_)._field_refers.ptr(), _67340_t)) {
		return;;
	};
	_1e5e23da4_Push((*_self_)._field_refers.ptr(), jule::Any(_67340_t));
}

inline void _1b2b99982_pushReference(_1e6ac4ee9_typeChecker* _self_, jule::Ptr<_1e5e2e4db_Trait>& _67340_t) {
	if (((*_self_)._field_refers == nullptr)) {
		return;;
	};
	if (_1b2b9b599_Exist((*_self_)._field_refers.ptr(), _67340_t)) {
		return;;
	};
	_1e5e23da4_Push((*_self_)._field_refers.ptr(), jule::Any(_67340_t));
}



inline void _1e6ac63b3_pushReferenceByKind(_1e6ac4ee9_typeChecker* _self_, jule::Ptr<_1e6ab6a8a_TypeKind>& _68343_k) {
	{
		
		if ((_1e6aba0ee_Struct(_68343_k.ptr()) != nullptr)) {
			_case_begin_1b2b9553d:;
			{
				jule::Ptr<_1e5d714d8_StructIns> _68621_t = _1e6aba0ee_Struct(_68343_k.ptr());;
				_1b2b968d5_pushReference(&(*_self_), _68621_t);
			}
		}
		else if ((_1e6aba363_Trait(_68343_k.ptr()) != nullptr)) {
			_case_begin_1b2b955b5:;
			{
				jule::Ptr<_1e5e2e4db_Trait> _68921_t = _1e6aba363_Trait(_68343_k.ptr());;
				_1b2b99982_pushReference(&(*_self_), _68921_t);
			}
		}
		_match_end_1b2b9541c:;
	};
}



inline void _1e6ac677b_pushCycleError(_1e6ac4ee9_typeChecker* _self_, jule::Any _69429_def1, jule::Any _69440_def2, jule::Str& _69456_message) {
	;
	jule::Fn<jule::Str(jule::Any&)> _69613_getIdent = jule::Fn<jule::Str(jule::Any&)>([=](jule::Any& _69628_def) mutable -> jule::Str {
		{
			auto &_match_expr{ _69628_def };
			
			if (_match_expr.type_is<jule::Ptr<_1e6ab5d97_TypeAlias>>()) {
				_case_begin_1b2b9e954:;
				{
					return _69628_def.operator jule::Ptr<_1e6ab5d97_TypeAlias>().get()._field_Ident;
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1e5d4518d_Struct>>()) {
				_case_begin_1b2b9e9ba:;
				{
					return _69628_def.operator jule::Ptr<_1e5d4518d_Struct>().get()._field_Ident;
				}
			}
			else {
				_case_begin_1b2b9e7bc:;
				{
					return jule::Str();
				}
			}
			_match_end_1b2b9e6e0:;
		};
	});;
	jule::Str _70613_def1Ident = _69613_getIdent(_69429_def1);;
	jule::Str _70713_def2Ident = _69613_getIdent(_69440_def2);;
	jule::Str _70813_refersTo = _1e43e3e58_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_70613_def1Ident),jule::Any(_70713_def2Ident)}));;
	(_69456_message).buffer.insert(0, (((_1e350c9ac_Repeat(jule::Str(" ", 1),4LL) + _70813_refersTo) + jule::Str("\n", 1))));;
}



inline jule::Bool _1e6ac6b33_checkCrossCycle(_1e6ac4ee9_typeChecker* _self_, jule::Any _71230_decl, jule::Str& _71246_message) {
	{
		auto &_match_expr{ _71230_decl };
		
		if (_match_expr.type_is<jule::Ptr<_1e6ab5d97_TypeAlias>>()) {
			_case_begin_1b2ba22b4:;
			{
				jule::Ptr<_1e6ab5d97_TypeAlias> _71517_ta = _71230_decl.operator jule::Ptr<_1e6ab5d97_TypeAlias>();;
				{
					auto &expr = _71517_ta.get()._field_Refers;
					auto it = expr.begin();
					_iter_begin_1b2ba3051:;
					if (it != expr.end()) {
						jule::Any &_71620_d = *it;
						{
							{
								
								if ((_71620_d == (*_self_)._field_referencer.get()._field_owner)) {
									_case_begin_1b2ba39d0:;
									{
										_1e6ac677b_pushCycleError(&(*_self_), jule::Any(_71517_ta),jule::Any(_71620_d),_71246_message);
										return false;
									}
								}
								else if ((!(_1e6ac6b33_checkCrossCycle(&(*_self_), jule::Any(_71620_d),_71246_message)))) {
									_case_begin_1b2ba3a57:;
									{
										_1e6ac677b_pushCycleError(&(*_self_), jule::Any(_71517_ta),jule::Any(_71620_d),_71246_message);
										return false;
									}
								}
								_match_end_1b2ba38ae:;
							};
						}
						_iter_next_1b2ba3051:;
						++it;
						goto _iter_begin_1b2ba3051;
					}
					_iter_end_1b2ba3051:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d4518d_Struct>>()) {
			_case_begin_1b2ba232a:;
			{
				jule::Ptr<_1e5d4518d_Struct> _72717_s = _71230_decl.operator jule::Ptr<_1e5d4518d_Struct>();;
				{
					auto &expr = _72717_s.get()._field_Depends;
					auto it = expr.begin();
					_iter_begin_1b2ba4c45:;
					if (it != expr.end()) {
						jule::Ptr<_1e5d4518d_Struct> &_72820_d = *it;
						{
							{
								
								if (((*_self_)._field_referencer.get()._field_owner == _72820_d)) {
									_case_begin_1b2ba60ba:;
									{
										_1e6ac677b_pushCycleError(&(*_self_), jule::Any(_72717_s),jule::Any(_72820_d),_71246_message);
										return false;
									}
								}
								else if ((!(_1e6ac6b33_checkCrossCycle(&(*_self_), jule::Any(_72820_d),_71246_message)))) {
									_case_begin_1b2ba6142:;
									{
										_1e6ac677b_pushCycleError(&(*_self_), jule::Any(_72717_s),jule::Any(_72820_d),_71246_message);
										return false;
									}
								}
								_match_end_1b2ba5e99:;
							};
						}
						_iter_next_1b2ba4c45:;
						++it;
						goto _iter_begin_1b2ba4c45;
					}
					_iter_end_1b2ba4c45:;
				};
			}
		}
		_match_end_1b2ba225e:;
	};
	return true;
}



inline jule::Bool _1e6ac6eda_checkIllegalCycles(_1e6ac4ee9_typeChecker* _self_, jule::Ptr<_1e5d55027_IdentTypeDecl>& _74638_ident, jule::Any _74665_decl) {
	jule::Bool _74678_ok = jule::Bool();
	if (((*_self_)._field_referencer == nullptr)) {
		_74678_ok = true;
		return _74678_ok;
	};
	{
		auto &_match_expr{ _74665_decl };
		
		if (_match_expr.type_is<jule::Ptr<_1e5d4518d_Struct>>()) {
			_case_begin_1b2ba71ed:;
			{
				if (((*_self_)._field_notPlain || _74665_decl.operator jule::Ptr<_1e5d4518d_Struct>().get()._field_CppLinked)) {
					_74678_ok = true;
					return _74678_ok;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6ab5d97_TypeAlias>>()) {
			_case_begin_1b2ba7341:;
			{
				if (_74665_decl.operator jule::Ptr<_1e6ab5d97_TypeAlias>().get()._field_CppLinked) {
					_74678_ok = true;
					return _74678_ok;
				};
			}
		}
		_match_end_1b2ba7198:;
	};
	if ((_74665_decl == (*_self_)._field_referencer.get()._field_owner)) {
		_1e6ac5703_pushErr(&(*_self_), _74638_ident.get()._field_Token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_referencer.get()._field_ident)}));
		_74678_ok = false;
		return _74678_ok;
	};
	jule::Str _76917_message = jule::Str();;
	if ((!(_1e6ac6b33_checkCrossCycle(&(*_self_), jule::Any(_74665_decl),_76917_message)))) {
		jule::Str _77221_errMsg = _76917_message;;
		_76917_message=jule::Str();
		_1e6ac677b_pushCycleError(&(*_self_), jule::Any((*_self_)._field_referencer.get()._field_owner),jule::Any(_74665_decl),_76917_message);
		_77221_errMsg=(_77221_errMsg + _76917_message);
		_1e6ac5703_pushErr(&(*_self_), _74638_ident.get()._field_Token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_77221_errMsg)}));
		_74678_ok = false;
		return _74678_ok;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_1e6ab5d97_TypeAlias>>()) {
			_case_begin_1b2bac544:;
			{
				{
					(*((*_self_)._field_referencer.get()._field_refs))=jule::append((*((*_self_)._field_referencer.get()._field_refs)),jule::Slice<jule::Any>::make({jule::Any(_74665_decl)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d4518d_Struct>>()) {
			_case_begin_1b2bac610:;
			{
				{
					auto &_match_expr{ _74665_decl };
					
					if (_match_expr.type_is<jule::Ptr<_1e5d4518d_Struct>>()) {
						_case_begin_1b2bacd5d:;
						{
							jule::Ptr<_1e5d4518d_Struct> _78825_s = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_1e5d4518d_Struct>();;
							_78825_s.get()._field_Depends = jule::alloc_for_append(_78825_s.get()._field_Depends,1);_78825_s.get()._field_Depends.__push(_74665_decl.operator jule::Ptr<_1e5d4518d_Struct>());;
						}
					}
					_match_end_1b2bacc70:;
				};
			}
		}
		_match_end_1b2bac4de:;
	};
	_74678_ok = true;
	return _74678_ok;
}



inline jule::Trait<_1e6ab665b_Kind> _1e6ac7392_fromTypeAlias(_1e6ac4ee9_typeChecker* _self_, jule::Ptr<_1e5d55027_IdentTypeDecl>& _79633_decl, jule::Ptr<_1e6ab5d97_TypeAlias>& _79660_ta) {
	if ((!(_1e6a257c9_isAccessibleDefine((*_self_)._field_s.ptr(), _79660_ta.get()._field_Public,_79660_ta.get()._field_Token)))) {
		_1e6ac5703_pushErr(&(*_self_), _79633_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_79633_decl.get()._field_Ident)}));
		return nullptr;
	};
	_79660_ta.get()._field_Used=true;
	if ((_79633_decl.get()._field_Generics.len() > 0LL)) {
		_1e6ac5703_pushErr(&(*_self_), _79633_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_79633_decl.get()._field_Ident)}));
		return nullptr;
	};
	if (((!((*_self_)._field_inscatch)) && ((*_self_)._field_bannedGenerics != nullptr))) {
		(*_self_)._field_inscatch=true;
		{
			auto &expr = (*_self_)._field_bannedGenerics;
			auto it = expr.begin();
			_iter_begin_1b2bb26d1:;
			if (it != expr.end()) {
				jule::Ptr<_1e6ab5d97_TypeAlias> _81320_bg = *it;
				{
					if (((_81320_bg == _79660_ta) || ((_79660_ta.get()._field_Kind.get()._field_Kind != nullptr) && _1e6ab7294_Equals(_79660_ta.get()._field_Kind.get()._field_Kind, _81320_bg.get()._field_Kind.get()._field_Kind)))) {
						(*_self_)._field_inscatch=false;
						goto _iter_end_1b2bb26d1;
					};
				}
				_iter_next_1b2bb26d1:;
				++it;
				goto _iter_begin_1b2bb26d1;
			}
			_iter_end_1b2bb26d1:;
		};
	};
	if ((*_self_)._field_inscatch) {
		{
			auto &expr = (*_self_)._field_bannedGenerics;
			auto it = expr.begin();
			_iter_begin_1b2bb4507:;
			if (it != expr.end()) {
				jule::Ptr<_1e6ab5d97_TypeAlias> _82420_bg = *it;
				{
					if ((_82420_bg == _79660_ta)) {
						_1e6ac5703_pushErr(&(*_self_), _79633_decl.get()._field_Token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_79633_decl.get()._field_Ident)}));
						return nullptr;
					};
					{
						auto &expr = _79660_ta.get()._field_Generics;
						auto it = expr.begin();
						_iter_begin_1b2bb4e97:;
						if (it != expr.end()) {
							jule::Ptr<_1e6ab5d97_TypeAlias> _82924_dg = *it;
							{
								if ((_82420_bg == _82924_dg)) {
									_1e6ac5703_pushErr(&(*_self_), _79633_decl.get()._field_Token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_79633_decl.get()._field_Ident)}));
									return nullptr;
								};
							}
							_iter_next_1b2bb4e97:;
							++it;
							goto _iter_begin_1b2bb4e97;
						}
						_iter_end_1b2bb4e97:;
					};
				}
				_iter_next_1b2bb4507:;
				++it;
				goto _iter_begin_1b2bb4507;
			}
			_iter_end_1b2bb4507:;
		};
	};
	jule::Bool _83817_ok = _1e6ac6eda_checkIllegalCycles(&(*_self_), _79633_decl,jule::Any(_79660_ta));;
	if ((!(_83817_ok))) {
		return nullptr;
	};
	_83817_ok=_1e6a2dc66_checkTypeAliasDeclKind((*_self_)._field_s, _79660_ta,(*_self_)._field_lookup);
	if ((!(_83817_ok))) {
		return nullptr;
	};
	if ((_79660_ta.get()._field_Generic && ((*_self_)._field_ownerAlias != nullptr))) {
		(*_self_)._field_ownerAlias.get()._field_Generics = jule::alloc_for_append((*_self_)._field_ownerAlias.get()._field_Generics,1);(*_self_)._field_ownerAlias.get()._field_Generics.__push(_79660_ta);;
	};
	jule::Ptr<_1e6ab6a8a_TypeKind> _85517_tk = jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Generic=_79660_ta.get()._field_Generic, ._field_Kind=_79660_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind});;
	_1e6ac63b3_pushReferenceByKind(&(*_self_), _85517_tk);
	if (_79660_ta.get()._field_CppLinked) {
		_85517_tk.get()._field_CppIdent=_79660_ta.get()._field_Ident;
	} else {
		_85517_tk.get()._field_CppIdent=_79660_ta.get()._field_Kind.get()._field_Kind.get()._field_CppIdent;
	};
	return jule::Trait<_1e6ab665b_Kind>(_85517_tk, 5);
}



inline jule::Ptr<_1e5e31631_Enum> _1e6ac7749_fromEnum(_1e6ac4ee9_typeChecker* _self_, jule::Ptr<_1e5d55027_IdentTypeDecl>& _86828_decl, jule::Ptr<_1e5e31631_Enum>& _86855_e) {
	if ((!(_1e6a257c9_isAccessibleDefine((*_self_)._field_s.ptr(), _86855_e.get()._field_Public,_86855_e.get()._field_Token)))) {
		_1e6ac5703_pushErr(&(*_self_), _86828_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_86828_decl.get()._field_Ident)}));
		return nullptr;
	};
	if ((_86828_decl.get()._field_Generics.len() > 0LL)) {
		_1e6ac5703_pushErr(&(*_self_), _86828_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_86828_decl.get()._field_Ident)}));
		return nullptr;
	};
	return _86855_e;
}



inline jule::Ptr<_1e5e32c2b_TypeEnum> _1e6ac7b01_fromTypeEnum(_1e6ac4ee9_typeChecker* _self_, jule::Ptr<_1e5d55027_IdentTypeDecl>& _88032_decl, jule::Ptr<_1e5e32c2b_TypeEnum>& _88059_e) {
	if ((!(_1e6a257c9_isAccessibleDefine((*_self_)._field_s.ptr(), _88059_e.get()._field_Public,_88059_e.get()._field_Token)))) {
		_1e6ac5703_pushErr(&(*_self_), _88032_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_88032_decl.get()._field_Ident)}));
		return nullptr;
	};
	if ((_88032_decl.get()._field_Generics.len() > 0LL)) {
		_1e6ac5703_pushErr(&(*_self_), _88032_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_88032_decl.get()._field_Ident)}));
		return nullptr;
	};
	return _88059_e;
}



inline jule::Ptr<_1e5e2e4db_Trait> _1e6ac7ea8_fromTrait(_1e6ac4ee9_typeChecker* _self_, jule::Ptr<_1e5d55027_IdentTypeDecl>& _89229_decl, jule::Ptr<_1e5e2e4db_Trait>& _89256_t) {
	if ((!(_1e6a257c9_isAccessibleDefine((*_self_)._field_s.ptr(), _89256_t.get()._field_Public,_89256_t.get()._field_Token)))) {
		_1e6ac5703_pushErr(&(*_self_), _89229_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_89229_decl.get()._field_Ident)}));
		return nullptr;
	};
	if ((_89229_decl.get()._field_Generics.len() > 0LL)) {
		_1e6ac5703_pushErr(&(*_self_), _89229_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_89229_decl.get()._field_Ident)}));
		return nullptr;
	};
	_1b2b99982_pushReference(&(*_self_), _89256_t);
	return _89256_t;
}



inline jule::Bool _1e6ac8360_checkStructIns(_1e6ac4ee9_typeChecker* _self_, jule::Ptr<_1e5d714d8_StructIns>& _90538_ins, jule::Ptr<_1e47137a5_Token>& _90560_errorToken) {
	jule::Bool _90582_ok = jule::Bool();
	if (_90538_ins.get()._field_Checked) {
		_90582_ok = true;
		return _90582_ok;
	};
	_90538_ins.get()._field_Checked=true;
	if ((((*_self_)._field_referencer != nullptr) && ((*_self_)._field_referencer.get()._field_owner == _90538_ins.get()._field_Decl))) {
		_90582_ok = true;
		return _90582_ok;
	};
	if ((!(_1e6a37de6_precheckStructIns((*_self_)._field_s, _90538_ins,_90560_errorToken)))) {
		_90582_ok = false;
		return _90582_ok;
	};
	if ((_90538_ins.get()._field_Generics.len() > 0LL)) {
		_1e6a38864_checkStructInsOperators((*_self_)._field_s, _90538_ins);
		_1e6a3816b_checkStructIns((*_self_)._field_s, _90538_ins);
	};
	_90582_ok = true;
	return _90582_ok;
}



inline void _1e6ac8607_appendUsedStructReference(_1e6ac4ee9_typeChecker* _self_, jule::Ptr<_1e5d4518d_Struct>& _92649_s) {
	if (((*_self_)._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_1e5d4518d_Struct>>()) {
			_case_begin_1b2bc630a:;
			{
				jule::Ptr<_1e5d4518d_Struct> _93221_refS = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_1e5d4518d_Struct>();;
				if ((!(_1e5d361e5_IsUses(_93221_refS.ptr(), _92649_s)))) {
					_93221_refS.get()._field_Uses = jule::alloc_for_append(_93221_refS.get()._field_Uses,1);_93221_refS.get()._field_Uses.__push(_92649_s);;
				};
			}
		}
		_match_end_1b2bc601e:;
	};
}



inline jule::Ptr<_1e5d714d8_StructIns> _1e6ac89c0_buildStructInstance(_1e6ac4ee9_typeChecker* _self_, jule::Ptr<_1e5d55027_IdentTypeDecl>& _93943_decl, jule::Ptr<_1e5d4518d_Struct>& _93970_s) {
	jule::Ptr<_1e6ac42a1_referencer> _94117_referencer = (*_self_)._field_referencer;;
	(*_self_)._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1e6ab5d97_TypeAlias>> _94317_bannedGenerics = (*_self_)._field_bannedGenerics;;
	if (((*_self_)._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*_self_)._field_lookup };
			
			if (_match_expr.type_is<jule::Ptr<_1e6a09505_scopeChecker>>()) {
				_case_begin_1b2bc8ede:;
				{
					jule::Ptr<_1e6a09505_scopeChecker> _95025_sc = (*_self_)._field_lookup.operator jule::Ptr<_1e6a09505_scopeChecker>();;
					jule::Ptr<_1e6a09505_scopeChecker> _95125_hard = _1e6a0aa12_getHardRoot(_95025_sc);;
					if (((_95125_hard.get()._field_owner.get()._field_Owner == nullptr) || (_95125_hard.get()._field_owner.get()._field_Owner.get()._field_Decl != _93970_s))) {
						goto _match_end_1b2bc8e89;
					};
					jule::I64 _95521_n = (_95125_hard.get()._field_owner.get()._field_Generics.len() + _95125_hard.get()._field_owner.get()._field_Owner.get()._field_Generics.len());;
					(*_self_)._field_bannedGenerics=_95125_hard.get()._field_table.get()._field_TypeAliases.slice(0LL,_95521_n);
				}
			}
			_match_end_1b2bc8e89:;
		};
	} else {
		(*_self_)._field_inscatch=true;
	};
	jule::Ptr<_1e5d714d8_StructIns> _96517_ins = _1e5d2649e_instance(_93970_s);;
	_96517_ins.get()._field_Generics=jule::Slice<jule::Ptr<_1e6ab535d_InsGeneric>>::alloc(0LL,_93943_decl.get()._field_Generics.len());
	{
		auto &expr = _93943_decl.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1b2bccbd5:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d54961_TypeDecl> _96721_g = *it;
			{
				jule::Ptr<_1e6ab6a8a_TypeKind> _96821_kind = _1e6acbe57_build(&(*_self_), _96721_g.get()._field_Kind);;
				if ((_96821_kind == nullptr)) {
					return nullptr;
				};
				_96517_ins.get()._field_Generics = jule::alloc_for_append(_96517_ins.get()._field_Generics,1);_96517_ins.get()._field_Generics.__push(jule::new_ptr<_1e6ab535d_InsGeneric>(_1e6ab535d_InsGeneric{._field_Kind=_96821_kind, }));;
			}
			_iter_next_1b2bccbd5:;
			++it;
			goto _iter_begin_1b2bccbd5;
		}
		_iter_end_1b2bccbd5:;
	};
	(*_self_)._field_bannedGenerics=_94317_bannedGenerics;
	(*_self_)._field_referencer=_94117_referencer;
	return _96517_ins;
}



inline jule::Ptr<_1e5d714d8_StructIns> _1e6ac8d77_fromStruct(_1e6ac4ee9_typeChecker* _self_, jule::Ptr<_1e5d55027_IdentTypeDecl>& _98234_decl, jule::Ptr<_1e5d4518d_Struct>& _98261_s) {
	if ((!(_1e6a257c9_isAccessibleDefine((*_self_)._field_s.ptr(), _98261_s.get()._field_Public,_98261_s.get()._field_Token)))) {
		_1e6ac5703_pushErr(&(*_self_), _98234_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_98234_decl.get()._field_Ident)}));
		return nullptr;
	};
	if ((*_self_)._field_selection) {
		if ((_98234_decl.get()._field_Generics.len() > 0LL)) {
			_1e6ac5703_pushErr(&(*_self_), _98234_decl.get()._field_Token,jule::Str("generics are not allowed in this scope", 38),jule::Slice<jule::Any>());
			return nullptr;
		};
		return jule::new_ptr<_1e5d714d8_StructIns>(_1e5d714d8_StructIns{._field_Decl=_98261_s, });
	};
	jule::Bool _100017_ok = ((*_self_)._field_notPlain || _1e6ac6eda_checkIllegalCycles(&(*_self_), _98234_decl,jule::Any(_98261_s)));;
	if ((!(_100017_ok))) {
		return nullptr;
	};
	_1e6ac8607_appendUsedStructReference(&(*_self_), _98261_s);
	jule::Ptr<_1e5d714d8_StructIns> _100617_ins = _1e6ac89c0_buildStructInstance(&(*_self_), _98234_decl,_98261_s);;
	if ((_100617_ins == nullptr)) {
		return nullptr;
	};
	_100017_ok=_1e6a2649a_checkGenericQuantity((*_self_)._field_s.ptr(), static_cast<jule::I64>(_100617_ins.get()._field_Decl.get()._field_Generics.len()),static_cast<jule::I64>(_100617_ins.get()._field_Generics.len()),_98234_decl.get()._field_Token);
	if ((!(_100017_ok))) {
		return nullptr;
	};
	jule::Ptr<_1e5d714d8_StructIns> _101617_existInstance = _1e5d2c593_appendInstance(_98261_s.ptr(), _100617_ins);;
	if ((_101617_existInstance != nullptr)) {
		if ((!(_1e6a2c418_checkConstraintsStruct((*_self_)._field_s, _100617_ins,_98234_decl.get()._field_Token,_101617_existInstance)))) {
			return nullptr;
		};
		_1b2b968d5_pushReference(&(*_self_), _101617_existInstance);
		return _101617_existInstance;
	};
	if ((!(_1e6ac8360_checkStructIns(&(*_self_), _100617_ins,_98234_decl.get()._field_Token)))) {
		return nullptr;
	};
	_1b2b968d5_pushReference(&(*_self_), _100617_ins);
	return _100617_ins;
}



inline jule::Trait<_1e6ab665b_Kind> _1e6ac9185_getDef(_1e6ac4ee9_typeChecker* _self_, jule::Ptr<_1e5d55027_IdentTypeDecl>& _104030_decl) {
	{
		auto &expr = (*_self_)._field_ignoreGenerics;
		auto it = expr.begin();
		_iter_begin_1b2bd796a:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d62045_GenericDecl> _104116_g = *it;
			{
				if ((_104116_g.get()._field_Ident == _104030_decl.get()._field_Ident)) {
					return jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(_104116_g.get()._field_Ident), 6);
				};
			}
			_iter_next_1b2bd796a:;
			++it;
			goto _iter_begin_1b2bd796a;
		}
		_iter_end_1b2bd796a:;
	};
	{
		auto &expr = (*_self_)._field_useGenerics;
		auto it = expr.begin();
		_iter_begin_1b2bd8295:;
		if (it != expr.end()) {
			jule::Ptr<_1e6ab5d97_TypeAlias> _104721_g = *it;
			{
				if ((_104721_g.get()._field_Ident == _104030_decl.get()._field_Ident)) {
					if ((_104030_decl.get()._field_Generics.len() > 0LL)) {
						_1e6ac5703_pushErr(&(*_self_), _104030_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_104030_decl.get()._field_Ident)}));
						return nullptr;
					};
					jule::Ptr<_1e5d714d8_StructIns> _105325_st = _1e6aba0ee_Struct(_104721_g.get()._field_Kind.get()._field_Kind.ptr());;
					if ((_105325_st != nullptr)) {
						jule::Bool _105525_ok = _1e6ac6eda_checkIllegalCycles(&(*_self_), _104030_decl,jule::Any(_105325_st.get()._field_Decl));;
						if ((!(_105525_ok))) {
							return nullptr;
						};
					};
					return _104721_g.get()._field_Kind.get()._field_Kind.get()._field_Kind;
				};
			}
			_iter_next_1b2bd8295:;
			++it;
			goto _iter_begin_1b2bd8295;
		}
		_iter_end_1b2bd8295:;
	};
	if ((!(_104030_decl.get()._field_CppLinked))) {
		jule::Ptr<_1e5e31631_Enum> _106521_e = _1e6ad2600_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1e6ad219e_FindEnum((*_self_)._field_lookup, _104030_decl.get()._field_Ident);;
		if ((_106521_e != nullptr)) {
			return jule::Trait<_1e6ab665b_Kind>(_1e6ac7749_fromEnum(&(*_self_), _104030_decl,_106521_e), 3);
		};
		jule::Ptr<_1e5e32c2b_TypeEnum> _107021_te = _1e6ad2600_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1e6ad24ac_FindTypeEnum((*_self_)._field_lookup, _104030_decl.get()._field_Ident);;
		if ((_107021_te != nullptr)) {
			return jule::Trait<_1e6ab665b_Kind>(_1e6ac7b01_fromTypeEnum(&(*_self_), _104030_decl,_107021_te), 4);
		};
		jule::Ptr<_1e5e2e4db_Trait> _107521_t = _1e6ad2600_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1e6ad1d91_FindTrait((*_self_)._field_lookup, _104030_decl.get()._field_Ident);;
		if ((_107521_t != nullptr)) {
			return jule::Trait<_1e6ab665b_Kind>(_1e6ac7ea8_fromTrait(&(*_self_), _104030_decl,_107521_t), 2);
		};
	} else if ((*_self_)._field_selection) {
		_1e6ac5703_pushErr(&(*_self_), _104030_decl.get()._field_Token,jule::Str("cpp-linked definitions are not allowed in this scope", 52),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e5d4518d_Struct> _108417_s = _1e6ad2600_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1e6ad16cb_FindStruct((*_self_)._field_lookup, _104030_decl.get()._field_Ident,_104030_decl.get()._field_CppLinked);;
	if ((_108417_s != nullptr)) {
		return jule::Trait<_1e6ab665b_Kind>(_1e6ac8d77_fromStruct(&(*_self_), _104030_decl,_108417_s), 0);
	};
	jule::Ptr<_1e6ab5d97_TypeAlias> _108917_ta = _1e6ad2600_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1e6ad1324_FindTypeAlias((*_self_)._field_lookup, _104030_decl.get()._field_Ident,_104030_decl.get()._field_CppLinked);;
	if (((_108917_ta == nullptr) && (!((*_self_)._field_disBuiltin)))) {
		_108917_ta=_1e6ade695_findBuiltinTypeAlias(_104030_decl.get()._field_Ident);
	};
	if ((_108917_ta != nullptr)) {
		return _1e6ac7392_fromTypeAlias(&(*_self_), _104030_decl,_108917_ta);
	};
	_1e6ac5703_pushErr(&(*_self_), _104030_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_104030_decl.get()._field_Ident)}));
	return nullptr;
}



inline jule::Trait<_1e6ab665b_Kind> _1e6ac9493_buildIdent(_1e6ac4ee9_typeChecker* _self_, jule::Ptr<_1e5d55027_IdentTypeDecl> _110133_decl) {
	{
		
		if (_1e6aceeb0_isPrim(_110133_decl.get()._field_Ident)) {
			_case_begin_1b2be3d50:;
			{
				return jule::Trait<_1e6ab665b_Kind>(_1e6ac5db8_buildPrim(&(*_self_), _110133_decl), 6);
			}
		}
		else {
			_case_begin_1b2be35d0:;
			{
				return _1e6ac9185_getDef(&(*_self_), _110133_decl);
			}
		}
		_match_end_1b2be3503:;
	};
}



inline jule::Trait<_1e6ab665b_Kind> _1e6ac97a1_buildSubIdent(_1e6ac4ee9_typeChecker* _self_, jule::Ptr<_1e5d55676_SubIdentTypeDecl> _111036_decl) {
	jule::Trait<_1e6ab665b_Kind> _111117_ident = _1e6ac9493_buildIdent(&(*_self_), _111036_decl.get()._field_Idents[0LL]);;
	if ((_111117_ident == nullptr)) {
		return nullptr;
	};
	{
		auto &_match_expr{ _111117_ident };
		
		if (_match_expr.type_is<jule::Ptr<_1e5e32c2b_TypeEnum>>()) {
			_case_begin_1b2be5835:;
			{
				goto _match_end_1b2be5758;
			}
		}
		else {
			_case_begin_1b2be5527:;
			{
				_1e6ac5703_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1b2be5758:;
	};
	jule::Ptr<_1e5e32c2b_TypeEnum> _112317_t = _111117_ident.operator jule::Ptr<_1e5e32c2b_TypeEnum>();;
	jule::Slice<jule::Ptr<_1e5d55027_IdentTypeDecl>> _112417_idents = _111036_decl.get()._field_Idents.slice(1LL);;
	{
		auto &expr = _112417_idents;
		auto it = expr.begin();
		_iter_begin_1b2be6b66:;
		if (it != expr.end()) {
			jule::I64 _112513_i = it - expr.begin();
			jule::Ptr<_1e5d55027_IdentTypeDecl> _112516_id = *it;
			{
				jule::Ptr<_1e5e32665_TypeEnumItem> _112621_item = _1e5e33765_FindItem(_112317_t.ptr(), _112516_id.get()._field_Ident);;
				if ((_112621_item == nullptr)) {
					_1e6ac5703_pushErr(&(*_self_), _112516_id.get()._field_Token,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_112317_t.get()._field_Ident),jule::Any(_112516_id.get()._field_Ident)}));
					return nullptr;
				};
				if (((_112417_idents.len() - _112513_i) == 1LL)) {
					_1e6ac63b3_pushReferenceByKind(&(*_self_), _112621_item.get()._field_Kind.get()._field_Kind);
					return jule::Trait<_1e6ab665b_Kind>(_112621_item.get()._field_Kind.get()._field_Kind, 5);
				};
				_112317_t=_1e6ab964d_TypeEnum(_112621_item.get()._field_Kind.get()._field_Kind.ptr());
				if ((_112317_t == nullptr)) {
					_1e6ac5703_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;
				};
			}
			_iter_next_1b2be6b66:;
			++it;
			_112513_i++;
			goto _iter_begin_1b2be6b66;
		}
		_iter_end_1b2be6b66:;
	};
	return nullptr;
}



inline jule::Ptr<_1e6abece6_Sptr> _1e6ac9aae_buildSptrFromType(_1e6ac4ee9_typeChecker* _self_, jule::Ptr<_1e6ab6a8a_TypeKind>& _114541_elem) {
	{
		
		if ((_114541_elem == nullptr)) {
			_case_begin_1b2be7628:;
			{
				return nullptr;
			}
		}
		else if ((_1e6aba0ee_Struct(_114541_elem.ptr()) != nullptr)) {
			_case_begin_1b2be76a0:;
			{
				jule::Ptr<_1e5d714d8_StructIns> _115117_s = _1e6aba0ee_Struct(_114541_elem.ptr());;
				if (((_115117_s.get()._field_Decl != nullptr) && _115117_s.get()._field_Decl.get()._field_CppLinked)) {
					_1e6ac5703_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
					return nullptr;
				};
			}
		}
		else if (((_1e6ab98b2_Arr(_114541_elem.ptr()) != nullptr) && _1e6ab98b2_Arr(_114541_elem.ptr()).get()._field_Auto)) {
			_case_begin_1b2be7727:;
			{
				_1e6ac5703_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1b2be74e6:;
	};
	return jule::new_ptr<_1e6abece6_Sptr>(_1e6abece6_Sptr{._field_Elem=_114541_elem});
}



inline jule::Ptr<_1e6abece6_Sptr> _1e6ac9dbc_buildSptr(_1e6ac4ee9_typeChecker* _self_, jule::Ptr<_1e5d55d19_SptrTypeDecl> _116532_decl) {
	jule::Bool _116613_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_116613_notPlain;
	});;
	jule::Ptr<_1e6ab6a8a_TypeKind> _117017_elem = _1e6acc265_checkDecl(&(*_self_), _116532_decl.get()._field_Elem);;
	return _1e6ac9aae_buildSptrFromType(&(*_self_), _117017_elem);
}



inline jule::Ptr<_1e6ac335a_Ptr> _1e6aca1ca_buildPtrFromType(_1e6ac4ee9_typeChecker* _self_, jule::Ptr<_1e6ab6a8a_TypeKind>& _117440_elem) {
	{
		
		if ((_117440_elem == nullptr)) {
			_case_begin_1b2c00c80:;
			{
				return nullptr;
			}
		}
		else if (((_1e6ab98b2_Arr(_117440_elem.ptr()) != nullptr) && _1e6ab98b2_Arr(_117440_elem.ptr()).get()._field_Auto)) {
			_case_begin_1b2c00d07:;
			{
				_1e6ac5703_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return jule::new_ptr<_1e6ac335a_Ptr>();
			}
		}
		_match_end_1b2c00b5e:;
	};
	return jule::new_ptr<_1e6ac335a_Ptr>(_1e6ac335a_Ptr{._field_Elem=_117440_elem});
}



inline jule::Ptr<_1e6ac335a_Ptr> _1e6aca4d8_buildPtr(_1e6ac4ee9_typeChecker* _self_, jule::Ptr<_1e5d567dc_PtrTypeDecl> _118931_decl) {
	jule::Bool _119013_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_119013_notPlain;
	});;
	jule::Ptr<_1e6ab6a8a_TypeKind> _119417_elem = nullptr;;
	if ((!(_1e5d56b3e_IsUnsafe(_118931_decl.ptr())))) {
		_119417_elem=_1e6acc265_checkDecl(&(*_self_), _118931_decl.get()._field_Elem);
		return _1e6aca1ca_buildPtrFromType(&(*_self_), _119417_elem);
	};
	return jule::new_ptr<_1e6ac335a_Ptr>(_1e6ac335a_Ptr{._field_Elem=_119417_elem});
}



inline jule::Ptr<_1e6ac0753_Slc> _1e6aca7e6_buildSlc(_1e6ac4ee9_typeChecker* _self_, jule::Ptr<_1e5d56215_SlcTypeDecl> _120631_decl) {
	jule::Bool _120713_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_120713_notPlain;
	});;
	jule::Ptr<_1e6ab6a8a_TypeKind> _121117_elem = _1e6acc265_checkDecl(&(*_self_), _120631_decl.get()._field_Elem);;
	{
		
		if ((_121117_elem == nullptr)) {
			_case_begin_1b2c0602c:;
			{
				return nullptr;
			}
		}
		else if (((_1e6ab98b2_Arr(_121117_elem.ptr()) != nullptr) && _1e6ab98b2_Arr(_121117_elem.ptr()).get()._field_Auto)) {
			_case_begin_1b2c060a4:;
			{
				_1e6ac5703_pushErr(&(*_self_), _120631_decl.get()._field_Elem.get()._field_Token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1b2c05e72:;
	};
	return jule::new_ptr<_1e6ac0753_Slc>(_1e6ac0753_Slc{._field_Elem=_121117_elem});
}



inline jule::Ptr<_1e6ac28ed_Arr> _1e6acab04_buildArr(_1e6ac4ee9_typeChecker* _self_, jule::Ptr<_1e5d56e6e_ArrTypeDecl> _122731_decl) {
	jule::Bool _122813_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_122813_notPlain;
	});;
	jule::I64 _123217_n = 0LL;;
	if ((!(_1e5d57348_AutoSized(_122731_decl.ptr())))) {
		jule::Ptr<_1e6a8ac6d_Data> _123521_size = _1e6aa832e_evalExpr(_1e6a2a669_eval((*_self_)._field_s, (*_self_)._field_lookup), _122731_decl.get()._field_Size);;
		if ((_123521_size == nullptr)) {
			return nullptr;
		};
		if ((!(_1e6a8b631_IsConst(_123521_size.ptr())))) {
			_1e6ac5703_pushErr(&(*_self_), _122731_decl.get()._field_Size.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
			return nullptr;
		} else if (((_1e6ab8b9c_Prim(_123521_size.get()._field_Kind.ptr()) == nullptr) || (!(_1e6a0604b_IsInt(_1e6ab8b9c_Prim(_123521_size.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1e6ac5703_pushErr(&(*_self_), _122731_decl.get()._field_Size.get()._field_Token,jule::Str("array size must be integer", 26),jule::Slice<jule::Any>());
			return nullptr;
		};
		_123217_n=static_cast<jule::I64>(static_cast<jule::I64>(_1e5e0da3c_AsI64(_123521_size.get()._field_Constant.ptr())));
		if ((_123217_n < 0LL)) {
			_1e6ac5703_pushErr(&(*_self_), _122731_decl.get()._field_Elem.get()._field_Token,jule::Str("array size must be positive integer", 35),jule::Slice<jule::Any>());
			return nullptr;
		} else if (((_1e601601d_BitSize != 64LL) && (static_cast<jule::F64>(_123217_n) > _1e63bcc43_Max(jule::Str("int", 3))))) {
			_1e6ac5703_pushErr(&(*_self_), _122731_decl.get()._field_Size.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	jule::Ptr<_1e6ab6a8a_TypeKind> _125817_elem = _1e6acc265_checkDecl(&(*_self_), _122731_decl.get()._field_Elem);;
	{
		
		if ((_125817_elem == nullptr)) {
			_case_begin_1b2c148a9:;
			{
				return nullptr;
			}
		}
		else if (((_1e6ab98b2_Arr(_125817_elem.ptr()) != nullptr) && _1e6ab98b2_Arr(_125817_elem.ptr()).get()._field_Auto)) {
			_case_begin_1b2c14920:;
			{
				_1e6ac5703_pushErr(&(*_self_), _122731_decl.get()._field_Elem.get()._field_Token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1b2c14634:;
	};
	return jule::new_ptr<_1e6ac28ed_Arr>(_1e6ac28ed_Arr{._field_Auto=_1e5d57348_AutoSized(_122731_decl.ptr()), ._field_N=_123217_n, ._field_Elem=_125817_elem});
}



inline jule::Ptr<_1e6ac1d09_Map> _1e6acae12_buildMap(_1e6ac4ee9_typeChecker* _self_, jule::Ptr<_1e5d576bc_MapTypeDecl> _127631_decl) {
	jule::Bool _127713_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_127713_notPlain;
	});;
	jule::Ptr<_1e6ab6a8a_TypeKind> _128117_key = _1e6acc265_checkDecl(&(*_self_), _127631_decl.get()._field_Key);;
	if ((_128117_key == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1e6ab6a8a_TypeKind> _128617_val = _1e6acc265_checkDecl(&(*_self_), _127631_decl.get()._field_Val);;
	if ((_128617_val == nullptr)) {
		return nullptr;
	};
	if ((_1e6ab93d9_Enum(_128617_val.ptr()) != nullptr)) {
		_1e6ac5703_pushErr(&(*_self_), _127631_decl.get()._field_Val.get()._field_Token,jule::Str("maps do not support enums as map key type", 41),jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1e6ac1d09_Map>(_1e6ac1d09_Map{._field_Key=_128117_key, ._field_Val=_128617_val});
}



inline jule::Ptr<_1e6ac12d1_Tuple> _1e6acb220_buildTuple(_1e6ac4ee9_typeChecker* _self_, jule::Ptr<_1e5d56501_TupleTypeDecl> _130033_decl) {
	jule::Slice<jule::Ptr<_1e6ab6a8a_TypeKind>> _130117_types = jule::Slice<jule::Ptr<_1e6ab6a8a_TypeKind>>::alloc(0LL,_130033_decl.get()._field_Types.len());;
	{
		auto &expr = _130033_decl.get()._field_Types;
		auto it = expr.begin();
		_iter_begin_1b2c1a063:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d54961_TypeDecl> _130221_t = *it;
			{
				jule::Ptr<_1e6ab6a8a_TypeKind> _130321_kind = _1e6acc265_checkDecl(&(*_self_), _130221_t);;
				if ((_130321_kind == nullptr)) {
					return nullptr;
				};
				_130117_types = jule::alloc_for_append(_130117_types,1);_130117_types.__push(_130321_kind);;
			}
			_iter_next_1b2c1a063:;
			++it;
			goto _iter_begin_1b2c1a063;
		}
		_iter_end_1b2c1a063:;
	};
	return jule::new_ptr<_1e6ac12d1_Tuple>(_1e6ac12d1_Tuple{._field_Types=_130117_types});
}



inline jule::Bool _1e6acb52d_checkFnTypes(_1e6ac4ee9_typeChecker* _self_, jule::Ptr<_1e5e202ce_FnIns>& _131336_f) {
	jule::Bool _131349_ok = jule::Bool();
	{
		auto &expr = _131336_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1b2c1be66:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e1e410_ParamIns> _131421_p = *it;
			{
				_131421_p.get()._field_Kind=_1e6acbe57_build(&(*_self_), _131421_p.get()._field_Decl.get()._field_Kind.get()._field_Decl.get()._field_Kind);
				_131349_ok=(_131421_p.get()._field_Kind != nullptr);
				if ((!(_131349_ok))) {
					_131349_ok = false;
					return _131349_ok;
				};
				_1e6a2ca45_checkFnParamKind((*_self_)._field_s, _131421_p);
			}
			_iter_next_1b2c1be66:;
			++it;
			goto _iter_begin_1b2c1be66;
		}
		_iter_end_1b2c1be66:;
	};
	if ((!(_1e5e1ca90_IsVoid(_131336_f.get()._field_Decl.ptr())))) {
		_131336_f.get()._field_Result=_1e6acbe57_build(&(*_self_), _131336_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl.get()._field_Kind);
		_131349_ok = (_131336_f.get()._field_Result != nullptr);
		return _131349_ok;
	};
	_131349_ok = true;
	return _131349_ok;
}



inline jule::Ptr<_1e5e202ce_FnIns> _1e6acb83b_buildFn(_1e6ac4ee9_typeChecker* _self_, jule::Ptr<_1e5d66775_FnDecl> _133130_decl) {
	if ((_133130_decl.get()._field_Generics.len() > 0LL)) {
		_1e6ac5703_pushErr(&(*_self_), _133130_decl.get()._field_Token,jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e5e1c62d_Fn> _133717_f = _1e5e26417_buildFn(_133130_decl);;
	jule::I64 _133913_n = (*_self_)._field_s.get()._field_errors.len();;
	_1e6a3495e_checkFnDecl((*_self_)._field_s, _133717_f);
	if ((_133913_n != (*_self_)._field_s.get()._field_errors.len())) {
		return nullptr;
	};
	jule::Ptr<_1e5e202ce_FnIns> _134517_ins = _1e5e1da19_instanceForce(_133717_f);;
	_134517_ins.get()._field_Anon=true;
	jule::Bool _134813_ok = _1e6acb52d_checkFnTypes(&(*_self_), _134517_ins);;
	if ((!(_134813_ok))) {
		return nullptr;
	};
	return _134517_ins;
}



inline jule::Trait<_1e6ab665b_Kind> _1e6acbb49_buildByNamespace(_1e6ac4ee9_typeChecker* _self_, jule::Ptr<_1e5d55a2d_NamespaceTypeDecl> _135639_decl) {
	jule::Str _135713_path = _1e6ace5b9_buildLinkPathByTokens(_135639_decl.get()._field_Idents);;
	jule::Ptr<_1e6a192e5_ImportInfo> _135817_imp = _1e6ad2600_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1e6ad0ab5_SelectPackage((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1e6a192e5_ImportInfo>)>([=](jule::Ptr<_1e6a192e5_ImportInfo> _135852_imp) mutable -> jule::Bool {
		if (((_135639_decl.get()._field_Idents.len() == 1LL) && (_135852_imp.get()._field_Alias == _135713_path))) {
			return true;
		};
		return ((_135852_imp.get()._field_LinkPath == _135713_path) && _1e6a1be52_isAccessibleViaSelection(_135852_imp.ptr()));
	}));;
	if (((_135817_imp == nullptr) || (!(_1e6a1b8ad_isLookupable(_135817_imp.ptr(), jule::Str("self", 4)))))) {
		_1e6ac5703_pushErr(&(*_self_), _135639_decl.get()._field_Idents[0LL],jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_135713_path)}));
		return nullptr;
	};
	_1e6ac5aaa_disallowBuiltin(&(*_self_));
	jule::Trait<_1e6ad2600_Lookup> _137117_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_1e6ad2600_Lookup>(_135817_imp, 1);
	jule::Ptr<_1e6ab6a8a_TypeKind> _137317_kind = _1e6acc265_checkDecl(&(*_self_), _135639_decl.get()._field_Kind);;
	(*_self_)._field_lookup=_137117_lookup;
	_1e6ac58ce_allowBuiltin(&(*_self_));
	return jule::Trait<_1e6ab665b_Kind>(_137317_kind, 5);
}



inline jule::Ptr<_1e6ab6a8a_TypeKind> _1e6acbe57_build(_1e6ac4ee9_typeChecker* _self_, jule::Any& _138029_declKind) {
	jule::Trait<_1e6ab665b_Kind> _138117_kind = nullptr;;
	{
		auto &_match_expr{ _138029_declKind };
		
		if (_match_expr.type_is<jule::Ptr<_1e5d55027_IdentTypeDecl>>()) {
			_case_begin_1b2c2a815:;
			{
				jule::Trait<_1e6ab665b_Kind> _138421_t = _1e6ac9493_buildIdent(&(*_self_), _138029_declKind.operator jule::Ptr<_1e5d55027_IdentTypeDecl>());;
				if ((_138421_t != nullptr)) {
					_138117_kind=_138421_t;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d55676_SubIdentTypeDecl>>()) {
			_case_begin_1b2c2b195:;
			{
				jule::Trait<_1e6ab665b_Kind> _138921_t = _1e6ac97a1_buildSubIdent(&(*_self_), _138029_declKind.operator jule::Ptr<_1e5d55676_SubIdentTypeDecl>());;
				if ((_138921_t != nullptr)) {
					_138117_kind=_138921_t;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d55d19_SptrTypeDecl>>()) {
			_case_begin_1b2c2b20b:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1e6abece6_Sptr> _139521_t = _1e6ac9dbc_buildSptr(&(*_self_), _138029_declKind.operator jule::Ptr<_1e5d55d19_SptrTypeDecl>());;
				if ((_139521_t != nullptr)) {
					_138117_kind=jule::Trait<_1e6ab665b_Kind>(_139521_t, 7);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d567dc_PtrTypeDecl>>()) {
			_case_begin_1b2c29a01:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1e6ac335a_Ptr> _140121_t = _1e6aca4d8_buildPtr(&(*_self_), _138029_declKind.operator jule::Ptr<_1e5d567dc_PtrTypeDecl>());;
				if ((_140121_t != nullptr)) {
					_138117_kind=jule::Trait<_1e6ab665b_Kind>(_140121_t, 12);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d56215_SlcTypeDecl>>()) {
			_case_begin_1b2c29a67:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1e6ac0753_Slc> _140721_t = _1e6aca7e6_buildSlc(&(*_self_), _138029_declKind.operator jule::Ptr<_1e5d56215_SlcTypeDecl>());;
				if ((_140721_t != nullptr)) {
					_138117_kind=jule::Trait<_1e6ab665b_Kind>(_140721_t, 8);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d56e6e_ArrTypeDecl>>()) {
			_case_begin_1b2c29acd:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1e6ac28ed_Arr> _141321_t = _1e6acab04_buildArr(&(*_self_), _138029_declKind.operator jule::Ptr<_1e5d56e6e_ArrTypeDecl>());;
				if ((_141321_t != nullptr)) {
					_138117_kind=jule::Trait<_1e6ab665b_Kind>(_141321_t, 11);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d576bc_MapTypeDecl>>()) {
			_case_begin_1b2c29b44:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1e6ac1d09_Map> _141921_t = _1e6acae12_buildMap(&(*_self_), _138029_declKind.operator jule::Ptr<_1e5d576bc_MapTypeDecl>());;
				if ((_141921_t != nullptr)) {
					_138117_kind=jule::Trait<_1e6ab665b_Kind>(_141921_t, 10);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d56501_TupleTypeDecl>>()) {
			_case_begin_1b2c2b89e:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1e6ac12d1_Tuple> _142521_t = _1e6acb220_buildTuple(&(*_self_), _138029_declKind.operator jule::Ptr<_1e5d56501_TupleTypeDecl>());;
				if ((_142521_t != nullptr)) {
					_138117_kind=jule::Trait<_1e6ab665b_Kind>(_142521_t, 9);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d66775_FnDecl>>()) {
			_case_begin_1b2c2b915:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1e5e202ce_FnIns> _143121_t = _1e6acb83b_buildFn(&(*_self_), _138029_declKind.operator jule::Ptr<_1e5d66775_FnDecl>());;
				if ((_143121_t != nullptr)) {
					_138117_kind=jule::Trait<_1e6ab665b_Kind>(_143121_t, 1);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d55a2d_NamespaceTypeDecl>>()) {
			_case_begin_1b2c2b97b:;
			{
				(*_self_)._field_inscatch=true;
				jule::Trait<_1e6ab665b_Kind> _143721_t = _1e6acbb49_buildByNamespace(&(*_self_), _138029_declKind.operator jule::Ptr<_1e5d55a2d_NamespaceTypeDecl>());;
				if ((_143721_t != nullptr)) {
					_138117_kind=_143721_t;
				};
			}
		}
		else {
			_case_begin_1b2c29858:;
			{
				jule::Any _144221_udeclKind = (*(((jule::Any*)((&(_138029_declKind))))));;
				{
					auto &_match_expr{ _144221_udeclKind };
					
					if (_match_expr.type_is<jule::Ptr<_1e6abece6_Sptr>>()) {
						_case_begin_1b2c2a738:;
						{
							_138117_kind=jule::Trait<_1e6ab665b_Kind>(_144221_udeclKind.operator jule::Ptr<_1e6abece6_Sptr>(), 7);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e6ac335a_Ptr>>()) {
						_case_begin_1b2c2a79e:;
						{
							_138117_kind=jule::Trait<_1e6ab665b_Kind>(_144221_udeclKind.operator jule::Ptr<_1e6ac335a_Ptr>(), 12);
						}
					}
					else {
						_case_begin_1b2c2a5d4:;
						{
							_1e6ac5703_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
							return nullptr;
						}
					}
					_match_end_1b2c2a4e6:;
				};
			}
		}
		_match_end_1b2c29803:;
	};
	if ((_138117_kind == nullptr)) {
		return nullptr;
	};
	{
		auto &_match_expr{ _138117_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e6ab6a8a_TypeKind>>()) {
			_case_begin_1b2c38834:;
			{
				return _138117_kind.operator jule::Ptr<_1e6ab6a8a_TypeKind>();
			}
		}
		else {
			_case_begin_1b2c3816e:;
			{
				return jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=_138117_kind});
			}
		}
		_match_end_1b2c2be87:;
	};
}



inline jule::Ptr<_1e6ab6a8a_TypeKind> _1e6acc265_checkDecl(_1e6ac4ee9_typeChecker* _self_, jule::Ptr<_1e5d54961_TypeDecl>& _146633_decl) {
	jule::Ptr<_1e47137a5_Token> _146817_errorToken = (*_self_)._field_errorToken;;
	(*_self_)._field_errorToken=_146633_decl.get()._field_Token;
	jule::Ptr<_1e6ab6a8a_TypeKind> _147117_kind = _1e6acbe57_build(&(*_self_), _146633_decl.get()._field_Kind);;
	(*_self_)._field_errorToken=_146817_errorToken;
	return _147117_kind;
}



inline void _1e6acc4da_check(_1e6ac4ee9_typeChecker* _self_, jule::Ptr<_1e6ababe3_TypeSymbol>& _147729_t) {
	if ((_147729_t.get()._field_Decl == nullptr)) {
		return;;
	};
	jule::Ptr<_1e6ab6a8a_TypeKind> _148117_kind = _1e6acc265_checkDecl(&(*_self_), _147729_t.get()._field_Decl);;
	if ((_148117_kind == nullptr)) {
		_1e6abb276_removeKind(_147729_t.ptr());
		return;;
	};
	_147729_t.get()._field_Kind=_148117_kind;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6ac4ee9_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "notPlain:" << _Src._field_notPlain << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1e6accb4a_identTypeDecl(jule::Str& _149330_ident, jule::Ptr<_1e5d55027_IdentTypeDecl> _149342_t) {
	if ((_149342_t.get()._field_Ident == _149330_ident)) {
		return true;
	};
	{
		auto &expr = _149342_t.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1b2c3c371:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d54961_TypeDecl> &_149716_g = *it;
			{
				if (static__1e6acce8b_exist(_149330_ident,_149716_g.get()._field_Kind)) {
					return true;
				};
			}
			_iter_next_1b2c3c371:;
			++it;
			goto _iter_begin_1b2c3c371;
		}
		_iter_end_1b2c3c371:;
	};
	return false;
}



inline jule::Bool static__1e6acce8b_exist(jule::Str& _150522_ident, jule::Any& _150535_k) {
	{
		auto &_match_expr{ _150535_k };
		
		if (_match_expr.type_is<jule::Ptr<_1e5d55027_IdentTypeDecl>>()) {
			_case_begin_1b2c3d471:;
			{
				return static__1e6accb4a_identTypeDecl(_150522_ident,_150535_k.operator jule::Ptr<_1e5d55027_IdentTypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d55676_SubIdentTypeDecl>>()) {
			_case_begin_1b2c3d4d7:;
			{
				jule::Ptr<_1e5d55676_SubIdentTypeDecl> _151017_sit = _150535_k.operator jule::Ptr<_1e5d55676_SubIdentTypeDecl>();;
				{
					auto &expr = _151017_sit.get()._field_Idents;
					auto it = expr.begin();
					_iter_begin_1b2c3ece1:;
					if (it != expr.end()) {
						jule::Ptr<_1e5d55027_IdentTypeDecl> &_151120_id = *it;
						{
							if (static__1e6accb4a_identTypeDecl(_150522_ident,_151120_id)) {
								return true;
							};
						}
						_iter_next_1b2c3ece1:;
						++it;
						goto _iter_begin_1b2c3ece1;
					}
					_iter_end_1b2c3ece1:;
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d55d19_SptrTypeDecl>>()) {
			_case_begin_1b2c3d6c4:;
			{
				jule::Ptr<_1e5d55d19_SptrTypeDecl> _151817_sptr = _150535_k.operator jule::Ptr<_1e5d55d19_SptrTypeDecl>();;
				return static__1e6acce8b_exist(_150522_ident,_151817_sptr.get()._field_Elem.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d567dc_PtrTypeDecl>>()) {
			_case_begin_1b2c3d73a:;
			{
				jule::Ptr<_1e5d567dc_PtrTypeDecl> _152117_ptr = _150535_k.operator jule::Ptr<_1e5d567dc_PtrTypeDecl>();;
				return static__1e6acce8b_exist(_150522_ident,_152117_ptr.get()._field_Elem.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d56215_SlcTypeDecl>>()) {
			_case_begin_1b2c3d7a1:;
			{
				jule::Ptr<_1e5d56215_SlcTypeDecl> _152417_slc = _150535_k.operator jule::Ptr<_1e5d56215_SlcTypeDecl>();;
				return static__1e6acce8b_exist(_150522_ident,_152417_slc.get()._field_Elem.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d56e6e_ArrTypeDecl>>()) {
			_case_begin_1b2c3d817:;
			{
				jule::Ptr<_1e5d56e6e_ArrTypeDecl> _152717_arr = _150535_k.operator jule::Ptr<_1e5d56e6e_ArrTypeDecl>();;
				return static__1e6acce8b_exist(_150522_ident,_152717_arr.get()._field_Elem.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d576bc_MapTypeDecl>>()) {
			_case_begin_1b2c3d87d:;
			{
				jule::Ptr<_1e5d576bc_MapTypeDecl> _153017_map = _150535_k.operator jule::Ptr<_1e5d576bc_MapTypeDecl>();;
				return (static__1e6acce8b_exist(_150522_ident,_153017_map.get()._field_Key.get()._field_Kind) || static__1e6acce8b_exist(_150522_ident,_153017_map.get()._field_Val.get()._field_Kind));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d66775_FnDecl>>()) {
			_case_begin_1b2c3d8e4:;
			{
				jule::Ptr<_1e5d66775_FnDecl> _153417_f = _150535_k.operator jule::Ptr<_1e5d66775_FnDecl>();;
				{
					auto &expr = _153417_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_1b2c4518c:;
					if (it != expr.end()) {
						jule::Ptr<_1e5d65455_ParamDecl> &_153520_p = *it;
						{
							if (_1e5d657b8_IsSelf(_153520_p.ptr())) {
								goto _iter_next_1b2c4518c;
							};
							if (static__1e6acce8b_exist(_150522_ident,_153520_p.get()._field_Kind.get()._field_Kind)) {
								return true;
							};
						}
						_iter_next_1b2c4518c:;
						++it;
						goto _iter_begin_1b2c4518c;
					}
					_iter_end_1b2c4518c:;
				};
				if ((_153417_f.get()._field_Result != nullptr)) {
					return static__1e6acce8b_exist(_150522_ident,_153417_f.get()._field_Result.get()._field_Kind.get()._field_Kind);
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d56501_TupleTypeDecl>>()) {
			_case_begin_1b2c3d96b:;
			{
				jule::Ptr<_1e5d56501_TupleTypeDecl> _154817_tup = _150535_k.operator jule::Ptr<_1e5d56501_TupleTypeDecl>();;
				{
					auto &expr = _154817_tup.get()._field_Types;
					auto it = expr.begin();
					_iter_begin_1b2c47546:;
					if (it != expr.end()) {
						jule::Ptr<_1e5d54961_TypeDecl> &_154920_t = *it;
						{
							if (static__1e6acce8b_exist(_150522_ident,_154920_t.get()._field_Kind)) {
								return true;
							};
						}
						_iter_next_1b2c47546:;
						++it;
						goto _iter_begin_1b2c47546;
					}
					_iter_end_1b2c47546:;
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d55a2d_NamespaceTypeDecl>>()) {
			_case_begin_1b2c3d9e3:;
			{
				jule::Ptr<_1e5d55a2d_NamespaceTypeDecl> _155617_ns = _150535_k.operator jule::Ptr<_1e5d55a2d_NamespaceTypeDecl>();;
				return static__1e6acce8b_exist(_150522_ident,_155617_ns.get()._field_Kind.get()._field_Kind);
			}
		}
		else {
			_case_begin_1b2c3d2a6:;
			{
				return false;
			}
		}
		_match_end_1b2c3d251:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e6acc70a_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c9978c99_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c99c24eb_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1c99c34a8_stop(_1c99c2d26_scopeParser* _self_) {
	(*_self_)._field_pos=-1LL;
}



inline jule::Bool _1c99c371c_stopped(_1c99c2d26_scopeParser* _self_) {
	return ((*_self_)._field_pos == -1LL);
}



inline jule::Bool _1c99c3981_finished(_1c99c2d26_scopeParser* _self_) {
	return ((*_self_)._field_pos >= (*_self_)._field_stmts.len());
}



inline jule::Bool _1c99c3be5_isLastSt(_1c99c2d26_scopeParser* _self_) {
	return (((*_self_)._field_pos + 1LL) >= (*_self_)._field_stmts.len());
}



inline void _1c99c4014_pushErr(_1c99c2d26_scopeParser* _self_, jule::Ptr<_1e47137a5_Token> _19226_token, jule::Str _19241_fmt) {
	_1c99de75a_pushErr((*_self_)._field_p.ptr(), _19226_token,_19241_fmt,jule::Slice<jule::Any>());
}



inline void _1c99c4333_pushSuggestion(_1c99c2d26_scopeParser* _self_, jule::Str _19733_fmt, jule::Slice<jule::Any> _19746_args) {
	_1c99dea79_pushSuggestion((*_self_)._field_p.ptr(), _19733_fmt,jule::Any(_19746_args));
}



inline void _1c99c45a8_insertAsNext(_1c99c2d26_scopeParser* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _20136_tokens) {
	(*_self_)._field_stmts=jule::append((*_self_)._field_stmts.slice(0LL,((*_self_)._field_pos + 1LL)),(*_self_)._field_stmts.slice((*_self_)._field_pos));
	(*_self_)._field_stmts[((*_self_)._field_pos + 1LL)]=jule::new_ptr<_1c99c24eb_stmt>(_1c99c24eb_stmt{._field_tokens=_20136_tokens, });
}



inline jule::Ptr<_1c99c24eb_stmt> _1c99c481c_next(_1c99c2d26_scopeParser* _self_) {
	((*_self_)._field_pos)++;
	return (*_self_)._field_stmts[(*_self_)._field_pos];
}



inline jule::Ptr<_1e5d64c7e_ScopeTree> _1c99c4bc4_buildScope(_1c99c2d26_scopeParser* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _21134_tokens, jule::Ptr<_1e47137a5_Token> _21156_end) {
	jule::Ptr<_1e5d64c7e_ScopeTree> _21217_s = _1c99c13c9_newScope();;
	_21217_s.get()._field_Parent=(*_self_)._field_s;
	_21217_s.get()._field_End=_21156_end;
	_1c99c2d26_scopeParser _21517_ssp = _1c99c2d26_scopeParser{._field_p=(*_self_)._field_p, };;
	_1c99cd815_build(&_21517_ssp, _21134_tokens,_21217_s);
	return _21217_s;
}



inline jule::Ptr<_1e5d67754_VarDecl> _1c99c4ed2_buildVarSt(_1c99c2d26_scopeParser* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _22234_tokens) {
	jule::Ptr<_1e5d67754_VarDecl> _22317_v = _1c99e2296_buildVar((*_self_)._field_p, _22234_tokens);;
	_22317_v.get()._field_Scope=(*_self_)._field_s;
	return _22317_v;
}



inline jule::Ptr<_1e5d67b0b_RetSt> _1c99c52e0_buildRetSt(_1c99c2d26_scopeParser* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>> _22833_tokens) {
	jule::Ptr<_1e5d67b0b_RetSt> _22917_st = jule::new_ptr<_1e5d67b0b_RetSt>(_1e5d67b0b_RetSt{._field_Token=_22833_tokens[0LL], });;
	if ((_22833_tokens.len() > 1LL)) {
		_22833_tokens=_22833_tokens.slice(1LL);
		_22917_st.get()._field_Expr=_1c99ded87_buildExpr((*_self_)._field_p, _22833_tokens);
	};
	return _22917_st;
}



inline jule::Ptr<_1e5d6826b_Iter> _1c99c55ed_buildWhileNextIter(_1c99c2d26_scopeParser* _self_, jule::Ptr<_1c99c24eb_stmt>& _23942_s) {
	jule::Ptr<_1e5d6826b_Iter> _24017_it = jule::new_ptr<_1e5d6826b_Iter>(_1e5d6826b_Iter{._field_Token=_23942_s.get()._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _24317_tokens = _23942_s.get()._field_tokens.slice(1LL);;
	jule::Ptr<_1e5d68a41_WhileKind> _24417_kind = jule::new_ptr<_1e5d68a41_WhileKind>();;
	if ((_24317_tokens.len() > 0LL)) {
		_24417_kind.get()._field_Expr=_1c99ded87_buildExpr((*_self_)._field_p, _24317_tokens);
	};
	if (_1c99c3be5_isLastSt(&(*_self_))) {
		_1c99c4014_pushErr(&(*_self_), _24017_it.get()._field_Token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	_24317_tokens=_1c99c481c_next(&(*_self_)).get()._field_tokens;
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _25617_stTokens = _1c99ce294_getBlockExpr(_24317_tokens);;
	if ((_25617_stTokens.len() > 0LL)) {
		jule::Ptr<_1c99c24eb_stmt> _25821_stmt = jule::new_ptr<_1c99c24eb_stmt>(_1c99c24eb_stmt{._field_tokens=_25617_stTokens, ._field_terminated=_23942_s.get()._field_terminated});;
		_24417_kind.get()._field_NextToken=_25617_stTokens[0LL];
		_24417_kind.get()._field_Next=_1c99cd4e6_buildSt(&(*_self_), _25821_stmt);
	};
	jule::I64 _26617_i = _25617_stTokens.len();;
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _26717_blockTokens = _1c99dc060_range(_26617_i,jule::Str("{", 1),jule::Str("}", 1),_24317_tokens);;
	if ((_26717_blockTokens == nullptr)) {
		_1c99c34a8_stop(&(*_self_));
		_1c99c4014_pushErr(&(*_self_), _24017_it.get()._field_Token,jule::Str("body is not exist", 17));
		_1c99c4333_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_26617_i < _24317_tokens.len())) {
		_1c99c4014_pushErr(&(*_self_), _24317_tokens[_26617_i],jule::Str("invalid syntax", 14));
	};
	_24017_it.get()._field_Scope=_1c99c4bc4_buildScope(&(*_self_), _26717_blockTokens,_24317_tokens[(_26617_i - 1LL)]);
	_24017_it.get()._field_Kind=static_cast<jule::Any>(_24417_kind);
	return _24017_it;
}



inline jule::Ptr<_1e5d68a41_WhileKind> _1c99c590b_buildWhileIterKind(_1c99c2d26_scopeParser* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _28442_tokens) {
	return jule::new_ptr<_1e5d68a41_WhileKind>(_1e5d68a41_WhileKind{._field_Expr=_1c99ded87_buildExpr((*_self_)._field_p, _28442_tokens), });
}



inline jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>> _1c99c5c19_getRangeKindKeysTokens(_1c99c2d26_scopeParser* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _29046_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>> _29118_vars;;
	jule::Slice<_1e43e3a18_Log> _29124_errs;;
	std::tie(_29118_vars,_29124_errs) = _1c99dcacc_parts(_29046_toks,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_29124_errs);
	return _29118_vars;
}



inline jule::Ptr<_1e5d67754_VarDecl> _1c99c6027_buildRangeKindKey(_1c99c2d26_scopeParser* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _29641_tokens) {
	if ((_29641_tokens.len() == 0LL)) {
		return nullptr;
	};
	jule::Ptr<_1e5d67754_VarDecl> _30017_key = jule::new_ptr<_1e5d67754_VarDecl>(_1e5d67754_VarDecl{._field_Token=_29641_tokens[0LL], });;
	if ((_30017_key.get()._field_Token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_30017_key.get()._field_Mutable=true;
		if ((_29641_tokens.len() == 1LL)) {
			_1c99c4014_pushErr(&(*_self_), _30017_key.get()._field_Token,jule::Str("invalid syntax", 14));
		};
		_30017_key.get()._field_Token=_29641_tokens[1LL];
	} else if ((_29641_tokens.len() > 1LL)) {
		_1c99c4014_pushErr(&(*_self_), _29641_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	if ((_30017_key.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1c99c4014_pushErr(&(*_self_), _30017_key.get()._field_Token,jule::Str("invalid syntax", 14));
		_1c99c4333_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	_30017_key.get()._field_Ident=_30017_key.get()._field_Token.get()._field_Kind;
	return _30017_key;
}



inline jule::Slice<jule::Ptr<_1e5d67754_VarDecl>> _1c99c6335_buildRangeKindKeys(_1c99c2d26_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>>& _32142_parts) {
	jule::Slice<jule::Ptr<_1e5d67754_VarDecl>> _32217_keys = nullptr;;
	{
		auto &expr = _32142_parts;
		auto it = expr.begin();
		_iter_begin_1b2da772d:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1e47137a5_Token>> _32321_tokens = *it;
			{
				_32217_keys = jule::alloc_for_append(_32217_keys,1);_32217_keys.__push(_1c99c6027_buildRangeKindKey(&(*_self_), _32321_tokens));;
			}
			_iter_next_1b2da772d:;
			++it;
			goto _iter_begin_1b2da772d;
		}
		_iter_end_1b2da772d:;
	};
	return _32217_keys;
}



inline void _1c99c6676_setupRangeKindKeysPlain(_1c99c2d26_scopeParser* _self_, jule::Ptr<_1e5d693d2_RangeKind>& _32947_rng, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _32969_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>> _33017_keyTokens = _1c99c5c19_getRangeKindKeysTokens(&(*_self_), _32969_tokens);;
	if ((_33017_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_33017_keyTokens.len() > 2LL)) {
		_1c99c4014_pushErr(&(*_self_), _32947_rng.get()._field_InToken,jule::Str("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1e5d67754_VarDecl>> _33717_keys = _1c99c6335_buildRangeKindKeys(&(*_self_), _33017_keyTokens);;
	_32947_rng.get()._field_KeyA=_33717_keys[0LL];
	if ((_33717_keys.len() > 1LL)) {
		_32947_rng.get()._field_KeyB=_33717_keys[1LL];
	};
}



inline void _1c99c69c8_setupRangeKindKeysExplicit(_1c99c2d26_scopeParser* _self_, jule::Ptr<_1e5d693d2_RangeKind>& _34450_rng, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _34472_tokens) {
	jule::I64 _34517_i = 0LL;;
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _34617_rang = _1c99dc060_range(_34517_i,jule::Str("(", 1),jule::Str(")", 1),_34472_tokens);;
	if ((_34517_i < _34472_tokens.len())) {
		_1c99c4014_pushErr(&(*_self_), _34450_rng.get()._field_InToken,jule::Str("invalid syntax", 14));
	};
	_1c99c6676_setupRangeKindKeysPlain(&(*_self_), _34450_rng,_34617_rang);
}



inline void _1c99c6d08_setupRangeKindKeys(_1c99c2d26_scopeParser* _self_, jule::Ptr<_1e5d693d2_RangeKind>& _35342_rng, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _35364_tokens) {
	if ((_35364_tokens[0LL].get()._field_Id == static_cast<jule::U64>(3LLU))) {
		if ((_35364_tokens[0LL].get()._field_Kind != jule::Str("(", 1))) {
			_1c99c4014_pushErr(&(*_self_), _35364_tokens[0LL],jule::Str("invalid syntax", 14));
			return;;
		};
		_1c99c69c8_setupRangeKindKeysExplicit(&(*_self_), _35342_rng,_35364_tokens);
		return;;
	};
	_1c99c6676_setupRangeKindKeysPlain(&(*_self_), _35342_rng,_35364_tokens);
}



inline jule::Ptr<_1e5d693d2_RangeKind> _1c99c7259_buildRangeIterKind(_1c99c2d26_scopeParser* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _36542_var_tokens, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _36614_exprTokens, jule::Ptr<_1e47137a5_Token>& _36641_inToken) {
	jule::Ptr<_1e5d693d2_RangeKind> _36717_rng = jule::new_ptr<_1e5d693d2_RangeKind>(_1e5d693d2_RangeKind{._field_InToken=_36641_inToken, });;
	if ((_36614_exprTokens.len() == 0LL)) {
		_1c99c4014_pushErr(&(*_self_), _36717_rng.get()._field_InToken,jule::Str("expression missing", 18));
		return _36717_rng;
	};
	_36717_rng.get()._field_Expr=_1c99ded87_buildExpr((*_self_)._field_p, _36614_exprTokens);
	if ((_36542_var_tokens.len() > 0LL)) {
		_1c99c6d08_setupRangeKindKeys(&(*_self_), _36717_rng,_36542_var_tokens);
	};
	return _36717_rng;
}



inline jule::Any _1c99c7611_buildCommonIterKind(_1c99c2d26_scopeParser* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _38143_tokens, jule::Ptr<_1e47137a5_Token>& _38162_err_tok) {
	jule::I64 _38217_braceN = 0LL;;
	{
		auto &expr = _38143_tokens;
		auto it = expr.begin();
		_iter_begin_1b2db334e:;
		if (it != expr.end()) {
			jule::I64 _38314_i = it - expr.begin();
			jule::Ptr<_1e47137a5_Token> _38321_tok = *it;
			{
				if ((_38321_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _38321_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1b2db430b:;
							{
								(_38217_braceN)++;
								goto _iter_next_1b2db334e;
							}
						}
						else {
							_case_begin_1b2db45d6:;
							{
								(_38217_braceN)--;
							}
						}
						_match_end_1b2db43c7:;
					};
				};
				if ((_38217_braceN != 0LL)) {
					goto _iter_next_1b2db334e;
				};
				{
					auto &_match_expr{ _38321_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(15LLU)) {
						_case_begin_1b2db3eed:;
						{
							jule::Slice<jule::Ptr<_1e47137a5_Token>> _40025_declTokens = _38143_tokens.slice(0LL,_38314_i);;
							jule::Slice<jule::Ptr<_1e47137a5_Token>> _40125_exprTokens = _38143_tokens.slice((_38314_i + 1LL));;
							return static_cast<jule::Any>(_1c99c7259_buildRangeIterKind(&(*_self_), _40025_declTokens,_40125_exprTokens,_38321_tok));
						}
					}
					_match_end_1b2db4a9d:;
				};
			}
			_iter_next_1b2db334e:;
			++it;
			_38314_i++;
			goto _iter_begin_1b2db334e;
		}
		_iter_end_1b2db334e:;
	};
	return static_cast<jule::Any>(_1c99c590b_buildWhileIterKind(&(*_self_), _38143_tokens));
}



inline jule::Ptr<_1e5d6826b_Iter> _1c99c791e_buildCommonIter(_1c99c2d26_scopeParser* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>> _40838_tokens) {
	jule::Ptr<_1e5d6826b_Iter> _40917_it = jule::new_ptr<_1e5d6826b_Iter>(_1e5d6826b_Iter{._field_Token=_40838_tokens[0LL], });;
	_40838_tokens=_40838_tokens.slice(1LL);
	if ((_40838_tokens.len() == 0LL)) {
		_1c99c34a8_stop(&(*_self_));
		_1c99c4014_pushErr(&(*_self_), _40917_it.get()._field_Token,jule::Str("body is not exist", 17));
		_1c99c4333_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _41917_exprTokens = _1c99ce294_getBlockExpr(_40838_tokens);;
	if ((_41917_exprTokens.len() > 0LL)) {
		_40917_it.get()._field_Kind=_1c99c7611_buildCommonIterKind(&(*_self_), _41917_exprTokens,_40917_it.get()._field_Token);
	};
	jule::I64 _42317_i = _41917_exprTokens.len();;
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _42417_scopeTokens = _1c99dc060_range(_42317_i,jule::Str("{", 1),jule::Str("}", 1),_40838_tokens);;
	if ((_42417_scopeTokens == nullptr)) {
		_1c99c34a8_stop(&(*_self_));
		_1c99c4014_pushErr(&(*_self_), _40917_it.get()._field_Token,jule::Str("body is not exist", 17));
		_1c99c4333_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_42317_i < _40838_tokens.len())) {
		_1c99c4014_pushErr(&(*_self_), _40838_tokens[_42317_i],jule::Str("invalid syntax", 14));
	};
	_40917_it.get()._field_Scope=_1c99c4bc4_buildScope(&(*_self_), _42417_scopeTokens,_40838_tokens[(_42317_i - 1LL)]);
	return _40917_it;
}



inline jule::Ptr<_1e5d6826b_Iter> _1c99c7c2c_buildIterSt(_1c99c2d26_scopeParser* _self_, jule::Ptr<_1c99c24eb_stmt>& _43835_st) {
	if (_43835_st.get()._field_terminated) {
		return _1c99c55ed_buildWhileNextIter(&(*_self_), _43835_st);
	};
	return _1c99c791e_buildCommonIter(&(*_self_), _43835_st.get()._field_tokens);
}



inline jule::Ptr<_1e5d69789_BreakSt> _1c99c803a_buildBreakSt(_1c99c2d26_scopeParser* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _44536_tokens) {
	jule::Ptr<_1e5d69789_BreakSt> _44617_brk = jule::new_ptr<_1e5d69789_BreakSt>(_1e5d69789_BreakSt{._field_Token=_44536_tokens[0LL], });;
	if ((_44536_tokens.len() > 1LL)) {
		if ((_44536_tokens[1LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_1c99c4014_pushErr(&(*_self_), _44536_tokens[1LL],jule::Str("invalid syntax", 14));
			_1c99c4333_pushSuggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_44617_brk.get()._field_Label=_44536_tokens[1LL];
			if ((_44536_tokens.len() > 2LL)) {
				_1c99c4014_pushErr(&(*_self_), _44536_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return _44617_brk;
}



inline jule::Ptr<_1e5d69b41_ContSt> _1c99c8348_buildContSt(_1c99c2d26_scopeParser* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _46335_tokens) {
	jule::Ptr<_1e5d69b41_ContSt> _46417_cont = jule::new_ptr<_1e5d69b41_ContSt>(_1e5d69b41_ContSt{._field_Token=_46335_tokens[0LL], });;
	if ((_46335_tokens.len() > 1LL)) {
		if ((_46335_tokens[1LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_1c99c4014_pushErr(&(*_self_), _46335_tokens[1LL],jule::Str("invalid syntax", 14));
			_1c99c4333_pushSuggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_46417_cont.get()._field_Label=_46335_tokens[1LL];
			if ((_46335_tokens.len() > 2LL)) {
				_1c99c4014_pushErr(&(*_self_), _46335_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return _46417_cont;
}



inline jule::Ptr<_1e5d6a0b4_If> _1c99c8656_buildIf(_1c99c2d26_scopeParser* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _48131_tokens) {
	jule::Ptr<_1e5d6a0b4_If> _48217_model = jule::new_ptr<_1e5d6a0b4_If>(_1e5d6a0b4_If{._field_Token=_48131_tokens[0LL], });;
	_48131_tokens=_48131_tokens.slice(1LL);
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _48617_exprTokens = _1c99ce294_getBlockExpr(_48131_tokens);;
	jule::I64 _48717_i = 0LL;;
	if ((_48617_exprTokens.len() == 0LL)) {
		_1c99c4014_pushErr(&(*_self_), _48217_model.get()._field_Token,jule::Str("expression missing", 18));
	} else {
		_48717_i=static_cast<jule::I64>(_48617_exprTokens.len());
	};
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _49317_scopeTokens = _1c99dc060_range(_48717_i,jule::Str("{", 1),jule::Str("}", 1),_48131_tokens);;
	if ((_49317_scopeTokens == nullptr)) {
		_1c99c34a8_stop(&(*_self_));
		_1c99c4014_pushErr(&(*_self_), _48217_model.get()._field_Token,jule::Str("body is not exist", 17));
		_1c99c4333_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e47137a5_Token> _50017_end = _48131_tokens[(_48717_i - 1LL)];;
	if ((_48717_i < _48131_tokens.len())) {
		if ((_48131_tokens[_48717_i].get()._field_Id == static_cast<jule::U64>(17LLU))) {
			_48131_tokens=_48131_tokens.slice(_48717_i);
		} else {
			_1c99c4014_pushErr(&(*_self_), _48131_tokens[_48717_i],jule::Str("invalid syntax", 14));
			_48131_tokens=nullptr;
		};
	};
	_48217_model.get()._field_Expr=_1c99ded87_buildExpr((*_self_)._field_p, _48617_exprTokens);
	_48217_model.get()._field_Scope=_1c99c4bc4_buildScope(&(*_self_), _49317_scopeTokens,_50017_end);
	return _48217_model;
}



inline jule::Ptr<_1e5d6a46b_Else> _1c99c8964_buildElse(_1c99c2d26_scopeParser* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _51433_tokens) {
	jule::Ptr<_1e5d6a46b_Else> _51517_els = jule::new_ptr<_1e5d6a46b_Else>(_1e5d6a46b_Else{._field_Token=_51433_tokens[0LL], });;
	_51433_tokens=_51433_tokens.slice(1LL);
	jule::I64 _51917_i = 0LL;;
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _52017_scopeTokens = _1c99dc060_range(_51917_i,jule::Str("{", 1),jule::Str("}", 1),_51433_tokens);;
	if ((_52017_scopeTokens == nullptr)) {
		if ((_51917_i < _51433_tokens.len())) {
			_1c99c4014_pushErr(&(*_self_), _51517_els.get()._field_Token,jule::Str("else's cannot have any expression", 33));
		} else {
			_1c99c34a8_stop(&(*_self_));
			_1c99c4014_pushErr(&(*_self_), _51517_els.get()._field_Token,jule::Str("body is not exist", 17));
			_1c99c4333_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		};
		return nullptr;
	};
	if ((_51917_i < _51433_tokens.len())) {
		_1c99c4014_pushErr(&(*_self_), _51433_tokens[_51917_i],jule::Str("invalid syntax", 14));
	};
	_51517_els.get()._field_Scope=_1c99c4bc4_buildScope(&(*_self_), _52017_scopeTokens,_51433_tokens[(_51917_i - 1LL)]);
	return _51517_els;
}



inline jule::Ptr<_1e5d6a8de_Conditional> _1c99c8c72_buildIfElseChain(_1c99c2d26_scopeParser* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>> _53839_tokens) {
	jule::Ptr<_1e5d6a8de_Conditional> _53917_chain = jule::new_ptr<_1e5d6a8de_Conditional>(_1e5d6a8de_Conditional{._field_Head=_1c99c8656_buildIf(&(*_self_), _53839_tokens), });;
	if ((_53917_chain.get()._field_Head == nullptr)) {
		return nullptr;
	};
	while ((_53839_tokens.len() != 0LL)) {
		{
			if ((_53839_tokens[0LL].get()._field_Id != static_cast<jule::U64>(17LLU))) {
				goto _iter_end_1b2dd0965;
			};
			if (((_53839_tokens.len() > 1LL) && (_53839_tokens[1LL].get()._field_Id == static_cast<jule::U64>(16LLU)))) {
				_53839_tokens=_53839_tokens.slice(1LL);
				jule::Ptr<_1e5d6a0b4_If> _55125_elif = _1c99c8656_buildIf(&(*_self_), _53839_tokens);;
				_53917_chain.get()._field_Tail = jule::alloc_for_append(_53917_chain.get()._field_Tail,1);_53917_chain.get()._field_Tail.__push(_55125_elif);;
				goto _iter_next_1b2dd0965;
			};
			_53917_chain.get()._field_Default=_1c99c8964_buildElse(&(*_self_), _53839_tokens);
			goto _iter_end_1b2dd0965;
		}
	_iter_next_1b2dd0965:;
	}
	_iter_end_1b2dd0965:;;
	return _53917_chain;
}



inline jule::Ptr<_1e5d5aa77_CoExpr> _1c99c9080_buildCoCallSt(_1c99c2d26_scopeParser* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>> _56136_tokens) {
	jule::Ptr<_1e5d5aa77_CoExpr> _56217_c = jule::new_ptr<_1e5d5aa77_CoExpr>(_1e5d5aa77_CoExpr{._field_Token=_56136_tokens[0LL], });;
	_56136_tokens=_56136_tokens.slice(1LL);
	_56217_c.get()._field_Expr=_1c99ded87_buildExpr((*_self_)._field_p, _56136_tokens);
	return _56217_c;
}



inline jule::Ptr<_1e5d627a4_GotoSt> _1c99c938d_buildGotoSt(_1c99c2d26_scopeParser* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _57035_tokens) {
	jule::Ptr<_1e5d627a4_GotoSt> _57117_gt = jule::new_ptr<_1e5d627a4_GotoSt>(_1e5d627a4_GotoSt{._field_Token=_57035_tokens[0LL], });;
	if ((_57035_tokens.len() == 1LL)) {
		_1c99c4014_pushErr(&(*_self_), _57117_gt.get()._field_Token,jule::Str("missing label identifier for goto statement", 43));
		return nullptr;
	} else if ((_57035_tokens.len() > 2LL)) {
		_1c99c4014_pushErr(&(*_self_), _57035_tokens[2LL],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1e47137a5_Token> _58017_identToken = _57035_tokens[1LL];;
	if ((_58017_identToken.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1c99c4014_pushErr(&(*_self_), _58017_identToken,jule::Str("invalid syntax", 14));
		_1c99c4333_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return _57117_gt;
	};
	_57117_gt.get()._field_Label=_58017_identToken;
	return _57117_gt;
}



inline jule::Ptr<_1e5d62a90_FallSt> _1c99c969b_buildFallSt(_1c99c2d26_scopeParser* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _59035_tokens) {
	jule::Ptr<_1e5d62a90_FallSt> _59117_fll = jule::new_ptr<_1e5d62a90_FallSt>(_1e5d62a90_FallSt{._field_Token=_59035_tokens[0LL]});;
	if ((_59035_tokens.len() > 1LL)) {
		_1c99c4014_pushErr(&(*_self_), _59035_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	return _59117_fll;
}



inline jule::Ptr<_1e5d6b0b5_TypeAliasDecl> _1c99c99a9_buildTypeAliasSt(_1c99c2d26_scopeParser* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _60040_tokens) {
	jule::Ptr<_1e5d6b0b5_TypeAliasDecl> _60117_tad = _1c99e1482_buildTypeAliasDecl((*_self_)._field_p, _60040_tokens);;
	_60117_tad.get()._field_Scope=(*_self_)._field_s;
	return _60117_tad;
}



inline void _1c99c9e1b_pushCaseExpr(_1c99c2d26_scopeParser* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>> _60635_tokens, jule::Ptr<_1e47137a5_Token> _60657_token, jule::Bool _6079_typeMatch, jule::Slice<jule::Ptr<_1e5d58e82_Expr>>& _60731_exprs) {
	if ((_60635_tokens.len() == 0LL)) {
		return;;
	};
	if (_6079_typeMatch) {
		jule::I64 _61321_i = 0LL;;
		jule::Ptr<_1e5d54961_TypeDecl> _61422_t;;
		jule::Bool _61425_ok;;
		std::tie(_61422_t,_61425_ok) = _1c99e1174_buildType((*_self_)._field_p, _60635_tokens,(&(_61321_i)),true);
		if (_61425_ok) {
			_60731_exprs = jule::alloc_for_append(_60731_exprs,1);_60731_exprs.__push(jule::new_ptr<_1e5d58e82_Expr>(_1e5d58e82_Expr{._field_Token=_60635_tokens[0LL], ._field_End=_60635_tokens[(_60635_tokens.len() - 1LL)], ._field_Kind=static_cast<jule::Any>(_61422_t)}));;
			if ((_61321_i < _60635_tokens.len())) {
				_1c99c4014_pushErr(&(*_self_), _60635_tokens[_61321_i],jule::Str("invalid syntax", 14));
			};
		};
		return;;
	};
	_60731_exprs = jule::alloc_for_append(_60731_exprs,1);_60731_exprs.__push(_1c99ded87_buildExpr((*_self_)._field_p, _60635_tokens));;
}



inline jule::Slice<jule::Ptr<_1e5d58e82_Expr>> _1c99ca2c3_buildCaseExprs(_1c99c2d26_scopeParser* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _63038_tokens, jule::Bool _63056_type_match) {
	jule::Slice<jule::Ptr<_1e5d58e82_Expr>> _63117_exprs = jule::Slice<jule::Ptr<_1e5d58e82_Expr>>::alloc(0LL,1LL);;
	jule::I64 _63317_braceN = 0LL;;
	jule::I64 _63417_j = 0LL;;
	{
		auto &expr = _63038_tokens;
		auto it = expr.begin();
		_iter_begin_1b2de1008:;
		if (it != expr.end()) {
			jule::I64 _63514_i = it - expr.begin();
			jule::Ptr<_1e47137a5_Token> _63521_tok = *it;
			{
				if ((_63521_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _63521_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
							_case_begin_1b2de205e:;
							{
								(_63317_braceN)++;
							}
						}
						else {
							_case_begin_1b2de2339:;
							{
								(_63317_braceN)--;
							}
						}
						_match_end_1b2de212a:;
					};
					goto _iter_next_1b2de1008;
				} else if ((_63317_braceN != 0LL)) {
					goto _iter_next_1b2de1008;
				};
				{
					
					if (((_63521_tok.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_63521_tok.get()._field_Kind == jule::Str("|", 1)))) {
						_case_begin_1b2de302c:;
						{
							jule::Slice<jule::Ptr<_1e47137a5_Token>> _65121_exprTokens = _63038_tokens.slice(_63417_j,_63514_i);;
							if ((_65121_exprTokens.len() == 0LL)) {
								_1c99c4014_pushErr(&(*_self_), _63521_tok,jule::Str("expression missing", 18));
							} else {
								_1c99c9e1b_pushCaseExpr(&(*_self_), _63038_tokens.slice(_63417_j,_63514_i),_63521_tok,_63056_type_match,_63117_exprs);
							};
							_63417_j=static_cast<jule::I64>((_63514_i + 1LL));
						}
					}
					else if ((_63521_tok.get()._field_Id == static_cast<jule::U64>(11LLU))) {
						_case_begin_1b2de3093:;
						{
							_1c99c9e1b_pushCaseExpr(&(*_self_), _63038_tokens.slice(_63417_j,_63514_i),_63521_tok,_63056_type_match,_63117_exprs);
							_63038_tokens=_63038_tokens.slice((_63514_i + 1LL));
							return _63117_exprs;
						}
					}
					_match_end_1b2de2aba:;
				};
			}
			_iter_next_1b2de1008:;
			++it;
			_63514_i++;
			goto _iter_begin_1b2de1008;
		}
		_iter_end_1b2de1008:;
	};
	_1c99c4014_pushErr(&(*_self_), _63038_tokens[0LL],jule::Str("invalid syntax", 14));
	_63038_tokens=nullptr;
	return nullptr;
}



inline jule::Ptr<_1e5d64c7e_ScopeTree> _1c99ca5d1_buildCaseScope(_1c99c2d26_scopeParser* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _66938_tokens) {
	jule::I64 _67017_n = 0LL;;
	for (;;) {
		{
			jule::I64 _67221_i = 0LL;;
			jule::Slice<jule::Ptr<_1e47137a5_Token>> _67322_next;;
			std::tie(_67322_next,std::ignore) = _1c99c21ee_skipSt(_67221_i,_66938_tokens.slice(_67017_n));
			if ((_67322_next.len() == 0LL)) {
				goto _iter_end_1b2de6ad0;
			};
			jule::Ptr<_1e47137a5_Token> _67717_tok = _67322_next[0LL];;
			if (((_67717_tok.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_67717_tok.get()._field_Kind != jule::Str("|", 1)))) {
				_67017_n+=_67221_i;
				goto _iter_next_1b2de6ad0;
			};
			jule::Slice<jule::Ptr<_1e47137a5_Token>> _68221_scopeTokens = _66938_tokens.slice(0LL,_67017_n);;
			jule::Ptr<_1e5d64c7e_ScopeTree> _68321_scope = _1c99c4bc4_buildScope(&(*_self_), _68221_scopeTokens,_66938_tokens[_67017_n]);;
			_66938_tokens=_66938_tokens.slice(_67017_n);
			return _68321_scope;
		}
	_iter_next_1b2de6ad0:;
	}
	_iter_end_1b2de6ad0:;;
	jule::Ptr<_1e47137a5_Token> _68717_end = jule::Ptr<_1e47137a5_Token>();;
	if ((_66938_tokens.len() > 0LL)) {
		_68717_end=_66938_tokens[(_66938_tokens.len() - 1LL)];
	};
	jule::Ptr<_1e5d64c7e_ScopeTree> _69117_scope = _1c99c4bc4_buildScope(&(*_self_), _66938_tokens,_68717_end);;
	_66938_tokens=nullptr;
	return _69117_scope;
}



inline std::tuple<jule::Ptr<_1e5d6b538_Case>,jule::Bool> _1c99ca988_buildCase(_1c99c2d26_scopeParser* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _69633_tokens, jule::Bool _69651_typeMatch) {
	jule::Ptr<_1e5d6b538_Case> _69717_c = jule::new_ptr<_1e5d6b538_Case>(_1e5d6b538_Case{._field_Token=_69633_tokens[0LL], });;
	_69633_tokens=_69633_tokens.slice(1LL);
	_69717_c.get()._field_Exprs=_1c99ca2c3_buildCaseExprs(&(*_self_), _69633_tokens,_69651_typeMatch);
	_69717_c.get()._field_Scope=_1c99ca5d1_buildCaseScope(&(*_self_), _69633_tokens);
	jule::Bool _70313_isDefault = (_69717_c.get()._field_Exprs.len() == 0LL);;
	return std::make_tuple(_69717_c,_70313_isDefault);
}



inline std::tuple<jule::Slice<jule::Ptr<_1e5d6b538_Case>>,jule::Ptr<_1e5d6a46b_Else>> _1c99cad40_buildCases(_1c99c2d26_scopeParser* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>> _70733_tokens, jule::Bool _70751_type_match) {
	jule::Slice<jule::Ptr<_1e5d6b538_Case>> _70817_cases = nullptr;;
	jule::Ptr<_1e5d6a46b_Else> _70917_def = nullptr;;
	jule::Bool _71017_defNotLast = false;;
	while ((_70733_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1e47137a5_Token> _71221_tok = _70733_tokens[0LL];;
			if (((_71221_tok.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_71221_tok.get()._field_Kind != jule::Str("|", 1)))) {
				_1c99c4014_pushErr(&(*_self_), _71221_tok,jule::Str("invalid syntax", 14));
				goto _iter_end_1b2dee852;
			};
			jule::Ptr<_1e5d6b538_Case> _71722_c;;
			jule::Bool _71725_is_default;;
			std::tie(_71722_c,_71725_is_default) = _1c99ca988_buildCase(&(*_self_), _70733_tokens,_70751_type_match);
			if (_71725_is_default) {
				_71722_c.get()._field_Token=_71221_tok;
				if ((_70917_def == nullptr)) {
					_70917_def=jule::new_ptr<_1e5d6a46b_Else>(_1e5d6a46b_Else{._field_Token=_71722_c.get()._field_Token, ._field_Scope=_71722_c.get()._field_Scope});
				} else {
					_1c99c4014_pushErr(&(*_self_), _71221_tok,jule::Str("invalid syntax", 14));
				};
			} else {
				_71017_defNotLast=(_71017_defNotLast || (_70917_def != nullptr));
				_70817_cases = jule::alloc_for_append(_70817_cases,1);_70817_cases.__push(_71722_c);;
			};
		}
	_iter_next_1b2dee852:;
	}
	_iter_end_1b2dee852:;;
	if (_71017_defNotLast) {
		_1c99c4014_pushErr(&(*_self_), _70917_def.get()._field_Token,jule::Str("default case should be last case", 32));
	};
	return std::make_tuple(_70817_cases,_70917_def);
}



inline jule::Ptr<_1e5d6bc0e_MatchCase> _1c99cb14d_buildMatchCase(_1c99c2d26_scopeParser* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>> _74137_tokens) {
	jule::Ptr<_1e5d6bc0e_MatchCase> _74217_m = jule::new_ptr<_1e5d6bc0e_MatchCase>(_1e5d6bc0e_MatchCase{._field_Token=_74137_tokens[0LL], });;
	_74137_tokens=_74137_tokens.slice(1LL);
	if (((_74137_tokens.len() > 0LL) && (_74137_tokens[0LL].get()._field_Id == static_cast<jule::U64>(10LLU)))) {
		_74217_m.get()._field_TypeMatch=true;
		_74137_tokens=_74137_tokens.slice(1LL);
	};
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _75217_exprTokens = _1c99ce294_getBlockExpr(_74137_tokens);;
	if ((_75217_exprTokens.len() > 0LL)) {
		_74217_m.get()._field_Expr=_1c99ded87_buildExpr((*_self_)._field_p, _75217_exprTokens);
	} else if (_74217_m.get()._field_TypeMatch) {
		_1c99c4014_pushErr(&(*_self_), _74217_m.get()._field_Token,jule::Str("expression missing", 18));
	};
	jule::I64 _75917_i = _75217_exprTokens.len();;
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _76017_blockToks = _1c99dc060_range(_75917_i,jule::Str("{", 1),jule::Str("}", 1),_74137_tokens);;
	if ((_76017_blockToks == nullptr)) {
		_1c99c34a8_stop(&(*_self_));
		_1c99c4014_pushErr(&(*_self_), _74217_m.get()._field_Token,jule::Str("body is not exist", 17));
		_1c99c4333_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((_75917_i < _74137_tokens.len())) {
		_1c99c4014_pushErr(&(*_self_), _74137_tokens[_75917_i],jule::Str("invalid syntax", 14));
	};
	_74217_m.get()._field_End=_74137_tokens[(_75917_i - 1LL)];
	std::tie(_74217_m.get()._field_Cases,_74217_m.get()._field_Default) = _1c99cad40_buildCases(&(*_self_), _76017_blockToks,_74217_m.get()._field_TypeMatch);
	return _74217_m;
}



inline jule::Ptr<_1e5d64c7e_ScopeTree> _1c99cb45b_buildScopeSt(_1c99c2d26_scopeParser* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>> _77435_tokens) {
	jule::Bool _77517_isUnsafe = false;;
	jule::Bool _77617_isDeferred = false;;
	jule::Ptr<_1e47137a5_Token> _77717_token = _77435_tokens[0LL];;
	if ((_77717_token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		_77517_isUnsafe=true;
		_77435_tokens=_77435_tokens.slice(1LL);
		if ((_77435_tokens.len() == 0LL)) {
			_1c99c4014_pushErr(&(*_self_), _77717_token,jule::Str("invalid syntax", 14));
			return nullptr;
		};
		_77717_token=_77435_tokens[0LL];
		if ((_77717_token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
			_77617_isDeferred=true;
			_77435_tokens=_77435_tokens.slice(1LL);
			if ((_77435_tokens.len() == 0LL)) {
				_1c99c4014_pushErr(&(*_self_), _77717_token,jule::Str("invalid syntax", 14));
				return nullptr;
			};
		};
	} else if ((_77717_token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
		_77617_isDeferred=true;
		_77435_tokens=_77435_tokens.slice(1LL);
		if ((_77435_tokens.len() == 0LL)) {
			_1c99c4014_pushErr(&(*_self_), _77717_token,jule::Str("invalid syntax", 14));
			return nullptr;
		};
	};
	jule::I64 _80317_i = 0LL;;
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _80417_scopeTokens = _1c99dc060_range(_80317_i,jule::Str("{", 1),jule::Str("}", 1),_77435_tokens);;
	if ((_80417_scopeTokens == nullptr)) {
		_1c99c4014_pushErr(&(*_self_), _77717_token,jule::Str("invalid syntax", 14));
		return nullptr;
	} else if ((_80317_i < _77435_tokens.len())) {
		_1c99c4014_pushErr(&(*_self_), _77435_tokens[_80317_i],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1e5d64c7e_ScopeTree> _81117_scope = _1c99c4bc4_buildScope(&(*_self_), _80417_scopeTokens,_77435_tokens[(_80317_i - 1LL)]);;
	_81117_scope.get()._field_Unsafety=_77517_isUnsafe;
	_81117_scope.get()._field_Deferred=_77617_isDeferred;
	return _81117_scope;
}



inline jule::Ptr<_1e5d623ec_LabelSt> _1c99cb769_buildLabelSt(_1c99c2d26_scopeParser* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _81736_tokens) {
	jule::Ptr<_1e5d623ec_LabelSt> _81817_lbl = jule::new_ptr<_1e5d623ec_LabelSt>(_1e5d623ec_LabelSt{._field_Token=_81736_tokens[0LL], ._field_Ident=_81736_tokens[0LL].get()._field_Kind});;
	if ((_81736_tokens.len() > 2LL)) {
		_81736_tokens=_81736_tokens.slice(2LL);
		_1c99c45a8_insertAsNext(&(*_self_), _81736_tokens);
	};
	return _81817_lbl;
}



inline std::tuple<jule::Any,jule::Bool> _1c99cba77_buildIdSt(_1c99c2d26_scopeParser* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _83233_tokens) {
	jule::Bool _83263_ok = jule::Bool();
	if ((_83233_tokens.len() == 1LL)) {
		return std::make_tuple(jule::Any(),_83263_ok);
	};
	jule::Ptr<_1e47137a5_Token> _83717_token = _83233_tokens[1LL];;
	{
		auto &_match_expr{ _83717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1b2e15505:;
			{
				_83263_ok = true;
				return std::make_tuple(static_cast<jule::Any>(_1c99cb769_buildLabelSt(&(*_self_), _83233_tokens)),_83263_ok);
			}
		}
		_match_end_1b2e161b5:;
	};
	return std::make_tuple(jule::Any(),_83263_ok);
}



inline jule::Ptr<_1c99da4c0_assignInfo> _1c99cbd85_buildAssignInfo(_1c99c2d26_scopeParser* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _84639_tokens) {
	jule::Ptr<_1c99da4c0_assignInfo> _84717_info = jule::new_ptr<_1c99da4c0_assignInfo>(_1c99da4c0_assignInfo{._field_ok=true});;
	jule::I64 _85017_braceN = 0LL;;
	{
		auto &expr = _84639_tokens;
		auto it = expr.begin();
		_iter_begin_1b2e1800d:;
		if (it != expr.end()) {
			jule::I64 _85114_i = it - expr.begin();
			jule::Ptr<_1e47137a5_Token> _85121_token = *it;
			{
				if ((_85121_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _85121_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1b2e1900e:;
							{
								(_85017_braceN)++;
							}
						}
						else {
							_case_begin_1b2e192d9:;
							{
								(_85017_braceN)--;
							}
						}
						_match_end_1b2e190ca:;
					};
				};
				{
					
					if ((_85017_braceN > 0LL)) {
						_case_begin_1b2e199c1:;
						{
							goto _iter_next_1b2e1800d;
						}
					}
					else if ((_85121_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
						_case_begin_1b2e19a37:;
						{
							goto _iter_next_1b2e1800d;
						}
					}
					else if ((!(_1e471838c_IsAssignOp(_85121_token.get()._field_Kind)))) {
						_case_begin_1b2e19aae:;
						{
							goto _iter_next_1b2e1800d;
						}
					}
					_match_end_1b2e197a1:;
				};
				_84717_info.get()._field_l=_84639_tokens.slice(0LL,_85114_i);
				if ((_84717_info.get()._field_l.len() == 0LL)) {
					_84717_info.get()._field_ok=false;
				};
				_84717_info.get()._field_setter=_85121_token;
				if (((_85114_i + 1LL) >= _84639_tokens.len())) {
					_84717_info.get()._field_r=nullptr;
					_84717_info.get()._field_ok=_1e47180e5_IsPostfixOp(_84717_info.get()._field_setter.get()._field_Kind);
					goto _iter_end_1b2e1800d;
				};
				_84717_info.get()._field_r=_84639_tokens.slice((_85114_i + 1LL));
				if (_1e47180e5_IsPostfixOp(_84717_info.get()._field_setter.get()._field_Kind)) {
					if ((_84717_info.get()._field_r.len() > 0LL)) {
						_1c99c4014_pushErr(&(*_self_), _84717_info.get()._field_r[0LL],jule::Str("invalid syntax", 14));
						_84717_info.get()._field_r=nullptr;
					};
				};
				goto _iter_end_1b2e1800d;
			}
			_iter_next_1b2e1800d:;
			++it;
			_85114_i++;
			goto _iter_begin_1b2e1800d;
		}
		_iter_end_1b2e1800d:;
	};
	return _84717_info;
}



inline jule::Ptr<_1e5d6319a_AssignLeft> _1c99cc193_buildAssignL(_1c99c2d26_scopeParser* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _89436_tokens) {
	jule::Ptr<_1e5d6319a_AssignLeft> _89517_l = jule::new_ptr<_1e5d6319a_AssignLeft>(_1e5d6319a_AssignLeft{._field_Token=_89436_tokens[0LL], });;
	if ((_89436_tokens[0LL].get()._field_Id == static_cast<jule::U64>(2LLU))) {
		_89517_l.get()._field_Ident=_89517_l.get()._field_Token.get()._field_Kind;
	};
	_89517_l.get()._field_Expr=_1c99ded87_buildExpr((*_self_)._field_p, _89436_tokens);
	return _89517_l;
}



inline jule::Slice<jule::Ptr<_1e5d6319a_AssignLeft>> _1c99cc4a1_buildAssignLs(_1c99c2d26_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>>& _90537_parts) {
	jule::Slice<jule::Ptr<_1e5d6319a_AssignLeft>> _90617_lefts = nullptr;;
	{
		auto &expr = _90537_parts;
		auto it = expr.begin();
		_iter_begin_1b2e216ed:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1e47137a5_Token>> _90721_part = *it;
			{
				jule::Ptr<_1e5d6319a_AssignLeft> _90821_l = _1c99cc193_buildAssignL(&(*_self_), _90721_part);;
				_90617_lefts = jule::alloc_for_append(_90617_lefts,1);_90617_lefts.__push(_90821_l);;
			}
			_iter_next_1b2e216ed:;
			++it;
			goto _iter_begin_1b2e216ed;
		}
		_iter_end_1b2e216ed:;
	};
	return _90617_lefts;
}



inline std::tuple<jule::Ptr<_1e5d636d9_AssignSt>,jule::Bool> _1c99cc7ae_buildPlainAssign(_1c99c2d26_scopeParser* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _91540_tokens) {
	jule::Ptr<_1c99da4c0_assignInfo> _91617_info = _1c99cbd85_buildAssignInfo(&(*_self_), _91540_tokens);;
	if ((!(_91617_info.get()._field_ok))) {
		return std::make_tuple(nullptr,false);
	};
	jule::Ptr<_1e5d636d9_AssignSt> _92117_assign = jule::new_ptr<_1e5d636d9_AssignSt>(_1e5d636d9_AssignSt{._field_Setter=_91617_info.get()._field_setter, });;
	jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>> _92518_parts;;
	jule::Slice<_1e43e3a18_Log> _92525_errs;;
	std::tie(_92518_parts,_92525_errs) = _1c99dcacc_parts(_91617_info.get()._field_l,static_cast<jule::U64>(8LLU),true);
	if ((_92525_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_92525_errs);
		return std::make_tuple(nullptr,false);
	};
	_92117_assign.get()._field_Left=_1c99cc4a1_buildAssignLs(&(*_self_), _92518_parts);
	if ((_91617_info.get()._field_r != nullptr)) {
		_92117_assign.get()._field_Right=_1c99ded87_buildExpr((*_self_)._field_p, _91617_info.get()._field_r);
	};
	return std::make_tuple(_92117_assign,true);
}



inline std::tuple<jule::Ptr<_1e5d636d9_AssignSt>,jule::Bool> _1c99ccabc_buildDeclAssign(_1c99c2d26_scopeParser* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>> _93938_tokens) {
	if ((_93938_tokens.len() < 1LL)) {
		return std::make_tuple(nullptr,false);
	};
	_93938_tokens=_93938_tokens.slice(1LL);
	jule::Ptr<_1e47137a5_Token> _94517_token = _93938_tokens[0LL];;
	if (((_94517_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_94517_token.get()._field_Kind != jule::Str("(", 1)))) {
		return std::make_tuple(nullptr,false);
	};
	jule::Ptr<_1e5d636d9_AssignSt> _95017_assign = jule::new_ptr<_1e5d636d9_AssignSt>(_1e5d636d9_AssignSt{._field_Declarative=true, });;
	jule::I64 _95417_i = 0LL;;
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _95517_rang = _1c99dc060_range(_95417_i,jule::Str("(", 1),jule::Str(")", 1),_93938_tokens);;
	if ((_95517_rang == nullptr)) {
		_1c99c4014_pushErr(&(*_self_), _94517_token,jule::Str("invalid syntax", 14));
		return std::make_tuple(nullptr,false);
	} else if (((_95417_i + 1LL) < _93938_tokens.len())) {
		_95017_assign.get()._field_Setter=_93938_tokens[_95417_i];
		(_95417_i)++;
		jule::Slice<jule::Ptr<_1e47137a5_Token>> _96221_exprTokens = _93938_tokens.slice(_95417_i);;
		_95017_assign.get()._field_Right=_1c99ded87_buildExpr((*_self_)._field_p, _96221_exprTokens);
	};
	jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>> _96718_parts;;
	jule::Slice<_1e43e3a18_Log> _96725_errs;;
	std::tie(_96718_parts,_96725_errs) = _1c99dcacc_parts(_95517_rang,static_cast<jule::U64>(8LLU),true);
	if ((_96725_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_96725_errs);
		return std::make_tuple(nullptr,false);
	};
	{
		auto &expr = _96718_parts;
		auto it = expr.begin();
		_iter_begin_1b2e2c5b6:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1e47137a5_Token>> _97321_part = *it;
			{
				jule::Bool _97421_isMut = false;;
				jule::Bool _97521_isRef = false;;
				_94517_token=_97321_part[0LL];
				if ((_94517_token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
					_97421_isMut=true;
					_97321_part=_97321_part.slice(1LL);
					if ((_97321_part.len() == 0LL)) {
						_1c99c4014_pushErr(&(*_self_), _94517_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1b2e2c5b6;
					};
				};
				if (((_97321_part[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_97321_part[0LL].get()._field_Kind == jule::Str("&", 1)))) {
					_97521_isRef=true;
					_97321_part=_97321_part.slice(1LL);
					if ((_97321_part.len() == 0LL)) {
						_1c99c4014_pushErr(&(*_self_), _94517_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1b2e2c5b6;
					};
				};
				if ((((_97321_part[0LL].get()._field_Id != static_cast<jule::U64>(2LLU)) && (_97321_part[0LL].get()._field_Id != static_cast<jule::U64>(3LLU))) && (_97321_part[0LL].get()._field_Kind != jule::Str("(", 1)))) {
					_1c99c4014_pushErr(&(*_self_), _94517_token,jule::Str("invalid syntax", 14));
					goto _iter_next_1b2e2c5b6;
				};
				jule::Ptr<_1e5d6319a_AssignLeft> _100321_l = _1c99cc193_buildAssignL(&(*_self_), _97321_part);;
				_100321_l.get()._field_Mutable=_97421_isMut;
				_100321_l.get()._field_Reference=_97521_isRef;
				_95017_assign.get()._field_Left = jule::alloc_for_append(_95017_assign.get()._field_Left,1);_95017_assign.get()._field_Left.__push(_100321_l);;
			}
			_iter_next_1b2e2c5b6:;
			++it;
			goto _iter_begin_1b2e2c5b6;
		}
		_iter_end_1b2e2c5b6:;
	};
	return std::make_tuple(_95017_assign,true);
}



inline std::tuple<jule::Ptr<_1e5d636d9_AssignSt>,jule::Bool> _1c99ccdca_buildAssignSt(_1c99c2d26_scopeParser* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _101237_tokens) {
	jule::Ptr<_1e5d636d9_AssignSt> _101257_st = jule::Ptr<_1e5d636d9_AssignSt>();
	jule::Bool _101272_ok = jule::Bool();
	if ((!(_1c99da866_checkAssignTokens(_101237_tokens)))) {
		_101257_st = nullptr;
		_101272_ok = false;
		return std::make_tuple(_101257_st,_101272_ok);
	};
	{
		auto &_match_expr{ _101237_tokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1b2e363a0:;
			{
				std::tie(_101257_st,_101272_ok) = _1c99ccabc_buildDeclAssign(&(*_self_), _101237_tokens);
			}
		}
		else {
			_case_begin_1b2e35e93:;
			{
				std::tie(_101257_st,_101272_ok) = _1c99cc7ae_buildPlainAssign(&(*_self_), _101237_tokens);
			}
		}
		_match_end_1b2e35e3d:;
	};
	return std::make_tuple(_101257_st,_101272_ok);
}



inline jule::Ptr<_1e5d59823_UseExpr> _1c99cd1d8_buildUseExpr(_1c99c2d26_scopeParser* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _102736_tokens) {
	if ((_102736_tokens.len() == 1LL)) {
		_1c99c4014_pushErr(&(*_self_), _102736_tokens[0LL],jule::Str("expression missing", 18));
		return nullptr;
	};
	jule::Ptr<_1e5d59823_UseExpr> _103217_ue = jule::new_ptr<_1e5d59823_UseExpr>(_1e5d59823_UseExpr{._field_Token=_102736_tokens[0LL], });;
	_102736_tokens=_102736_tokens.slice(1LL);
	_103217_ue.get()._field_Expr=_1c99ded87_buildExpr((*_self_)._field_p, _102736_tokens);
	return _103217_ue;
}



inline jule::Any _1c99cd4e6_buildSt(_1c99c2d26_scopeParser* _self_, jule::Ptr<_1c99c24eb_stmt>& _104031_st) {
	jule::Ptr<_1e47137a5_Token> _104117_token = _104031_st.get()._field_tokens[0LL];;
	if ((_104117_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
		jule::Any _104322_s;;
		jule::Bool _104325_ok;;
		std::tie(_104322_s,_104325_ok) = _1c99cba77_buildIdSt(&(*_self_), _104031_st.get()._field_tokens);
		if (_104325_ok) {
			return _104322_s;
		};
	};
	jule::Ptr<_1e5d636d9_AssignSt> _104918_s;;
	jule::Bool _104921_ok;;
	std::tie(_104918_s,_104921_ok) = _1c99ccdca_buildAssignSt(&(*_self_), _104031_st.get()._field_tokens);
	if (_104921_ok) {
		return static_cast<jule::Any>(_104918_s);
	};
	{
		auto &_match_expr{ _104117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1b2e3b4d7:;
			{
				return static_cast<jule::Any>(_1c99cd1d8_buildUseExpr(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1b2e3b2a6:;
			{
				return static_cast<jule::Any>(_1c99c4ed2_buildVarSt(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1b2e3b8a0:;
			{
				return static_cast<jule::Any>(_1c99c52e0_buildRetSt(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(12LLU)) {
			_case_begin_1b2e3b916:;
			{
				return static_cast<jule::Any>(_1c99c7c2c_buildIterSt(&(*_self_), _104031_st));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1b2e3b97c:;
			{
				return static_cast<jule::Any>(_1c99c803a_buildBreakSt(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(14LLU)) {
			_case_begin_1b2e3b9e3:;
			{
				return static_cast<jule::Any>(_1c99c8348_buildContSt(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1b2e3ba59:;
			{
				return static_cast<jule::Any>(_1c99c8c72_buildIfElseChain(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1b2e3bac0:;
			{
				return static_cast<jule::Any>(_1c99c9080_buildCoCallSt(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1b2e3bb36:;
			{
				return static_cast<jule::Any>(_1c99c938d_buildGotoSt(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1b2e3bb9c:;
			{
				return static_cast<jule::Any>(_1c99c969b_buildFallSt(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1b2e3bc13:;
			{
				return static_cast<jule::Any>(_1c99c99a9_buildTypeAliasSt(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1b2e3bc79:;
			{
				return static_cast<jule::Any>(_1c99cb14d_buildMatchCase(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1b2e3bce0:;
			{
				return static_cast<jule::Any>(_1c99cb45b_buildScopeSt(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1b2e3bd56:;
			{
				if ((_104117_token.get()._field_Kind == jule::Str("{", 1))) {
					return static_cast<jule::Any>(_1c99cb45b_buildScopeSt(&(*_self_), _104031_st.get()._field_tokens));
				};
			}
		}
		_match_end_1b2e3b6c4:;
	};
	jule::Ptr<_1e5d58e82_Expr> _109017_expr = _1c99ded87_buildExpr((*_self_)._field_p, _104031_st.get()._field_tokens);;
	if ((_109017_expr != nullptr)) {
		return static_cast<jule::Any>(_109017_expr);
	};
	_1c99c4014_pushErr(&(*_self_), _104117_token,jule::Str("invalid syntax", 14));
	return nullptr;
}



inline void _1c99cd815_build(_1c99c2d26_scopeParser* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _109829_tokens, jule::Ptr<_1e5d64c7e_ScopeTree>& _109852_s) {
	if ((_109852_s == nullptr)) {
		return;;
	};
	(*_self_)._field_stmts=_1c99c2892_splitStmts(_109829_tokens);
	(*_self_)._field_pos=-1LL;
	(*_self_)._field_s=_109852_s;
	while (((!(_1c99c3be5_isLastSt(&(*_self_)))) && (!(_1c99c3981_finished(&(*_self_)))))) {
		{
			jule::Ptr<_1c99c24eb_stmt> _110621_st = _1c99c481c_next(&(*_self_));;
			jule::Any _110721_data = _1c99cd4e6_buildSt(&(*_self_), _110621_st);;
			if ((_110721_data != nullptr)) {
				(*_self_)._field_s.get()._field_Stmts = jule::alloc_for_append((*_self_)._field_s.get()._field_Stmts,1);(*_self_)._field_s.get()._field_Stmts.__push(_1e5d64674_Stmt{._field_Token=_110621_st.get()._field_tokens[0LL], ._field_Data=_110721_data});;
			};
			if (_1c99c371c_stopped(&(*_self_))) {
				goto _iter_end_1b2e44d81;
			};
		}
	_iter_next_1b2e44d81:;
	}
	_iter_end_1b2e44d81:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c99c2d26_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _1c99d098d_pushErr(_1c99d0185_exprBuilder* _self_, jule::Ptr<_1e47137a5_Token> _19726_token, jule::Str _19741_fmt, jule::Slice<jule::Any> _19754_args) {
	_1c99de75a_pushErr((*_self_)._field_p.ptr(), _19726_token,_19741_fmt,jule::Any(_19754_args));
}



inline void _1c99d0cac_pushSuggestion(_1c99d0185_exprBuilder* _self_, jule::Str _20233_fmt, jule::Slice<jule::Any> _20246_args) {
	_1c99dea79_pushSuggestion((*_self_)._field_p.ptr(), _20233_fmt,jule::Any(_20246_args));
}



inline jule::Ptr<_1e5d59b0e_TupleExpr> _1c99d10ba_buildTuple(_1c99d0185_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>>& _20634_parts) {
	jule::Ptr<_1e5d59b0e_TupleExpr> _20717_tuple = jule::new_ptr<_1e5d59b0e_TupleExpr>(_1e5d59b0e_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_1e5d58e82_Expr>>::alloc(0LL,_20634_parts.len())});;
	{
		auto &expr = _20634_parts;
		auto it = expr.begin();
		_iter_begin_1b2e608d5:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1e47137a5_Token>> _21021_part = *it;
			{
				_20717_tuple.get()._field_Expr = jule::alloc_for_append(_20717_tuple.get()._field_Expr,1);_20717_tuple.get()._field_Expr.__push(_1c99d9ada_buildFromTokens(&(*_self_), _21021_part));;
			}
			_iter_next_1b2e608d5:;
			++it;
			goto _iter_begin_1b2e608d5;
		}
		_iter_end_1b2e608d5:;
	};
	return _20717_tuple;
}



inline jule::Ptr<_1e5d59eb6_LitExpr> _1c99d13c8_buildLit(_1c99d0185_exprBuilder* _self_, jule::Ptr<_1e47137a5_Token> _21627_token) {
	return jule::new_ptr<_1e5d59eb6_LitExpr>(_1e5d59eb6_LitExpr{._field_Token=_21627_token, ._field_Value=_21627_token.get()._field_Kind});
}



inline jule::Ptr<_1e5d54961_TypeDecl> _1c99d16d6_buildPrimitiveType(_1c99d0185_exprBuilder* _self_, jule::Ptr<_1e47137a5_Token>& _22338_token) {
	return _1c99ee57d_buildPrimType(_22338_token);
}



inline jule::Any _1c99d19e4_buildSingle(_1c99d0185_exprBuilder* _self_, jule::Ptr<_1e47137a5_Token> _22734_token) {
	{
		auto &_match_expr{ _22734_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1b2e62640:;
			{
				return static_cast<jule::Any>(_1c99d13c8_buildLit(&(*_self_), _22734_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1b2e626a6:;
			{
				if ((_22734_token.get()._field_Kind == jule::Str("...", 3))) {
					return static_cast<jule::Any>(jule::new_ptr<_1e5d5baab_VariadicExpr>(_1e5d5baab_VariadicExpr{._field_Token=_22734_token, }));
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(27LLU) || _match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1b2e6271c:;
			{
				return static_cast<jule::Any>(_1c99cebac_buildIdentExpr(_22734_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1b2e62783:;
			{
				return static_cast<jule::Any>(_1c99d16d6_buildPrimitiveType(&(*_self_), _22734_token));
			}
		}
		_match_end_1b2e615b7:;
	};
	_1c99d098d_pushErr(&(*_self_), _22734_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1e5d5aeea_IdentExpr> _1c99d1d02_buildCppLinkedIdent(_1c99d0185_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _24843_tokens) {
	if ((_24843_tokens[0LL].get()._field_Id != static_cast<jule::U64>(30LLU))) {
		return nullptr;
	} else if ((_24843_tokens[1LL].get()._field_Id != static_cast<jule::U64>(20LLU))) {
		_1c99d098d_pushErr(&(*_self_), _24843_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c99d0cac_pushSuggestion(&(*_self_), jule::Str("use dot (.) to access cpp-linked defines", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e47137a5_Token> _25617_token = _24843_tokens[2LL];;
	if ((_25617_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1c99d098d_pushErr(&(*_self_), _24843_tokens[2LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c99d0cac_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e5d5aeea_IdentExpr> _26217_expr = _1c99cebac_buildIdentExpr(_25617_token);;
	_26217_expr.get()._field_CppLinked=true;
	return _26217_expr;
}



inline jule::Ptr<_1e5d5b704_UnaryExpr> _1c99d2110_buildUnary(_1c99d0185_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>> _26733_tokens) {
	jule::Ptr<_1e47137a5_Token> _26817_op = _26733_tokens[0LL];;
	if ((_26733_tokens.len() == 1LL)) {
		_1c99d098d_pushErr(&(*_self_), _26817_op,jule::Str("missing expression for unary operator", 37),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((!(_1e4713eae_IsUnaryOp(_26817_op.get()._field_Kind)))) {
		_1c99d098d_pushErr(&(*_self_), _26817_op,jule::Str("invalid unary operator: @", 25),jule::Slice<jule::Any>::make({jule::Any(_26817_op.get()._field_Kind)}));
		return nullptr;
	};
	_26733_tokens=_26733_tokens.slice(1LL);
	return jule::new_ptr<_1e5d5b704_UnaryExpr>(_1e5d5b704_UnaryExpr{._field_Op=_26817_op, ._field_Expr=_1c99d9ada_buildFromTokens(&(*_self_), _26733_tokens)});
}



inline jule::Ptr<_1e5d5c78d_SubIdentExpr> _1c99d241d_buildObjSubIdent(_1c99d0185_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>> _28839_tokens) {
	jule::I64 _28917_i = (_28839_tokens.len() - 1LL);;
	jule::Ptr<_1e47137a5_Token> _29017_identToken = _28839_tokens[_28917_i];;
	(_28917_i)--;
	_28839_tokens=_28839_tokens.slice(0LL,_28917_i);
	if ((_28839_tokens.len() == 0LL)) {
		_1c99d098d_pushErr(&(*_self_), _29017_identToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1e5d5c78d_SubIdentExpr>(_1e5d5c78d_SubIdentExpr{._field_Expr=_1c99d9ada_buildFromTokens(&(*_self_), _28839_tokens), ._field_Ident=_29017_identToken});
}



inline jule::Ptr<_1e5d5c31a_NsSelectionExpr> _1c99d272b_buildNsSubIdent(_1c99d0185_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _30339_tokens) {
	jule::Ptr<_1e5d5c31a_NsSelectionExpr> _30417_ns = jule::new_ptr<_1e5d5c31a_NsSelectionExpr>();;
	{
		auto &expr = _30339_tokens;
		auto it = expr.begin();
		_iter_begin_1b2e6dd11:;
		if (it != expr.end()) {
			jule::I64 _30514_i = it - expr.begin();
			jule::Ptr<_1e47137a5_Token> _30521_token = *it;
			{
				if (((_30514_i & 1LL) == 0LL)) {
					if ((_30521_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
						_1c99d098d_pushErr(&(*_self_), _30521_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_1c99d0cac_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					};
					_30417_ns.get()._field_Ns = jule::alloc_for_append(_30417_ns.get()._field_Ns,1);_30417_ns.get()._field_Ns.__push(_30521_token);;
				} else if ((_30521_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1c99d098d_pushErr(&(*_self_), _30521_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_1c99d0cac_pushSuggestion(&(*_self_), jule::Str("expected double colon \"::\"", 26),jule::Slice<jule::Any>());
				};
			}
			_iter_next_1b2e6dd11:;
			++it;
			_30514_i++;
			goto _iter_begin_1b2e6dd11;
		}
		_iter_end_1b2e6dd11:;
	};
	_30417_ns.get()._field_Ident=_30417_ns.get()._field_Ns[(_30417_ns.get()._field_Ns.len() - 1LL)];
	_30417_ns.get()._field_Ns=_30417_ns.get()._field_Ns.slice(0LL,(_30417_ns.get()._field_Ns.len() - 1LL));
	return _30417_ns;
}



inline jule::Ptr<_1e5d54961_TypeDecl> _1c99d2a39_buildType(_1c99d0185_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _32233_tokens) {
	jule::I64 _32317_i = 0LL;;
	jule::Ptr<_1e5d54961_TypeDecl> _32418_t;;
	jule::Bool _32421_ok;;
	std::tie(_32418_t,_32421_ok) = _1c99e1174_buildType((*_self_)._field_p, _32233_tokens,(&(_32317_i)),false);
	if ((!(_32421_ok))) {
		_1c99d098d_pushErr(&(*_self_), _32233_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_32317_i < _32233_tokens.len())) {
		_1c99d098d_pushErr(&(*_self_), _32233_tokens[_32317_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _32418_t;
}



inline jule::Any _1c99d2d47_buildSubIdent(_1c99d0185_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _33637_tokens) {
	jule::I64 _33713_i = (_33637_tokens.len() - 2LL);;
	jule::Ptr<_1e47137a5_Token> _33813_token = _33637_tokens[_33713_i];;
	{
		auto &_match_expr{ _33813_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1b2e762d0:;
			{
				return static_cast<jule::Any>(_1c99d241d_buildObjSubIdent(&(*_self_), _33637_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1b2e7680d:;
			{
				return static_cast<jule::Any>(_1c99d272b_buildNsSubIdent(&(*_self_), _33637_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1b2e76874:;
			{
				if ((_33813_token.get()._field_Kind == jule::Str("]", 1))) {
					return static_cast<jule::Any>(_1c99d2a39_buildType(&(*_self_), _33637_tokens));
				};
			}
		}
		_match_end_1b2e76665:;
	};
	_1c99d098d_pushErr(&(*_self_), _33813_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1e5d5baab_VariadicExpr> _1c99d3155_buildVariadic(_1c99d0185_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>> _35436_tokens) {
	jule::Ptr<_1e47137a5_Token> _35517_token = _35436_tokens[(_35436_tokens.len() - 1LL)];;
	_35436_tokens=_35436_tokens.slice(0LL,(_35436_tokens.len() - 1LL));
	return jule::new_ptr<_1e5d5baab_VariadicExpr>(_1e5d5baab_VariadicExpr{._field_Token=_35517_token, ._field_Expr=_1c99d9ada_buildFromTokens(&(*_self_), _35436_tokens)});
}



inline jule::Any _1c99d3463_buildOpRight(_1c99d0185_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _36336_tokens) {
	jule::Ptr<_1e47137a5_Token> _36417_token = _36336_tokens[(_36336_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _36417_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1b2e7a9ee:;
			{
				_36336_tokens=_36336_tokens.slice(0LL,(_36336_tokens.len() - 1LL));
				jule::Any _36821_d = _1c99d94be_build(&(*_self_), _36336_tokens);;
				if ((_36821_d == nullptr)) {
					return nullptr;
				};
				{
					auto &_match_expr{ _36821_d };
					
					if (_match_expr.type_is<jule::Ptr<_1e5d5d250_FnCallExpr>>()) {
						_case_begin_1b2e7be51:;
						{
							_36821_d.operator jule::Ptr<_1e5d5d250_FnCallExpr>().get()._field_Exception=jule::new_ptr<_1e5d64c7e_ScopeTree>(_1e5d64c7e_ScopeTree{._field_Deferred=true, });
							return _36821_d;
						}
					}
					_match_end_1b2e7bda7:;
				};
			}
		}
		_match_end_1b2e7a955:;
	};
	_1c99d098d_pushErr(&(*_self_), _36417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1e5d5926d_RangeExpr> _1c99d3793_buildBetweenParentheses(_1c99d0185_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>> _38446_tokens) {
	if ((_38446_tokens.len() == 2LL)) {
		_1c99d098d_pushErr(&(*_self_), _38446_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_1c99d0cac_pushSuggestion(&(*_self_), jule::Str("empty parentheses are not valid expression, must include an expression in range", 79),jule::Slice<jule::Any>());
		return nullptr;
	};
	_38446_tokens=_38446_tokens.slice(1LL,(_38446_tokens.len() - 1LL));
	return jule::new_ptr<_1e5d5926d_RangeExpr>(_1e5d5926d_RangeExpr{._field_Expr=_1c99d9ada_buildFromTokens(&(*_self_), _38446_tokens)});
}



inline jule::Ptr<_1e5d5be63_CastExpr> _1c99d3ab2_tryBuildCast(_1c99d0185_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _39636_tokens) {
	jule::I64 _39717_rangeN = 0LL;;
	{
		auto &expr = _39636_tokens;
		auto it = expr.begin();
		_iter_begin_1b2e805b4:;
		if (it != expr.end()) {
			jule::I64 _39813_i = it - expr.begin();
			jule::Ptr<_1e47137a5_Token> _39816_token = *it;
			{
				if ((_39816_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _39816_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1b2e814c7:;
							{
								(_39717_rangeN)++;
								goto _iter_next_1b2e805b4;
							}
						}
						else {
							_case_begin_1b2e817a2:;
							{
								(_39717_rangeN)--;
							}
						}
						_match_end_1b2e81593:;
					};
				};
				if ((_39717_rangeN > 0LL)) {
					goto _iter_next_1b2e805b4;
				} else if (((_39813_i + 1LL) == _39636_tokens.len())) {
					return nullptr;
				};
				jule::Slice<jule::Ptr<_1e47137a5_Token>> _41721_typeTokens = _39636_tokens.slice(0LL,(_39813_i + 1LL));;
				jule::Slice<jule::Ptr<_1e47137a5_Token>> _41821_exprTokens = _39636_tokens.slice((_39813_i + 1LL));;
				if ((_41821_exprTokens.len() == 0LL)) {
					return nullptr;
				};
				jule::Ptr<_1e47137a5_Token> _42517_tok = _41821_exprTokens[0LL];;
				if (((_42517_tok.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_42517_tok.get()._field_Kind != jule::Str("(", 1)))) {
					return nullptr;
				};
				jule::Ptr<_1e5d5be63_CastExpr> _43021_cast = jule::new_ptr<_1e5d5be63_CastExpr>(_1e5d5be63_CastExpr{});;
				if ((_41821_exprTokens.len() == 2LL)) {
					_1c99d098d_pushErr(&(*_self_), _41821_exprTokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
					_1c99d0cac_pushSuggestion(&(*_self_), jule::Str("give an expression for casting", 30),jule::Slice<jule::Any>());
				};
				if ((_41721_typeTokens.len() == 2LL)) {
					_1c99d098d_pushErr(&(*_self_), _41721_typeTokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
					_1c99d0cac_pushSuggestion(&(*_self_), jule::Str("type declaration expected for casting", 37),jule::Slice<jule::Any>());
				} else {
					_41721_typeTokens=_41721_typeTokens.slice(1LL,(_41721_typeTokens.len() - 1LL));
					jule::I64 _44425_typeIndex = 0LL;;
					jule::Ptr<_1e5d54961_TypeDecl> _44526_t;;
					jule::Bool _44529_ok;;
					std::tie(_44526_t,_44529_ok) = _1c99e1174_buildType((*_self_)._field_p, _41721_typeTokens,(&(_44425_typeIndex)),true);
					if ((_44529_ok && (_44425_typeIndex < _41721_typeTokens.len()))) {
						_1c99d098d_pushErr(&(*_self_), _41721_typeTokens[_44425_typeIndex],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					} else if ((!(_44529_ok))) {
						return _43021_cast;
					};
					_43021_cast.get()._field_Kind=_44526_t;
					if ((_41821_exprTokens.len() > 2LL)) {
						jule::I64 _45529_j = 0LL;;
						_1c99dc060_range(_45529_j,jule::Str("(", 1),jule::Str(")", 1),_41821_exprTokens);
						if ((_45529_j < _41821_exprTokens.len())) {
							return nullptr;
						};
						_41821_exprTokens=_41821_exprTokens.slice(0LL,_45529_j);
						_43021_cast.get()._field_Expr=_1c99d9ada_buildFromTokens(&(*_self_), _41821_exprTokens);
					};
				};
				return _43021_cast;
			}
			_iter_next_1b2e805b4:;
			++it;
			_39813_i++;
			goto _iter_begin_1b2e805b4;
		}
		_iter_end_1b2e805b4:;
	};
	return nullptr;
}



inline void _1c99d3e7a_pushArg(_1c99d0185_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5d58e82_Expr>>& _47031_args, jule::Slice<jule::Ptr<_1e47137a5_Token>> _47050_tokens, jule::Ptr<_1e47137a5_Token> _47068_err_token) {
	if ((_47050_tokens.len() == 0LL)) {
		_1c99d098d_pushErr(&(*_self_), _47068_err_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c99d0cac_pushSuggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_47031_args = jule::alloc_for_append(_47031_args,1);_47031_args.__push(_1c99d9ada_buildFromTokens(&(*_self_), _47050_tokens));;
}



inline jule::Slice<jule::Ptr<_1e5d58e82_Expr>> _1c99d4288_buildArgs(_1c99d0185_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>> _47932_tokens) {
	if ((_47932_tokens.len() < 2LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1e5d58e82_Expr>> _48517_args = nullptr;;
	jule::I64 _48617_last = 0LL;;
	jule::I64 _48717_rangeN = 0LL;;
	_47932_tokens=_47932_tokens.slice(1LL,(_47932_tokens.len() - 1LL));
	{
		auto &expr = _47932_tokens;
		auto it = expr.begin();
		_iter_begin_1b2e8eb23:;
		if (it != expr.end()) {
			jule::I64 _48913_i = it - expr.begin();
			jule::Ptr<_1e47137a5_Token> _48916_token = *it;
			{
				if ((_48916_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _48916_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1b2e90915:;
							{
								(_48717_rangeN)++;
							}
						}
						else {
							_case_begin_1b2e90be0:;
							{
								(_48717_rangeN)--;
							}
						}
						_match_end_1b2e909d1:;
					};
				};
				if (((_48717_rangeN > 0LL) || (_48916_token.get()._field_Id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1b2e8eb23;
				};
				_1c99d3e7a_pushArg(&(*_self_), _48517_args,_47932_tokens.slice(_48617_last,_48913_i),_48916_token);
				_48617_last=static_cast<jule::I64>((_48913_i + 1LL));
			}
			_iter_next_1b2e8eb23:;
			++it;
			_48913_i++;
			goto _iter_begin_1b2e8eb23;
		}
		_iter_end_1b2e8eb23:;
	};
	if ((_48617_last < _47932_tokens.len())) {
		if ((_48617_last == 0LL)) {
			if ((_47932_tokens.len() > 0LL)) {
				_1c99d3e7a_pushArg(&(*_self_), _48517_args,_47932_tokens.slice(_48617_last),_47932_tokens[_48617_last]);
			};
		} else {
			_1c99d3e7a_pushArg(&(*_self_), _48517_args,_47932_tokens.slice(_48617_last),_47932_tokens[(_48617_last - 1LL)]);
		};
	};
	return _48517_args;
}



inline jule::Slice<jule::Ptr<_1e5d54961_TypeDecl>> _1c99d4596_buildCallGenerics(_1c99d0185_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>> _52140_tokens) {
	if ((_52140_tokens.len() == 0LL)) {
		return nullptr;
	};
	_52140_tokens=_52140_tokens.slice(1LL,(_52140_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>> _52718_parts;;
	jule::Slice<_1e43e3a18_Log> _52725_errs;;
	std::tie(_52718_parts,_52725_errs) = _1c99dcacc_parts(_52140_tokens,static_cast<jule::U64>(8LLU),true);
	jule::Slice<jule::Ptr<_1e5d54961_TypeDecl>> _52817_generics = jule::Slice<jule::Ptr<_1e5d54961_TypeDecl>>::alloc(0LL,_52718_parts.len());;
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_52725_errs);
	{
		auto &expr = _52718_parts;
		auto it = expr.begin();
		_iter_begin_1b2e96058:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1e47137a5_Token>> _53021_part = *it;
			{
				if ((_53021_part.len() == 0LL)) {
					goto _iter_next_1b2e96058;
				};
				jule::I64 _53421_j = 0LL;;
				jule::Ptr<_1e5d54961_TypeDecl> _53522_generic;;
				std::tie(_53522_generic,std::ignore) = _1c99e1174_buildType((*_self_)._field_p, _53021_part,(&(_53421_j)),true);
				if ((_53421_j < _53021_part.len())) {
					_1c99d098d_pushErr(&(*_self_), _53021_part[_53421_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_52817_generics = jule::alloc_for_append(_52817_generics,1);_52817_generics.__push(_53522_generic);;
			}
			_iter_next_1b2e96058:;
			++it;
			goto _iter_begin_1b2e96058;
		}
		_iter_end_1b2e96058:;
	};
	return _52817_generics;
}



inline jule::Ptr<_1e5d5d250_FnCallExpr> _1c99d49e7_buildFnCall(_1c99d0185_exprBuilder* _self_, jule::Ptr<_1e47137a5_Token>& _54535_token, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _54555_expr, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _54576_args) {
	return jule::new_ptr<_1e5d5d250_FnCallExpr>(_1e5d5d250_FnCallExpr{._field_Token=_54535_token, ._field_Expr=_1c99d9ada_buildFromTokens(&(*_self_), _54555_expr), ._field_Args=_1c99d4288_buildArgs(&(*_self_), _54576_args), });
}



inline jule::Any _1c99d4d05_buildParenthesesRange(_1c99d0185_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _55345_tokens) {
	jule::Ptr<_1e47137a5_Token> _55417_token = _55345_tokens[0LL];;
	{
		auto &_match_expr{ _55417_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1b2e9a425:;
			{
				{
					auto &_match_expr{ _55417_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1b2e9abb7:;
						{
							jule::Ptr<_1e5d5be63_CastExpr> _55925_expr = _1c99d3ab2_tryBuildCast(&(*_self_), _55345_tokens);;
							if ((_55925_expr != nullptr)) {
								return static_cast<jule::Any>(_55925_expr);
							};
						}
					}
					_match_end_1b2e9a9ec:;
				};
			}
		}
		_match_end_1b2e9a37b:;
	};
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _56518_exprTokens;;
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _56534_args_tokens;;
	std::tie(_56518_exprTokens,_56534_args_tokens) = _1c99dc307_rangeLast(_55345_tokens);
	if ((_56518_exprTokens.len() == 0LL)) {
		return static_cast<jule::Any>(_1c99d3793_buildBetweenParentheses(&(*_self_), _56534_args_tokens));
	};
	return static_cast<jule::Any>(_1c99d49e7_buildFnCall(&(*_self_), _55417_token,_56518_exprTokens,_56534_args_tokens));
}



inline jule::Ptr<_1e5d5a6c0_UnsafeExpr> _1c99d5113_buildUnsafeExpr(_1c99d0185_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>> _57438_tokens) {
	jule::Ptr<_1e47137a5_Token> _57517_token = _57438_tokens[0LL];;
	_57438_tokens=_57438_tokens.slice(1LL);
	jule::I64 _57717_i = 0LL;;
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _57817_rangeTokens = _1c99dc060_range(_57717_i,jule::Str("{", 1),jule::Str("}", 1),_57438_tokens);;
	if ((_57817_rangeTokens.len() == 0LL)) {
		_1c99d098d_pushErr(&(*_self_), _57438_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1e5d5a6c0_UnsafeExpr>(_1e5d5a6c0_UnsafeExpr{._field_Token=_57517_token, ._field_Expr=_1c99d9ada_buildFromTokens(&(*_self_), _57817_rangeTokens)});
}



inline jule::Ptr<_1e5d66775_FnDecl> _1c99d5421_buildAnonFn(_1c99d0185_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _58935_tokens) {
	jule::Ptr<_1e5d66775_FnDecl> _59017_f = _1c99e52bb_buildFn((*_self_)._field_p, _58935_tokens,false,false);;
	if ((!(_1e5d66ac7_IsAnon(_59017_f.ptr())))) {
		_1c99d098d_pushErr(&(*_self_), _59017_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c99d0cac_pushSuggestion(&(*_self_), jule::Str("anonymous function expected, remove identifier of function", 58),jule::Slice<jule::Any>());
	};
	return _59017_f;
}



inline jule::Any _1c99d572e_buildUnsafe(_1c99d0185_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _59835_tokens) {
	{
		auto &_match_expr{ _59835_tokens[1LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1b2ea2185:;
			{
				return static_cast<jule::Any>(_1c99d5421_buildAnonFn(&(*_self_), _59835_tokens));
			}
		}
		else {
			_case_begin_1b2ea2680:;
			{
				return static_cast<jule::Any>(_1c99d5113_buildUnsafeExpr(&(*_self_), _59835_tokens));
			}
		}
		_match_end_1b2ea25c5:;
	};
}



inline void _1c99d5ae7_pushRangeLitPart(_1c99d0185_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>> _60839_part, jule::Ptr<_1e47137a5_Token> _6099_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>>& _60934_parts) {
	if ((_60839_part.len() == 0LL)) {
		_1c99d098d_pushErr(&(*_self_), _6099_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c99d0cac_pushSuggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_60934_parts = jule::alloc_for_append(_60934_parts,1);_60934_parts.__push(_60839_part);;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>> _1c99d5e27_getBraceRangeLitExprParts(_1c99d0185_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>> _61948_tokens) {
	if ((_61948_tokens.len() < 2LL)) {
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>> _62517_parts = nullptr;;
	jule::I64 _62717_last = 0LL;;
	jule::I64 _62817_rangeN = 0LL;;
	_61948_tokens=_61948_tokens.slice(1LL,(_61948_tokens.len() - 1LL));
	{
		auto &expr = _61948_tokens;
		auto it = expr.begin();
		_iter_begin_1b2ea6d05:;
		if (it != expr.end()) {
			jule::I64 _63013_i = it - expr.begin();
			jule::Ptr<_1e47137a5_Token> _63016_token = *it;
			{
				if ((_63016_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _63016_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1b2ea7ae7:;
							{
								(_62817_rangeN)++;
							}
						}
						else {
							_case_begin_1b2ea7dc2:;
							{
								(_62817_rangeN)--;
							}
						}
						_match_end_1b2ea7bb3:;
					};
				};
				if (((_62817_rangeN > 0LL) || (_63016_token.get()._field_Id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1b2ea6d05;
				};
				_1c99d5ae7_pushRangeLitPart(&(*_self_), _61948_tokens.slice(_62717_last,_63013_i),_63016_token,_62517_parts);
				_62717_last=static_cast<jule::I64>((_63013_i + 1LL));
			}
			_iter_next_1b2ea6d05:;
			++it;
			_63013_i++;
			goto _iter_begin_1b2ea6d05;
		}
		_iter_end_1b2ea6d05:;
	};
	if ((_62717_last < _61948_tokens.len())) {
		if ((_62717_last == 0LL)) {
			if ((_61948_tokens.len() > 0LL)) {
				_1c99d5ae7_pushRangeLitPart(&(*_self_), _61948_tokens.slice(_62717_last),_61948_tokens[_62717_last],_62517_parts);
			};
		} else {
			_1c99d5ae7_pushRangeLitPart(&(*_self_), _61948_tokens.slice(_62717_last),_61948_tokens[(_62717_last - 1LL)],_62517_parts);
		};
	};
	return _62517_parts;
}



inline jule::Ptr<_1e5d5dbce_FieldExprPair> _1c99d6246_buildFieldExprPair(_1c99d0185_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>> _66141_tokens) {
	if (((_66141_tokens.len() - 2LL) == 0LL)) {
		_1c99d098d_pushErr(&(*_self_), _66141_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e5d5dbce_FieldExprPair> _66617_pair = jule::new_ptr<_1e5d5dbce_FieldExprPair>(_1e5d5dbce_FieldExprPair{._field_Field=_66141_tokens[0LL], });;
	_66141_tokens=_66141_tokens.slice(2LL);
	_66617_pair.get()._field_Expr=_1c99d9ada_buildFromTokens(&(*_self_), _66141_tokens);
	return _66617_pair;
}



inline jule::Ptr<_1e5d58e82_Expr> _1c99d6554_buildStructLitExpr(_1c99d0185_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _67442_tokens) {
	jule::Ptr<_1e47137a5_Token> _67517_token = _67442_tokens[0LL];;
	if (((_67517_token.get()._field_Id == static_cast<jule::U64>(2LLU)) && (_67442_tokens.len() > 1LL))) {
		_67517_token=_67442_tokens[1LL];
		if ((_67517_token.get()._field_Id == static_cast<jule::U64>(11LLU))) {
			return jule::new_ptr<_1e5d58e82_Expr>(_1e5d58e82_Expr{._field_Token=_67517_token, ._field_End=_67442_tokens[(_67442_tokens.len() - 1LL)], ._field_Kind=static_cast<jule::Any>(_1c99d6246_buildFieldExprPair(&(*_self_), _67442_tokens))});
		};
	};
	return _1c99d9ada_buildFromTokens(&(*_self_), _67442_tokens);
}



inline jule::Slice<jule::Ptr<_1e5d58e82_Expr>> _1c99d6862_buildStructLitExprs(_1c99d0185_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _68943_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>> _69017_parts = _1c99d5e27_getBraceRangeLitExprParts(&(*_self_), _68943_tokens);;
	if ((_69017_parts.len() == 0LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1e5d58e82_Expr>> _69517_pairs = jule::Slice<jule::Ptr<_1e5d58e82_Expr>>::alloc(0LL,_69017_parts.len());;
	{
		auto &expr = _69017_parts;
		auto it = expr.begin();
		_iter_begin_1b2eb2618:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1e47137a5_Token>> _69621_part = *it;
			{
				_69517_pairs = jule::alloc_for_append(_69517_pairs,1);_69517_pairs.__push(_1c99d6554_buildStructLitExpr(&(*_self_), _69621_part));;
			}
			_iter_next_1b2eb2618:;
			++it;
			goto _iter_begin_1b2eb2618;
		}
		_iter_end_1b2eb2618:;
	};
	return _69517_pairs;
}



inline jule::Ptr<_1e5d5e42c_StructLit> _1c99d6b92_buildTypedStructLiteral(_1c99d0185_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>> _70246_tokens) {
	jule::I64 _70317_i = 0LL;;
	jule::Ptr<_1e5d54961_TypeDecl> _70418_t;;
	jule::Bool _70421_ok;;
	std::tie(_70418_t,_70421_ok) = _1c99e1174_buildType((*_self_)._field_p, _70246_tokens,(&(_70317_i)),true);
	if ((!(_70421_ok))) {
		return nullptr;
	} else if ((_70317_i >= _70246_tokens.len())) {
		_1c99d098d_pushErr(&(*_self_), _70246_tokens[_70317_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_70246_tokens=_70246_tokens.slice(_70317_i);
	jule::Ptr<_1e47137a5_Token> _71313_token = _70246_tokens[0LL];;
	if (((_71313_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_71313_token.get()._field_Kind != jule::Str("{", 1)))) {
		_1c99d098d_pushErr(&(*_self_), _71313_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1e5d5e42c_StructLit>(_1e5d5e42c_StructLit{._field_End=_70246_tokens[(_70246_tokens.len() - 1LL)], ._field_Kind=_70418_t, ._field_Exprs=_1c99d6862_buildStructLitExprs(&(*_self_), _70246_tokens)});
}



inline jule::Ptr<_1e5d58e82_Expr> _1c99d6eb1_buildBraceLitPart(_1c99d0185_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _72641_tokens) {
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _72718_l;;
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _72725_r;;
	std::tie(_72718_l,_72725_r) = _1c99ce5e6_splitDelim(_72641_tokens,static_cast<jule::U64>(11LLU));
	if ((_72718_l != nullptr)) {
		return jule::new_ptr<_1e5d58e82_Expr>(_1e5d58e82_Expr{._field_Token=_72641_tokens[0LL], ._field_End=_72641_tokens[(_72641_tokens.len() - 1LL)], ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1e5d603b7_KeyValPair>(_1e5d603b7_KeyValPair{._field_Key=_1c99d9ada_buildFromTokens(&(*_self_), _72718_l), ._field_Val=_1c99d9ada_buildFromTokens(&(*_self_), _72725_r), ._field_Colon=_72641_tokens[_72718_l.len()]}))});
	};
	return _1c99d9ada_buildFromTokens(&(*_self_), _72641_tokens);
}



inline jule::Ptr<_1e5d5e8a0_BraceLit> _1c99d72be_buildBraceLit(_1c99d0185_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _74337_tokens) {
	jule::Ptr<_1e5d5e8a0_BraceLit> _74417_lit = jule::new_ptr<_1e5d5e8a0_BraceLit>(_1e5d5e8a0_BraceLit{._field_Token=_74337_tokens[0LL], ._field_End=_74337_tokens[(_74337_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>> _74917_parts = _1c99d5e27_getBraceRangeLitExprParts(&(*_self_), _74337_tokens);;
	if ((_74917_parts == nullptr)) {
		return _74417_lit;
	};
	_74417_lit.get()._field_Exprs=jule::Slice<jule::Ptr<_1e5d58e82_Expr>>::alloc(0LL,_74917_parts.len());
	{
		auto &expr = _74917_parts;
		auto it = expr.begin();
		_iter_begin_1b2ebb699:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1e47137a5_Token>> _75521_part = *it;
			{
				_74417_lit.get()._field_Exprs = jule::alloc_for_append(_74417_lit.get()._field_Exprs,1);_74417_lit.get()._field_Exprs.__push(_1c99d6eb1_buildBraceLitPart(&(*_self_), _75521_part));;
			}
			_iter_next_1b2ebb699:;
			++it;
			goto _iter_begin_1b2ebb699;
		}
		_iter_end_1b2ebb699:;
	};
	return _74417_lit;
}



inline jule::Any _1c99d75cc_buildBraceRange(_1c99d0185_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _76239_tokens) {
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _76318_exprTokens;;
	jule::I64 _76330_rangeN;;
	std::tie(_76318_exprTokens,_76330_rangeN) = _1c99cee54_getRangeExprTokens(_76239_tokens);
	{
		
		if ((_76318_exprTokens.len() == 0LL)) {
			_case_begin_1b2ebce4d:;
			{
				return static_cast<jule::Any>(_1c99d72be_buildBraceLit(&(*_self_), _76239_tokens));
			}
		}
		else if ((_76330_rangeN > 0LL)) {
			_case_begin_1b2ebcec5:;
			{
				_1c99d098d_pushErr(&(*_self_), _76239_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1b2ebcdb5:;
	};
	jule::Ptr<_1e47137a5_Token> _77413_elseToken = _76318_exprTokens[(_76318_exprTokens.len() - 1LL)];;
	if ((_76318_exprTokens[(_76318_exprTokens.len() - 1LL)].get()._field_Id == static_cast<jule::U64>(17LLU))) {
		_76318_exprTokens=_76318_exprTokens.slice(0LL,(_76318_exprTokens.len() - 1LL));
		jule::Any _77721_d = _1c99d94be_build(&(*_self_), _76318_exprTokens);;
		if ((_77721_d == nullptr)) {
			return nullptr;
		};
		{
			auto &_match_expr{ _77721_d };
			
			if (_match_expr.type_is<jule::Ptr<_1e5d5d250_FnCallExpr>>()) {
				_case_begin_1b2ec14b2:;
				{
					_76239_tokens=_76239_tokens.slice((_76318_exprTokens.len() + 1LL));
					jule::I64 _78425_i = 0LL;;
					jule::Slice<jule::Ptr<_1e47137a5_Token>> _78525_rangeTokens = _1c99dc060_range(_78425_i,jule::Str("{", 1),jule::Str("}", 1),_76239_tokens);;
					jule::Ptr<_1e5d5d250_FnCallExpr> _78625_model = _77721_d.operator jule::Ptr<_1e5d5d250_FnCallExpr>();;
					if (_1e5d5d827_Ignored(_78625_model.ptr())) {
						_1c99d098d_pushErr(&(*_self_), _77413_elseToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_1c99d0cac_pushSuggestion(&(*_self_), jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72),jule::Slice<jule::Any>());
					};
					_78625_model.get()._field_Exception=_1c99e07c2_buildScope((*_self_)._field_p, _78525_rangeTokens,_76239_tokens[(_78425_i - 1LL)]);
					return _77721_d;
				}
			}
			else {
				_case_begin_1b2ec13d5:;
				{
					_1c99d098d_pushErr(&(*_self_), _76318_exprTokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;
				}
			}
			_match_end_1b2ec1193:;
		};
	};
	{
		auto &_match_expr{ _76318_exprTokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1b2eca2ac:;
			{
				return _1c99d572e_buildUnsafe(&(*_self_), _76239_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1b2eca323:;
			{
				return static_cast<jule::Any>(_1c99d5421_buildAnonFn(&(*_self_), _76239_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1b2eca389:;
			{
				return static_cast<jule::Any>(_1c99d6b92_buildTypedStructLiteral(&(*_self_), _76239_tokens));
			}
		}
		else {
			_case_begin_1b2ec1528:;
			{
				_1c99d098d_pushErr(&(*_self_), _76318_exprTokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1b2ebee61:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>> _1c99d78da_getEnumerableParts(_1c99d0185_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>> _81441_tokens) {
	_81441_tokens=_81441_tokens.slice(1LL,(_81441_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>> _81618_parts;;
	jule::Slice<_1e43e3a18_Log> _81625_errors;;
	std::tie(_81618_parts,_81625_errors) = _1c99dcacc_parts(_81441_tokens,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_81625_errors);
	return _81618_parts;
}



inline jule::Ptr<_1e5d6083a_SliceExpr> _1c99d7be8_buildSlice(_1c99d0185_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>> _82133_tokens) {
	jule::Ptr<_1e5d6083a_SliceExpr> _82217_slc = jule::new_ptr<_1e5d6083a_SliceExpr>(_1e5d6083a_SliceExpr{._field_Token=_82133_tokens[0LL], ._field_End=_82133_tokens[(_82133_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>> _82717_parts = _1c99d78da_getEnumerableParts(&(*_self_), _82133_tokens);;
	if ((_82717_parts.len() == 0LL)) {
		return _82217_slc;
	};
	_82217_slc.get()._field_Exprs=jule::Slice<jule::Ptr<_1e5d58e82_Expr>>::alloc(0LL,_82717_parts.len());
	{
		auto &expr = _82717_parts;
		auto it = expr.begin();
		_iter_begin_1b2ed0a76:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1e47137a5_Token>> _83321_p = *it;
			{
				if ((_83321_p.len() == 0LL)) {
					goto _iter_next_1b2ed0a76;
				};
				_82217_slc.get()._field_Exprs = jule::alloc_for_append(_82217_slc.get()._field_Exprs,1);_82217_slc.get()._field_Exprs.__push(_1c99d9ada_buildFromTokens(&(*_self_), _83321_p));;
			}
			_iter_next_1b2ed0a76:;
			++it;
			goto _iter_begin_1b2ed0a76;
		}
		_iter_end_1b2ed0a76:;
	};
	return _82217_slc;
}



inline jule::Ptr<_1e5d611cb_IndexingExpr> _1c99d8149_buildIndexing(_1c99d0185_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>> _84336_exprTokens, jule::Slice<jule::Ptr<_1e47137a5_Token>> _84413_tokens, jule::Ptr<_1e47137a5_Token> _84435_errorToken) {
	jule::Ptr<_1e47137a5_Token> _84517_end = _84413_tokens[(_84413_tokens.len() - 1LL)];;
	_84413_tokens=_84413_tokens.slice(1LL,(_84413_tokens.len() - 1LL));
	if ((_84413_tokens.len() == 0LL)) {
		_1c99d098d_pushErr(&(*_self_), _84435_errorToken,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e5d58e82_Expr> _85117_expr = _1c99d9ada_buildFromTokens(&(*_self_), _84336_exprTokens);;
	if ((_85117_expr == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1e5d58e82_Expr> _85517_index = _1c99d9ada_buildFromTokens(&(*_self_), _84413_tokens);;
	if ((_85517_index == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1e5d611cb_IndexingExpr>(_1e5d611cb_IndexingExpr{._field_Token=_84435_errorToken, ._field_End=_84517_end, ._field_Expr=_85117_expr, ._field_Index=_85517_index});
}



inline jule::Ptr<_1e5d617d6_SlicingExpr> _1c99d86dd_buildSlicing(_1c99d0185_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _86736_exprTokens, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _86763_start, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _86814_to, jule::Ptr<_1e47137a5_Token>& _86833_errorToken, jule::Ptr<_1e47137a5_Token> _86857_end) {
	jule::Ptr<_1e5d617d6_SlicingExpr> _86917_slc = jule::new_ptr<_1e5d617d6_SlicingExpr>(_1e5d617d6_SlicingExpr{._field_Token=_86833_errorToken, ._field_End=_86857_end, ._field_Expr=_1c99d9ada_buildFromTokens(&(*_self_), _86736_exprTokens), });;
	if ((_86763_start.len() > 0LL)) {
		_86917_slc.get()._field_Start=_1c99d9ada_buildFromTokens(&(*_self_), _86763_start);
	};
	if ((_86814_to.len() > 0LL)) {
		_86917_slc.get()._field_To=_1c99d9ada_buildFromTokens(&(*_self_), _86814_to);
	};
	return _86917_slc;
}



inline jule::Any _1c99d89eb_buildBracketRange(_1c99d0185_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>> _88340_tokens) {
	jule::Ptr<_1e47137a5_Token> _88417_errorToken = _88340_tokens[0LL];;
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _88518_exprTokens;;
	jule::I64 _88530_rangeN;;
	std::tie(_88518_exprTokens,_88530_rangeN) = _1c99cee54_getRangeExprTokens(_88340_tokens);
	if ((_88518_exprTokens.len() == 0LL)) {
		return static_cast<jule::Any>(_1c99d7be8_buildSlice(&(*_self_), _88340_tokens));
	} else if ((_88530_rangeN > 0LL)) {
		_1c99d098d_pushErr(&(*_self_), _88417_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_88340_tokens=_88340_tokens.slice(_88518_exprTokens.len());
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _90017_splitTokens = _88340_tokens.slice(1LL,(_88340_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _90118_start;;
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _90129_to;;
	std::tie(_90118_start,_90129_to) = _1c99ce5e6_splitDelim(_90017_splitTokens,static_cast<jule::U64>(11LLU));
	if (((_90118_start != nullptr) || (_90129_to != nullptr))) {
		return static_cast<jule::Any>(_1c99d86dd_buildSlicing(&(*_self_), _88518_exprTokens,_90118_start,_90129_to,_88417_errorToken,_88340_tokens[(_88340_tokens.len() - 1LL)]));
	};
	return static_cast<jule::Any>(_1c99d8149_buildIndexing(&(*_self_), _88518_exprTokens,_88340_tokens,_88417_errorToken));
}



inline jule::Any _1c99d8d09_buildData(_1c99d0185_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _90833_tokens) {
	{
		auto _match_expr{ _90833_tokens.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1b2edc984:;
			{
				return nullptr;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1b2edca0b:;
			{
				return _1c99d19e4_buildSingle(&(*_self_), _90833_tokens[0LL]);
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1b2edca83:;
			{
				if ((_90833_tokens[0LL].get()._field_Id == static_cast<jule::U64>(30LLU))) {
					return static_cast<jule::Any>(_1c99d1d02_buildCppLinkedIdent(&(*_self_), _90833_tokens));
				};
			}
		}
		_match_end_1b2edc720:;
	};
	jule::Ptr<_1e47137a5_Token> _92017_token = _90833_tokens[(_90833_tokens.len() - 1LL)];;
	if (((_92017_token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_92017_token.get()._field_Kind == jule::Str("...", 3)))) {
		return static_cast<jule::Any>(_1c99d3155_buildVariadic(&(*_self_), _90833_tokens));
	};
	_92017_token=_90833_tokens[0LL];
	{
		auto &_match_expr{ _92017_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1b2ee0d61:;
			{
				if (((_90833_tokens.len() > 1LL) && (_92017_token.get()._field_Kind == jule::Str("*", 1)))) {
					_92017_token=_90833_tokens[1LL];
					if (((_92017_token.get()._field_Id == static_cast<jule::U64>(1LLU)) || (_92017_token.get()._field_Id == static_cast<jule::U64>(34LLU)))) {
						return static_cast<jule::Any>(_1c99d2a39_buildType(&(*_self_), _90833_tokens));
					};
				};
				return static_cast<jule::Any>(_1c99d2110_buildUnary(&(*_self_), _90833_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1b2ee0dd8:;
			{
				if ((_90833_tokens.len() < 3LL)) {
					goto _match_end_1b2ee0c84;
				};
				if ((_90833_tokens.len() > 3LL)) {
					jule::Ptr<_1e47137a5_Token> _94221_t = _90833_tokens[(_90833_tokens.len() - 1LL)];;
					if (((_94221_t.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_94221_t.get()._field_Kind == jule::Str(")", 1)))) {
						goto _match_end_1b2ee0c84;
					};
				};
				jule::Ptr<_1e47137a5_Token> _94817_next = _90833_tokens[1LL];;
				if (((_94817_next.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_94817_next.get()._field_Kind != jule::Str("]", 1)))) {
					jule::I64 _95125_delim = 0LL;;
					_95125_delim=static_cast<jule::I64>(_1c99ee8be_mapColon(_90833_tokens,_95125_delim));
					if ((_95125_delim == -1LL)) {
						goto _match_end_1b2ee0c84;
					};
				};
				return static_cast<jule::Any>(_1c99d2a39_buildType(&(*_self_), _90833_tokens));
			}
		}
		_match_end_1b2ee0c84:;
	};
	_92017_token=_90833_tokens[(_90833_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _92017_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1b2ee13d3:;
			{
				return _1c99d2d47_buildSubIdent(&(*_self_), _90833_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1b2ee7593:;
			{
				return static_cast<jule::Any>(_1c99d2a39_buildType(&(*_self_), _90833_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1b2ee7609:;
			{
				return _1c99d3463_buildOpRight(&(*_self_), _90833_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1b2ee7670:;
			{
				{
					auto &_match_expr{ _92017_token.get()._field_Kind };
					
					if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1b2ee8eac:;
						{
							return _1c99d4d05_buildParenthesesRange(&(*_self_), _90833_tokens);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1b2ee9023:;
						{
							return _1c99d75cc_buildBraceRange(&(*_self_), _90833_tokens);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1b2ee909a:;
						{
							return _1c99d89eb_buildBracketRange(&(*_self_), _90833_tokens);
						}
					}
					_match_end_1b2ee88e6:;
				};
			}
		}
		_match_end_1b2ee137d:;
	};
	if ((_92017_token.get()._field_Id == static_cast<jule::U64>(32LLU))) {
		return static_cast<jule::Any>(_1c99d2a39_buildType(&(*_self_), _90833_tokens));
	};
	_1c99d098d_pushErr(&(*_self_), _92017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1e5d5cc11_BinopExpr> _1c99d91b1_buildBinop(_1c99d0185_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _98934_tokens, jule::I64 _98952_i) {
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _99017_leftTokens = _98934_tokens.slice(0LL,_98952_i);;
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _99117_rightTokens = _98934_tokens.slice((_98952_i + 1LL));;
	if ((_99017_leftTokens.len() == 0LL)) {
		_1c99d098d_pushErr(&(*_self_), _98934_tokens[_98952_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c99d0cac_pushSuggestion(&(*_self_), jule::Str("left operand expected for binary operator", 41),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_99117_rightTokens.len() == 0LL)) {
		_1c99d098d_pushErr(&(*_self_), _98934_tokens[_98952_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c99d0cac_pushSuggestion(&(*_self_), jule::Str("right operand expected for binary operator", 42),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1e5d5cc11_BinopExpr>(_1e5d5cc11_BinopExpr{._field_Left=_1c99d9ada_buildFromTokens(&(*_self_), _99017_leftTokens), ._field_Right=_1c99d9ada_buildFromTokens(&(*_self_), _99117_rightTokens), ._field_Op=_98934_tokens[_98952_i]});
}



inline jule::Any _1c99d94be_build(_1c99d0185_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _100929_tokens) {
	jule::I64 _101013_i = _1c99ce88d_findLowestPrecOp(_100929_tokens);;
	if ((_101013_i == -1LL)) {
		return _1c99d8d09_buildData(&(*_self_), _100929_tokens);
	};
	return static_cast<jule::Any>(_1c99d91b1_buildBinop(&(*_self_), _100929_tokens,_101013_i));
}



inline jule::Any _1c99d97cc_buildKind(_1c99d0185_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _101733_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>> _101818_parts;;
	jule::Slice<_1e43e3a18_Log> _101825_errors;;
	std::tie(_101818_parts,_101825_errors) = _1c99dcacc_parts(_101733_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_101825_errors != nullptr)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_101825_errors);
		return nullptr;
	} else if ((_101818_parts.len() > 1LL)) {
		return static_cast<jule::Any>(_1c99d10ba_buildTuple(&(*_self_), _101818_parts));
	};
	return _1c99d94be_build(&(*_self_), _101733_tokens);
}



inline jule::Ptr<_1e5d58e82_Expr> _1c99d9ada_buildFromTokens(_1c99d0185_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>> _102838_tokens) {
	if ((_102838_tokens.len() == 0LL)) {
		return nullptr;
	};
	return jule::new_ptr<_1e5d58e82_Expr>(_1e5d58e82_Expr{._field_Token=_102838_tokens[0LL], ._field_End=_102838_tokens[(_102838_tokens.len() - 1LL)], ._field_Kind=_1c99d97cc_buildKind(&(*_self_), _102838_tokens)});
}







std::ostream &operator<<(std::ostream &_Stream, _1c99d0185_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c99da4c0_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1c99de12d_stop(_1c99ddced_parser* _self_) {
	(*_self_)._field_ast=nullptr;
}



inline jule::Bool _1c99de392_stopped(_1c99ddced_parser* _self_) {
	return ((*_self_)._field_ast == nullptr);
}



inline void _1c99de75a_pushErr(_1c99ddced_parser* _self_, jule::Ptr<_1e47137a5_Token> _28726_token, jule::Str _28741_fmt, jule::Slice<jule::Any> _28754_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1c99dd25e_compilerErr(_28726_token,_28741_fmt,jule::Any(_28754_args)));;
}



inline void _1c99dea79_pushSuggestion(_1c99ddced_parser* _self_, jule::Str _29233_fmt, jule::Slice<jule::Any> _29246_args) {
	{
		_1c99dd68d_pushSuggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_29233_fmt,jule::Any(_29246_args));
	};
}



inline jule::Ptr<_1e5d58e82_Expr> _1c99ded87_buildExpr(jule::Ptr<_1c99ddced_parser> _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _29634_tokens) {
	jule::Ptr<_1c99d0185_exprBuilder> _29717_ep = jule::new_ptr<_1c99d0185_exprBuilder>(_1c99d0185_exprBuilder{._field_p=_self_});;
	jule::Ptr<_1e5d58e82_Expr> _30017_expr = _1c99d9ada_buildFromTokens(_29717_ep.ptr(), _29634_tokens);;
	return _30017_expr;
}



inline jule::Ptr<_1e5d21268_Directive> _1c99e0195_buildDirective(_1c99ddced_parser* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>> _30437_tokens) {
	if ((_30437_tokens.len() == 1LL)) {
		_1c99de75a_pushErr(&(*_self_), _30437_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_30437_tokens[1LL].get()._field_Column != (_30437_tokens[0LL].get()._field_Column + 1LL))) {
		_1c99de75a_pushErr(&(*_self_), _30437_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1e5d21268_Directive>(_1e5d21268_Directive{._field_Tag=_30437_tokens[1LL], ._field_Args=_30437_tokens.slice(2LL)});
}



inline void _1c99e041a_pushDirective(_1c99ddced_parser* _self_, jule::Ptr<_1e5d21268_Directive> _31936_d) {
	if ((_31936_d == nullptr)) {
		return;;
	};
	{
		auto &expr = (*_self_)._field_directives;
		auto it = expr.begin();
		_iter_begin_1b302d662:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d21268_Directive> _32416_pd = *it;
			{
				if ((_31936_d.get()._field_Tag.get()._field_Kind == _32416_pd.get()._field_Tag.get()._field_Kind)) {
					return;;
				};
			}
			_iter_next_1b302d662:;
			++it;
			goto _iter_begin_1b302d662;
		}
		_iter_end_1b302d662:;
	};
	(*_self_)._field_directives = jule::alloc_for_append((*_self_)._field_directives,1);(*_self_)._field_directives.__push(_31936_d);;
}



inline jule::Ptr<_1e5d64c7e_ScopeTree> _1c99e07c2_buildScope(jule::Ptr<_1c99ddced_parser> _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _33235_tokens, jule::Ptr<_1e47137a5_Token> _33257_end) {
	jule::Ptr<_1e5d64c7e_ScopeTree> _33317_s = _1c99c13c9_newScope();;
	_33317_s.get()._field_End=_33257_end;
	_1c99c2d26_scopeParser _33517_sp = _1c99c2d26_scopeParser{._field_p=_self_, };;
	_1c99cd815_build(&_33517_sp, _33235_tokens,_33317_s);
	return _33317_s;
}



inline std::tuple<jule::Ptr<_1e5d54961_TypeDecl>,jule::Bool> _1c99e0c23__buildType(jule::Ptr<_1c99ddced_parser> _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _34242_tokens, jule::I64* _34313_i, jule::Bool _34322_err) {
	_1c99eedca_typeBuilder _34417_tb = _1c99eedca_typeBuilder{._field_p=_self_, ._field_tokens=_34242_tokens, ._field_i=_34313_i, ._field_err=_34322_err};;
	jule::Ptr<_1e5d54961_TypeDecl> _35018_decl;;
	jule::Bool _35024_ok;;
	std::tie(_35018_decl,_35024_ok) = _1c9a03285_build(&_34417_tb);
	return std::make_tuple(_35018_decl,_35024_ok);
}



inline std::tuple<jule::Ptr<_1e5d54961_TypeDecl>,jule::Bool> _1c99e1174_buildType(jule::Ptr<_1c99ddced_parser> _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _35541_tokens, jule::I64* _35613_i, jule::Bool _35622_err) {
	jule::Ptr<_1e47137a5_Token> _35713_token = _35541_tokens[(*(_35613_i))];;
	jule::Ptr<_1e5d54961_TypeDecl> _35818_t;;
	jule::Bool _35821_ok;;
	std::tie(_35818_t,_35821_ok) = _1c99e0c23__buildType(_self_, _35541_tokens,_35613_i,_35622_err);
	if ((_35622_err && (!(_35821_ok)))) {
		_1c99de75a_pushErr(_self_.ptr(), _35713_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
	};
	return std::make_tuple(_35818_t,_35821_ok);
}



inline jule::Ptr<_1e5d6b0b5_TypeAliasDecl> _1c99e1482_buildTypeAliasDecl(jule::Ptr<_1c99ddced_parser> _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _36543_tokens) {
	jule::I64 _36617_i = 1LL;;
	if ((_36617_i >= _36543_tokens.len())) {
		_1c99de75a_pushErr(_self_.ptr(), _36543_tokens[(_36617_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e5d6b0b5_TypeAliasDecl> _37117_tad = jule::new_ptr<_1e5d6b0b5_TypeAliasDecl>(_1e5d6b0b5_TypeAliasDecl{._field_Token=_36543_tokens[1LL], ._field_Ident=_36543_tokens[1LL].get()._field_Kind, });;
	jule::Ptr<_1e47137a5_Token> _37517_token = _36543_tokens[_36617_i];;
	if ((_37517_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1c99de75a_pushErr(_self_.ptr(), _37517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c99dea79_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_36617_i)++;
	if ((_36617_i >= _36543_tokens.len())) {
		_1c99de75a_pushErr(_self_.ptr(), _36543_tokens[(_36617_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _37117_tad;
	};
	_37517_token=_36543_tokens[_36617_i];
	if ((_37517_token.get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_1c99de75a_pushErr(_self_.ptr(), _36543_tokens[(_36617_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c99dea79_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18),jule::Slice<jule::Any>());
		return _37117_tad;
	};
	(_36617_i)++;
	if ((_36617_i >= _36543_tokens.len())) {
		_1c99de75a_pushErr(_self_.ptr(), _36543_tokens[(_36617_i - 1LL)],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return _37117_tad;
	};
	jule::Ptr<_1e5d54961_TypeDecl> _39618_t;;
	jule::Bool _39621_ok;;
	std::tie(_39618_t,_39621_ok) = _1c99e1174_buildType(_self_, _36543_tokens,(&(_36617_i)),true);
	_37117_tad.get()._field_Kind=_39618_t;
	if ((_39621_ok && (_36617_i < _36543_tokens.len()))) {
		_1c99de75a_pushErr(_self_.ptr(), _36543_tokens[_36617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_37117_tad.get()._field_Public=_1c99ed99a_isPub(_37117_tad.get()._field_Ident);
	return _37117_tad;
}



inline void _1c99e17a1_buildVarTypeAndExpr(jule::Ptr<_1c99ddced_parser> _self_, jule::Ptr<_1e5d67754_VarDecl>& _40544_v, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _40562_tokens) {
	jule::I64 _40617_i = 0LL;;
	jule::Ptr<_1e47137a5_Token> _40717_tok = _40562_tokens[_40617_i];;
	if ((_40717_tok.get()._field_Id == static_cast<jule::U64>(11LLU))) {
		(_40617_i)++;
		if (((_40617_i >= _40562_tokens.len()) || ((_40562_tokens[_40617_i].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_40562_tokens[_40617_i].get()._field_Kind == jule::Str("=", 1))))) {
			_1c99de75a_pushErr(_self_.ptr(), _40717_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1e5d54961_TypeDecl> _41522_t;;
		jule::Bool _41525_ok;;
		std::tie(_41522_t,_41525_ok) = _1c99e1174_buildType(_self_, _40562_tokens,(&(_40617_i)),true);
		if (_41525_ok) {
			_40544_v.get()._field_Kind=_41522_t;
			if ((_40617_i >= _40562_tokens.len())) {
				return;;
			};
			_40717_tok=_40562_tokens[_40617_i];
		};
	};
	if ((_40717_tok.get()._field_Id == static_cast<jule::U64>(7LLU))) {
		if ((_40717_tok.get()._field_Kind != jule::Str("=", 1))) {
			_1c99de75a_pushErr(_self_.ptr(), _40717_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return;;
		};
		jule::Slice<jule::Ptr<_1e47137a5_Token>> _43021_exprTokens = _40562_tokens.slice((_40617_i + 1LL));;
		if ((_43021_exprTokens.len() == 0LL)) {
			_1c99de75a_pushErr(_self_.ptr(), _40717_tok,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return;;
		};
		_40544_v.get()._field_Expr=_1c99ded87_buildExpr(_self_, _43021_exprTokens);
	} else {
		_1c99de75a_pushErr(_self_.ptr(), _40717_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1c99e1ac0_buildVarCommon(jule::Ptr<_1c99ddced_parser> _self_, jule::Ptr<_1e5d67754_VarDecl>& _44139_v, jule::Slice<jule::Ptr<_1e47137a5_Token>> _44156_tokens) {
	_44139_v.get()._field_Token=_44156_tokens[0LL];
	if ((_44139_v.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1c99de75a_pushErr(_self_.ptr(), _44139_v.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c99dea79_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	_44139_v.get()._field_Ident=_44139_v.get()._field_Token.get()._field_Kind;
	_44139_v.get()._field_Public=_1c99ed99a_isPub(_44139_v.get()._field_Ident);
	_44139_v.get()._field_Kind=nullptr;
	if ((_44156_tokens.len() > 1LL)) {
		_44156_tokens=_44156_tokens.slice(1LL);
		_1c99e17a1_buildVarTypeAndExpr(_self_, _44139_v,_44156_tokens);
	};
}



inline void _1c99e1e88_buildVarBegin(_1c99ddced_parser* _self_, jule::Ptr<_1e5d67754_VarDecl>& _45737_v, jule::I64& _45755_i, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _45764_tokens) {
	jule::Ptr<_1e47137a5_Token> _45813_tok = _45764_tokens[_45755_i];;
	{
		auto &_match_expr{ _45813_tok.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1b3048935:;
			{
				_45737_v.get()._field_Statically=true;
				goto _case_begin_1b304899b;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1b304899b:;
			{
				(_45755_i)++;
				if ((_45755_i >= _45764_tokens.len())) {
					_1c99de75a_pushErr(&(*_self_), _45813_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				if ((_45764_tokens[_45755_i].get()._field_Id == static_cast<jule::U64>(35LLU))) {
					_45737_v.get()._field_Mutable=true;
					(_45755_i)++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1b304812c:;
			{
				(_45755_i)++;
				_45737_v.get()._field_Constant=true;
			}
		}
		else {
			_case_begin_1b3048061:;
			{
				_1c99de75a_pushErr(&(*_self_), _45813_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1b3047db8:;
	};
	if ((_45755_i >= _45764_tokens.len())) {
		_1c99de75a_pushErr(&(*_self_), _45813_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1e5d67754_VarDecl> _1c99e2296_buildVar(jule::Ptr<_1c99ddced_parser> _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>> _48732_tokens) {
	jule::I64 _48817_i = 0LL;;
	jule::Ptr<_1e5d67754_VarDecl> _48917_v = jule::new_ptr<_1e5d67754_VarDecl>(_1e5d67754_VarDecl{._field_Token=_48732_tokens[0LL], });;
	_1c99e1e88_buildVarBegin(_self_.ptr(), _48917_v,_48817_i,_48732_tokens);
	if ((_48817_i >= _48732_tokens.len())) {
		return nullptr;
	};
	_48732_tokens=_48732_tokens.slice(_48817_i);
	if (((_48732_tokens[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_48732_tokens[0LL].get()._field_Kind == jule::Str("&", 1)))) {
		_48917_v.get()._field_Reference=true;
		if ((_48732_tokens.len() == 1LL)) {
			return nullptr;
		};
		_48732_tokens=_48732_tokens.slice(1LL);
	};
	_1c99e1ac0_buildVarCommon(_self_, _48917_v,_48732_tokens);
	return _48917_v;
}



inline jule::Ptr<_1e5d62045_GenericDecl> _1c99e25a4_buildGeneric(jule::Ptr<_1c99ddced_parser> _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _50937_tokens) {
	jule::Ptr<_1e5d62045_GenericDecl> _51017_g = jule::new_ptr<_1e5d62045_GenericDecl>(_1e5d62045_GenericDecl{._field_Token=_50937_tokens[0LL], });;
	if ((_51017_g.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1c99de75a_pushErr(_self_.ptr(), _51017_g.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c99dea79_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_51017_g.get()._field_Ident=_51017_g.get()._field_Token.get()._field_Kind;
	if ((_50937_tokens.len() > 1LL)) {
		if ((_50937_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
			_1c99de75a_pushErr(_self_.ptr(), _50937_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		if ((_50937_tokens.len() == 2LL)) {
			_1c99de75a_pushErr(_self_.ptr(), _50937_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;
		};
		jule::Slice<jule::Ptr<_1e47137a5_Token>> _52721_constraintTokens = _50937_tokens.slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>> _52822_parts;;
		jule::Slice<_1e43e3a18_Log> _52829_errors;;
		std::tie(_52822_parts,_52829_errors) = _1c99dc6e2_partsKind(_52721_constraintTokens,jule::Str("|", 1),true);
		if ((_52829_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_52829_errors);
			return nullptr;
		};
		_51017_g.get()._field_Constraint=jule::new_ptr<_1e5d61ac2_Constraint>(_1e5d61ac2_Constraint{._field_Mask=jule::Slice<jule::Ptr<_1e5d54961_TypeDecl>>::alloc(0LL,_52822_parts.len())});
		{
			auto &expr = _52822_parts;
			auto it = expr.begin();
			_iter_begin_1b305516c:;
			if (it != expr.end()) {
				jule::Slice<jule::Ptr<_1e47137a5_Token>> _53425_part = *it;
				{
					jule::I64 _53525_i = 0LL;;
					jule::Ptr<_1e5d54961_TypeDecl> _53626_kind;;
					std::tie(_53626_kind,std::ignore) = _1c99e1174_buildType(_self_, _53425_part,(&(_53525_i)),true);
					_51017_g.get()._field_Constraint.get()._field_Mask = jule::alloc_for_append(_51017_g.get()._field_Constraint.get()._field_Mask,1);_51017_g.get()._field_Constraint.get()._field_Mask.__push(_53626_kind);;
					if ((_53525_i < _53425_part.len())) {
						_1c99de75a_pushErr(_self_.ptr(), _53425_part[_53525_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
				}
				_iter_next_1b305516c:;
				++it;
				goto _iter_begin_1b305516c;
			}
			_iter_end_1b305516c:;
		};
	};
	return _51017_g;
}



inline jule::Slice<jule::Ptr<_1e5d62045_GenericDecl>> _1c99e295b_buildGenerics(jule::Ptr<_1c99ddced_parser> _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _54638_tokens, jule::Ptr<_1e47137a5_Token>& _54657_errorToken) {
	if ((_54638_tokens.len() == 0LL)) {
		_1c99de75a_pushErr(_self_.ptr(), _54657_errorToken,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>> _55218_parts;;
	jule::Slice<_1e43e3a18_Log> _55225_errors;;
	std::tie(_55218_parts,_55225_errors) = _1c99dcacc_parts(_54638_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_55225_errors.len() > 0LL)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_55225_errors);
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1e5d62045_GenericDecl>> _55817_generics = jule::Slice<jule::Ptr<_1e5d62045_GenericDecl>>::alloc(0LL,_55218_parts.len());;
	{
		auto &expr = _55218_parts;
		auto it = expr.begin();
		_iter_begin_1b305a77c:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1e47137a5_Token>> _55921_part = *it;
			{
				_55817_generics = jule::alloc_for_append(_55817_generics,1);_55817_generics.__push(_1c99e25a4_buildGeneric(_self_, _55921_part));;
			}
			_iter_next_1b305a77c:;
			++it;
			goto _iter_begin_1b305a77c;
		}
		_iter_end_1b305a77c:;
	};
	return _55817_generics;
}



inline jule::Ptr<_1e5d65455_ParamDecl> _1c99e2c69_buildSelfParam(_1c99ddced_parser* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>> _56637_tokens) {
	if ((_56637_tokens.len() == 0LL)) {
		return nullptr;
	};
	jule::Ptr<_1e5d65455_ParamDecl> _57117_param = jule::new_ptr<_1e5d65455_ParamDecl>();;
	jule::I64 _57417_i = 0LL;;
	if ((_56637_tokens[_57417_i].get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_57117_param.get()._field_Mutable=true;
		(_57417_i)++;
		if ((_57417_i >= _56637_tokens.len())) {
			_1c99de75a_pushErr(&(*_self_), _56637_tokens[(_57417_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	if ((_56637_tokens[_57417_i].get()._field_Kind == jule::Str("&", 1))) {
		_57117_param.get()._field_Ident=jule::Str("&", 1);
		(_57417_i)++;
		if ((_57417_i >= _56637_tokens.len())) {
			_1c99de75a_pushErr(&(*_self_), _56637_tokens[(_57417_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	if ((_56637_tokens[_57417_i].get()._field_Id == static_cast<jule::U64>(27LLU))) {
		_57117_param.get()._field_Ident+=jule::Str("self", 4);
		_57117_param.get()._field_Token=_56637_tokens[_57417_i];
		(_57417_i)++;
		if ((_57417_i < _56637_tokens.len())) {
			_1c99de75a_pushErr(&(*_self_), _56637_tokens[_57417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	};
	return _57117_param;
}



inline void _1c99e3132_paramTypeBegin(_1c99ddced_parser* _self_, jule::Ptr<_1e5d65455_ParamDecl>& _60538_param, jule::I64& _60562_i, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _60571_tokens) {
	for (; (_60562_i < _60571_tokens.len()); (_60562_i)++) {
		{
			jule::Ptr<_1e47137a5_Token> _60717_token = _60571_tokens[_60562_i];;
			if ((_60717_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
				return;;
			} else if ((_60717_token.get()._field_Kind != jule::Str("...", 3))) {
				return;;
			};
			if (_60538_param.get()._field_Variadic) {
				_1c99de75a_pushErr(&(*_self_), _60717_token,jule::Str("define is already variadic", 26),jule::Slice<jule::Any>());
				goto _iter_next_1b3062278;
			};
			_60538_param.get()._field_Variadic=true;
		}
	_iter_next_1b3062278:;
	}
	_iter_end_1b3062278:;;
}



inline void _1c99e3451_buildParamType(jule::Ptr<_1c99ddced_parser> _self_, jule::Ptr<_1e5d65455_ParamDecl>& _62239_param, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _62263_tokens) {
	jule::I64 _62317_i = 0LL;;
	_1c99e3132_paramTypeBegin(_self_.ptr(), _62239_param,_62317_i,_62263_tokens);
	if ((_62317_i >= _62263_tokens.len())) {
		return;;
	};
	std::tie(_62239_param.get()._field_Kind,std::ignore) = _1c99e1174_buildType(_self_, _62263_tokens,(&(_62317_i)),true);
	if ((_62317_i < _62263_tokens.len())) {
		_1c99de75a_pushErr(_self_.ptr(), _62263_tokens[_62317_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1c99e3770_buildParamBody(jule::Ptr<_1c99ddced_parser> _self_, jule::Ptr<_1e5d65455_ParamDecl>& _63539_param, jule::Slice<jule::Ptr<_1e47137a5_Token>> _63562_tokens) {
	jule::Ptr<_1e47137a5_Token> _63617_tok = _63562_tokens[0LL];;
	_63539_param.get()._field_Ident=_63617_tok.get()._field_Kind;
	if ((_63562_tokens.len() == 1LL)) {
		return;;
	} else if ((_63562_tokens.len() < 3LL)) {
		_1c99de75a_pushErr(_self_.ptr(), _63617_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return;;
	};
	if ((_63562_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_1c99e3451_buildParamType(_self_, _63539_param,_63562_tokens);
		return;;
	};
	_63562_tokens=_63562_tokens.slice(2LL);
	_1c99e3451_buildParamType(_self_, _63539_param,_63562_tokens);
}



inline jule::Ptr<_1e5d65455_ParamDecl> _1c99e3a7d_buildParam(jule::Ptr<_1c99ddced_parser> _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>> _65334_tokens) {
	jule::Ptr<_1e5d65455_ParamDecl> _65417_param = jule::new_ptr<_1e5d65455_ParamDecl>(_1e5d65455_ParamDecl{._field_Token=_65334_tokens[0LL], });;
	if ((_65417_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_65417_param.get()._field_Mutable=true;
		if ((_65334_tokens.len() == 1LL)) {
			_1c99de75a_pushErr(_self_.ptr(), _65334_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_65334_tokens=_65334_tokens.slice(1LL);
		_65417_param.get()._field_Token=_65334_tokens[0LL];
	};
	if ((_65334_tokens.len() >= 3LL)) {
		if (((_65417_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_65417_param.get()._field_Token.get()._field_Kind == jule::Str("&", 1)))) {
			if ((_65334_tokens.len() == 1LL)) {
				_1c99de75a_pushErr(_self_.ptr(), _65334_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			};
			if (((_65334_tokens[1LL].get()._field_Id == static_cast<jule::U64>(2LLU)) && (_65334_tokens[2LL].get()._field_Id == static_cast<jule::U64>(11LLU)))) {
				_65417_param.get()._field_Reference=true;
				_65334_tokens=_65334_tokens.slice(1LL);
				_65417_param.get()._field_Token=_65334_tokens[0LL];
			};
		};
	};
	if ((_65417_param.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_65417_param.get()._field_Ident=jule::Str("<anonymous>", 11);
		_1c99e3451_buildParamType(_self_, _65417_param,_65334_tokens);
	} else {
		_1c99e3770_buildParamBody(_self_, _65417_param,_65334_tokens);
	};
	return _65417_param;
}



inline void _1c99e3d03_checkParams(_1c99ddced_parser* _self_, jule::Slice<jule::Ptr<_1e5d65455_ParamDecl>>& _69635_params) {
	{
		auto &expr = _69635_params;
		auto it = expr.begin();
		_iter_begin_1b307172c:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d65455_ParamDecl> _69721_param = *it;
			{
				if ((_1e5d657b8_IsSelf(_69721_param.ptr()) || (_69721_param.get()._field_Kind != nullptr))) {
					goto _iter_next_1b307172c;
				};
				if ((_69721_param.get()._field_Token == nullptr)) {
					_1c99de75a_pushErr(&(*_self_), _69721_param.get()._field_Token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
				} else {
					_69721_param.get()._field_Kind=jule::new_ptr<_1e5d54961_TypeDecl>(_1e5d54961_TypeDecl{._field_Token=_69721_param.get()._field_Token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1e5d55027_IdentTypeDecl>(_1e5d55027_IdentTypeDecl{._field_Token=_69721_param.get()._field_Token, ._field_Ident=_69721_param.get()._field_Token.get()._field_Kind, }))});
					_69721_param.get()._field_Ident=jule::Str("<anonymous>", 11);
				};
			}
			_iter_next_1b307172c:;
			++it;
			goto _iter_begin_1b307172c;
		}
		_iter_end_1b307172c:;
	};
}



inline jule::Slice<jule::Ptr<_1e5d65455_ParamDecl>> _1c99e41aa_buildParams(jule::Ptr<_1c99ddced_parser> _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _71636_tokens, jule::Bool _71654_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>> _71718_parts;;
	jule::Slice<_1e43e3a18_Log> _71725_errs;;
	std::tie(_71718_parts,_71725_errs) = _1c99dcacc_parts(_71636_tokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_71725_errs);
	if ((_71718_parts.len() == 0LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1e5d65455_ParamDecl>> _72317_params = nullptr;;
	if ((_71654_method && (_71718_parts.len() > 0LL))) {
		jule::Ptr<_1e5d65455_ParamDecl> _72521_param = _1c99e2c69_buildSelfParam(_self_.ptr(), _71718_parts[0LL]);;
		if (((_72521_param != nullptr) && _1e5d657b8_IsSelf(_72521_param.ptr()))) {
			_72317_params = jule::alloc_for_append(_72317_params,1);_72317_params.__push(_72521_param);;
			_71718_parts=_71718_parts.slice(1LL);
		};
	};
	{
		auto &expr = _71718_parts;
		auto it = expr.begin();
		_iter_begin_1b3076028:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1e47137a5_Token>> _73221_part = *it;
			{
				jule::Ptr<_1e5d65455_ParamDecl> _73321_param = _1c99e3a7d_buildParam(_self_, _73221_part);;
				if ((_73321_param != nullptr)) {
					_72317_params = jule::alloc_for_append(_72317_params,1);_72317_params.__push(_73321_param);;
				};
			}
			_iter_next_1b3076028:;
			++it;
			goto _iter_begin_1b3076028;
		}
		_iter_end_1b3076028:;
	};
	_1c99e3d03_checkParams(_self_.ptr(), _72317_params);
	return _72317_params;
}



inline std::tuple<jule::Ptr<_1e5d57a74_RetTypeDecl>,jule::Bool> _1c99e4562_buildMultiRetType(jule::Ptr<_1c99ddced_parser> _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _74342_tokens, jule::I64& _74365_i) {
	jule::Ptr<_1e5d57a74_RetTypeDecl> _74375_t = jule::Ptr<_1e5d57a74_RetTypeDecl>();
	jule::Bool _74392_ok = jule::Bool();
	_74375_t=jule::new_ptr<_1e5d57a74_RetTypeDecl>();
	(_74365_i)++;
	if ((_74365_i >= _74342_tokens.len())) {
		(_74365_i)--;
		std::tie(_74375_t.get()._field_Kind,_74392_ok) = _1c99e1174_buildType(_self_, _74342_tokens,(&(_74365_i)),false);
		return std::make_tuple(_74375_t,_74392_ok);
	};
	(_74365_i)--;
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _75317_rangeTokens = _1c99dc060_range(_74365_i,jule::Str("(", 1),jule::Str(")", 1),_74342_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>> _75518_parts;;
	jule::Slice<_1e43e3a18_Log> _75525_errs;;
	std::tie(_75518_parts,_75525_errs) = _1c99dcacc_parts(_75317_rangeTokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_75525_errs);
	if ((_75518_parts.len() == 0LL)) {
		return std::make_tuple(_74375_t,_74392_ok);
	};
	jule::Slice<jule::Ptr<_1e5d54961_TypeDecl>> _76117_types = jule::Slice<jule::Ptr<_1e5d54961_TypeDecl>>::alloc(0LL,_75518_parts.len());;
	_74375_t.get()._field_Idents=jule::Slice<jule::Ptr<_1e47137a5_Token>>::alloc(0LL,_75518_parts.len());
	{
		auto &expr = _75518_parts;
		auto it = expr.begin();
		_iter_begin_1b307c6a0:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1e47137a5_Token>> _76321_part = *it;
			{
				jule::Ptr<_1e47137a5_Token> _76421_token = _76321_part[0LL];;
				jule::I64 _76521_offset = 0LL;;
				if ((_76321_part.len() > 1LL)) {
					_76421_token=_76321_part[1LL];
					if ((_76421_token.get()._field_Id == static_cast<jule::U64>(11LLU))) {
						_76521_offset=2LL;
						if ((_76321_part.len() < 3LL)) {
							_1c99de75a_pushErr(_self_.ptr(), _76421_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
							goto _iter_next_1b307c6a0;
						};
					};
				};
				_76421_token=_76321_part[0LL];
				if ((_76521_offset != 2LL)) {
					jule::Ptr<_1e47137a5_Token> _78125_newToken = jule::new_ptr<_1e47137a5_Token>((*(_76421_token)));;
					_78125_newToken.get()._field_Kind=jule::Str("<anonymous>", 11);
					_74375_t.get()._field_Idents = jule::alloc_for_append(_74375_t.get()._field_Idents,1);_74375_t.get()._field_Idents.__push(_78125_newToken);;
				} else {
					_74375_t.get()._field_Idents = jule::alloc_for_append(_74375_t.get()._field_Idents,1);_74375_t.get()._field_Idents.__push(_76421_token);;
				};
				jule::Ptr<_1e5d54961_TypeDecl> _78822_tk;;
				std::tie(_78822_tk,std::ignore) = _1c99e1174_buildType(_self_, _76321_part,(&(_76521_offset)),true);
				if ((_76521_offset < _76321_part.len())) {
					_1c99de75a_pushErr(_self_.ptr(), _76321_part[_76521_offset],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_76117_types = jule::alloc_for_append(_76117_types,1);_76117_types.__push(_78822_tk);;
			}
			_iter_next_1b307c6a0:;
			++it;
			goto _iter_begin_1b307c6a0;
		}
		_iter_end_1b307c6a0:;
	};
	if ((_76117_types.len() > 1LL)) {
		_74375_t.get()._field_Kind=jule::new_ptr<_1e5d54961_TypeDecl>(_1e5d54961_TypeDecl{._field_Token=_74342_tokens[0LL], ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1e5d56501_TupleTypeDecl>(_1e5d56501_TupleTypeDecl{._field_Types=_76117_types}))});
	} else {
		_74375_t.get()._field_Kind=_76117_types[0LL];
	};
	_74392_ok=true;
	return std::make_tuple(_74375_t,_74392_ok);
}



inline std::tuple<jule::Ptr<_1e5d57a74_RetTypeDecl>,jule::Bool> _1c99e4919_buildRetType(jule::Ptr<_1c99ddced_parser> _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _81137_tokens, jule::I64& _81160_i) {
	jule::Ptr<_1e5d57a74_RetTypeDecl> _81170_t = jule::Ptr<_1e5d57a74_RetTypeDecl>();
	jule::Bool _81187_ok = jule::Bool();
	_81170_t=jule::new_ptr<_1e5d57a74_RetTypeDecl>();
	if ((_81160_i >= _81137_tokens.len())) {
		return std::make_tuple(_81170_t,_81187_ok);
	};
	jule::Ptr<_1e47137a5_Token> _81717_token = _81137_tokens[_81160_i];;
	{
		auto &_match_expr{ _81717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1b30861ae:;
			{
				if ((_81717_token.get()._field_Kind == jule::Str("{", 1))) {
					return std::make_tuple(_81170_t,_81187_ok);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1b3086225:;
			{
				if ((_81717_token.get()._field_Kind == jule::Str("=", 1))) {
					return std::make_tuple(_81170_t,_81187_ok);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1b308628b:;
			{
				if (((_81160_i + 1LL) >= _81137_tokens.len())) {
					_1c99de75a_pushErr(_self_.ptr(), _81717_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					return std::make_tuple(_81170_t,_81187_ok);
				};
				(_81160_i)++;
				_81717_token=_81137_tokens[_81160_i];
				if ((_81717_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _81717_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1)) {
							_case_begin_1b3088cc7:;
							{
								std::tie(_81170_t,_81187_ok) = _1c99e4562_buildMultiRetType(_self_, _81137_tokens,_81160_i);
								return std::make_tuple(_81170_t,_81187_ok);
							}
						}
						else if (_match_expr == jule::Str("{", 1)) {
							_case_begin_1b3088d3d:;
							{
								_1c99de75a_pushErr(_self_.ptr(), _81717_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
								return std::make_tuple(_81170_t,_81187_ok);
							}
						}
						_match_end_1b3088c1c:;
					};
				};
				std::tie(_81170_t.get()._field_Kind,_81187_ok) = _1c99e1174_buildType(_self_, _81137_tokens,(&(_81160_i)),true);
				return std::make_tuple(_81170_t,_81187_ok);
			}
		}
		_match_end_1b3086104:;
	};
	(_81160_i)++;
	_1c99de75a_pushErr(_self_.ptr(), _81717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return std::make_tuple(_81170_t,_81187_ok);
}



inline jule::Ptr<_1e5d66775_FnDecl> _1c99e4d6a_buildFnPrototype(jule::Ptr<_1c99ddced_parser> _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _85641_tokens, jule::I64& _85664_i, jule::Bool _85672_method) {
	jule::Ptr<_1e5d66775_FnDecl> _85717_f = jule::new_ptr<_1e5d66775_FnDecl>(_1e5d66775_FnDecl{._field_Token=_85641_tokens[_85664_i], });;
	if ((_85717_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(37LLU))) {
		_85717_f.get()._field_Statically=true;
		(_85664_i)++;
		if ((_85664_i >= _85641_tokens.len())) {
			_1c99de75a_pushErr(_self_.ptr(), _85717_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_85717_f.get()._field_Token=_85641_tokens[_85664_i];
	};
	if ((_85717_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		_85717_f.get()._field_Unsafety=true;
		(_85664_i)++;
		if ((_85664_i >= _85641_tokens.len())) {
			_1c99de75a_pushErr(_self_.ptr(), _85717_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_85717_f.get()._field_Token=_85641_tokens[_85664_i];
	};
	(_85664_i)++;
	if ((_85664_i >= _85641_tokens.len())) {
		_1c99de75a_pushErr(_self_.ptr(), _85717_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e47137a5_Token> _89013_tok = _85641_tokens[_85664_i];;
	if ((_89013_tok.get()._field_Id == static_cast<jule::U64>(2LLU))) {
		(_85664_i)++;
		if ((_85664_i >= _85641_tokens.len())) {
			_1c99de75a_pushErr(_self_.ptr(), _85717_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_85717_f.get()._field_Ident=_89013_tok.get()._field_Kind;
	} else {
		_85717_f.get()._field_Ident=jule::Str("<anonymous>", 11);
	};
	jule::Ptr<_1e47137a5_Token> _90213_errorToken = _85641_tokens[_85664_i];;
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _90317_genericsTokens = _1c99dc060_range(_85664_i,jule::Str("[", 1),jule::Str("]", 1),_85641_tokens);;
	if ((_90317_genericsTokens != nullptr)) {
		_85717_f.get()._field_Generics=_1c99e295b_buildGenerics(_self_, _90317_genericsTokens,_90213_errorToken);
	};
	if ((_85641_tokens[_85664_i].get()._field_Kind != jule::Str("(", 1))) {
		_1c99de75a_pushErr(_self_.ptr(), _85641_tokens[_85664_i],jule::Str("missing function parentheses", 28),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _91317_paramsToks = _1c99dc060_range(_85664_i,jule::Str("(", 1),jule::Str(")", 1),_85641_tokens);;
	if ((_91317_paramsToks.len() > 0LL)) {
		_85717_f.get()._field_Params=_1c99e41aa_buildParams(_self_, _91317_paramsToks,_85672_method);
	};
	if ((_85664_i < _85641_tokens.len())) {
		jule::Ptr<_1e47137a5_Token> _91917_token = _85641_tokens[_85664_i];;
		if (((_91917_token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_91917_token.get()._field_Kind == jule::Str("!", 1)))) {
			_85717_f.get()._field_Exceptional=true;
			(_85664_i)++;
		};
	};
	_85717_f.get()._field_Public=_1c99ed99a_isPub(_85717_f.get()._field_Ident);
	std::tie(_85717_f.get()._field_Result,std::ignore) = _1c99e4919_buildRetType(_self_, _85641_tokens,_85664_i);
	return _85717_f;
}



inline jule::Ptr<_1e5d66775_FnDecl> _1c99e52bb_buildFn(jule::Ptr<_1c99ddced_parser> _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _93332_tokens, jule::Bool _93350_method, jule::Bool _93364_prototype) {
	jule::I64 _93417_i = 0LL;;
	jule::Ptr<_1e5d66775_FnDecl> _93517_f = _1c99e4d6a_buildFnPrototype(_self_, _93332_tokens,_93417_i,_93350_method);;
	if (_93364_prototype) {
		if ((_93417_i < _93332_tokens.len())) {
			_1c99de75a_pushErr(_self_.ptr(), _93332_tokens[(_93417_i + 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		return _93517_f;
	} else if ((_93517_f == nullptr)) {
		return _93517_f;
	};
	if ((_93417_i >= _93332_tokens.len())) {
		_1c99de12d_stop(_self_.ptr());
		_1c99de75a_pushErr(_self_.ptr(), _93517_f.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1c99dea79_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _95117_blockTokens = _1c99dc060_range(_93417_i,jule::Str("{", 1),jule::Str("}", 1),_93332_tokens);;
	if ((_95117_blockTokens != nullptr)) {
		_93517_f.get()._field_Scope=_1c99e07c2_buildScope(_self_, _95117_blockTokens,_93332_tokens[(_93417_i - 1LL)]);
		_93517_f.get()._field_Scope.get()._field_Unsafety=_93517_f.get()._field_Unsafety;
		if ((_93417_i < _93332_tokens.len())) {
			_1c99de75a_pushErr(_self_.ptr(), _93332_tokens[_93417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	} else {
		_1c99de12d_stop(_self_.ptr());
		_1c99de75a_pushErr(_self_.ptr(), _93517_f.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1c99dea79_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _93517_f;
}



inline jule::Slice<jule::Ptr<_1e47137a5_Token>> _1c99e55c9_getUseDeclSelectors(_1c99ddced_parser* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>> _96742_tokens) {
	jule::I64 _96817_i = 0LL;;
	_96742_tokens=_1c99dc060_range(_96817_i,jule::Str("{", 1),jule::Str("}", 1),_96742_tokens);
	jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>> _97018_parts;;
	jule::Slice<_1e43e3a18_Log> _97025_errs;;
	std::tie(_97018_parts,_97025_errs) = _1c99dcacc_parts(_96742_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_97025_errs.len() > 0LL)) {
		(*_self_)._field_errors=jule::append((*_self_)._field_errors,_97025_errs);
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _97617_selectors = jule::Slice<jule::Ptr<_1e47137a5_Token>>::alloc(0LL,_97018_parts.len());;
	{
		auto &expr = _97018_parts;
		auto it = expr.begin();
		_iter_begin_1b30a056e:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1e47137a5_Token>> _97721_part = *it;
			{
				if ((_97721_part.len() > 1LL)) {
					_1c99de75a_pushErr(&(*_self_), _97721_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				jule::Ptr<_1e47137a5_Token> _98121_tok = _97721_part[0LL];;
				if (((_98121_tok.get()._field_Id != static_cast<jule::U64>(2LLU)) && (_98121_tok.get()._field_Id != static_cast<jule::U64>(27LLU)))) {
					_1c99de75a_pushErr(&(*_self_), _98121_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_1c99dea79_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					goto _iter_next_1b30a056e;
				};
				_97617_selectors = jule::alloc_for_append(_97617_selectors,1);_97617_selectors.__push(_98121_tok);;
			}
			_iter_next_1b30a056e:;
			++it;
			goto _iter_begin_1b30a056e;
		}
		_iter_end_1b30a056e:;
	};
	return _97617_selectors;
}



inline void _1c99e58e8_buildCppUseDecl(_1c99ddced_parser* _self_, jule::Ptr<_1e5d6c4a1_UseDecl>& _99239_decl, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _99256_tokens) {
	if ((_99256_tokens.len() > 1LL)) {
		_1c99de75a_pushErr(&(*_self_), _99256_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e47137a5_Token> _99613_token = _99256_tokens[0LL];;
	if (((_99613_token.get()._field_Id != static_cast<jule::U64>(6LLU)) || ((_99613_token.get()._field_Kind[0LL] != '`') && (_99613_token.get()._field_Kind[0LL] != '\"')))) {
		_1c99de75a_pushErr(&(*_self_), _99613_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return;;
	};
	_99239_decl.get()._field_CppLinked=true;
	_99239_decl.get()._field_LinkPath=_99613_token.get()._field_Kind.slice(1LL,(_99613_token.get()._field_Kind.len() - 1LL));
}



inline void _1c99e5c17_buildStdUseDecl(_1c99ddced_parser* _self_, jule::Ptr<_1e5d6c4a1_UseDecl>& _100539_decl, jule::Slice<jule::Ptr<_1e47137a5_Token>> _100559_tokens) {
	_100539_decl.get()._field_Std=true;
	jule::Ptr<_1e47137a5_Token> _100817_token = _100559_tokens[0LL];;
	if ((_100559_tokens.len() < 3LL)) {
		_1c99de75a_pushErr(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_100559_tokens=_100559_tokens.slice(2LL);
	_100817_token=_100559_tokens[(_100559_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _100817_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1b30a9336:;
			{
				_1c99de75a_pushErr(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1b30a93ad:;
			{
				if ((_100817_token.get()._field_Kind != jule::Str("}", 1))) {
					_1c99de75a_pushErr(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_1e47137a5_Token>> _102521_selectors = nullptr;;
				std::tie(_100559_tokens,_102521_selectors) = _1c99dc307_rangeLast(_100559_tokens);
				_100539_decl.get()._field_Selected=_1c99e55c9_getUseDeclSelectors(&(*_self_), _102521_selectors);
				if ((_100559_tokens.len() == 0LL)) {
					_1c99de75a_pushErr(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100817_token=_100559_tokens[(_100559_tokens.len() - 1LL)];
				if ((_100817_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1c99de75a_pushErr(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100559_tokens=_100559_tokens.slice(0LL,(_100559_tokens.len() - 1LL));
				if ((_100559_tokens.len() == 0LL)) {
					_1c99de75a_pushErr(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1b30a9435:;
			{
				if ((_100817_token.get()._field_Kind != jule::Str("*", 1))) {
					_1c99de75a_pushErr(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100559_tokens=_100559_tokens.slice(0LL,(_100559_tokens.len() - 1LL));
				if ((_100559_tokens.len() == 0LL)) {
					_1c99de75a_pushErr(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100817_token=_100559_tokens[(_100559_tokens.len() - 1LL)];
				if ((_100817_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1c99de75a_pushErr(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100559_tokens=_100559_tokens.slice(0LL,(_100559_tokens.len() - 1LL));
				if ((_100559_tokens.len() == 0LL)) {
					_1c99de75a_pushErr(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100539_decl.get()._field_Full=true;
			}
		}
		_match_end_1b30a92ae:;
	};
	_100539_decl.get()._field_LinkPath=(jule::Str("std::", 5) + _1c99dd935_tokstoa(_100559_tokens));
}



inline void _1c99e6036_buildIdentUseDecl(_1c99ddced_parser* _self_, jule::Ptr<_1e5d6c4a1_UseDecl>& _106741_decl, jule::Slice<jule::Ptr<_1e47137a5_Token>> _106761_tokens) {
	_106741_decl.get()._field_Std=false;
	jule::Ptr<_1e47137a5_Token> _107017_token = _106761_tokens[(_106761_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _107017_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1b30b43b8:;
			{
				_1c99de75a_pushErr(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1b30b4594:;
			{
				if ((_107017_token.get()._field_Kind != jule::Str("}", 1))) {
					_1c99de75a_pushErr(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_1e47137a5_Token>> _108121_selectors = nullptr;;
				std::tie(_106761_tokens,_108121_selectors) = _1c99dc307_rangeLast(_106761_tokens);
				_106741_decl.get()._field_Selected=_1c99e55c9_getUseDeclSelectors(&(*_self_), _108121_selectors);
				if ((_106761_tokens.len() == 0LL)) {
					_1c99de75a_pushErr(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_107017_token=_106761_tokens[(_106761_tokens.len() - 1LL)];
				if ((_107017_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1c99de75a_pushErr(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106761_tokens=_106761_tokens.slice(0LL,(_106761_tokens.len() - 1LL));
				if ((_106761_tokens.len() == 0LL)) {
					_1c99de75a_pushErr(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1b30b460a:;
			{
				if ((_107017_token.get()._field_Kind != jule::Str("*", 1))) {
					_1c99de75a_pushErr(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106761_tokens=_106761_tokens.slice(0LL,(_106761_tokens.len() - 1LL));
				if ((_106761_tokens.len() == 0LL)) {
					_1c99de75a_pushErr(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_107017_token=_106761_tokens[(_106761_tokens.len() - 1LL)];
				if ((_107017_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1c99de75a_pushErr(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106761_tokens=_106761_tokens.slice(0LL,(_106761_tokens.len() - 1LL));
				if ((_106761_tokens.len() == 0LL)) {
					_1c99de75a_pushErr(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106741_decl.get()._field_Full=true;
			}
		}
		_match_end_1b30b4363:;
	};
	_106741_decl.get()._field_LinkPath=_1c99dd935_tokstoa(_106761_tokens);
}



inline void _1c99e6355_parseUseDecl(_1c99ddced_parser* _self_, jule::Ptr<_1e5d6c4a1_UseDecl>& _113036_decl, jule::Slice<jule::Ptr<_1e47137a5_Token>> _113056_tokens) {
	if (_113036_decl.get()._field_CppLinked) {
		_1c99e58e8_buildCppUseDecl(&(*_self_), _113036_decl,_113056_tokens);
		return;;
	};
	jule::Ptr<_1e47137a5_Token> _113617_token = _113056_tokens[0LL];;
	if ((_113617_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1c99de75a_pushErr(&(*_self_), _113617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c99dea79_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	if (((_113056_tokens.len() > 2LL) && (_113056_tokens[1LL].get()._field_Id == static_cast<jule::U64>(12LLU)))) {
		_113036_decl.get()._field_Alias=_113617_token.get()._field_Kind;
		if ((_113056_tokens[2LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_1c99de75a_pushErr(&(*_self_), _113617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			_1c99dea79_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			return;;
		};
		_113056_tokens=_113056_tokens.slice(2LL);
		_113617_token=_113056_tokens[0LL];
	};
	;
	{
		
		if ((_113617_token.get()._field_Kind == jule::Str("std", 3))) {
			_case_begin_1b30c0c10:;
			{
				_1c99e5c17_buildStdUseDecl(&(*_self_), _113036_decl,_113056_tokens);
			}
		}
		else {
			_case_begin_1b30c2ccd:;
			{
				_1c99e6036_buildIdentUseDecl(&(*_self_), _113036_decl,_113056_tokens);
			}
		}
		_match_end_1b30c2c67:;
	};
}



inline jule::Ptr<_1e5d6c4a1_UseDecl> _1c99e670c_buildUseDecl(_1c99ddced_parser* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>> _116435_tokens, jule::Bool _116453_cpp_linked) {
	jule::Ptr<_1e5d6c4a1_UseDecl> _116517_decl = jule::new_ptr<_1e5d6c4a1_UseDecl>(_1e5d6c4a1_UseDecl{._field_Token=_116435_tokens[0LL], ._field_CppLinked=_116453_cpp_linked, });;
	if ((_116435_tokens.len() < 2LL)) {
		_1c99de75a_pushErr(&(*_self_), _116517_decl.get()._field_Token,jule::Str("missing path of use statement", 29),jule::Slice<jule::Any>());
		return nullptr;
	};
	_116435_tokens=_116435_tokens.slice(1LL);
	_1c99e6355_parseUseDecl(&(*_self_), _116517_decl,_116435_tokens);
	return _116517_decl;
}



inline jule::Ptr<_1e5d54961_TypeDecl> _1c99e6ab4_buildTypeEnumItemKind(jule::Ptr<_1c99ddced_parser> _self_, jule::I64& _117846_i, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _117859_tokens) {
	jule::I64 _117917_braceN = 0LL;;
	jule::I64 _118013_exprStart = _117846_i;;
	for (; (_117846_i < _117859_tokens.len()); (_117846_i)++) {
		{
			jule::Ptr<_1e47137a5_Token> _118217_t = _117859_tokens[_117846_i];;
			if ((_118217_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _118217_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1b30c72ee:;
						{
							(_117917_braceN)++;
							goto _iter_next_1b30c6b39;
						}
					}
					else {
						_case_begin_1b30c7bb2:;
						{
							(_117917_braceN)--;
						}
					}
					_match_end_1b30c79a3:;
				};
			};
			if ((_117917_braceN > 0LL)) {
				goto _iter_next_1b30c6b39;
			};
			if (((_118217_t.get()._field_Id == static_cast<jule::U64>(8LLU)) || ((_117846_i + 1LL) >= _117859_tokens.len()))) {
				jule::Slice<jule::Ptr<_1e47137a5_Token>> _119825_kindTokens = nullptr;;
				if ((_118217_t.get()._field_Id == static_cast<jule::U64>(8LLU))) {
					_119825_kindTokens=_117859_tokens.slice(_118013_exprStart,_117846_i);
				} else {
					_119825_kindTokens=_117859_tokens.slice(_118013_exprStart);
				};
				jule::I64 _120425_j = 0LL;;
				jule::Ptr<_1e5d54961_TypeDecl> _120526_kind;;
				std::tie(_120526_kind,std::ignore) = _1c99e1174_buildType(_self_, _119825_kindTokens,(&(_120425_j)),true);
				if ((_120425_j < _119825_kindTokens.len())) {
					_1c99de75a_pushErr(_self_.ptr(), _119825_kindTokens[_120425_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				return _120526_kind;
			};
		}
	_iter_next_1b30c6b39:;
	}
	_iter_end_1b30c6b39:;;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_1e5d6de53_TypeEnumItemDecl>> _1c99e6dc2_buildTypeEnumItems(jule::Ptr<_1c99ddced_parser> _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _121543_tokens) {
	jule::Slice<jule::Ptr<_1e5d6de53_TypeEnumItemDecl>> _121617_items = jule::Slice<jule::Ptr<_1e5d6de53_TypeEnumItemDecl>>::alloc(0LL,1LL);;
	jule::I64 _121717_i = 0LL;;
	for (; (_121717_i < _121543_tokens.len()); (_121717_i)++) {
		{
			jule::Ptr<_1e47137a5_Token> _121921_t = _121543_tokens[_121717_i];;
			jule::Ptr<_1e5d6de53_TypeEnumItemDecl> _122021_item = jule::new_ptr<_1e5d6de53_TypeEnumItemDecl>();;
			_122021_item.get()._field_Token=_121921_t;
			if (((_122021_item.get()._field_Token.get()._field_Id == static_cast<jule::U64>(2LLU)) && ((_121543_tokens.len() - _121717_i) > 2LL))) {
				_122021_item.get()._field_Ident=_122021_item.get()._field_Token.get()._field_Kind;
				_121921_t=_121543_tokens[(_121717_i + 1LL)];
				if ((_121921_t.get()._field_Id == static_cast<jule::U64>(11LLU))) {
					_121717_i+=2LL;
					if (((_121717_i >= _121543_tokens.len()) || (_121543_tokens[_121717_i].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
						_1c99de75a_pushErr(_self_.ptr(), _121921_t,jule::Str("type missing", 12),jule::Slice<jule::Any>());
						goto _iter_next_1b30ccb0c;
					};
				};
			};
			_122021_item.get()._field_Kind=_1c99e6ab4_buildTypeEnumItemKind(_self_, _121717_i,_121543_tokens);
			_121617_items = jule::alloc_for_append(_121617_items,1);_121617_items.__push(_122021_item);;
		}
	_iter_next_1b30ccb0c:;
	}
	_iter_end_1b30ccb0c:;;
	return _121617_items;
}



inline jule::Ptr<_1e5d6e151_TypeEnumDecl> _1c99e71d0_buildTypeEnumDecl(jule::Ptr<_1c99ddced_parser> _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _123942_tokens) {
	jule::I64 _124017_i = 1LL;;
	jule::Ptr<_1e5d6e151_TypeEnumDecl> _124117_e = jule::new_ptr<_1e5d6e151_TypeEnumDecl>(_1e5d6e151_TypeEnumDecl{._field_Token=_123942_tokens[_124017_i], });;
	if ((_124117_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1c99de75a_pushErr(_self_.ptr(), _124117_e.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c99dea79_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_124117_e.get()._field_Ident=_124117_e.get()._field_Token.get()._field_Kind;
	_124017_i+=3LL;
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _125117_itemTokens = _1c99dc060_range(_124017_i,jule::Str("{", 1),jule::Str("}", 1),_123942_tokens);;
	if ((_125117_itemTokens == nullptr)) {
		_1c99de12d_stop(_self_.ptr());
		_1c99de75a_pushErr(_self_.ptr(), _124117_e.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1c99dea79_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _124117_e;
	} else if ((_124017_i < _123942_tokens.len())) {
		_1c99de75a_pushErr(_self_.ptr(), _123942_tokens[_124017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_124117_e.get()._field_Public=_1c99ed99a_isPub(_124117_e.get()._field_Ident);
	_124117_e.get()._field_End=_123942_tokens[(_124017_i - 1LL)];
	_124117_e.get()._field_Items=_1c99e6dc2_buildTypeEnumItems(_self_, _125117_itemTokens);
	return _124117_e;
}



inline jule::Ptr<_1e5d58e82_Expr> _1c99e7587_buildEnumItemExpr(jule::Ptr<_1c99ddced_parser> _self_, jule::I64& _126642_i, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _126655_tokens) {
	jule::I64 _126717_braceN = 0LL;;
	jule::I64 _126813_exprStart = _126642_i;;
	for (; (_126642_i < _126655_tokens.len()); (_126642_i)++) {
		{
			jule::Ptr<_1e47137a5_Token> _127017_t = _126655_tokens[_126642_i];;
			if ((_127017_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _127017_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1b30d8871:;
						{
							(_126717_braceN)++;
							goto _iter_next_1b30d81ab;
						}
					}
					else {
						_case_begin_1b30d9234:;
						{
							(_126717_braceN)--;
						}
					}
					_match_end_1b30d9025:;
				};
			};
			if ((_126717_braceN > 0LL)) {
				goto _iter_next_1b30d81ab;
			};
			if (((_127017_t.get()._field_Id == static_cast<jule::U64>(8LLU)) || ((_126642_i + 1LL) >= _126655_tokens.len()))) {
				jule::Slice<jule::Ptr<_1e47137a5_Token>> _128625_exprTokens = nullptr;;
				if ((_127017_t.get()._field_Id == static_cast<jule::U64>(8LLU))) {
					_128625_exprTokens=_126655_tokens.slice(_126813_exprStart,_126642_i);
				} else {
					_128625_exprTokens=_126655_tokens.slice(_126813_exprStart);
				};
				return _1c99ded87_buildExpr(_self_, _128625_exprTokens);
			};
		}
	_iter_next_1b30d81ab:;
	}
	_iter_end_1b30d81ab:;;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_1e5d6c924_EnumItemDecl>> _1c99e7895_buildEnumItems(jule::Ptr<_1c99ddced_parser> _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _129839_tokens) {
	jule::Slice<jule::Ptr<_1e5d6c924_EnumItemDecl>> _129917_items = jule::Slice<jule::Ptr<_1e5d6c924_EnumItemDecl>>::alloc(0LL,1LL);;
	jule::I64 _130017_i = 0LL;;
	for (; (_130017_i < _129839_tokens.len()); (_130017_i)++) {
		{
			jule::Ptr<_1e47137a5_Token> _130221_t = _129839_tokens[_130017_i];;
			jule::Ptr<_1e5d6c924_EnumItemDecl> _130321_item = jule::new_ptr<_1e5d6c924_EnumItemDecl>();;
			_130321_item.get()._field_Token=_130221_t;
			if ((_130321_item.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
				_1c99de75a_pushErr(_self_.ptr(), _130321_item.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_1c99dea79_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			};
			_130321_item.get()._field_Ident=_130321_item.get()._field_Token.get()._field_Kind;
			if ((((_130017_i + 1LL) >= _129839_tokens.len()) || (_129839_tokens[(_130017_i + 1LL)].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
				if (((_130017_i + 1LL) < _129839_tokens.len())) {
					(_130017_i)++;
				};
				_129917_items = jule::alloc_for_append(_129917_items,1);_129917_items.__push(_130321_item);;
				goto _iter_next_1b30dcbd8;
			};
			(_130017_i)++;
			_130221_t=_129839_tokens[_130017_i];
			(_130017_i)++;
			if ((_130221_t.get()._field_Id != static_cast<jule::U64>(11LLU))) {
				_1c99de75a_pushErr(_self_.ptr(), _130221_t,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_1c99dea79_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\" for assignment", 33),jule::Slice<jule::Any>());
				goto _iter_next_1b30dcbd8;
			};
			if (((_130017_i >= _129839_tokens.len()) || (_129839_tokens[_130017_i].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
				_1c99de75a_pushErr(_self_.ptr(), _130221_t,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
				goto _iter_next_1b30dcbd8;
			};
			_130321_item.get()._field_Expr=_1c99e7587_buildEnumItemExpr(_self_, _130017_i,_129839_tokens);
			_129917_items = jule::alloc_for_append(_129917_items,1);_129917_items.__push(_130321_item);;
		}
	_iter_next_1b30dcbd8:;
	}
	_iter_end_1b30dcbd8:;;
	return _129917_items;
}



inline jule::Ptr<_1e5d6d44c_EnumDecl> _1c99e7ba3_buildEnumDecl(jule::Ptr<_1c99ddced_parser> _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _133538_tokens) {
	if ((_133538_tokens.len() < 3LL)) {
		_1c99de75a_pushErr(_self_.ptr(), _133538_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e5d6d44c_EnumDecl> _134017_e = jule::new_ptr<_1e5d6d44c_EnumDecl>(_1e5d6d44c_EnumDecl{._field_Token=_133538_tokens[1LL], });;
	if ((_134017_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1c99de75a_pushErr(_self_.ptr(), _134017_e.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c99dea79_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_134017_e.get()._field_Ident=_134017_e.get()._field_Token.get()._field_Kind;
	jule::I64 _134817_i = 2LL;;
	if ((_133538_tokens[_134817_i].get()._field_Id == static_cast<jule::U64>(11LLU))) {
		(_134817_i)++;
		if ((_134817_i >= _133538_tokens.len())) {
			_1c99de75a_pushErr(_self_.ptr(), _133538_tokens[(_134817_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return _134017_e;
		};
		std::tie(_134017_e.get()._field_Kind,std::ignore) = _1c99e1174_buildType(_self_, _133538_tokens,(&(_134817_i)),true);
		if ((_134817_i >= _133538_tokens.len())) {
			_1c99de12d_stop(_self_.ptr());
			_1c99de75a_pushErr(_self_.ptr(), _134017_e.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
			_1c99dea79_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
			return _134017_e;
		};
	} else {
		_134017_e.get()._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _136517_itemTokens = _1c99dc060_range(_134817_i,jule::Str("{", 1),jule::Str("}", 1),_133538_tokens);;
	if ((_136517_itemTokens == nullptr)) {
		_1c99de12d_stop(_self_.ptr());
		_1c99de75a_pushErr(_self_.ptr(), _134017_e.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1c99dea79_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _134017_e;
	} else if ((_134817_i < _133538_tokens.len())) {
		_1c99de75a_pushErr(_self_.ptr(), _133538_tokens[_134817_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_134017_e.get()._field_Public=_1c99ed99a_isPub(_134017_e.get()._field_Ident);
	_134017_e.get()._field_End=_133538_tokens[(_134817_i - 1LL)];
	_134017_e.get()._field_Items=_1c99e7895_buildEnumItems(_self_, _136517_itemTokens);
	return _134017_e;
}



inline jule::Any _1c99e7eb1_buildNodeEnumDecl(jule::Ptr<_1c99ddced_parser> _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _138042_tokens) {
	if (((_138042_tokens.len() > 3LL) && (_138042_tokens[2LL].get()._field_Id == static_cast<jule::U64>(11LLU)))) {
		if ((_138042_tokens[3LL].get()._field_Id == static_cast<jule::U64>(10LLU))) {
			return static_cast<jule::Any>(_1c99e71d0_buildTypeEnumDecl(_self_, _138042_tokens));
		};
	};
	return static_cast<jule::Any>(_1c99e7ba3_buildEnumDecl(_self_, _138042_tokens));
}



inline jule::Ptr<_1e5d6e6a1_FieldDecl> _1c99e82be_buildField(jule::Ptr<_1c99ddced_parser> _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>> _138934_tokens) {
	jule::Ptr<_1e5d6e6a1_FieldDecl> _139017_f = jule::new_ptr<_1e5d6e6a1_FieldDecl>();;
	_139017_f.get()._field_Mutable=(_138934_tokens[0LL].get()._field_Id == static_cast<jule::U64>(35LLU));
	if (_139017_f.get()._field_Mutable) {
		if ((_138934_tokens.len() == 1LL)) {
			_1c99de75a_pushErr(_self_.ptr(), _138934_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_138934_tokens=_138934_tokens.slice(1LL);
	};
	_139017_f.get()._field_Token=_138934_tokens[0LL];
	if ((_139017_f.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1c99de75a_pushErr(_self_.ptr(), _139017_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c99dea79_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	_139017_f.get()._field_Ident=_139017_f.get()._field_Token.get()._field_Kind;
	if ((_138934_tokens.len() == 1LL)) {
		_1c99de75a_pushErr(_self_.ptr(), _138934_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((_138934_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_1c99de75a_pushErr(_self_.ptr(), _138934_tokens[1LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	_138934_tokens=_138934_tokens.slice(2LL);
	jule::I64 _141817_i = 0LL;;
	std::tie(_139017_f.get()._field_Kind,std::ignore) = _1c99e1174_buildType(_self_, _138934_tokens,(&(_141817_i)),true);
	if ((_141817_i < _138934_tokens.len())) {
		jule::Ptr<_1e47137a5_Token> _142117_token = _138934_tokens[_141817_i];;
		if (((_142117_token.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_142117_token.get()._field_Kind != jule::Str("=", 1)))) {
			_1c99de75a_pushErr(_self_.ptr(), _138934_tokens[_141817_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_141817_i)++;
		if ((_141817_i >= _138934_tokens.len())) {
			_1c99de75a_pushErr(_self_.ptr(), _142117_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;
		};
		_138934_tokens=_138934_tokens.slice(_141817_i);
		_139017_f.get()._field_Default=_1c99ded87_buildExpr(_self_, _138934_tokens);
	};
	_139017_f.get()._field_Public=_1c99ed99a_isPub(_139017_f.get()._field_Ident);
	return _139017_f;
}



inline jule::Slice<jule::Ptr<_1e5d6e6a1_FieldDecl>> _1c99e85cc_buildStructDeclFields(jule::Ptr<_1c99ddced_parser> _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>> _143845_tokens) {
	jule::Slice<jule::Ptr<_1e5d6e6a1_FieldDecl>> _143917_fields = nullptr;;
	jule::Slice<jule::Ptr<_1c99c24eb_stmt>> _144017_stmts = _1c99c2892_splitStmts(_143845_tokens);;
	{
		auto &expr = _144017_stmts;
		auto it = expr.begin();
		_iter_begin_1b3109d26:;
		if (it != expr.end()) {
			jule::Ptr<_1c99c24eb_stmt> _144121_stmt = *it;
			{
				_143845_tokens=_144121_stmt.get()._field_tokens;
				jule::Ptr<_1e5d6e6a1_FieldDecl> _144321_f = _1c99e82be_buildField(_self_, _143845_tokens);;
				_143917_fields = jule::alloc_for_append(_143917_fields,1);_143917_fields.__push(_144321_f);;
			}
			_iter_next_1b3109d26:;
			++it;
			goto _iter_begin_1b3109d26;
		}
		_iter_end_1b3109d26:;
	};
	return _143917_fields;
}



inline jule::Ptr<_1e5d7000e_StructDecl> _1c99e88da_buildStructDecl(jule::Ptr<_1c99ddced_parser> _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _144940_tokens) {
	if ((_144940_tokens.len() < 3LL)) {
		_1c99de75a_pushErr(_self_.ptr(), _144940_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::I64 _145517_i = 1LL;;
	jule::Ptr<_1e5d7000e_StructDecl> _145617_s = jule::new_ptr<_1e5d7000e_StructDecl>(_1e5d7000e_StructDecl{._field_Token=_144940_tokens[_145517_i], });;
	if ((_145617_s.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1c99de75a_pushErr(_self_.ptr(), _145617_s.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c99dea79_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_145517_i)++;
	if ((_145517_i >= _144940_tokens.len())) {
		_1c99de75a_pushErr(_self_.ptr(), _144940_tokens[_145517_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _145617_s;
	};
	_145617_s.get()._field_Ident=_145617_s.get()._field_Token.get()._field_Kind;
	jule::Ptr<_1e47137a5_Token> _147013_errorToken = _144940_tokens[_145517_i];;
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _147117_genericsTokens = _1c99dc060_range(_145517_i,jule::Str("[", 1),jule::Str("]", 1),_144940_tokens);;
	if ((_147117_genericsTokens != nullptr)) {
		_145617_s.get()._field_Generics=_1c99e295b_buildGenerics(_self_, _147117_genericsTokens,_147013_errorToken);
	};
	if ((_145517_i >= _144940_tokens.len())) {
		_1c99de75a_pushErr(_self_.ptr(), _144940_tokens[(_145517_i - 1LL)],jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1c99dea79_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _145617_s;
	};
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _148117_bodyTokens = _1c99dc060_range(_145517_i,jule::Str("{", 1),jule::Str("}", 1),_144940_tokens);;
	if ((_148117_bodyTokens == nullptr)) {
		_1c99de12d_stop(_self_.ptr());
		_1c99de75a_pushErr(_self_.ptr(), _145617_s.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1c99dea79_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _145617_s;
	};
	if ((_145517_i < _144940_tokens.len())) {
		_1c99de75a_pushErr(_self_.ptr(), _144940_tokens[_145517_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_145617_s.get()._field_Public=_1c99ed99a_isPub(_145617_s.get()._field_Ident);
	_145617_s.get()._field_Fields=_1c99e85cc_buildStructDeclFields(_self_, _148117_bodyTokens);
	_145617_s.get()._field_End=_144940_tokens[(_145517_i - 1LL)];
	return _145617_s;
}



inline void _1c99e8b60_checkMethodReceiver(_1c99ddced_parser* _self_, jule::Ptr<_1e5d66775_FnDecl>& _149739_f) {
	if (_149739_f.get()._field_Statically) {
		if (((_149739_f.get()._field_Params.len() > 0LL) && _1e5d657b8_IsSelf(_149739_f.get()._field_Params[0LL].ptr()))) {
			_1c99de75a_pushErr(&(*_self_), _149739_f.get()._field_Token,jule::Str("static functions cannot have receiver parameter", 47),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_149739_f.get()._field_Params.len() == 0LL)) {
		_1c99de75a_pushErr(&(*_self_), _149739_f.get()._field_Token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e5d65455_ParamDecl> _150913_param = _149739_f.get()._field_Params[0LL];;
	if ((!(_1e5d657b8_IsSelf(_150913_param.ptr())))) {
		_1c99de75a_pushErr(&(*_self_), _149739_f.get()._field_Token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
}



inline jule::Slice<jule::Ptr<_1e5d66775_FnDecl>> _1c99e8e6d_buildTraitMethods(jule::Ptr<_1c99ddced_parser> _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>> _151641_tokens) {
	jule::Slice<jule::Ptr<_1e5d66775_FnDecl>> _151717_methods = nullptr;;
	jule::Slice<jule::Ptr<_1c99c24eb_stmt>> _151817_stmts = _1c99c2892_splitStmts(_151641_tokens);;
	{
		auto &expr = _151817_stmts;
		auto it = expr.begin();
		_iter_begin_1b31195b6:;
		if (it != expr.end()) {
			jule::Ptr<_1c99c24eb_stmt> _151921_stmt = *it;
			{
				_151641_tokens=_151921_stmt.get()._field_tokens;
				if ((_151641_tokens.len() == 0LL)) {
					goto _iter_next_1b31195b6;
				};
				jule::Ptr<_1e5d66775_FnDecl> _152421_f = _1c99e52bb_buildFn(_self_, _151641_tokens,true,true);;
				if ((_152421_f != nullptr)) {
					if (_1e5d66ac7_IsAnon(_152421_f.ptr())) {
						_1c99de75a_pushErr(_self_.ptr(), _152421_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
					_1c99e8b60_checkMethodReceiver(_self_.ptr(), _152421_f);
					if ((_152421_f.get()._field_Generics.len() > 0LL)) {
						_1c99de75a_pushErr(_self_.ptr(), _152421_f.get()._field_Token,jule::Str("trait methods cannot have generics", 34),jule::Slice<jule::Any>());
					};
					_151717_methods = jule::alloc_for_append(_151717_methods,1);_151717_methods.__push(_152421_f);;
				};
			}
			_iter_next_1b31195b6:;
			++it;
			goto _iter_begin_1b31195b6;
		}
		_iter_end_1b31195b6:;
	};
	return _151717_methods;
}



inline jule::Ptr<_1e5d70619_TraitDecl> _1c99e927b_buildTraitDecl(jule::Ptr<_1c99ddced_parser> _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _153939_tokens) {
	if ((_153939_tokens.len() < 3LL)) {
		_1c99de75a_pushErr(_self_.ptr(), _153939_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e5d70619_TraitDecl> _154417_t = jule::new_ptr<_1e5d70619_TraitDecl>(_1e5d70619_TraitDecl{._field_Token=_153939_tokens[1LL], });;
	if ((_154417_t.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1c99de75a_pushErr(_self_.ptr(), _154417_t.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c99dea79_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_154417_t.get()._field_Ident=_154417_t.get()._field_Token.get()._field_Kind;
	jule::I64 _155217_i = 2LL;;
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _155317_bodyTokens = _1c99dc060_range(_155217_i,jule::Str("{", 1),jule::Str("}", 1),_153939_tokens);;
	if ((_155317_bodyTokens == nullptr)) {
		_1c99de12d_stop(_self_.ptr());
		_1c99de75a_pushErr(_self_.ptr(), _154417_t.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1c99dea79_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_155217_i < _153939_tokens.len())) {
		_1c99de75a_pushErr(_self_.ptr(), _153939_tokens[_155217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_154417_t.get()._field_Public=_1c99ed99a_isPub(_154417_t.get()._field_Ident);
	_154417_t.get()._field_Methods=_1c99e8e6d_buildTraitMethods(_self_, _155317_bodyTokens);
	_154417_t.get()._field_End=_153939_tokens[(_155217_i - 1LL)];
	return _154417_t;
}



inline jule::Ptr<_1e5d66775_FnDecl> _1c99e9589_buildCppLinkFn(jule::Ptr<_1c99ddced_parser> _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>> _156938_tokens) {
	_156938_tokens=_156938_tokens.slice(1LL);
	jule::Ptr<_1e5d66775_FnDecl> _157117_f = _1c99e52bb_buildFn(_self_, _156938_tokens,false,true);;
	if ((_157117_f != nullptr)) {
		if (_1e5d66ac7_IsAnon(_157117_f.ptr())) {
			_1c99de75a_pushErr(_self_.ptr(), _157117_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		_157117_f.get()._field_Public=false;
		_157117_f.get()._field_CppLinked=true;
	};
	return _157117_f;
}



inline jule::Ptr<_1e5d67754_VarDecl> _1c99e9897_buildCppLinkVar(jule::Ptr<_1c99ddced_parser> _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>> _158239_tokens) {
	_158239_tokens=_158239_tokens.slice(1LL);
	jule::Ptr<_1e5d67754_VarDecl> _158417_v = _1c99e2296_buildVar(_self_, _158239_tokens);;
	if ((_158417_v != nullptr)) {
		_158417_v.get()._field_Public=false;
		_158417_v.get()._field_CppLinked=true;
		if ((_158417_v.get()._field_Expr != nullptr)) {
			_1c99de75a_pushErr(_self_.ptr(), _158417_v.get()._field_Token,jule::Str("cpp linked variables cannot have expression", 43),jule::Slice<jule::Any>());
		};
	};
	return _158417_v;
}



inline jule::Ptr<_1e5d7000e_StructDecl> _1c99e9ba5_buildCppLinkStruct(jule::Ptr<_1c99ddced_parser> _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>> _159542_tokens) {
	_159542_tokens=_159542_tokens.slice(1LL);
	jule::Ptr<_1e5d7000e_StructDecl> _159717_s = _1c99e88da_buildStructDecl(_self_, _159542_tokens);;
	if ((_159717_s != nullptr)) {
		_159717_s.get()._field_Public=false;
		{
			auto &expr = _159717_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1b3129340:;
			if (it != expr.end()) {
				jule::Ptr<_1e5d6e6a1_FieldDecl> _160025_f = *it;
				{
					_160025_f.get()._field_Public=true;
				}
				_iter_next_1b3129340:;
				++it;
				goto _iter_begin_1b3129340;
			}
			_iter_end_1b3129340:;
		};
		_159717_s.get()._field_CppLinked=true;
	};
	return _159717_s;
}



inline jule::Ptr<_1e5d6b0b5_TypeAliasDecl> _1c99e9eb3_buildCppLinkTypeAlias(jule::Ptr<_1c99ddced_parser> _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>> _160945_tokens) {
	_160945_tokens=_160945_tokens.slice(1LL);
	jule::Ptr<_1e5d6b0b5_TypeAliasDecl> _161117_t = _1c99e1482_buildTypeAliasDecl(_self_, _160945_tokens);;
	if ((_161117_t != nullptr)) {
		_161117_t.get()._field_Public=false;
		_161117_t.get()._field_CppLinked=true;
	};
	return _161117_t;
}



inline jule::Ptr<_1e5d6c4a1_UseDecl> _1c99ea2c1_buildCppLinkUse(jule::Ptr<_1c99ddced_parser> _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>> _161939_tokens) {
	if ((_161939_tokens.len() == 1LL)) {
		_1c99de75a_pushErr(_self_.ptr(), _161939_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_161939_tokens=_161939_tokens.slice(1LL);
	;
	return _1c99e670c_buildUseDecl(_self_.ptr(), _161939_tokens,true);
}



inline jule::Any _1c99ea5ce_buildCppLink(jule::Ptr<_1c99ddced_parser> _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _163037_tokens) {
	jule::Ptr<_1e47137a5_Token> _163117_token = _163037_tokens[0LL];;
	if ((_163037_tokens.len() == 1LL)) {
		_1c99de75a_pushErr(_self_.ptr(), _163117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_163117_token=_163037_tokens[1LL];
	{
		auto &_match_expr{ _163117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1b3133e82:;
			{
				return static_cast<jule::Any>(_1c99e9589_buildCppLinkFn(_self_, _163037_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1b3134b97:;
			{
				return static_cast<jule::Any>(_1c99e9897_buildCppLinkVar(_self_, _163037_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_1b3134c0d:;
			{
				return static_cast<jule::Any>(_1c99e9ba5_buildCppLinkStruct(_self_, _163037_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1b3134c74:;
			{
				return static_cast<jule::Any>(_1c99e9eb3_buildCppLinkTypeAlias(_self_, _163037_tokens));
			}
		}
		else {
			_case_begin_1b3134aa9:;
			{
				_1c99de75a_pushErr(_self_.ptr(), _163117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1b3134a43:;
	};
	return nullptr;
}



inline jule::Ptr<_1e5d66775_FnDecl> _1c99ea8dc_getMethod(jule::Ptr<_1c99ddced_parser> _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _165434_tokens) {
	jule::I64 _165517_i = 0LL;;
	jule::Ptr<_1e47137a5_Token> _165617_token = _165434_tokens[_165517_i];;
	if ((_165617_token.get()._field_Id == static_cast<jule::U64>(37LLU))) {
		if (((_165517_i + 1LL) >= _165434_tokens.len())) {
			_1c99de75a_pushErr(_self_.ptr(), _165617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_165517_i)++;
		_165617_token=_165434_tokens[_165517_i];
	};
	if ((_165617_token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		if (((_165517_i + 1LL) >= _165434_tokens.len())) {
			_1c99de75a_pushErr(_self_.ptr(), _165617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_165517_i)++;
		_165617_token=_165434_tokens[_165517_i];
	};
	if ((_165617_token.get()._field_Id != static_cast<jule::U64>(32LLU))) {
		_1c99de75a_pushErr(_self_.ptr(), _165617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e5d66775_FnDecl> _168017_f = _1c99e52bb_buildFn(_self_, _165434_tokens,true,false);;
	if (((_168017_f != nullptr) && _1e5d66ac7_IsAnon(_168017_f.ptr()))) {
		_1c99de75a_pushErr(_self_.ptr(), _168017_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _168017_f;
}



inline void _1c99eac0b_parseImplBody(jule::Ptr<_1c99ddced_parser> _self_, jule::Ptr<_1e5d70c24_Impl>& _168738_ipl, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _168755_tokens) {
	jule::Slice<jule::Ptr<_1c99c24eb_stmt>> _168817_stmts = _1c99c2892_splitStmts(_168755_tokens);;
	{
		auto &expr = _168817_stmts;
		auto it = expr.begin();
		_iter_begin_1b313d09b:;
		if (it != expr.end()) {
			jule::Ptr<_1c99c24eb_stmt> _168921_stmt = *it;
			{
				_168755_tokens=_168921_stmt.get()._field_tokens;
				jule::Ptr<_1e47137a5_Token> _169121_token = _168755_tokens[0LL];;
				{
					auto &_match_expr{ _169121_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(38LLU)) {
						_case_begin_1b313d882:;
						{
							_1c99e041a_pushDirective(_self_.ptr(), _1c99e0195_buildDirective(_self_.ptr(), _168755_tokens));
							goto _iter_next_1b313d09b;
						}
					}
					_match_end_1b313e234:;
				};
				{
					auto &_match_expr{ _169121_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(9LLU)) {
						_case_begin_1b313e3bb:;
						{
							jule::Ptr<_1e5d67754_VarDecl> _170025_v = _1c99e2296_buildVar(_self_, _168755_tokens);;
							if ((_170025_v != nullptr)) {
								_168738_ipl.get()._field_Statics = jule::alloc_for_append(_168738_ipl.get()._field_Statics,1);_168738_ipl.get()._field_Statics.__push(_170025_v);;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(37LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
						_case_begin_1b313e6c9:;
						{
							jule::Ptr<_1e5d66775_FnDecl> _170725_f = _1c99ea8dc_getMethod(_self_, _168755_tokens);;
							if ((_170725_f != nullptr)) {
								_1c99e8b60_checkMethodReceiver(_self_.ptr(), _170725_f);
								_1c99eb59c_applyFnMeta(_self_.ptr(), _170725_f);
								_168738_ipl.get()._field_Methods = jule::alloc_for_append(_168738_ipl.get()._field_Methods,1);_168738_ipl.get()._field_Methods.__push(_170725_f);;
							};
						}
					}
					else {
						_case_begin_1b313e663:;
						{
							_1c99de75a_pushErr(_self_.ptr(), _169121_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							goto _iter_next_1b313d09b;
						}
					}
					_match_end_1b313e8c7:;
				};
			}
			_iter_next_1b313d09b:;
			++it;
			goto _iter_begin_1b313d09b;
		}
		_iter_end_1b313d09b:;
	};
}



inline jule::Ptr<_1e5d70c24_Impl> _1c99eb019_buildImpl(jule::Ptr<_1c99ddced_parser> _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>> _172033_tokens) {
	jule::Ptr<_1e47137a5_Token> _172117_token = _172033_tokens[0LL];;
	if ((_172033_tokens.len() < 2LL)) {
		_1c99de75a_pushErr(_self_.ptr(), _172117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::I64 _172717_i = 1LL;;
	jule::Ptr<_1e5d54961_TypeDecl> _172918_base;;
	jule::Bool _172928_ok;;
	std::tie(_172918_base,_172928_ok) = _1c99e1174_buildType(_self_, _172033_tokens,(&(_172717_i)),true);
	if ((!(_172928_ok))) {
		return nullptr;
	};
	if ((_172717_i >= _172033_tokens.len())) {
		_1c99de75a_pushErr(_self_.ptr(), _172117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e5d70c24_Impl> _173817_ipl = jule::new_ptr<_1e5d70c24_Impl>(_1e5d70c24_Impl{._field_Base=_172918_base, });;
	_172117_token=_172033_tokens[_172717_i];
	if ((_172117_token.get()._field_Id != static_cast<jule::U64>(12LLU))) {
		if (((_172117_token.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_172117_token.get()._field_Kind == jule::Str("{", 1)))) {
			std::tie(_173817_ipl.get()._field_Base,_173817_ipl.get()._field_Dest) = std::make_tuple(_173817_ipl.get()._field_Dest,_173817_ipl.get()._field_Base);
			goto _julec_label_body;
		};
		_1c99de12d_stop(_self_.ptr());
		_1c99de75a_pushErr(_self_.ptr(), _172117_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1c99dea79_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	(_172717_i)++;
	if ((_172717_i >= _172033_tokens.len())) {
		_1c99de12d_stop(_self_.ptr());
		_1c99de75a_pushErr(_self_.ptr(), _172117_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1c99dea79_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	std::tie(_173817_ipl.get()._field_Dest,_172928_ok) = _1c99e1174_buildType(_self_, _172033_tokens,(&(_172717_i)),true);
	if ((!(_172928_ok))) {
		return nullptr;
	};
	if ((_172717_i >= _172033_tokens.len())) {
		_1c99de12d_stop(_self_.ptr());
		_1c99de75a_pushErr(_self_.ptr(), _172117_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1c99dea79_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	_julec_label_body:;
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _177617_bodyTokens = _1c99dc060_range(_172717_i,jule::Str("{", 1),jule::Str("}", 1),_172033_tokens);;
	if ((_177617_bodyTokens == nullptr)) {
		_1c99de12d_stop(_self_.ptr());
		_1c99de75a_pushErr(_self_.ptr(), _172117_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1c99dea79_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_172717_i < _172033_tokens.len())) {
		_1c99de75a_pushErr(_self_.ptr(), _172033_tokens[_172717_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_173817_ipl.get()._field_End=_172033_tokens[(_172717_i - 1LL)];
	_1c99eac0b_parseImplBody(_self_, _173817_ipl,_177617_bodyTokens);
	return _173817_ipl;
}



inline jule::Any _1c99eb327_buildNodeData(jule::Ptr<_1c99ddced_parser> _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _179138_tokens) {
	jule::Ptr<_1e47137a5_Token> _179217_token = _179138_tokens[0LL];;
	{
		auto &_match_expr{ _179217_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1b315083e:;
			{
				jule::Ptr<_1e5d66775_FnDecl> _179621_f = _1c99e52bb_buildFn(_self_, _179138_tokens,false,false);;
				if ((_179621_f != nullptr)) {
					_179621_f.get()._field_Global=true;
					if (_1e5d66ac7_IsAnon(_179621_f.ptr())) {
						_1c99de75a_pushErr(_self_.ptr(), _179621_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
				};
				return static_cast<jule::Any>(_179621_f);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(35LLU) || _match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1b31508a5:;
			{
				return static_cast<jule::Any>(_1c99e2296_buildVar(_self_, _179138_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1b31510ae:;
			{
				return static_cast<jule::Any>(_1c99e1482_buildTypeAliasDecl(_self_, _179138_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1b3151125:;
			{
				return _1c99e7eb1_buildNodeEnumDecl(_self_, _179138_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_1b315118b:;
			{
				return static_cast<jule::Any>(_1c99e88da_buildStructDecl(_self_, _179138_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_1b3151202:;
			{
				return static_cast<jule::Any>(_1c99e927b_buildTraitDecl(_self_, _179138_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1b3151268:;
			{
				return static_cast<jule::Any>(_1c99eb019_buildImpl(_self_, _179138_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1b31512e0:;
			{
				return _1c99ea5ce_buildCppLink(_self_, _179138_tokens);
			}
		}
		else {
			_case_begin_1b315072e:;
			{
				_1c99de75a_pushErr(_self_.ptr(), _179217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1b3150685:;
	};
}



inline void _1c99eb59c_applyFnMeta(_1c99ddced_parser* _self_, jule::Ptr<_1e5d66775_FnDecl>& _182735_f) {
	_182735_f.get()._field_Directives=(*_self_)._field_directives;
	(*_self_)._field_directives=nullptr;
}



inline void _1c99eb822_applyMeta(_1c99ddced_parser* _self_, _1e5d20d6c_Node& _183233_node) {
	{
		auto &_match_expr{ _183233_node._field_Data };
		
		if (_match_expr.type_is<jule::Ptr<_1e5d67754_VarDecl>>()) {
			_case_begin_1b3156c96:;
			{
				jule::Ptr<_1e5d67754_VarDecl> _183521_v = _183233_node._field_Data.operator jule::Ptr<_1e5d67754_VarDecl>();;
				if ((_183521_v == nullptr)) {
					return;;
				};
				_183521_v.get()._field_Directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d66775_FnDecl>>()) {
			_case_begin_1b3156d0c:;
			{
				jule::Ptr<_1e5d66775_FnDecl> _184221_f = _183233_node._field_Data.operator jule::Ptr<_1e5d66775_FnDecl>();;
				if ((_184221_f == nullptr)) {
					return;;
				};
				_1c99eb59c_applyFnMeta(&(*_self_), _184221_f);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d7000e_StructDecl>>()) {
			_case_begin_1b3156d73:;
			{
				jule::Ptr<_1e5d7000e_StructDecl> _184821_sd = _183233_node._field_Data.operator jule::Ptr<_1e5d7000e_StructDecl>();;
				if ((_184821_sd == nullptr)) {
					return;;
				};
				_184821_sd.get()._field_Directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
			}
		}
		_match_end_1b3156a87:;
	};
}



inline void _1c99eba97_pushUseDecl(jule::Ptr<_1c99ddced_parser> _self_, jule::Ptr<_1e5d6c4a1_UseDecl>& _185736_decl) {
	_self_.get()._field_ast.get()._field_UseDecls = jule::alloc_for_append(_self_.get()._field_ast.get()._field_UseDecls,1);_self_.get()._field_ast.get()._field_UseDecls.__push(_185736_decl);;
	if ((_self_.get()._field_ast.get()._field_Nodes.len() > 0LL)) {
		_1c99de75a_pushErr(_self_.ptr(), _185736_decl.get()._field_Token,jule::Str("use declarations must declared top of source code", 49),jule::Slice<jule::Any>());
		_1c99dea79_pushSuggestion(_self_.ptr(), jule::Str("move this use declaration to top of source file", 47),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1c99ebda5_pushMetaNodes(jule::Ptr<_1c99ddced_parser> _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _186538_tokens) {
	{
		auto &_match_expr{ _186538_tokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1b315c9a0:;
			{
				;
				jule::Ptr<_1e5d6c4a1_UseDecl> _186921_decl = _1c99e670c_buildUseDecl(_self_.ptr(), _186538_tokens,false);;
				_1c99eba97_pushUseDecl(_self_, _186921_decl);
				return true;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1b315ca16:;
			{
				if (((_186538_tokens.len() > 1LL) && (_186538_tokens[1LL].get()._field_Id == static_cast<jule::U64>(19LLU)))) {
					jule::Ptr<_1e5d6c4a1_UseDecl> _187425_decl = _1c99ea2c1_buildCppLinkUse(_self_, _186538_tokens);;
					_1c99eba97_pushUseDecl(_self_, _187425_decl);
					return true;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_1b315ca8d:;
			{
				_1c99e041a_pushDirective(_self_.ptr(), _1c99e0195_buildDirective(_self_.ptr(), _186538_tokens));
				return true;
			}
		}
		_match_end_1b315c8a1:;
	};
	return false;
}



inline _1e5d20d6c_Node _1c99ec1b3_parseNode(jule::Ptr<_1c99ddced_parser> _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _188534_st) {
	_1e5d20d6c_Node _188617_node = _1e5d20d6c_Node{._field_Token=_188534_st[0LL], };;
	if (_1c99ebda5_pushMetaNodes(_self_, _188534_st)) {
		return _188617_node;
	};
	jule::Any _189417_data = _1c99eb327_buildNodeData(_self_, _188534_st);;
	if ((_189417_data == nullptr)) {
		return _188617_node;
	};
	_188617_node._field_Data=_189417_data;
	_1c99eb822_applyMeta(_self_.ptr(), _188617_node);
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1c99de75a_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	};
	_self_.get()._field_directives=nullptr;
	return _188617_node;
}



inline void _1c99ec438_appendNode(jule::Ptr<_1c99ddced_parser> _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _190935_st) {
	if ((_190935_st.len() == 0LL)) {
		return;;
	};
	_1e5d20d6c_Node _191317_node = _1c99ec1b3_parseNode(_self_, _190935_st);;
	if (((_191317_node._field_Data == nullptr) || _1c99de392_stopped(_self_.ptr()))) {
		return;;
	};
	_self_.get()._field_ast.get()._field_Nodes = jule::alloc_for_append(_self_.get()._field_ast.get()._field_Nodes,1);_self_.get()._field_ast.get()._field_Nodes.__push(_191317_node);;
}



inline void _1c99ec89a_removeRange(_1c99ddced_parser* _self_, jule::I64 _192030_i, jule::Str _192038_kind, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _192050_tokens, jule::Slice<jule::I64>& _192073_ranges) {
	jule::Str _192113_close = _1c99dcd74_getCloseKindOfBrace(_192038_kind);;
	for (; (_192030_i >= 0LL); (_192030_i)--) {
		{
			jule::Ptr<_1e47137a5_Token> _192317_tok = _192050_tokens[_192073_ranges[_192030_i]];;
			if ((_192317_tok.get()._field_Kind != _192113_close)) {
				goto _iter_next_1b3167317;
			};
			_192073_ranges=jule::append(_192073_ranges.slice(0LL,_192030_i),_192073_ranges.slice((_192030_i + 1LL)));
			goto _iter_end_1b3167317;
		}
	_iter_next_1b3167317:;
	}
	_iter_end_1b3167317:;;
}



inline void _1c99ecc63_pushWrongOrderCloseErr(_1c99ddced_parser* _self_, jule::Ptr<_1e47137a5_Token>& _193242_t, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _193254_tokens, jule::Slice<jule::I64>& _193273_ranges) {
	{
		auto &_match_expr{ _193254_tokens[_193273_ranges[(_193273_ranges.len() - 1LL)]].get()._field_Kind };
		
		if (_match_expr == jule::Str("(", 1)) {
			_case_begin_1b3169627:;
			{
				_1c99de75a_pushErr(&(*_self_), _193242_t,jule::Str("was expected parentheses close", 30),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("{", 1)) {
			_case_begin_1b316969e:;
			{
				_1c99de75a_pushErr(&(*_self_), _193242_t,jule::Str("was expected brace close", 24),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("[", 1)) {
			_case_begin_1b3169726:;
			{
				_1c99de75a_pushErr(&(*_self_), _193242_t,jule::Str("was expected bracket close", 26),jule::Slice<jule::Any>());
			}
		}
		_match_end_1b31694e5:;
	};
}



inline void _1c99ed1c5_pushRangeClose(_1c99ddced_parser* _self_, jule::Ptr<_1e47137a5_Token> _194333_t, jule::Str _194344_left, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _194356_tokens, jule::Slice<jule::I64>& _194379_ranges) {
	jule::I64 _194413_n = _194379_ranges.len();;
	if ((_194413_n == 0LL)) {
		{
			auto &_match_expr{ _194333_t.get()._field_Kind };
			
			if (_match_expr == jule::Str("]", 1)) {
				_case_begin_1b316c2b7:;
				{
					_1c99de75a_pushErr(&(*_self_), _194333_t,jule::Str("extra closed brackets", 21),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str("}", 1)) {
				_case_begin_1b316c32d:;
				{
					_1c99de75a_pushErr(&(*_self_), _194333_t,jule::Str("extra closed braces", 19),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str(")", 1)) {
				_case_begin_1b316c3a5:;
				{
					_1c99de75a_pushErr(&(*_self_), _194333_t,jule::Str("extra closed parentheses", 24),jule::Slice<jule::Any>());
				}
			}
			_match_end_1b316c064:;
		};
		return;;
	} else if ((_194356_tokens[_194379_ranges[(_194413_n - 1LL)]].get()._field_Kind != _194344_left)) {
		_1c99ecc63_pushWrongOrderCloseErr(&(*_self_), _194333_t,_194356_tokens,_194379_ranges);
	};
	_1c99ec89a_removeRange(&(*_self_), static_cast<jule::I64>((_194413_n - 1LL)),_194333_t.get()._field_Kind,_194356_tokens,_194379_ranges);
}



inline void _1c99ed44a_checkRanges(_1c99ddced_parser* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _196131_tokens) {
	jule::Slice<jule::I64> _196217_ranges = nullptr;;
	{
		auto &expr = _196131_tokens;
		auto it = expr.begin();
		_iter_begin_1b31705b7:;
		if (it != expr.end()) {
			jule::I64 _196413_i = it - expr.begin();
			jule::Ptr<_1e47137a5_Token> &_196416_token = *it;
			{
				if ((_196416_token.get()._field_Id != static_cast<jule::U64>(3LLU))) {
					goto _iter_next_1b31705b7;
				};
				{
					auto &_match_expr{ _196416_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
						_case_begin_1b317184e:;
						{
							_196217_ranges = jule::alloc_for_append(_196217_ranges,1);_196217_ranges.__push(_196413_i);;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1b31718e8:;
						{
							_1c99ed1c5_pushRangeClose(&(*_self_), _196416_token,jule::Str("(", 1),_196131_tokens,_196217_ranges);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1b317195e:;
						{
							_1c99ed1c5_pushRangeClose(&(*_self_), _196416_token,jule::Str("{", 1),_196131_tokens,_196217_ranges);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1b31719c5:;
						{
							_1c99ed1c5_pushRangeClose(&(*_self_), _196416_token,jule::Str("[", 1),_196131_tokens,_196217_ranges);
						}
					}
					_match_end_1b31713cb:;
				};
			}
			_iter_next_1b31705b7:;
			++it;
			_196413_i++;
			goto _iter_begin_1b31705b7;
		}
		_iter_end_1b31705b7:;
	};
	{
		auto &expr = _196217_ranges;
		auto it = expr.begin();
		_iter_begin_1b3173301:;
		if (it != expr.end()) {
			jule::I64 _198216_i = *it;
			{
				jule::Ptr<_1e47137a5_Token> _198317_token = _196131_tokens[_198216_i];;
				{
					auto &_match_expr{ _198317_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1b317416a:;
						{
							_1c99de75a_pushErr(&(*_self_), _198317_token,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("{", 1)) {
						_case_begin_1b31741e2:;
						{
							_1c99de75a_pushErr(&(*_self_), _198317_token,jule::Str("brace waiting to close", 22),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1b3174269:;
						{
							_1c99de75a_pushErr(&(*_self_), _198317_token,jule::Str("bracket are waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					_match_end_1b317409e:;
				};
			}
			_iter_next_1b3173301:;
			++it;
			goto _iter_begin_1b3173301;
		}
		_iter_end_1b3173301:;
	};
}



inline void _1c99ed6c0_parse(jule::Ptr<_1c99ddced_parser> _self_, jule::Ptr<_1e4718b40_File>& _199530_f) {
	_self_.get()._field_ast=jule::new_ptr<_1e5d201bd_Ast>(_1e5d201bd_Ast{._field_File=_199530_f, });
	_1c99ed44a_checkRanges(_self_.ptr(), _199530_f.get()._field_Tokens);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1c99c24eb_stmt>> _200517_stmts = _1c99c2892_splitStmts(_199530_f.get()._field_Tokens);;
	jule::I64 _200817_i = 0LL;;
	for (; (_200817_i < _200517_stmts.len()); (_200817_i)++) {
		{
			jule::Ptr<_1c99c24eb_stmt> _201021_stmt = _200517_stmts[_200817_i];;
			if ((_201021_stmt.get()._field_tokens.len() < 2LL)) {
				return;;
			};
			if ((_201021_stmt.get()._field_tokens[0LL].get()._field_Id != static_cast<jule::U64>(38LLU))) {
				goto _iter_end_1b3177316;
			};
			if ((!(_1e43e593d_IsTopDirective(_201021_stmt.get()._field_tokens[1LL].get()._field_Kind)))) {
				goto _iter_end_1b3177316;
			};
			_self_.get()._field_ast.get()._field_TopDirectives = jule::alloc_for_append(_self_.get()._field_ast.get()._field_TopDirectives,1);_self_.get()._field_ast.get()._field_TopDirectives.__push(_1c99e0195_buildDirective(_self_.ptr(), _201021_stmt.get()._field_tokens));;
		}
	_iter_next_1b3177316:;
	}
	_iter_end_1b3177316:;;
	_self_.get()._field_errors=nullptr;
	for (; (_200817_i < _200517_stmts.len()); (_200817_i)++) {
		{
			jule::Ptr<_1c99c24eb_stmt> _202721_stmt = _200517_stmts[_200817_i];;
			_1c99ec438_appendNode(_self_, _202721_stmt.get()._field_tokens);
			if (_1c99de392_stopped(_self_.ptr())) {
				goto _iter_end_1b3179deb;
			};
		}
	_iter_next_1b3179deb:;
	}
	_iter_end_1b3179deb:;;
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1c99de75a_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c99ddced_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _1c9a0046e_pushErr(_1c99eedca_typeBuilder* _self_, jule::Ptr<_1e47137a5_Token> _7326_token, jule::Str _7341_fmt) {
	if ((*_self_)._field_err) {
		_1c99de75a_pushErr((*_self_)._field_p.ptr(), _7326_token,_7341_fmt,jule::Slice<jule::Any>());
	};
}



inline void _1c9a0078d_pushSuggestion(_1c99eedca_typeBuilder* _self_, jule::Str _8033_fmt, jule::Slice<jule::Any> _8046_args) {
	if ((*_self_)._field_err) {
		_1c99dea79_pushSuggestion((*_self_)._field_p.ptr(), _8033_fmt,jule::Any(_8046_args));
	};
}



inline jule::Ptr<_1e5d54961_TypeDecl> _1c9a00a02_buildPrim(_1c99eedca_typeBuilder* _self_) {
	jule::Ptr<_1e5d54961_TypeDecl> _8717_t = _1c99ee57d_buildPrimType((*_self_)._field_tokens[(*((*_self_)._field_i))]);;
	((*((*_self_)._field_i)))++;
	return _8717_t;
}



inline jule::Ptr<_1e5d54961_TypeDecl> _1c9a00c66_buildNamespace(_1c99eedca_typeBuilder* _self_) {
	jule::Ptr<_1e5d54961_TypeDecl> _9317_t = jule::new_ptr<_1e5d54961_TypeDecl>(_1e5d54961_TypeDecl{._field_Token=(*_self_)._field_tokens[(*((*_self_)._field_i))], });;
	jule::Ptr<_1e5d55a2d_NamespaceTypeDecl> _9717_nst = jule::new_ptr<_1e5d55a2d_NamespaceTypeDecl>();;
	jule::I64 _9817_n = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_1e47137a5_Token> _10021_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if (((_9817_n & 1LL) == 0LL)) {
				if ((_10021_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
					_1c9a0046e_pushErr(&(*_self_), _10021_token,jule::Str("invalid syntax", 14));
					_1c9a0078d_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
				};
				_9717_nst.get()._field_Idents = jule::alloc_for_append(_9717_nst.get()._field_Idents,1);_9717_nst.get()._field_Idents.__push(_10021_token);;
			} else if ((_10021_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
				goto _iter_end_1b3184c5d;
			};
			(_9817_n)++;
		}
	_iter_next_1b3184c5d:;
	}
	_iter_end_1b3184c5d:;;
	_9717_nst.get()._field_Idents=_9717_nst.get()._field_Idents.slice(0LL,(_9717_nst.get()._field_Idents.len() - 1LL));
	((*((*_self_)._field_i)))--;
	_9717_nst.get()._field_Kind=_1c9a014a3_buildIdent(&(*_self_));
	_9317_t.get()._field_Kind=static_cast<jule::Any>(_9717_nst);
	return _9317_t;
}



inline jule::Slice<jule::Ptr<_1e5d54961_TypeDecl>> _1c9a00eca_buildGenerics(_1c99eedca_typeBuilder* _self_) {
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		return nullptr;
	};
	jule::Ptr<_1e47137a5_Token> _12613_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if (((_12613_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_12613_token.get()._field_Kind != jule::Str("[", 1)))) {
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>> _13117_parts = _1c9a0123e_identGenerics(&(*_self_));;
	if ((_13117_parts.len() == 0LL)) {
		_1c9a0046e_pushErr(&(*_self_), _12613_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1e5d54961_TypeDecl>> _13717_types = jule::Slice<jule::Ptr<_1e5d54961_TypeDecl>>::alloc(0LL,_13117_parts.len());;
	{
		auto &expr = _13117_parts;
		auto it = expr.begin();
		_iter_begin_1b318c89d:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1e47137a5_Token>> _13821_part = *it;
			{
				jule::I64 _13921_j = 0LL;;
				jule::Ptr<_1e5d54961_TypeDecl> _14022_t;;
				std::tie(_14022_t,std::ignore) = _1c99e1174_buildType((*_self_)._field_p, _13821_part,(&(_13921_j)),true);
				if ((_13921_j < _13821_part.len())) {
					_1c9a0046e_pushErr(&(*_self_), _13821_part[_13921_j],jule::Str("invalid syntax", 14));
				};
				_13717_types = jule::alloc_for_append(_13717_types,1);_13717_types.__push(_14022_t);;
			}
			_iter_next_1b318c89d:;
			++it;
			goto _iter_begin_1b318c89d;
		}
		_iter_end_1b318c89d:;
	};
	return _13717_types;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>> _1c9a0123e_identGenerics(_1c99eedca_typeBuilder* _self_) {
	jule::I64 _15013_first = (*((*_self_)._field_i));;
	jule::I64 _15117_rangeN = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_1e47137a5_Token> _15317_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if ((_15317_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _15317_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1b3191572:;
						{
							(_15117_rangeN)++;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1b31915e9:;
						{
							(_15117_rangeN)--;
						}
					}
					_match_end_1b3191341:;
				};
			};
			if ((_15117_rangeN == 0LL)) {
				((*((*_self_)._field_i)))++;
				goto _iter_end_1b31901db;
			};
		}
	_iter_next_1b31901db:;
	}
	_iter_end_1b31901db:;;
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _16717_tokens = (*_self_)._field_tokens.slice((_15013_first + 1LL),((*((*_self_)._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>> _16818_parts;;
	jule::Slice<_1e43e3a18_Log> _16825_errors;;
	std::tie(_16818_parts,_16825_errors) = _1c99dcacc_parts(_16717_tokens,static_cast<jule::U64>(8LLU),true);
	if ((*_self_)._field_err) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_16825_errors);
	};
	return _16818_parts;
}



inline jule::Ptr<_1e5d54961_TypeDecl> _1c9a014a3_buildIdent(_1c99eedca_typeBuilder* _self_) {
	jule::Bool _17617_next = (((*((*_self_)._field_i)) + 1LL) < (*_self_)._field_tokens.len());;
	if ((_17617_next && ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_Id == static_cast<jule::U64>(22LLU)))) {
		return _1c9a00c66_buildNamespace(&(*_self_));
	};
	jule::Ptr<_1e47137a5_Token> _18017_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_1e5d55027_IdentTypeDecl> _18117_it = jule::new_ptr<_1e5d55027_IdentTypeDecl>(_1e5d55027_IdentTypeDecl{._field_Token=_18017_token, ._field_Ident=_18017_token.get()._field_Kind, ._field_CppLinked=false, });;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1e5d54961_TypeDecl> _18717_itd = jule::new_ptr<_1e5d54961_TypeDecl>(_1e5d54961_TypeDecl{._field_Token=_18017_token, ._field_Kind=static_cast<jule::Any>(_18117_it)});;
	if (((!(_17617_next)) || ((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_Id != static_cast<jule::U64>(20LLU)))) {
		_18117_it.get()._field_Generics=_1c9a00eca_buildGenerics(&(*_self_));
		return _18717_itd;
	};
	if ((((*_self_)._field_tokens.len() - (*((*_self_)._field_i))) == 1LL)) {
		_1c9a0046e_pushErr(&(*_self_), _18017_token,jule::Str("invalid syntax", 14));
		return _18717_itd;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1c9a0046e_pushErr(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("invalid syntax", 14));
		return _18717_itd;
	};
	jule::Ptr<_1e5d55676_SubIdentTypeDecl> _20417_sit = jule::new_ptr<_1e5d55676_SubIdentTypeDecl>();;
	_20417_sit.get()._field_Idents = jule::alloc_for_append(_20417_sit.get()._field_Idents,1);_20417_sit.get()._field_Idents.__push(_18117_it);;
	jule::Ptr<_1e5d54961_TypeDecl> _20617_ident = _1c9a014a3_buildIdent(&(*_self_));;
	{
		auto &_match_expr{ _20617_ident.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e5d55027_IdentTypeDecl>>()) {
			_case_begin_1b319b78b:;
			{
				_20417_sit.get()._field_Idents = jule::alloc_for_append(_20417_sit.get()._field_Idents,1);_20417_sit.get()._field_Idents.__push(_20617_ident.get()._field_Kind.operator jule::Ptr<_1e5d55027_IdentTypeDecl>());;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d55676_SubIdentTypeDecl>>()) {
			_case_begin_1b319b857:;
			{
				_20417_sit.get()._field_Idents=jule::append(_20417_sit.get()._field_Idents,_20617_ident.get()._field_Kind.operator jule::Ptr<_1e5d55676_SubIdentTypeDecl>().get()._field_Idents);
			}
		}
		_match_end_1b319b736:;
	};
	return jule::new_ptr<_1e5d54961_TypeDecl>(_1e5d54961_TypeDecl{._field_Token=_18017_token, ._field_Kind=static_cast<jule::Any>(_20417_sit)});
}



inline jule::Ptr<_1e5d54961_TypeDecl> _1c9a01717_buildCppLink(_1c99eedca_typeBuilder* _self_) {
	if (((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len()) || ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_Id != static_cast<jule::U64>(20LLU)))) {
		_1c9a0046e_pushErr(&(*_self_), (*_self_)._field_tokens[(*((*_self_)._field_i))],jule::Str("invalid syntax", 14));
		return nullptr;
	};
	(*((*_self_)._field_i))+=2LL;
	jule::Ptr<_1e5d54961_TypeDecl> _22517_t = _1c9a014a3_buildIdent(&(*_self_));;
	_22517_t.get()._field_Kind.operator jule::Ptr<_1e5d55027_IdentTypeDecl>().get()._field_CppLinked=true;
	return _22517_t;
}



inline jule::Ptr<_1e5d54961_TypeDecl> _1c9a0197b_buildFn(_1c99eedca_typeBuilder* _self_) {
	jule::Ptr<_1e47137a5_Token> _23117_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_1e5d66775_FnDecl> _23217_f = _1c99e4d6a_buildFnPrototype((*_self_)._field_p, (*_self_)._field_tokens,(*((*_self_)._field_i)),false);;
	if ((_23217_f == nullptr)) {
		return nullptr;
	};
	if ((!(_1e5d66ac7_IsAnon(_23217_f.ptr())))) {
		_1c9a0046e_pushErr(&(*_self_), _23217_f.get()._field_Token,jule::Str("invalid syntax", 14));
	};
	return jule::new_ptr<_1e5d54961_TypeDecl>(_1e5d54961_TypeDecl{._field_Token=_23117_token, ._field_Kind=static_cast<jule::Any>(_23217_f)});
}



inline jule::Ptr<_1e5d54961_TypeDecl> _1c9a01be0_buildPtr(_1c99eedca_typeBuilder* _self_) {
	jule::Ptr<_1e47137a5_Token> _24617_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_1c9a0046e_pushErr(&(*_self_), _24617_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_Id == static_cast<jule::U64>(34LLU))) {
		((*((*_self_)._field_i)))++;
		return jule::new_ptr<_1e5d54961_TypeDecl>(_1e5d54961_TypeDecl{._field_Token=_24617_token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1e5d567dc_PtrTypeDecl>(_1e5d567dc_PtrTypeDecl{._field_Elem=nullptr}))});
	};
	jule::Ptr<_1e5d54961_TypeDecl> _26317_elem = _1c9a03021_step(&(*_self_));;
	if ((_26317_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1e5d54961_TypeDecl>(_1e5d54961_TypeDecl{._field_Token=_24617_token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1e5d567dc_PtrTypeDecl>(_1e5d567dc_PtrTypeDecl{._field_Elem=_26317_elem}))});
}



inline jule::Ptr<_1e5d54961_TypeDecl> _1c9a01e54_buildSptr(_1c99eedca_typeBuilder* _self_) {
	jule::Ptr<_1e47137a5_Token> _27717_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_1c9a0046e_pushErr(&(*_self_), _27717_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1e5d54961_TypeDecl> _28417_elem = _1c9a03021_step(&(*_self_));;
	if ((_28417_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1e5d54961_TypeDecl>(_1e5d54961_TypeDecl{._field_Token=_27717_token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1e5d55d19_SptrTypeDecl>(_1e5d55d19_SptrTypeDecl{._field_Elem=_28417_elem}))});
}



inline jule::Ptr<_1e5d54961_TypeDecl> _1c9a021b8_buildOp(_1c99eedca_typeBuilder* _self_) {
	jule::Ptr<_1e47137a5_Token> _29817_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _29817_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1b31a9d93:;
			{
				return _1c9a01be0_buildPtr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1b31a9e09:;
			{
				return _1c9a01e54_buildSptr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1b31a9e70:;
			{
				return jule::new_ptr<_1e5d54961_TypeDecl>(_1e5d54961_TypeDecl{._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1e5d55d19_SptrTypeDecl>(_1e5d55d19_SptrTypeDecl{._field_Elem=_1c9a01e54_buildSptr(&(*_self_))}))});
			}
		}
		else {
			_case_begin_1b31a9cd8:;
			{
				_1c9a0046e_pushErr(&(*_self_), _29817_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_1b31a9c3e:;
	};
}



inline jule::Ptr<_1e5d54961_TypeDecl> _1c9a0242c_buildSlc(_1c99eedca_typeBuilder* _self_) {
	jule::Ptr<_1e47137a5_Token> _31717_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1e5d54961_TypeDecl> _31917_elem = _1c9a03021_step(&(*_self_));;
	if ((_31917_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1e5d54961_TypeDecl>(_1e5d54961_TypeDecl{._field_Token=_31717_token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1e5d56215_SlcTypeDecl>(_1e5d56215_SlcTypeDecl{._field_Elem=_31917_elem}))});
}



inline jule::Ptr<_1e5d54961_TypeDecl> _1c9a02691_buildArr(_1c99eedca_typeBuilder* _self_) {
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		_1c9a0046e_pushErr(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("type missing", 12));
		return nullptr;
	};
	jule::I64 _34013_exprDelta = (*((*_self_)._field_i));;
	jule::Ptr<_1e5d54961_TypeDecl> _34217_elem = _1c9a03021_step(&(*_self_));;
	if ((_34217_elem == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1e5d56e6e_ArrTypeDecl> _34717_arrt = jule::new_ptr<_1e5d56e6e_ArrTypeDecl>(_1e5d56e6e_ArrTypeDecl{._field_Elem=_34217_elem, });;
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _35117_exprTokens = (*_self_)._field_tokens.slice(0LL,_34013_exprDelta);;
	std::tie(std::ignore,_35117_exprTokens) = _1c99dc307_rangeLast(_35117_exprTokens);
	_35117_exprTokens=_35117_exprTokens.slice(1LL,(_35117_exprTokens.len() - 1LL));
	jule::Ptr<_1e47137a5_Token> _35417_token = _35117_exprTokens[0LL];;
	if ((((_35117_exprTokens.len() == 1LL) && (_35417_token.get()._field_Id == static_cast<jule::U64>(7LLU))) && (_35417_token.get()._field_Kind == jule::Str("...", 3)))) {
	} else {
		_34717_arrt.get()._field_Size=_1c99ded87_buildExpr((*_self_)._field_p, _35117_exprTokens);
	};
	return jule::new_ptr<_1e5d54961_TypeDecl>(_1e5d54961_TypeDecl{._field_Token=_35417_token, ._field_Kind=static_cast<jule::Any>(_34717_arrt)});
}



inline jule::Ptr<_1e5d54961_TypeDecl> _1c9a02a48_buildMap(_1c99eedca_typeBuilder* _self_, jule::I64 _36734_start, jule::I64 _36746_delim) {
	jule::Ptr<_1e47137a5_Token> _36817_delimToken = (*_self_)._field_tokens[_36746_delim];;
	if (((_36746_delim == 0LL) || ((_36746_delim + 1LL) >= (*_self_)._field_tokens.len()))) {
		_1c9a0046e_pushErr(&(*_self_), _36817_delimToken,jule::Str("type missing", 12));
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _37517_keyTokens = (*_self_)._field_tokens.slice((_36734_start + 1LL),(_36746_delim - 1LL));;
	if ((_37517_keyTokens.len() == 0LL)) {
		_1c9a0046e_pushErr(&(*_self_), _36817_delimToken,jule::Str("type missing", 12));
		return nullptr;
	};
	jule::Ptr<_1e5d576bc_MapTypeDecl> _38117_mapt = jule::new_ptr<_1e5d576bc_MapTypeDecl>();;
	jule::I64 _38317_j = 0LL;;
	jule::Ptr<_1e5d54961_TypeDecl> _38418_keyt;;
	jule::Bool _38428_ok;;
	std::tie(_38418_keyt,_38428_ok) = _1c99e1174_buildType((*_self_)._field_p, _37517_keyTokens,(&(_38317_j)),(*_self_)._field_err);
	if ((!(_38428_ok))) {
		return nullptr;
	} else if ((_38317_j < _37517_keyTokens.len())) {
		_1c9a0046e_pushErr(&(*_self_), _37517_keyTokens[_38317_j],jule::Str("invalid syntax", 14));
	};
	_38117_mapt.get()._field_Key=_38418_keyt;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1e5d54961_TypeDecl> _39318_valt;;
	std::tie(_39318_valt,_38428_ok) = _1c99e1174_buildType((*_self_)._field_p, (*_self_)._field_tokens,(*_self_)._field_i,(*_self_)._field_err);
	if ((!(_38428_ok))) {
		return nullptr;
	};
	_38117_mapt.get()._field_Val=_39318_valt;
	return jule::new_ptr<_1e5d54961_TypeDecl>(_1e5d54961_TypeDecl{._field_Token=_36817_delimToken, ._field_Kind=static_cast<jule::Any>(_38117_mapt)});
}



inline jule::Ptr<_1e5d54961_TypeDecl> _1c9a02cac_buildEnumerable(_1c99eedca_typeBuilder* _self_) {
	jule::Ptr<_1e47137a5_Token> _40517_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((((*((*_self_)._field_i)) + 2LL) >= (*_self_)._field_tokens.len()) || (_40517_token.get()._field_Id != static_cast<jule::U64>(3LLU))) || (_40517_token.get()._field_Kind != jule::Str("[", 1)))) {
		_1c9a0046e_pushErr(&(*_self_), _40517_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	_40517_token=(*_self_)._field_tokens[(*((*_self_)._field_i))];
	if (((_40517_token.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_40517_token.get()._field_Kind == jule::Str("]", 1)))) {
		return _1c9a0242c_buildSlc(&(*_self_));
	};
	((*((*_self_)._field_i)))--;
	jule::I64 _41913_i = (*((*_self_)._field_i));;
	jule::I64 _42017_delim = _1c99ee8be_mapColon((*_self_)._field_tokens,(*((*_self_)._field_i)));;
	((*((*_self_)._field_i)))++;
	if ((_42017_delim == -1LL)) {
		return _1c9a02691_buildArr(&(*_self_));
	};
	return _1c9a02a48_buildMap(&(*_self_), _41913_i,_42017_delim);
}



inline jule::Ptr<_1e5d54961_TypeDecl> _1c9a03021_step(_1c99eedca_typeBuilder* _self_) {
	jule::Ptr<_1e47137a5_Token> _42913_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _42913_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1b31c11ea:;
			{
				return _1c9a00a02_buildPrim(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1b31c10da:;
			{
				return _1c9a014a3_buildIdent(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1b31c1151:;
			{
				return _1c9a01717_buildCppLink(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1b31c0518:;
			{
				return _1c9a0197b_buildFn(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1b31c057e:;
			{
				return _1c9a021b8_buildOp(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1b31c05e5:;
			{
				return _1c9a02cac_buildEnumerable(&(*_self_));
			}
		}
		else {
			_case_begin_1b31c04a2:;
			{
				((*((*_self_)._field_i)))++;
				_1c9a0046e_pushErr(&(*_self_), _42913_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_1b31c032b:;
	};
}



inline std::tuple<jule::Ptr<_1e5d54961_TypeDecl>,jule::Bool> _1c9a03285_build(_1c99eedca_typeBuilder* _self_) {
	jule::Bool _45244_ok = jule::Bool();
	jule::Ptr<_1e5d54961_TypeDecl> _45317_root = _1c9a03021_step(&(*_self_));;
	if ((_45317_root == nullptr)) {
		_45244_ok = false;
		return std::make_tuple(_1c99ee319_buildVoidType(),_45244_ok);
	};
	_45244_ok = true;
	return std::make_tuple(_45317_root,_45244_ok);
}







std::ostream &operator<<(std::ostream &_Stream, _1c99eedca_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6b9452a_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _1e6b95dcd_pushErr(_1e6b9587d_directiveEval* _self_, jule::Ptr<_1e47137a5_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	(*_self_)._field_logs = jule::alloc_for_append((*_self_)._field_logs,1);(*_self_)._field_logs.__push(_1e43e3a18_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_2126_t.get()._field_Row, ._field_Column=_2126_t.get()._field_Column, ._field_Path=_2126_t.get()._field_File.get()._field_Path, ._field_Text=_1e43e3e58_Logf(_2137_fmt,jule::Any(_2150_args)), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>> _1e6b96285_splitOperans(_1e6b9587d_directiveEval* _self_, jule::Str _3331_op, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _3351_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>> _3417_parts = jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>>::alloc(0LL,10LL);;
	jule::I64 _3617_i = 0LL;;
	jule::I64 _3717_rangeN = 0LL;;
	jule::I64 _3817_last = 0LL;;
	for (; (_3617_i < (_3351_tokens.len() - 1LL)); (_3617_i)++) {
		{
			jule::Ptr<_1e47137a5_Token> _4017_b = _3351_tokens[_3617_i];;
			if ((_4017_b.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _4017_b.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1b31e7683:;
						{
							(_3717_rangeN)++;
							goto _iter_next_1b31e6583;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1b31e76e9:;
						{
							(_3717_rangeN)--;
						}
					}
					_match_end_1b31e7474:;
				};
			};
			if (((_3717_rangeN > 0LL) || (_4017_b.get()._field_Id != static_cast<jule::U64>(7LLU)))) {
				goto _iter_next_1b31e6583;
			};
			if ((_4017_b.get()._field_Kind == _3331_op)) {
				_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3351_tokens.slice(_3817_last,_3617_i));;
				_3817_last=static_cast<jule::I64>((_3617_i + 1LL));
			};
		}
	_iter_next_1b31e6583:;
	}
	_iter_end_1b31e6583:;;
	if ((_3817_last < _3351_tokens.len())) {
		_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3351_tokens.slice(_3817_last));;
	} else {
		_1e6b95dcd_pushErr(&(*_self_), _3351_tokens[(_3817_last - 1LL)],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _3417_parts;
}



inline jule::Bool _1e6b96593_evalDirectiveIdent(_1e6b9587d_directiveEval* _self_, jule::Str _7333_ident) {
	if (_7333_ident.empty()) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1b31eac08:;
		if (it != expr.end()) {
			jule::Str &_7716_var = *it;
			{
				if ((_7716_var == _7333_ident)) {
					return true;
				};
			}
			_iter_next_1b31eac08:;
			++it;
			goto _iter_begin_1b31eac08;
		}
		_iter_end_1b31eac08:;
	};
	return false;
}



inline jule::Bool _1e6b968a1_evalDirectivePart(_1e6b9587d_directiveEval* _self_, jule::Slice<jule::Ptr<_1e47137a5_Token>> _8740_part) {
	jule::Bool _8813_logicalNot = ((_8740_part[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_8740_part[0LL].get()._field_Kind == jule::Str("!", 1)));;
	if (_8813_logicalNot) {
		_8740_part=_8740_part.slice(1LL);
	};
	if ((_8740_part.len() > 1LL)) {
		_1e6b95dcd_pushErr(&(*_self_), _8740_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	};
	jule::Bool _9817_result = _1e6b96593_evalDirectiveIdent(&(*_self_), _8740_part[0LL].get()._field_Kind);;
	if (_8813_logicalNot) {
		_9817_result=(!(_9817_result));
	};
	return _9817_result;
}



inline jule::Bool _1e6b96b15_eval(_1e6b9587d_directiveEval* _self_) {
	if (((*_self_)._field_d.get()._field_Args.len() == 0LL)) {
		_1e6b95dcd_pushErr(&(*_self_), (*_self_)._field_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return false;
	};
	jule::Bool _11117_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>> _11317_logicalOrParts = _1e6b96285_splitOperans(&(*_self_), jule::Str("||", 2),(*_self_)._field_d.get()._field_Args);;
	if ((_11317_logicalOrParts == nullptr)) {
		return false;
	};
	{
		auto &expr = _11317_logicalOrParts;
		auto it = expr.begin();
		_iter_begin_1b3201e2e:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1e47137a5_Token>> _11821_part = *it;
			{
				jule::Bool _11921_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>> _12021_logicalAndParts = _1e6b96285_splitOperans(&(*_self_), jule::Str("&&", 2),_11821_part);;
				if ((_12021_logicalAndParts == nullptr)) {
					return false;
				};
				{
					auto &expr = _12021_logicalAndParts;
					auto it = expr.begin();
					_iter_begin_1b320331a:;
					if (it != expr.end()) {
						jule::Slice<jule::Ptr<_1e47137a5_Token>> _12525_andPart = *it;
						{
							jule::Ptr<_1e47137a5_Token> _12621_first = _12525_andPart[0LL];;
							if (((_12621_first.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_12621_first.get()._field_Kind == jule::Str("(", 1)))) {
								jule::Ptr<_1e47137a5_Token> _12825_end = _12525_andPart[(_12525_andPart.len() - 1LL)];;
								if (((_12825_end.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_12825_end.get()._field_Kind != jule::Str(")", 1)))) {
									_1e6b95dcd_pushErr(&(*_self_), _12621_first,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
									return false;
								};
								_12525_andPart=_12525_andPart.slice(1LL,(_12525_andPart.len() - 1LL));
							};
							_11921_and=(_11921_and && _1e6b968a1_evalDirectivePart(&(*_self_), _12525_andPart));
						}
						_iter_next_1b320331a:;
						++it;
						goto _iter_begin_1b320331a;
					}
					_iter_end_1b320331a:;
				};
				_11117_result=(_11117_result || _11921_and);
			}
			_iter_next_1b3201e2e:;
			++it;
			goto _iter_begin_1b3201e2e;
		}
		_iter_end_1b3201e2e:;
	};
	return _11117_result;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6b9587d_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e708dccb_JuleImporter> static__1e6ee9572_New(_1e6b9452a_CompileInfo _5819_info) {
	jule::Ptr<_1e708dccb_JuleImporter> _5917_imp = jule::new_ptr<_1e708dccb_JuleImporter>(_1e708dccb_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_1e441574e_PathStdlib}), });;
	_1e6b94d44_initVars(_5917_imp.get()._field_vars,_5819_info);
	return _5917_imp;
}



inline jule::Slice<jule::Ptr<_1e6a192e5_ImportInfo>> _1e700a671_AllPackages(_1e708dccb_JuleImporter* _self_) {
	return (*_self_)._field_pkgs;
}



inline void _1e7015a00_SetModPath(_1e708dccb_JuleImporter* _self_, jule::Str _7529_path) {
	(*_self_)._field_mod=_7529_path;
}



inline jule::Str _1e7061650_GetModPath(_1e708dccb_JuleImporter* _self_) {
	return (*_self_)._field_mod;
}



inline jule::Str _1e7063784_ModById(_1e708dccb_JuleImporter* _self_, jule::I64 _8322_id) {
	return (*_self_)._field_mods[_8322_id];
}



inline jule::Ptr<_1e6a192e5_ImportInfo> _1e7073222_GetImport(_1e708dccb_JuleImporter* _self_, jule::Str _8728_path) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1b320a7b7:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a192e5_ImportInfo> _8821_p = *it;
			{
				if ((_8821_p.get()._field_Path == _8728_path)) {
					return _8821_p;
				};
			}
			_iter_next_1b320a7b7:;
			++it;
			goto _iter_begin_1b320a7b7;
		}
		_iter_end_1b320a7b7:;
	};
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_1e5d201bd_Ast>>,jule::Slice<_1e43e3a18_Log>> _1c8b8aa6c_ImportPackage(_1e708dccb_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod) {
	jule::Slice<jule::Ptr<_1e261a48e_DirEntry>> _9717_dirents = ({
		auto except = static__1e33cde66_Read(_9632_path);
		(except.ok()) ? (except.result) : ({{
			return std::make_tuple(nullptr,jule::Slice<_1e43e3a18_Log>::make({_1e6eda9d6_flatCompilerErr((jule::Str("connot read package directory: ", 31) + _9632_path))}));
		} jule::Slice<jule::Ptr<_1e261a48e_DirEntry>>();});
	});;
	if (_9643_update_mod) {
		jule::Str _10217_newMod = _1e6baa4ec_FindModuleFileDeep(_9632_path);;
		if ((_10217_newMod != (*_self_)._field_mod)) {
			(*_self_)._field_mod=_10217_newMod;
			jule::Slice<_1e43e3a18_Log> _10525_errs = _1e6baa783_CheckModuleFile((*_self_)._field_mod);;
			if ((_10525_errs.len() != 0LL)) {
				return std::make_tuple(nullptr,_10525_errs);
			};
		};
	};
	jule::Slice<jule::Ptr<_1e5d201bd_Ast>> _11217_asts = jule::Slice<jule::Ptr<_1e5d201bd_Ast>>::alloc(0LL,_9717_dirents.len());;
	{
		auto &expr = _9717_dirents;
		auto it = expr.begin();
		_iter_begin_1b320ea0d:;
		if (it != expr.end()) {
			jule::Ptr<_1e261a48e_DirEntry> _11316_dirent = *it;
			{
				if ((_1e26092c4_IsDir(_11316_dirent.get()._field_Stat.ptr()) || (!(_1e42deeca_HasSuffix(_11316_dirent.get()._field_Name,jule::Str(".jule", 5)))))) {
					goto _iter_next_1b320ea0d;
				};
				jule::Str _11917__path = _1e34d0919_Join(jule::Slice<jule::Str>::make({_9632_path,_11316_dirent.get()._field_Name}));;
				jule::Ptr<_1e4718b40_File> _12021_file = _1e471a16e_NewFileSet(_11917__path);;
				_1e47192c2_Fill(_12021_file.ptr(), _1e6ed3d0e_readBuff(_12021_file.get()._field_Path));
				jule::Slice<_1e43e3a18_Log> _12221_errors = _1e472a910_Lex(_12021_file,static_cast<jule::I64>(0LL));;
				if ((_12221_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12221_errors);
				};
				jule::Ptr<_1c9978c99_FileInfo> _12721_finfo = _1c99c0494_ParseFile(_12021_file);;
				if ((_12721_finfo.get()._field_Errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12721_finfo.get()._field_Errors);
				};
				if ((!(_1e6b7a335_isPassFileAnnotation(_11316_dirent.get()._field_Name)))) {
					goto _iter_next_1b320ea0d;
				};
				jule::Bool _13718_r;;
				jule::Slice<_1e43e3a18_Log> _13725_logs;;
				std::tie(_13718_r,_13725_logs) = _1c8bac4ea_isPassBuildDirectives(&(*_self_), _12721_finfo.get()._field_Ast);
				if ((_13725_logs.len() > 0LL)) {
					return std::make_tuple(nullptr,_13725_logs);
				};
				if ((!(_13718_r))) {
					goto _iter_next_1b320ea0d;
				};
				_11217_asts = jule::alloc_for_append(_11217_asts,1);_11217_asts.__push(_12721_finfo.get()._field_Ast);;
			}
			_iter_next_1b320ea0d:;
			++it;
			goto _iter_begin_1b320ea0d;
		}
		_iter_end_1b320ea0d:;
	};
	return std::make_tuple(_11217_asts,nullptr);
}



inline void _1c8b94c96_Imported(_1e708dccb_JuleImporter* _self_, jule::Ptr<_1e6a192e5_ImportInfo> _15331_imp) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1b3215591:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a192e5_ImportInfo> _15516_p = *it;
			{
				if (((_15516_p.get()._field_CppLinked == _15331_imp.get()._field_CppLinked) && (_15516_p.get()._field_LinkPath == _15331_imp.get()._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_1b3215591:;
			++it;
			goto _iter_begin_1b3215591;
		}
		_iter_end_1b3215591:;
	};
	if (((*_self_)._field_mod.len() != 0LL)) {
		{
			auto &expr = (*_self_)._field_mods;
			auto it = expr.begin();
			_iter_begin_1b3216e77:;
			if (it != expr.end()) {
				jule::I64 _16217_i = it - expr.begin();
				jule::Str _16220_mod = *it;
				{
					if (((*_self_)._field_mod == _16220_mod)) {
						_15331_imp.get()._field_ModId=_16217_i;
						goto _julec_label_setted;
					};
				}
				_iter_next_1b3216e77:;
				++it;
				_16217_i++;
				goto _iter_begin_1b3216e77;
			}
			_iter_end_1b3216e77:;
		};
		_15331_imp.get()._field_ModId=static_cast<jule::I64>((*_self_)._field_mods.len());
		(*_self_)._field_mods = jule::alloc_for_append((*_self_)._field_mods,1);(*_self_)._field_mods.__push((*_self_)._field_mod);;
		_julec_label_setted:;
	};
	(*_self_)._field_pkgs = jule::alloc_for_append((*_self_)._field_pkgs,1);(*_self_)._field_pkgs.__push(_15331_imp);;
}



inline std::tuple<jule::Bool,jule::Slice<_1e43e3a18_Log>> _1c8bac4ea_isPassBuildDirectives(_1e708dccb_JuleImporter* _self_, jule::Ptr<_1e5d201bd_Ast>& _17945_file) {
	{
		auto &expr = _17945_file.get()._field_TopDirectives;
		auto it = expr.begin();
		_iter_begin_1b321a200:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d21268_Directive> _18021_td = *it;
			{
				if ((_18021_td.get()._field_Tag.get()._field_Kind != jule::Str("build", 5))) {
					goto _iter_next_1b321a200;
				};
				_1e6b9587d_directiveEval _18421_de = _1e6b9587d_directiveEval{._field_d=_18021_td, ._field_vars=(*_self_)._field_vars};;
				jule::Bool _18817_result = _1e6b96b15_eval(&_18421_de);;
				if ((_18421_de._field_logs.len() > 0LL)) {
					return std::make_tuple(false,_18421_de._field_logs);
				};
				if ((!(_18817_result))) {
					return std::make_tuple(false,nullptr);
				};
			}
			_iter_next_1b321a200:;
			++it;
			goto _iter_begin_1b321a200;
		}
		_iter_end_1b321a200:;
	};
	return std::make_tuple(true,nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e708dccb_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c8ba744b_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b323c51e_isCommonOrdered(jule::Slice<jule::Ptr<_1e5d4518d_Struct>>& _1835_s, jule::Ptr<_1e5d4518d_Struct> _1844_t) {
	jule::Ptr<_1e5d4518d_Struct>* _1917_p = (&(_1844_t.get()._field_Depends[0LL]));;
	jule::Ptr<_1e5d4518d_Struct>* _2013_end = (_1917_p + _1844_t.get()._field_Depends.len());;
	{
		auto &expr = _1835_s;
		auto it = expr.begin();
		_iter_begin_1b3240456:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d4518d_Struct> &_2116_tt = *it;
			{
				{
					if ((_2116_tt == _1844_t)) {
						goto _iter_end_1b3240456;
					};
					if ((((*(_1917_p)).get()._field_CppLinked || ((*(_1917_p)).get()._field_Depends.len() == 0LL)) || (_2116_tt == (*(_1917_p))))) {
						(_1917_p)++;
						if ((_1917_p == _2013_end)) {
							return true;
						};
					};
				};
			}
			_iter_next_1b3240456:;
			++it;
			goto _iter_begin_1b3240456;
		}
		_iter_end_1b3240456:;
	};
	return false;
}

inline jule::Bool _1b32458ce_isCommonOrdered(jule::Slice<jule::Ptr<_1e6a3dd20_Var>>& _1835_s, jule::Ptr<_1e6a3dd20_Var> _1844_t) {
	jule::Ptr<_1e6a3dd20_Var>* _1917_p = (&(_1844_t.get()._field_Depends[0LL]));;
	jule::Ptr<_1e6a3dd20_Var>* _2013_end = (_1917_p + _1844_t.get()._field_Depends.len());;
	{
		auto &expr = _1835_s;
		auto it = expr.begin();
		_iter_begin_1b32487c2:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a3dd20_Var> &_2116_tt = *it;
			{
				{
					if ((_2116_tt == _1844_t)) {
						goto _iter_end_1b32487c2;
					};
					if ((((*(_1917_p)).get()._field_CppLinked || ((*(_1917_p)).get()._field_Depends.len() == 0LL)) || (_2116_tt == (*(_1917_p))))) {
						(_1917_p)++;
						if ((_1917_p == _2013_end)) {
							return true;
						};
					};
				};
			}
			_iter_next_1b32487c2:;
			++it;
			goto _iter_begin_1b32487c2;
		}
		_iter_end_1b32487c2:;
	};
	return false;
}



inline void _1b323855e_orderCommon(jule::Slice<jule::Ptr<_1e5d4518d_Struct>>& _3935_s) {
	jule::I64 _4017_i = 0LL;;
	{
		auto &expr = _3935_s;
		auto it = expr.begin();
		_iter_begin_1b32398b2:;
		if (it != expr.end()) {
			jule::I64 _4114_j = it - expr.begin();
			jule::Ptr<_1e5d4518d_Struct> _4121_t = *it;
			{
				if ((_4121_t.get()._field_CppLinked || (_4121_t.get()._field_Depends.len() == 0LL))) {
					_3935_s.swap(_4017_i,_4114_j);
					(_4017_i)++;
				};
			}
			_iter_next_1b32398b2:;
			++it;
			_4114_j++;
			goto _iter_begin_1b32398b2;
		}
		_iter_end_1b32398b2:;
	};
	jule::I64 _4817_j = _4017_i;;
	for (; (_4817_j < _3935_s.len()); (_4817_j)++) {
		{
			jule::I64 _5021_k = _4017_i;;
			for (; (_5021_k < (_3935_s.len() - 1LL)); (_5021_k)++) {
				{
					if ((!(_1b323c51e_isCommonOrdered(_3935_s,_3935_s[_5021_k])))) {
						_3935_s.swap(_5021_k,static_cast<jule::I64>((_5021_k + 1LL)));
					};
				}
			_iter_next_1b323be36:;
			}
			_iter_end_1b323be36:;;
		}
	_iter_next_1b323983a:;
	}
	_iter_end_1b323983a:;;
}

inline void _1b323877e_orderCommon(jule::Slice<jule::Ptr<_1e6a3dd20_Var>>& _3935_s) {
	jule::I64 _4017_i = 0LL;;
	{
		auto &expr = _3935_s;
		auto it = expr.begin();
		_iter_begin_1b3242c72:;
		if (it != expr.end()) {
			jule::I64 _4114_j = it - expr.begin();
			jule::Ptr<_1e6a3dd20_Var> _4121_t = *it;
			{
				if ((_4121_t.get()._field_CppLinked || (_4121_t.get()._field_Depends.len() == 0LL))) {
					_3935_s.swap(_4017_i,_4114_j);
					(_4017_i)++;
				};
			}
			_iter_next_1b3242c72:;
			++it;
			_4114_j++;
			goto _iter_begin_1b3242c72;
		}
		_iter_end_1b3242c72:;
	};
	jule::I64 _4817_j = _4017_i;;
	for (; (_4817_j < _3935_s.len()); (_4817_j)++) {
		{
			jule::I64 _5021_k = _4017_i;;
			for (; (_5021_k < (_3935_s.len() - 1LL)); (_5021_k)++) {
				{
					if ((!(_1b32458ce_isCommonOrdered(_3935_s,_3935_s[_5021_k])))) {
						_3935_s.swap(_5021_k,static_cast<jule::I64>((_5021_k + 1LL)));
					};
				}
			_iter_next_1b32452e6:;
			}
			_iter_end_1b32452e6:;;
		}
	_iter_next_1b3242bea:;
	}
	_iter_end_1b3242bea:;;
}



inline void static__1c8cda5c3_orderStructures(jule::Slice<jule::Ptr<_1e5d4518d_Struct>>& _6136_structs) {
	_1b323855e_orderCommon(_6136_structs);
}



inline void static__1c8d04356_orderVars(jule::Slice<jule::Ptr<_1e6a3dd20_Var>>& _6730_vars) {
	_1b323877e_orderCommon(_6730_vars);
}







std::ostream &operator<<(std::ostream &_Stream, _1c8b885d6_defineOrderer _Src) {
	_Stream << "defineOrderer{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c9acde98_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _1c9b110a7_optimizeChild(jule::Ptr<_1c9b10ace_scopeDeadCode> _self_, jule::Ptr<_1e6a06700_Scope>& _3938_s) {
	jule::Ptr<_1c9b10ace_scopeDeadCode> _4017_sdc = jule::new_ptr<_1c9b10ace_scopeDeadCode>(_1c9b10ace_scopeDeadCode{._field_parent=_self_, ._field_s=_3938_s, ._field_stmts=(&(_3938_s.get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1c9b136e7_optimizeStmts(_4017_sdc);
	};
}



inline void _1c9b1134e_optimizeBodyChildExceptional(jule::Ptr<_1c9b10ace_scopeDeadCode> _self_, jule::Ptr<_1e6a06700_Scope>& _5053_s) {
	jule::Ptr<_1c9b10ace_scopeDeadCode> _5117_sdc = jule::new_ptr<_1c9b10ace_scopeDeadCode>(_1c9b10ace_scopeDeadCode{._field_s=_5053_s, ._field_stmts=(&(_5053_s.get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, ._field_except=true});;
	{
		_1c9b136e7_optimizeStmts(_5117_sdc);
	};
}



inline void _1c9b115d5_optimizeBodyChild(jule::Ptr<_1c9b10ace_scopeDeadCode> _self_, jule::Ptr<_1e6a06700_Scope>& _6142_s) {
	jule::Ptr<_1c9b10ace_scopeDeadCode> _6217_sdc = jule::new_ptr<_1c9b10ace_scopeDeadCode>(_1c9b10ace_scopeDeadCode{._field_s=_6142_s, ._field_stmts=(&(_6142_s.get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1c9b136e7_optimizeStmts(_6217_sdc);
	};
}



inline void _1c9b1185a_optimizeExprModel(jule::Ptr<_1c9b10ace_scopeDeadCode> _self_, jule::Any& _7142_model) {
	_1c9b14a39_exprDeadCode _7213_edc = static__1c9b15133_new(_self_);;
	_1c9b1a5cd_optimize(&_7213_edc, _7142_model);
}



inline void _1c9b11a36_eliminateFollowed(_1c9b10ace_scopeDeadCode* _self_) {
	if (((*_self_)._field_gotos.get().len() != 0LL)) {
		return;;
	};
	{
		(*((*_self_)._field_stmts))=(*((*_self_)._field_stmts)).slice(0LL,((*_self_)._field_i + 1LL));
	};
	jule::Ptr<_1c9b10ace_scopeDeadCode> _8317_parent = (*_self_)._field_parent;;
	while ((_8317_parent != nullptr)) {
		{
			{
				(*(_8317_parent.get()._field_stmts))=(*(_8317_parent.get()._field_stmts)).slice(0LL,(_8317_parent.get()._field_i + 1LL));
			};
			_8317_parent=_8317_parent.get()._field_parent;
		}
	_iter_next_1b32bd12c:;
	}
	_iter_end_1b32bd12c:;;
}



inline void _1c9b11cab_pushGoto(jule::Ptr<_1c9b10ace_scopeDeadCode> _self_, jule::Ptr<_1e6a07b30_GotoSt> _9232_gt) {
	jule::I64 _9317_i = 0LL;;
	for (; (_9317_i < _self_.get()._field_labels.get().len()); (_9317_i)++) {
		{
			if ((_9232_gt.get()._field_Ident == (*(_self_.get()._field_labels))[_9317_i].get()._field_Ident)) {
				return;;
			};
		}
	_iter_next_1b32c0a58:;
	}
	_iter_end_1b32c0a58:;;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1e6a07b30_GotoSt>>::make({_9232_gt}));
}



inline void _1c9b12031_pushLabel(jule::Ptr<_1c9b10ace_scopeDeadCode> _self_, jule::Ptr<_1e6a07943_Label> _10233_l) {
	jule::I64 _10317_i = 0LL;;
	while ((_10317_i < _self_.get()._field_gotos.get().len())) {
		{
			if ((_10233_l.get()._field_Ident == (*(_self_.get()._field_gotos))[_10317_i].get()._field_Ident)) {
				jule::copy(((*(_self_.get()._field_gotos)).slice(_10317_i)), ((*(_self_.get()._field_gotos)).slice((_10317_i + 1LL))));
				(*(_self_.get()._field_gotos))=(*(_self_.get()._field_gotos)).slice(0LL,(_self_.get()._field_gotos.get().len() - 1LL));
				goto _iter_next_1b32c27c4;
			};
			(_10317_i)++;
		}
	_iter_next_1b32c27c4:;
	}
	_iter_end_1b32c27c4:;;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1e6a07943_Label>>::make({_10233_l}));
}



inline void _1c9b122a6_optimizeRangeIter(jule::Ptr<_1c9b10ace_scopeDeadCode> _self_, jule::Ptr<_1e6a0737c_RangeIter> _11541_it) {
	_1c9b1185a_optimizeExprModel(_self_, _11541_it.get()._field_Expr.get()._field_Model);
	_1c9b115d5_optimizeBodyChild(_self_, _11541_it.get()._field_Scope);
}



inline void _1c9b1252b_optimizeWhileIter(jule::Ptr<_1c9b10ace_scopeDeadCode> _self_, jule::Ptr<_1e6a07190_WhileIter> _12041_it) {
	_1c9b1185a_optimizeExprModel(_self_, _12041_it.get()._field_Expr);
	if ((_12041_it.get()._field_Next != nullptr)) {
		_1c9b1351b_optimizeStmt(_self_, _12041_it.get()._field_Next);
	};
	_1c9b115d5_optimizeBodyChild(_self_, _12041_it.get()._field_Scope);
}



inline void _1c9b127a1_optimizeInfIter(jule::Ptr<_1c9b10ace_scopeDeadCode> _self_, jule::Ptr<_1e6a06ea3_InfIter> _12839_it) {
	_1c9b115d5_optimizeBodyChild(_self_, _12839_it.get()._field_Scope);
}



inline void _1c9b12a26_optimizeConditional(jule::Ptr<_1c9b10ace_scopeDeadCode> _self_, jule::Ptr<_1e6a06cb6_Conditional> _13243_c) {
	{
		auto &expr = _13243_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1b32c8324:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a068dc_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_1c9b1185a_optimizeExprModel(_self_, _13321_case.get()._field_Expr);
					_1c9b115d5_optimizeBodyChild(_self_, _13321_case.get()._field_Scope);
				};
			}
			_iter_next_1b32c8324:;
			++it;
			goto _iter_begin_1b32c8324;
		}
		_iter_end_1b32c8324:;
	};
	if ((_13243_c.get()._field_Default != nullptr)) {
		if ((_13243_c.get()._field_Elifs.len() == 0LL)) {
			_1c9b110a7_optimizeChild(_self_, _13243_c.get()._field_Default.get()._field_Scope);
		} else {
			_1c9b115d5_optimizeBodyChild(_self_, _13243_c.get()._field_Default.get()._field_Scope);
		};
	};
}



inline void _1c9b12c9b_optimizeMatch(jule::Ptr<_1c9b10ace_scopeDeadCode> _self_, jule::Ptr<_1e6a083d3_Match> _15037_m) {
	{
		auto &expr = _15037_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1b32cae81:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a08933_Case> _15121_case = *it;
			{
				{
					auto &expr = _15121_case.get()._field_Exprs;
					auto it = expr.begin();
					_iter_begin_1b32cb800:;
					if (it != expr.end()) {
						jule::Ptr<_1e6a8ac6d_Data> _15225_expr = *it;
						{
							_1c9b1185a_optimizeExprModel(_self_, _15225_expr.get()._field_Model);
						}
						_iter_next_1b32cb800:;
						++it;
						goto _iter_begin_1b32cb800;
					}
					_iter_end_1b32cb800:;
				};
				_1c9b115d5_optimizeBodyChild(_self_, _15121_case.get()._field_Scope);
			}
			_iter_next_1b32cae81:;
			++it;
			goto _iter_begin_1b32cae81;
		}
		_iter_end_1b32cae81:;
	};
	if ((_15037_m.get()._field_Default != nullptr)) {
		if ((_15037_m.get()._field_Cases.len() == 0LL)) {
			_1c9b110a7_optimizeChild(_self_, _15037_m.get()._field_Default.get()._field_Scope);
		} else {
			_1c9b115d5_optimizeBodyChild(_self_, _15037_m.get()._field_Default.get()._field_Scope);
		};
	};
}



inline void _1c9b13021_optimizeAssign(jule::Ptr<_1c9b10ace_scopeDeadCode> _self_, jule::Ptr<_1e6a08009_Assign> _16838_assign) {
	_1c9b1185a_optimizeExprModel(_self_, _16838_assign.get()._field_L.get()._field_Model);
	_1c9b1185a_optimizeExprModel(_self_, _16838_assign.get()._field_R.get()._field_Model);
}



inline void _1c9b13296_optimizeMultiAssign(jule::Ptr<_1c9b10ace_scopeDeadCode> _self_, jule::Ptr<_1e6a081e6_MultiAssign> _17343_assign) {
	{
		auto &expr = _17343_assign.get()._field_L;
		auto it = expr.begin();
		_iter_begin_1b32cec98:;
		if (it != expr.end()) {
			jule::Any _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_1c9b1185a_optimizeExprModel(_self_, _17421_l);
				};
			}
			_iter_next_1b32cec98:;
			++it;
			goto _iter_begin_1b32cec98;
		}
		_iter_end_1b32cec98:;
	};
	_1c9b1185a_optimizeExprModel(_self_, _17343_assign.get()._field_R);
}



inline void _1c9b1351b_optimizeStmt(jule::Ptr<_1c9b10ace_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type_is<jule::Ptr<_1e6a06700_Scope>>()) {
			_case_begin_1b32d13d7:;
			{
				jule::Ptr<_1e6a06700_Scope> _18521_scope = _18236_st.operator jule::Ptr<_1e6a06700_Scope>();;
				if (_18521_scope.get()._field_Deferred) {
					_1c9b139d3_eliminateDeadCodeOfScope(_18521_scope);
				} else {
					_1c9b110a7_optimizeChild(_self_, _18521_scope);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a0737c_RangeIter>>()) {
			_case_begin_1b32d155d:;
			{
				_1c9b122a6_optimizeRangeIter(_self_, _18236_st.operator jule::Ptr<_1e6a0737c_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a07190_WhileIter>>()) {
			_case_begin_1b32d15c4:;
			{
				_1c9b1252b_optimizeWhileIter(_self_, _18236_st.operator jule::Ptr<_1e6a07190_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a06ea3_InfIter>>()) {
			_case_begin_1b32d163a:;
			{
				_1c9b127a1_optimizeInfIter(_self_, _18236_st.operator jule::Ptr<_1e6a06ea3_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a06cb6_Conditional>>()) {
			_case_begin_1b32d16b2:;
			{
				_1c9b12a26_optimizeConditional(_self_, _18236_st.operator jule::Ptr<_1e6a06cb6_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a083d3_Match>>()) {
			_case_begin_1b32d1739:;
			{
				_1c9b12c9b_optimizeMatch(_self_, _18236_st.operator jule::Ptr<_1e6a083d3_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a08009_Assign>>()) {
			_case_begin_1b32d17b1:;
			{
				_1c9b13021_optimizeAssign(_self_, _18236_st.operator jule::Ptr<_1e6a08009_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a081e6_MultiAssign>>()) {
			_case_begin_1b32d1838:;
			{
				_1c9b13296_optimizeMultiAssign(_self_, _18236_st.operator jule::Ptr<_1e6a081e6_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a8ac6d_Data>>()) {
			_case_begin_1b32d18b0:;
			{
				jule::Ptr<_1e6a8ac6d_Data> _20621_d = _18236_st.operator jule::Ptr<_1e6a8ac6d_Data>();;
				if (_self_.get()._field_except) {
					goto _match_end_1b32d14e7;
				};
				{
					auto &_match_expr{ _20621_d.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_1e5e19185_BuiltinErrorCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e5e186e5_BuiltinPanicCallExprModel>>()) {
						_case_begin_1b32d6a4c:;
						{
							_1c9b11a36_eliminateFollowed(_self_.ptr());
						}
					}
					else {
						_case_begin_1b32d7069:;
						{
							_1c9b1185a_optimizeExprModel(_self_, _20621_d.get()._field_Model);
						}
					}
					_match_end_1b32d7014:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a08e3e_RetSt>>()) {
			_case_begin_1b32d1937:;
			{
				_1c9b11a36_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a07b30_GotoSt>>()) {
			_case_begin_1b32d19ae:;
			{
				_1c9b11cab_pushGoto(_self_, _18236_st.operator jule::Ptr<_1e6a07b30_GotoSt>());
				_1c9b11a36_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a07943_Label>>()) {
			_case_begin_1b32d1a36:;
			{
				_1c9b12031_pushLabel(_self_, _18236_st.operator jule::Ptr<_1e6a07943_Label>());
			}
		}
		_match_end_1b32d14e7:;
	};
}



inline void _1c9b136e7_optimizeStmts(jule::Ptr<_1c9b10ace_scopeDeadCode> _self_) {
	_self_.get()._field_i=0LL;
	for (; (_self_.get()._field_i < _self_.get()._field_stmts->len()); (_self_.get()._field_i)++) {
		{
			_1c9b1351b_optimizeStmt(_self_, (*(_self_.get()._field_stmts))[_self_.get()._field_i]);
		}
	_iter_next_1b32d8e5b:;
	}
	_iter_end_1b32d8e5b:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c9b10ace_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _1c9b14a39_exprDeadCode static__1c9b15133_new(jule::Ptr<_1c9b10ace_scopeDeadCode>& _4724_s) {
	return _1c9b14a39_exprDeadCode{._field_s=_4724_s};
}



inline void _1c9b153a8_binary(_1c9b14a39_exprDeadCode* _self_, jule::Ptr<_1e5e153a1_BinopExprModel> _5325_m) {
	_1c9b1a5cd_optimize(&(*_self_), _5325_m.get()._field_Left.get()._field_Model);
	_1c9b1a5cd_optimize(&(*_self_), _5325_m.get()._field_Right.get()._field_Model);
}



inline void _1c9b1562d_unary(_1c9b14a39_exprDeadCode* _self_, jule::Ptr<_1e5e1558d_UnaryExprModel> _5824_m) {
	_1c9b1a5cd_optimize(&(*_self_), _5824_m.get()._field_Expr.get()._field_Model);
}



inline void _1c9b158a3_structureLit(_1c9b14a39_exprDeadCode* _self_, jule::Ptr<_1e5e15967_StructLitExprModel> _6231_m) {
	{
		auto &expr = _6231_m.get()._field_Args;
		auto it = expr.begin();
		_iter_begin_1b32dc624:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e1577a_StructArgExprModel> _6321_arg = *it;
			{
				_1c9b1a5cd_optimize(&(*_self_), _6321_arg.get()._field_Expr);
			}
			_iter_next_1b32dc624:;
			++it;
			goto _iter_begin_1b32dc624;
		}
		_iter_end_1b32dc624:;
	};
}



inline void _1c9b15b28_allocStructure(_1c9b14a39_exprDeadCode* _self_, jule::Ptr<_1e5e15b54_AllocStructLitExprModel> _6833_m) {
	_1c9b158a3_structureLit(&(*_self_), _6833_m.get()._field_Lit);
}



inline void _1c9b15d9d_casting(_1c9b14a39_exprDeadCode* _self_, jule::Ptr<_1e5e15d41_CastingExprModel> _7226_m) {
	_1c9b1a5cd_optimize(&(*_self_), _7226_m.get()._field_Expr);
}



inline void _1c9b16123_args(_1c9b14a39_exprDeadCode* _self_, jule::Slice<jule::Any>& _7624_args) {
	{
		auto &expr = _7624_args;
		auto it = expr.begin();
		_iter_begin_1b32de89b:;
		if (it != expr.end()) {
			jule::Any _7721_arg = *it;
			{
				_1c9b1a5cd_optimize(&(*_self_), _7721_arg);
			}
			_iter_next_1b32de89b:;
			++it;
			goto _iter_begin_1b32de89b;
		}
		_iter_end_1b32de89b:;
	};
}



inline void _1c9b16398_funcCall(_1c9b14a39_exprDeadCode* _self_, jule::Ptr<_1e5e1602d_FnCallExprModel> _8227_m) {
	_1c9b1a5cd_optimize(&(*_self_), _8227_m.get()._field_Expr);
	_1c9b16123_args(&(*_self_), _8227_m.get()._field_Args);
	if ((_8227_m.get()._field_Except != nullptr)) {
		_1c9b1134e_optimizeBodyChildExceptional((*_self_)._field_s, _8227_m.get()._field_Except);
	};
}



inline void _1c9b1661d_slice(_1c9b14a39_exprDeadCode* _self_, jule::Ptr<_1e5e1621a_SliceExprModel> _9024_m) {
	_1c9b16123_args(&(*_self_), _9024_m.get()._field_Elems);
}



inline void _1c9b16893_array(_1c9b14a39_exprDeadCode* _self_, jule::Ptr<_1e5e1768e_ArrayExprModel> _9424_m) {
	if (((_9424_m.get()._field_Elems.len() == 2LL) && (_9424_m.get()._field_Elems[1LL] == nullptr))) {
		_1c9b1a5cd_optimize(&(*_self_), _9424_m.get()._field_Elems[0LL]);
	};
	_1c9b16123_args(&(*_self_), _9424_m.get()._field_Elems);
}



inline void _1c9b16b18_indexing(_1c9b14a39_exprDeadCode* _self_, jule::Ptr<_1e5e16407_IndexingExprModel> _10127_m) {
	_1c9b1a5cd_optimize(&(*_self_), _10127_m.get()._field_Expr.get()._field_Model);
	_1c9b1a5cd_optimize(&(*_self_), _10127_m.get()._field_Index.get()._field_Model);
}



inline void _1c9b16d8d_anonFunc(_1c9b14a39_exprDeadCode* _self_, jule::Ptr<_1e5e165e4_AnonFnExprModel> _10627_m) {
	_1c9b139d3_eliminateDeadCodeOfScope(_10627_m.get()._field_Func.get()._field_Scope);
}



inline void _1c9b17113_map(_1c9b14a39_exprDeadCode* _self_, jule::Ptr<_1e5e169bd_MapExprModel> _11022_m) {
	{
		auto &expr = _11022_m.get()._field_Entries;
		auto it = expr.begin();
		_iter_begin_1b32e57d6:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e167d1_KeyValPairExprModel> _11121_pair = *it;
			{
				_1c9b1a5cd_optimize(&(*_self_), _11121_pair.get()._field_Key);
				_1c9b1a5cd_optimize(&(*_self_), _11121_pair.get()._field_Val);
			}
			_iter_next_1b32e57d6:;
			++it;
			goto _iter_begin_1b32e57d6;
		}
		_iter_end_1b32e57d6:;
	};
}



inline void _1c9b17388_slicing(_1c9b14a39_exprDeadCode* _self_, jule::Ptr<_1e5e16baa_SlicingExprModel> _11726_m) {
	_1c9b1a5cd_optimize(&(*_self_), _11726_m.get()._field_Expr);
	_1c9b1a5cd_optimize(&(*_self_), _11726_m.get()._field_Left);
	if ((_11726_m.get()._field_Right != nullptr)) {
		_1c9b1a5cd_optimize(&(*_self_), _11726_m.get()._field_Right);
	};
}



inline void _1c9b1760d_traitSub(_1c9b14a39_exprDeadCode* _self_, jule::Ptr<_1e5e16d97_TraitSubIdentExprModel> _12527_m) {
	_1c9b1a5cd_optimize(&(*_self_), _12527_m.get()._field_Expr);
}



inline void _1c9b17883_structureSub(_1c9b14a39_exprDeadCode* _self_, jule::Ptr<_1e5e172b5_StructSubIdentExprModel> _12931_m) {
	_1c9b1a5cd_optimize(&(*_self_), _12931_m.get()._field_Expr.get()._field_Model);
}



inline void _1c9b17b08_commonSub(_1c9b14a39_exprDeadCode* _self_, jule::Ptr<_1e5e17a68_CommonSubIdentExprModel> _13328_m) {
	_1c9b1a5cd_optimize(&(*_self_), _13328_m.get()._field_Expr);
}



inline void _1c9b17d7d_tuple(_1c9b14a39_exprDeadCode* _self_, jule::Ptr<_1e5e17c55_TupleExprModel> _13724_m) {
	{
		auto &expr = _13724_m.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_1b32e9cc4:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a8ac6d_Data> _13821_d = *it;
			{
				_1c9b1a5cd_optimize(&(*_self_), _13821_d.get()._field_Model);
			}
			_iter_next_1b32e9cc4:;
			++it;
			goto _iter_begin_1b32e9cc4;
		}
		_iter_end_1b32e9cc4:;
	};
}



inline void _1c9b18103_newCall(_1c9b14a39_exprDeadCode* _self_, jule::Ptr<_1e5e18508_BuiltinNewCallExprModel> _14326_m) {
	if ((_14326_m.get()._field_Init != nullptr)) {
		_1c9b1a5cd_optimize(&(*_self_), _14326_m.get()._field_Init);
	};
}



inline void _1c9b18378_outCall(_1c9b14a39_exprDeadCode* _self_, jule::Ptr<_1e5e17e42_BuiltinOutCallExprModel> _14926_m) {
	_1c9b1a5cd_optimize(&(*_self_), _14926_m.get()._field_Expr);
}



inline void _1c9b185ed_outlnCall(_1c9b14a39_exprDeadCode* _self_, jule::Ptr<_1e5e1812e_BuiltinOutlnCallExprModel> _15328_m) {
	_1c9b1a5cd_optimize(&(*_self_), _15328_m.get()._field_Expr);
}



inline void _1c9b18873_panicCall(_1c9b14a39_exprDeadCode* _self_, jule::Ptr<_1e5e186e5_BuiltinPanicCallExprModel> _15728_m) {
	_1c9b1a5cd_optimize(&(*_self_), _15728_m.get()._field_Expr);
}



inline void _1c9b18ae8_assertCall(_1c9b14a39_exprDeadCode* _self_, jule::Ptr<_1e5e188d2_BuiltinAssertCallExprModel> _16129_m) {
	_1c9b1a5cd_optimize(&(*_self_), _16129_m.get()._field_Expr);
}



inline void _1c9b18d6d_errorCall(_1c9b14a39_exprDeadCode* _self_, jule::Ptr<_1e5e19185_BuiltinErrorCallExprModel> _16528_m) {
	_1c9b1a5cd_optimize(&(*_self_), _16528_m.get()._field_Err);
}



inline void _1c9b190e3_makeCall(_1c9b14a39_exprDeadCode* _self_, jule::Ptr<_1e5e18abe_BuiltinMakeCallExprModel> _16927_m) {
	if ((_16927_m.get()._field_Len != nullptr)) {
		_1c9b1a5cd_optimize(&(*_self_), _16927_m.get()._field_Len);
	};
	if ((_16927_m.get()._field_Cap != nullptr)) {
		_1c9b1a5cd_optimize(&(*_self_), _16927_m.get()._field_Cap);
	};
}



inline void _1c9b19368_appendCall(_1c9b14a39_exprDeadCode* _self_, jule::Ptr<_1e5e18cab_BuiltinAppendCallExprModel> _17829_m) {
	_1c9b1a5cd_optimize(&(*_self_), _17829_m.get()._field_Dest);
	_1c9b1a5cd_optimize(&(*_self_), _17829_m.get()._field_Elements);
}



inline void _1c9b195dd_cloneCall(_1c9b14a39_exprDeadCode* _self_, jule::Ptr<_1e5e1831b_BuiltinCloneCallExprModel> _18328_m) {
	_1c9b1a5cd_optimize(&(*_self_), _18328_m.get()._field_Expr);
}



inline void _1c9b19863_sizeof(_1c9b14a39_exprDeadCode* _self_, jule::Ptr<_1e5e17084_SizeofExprModel> _18725_m) {
	_1c9b1a5cd_optimize(&(*_self_), _18725_m.get()._field_Expr);
}



inline void _1c9b19ad8_alignof(_1c9b14a39_exprDeadCode* _self_, jule::Ptr<_1e5e197e5_AlignofExprModel> _19126_m) {
	_1c9b1a5cd_optimize(&(*_self_), _19126_m.get()._field_Expr);
}



inline void _1c9b19d5d_integratedToStr(_1c9b14a39_exprDeadCode* _self_, jule::Ptr<_1e5e19bbe_IntegratedToStrExprModel> _19534_m) {
	_1c9b1a5cd_optimize(&(*_self_), _19534_m.get()._field_Expr);
}



inline void _1c9b1a0d3_free(_1c9b14a39_exprDeadCode* _self_, jule::Ptr<_1e5e1a098_FreeExprModel> _19923_m) {
	_1c9b1a5cd_optimize(&(*_self_), _19923_m.get()._field_Expr);
}



inline void _1c9b1a358_backendEmit(_1c9b14a39_exprDeadCode* _self_, jule::Ptr<_1e5e19dab_BackendEmitExprModel> _20330_m) {
	_1c9b16123_args(&(*_self_), _20330_m.get()._field_Exprs);
}



inline void _1c9b1a5cd_optimize(_1c9b14a39_exprDeadCode* _self_, jule::Any& _20728_model) {
	{
		auto &_match_expr{ _20728_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e5e153a1_BinopExprModel>>()) {
			_case_begin_1b3304e99:;
			{
				_1c9b153a8_binary(&(*_self_), _20728_model.operator jule::Ptr<_1e5e153a1_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e1558d_UnaryExprModel>>()) {
			_case_begin_1b3305021:;
			{
				_1c9b1562d_unary(&(*_self_), _20728_model.operator jule::Ptr<_1e5e1558d_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e15967_StructLitExprModel>>()) {
			_case_begin_1b3305098:;
			{
				_1c9b158a3_structureLit(&(*_self_), _20728_model.operator jule::Ptr<_1e5e15967_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e15b54_AllocStructLitExprModel>>()) {
			_case_begin_1b330543e:;
			{
				_1c9b15b28_allocStructure(&(*_self_), _20728_model.operator jule::Ptr<_1e5e15b54_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e15d41_CastingExprModel>>()) {
			_case_begin_1b33054a5:;
			{
				_1c9b15d9d_casting(&(*_self_), _20728_model.operator jule::Ptr<_1e5e15d41_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e1602d_FnCallExprModel>>()) {
			_case_begin_1b330552c:;
			{
				_1c9b16398_funcCall(&(*_self_), _20728_model.operator jule::Ptr<_1e5e1602d_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e1621a_SliceExprModel>>()) {
			_case_begin_1b33055a4:;
			{
				_1c9b1661d_slice(&(*_self_), _20728_model.operator jule::Ptr<_1e5e1621a_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e1768e_ArrayExprModel>>()) {
			_case_begin_1b330562b:;
			{
				_1c9b16893_array(&(*_self_), _20728_model.operator jule::Ptr<_1e5e1768e_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e16407_IndexingExprModel>>()) {
			_case_begin_1b33056a3:;
			{
				_1c9b16b18_indexing(&(*_self_), _20728_model.operator jule::Ptr<_1e5e16407_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e165e4_AnonFnExprModel>>()) {
			_case_begin_1b330572a:;
			{
				_1c9b16d8d_anonFunc(&(*_self_), _20728_model.operator jule::Ptr<_1e5e165e4_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e169bd_MapExprModel>>()) {
			_case_begin_1b33057a2:;
			{
				_1c9b17113_map(&(*_self_), _20728_model.operator jule::Ptr<_1e5e169bd_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e16baa_SlicingExprModel>>()) {
			_case_begin_1b3305829:;
			{
				_1c9b17388_slicing(&(*_self_), _20728_model.operator jule::Ptr<_1e5e16baa_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e16d97_TraitSubIdentExprModel>>()) {
			_case_begin_1b33058a1:;
			{
				_1c9b1760d_traitSub(&(*_self_), _20728_model.operator jule::Ptr<_1e5e16d97_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e172b5_StructSubIdentExprModel>>()) {
			_case_begin_1b3305928:;
			{
				_1c9b17883_structureSub(&(*_self_), _20728_model.operator jule::Ptr<_1e5e172b5_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e17a68_CommonSubIdentExprModel>>()) {
			_case_begin_1b33059a0:;
			{
				_1c9b17b08_commonSub(&(*_self_), _20728_model.operator jule::Ptr<_1e5e17a68_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e17c55_TupleExprModel>>()) {
			_case_begin_1b3305a27:;
			{
				_1c9b17d7d_tuple(&(*_self_), _20728_model.operator jule::Ptr<_1e5e17c55_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e17e42_BuiltinOutCallExprModel>>()) {
			_case_begin_1b3305a9e:;
			{
				_1c9b18378_outCall(&(*_self_), _20728_model.operator jule::Ptr<_1e5e17e42_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e1812e_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1b3305b26:;
			{
				_1c9b185ed_outlnCall(&(*_self_), _20728_model.operator jule::Ptr<_1e5e1812e_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e18508_BuiltinNewCallExprModel>>()) {
			_case_begin_1b3305b9d:;
			{
				_1c9b18103_newCall(&(*_self_), _20728_model.operator jule::Ptr<_1e5e18508_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e186e5_BuiltinPanicCallExprModel>>()) {
			_case_begin_1b3305c25:;
			{
				_1c9b18873_panicCall(&(*_self_), _20728_model.operator jule::Ptr<_1e5e186e5_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e188d2_BuiltinAssertCallExprModel>>()) {
			_case_begin_1b3305c9c:;
			{
				_1c9b18ae8_assertCall(&(*_self_), _20728_model.operator jule::Ptr<_1e5e188d2_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e19185_BuiltinErrorCallExprModel>>()) {
			_case_begin_1b3305d24:;
			{
				_1c9b18d6d_errorCall(&(*_self_), _20728_model.operator jule::Ptr<_1e5e19185_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e18abe_BuiltinMakeCallExprModel>>()) {
			_case_begin_1b3305d9b:;
			{
				_1c9b190e3_makeCall(&(*_self_), _20728_model.operator jule::Ptr<_1e5e18abe_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e18cab_BuiltinAppendCallExprModel>>()) {
			_case_begin_1b3305e23:;
			{
				_1c9b19368_appendCall(&(*_self_), _20728_model.operator jule::Ptr<_1e5e18cab_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e1831b_BuiltinCloneCallExprModel>>()) {
			_case_begin_1b3305e9a:;
			{
				_1c9b195dd_cloneCall(&(*_self_), _20728_model.operator jule::Ptr<_1e5e1831b_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e17084_SizeofExprModel>>()) {
			_case_begin_1b3306022:;
			{
				_1c9b19863_sizeof(&(*_self_), _20728_model.operator jule::Ptr<_1e5e17084_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e197e5_AlignofExprModel>>()) {
			_case_begin_1b3306099:;
			{
				_1c9b19ad8_alignof(&(*_self_), _20728_model.operator jule::Ptr<_1e5e197e5_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e19bbe_IntegratedToStrExprModel>>()) {
			_case_begin_1b3306121:;
			{
				_1c9b19d5d_integratedToStr(&(*_self_), _20728_model.operator jule::Ptr<_1e5e19bbe_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e1a098_FreeExprModel>>()) {
			_case_begin_1b3306198:;
			{
				_1c9b1a0d3_free(&(*_self_), _20728_model.operator jule::Ptr<_1e5e1a098_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e19dab_BackendEmitExprModel>>()) {
			_case_begin_1b3306220:;
			{
				_1c9b1a358_backendEmit(&(*_self_), _20728_model.operator jule::Ptr<_1e5e19dab_BackendEmitExprModel>());
			}
		}
		_match_end_1b3305197:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c9b14a39_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4743340_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e52468c0_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e563d7cd_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5ad7dcb_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4926567_StrInsertBeginExprModel _Src) {
	_Stream << "StrInsertBeginExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e4a95ad2_scopeOptimizer> static__1e473b06e_new(jule::Ptr<_1e6a06700_Scope> _4523_scope) {
	return jule::new_ptr<_1e4a95ad2_scopeOptimizer>(_1e4a95ad2_scopeOptimizer{._field_scope=_4523_scope});
}



inline void _1e4748d7e_setCurrentStmt(_1e4a95ad2_scopeOptimizer* _self_, jule::Any _5137_stmt) {
	(*_self_)._field_scope.get()._field_Stmts[(*_self_)._field_i]=(*(((jule::Any*)((&(_5137_stmt))))));
}



inline void _1e4754021_optimizeData(_1e4a95ad2_scopeOptimizer* _self_, jule::Ptr<_1e6a8ac6d_Data> _5535_d) {
	{
		auto &_match_expr{ _5535_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1e5e1602d_FnCallExprModel>>()) {
			_case_begin_1b33409c9:;
			{
				jule::Ptr<_1e5e1602d_FnCallExprModel> _5821_m = _5535_d.get()._field_Model.operator jule::Ptr<_1e5e1602d_FnCallExprModel>();;
				if (_1e24b666a_Production) {
					if (((!(_1e5e21665_IsBuiltin(_5821_m.get()._field_Func.ptr()))) && _1e487253a_isStdPackage(_5821_m.get()._field_Func.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path,jule::Str("debug", 5)))) {
						_1e4748d7e_setCurrentStmt(&(*_self_), nullptr);
						return;;
					};
				};
			}
		}
		_match_end_1b33407ba:;
	};
	static__1e48a52c6_optimize(_5535_d.get()._field_Model);
}



inline void _1e47612c5_optimizeVar(_1e4a95ad2_scopeOptimizer* _self_, jule::Ptr<_1e6a3dd20_Var> _7034_v) {
	if ((_7034_v.get()._field_Value != nullptr)) {
		static__1e48a52c6_optimize(_7034_v.get()._field_Value.get()._field_Data.get()._field_Model);
	};
}



inline void _1e477ce7e_optimizeConditional(_1e4a95ad2_scopeOptimizer* _self_, jule::Ptr<_1e6a06cb6_Conditional> _7642_c) {
	{
		auto &expr = _7642_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1b3343acb:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a068dc_If> _7721_elif = *it;
			{
				static__1e48a52c6_optimize(_7721_elif.get()._field_Expr);
				_1e486044b_optimizeChild(&(*_self_), _7721_elif.get()._field_Scope);
			}
			_iter_next_1b3343acb:;
			++it;
			goto _iter_begin_1b3343acb;
		}
		_iter_end_1b3343acb:;
	};
	if ((_7642_c.get()._field_Default != nullptr)) {
		_1e486044b_optimizeChild(&(*_self_), _7642_c.get()._field_Default.get()._field_Scope);
	};
	if ((!(_1e477e0c3_Cond))) {
		return;;
	};
	jule::Bool _8917_constCase = false;;
	{
		auto &expr = _7642_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1b3345a56:;
		if (it != expr.end()) {
			jule::I64 _9214_i = it - expr.begin();
			jule::Ptr<_1e6a068dc_If> _9221_elif = *it;
			{
				if ((!(_1e4873b46_isConstantValidConditionalCase(_9221_elif)))) {
					goto _iter_next_1b3345a56;
				};
				_8917_constCase=true;
				_7642_c.get()._field_Elifs=_7642_c.get()._field_Elifs.slice(0LL,_9214_i);
				_7642_c.get()._field_Default=jule::new_ptr<_1e6a06ac9_Else>(_1e6a06ac9_Else{._field_Scope=_9221_elif.get()._field_Scope});
				goto _iter_end_1b3345a56;
			}
			_iter_next_1b3345a56:;
			++it;
			_9214_i++;
			goto _iter_begin_1b3345a56;
		}
		_iter_end_1b3345a56:;
	};
	if ((_7642_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1e6a068dc_If>* _10917_i = (&(_7642_c.get()._field_Elifs[0LL]));;
	jule::Ptr<_1e6a068dc_If>* _11013_end = (&(_7642_c.get()._field_Elifs[(_7642_c.get()._field_Elifs.len() - 1LL)]));;
	for (; (_10917_i <= _11013_end); (_10917_i)++) {
		{
			{
				if (_1e488554d_isUnreachableConditionalCase((*(_10917_i)))) {
					(*(_10917_i))=nullptr;
				};
			};
		}
	_iter_next_1b3348d78:;
	}
	_iter_end_1b3348d78:;;
	if ((_7642_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_8917_constCase))) {
		return;;
	};
	jule::I64 _12817_only = -1LL;;
	{
		auto &expr = _7642_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1b334a5d8:;
		if (it != expr.end()) {
			jule::I64 _12913_j = it - expr.begin();
			jule::Ptr<_1e6a068dc_If> _12916_elif = *it;
			{
				if ((_12916_elif != nullptr)) {
					if ((_12817_only != -1LL)) {
						return;;
					};
					_12817_only=_12913_j;
				};
			}
			_iter_next_1b334a5d8:;
			++it;
			_12913_j++;
			goto _iter_begin_1b334a5d8;
		}
		_iter_end_1b334a5d8:;
	};
	if ((_12817_only != -1LL)) {
		_1e4748d7e_setCurrentStmt(&(*_self_), jule::Any(_7642_c.get()._field_Elifs[_12817_only].get()._field_Scope));
	};
}



inline void _1e478299a_buildDefaultConstatTrueCase(_1e4a95ad2_scopeOptimizer* _self_, jule::Ptr<_1e6a08933_Case> _14550_case, jule::I64& _14568_i, jule::Ptr<_1e6a083d3_Match>& _14581_m) {
	_14550_case.get()._field_Exprs=nullptr;
	jule::I64 _14713_start = _14568_i;;
	_julec_label_loop:;
	for (;;) {
		{
			if ((_14550_case.get()._field_Scope.get()._field_Stmts.len() == 0LL)) {
				goto _iter_end_1b334ccd3;
			};
			jule::Any &_15322_stmt = _14550_case.get()._field_Scope.get()._field_Stmts[(_14550_case.get()._field_Scope.get()._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _15322_stmt };
				
				if (_match_expr.type_is<jule::Ptr<_1e6a08c52_FallSt>>()) {
					_case_begin_1b334d696:;
					{
						(_14568_i)++;
						if ((_14568_i >= _14581_m.get()._field_Cases.len())) {
							_15322_stmt=static_cast<jule::Any>(_14581_m.get()._field_Default.get()._field_Scope);
							goto _iter_end_1b334ccd3;
						};
						_14550_case=_14581_m.get()._field_Cases[_14568_i];
						_15322_stmt=static_cast<jule::Any>(_14550_case.get()._field_Scope);
					}
				}
				else {
					_case_begin_1b334ebd6:;
					{
						goto _iter_end_1b334ccd3;
					}
				}
				_match_end_1b334eae8:;
			};
		}
	_iter_next_1b334ccd3:;
	}
	_iter_end_1b334ccd3:;;
	_14581_m.get()._field_Default=_14581_m.get()._field_Cases[_14713_start];
	_14581_m.get()._field_Cases=_14581_m.get()._field_Cases.slice(0LL,_14713_start);
}



inline void _1e47843e7_optimizeMatch(_1e4a95ad2_scopeOptimizer* _self_, jule::Ptr<_1e6a083d3_Match> _17136_m) {
	{
		auto &expr = _17136_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1b3351c71:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a08933_Case> _17221_case = *it;
			{
				{
					auto &expr = _17221_case.get()._field_Exprs;
					auto it = expr.begin();
					_iter_begin_1b3352612:;
					if (it != expr.end()) {
						jule::Ptr<_1e6a8ac6d_Data> _17325_expr = *it;
						{
							static__1e48a52c6_optimize(_17325_expr.get()._field_Model);
						}
						_iter_next_1b3352612:;
						++it;
						goto _iter_begin_1b3352612;
					}
					_iter_end_1b3352612:;
				};
				_1e486044b_optimizeChild(&(*_self_), _17221_case.get()._field_Scope);
			}
			_iter_next_1b3351c71:;
			++it;
			goto _iter_begin_1b3351c71;
		}
		_iter_end_1b3351c71:;
	};
	if ((_17136_m.get()._field_Default != nullptr)) {
		_1e486044b_optimizeChild(&(*_self_), _17136_m.get()._field_Default.get()._field_Scope);
	};
	if ((!(_1e477e0c3_Cond))) {
		return;;
	};
	jule::Bool _18617_constCase = false;;
	{
		auto &expr = _17136_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1b335438e:;
		if (it != expr.end()) {
			jule::I64 _18918_i = it - expr.begin();
			jule::Ptr<_1e6a08933_Case> _18925_case = *it;
			{
				if ((!(_1e4877908_isConstantValidMatchCase(_18925_case)))) {
					goto _iter_next_1b335438e;
				};
				_18617_constCase=true;
				_1e478299a_buildDefaultConstatTrueCase(&(*_self_), _18925_case,_18918_i,_17136_m);
				goto _iter_end_1b335438e;
			}
			_iter_next_1b335438e:;
			++it;
			_18918_i++;
			goto _iter_begin_1b335438e;
		}
		_iter_end_1b335438e:;
	};
	if ((_17136_m.get()._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1e6a08933_Case>* _20317_i = (&(_17136_m.get()._field_Cases[0LL]));;
	jule::Ptr<_1e6a08933_Case>* _20413_end = (&(_17136_m.get()._field_Cases[(_17136_m.get()._field_Cases.len() - 1LL)]));;
	for (; (_20317_i <= _20413_end); (_20317_i)++) {
		{
			{
				if (_1e48a1a75_isUnreachableMatchCase((*(_20317_i)))) {
					(*(_20317_i))=nullptr;
				};
			};
		}
	_iter_next_1b335723d:;
	}
	_iter_end_1b335723d:;;
	if ((!(_18617_constCase))) {
		return;;
	};
	jule::I64 _21817_only = -1LL;;
	{
		auto &expr = _17136_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1b33583d7:;
		if (it != expr.end()) {
			jule::I64 _21913_j = it - expr.begin();
			jule::Ptr<_1e6a08933_Case> _21916_case = *it;
			{
				if ((_21916_case != nullptr)) {
					if ((_21817_only != -1LL)) {
						return;;
					};
					_21817_only=_21913_j;
				};
			}
			_iter_next_1b33583d7:;
			++it;
			_21913_j++;
			goto _iter_begin_1b33583d7;
		}
		_iter_end_1b33583d7:;
	};
	if ((_21817_only != -1LL)) {
		_1e4748d7e_setCurrentStmt(&(*_self_), jule::Any(_17136_m.get()._field_Cases[_21817_only].get()._field_Scope));
	};
}



inline void _1e4784837_optimizeRangeIter(_1e4a95ad2_scopeOptimizer* _self_, jule::Ptr<_1e6a0737c_RangeIter> _23540_it) {
	static__1e48a52c6_optimize(_23540_it.get()._field_Expr.get()._field_Model);
	_1e486044b_optimizeChild(&(*_self_), _23540_it.get()._field_Scope);
}



inline void _1e47b71a5_optimizeWhileIter(_1e4a95ad2_scopeOptimizer* _self_, jule::Ptr<_1e6a07190_WhileIter> _24040_it) {
	static__1e48a52c6_optimize(_24040_it.get()._field_Expr);
	_1e486992d_optimizeStmt(&(*_self_), _24040_it.get()._field_Next);
	_1e486044b_optimizeChild(&(*_self_), _24040_it.get()._field_Scope);
}



inline jule::Bool _1e47b7a57_substr(_1e4a95ad2_scopeOptimizer* _self_, jule::Ptr<_1e6a08009_Assign> _24629_a) {
	{
		auto &_match_expr{ _24629_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1e5e16baa_SlicingExprModel>>()) {
			_case_begin_1b335c5d9:;
			{
				jule::Ptr<_1e5e16baa_SlicingExprModel> _24921_sem = _24629_a.get()._field_R.get()._field_Model.operator jule::Ptr<_1e5e16baa_SlicingExprModel>();;
				if ((_24921_sem.get()._field_Expr == _24629_a.get()._field_L.get()._field_Model)) {
					_1e4748d7e_setCurrentStmt(&(*_self_), jule::Any(jule::new_ptr<_1e5ad7dcb_MutSlicingExprModel>(_1e5ad7dcb_MutSlicingExprModel{._field_Token=_24921_sem.get()._field_Token, ._field_Expr=_24921_sem.get()._field_Expr, ._field_Left=_24921_sem.get()._field_Left, ._field_Right=_24921_sem.get()._field_Right})));
					return true;
				};
			}
		}
		_match_end_1b335c584:;
	};
	return false;
}



inline jule::Bool _1e47cc792_strInsert(_1e4a95ad2_scopeOptimizer* _self_, jule::Ptr<_1e6a08009_Assign> _26332_a) {
	{
		auto &_match_expr{ _26332_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1e5e153a1_BinopExprModel>>()) {
			_case_begin_1b335e9e8:;
			{
				jule::Ptr<_1e5e153a1_BinopExprModel> _26621_m = _26332_a.get()._field_R.get()._field_Model.operator jule::Ptr<_1e5e153a1_BinopExprModel>();;
				if ((_26621_m.get()._field_Right.get()._field_Model == _26332_a.get()._field_L.get()._field_Model)) {
					_1e4748d7e_setCurrentStmt(&(*_self_), jule::Any(jule::new_ptr<_1e4926567_StrInsertBeginExprModel>(_1e4926567_StrInsertBeginExprModel{._field_Dest=_26332_a.get()._field_L.get()._field_Model, ._field_Expr=_26621_m.get()._field_Left.get()._field_Model})));
					return true;
				};
			}
		}
		_match_end_1b335e993:;
	};
	return false;
}



inline jule::Bool _1e485750e_strAssign(_1e4a95ad2_scopeOptimizer* _self_, jule::Ptr<_1e6a08009_Assign> _27832_a) {
	if ((_27832_a.get()._field_Op.get()._field_Kind != jule::Str("=", 1))) {
		return false;
	};
	jule::Ptr<_1e6abb562_Prim> _28213_lp = _1e6ab8b9c_Prim(_27832_a.get()._field_L.get()._field_Kind.ptr());;
	if (((_28213_lp == nullptr) || (!(_1e6abe796_IsStr(_28213_lp.ptr()))))) {
		return false;
	};
	{
		
		if (_1e47b7a57_substr(&(*_self_), _27832_a) || _1e47cc792_strInsert(&(*_self_), _27832_a)) {
			_case_begin_1b3363425:;
			{
				return true;
			}
		}
		_match_end_1b336338c:;
	};
	return false;
}



inline void _1e48606e3_optimizeAssign(_1e4a95ad2_scopeOptimizer* _self_, jule::Ptr<_1e6a08009_Assign> _29437_assign) {
	if ((_1e474c4e2_Copy && _1e485750e_strAssign(&(*_self_), _29437_assign))) {
		return;;
	};
	static__1e48a52c6_optimize(_29437_assign.get()._field_L.get()._field_Model);
	static__1e48a52c6_optimize(_29437_assign.get()._field_R.get()._field_Model);
	{
		auto &_match_expr{ _29437_assign.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/=", 2) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1b33653e4:;
			{
				if ((_1e4758410_Math && (_1e6aba0ee_Struct(_29437_assign.get()._field_L.get()._field_Kind.ptr()) == nullptr))) {
					_29437_assign.get()._field_Op.get()._field_Kind=_29437_assign.get()._field_Op.get()._field_Kind.slice(0LL,(_29437_assign.get()._field_Op.get()._field_Kind.len() - 1LL));
					jule::Any _30725_model = static_cast<jule::Any>(jule::new_ptr<_1e5e153a1_BinopExprModel>(_1e5e153a1_BinopExprModel{._field_Left=_29437_assign.get()._field_L, ._field_Right=_29437_assign.get()._field_R, ._field_Op=_29437_assign.get()._field_Op}));;
					static__1e48a52c6_optimize(_30725_model);
					{
						auto &_match_expr{ _30725_model };
						
						if (_match_expr.type_is<jule::Ptr<_1e5e153a1_BinopExprModel>>()) {
							_case_begin_1b336758e:;
							{
								_29437_assign.get()._field_R=jule::new_ptr<_1e5e151b4_OperandExprModel>((*(_29437_assign.get()._field_R)));
								_29437_assign.get()._field_Op.get()._field_Kind=jule::Str("=", 1);
								_29437_assign.get()._field_R.get()._field_Model=_30725_model;
								return;;
							}
						}
						_match_end_1b33676b0:;
					};
					_29437_assign.get()._field_Op.get()._field_Kind+=jule::Str("=", 1);
					return;;
				};
			}
		}
		_match_end_1b3365339:;
	};
	if (_1e473c779_Append) {
		{
			auto &_match_expr{ _29437_assign.get()._field_R.get()._field_Model };
			
			if (_match_expr.type_is<jule::Ptr<_1e5e18cab_BuiltinAppendCallExprModel>>()) {
				_case_begin_1b336944d:;
				{
					jule::Ptr<_1e5e18cab_BuiltinAppendCallExprModel> _32825_m = _29437_assign.get()._field_R.get()._field_Model.operator jule::Ptr<_1e5e18cab_BuiltinAppendCallExprModel>();;
					{
						auto &_match_expr{ _32825_m.get()._field_Elements };
						
						if (_match_expr.type_is<jule::Ptr<_1e5e1621a_SliceExprModel>>()) {
							_case_begin_1b336a4b5:;
							{
								{
									auto &_match_expr{ _32825_m.get()._field_Dest };
									
									if (_match_expr.type_is<jule::Ptr<_1e6a3dd20_Var>>() || _match_expr.type_is<jule::Ptr<_1e5e172b5_StructSubIdentExprModel>>()) {
										_case_begin_1b336ac9b:;
										{
											_1e4748d7e_setCurrentStmt(&(*_self_), jule::Any(jule::new_ptr<_1e563d7cd_PushToSliceExprModel>(_1e563d7cd_PushToSliceExprModel{._field_Dest=_32825_m.get()._field_Dest, ._field_Elems=_32825_m.get()._field_Elements.operator jule::Ptr<_1e5e1621a_SliceExprModel>()})));
										}
									}
									_match_end_1b336ac46:;
								};
							}
						}
						_match_end_1b336a30b:;
					};
				}
			}
			_match_end_1b3365e72:;
		};
	};
}



inline void _1e4863817_optimizeMultiAssign(_1e4a95ad2_scopeOptimizer* _self_, jule::Ptr<_1e6a081e6_MultiAssign> _34442_assign) {
	{
		auto &expr = _34442_assign.get()._field_L;
		auto it = expr.begin();
		_iter_begin_1b3365845:;
		if (it != expr.end()) {
			jule::I64 _34514_i = it - expr.begin();
			jule::Any _34521_l = *it;
			{
				if ((_34521_l != nullptr)) {
					static__1e48a52c6_optimize(_34521_l);
					_34442_assign.get()._field_L[_34514_i]=_34521_l;
				};
			}
			_iter_next_1b3365845:;
			++it;
			_34514_i++;
			goto _iter_begin_1b3365845;
		}
		_iter_end_1b3365845:;
	};
	static__1e48a52c6_optimize(_34442_assign.get()._field_R);
}



inline void _1e4865132_optimizeRet(_1e4a95ad2_scopeOptimizer* _self_, jule::Ptr<_1e6a08e3e_RetSt> _35434_r) {
	static__1e48a52c6_optimize(_35434_r.get()._field_Expr);
}



inline void _1e486992d_optimizeStmt(_1e4a95ad2_scopeOptimizer* _self_, jule::Any _35835_stmt) {
	{
		auto &_match_expr{ _35835_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1e6a06700_Scope>>()) {
			_case_begin_1b336d96e:;
			{
				_1e486044b_optimizeChild(&(*_self_), _35835_stmt.operator jule::Ptr<_1e6a06700_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a8ac6d_Data>>()) {
			_case_begin_1b336d9d5:;
			{
				_1e4754021_optimizeData(&(*_self_), _35835_stmt.operator jule::Ptr<_1e6a8ac6d_Data>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a3dd20_Var>>()) {
			_case_begin_1b336da4b:;
			{
				_1e47612c5_optimizeVar(&(*_self_), _35835_stmt.operator jule::Ptr<_1e6a3dd20_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a06cb6_Conditional>>()) {
			_case_begin_1b336dab2:;
			{
				_1e477ce7e_optimizeConditional(&(*_self_), _35835_stmt.operator jule::Ptr<_1e6a06cb6_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a0737c_RangeIter>>()) {
			_case_begin_1b336db28:;
			{
				_1e4784837_optimizeRangeIter(&(*_self_), _35835_stmt.operator jule::Ptr<_1e6a0737c_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a07190_WhileIter>>()) {
			_case_begin_1b336db8e:;
			{
				_1e47b71a5_optimizeWhileIter(&(*_self_), _35835_stmt.operator jule::Ptr<_1e6a07190_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a06ea3_InfIter>>()) {
			_case_begin_1b336dc05:;
			{
				_1e486044b_optimizeChild(&(*_self_), _35835_stmt.operator jule::Ptr<_1e6a06ea3_InfIter>().get()._field_Scope);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a08009_Assign>>()) {
			_case_begin_1b336dc6b:;
			{
				_1e48606e3_optimizeAssign(&(*_self_), _35835_stmt.operator jule::Ptr<_1e6a08009_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a081e6_MultiAssign>>()) {
			_case_begin_1b336dcd2:;
			{
				_1e4863817_optimizeMultiAssign(&(*_self_), _35835_stmt.operator jule::Ptr<_1e6a081e6_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a083d3_Match>>()) {
			_case_begin_1b336dd59:;
			{
				_1e47843e7_optimizeMatch(&(*_self_), _35835_stmt.operator jule::Ptr<_1e6a083d3_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a08e3e_RetSt>>()) {
			_case_begin_1b336ddd1:;
			{
				_1e4865132_optimizeRet(&(*_self_), _35835_stmt.operator jule::Ptr<_1e6a08e3e_RetSt>());
			}
		}
		_match_end_1b336d81a:;
	};
}



inline void _1e486044b_optimizeChild(_1e4a95ad2_scopeOptimizer* _self_, jule::Ptr<_1e6a06700_Scope> _38536_child) {
	jule::Ptr<_1e4a95ad2_scopeOptimizer> _38617_so = static__1e473b06e_new(_38536_child);;
	_1e486e9cc_optimize(_38617_so.ptr());
}



inline void _1e486e9cc_optimize(_1e4a95ad2_scopeOptimizer* _self_) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_1b3374d0a:;
		if (it != expr.end()) {
			jule::I64 _39214_i = it - expr.begin();
			jule::Any _39221_stmt = *it;
			{
				(*_self_)._field_i=_39214_i;
				_1e486992d_optimizeStmt(&(*_self_), _39221_stmt);
			}
			_iter_next_1b3374d0a:;
			++it;
			_39214_i++;
			goto _iter_begin_1b3374d0a;
		}
		_iter_end_1b3374d0a:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e4a95ad2_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__1e48a52c6_optimize(jule::Any& _5529_model) {
	if (_1c9a1b369_exprEnabled) {
		jule::Ptr<_1e50dac4d_exprOptimizer> _5821_exop = jule::new_ptr<_1e50dac4d_exprOptimizer>(_1e50dac4d_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)((&(_5529_model))))});;
		_1e4c6c4b2_do(_5821_exop.ptr());
	};
}



inline jule::Bool _1e48a5b89_strCond(_1e50dac4d_exprOptimizer* _self_, jule::Ptr<_1e5e153a1_BinopExprModel> _6526_m) {
	jule::Ptr<_1e6abb562_Prim> _6613_lp = _1e6ab8b9c_Prim(_6526_m.get()._field_Left.get()._field_Kind.ptr());;
	if (((_6613_lp == nullptr) || (!(_1e6abe796_IsStr(_6613_lp.ptr()))))) {
		return false;
	};
	if (((_6526_m.get()._field_Op.get()._field_Kind != jule::Str("==", 2)) && (_6526_m.get()._field_Op.get()._field_Kind != jule::Str("!=", 2)))) {
		return false;
	};
	{
		auto &_match_expr{ _6526_m.get()._field_Left.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1e5da6ba0_Const>>()) {
			_case_begin_1b337e441:;
			{
				std::tie(_6526_m.get()._field_Left,_6526_m.get()._field_Right) = std::make_tuple(_6526_m.get()._field_Right,_6526_m.get()._field_Left);
				goto _julec_label_opt;
			}
		}
		_match_end_1b337e3db:;
	};
	{
		auto &_match_expr{ _6526_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1e5da6ba0_Const>>()) {
			_case_begin_1b3380442:;
			{
				goto _match_end_1b3380354;
			}
		}
		else {
			_case_begin_1b33803ba:;
			{
				return true;
			}
		}
		_match_end_1b3380354:;
	};
	_julec_label_opt:;
	jule::Ptr<_1e5da6ba0_Const> _8513_c = _6526_m.get()._field_Right.get()._field_Model.operator jule::Ptr<_1e5da6ba0_Const>();;
	if ((!(_1e5e0d564_ReadStr(_8513_c.ptr()).empty()))) {
		return false;
	};
	{
		auto &_match_expr{ _6526_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1b3381c07:;
			{
				(*((*_self_)._field_model))=static_cast<jule::Any>(jule::new_ptr<_1e5e17a68_CommonSubIdentExprModel>(_1e5e17a68_CommonSubIdentExprModel{._field_ExprKind=_6526_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6526_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1b3381c6d:;
			{
				jule::Ptr<_1e47137a5_Token> _9721_op = _6526_m.get()._field_Op;;
				_9721_op.get()._field_Kind=jule::Str("!", 1);
				(*((*_self_)._field_model))=static_cast<jule::Any>(jule::new_ptr<_1e5e1558d_UnaryExprModel>(_1e5e1558d_UnaryExprModel{._field_Expr=jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e5e17a68_CommonSubIdentExprModel>(_1e5e17a68_CommonSubIdentExprModel{._field_ExprKind=_6526_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6526_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)})), }), ._field_Op=_9721_op}));
			}
		}
		_match_end_1b3381ad6:;
	};
	return true;
}



inline void _1e48ac7c8_binary(_1e50dac4d_exprOptimizer* _self_, jule::Ptr<_1e5e153a1_BinopExprModel> _11325_m) {
	static__1e48a52c6_optimize(_11325_m.get()._field_Left.get()._field_Model);
	static__1e48a52c6_optimize(_11325_m.get()._field_Right.get()._field_Model);
	{
		auto &_match_expr{ _11325_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1e5da6ba0_Const>>()) {
			_case_begin_1b3385c0b:;
			{
				goto _match_end_1b33856cd;
			}
		}
		else {
			_case_begin_1b3385777:;
			{
				return;;
			}
		}
		_match_end_1b33856cd:;
	};
	if ((_1e477e0c3_Cond && _1e48a5b89_strCond(&(*_self_), _11325_m))) {
		return;;
	};
	if ((!(_1e4758410_Math))) {
		return;;
	};
	{
		auto &_match_expr{ _11325_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1b33868cc:;
			{
				jule::Bool _13318_ok;;
				jule::U64 _13322_x;;
				std::tie(_13318_ok,_13322_x) = _1e4c7022e_checkForBitShiftOpt(_11325_m.get()._field_Left,_11325_m.get()._field_Right);
				if (_13318_ok) {
					_11325_m.get()._field_Op.get()._field_Kind=jule::Str("<<", 2);
					jule::Ptr<_1e5da6ba0_Const> _13625_c = _11325_m.get()._field_Right.get()._field_Model.operator jule::Ptr<_1e5da6ba0_Const>();;
					_1e5e0e510_SetU64(_13625_c.ptr(), _13322_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1b3386943:;
			{
				jule::Bool _14118_ok;;
				jule::U64 _14122_x;;
				std::tie(_14118_ok,_14122_x) = _1e4c7022e_checkForBitShiftOpt(_11325_m.get()._field_Left,_11325_m.get()._field_Right);
				if (_14118_ok) {
					_11325_m.get()._field_Op.get()._field_Kind=jule::Str(">>", 2);
					jule::Ptr<_1e5da6ba0_Const> _14425_c = _11325_m.get()._field_Right.get()._field_Model.operator jule::Ptr<_1e5da6ba0_Const>();;
					_1e5e0e510_SetU64(_14425_c.ptr(), _14122_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1b33869ba:;
			{
				jule::Ptr<_1e5da6ba0_Const> _14921_c = _11325_m.get()._field_Right.get()._field_Model.operator jule::Ptr<_1e5da6ba0_Const>();;
				jule::F64 _15017_d = _1e5e0e015_AsF64(_14921_c.ptr());;
				if ((_15017_d == 2LL)) {
					_11325_m.get()._field_Op.get()._field_Kind=jule::Str("&", 1);
					_1e5e0e28a_SetI64(_14921_c.ptr(), 1LL);
				};
			}
		}
		_match_end_1b3386877:;
	};
	jule::Any _15617_model = jule::Any(jule::new_ptr<_1e4743340_UnsafeBinopExprModel>(_1e4743340_UnsafeBinopExprModel{._field_Node=_11325_m}));;
	(*((*_self_)._field_model))=(*(((jule::Any*)((&(_15617_model))))));
}



inline void _1e48b51a4_unary(_1e50dac4d_exprOptimizer* _self_, jule::Ptr<_1e5e1558d_UnaryExprModel> _16024_m) {
	static__1e48a52c6_optimize(_16024_m.get()._field_Expr.get()._field_Model);
	if ((_1e477b103_Ptr && (_16024_m.get()._field_Op.get()._field_Kind == jule::Str("*", 1)))) {
		{
			auto &_match_expr{ _16024_m.get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type_is<jule::Ptr<_1e5e1558d_UnaryExprModel>>()) {
				_case_begin_1b338dc7a:;
				{
					jule::Ptr<_1e5e1558d_UnaryExprModel> _16525_um = _16024_m.get()._field_Expr.get()._field_Model.operator jule::Ptr<_1e5e1558d_UnaryExprModel>();;
					if ((_16525_um.get()._field_Op.get()._field_Kind == jule::Str("&", 1))) {
						(*((*_self_)._field_model))=_16525_um.get()._field_Expr.get()._field_Model;
					};
				}
			}
			_match_end_1b338dc25:;
		};
	};
}



inline void _1e48b689d_structureLit(_1e50dac4d_exprOptimizer* _self_, jule::Ptr<_1e5e15967_StructLitExprModel> _17331_m) {
	{
		auto &expr = _17331_m.get()._field_Args;
		auto it = expr.begin();
		_iter_begin_1b33907c6:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e1577a_StructArgExprModel> _17421_arg = *it;
			{
				static__1e48a52c6_optimize(_17421_arg.get()._field_Expr);
			}
			_iter_next_1b33907c6:;
			++it;
			goto _iter_begin_1b33907c6;
		}
		_iter_end_1b33907c6:;
	};
}



inline void _1e48c434a_allocStructure(_1e50dac4d_exprOptimizer* _self_, jule::Ptr<_1e5e15b54_AllocStructLitExprModel> _17933_m) {
	_1e48b689d_structureLit(&(*_self_), _17933_m.get()._field_Lit);
}



inline void _1e48d5e61_casting(_1e50dac4d_exprOptimizer* _self_, jule::Ptr<_1e5e15d41_CastingExprModel> _18326_m) {
	static__1e48a52c6_optimize(_18326_m.get()._field_Expr);
}



inline void _1e491a44b_args(_1e50dac4d_exprOptimizer* _self_, jule::Slice<jule::Any>& _18724_args) {
	{
		auto &expr = _18724_args;
		auto it = expr.begin();
		_iter_begin_1b3392311:;
		if (it != expr.end()) {
			jule::I64 _18814_i = it - expr.begin();
			jule::Any _18821_arg = *it;
			{
				static__1e48a52c6_optimize(_18821_arg);
				_18724_args[_18814_i]=_18821_arg;
			}
			_iter_next_1b3392311:;
			++it;
			_18814_i++;
			goto _iter_begin_1b3392311;
		}
		_iter_end_1b3392311:;
	};
}



inline void _1e491de33_scope(_1e50dac4d_exprOptimizer* _self_, jule::Ptr<_1e6a06700_Scope>& _19425_s) {
	jule::Ptr<_1e4a95ad2_scopeOptimizer> _19517_scopt = static__1e473b06e_new(_19425_s);;
	_1e486e9cc_optimize(_19517_scopt.ptr());
}



inline void _1e4927cb6_funcCall(_1e50dac4d_exprOptimizer* _self_, jule::Ptr<_1e5e1602d_FnCallExprModel> _19927_m) {
	static__1e48a52c6_optimize(_19927_m.get()._field_Expr);
	_1e491a44b_args(&(*_self_), _19927_m.get()._field_Args);
	if ((_19927_m.get()._field_Except != nullptr)) {
		_1e491de33_scope(&(*_self_), _19927_m.get()._field_Except);
	};
}



inline void _1e4a6d516_slice(_1e50dac4d_exprOptimizer* _self_, jule::Ptr<_1e5e1621a_SliceExprModel> _20724_m) {
	_1e491a44b_args(&(*_self_), _20724_m.get()._field_Elems);
}



inline void _1e4a8253b_array(_1e50dac4d_exprOptimizer* _self_, jule::Ptr<_1e5e1768e_ArrayExprModel> _21124_m) {
	if (((_21124_m.get()._field_Elems.len() == 2LL) && (_21124_m.get()._field_Elems[1LL] == nullptr))) {
		jule::Any _21321_elem = _21124_m.get()._field_Elems[0LL];;
		static__1e48a52c6_optimize(_21321_elem);
		_21124_m.get()._field_Elems[0LL]=_21321_elem;
	};
	_1e491a44b_args(&(*_self_), _21124_m.get()._field_Elems);
}



inline void _1e4a8b4ce_indexing(_1e50dac4d_exprOptimizer* _self_, jule::Ptr<_1e5e16407_IndexingExprModel> _22027_m) {
	static__1e48a52c6_optimize(_22027_m.get()._field_Expr.get()._field_Model);
	static__1e48a52c6_optimize(_22027_m.get()._field_Index.get()._field_Model);
	if ((!(_1e475d866_Access))) {
		return;;
	};
	jule::Bool _22613_array = (_1e6ab98b2_Arr(_22027_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr);;
	if ((_22613_array && _1e6a8b631_IsConst(_22027_m.get()._field_Index.ptr()))) {
		jule::Any _22921_model = jule::Any(jule::new_ptr<_1e52468c0_UnsafeIndexingExprModel>(_1e52468c0_UnsafeIndexingExprModel{._field_Node=_22027_m}));;
		(*((*_self_)._field_model))=(*(((jule::Any*)((&(_22921_model))))));
		return;;
	};
	{
		auto &_match_expr{ _22027_m.get()._field_Index.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1e6a3dd20_Var>>()) {
			_case_begin_1b339ae1e:;
			{
				jule::Ptr<_1e6a3dd20_Var> _23517_i = _22027_m.get()._field_Index.get()._field_Model.operator jule::Ptr<_1e6a3dd20_Var>();;
				if ((_23517_i.get()._field_Mutable || (_23517_i.get()._field_IterRelation == nullptr))) {
					goto _match_end_1b339acba;
				};
				{
					auto &_match_expr{ _22027_m.get()._field_Expr.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_1e6a3dd20_Var>>()) {
						_case_begin_1b339c6d4:;
						{
							jule::Ptr<_1e6a3dd20_Var> _24121_r = _22027_m.get()._field_Expr.get()._field_Model.operator jule::Ptr<_1e6a3dd20_Var>();;
							if ((_23517_i.get()._field_IterRelation.get()._field_Range == _24121_r)) {
								jule::Any _24429_model = jule::Any(jule::new_ptr<_1e52468c0_UnsafeIndexingExprModel>(_1e52468c0_UnsafeIndexingExprModel{._field_Node=_22027_m}));;
								(*((*_self_)._field_model))=(*(((jule::Any*)((&(_24429_model))))));
							};
						}
					}
					_match_end_1b339c67e:;
				};
			}
		}
		_match_end_1b339acba:;
	};
}



inline void _1e4a9245d_anonFunc(_1e50dac4d_exprOptimizer* _self_, jule::Ptr<_1e5e165e4_AnonFnExprModel> _25127_m) {
	_1e491de33_scope(&(*_self_), _25127_m.get()._field_Func.get()._field_Scope);
}



inline void _1e4a934d6_map(_1e50dac4d_exprOptimizer* _self_, jule::Ptr<_1e5e169bd_MapExprModel> _25522_m) {
	{
		auto &expr = _25522_m.get()._field_Entries;
		auto it = expr.begin();
		_iter_begin_1b339ed68:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e167d1_KeyValPairExprModel> _25621_pair = *it;
			{
				static__1e48a52c6_optimize(_25621_pair.get()._field_Key);
				static__1e48a52c6_optimize(_25621_pair.get()._field_Val);
			}
			_iter_next_1b339ed68:;
			++it;
			goto _iter_begin_1b339ed68;
		}
		_iter_end_1b339ed68:;
	};
}



inline void _1e4a81e75_slicing(_1e50dac4d_exprOptimizer* _self_, jule::Ptr<_1e5e16baa_SlicingExprModel> _26226_m) {
	static__1e48a52c6_optimize(_26226_m.get()._field_Expr);
	static__1e48a52c6_optimize(_26226_m.get()._field_Left);
	if ((_26226_m.get()._field_Right != nullptr)) {
		static__1e48a52c6_optimize(_26226_m.get()._field_Right);
	};
}



inline void _1e4a97386_traitSub(_1e50dac4d_exprOptimizer* _self_, jule::Ptr<_1e5e16d97_TraitSubIdentExprModel> _27027_m) {
	static__1e48a52c6_optimize(_27027_m.get()._field_Expr);
}



inline void _1e4aa47c2_structureSub(_1e50dac4d_exprOptimizer* _self_, jule::Ptr<_1e5e172b5_StructSubIdentExprModel> _27431_m) {
	static__1e48a52c6_optimize(_27431_m.get()._field_Expr.get()._field_Model);
}



inline void _1e4aa93cb_commonSub(_1e50dac4d_exprOptimizer* _self_, jule::Ptr<_1e5e17a68_CommonSubIdentExprModel> _27828_m) {
	static__1e48a52c6_optimize(_27828_m.get()._field_Expr);
}



inline void _1e4aaeaa7_tuple(_1e50dac4d_exprOptimizer* _self_, jule::Ptr<_1e5e17c55_TupleExprModel> _28224_m) {
	{
		auto &expr = _28224_m.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_1b33a3300:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a8ac6d_Data> _28321_d = *it;
			{
				static__1e48a52c6_optimize(_28321_d.get()._field_Model);
			}
			_iter_next_1b33a3300:;
			++it;
			goto _iter_begin_1b33a3300;
		}
		_iter_end_1b33a3300:;
	};
}



inline void _1e4ab0eb5_newCall(_1e50dac4d_exprOptimizer* _self_, jule::Ptr<_1e5e18508_BuiltinNewCallExprModel> _28826_m) {
	if ((_28826_m.get()._field_Init != nullptr)) {
		static__1e48a52c6_optimize(_28826_m.get()._field_Init);
	};
}



inline void _1e4ab226e_outCall(_1e50dac4d_exprOptimizer* _self_, jule::Ptr<_1e5e17e42_BuiltinOutCallExprModel> _29426_m) {
	static__1e48a52c6_optimize(_29426_m.get()._field_Expr);
}



inline void _1e4ab3a12_outlnCall(_1e50dac4d_exprOptimizer* _self_, jule::Ptr<_1e5e1812e_BuiltinOutlnCallExprModel> _29828_m) {
	static__1e48a52c6_optimize(_29828_m.get()._field_Expr);
}



inline void _1e4ab754e_panicCall(_1e50dac4d_exprOptimizer* _self_, jule::Ptr<_1e5e186e5_BuiltinPanicCallExprModel> _30228_m) {
	static__1e48a52c6_optimize(_30228_m.get()._field_Expr);
}



inline void _1e4ac43a2_assertCall(_1e50dac4d_exprOptimizer* _self_, jule::Ptr<_1e5e188d2_BuiltinAssertCallExprModel> _30629_m) {
	static__1e48a52c6_optimize(_30629_m.get()._field_Expr);
}



inline void _1e4ad0985_errorCall(_1e50dac4d_exprOptimizer* _self_, jule::Ptr<_1e5e19185_BuiltinErrorCallExprModel> _31028_m) {
	static__1e48a52c6_optimize(_31028_m.get()._field_Err);
}



inline void _1e4ada7a3_makeCall(_1e50dac4d_exprOptimizer* _self_, jule::Ptr<_1e5e18abe_BuiltinMakeCallExprModel> _31427_m) {
	if ((_31427_m.get()._field_Len != nullptr)) {
		static__1e48a52c6_optimize(_31427_m.get()._field_Len);
	};
	if ((_31427_m.get()._field_Cap != nullptr)) {
		static__1e48a52c6_optimize(_31427_m.get()._field_Cap);
	};
}



inline void _1e4b0b74c_appendCall(_1e50dac4d_exprOptimizer* _self_, jule::Ptr<_1e5e18cab_BuiltinAppendCallExprModel> _32329_m) {
	static__1e48a52c6_optimize(_32329_m.get()._field_Dest);
	static__1e48a52c6_optimize(_32329_m.get()._field_Elements);
}



inline void _1e4b0dee1_cloneCall(_1e50dac4d_exprOptimizer* _self_, jule::Ptr<_1e5e1831b_BuiltinCloneCallExprModel> _32828_m) {
	static__1e48a52c6_optimize(_32828_m.get()._field_Expr);
}



inline void _1e4b13600_sizeof(_1e50dac4d_exprOptimizer* _self_, jule::Ptr<_1e5e17084_SizeofExprModel> _33225_m) {
	static__1e48a52c6_optimize(_33225_m.get()._field_Expr);
}



inline void _1e4b213aa_alignof(_1e50dac4d_exprOptimizer* _self_, jule::Ptr<_1e5e197e5_AlignofExprModel> _33626_m) {
	static__1e48a52c6_optimize(_33626_m.get()._field_Expr);
}



inline void _1e4b34577_integratedToStr(_1e50dac4d_exprOptimizer* _self_, jule::Ptr<_1e5e19bbe_IntegratedToStrExprModel> _34034_m) {
	static__1e48a52c6_optimize(_34034_m.get()._field_Expr);
}



inline void _1e4b7a238_free(_1e50dac4d_exprOptimizer* _self_, jule::Ptr<_1e5e1a098_FreeExprModel> _34423_m) {
	static__1e48a52c6_optimize(_34423_m.get()._field_Expr);
}



inline void _1e4bc3c98_backendEmit(_1e50dac4d_exprOptimizer* _self_, jule::Ptr<_1e5e19dab_BackendEmitExprModel> _34830_m) {
	_1e491a44b_args(&(*_self_), _34830_m.get()._field_Exprs);
}



inline void _1e4c6c4b2_do(_1e50dac4d_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*_self_)._field_model)) };
		
		if (_match_expr.type_is<jule::Ptr<_1e5e153a1_BinopExprModel>>()) {
			_case_begin_1b33aaacc:;
			{
				_1e48ac7c8_binary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e5e153a1_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e1558d_UnaryExprModel>>()) {
			_case_begin_1b33aad96:;
			{
				_1e48b51a4_unary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e5e1558d_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e15967_StructLitExprModel>>()) {
			_case_begin_1b33aae0c:;
			{
				_1e48b689d_structureLit(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e5e15967_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e15b54_AllocStructLitExprModel>>()) {
			_case_begin_1b33aae73:;
			{
				_1e48c434a_allocStructure(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e5e15b54_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e15d41_CastingExprModel>>()) {
			_case_begin_1b33aaed9:;
			{
				_1e48d5e61_casting(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e5e15d41_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e1602d_FnCallExprModel>>()) {
			_case_begin_1b33ab061:;
			{
				_1e4927cb6_funcCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e5e1602d_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e1621a_SliceExprModel>>()) {
			_case_begin_1b33ab0d8:;
			{
				_1e4a6d516_slice(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e5e1621a_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e1768e_ArrayExprModel>>()) {
			_case_begin_1b33ab160:;
			{
				_1e4a8253b_array(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e5e1768e_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e16407_IndexingExprModel>>()) {
			_case_begin_1b33ab1d7:;
			{
				_1e4a8b4ce_indexing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e5e16407_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e165e4_AnonFnExprModel>>()) {
			_case_begin_1b33ab25e:;
			{
				_1e4a9245d_anonFunc(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e5e165e4_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e169bd_MapExprModel>>()) {
			_case_begin_1b33ab2d6:;
			{
				_1e4a934d6_map(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e5e169bd_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e16baa_SlicingExprModel>>()) {
			_case_begin_1b33ab35d:;
			{
				_1e4a81e75_slicing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e5e16baa_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e16d97_TraitSubIdentExprModel>>()) {
			_case_begin_1b33ab3d5:;
			{
				_1e4a97386_traitSub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e5e16d97_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e172b5_StructSubIdentExprModel>>()) {
			_case_begin_1b33ab45c:;
			{
				_1e4aa47c2_structureSub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e5e172b5_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e17a68_CommonSubIdentExprModel>>()) {
			_case_begin_1b33ab4d4:;
			{
				_1e4aa93cb_commonSub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e5e17a68_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e17c55_TupleExprModel>>()) {
			_case_begin_1b33ab55b:;
			{
				_1e4aaeaa7_tuple(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e5e17c55_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e17e42_BuiltinOutCallExprModel>>()) {
			_case_begin_1b33ab5d3:;
			{
				_1e4ab226e_outCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e5e17e42_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e1812e_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1b33ab65a:;
			{
				_1e4ab3a12_outlnCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e5e1812e_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e18508_BuiltinNewCallExprModel>>()) {
			_case_begin_1b33ab6d2:;
			{
				_1e4ab0eb5_newCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e5e18508_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e186e5_BuiltinPanicCallExprModel>>()) {
			_case_begin_1b33ab759:;
			{
				_1e4ab754e_panicCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e5e186e5_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e188d2_BuiltinAssertCallExprModel>>()) {
			_case_begin_1b33ab7d1:;
			{
				_1e4ac43a2_assertCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e5e188d2_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e19185_BuiltinErrorCallExprModel>>()) {
			_case_begin_1b33ab858:;
			{
				_1e4ad0985_errorCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e5e19185_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e18abe_BuiltinMakeCallExprModel>>()) {
			_case_begin_1b33ab8d0:;
			{
				_1e4ada7a3_makeCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e5e18abe_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e18cab_BuiltinAppendCallExprModel>>()) {
			_case_begin_1b33ab957:;
			{
				_1e4b0b74c_appendCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e5e18cab_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e1831b_BuiltinCloneCallExprModel>>()) {
			_case_begin_1b33ab9ce:;
			{
				_1e4b0dee1_cloneCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e5e1831b_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e17084_SizeofExprModel>>()) {
			_case_begin_1b33aba56:;
			{
				_1e4b13600_sizeof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e5e17084_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e197e5_AlignofExprModel>>()) {
			_case_begin_1b33abacd:;
			{
				_1e4b213aa_alignof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e5e197e5_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e19bbe_IntegratedToStrExprModel>>()) {
			_case_begin_1b33abb55:;
			{
				_1e4b34577_integratedToStr(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e5e19bbe_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e1a098_FreeExprModel>>()) {
			_case_begin_1b33abbcc:;
			{
				_1e4b7a238_free(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e5e1a098_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e19dab_BackendEmitExprModel>>()) {
			_case_begin_1b33abc54:;
			{
				_1e4bc3c98_backendEmit(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e5e19dab_BackendEmitExprModel>());
			}
		}
		_match_end_1b33aaa77:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e50dac4d_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c9ad938d_Optimizer> static__1c9a47d24_New(jule::Ptr<_1c9974888_IR>& _2524_ir) {
	return jule::new_ptr<_1c9ad938d_Optimizer>(_1c9ad938d_Optimizer{._field_ir=_2524_ir});
}



inline void _1c9a1ba62_optimizeGlobal(_1c9ad938d_Optimizer* _self_, jule::Ptr<_1e6a3dd20_Var>& _3138_v) {
	if ((!(_3138_v.get()._field_CppLinked))) {
		static__1e48a52c6_optimize(_3138_v.get()._field_Value.get()._field_Data.get()._field_Model);
	};
}



inline void _1c9a768ad_optimizeFunction(_1c9ad938d_Optimizer* _self_, jule::Ptr<_1e5e1c62d_Fn>& _3740_func) {
	if (_3740_func.get()._field_CppLinked) {
		return;;
	};
	{
		auto &expr = _3740_func.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1b33c2a06:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e202ce_FnIns> _4121_ins = *it;
			{
				jule::Ptr<_1e4a95ad2_scopeOptimizer> _4221_so = static__1e473b06e_new(_4121_ins.get()._field_Scope);;
				_1e486e9cc_optimize(_4221_so.ptr());
			}
			_iter_next_1b33c2a06:;
			++it;
			goto _iter_begin_1b33c2a06;
		}
		_iter_end_1b33c2a06:;
	};
}



inline void _1c9a76c65_optimizeStruct(_1c9ad938d_Optimizer* _self_, jule::Ptr<_1e5d4518d_Struct>& _4738_s) {
	if (_4738_s.get()._field_CppLinked) {
		return;;
	};
	{
		auto &expr = _4738_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1b33c3e58:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d714d8_StructIns> _5121_ins = *it;
			{
				{
					auto &expr = _5121_ins.get()._field_Fields;
					auto it = expr.begin();
					_iter_begin_1b33c45da:;
					if (it != expr.end()) {
						jule::Ptr<_1e5d4c805_FieldIns> _5225_f = *it;
						{
							if ((_5225_f.get()._field_Default != nullptr)) {
								static__1e48a52c6_optimize(_5225_f.get()._field_Default.get()._field_Model);
							};
						}
						_iter_next_1b33c45da:;
						++it;
						goto _iter_begin_1b33c45da;
					}
					_iter_end_1b33c45da:;
				};
				{
					auto &expr = _5121_ins.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1b33c5883:;
					if (it != expr.end()) {
						jule::Ptr<_1e5e1c62d_Fn> _5725_m = *it;
						{
							_1c9a768ad_optimizeFunction(&(*_self_), _5725_m);
						}
						_iter_next_1b33c5883:;
						++it;
						goto _iter_begin_1b33c5883;
					}
					_iter_end_1b33c5883:;
				};
			}
			_iter_next_1b33c3e58:;
			++it;
			goto _iter_begin_1b33c3e58;
		}
		_iter_end_1b33c3e58:;
	};
}



inline void _1c9a786e5_optimizeGlobals(_1c9ad938d_Optimizer* _self_, jule::Ptr<_1e6a1c24e_Package>& _6339_p) {
	{
		auto &expr = _6339_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1b33c5ad6:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a86010_SymbolTable> _6421_f = *it;
			{
				{
					auto &expr = _6421_f.get()._field_Vars;
					auto it = expr.begin();
					_iter_begin_1b33c682e:;
					if (it != expr.end()) {
						jule::Ptr<_1e6a3dd20_Var> _6525_v = *it;
						{
							_1c9a1ba62_optimizeGlobal(&(*_self_), _6525_v);
						}
						_iter_next_1b33c682e:;
						++it;
						goto _iter_begin_1b33c682e;
					}
					_iter_end_1b33c682e:;
				};
			}
			_iter_next_1b33c5ad6:;
			++it;
			goto _iter_begin_1b33c5ad6;
		}
		_iter_end_1b33c5ad6:;
	};
}



inline void _1c9a7e850_optimizeFunctions(_1c9ad938d_Optimizer* _self_, jule::Ptr<_1e6a1c24e_Package>& _7141_p) {
	{
		auto &expr = _7141_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1b33c6e6c:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a86010_SymbolTable> _7221_f = *it;
			{
				{
					auto &expr = _7221_f.get()._field_Funcs;
					auto it = expr.begin();
					_iter_begin_1b33c7bb5:;
					if (it != expr.end()) {
						jule::Ptr<_1e5e1c62d_Fn> _7325_func = *it;
						{
							_1c9a768ad_optimizeFunction(&(*_self_), _7325_func);
						}
						_iter_next_1b33c7bb5:;
						++it;
						goto _iter_begin_1b33c7bb5;
					}
					_iter_end_1b33c7bb5:;
				};
			}
			_iter_next_1b33c6e6c:;
			++it;
			goto _iter_begin_1b33c6e6c;
		}
		_iter_end_1b33c6e6c:;
	};
}



inline void _1c9a85ba8_optimizeStructs(_1c9ad938d_Optimizer* _self_, jule::Ptr<_1e6a1c24e_Package>& _7939_p) {
	{
		auto &expr = _7939_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1b33c8303:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a86010_SymbolTable> _8021_f = *it;
			{
				{
					auto &expr = _8021_f.get()._field_Structs;
					auto it = expr.begin();
					_iter_begin_1b33c904b:;
					if (it != expr.end()) {
						jule::Ptr<_1e5d4518d_Struct> _8125_s = *it;
						{
							_1c9a76c65_optimizeStruct(&(*_self_), _8125_s);
						}
						_iter_next_1b33c904b:;
						++it;
						goto _iter_begin_1b33c904b;
					}
					_iter_end_1b33c904b:;
				};
			}
			_iter_next_1b33c8303:;
			++it;
			goto _iter_begin_1b33c8303;
		}
		_iter_end_1b33c8303:;
	};
}



inline void _1c9a8dd15_optimizePackage(_1c9ad938d_Optimizer* _self_, jule::Ptr<_1e6a1c24e_Package>& _8739_p) {
	_1c9a786e5_optimizeGlobals(&(*_self_), _8739_p);
	_1c9a7e850_optimizeFunctions(&(*_self_), _8739_p);
	_1c9a85ba8_optimizeStructs(&(*_self_), _8739_p);
}



inline void _1c9a99419_Optimize(_1c9ad938d_Optimizer* _self_) {
	_1c9a9e6a5_detectEnabled();
	if (_1e4751a24_Deadcode) {
		_1c9b0e6b0_EliminateDefines((*_self_)._field_ir);
	};
	if ((_1c9a1c4be_scopeEnabled || _1c9a1b369_exprEnabled)) {
		{
			auto &expr = (*_self_)._field_ir.get()._field_Used;
			auto it = expr.begin();
			_iter_begin_1b33c9645:;
			if (it != expr.end()) {
				jule::Ptr<_1e6a192e5_ImportInfo> _10325_u = *it;
				{
					if ((!(_10325_u.get()._field_CppLinked))) {
						_1c9a8dd15_optimizePackage(&(*_self_), _10325_u.get()._field_Package);
					};
				}
				_iter_next_1b33c9645:;
				++it;
				goto _iter_begin_1b33c9645;
			}
			_iter_end_1b33c9645:;
		};
		_1c9a8dd15_optimizePackage(&(*_self_), (*_self_)._field_ir.get()._field_Main);
	};
	if (_1e4751a24_Deadcode) {
		_1c9b14462_EliminateScopes((*_self_)._field_ir);
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c9ad938d_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1c9b2cd0a_Reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__1c9b2e0c5_Print(jule::Str _1921_escape, jule::Str _1934_text) {
	jule::out(_1921_escape);
	jule::out(_1934_text);
	static__1c9b2cd0a_Reset();
}







std::ostream &operator<<(std::ostream &_Stream, _1c9b2ddd8_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1c9b3077a_LogFlat(_1e43e3a18_Log& _1424_l) {
	jule::outln(_1424_l._field_Text);
}



inline void static__1c9b30989_LogError(_1e43e3a18_Log& _1925_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out(_1925_l._field_Text);
	static__1c9b2cd0a_Reset();
	if ((_1925_l._field_Path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out(_1925_l._field_Path);
	};
	if (((_1925_l._field_Row != 0LL) && (_1925_l._field_Column != 0LL))) {
		jule::out(jule::Str(":", 1));
		jule::out(_1e6a04566_Itoa(_1925_l._field_Row));
		jule::out(jule::Str(":", 1));
		jule::out(_1e6a04566_Itoa(_1925_l._field_Column));
	};
	if ((_1925_l._field_Line.len() != 0LL)) {
		jule::Str _3621_line = _1e438e93c_TrimLeft(_1925_l._field_Line,jule::Str("\r\n\v\b ", 5));;
		jule::I64 _3721_offset = ((_1925_l._field_Line.len() - _3621_line.len()) + 1LL);;
		jule::I64 _3821_oldLen = _3621_line.len();;
		_3621_line=_1e438e93c_TrimLeft(_3621_line,jule::Str("\t", 1));
		if ((_3821_oldLen != _3621_line.len())) {
			_3721_offset+=((_3821_oldLen - _3621_line.len()) << 3LLU);
		};
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _1e6a04566_Itoa(_1925_l._field_Row);;
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_1e350c9ac_Repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_1e350c9ac_Repeat(jule::Str(" ", 1),static_cast<jule::I64>((_1925_l._field_Column - _3721_offset))));
		jule::out(jule::Str("^", 1));
		if ((_1925_l._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_1e350c9ac_Repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__1c9b2e0c5_Print(jule::Str("\033[95m", 5),jule::Str("suggestion: ", 12));
			jule::out(_1925_l._field_Suggestion);
		};
	};
	jule::outln(jule::Str("\n", 1));
}



inline void static__1c9b30b98_Log(_1e43e3a18_Log& _6520_l) {
	{
		auto &_match_expr{ _6520_l._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1b33db25b:;
			{
				static__1c9b3077a_LogFlat(_6520_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1b33db2c2:;
			{
				static__1c9b30989_LogError(_6520_l);
			}
		}
		_match_end_1b33db107:;
	};
}



inline void static__1c9b30da7_PrintLogs(jule::Slice<_1e43e3a18_Log>& _7526_logs) {
	{
		auto &expr = _7526_logs;
		auto it = expr.begin();
		_iter_begin_1b33d1086:;
		if (it != expr.end()) {
			_1e43e3a18_Log &_7616_l = *it;
			{
				static__1c9b30b98_Log(_7616_l);
			}
			_iter_next_1b33d1086:;
			++it;
			goto _iter_begin_1b33d1086;
		}
		_iter_end_1b33d1086:;
	};
	jule::out(jule::Str("=== ", 4));
	jule::out(_1e6a04566_Itoa(static_cast<jule::I64>(_7526_logs.len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _1c9b304c2_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _1b029b31c_Unix(_1b029ae65_AbsTime* _self_) {
	jule::Bool _5617_leap = false;;
	jule::U64 _5717_y = ((*_self_)._field_Year - 1900LLU);;
	jule::U64 _5817_m = ((*_self_)._field_Month - 1LLU);;
	if (((_5817_m >= 12LLU) || (_5817_m < 0LLU))) {
		jule::U64 _6021_adj = (_5817_m / 12LLU);;
		_5817_m%=12LL;
		if ((_5817_m < 0LLU)) {
			(_6021_adj)--;
			_5817_m+=12LLU;
		};
		_5717_y+=_6021_adj;
	};
	jule::U64 _6817_t = _1b02a1432_unixYearToSeconds(_5717_y,_5617_leap);;
	_6817_t+=_1b02a17b7_unixMonthToSeconds(_5817_m,_5617_leap);
	_6817_t+=(86400LLU * ((*_self_)._field_Day - 1LLU));
	_6817_t+=(3600LLU * (*_self_)._field_Hour);
	_6817_t+=(60LLU * (*_self_)._field_Minute);
	_6817_t+=(*_self_)._field_Second;
	return _6817_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1b029ae65_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _1b029b608_Time static__1b029b99e_Unix(jule::U64 _9120_sec) {
	return _1b029b608_Time{._field_sec=_9120_sec};
}



inline _1b029b608_Time static__1b029bb9c_Now(void) {
	return static__1b029b99e_Unix(static_cast<jule::U64>(_1b02a10e1_unix()));
}



inline jule::U64 _1b029c0ed_Unix(_1b029b608_Time* _self_) {
	return (*_self_)._field_sec;
}



inline jule::U64 _1b029c362_Day(_1b029b608_Time* _self_) {
	return _1b029d2db_Abs(&(*_self_))._field_Day;
}



inline jule::U64 _1b029c5c6_Month(_1b029b608_Time* _self_) {
	return _1b029d2db_Abs(&(*_self_))._field_Month;
}



inline jule::U64 _1b029c83a_Year(_1b029b608_Time* _self_) {
	return _1b029d2db_Abs(&(*_self_))._field_Year;
}



inline jule::U64 _1b029ca9e_Second(_1b029b608_Time* _self_) {
	return _1b029d2db_Abs(&(*_self_))._field_Second;
}



inline jule::U64 _1b029cd13_Minute(_1b029b608_Time* _self_) {
	return _1b029d2db_Abs(&(*_self_))._field_Minute;
}



inline jule::U64 _1b029d077_Hour(_1b029b608_Time* _self_) {
	return _1b029d2db_Abs(&(*_self_))._field_Hour;
}



inline _1b029ae65_AbsTime _1b029d2db_Abs(_1b029b608_Time* _self_) {
	jule::U64 _12713_secs = ((*_self_)._field_sec - 951868800LLU);;
	jule::U64 _12817_days = (_12713_secs / 86400LLU);;
	jule::U64 _12917_remSecs = (_12713_secs % 86400LL);;
	if ((_12917_remSecs < 0LLU)) {
		_12917_remSecs+=86400LLU;
		(_12817_days)--;
	};
	jule::U64 _13517_qcCycles = (_12817_days / 146097LLU);;
	jule::U64 _13617_remDays = (_12817_days % 146097LL);;
	if ((_13617_remDays < 0LLU)) {
		_13617_remDays+=146097LLU;
		(_13517_qcCycles)--;
	};
	jule::U64 _14217_cCycles = (_13617_remDays / 36524LLU);;
	if ((_14217_cCycles == 4LLU)) {
		(_14217_cCycles)--;
	};
	_13617_remDays-=(_14217_cCycles * 36524LLU);
	jule::U64 _14817_qCycles = (_13617_remDays / 1461LLU);;
	if ((_14817_qCycles == 25LLU)) {
		(_14817_qCycles)--;
	};
	_13617_remDays-=(_14817_qCycles * 1461LLU);
	jule::U64 _15417_remYears = (_13617_remDays / 365LLU);;
	if ((_15417_remYears == 4LLU)) {
		(_15417_remYears)--;
	};
	_13617_remDays-=(_15417_remYears * 365LLU);
	jule::U64 _16017_leap = static_cast<jule::U64>(0LLU);;
	if (((_15417_remYears == 0LLU) && ((_14817_qCycles > 0LLU) || (_14217_cCycles == 0LLU)))) {
		_16017_leap=1LLU;
	};
	jule::U64 _16417_yDay = (((_13617_remDays + 31LLU) + 28LLU) + _16017_leap);;
	if ((_16417_yDay >= (365LLU + _16017_leap))) {
		_16417_yDay-=(365LLU + _16017_leap);
	};
	jule::U64 _16917_months = 0LLU;;
	for (; (_1b029a508_mdays[static_cast<jule::I64>(_16917_months)] <= _13617_remDays); (_16917_months)++) {
		{
			_13617_remDays-=_1b029a508_mdays[static_cast<jule::I64>(_16917_months)];
		}
	_iter_next_1b341d05c:;
	}
	_iter_end_1b341d05c:;;
	_1b029ae65_AbsTime _17417_t = _1b029ae65_AbsTime{};;
	_17417_t._field_Year=static_cast<jule::U64>(((((_15417_remYears + (4LLU * _14817_qCycles)) + (100LLU * _14217_cCycles)) + (400LLU * _13517_qcCycles)) + 100LLU));
	_17417_t._field_Month=static_cast<jule::U64>((_16917_months + 2LLU));
	if ((_17417_t._field_Month >= 12LLU)) {
		_17417_t._field_Month-=12LLU;
		(_17417_t._field_Year)++;
	};
	_17417_t._field_Month+=1LLU;
	_17417_t._field_Year+=1900LLU;
	_17417_t._field_Day=static_cast<jule::U64>((_13617_remDays + 1LLU));
	_17417_t._field_WeekDay=static_cast<jule::U64>(((3LLU + _12817_days) % 7LL));
	if ((_17417_t._field_WeekDay < 0LLU)) {
		_17417_t._field_WeekDay+=7LLU;
	};
	_17417_t._field_YearDay=_16417_yDay;
	_17417_t._field_Hour=static_cast<jule::U64>((_12917_remSecs / 3600LLU));
	_17417_t._field_Minute=static_cast<jule::U64>(((_12917_remSecs / 60LLU) % 60LL));
	_17417_t._field_Second=static_cast<jule::U64>((_12917_remSecs % 60LL));
	return _17417_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1b029b608_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b0226000_scopeCoder> static__1b022661b_new(jule::Ptr<_1b02a1d06_ObjectCoder>& _5524_oc) {
	return jule::new_ptr<_1b0226000_scopeCoder>(_1b0226000_scopeCoder{._field_oc=_5524_oc});
}



inline void _1b0226891_rangeIndexIter(jule::Ptr<_1b0226000_scopeCoder> _self_, jule::Ptr<_1e6a0737c_RangeIter>& _6139_it) {
	jule::Str _6213_begin = static__1b0242769_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6139_it)));;
	jule::Str _6313_next = static__1b0242ca8_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6139_it)));;
	_1b028515d_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1b0285900_addIndent(_self_.get()._field_oc);
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_1e474c4e2_Copy && _1b022b555_isCopyOptimizable(_6139_it.get()._field_Expr))) {
		_1b028515d_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_1b028515d_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_1b0238e14_model(_self_.get()._field_oc.get()._field_ec, _6139_it.get()._field_Expr.get()._field_Model);
	_1b028515d_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, _6213_begin);
	_1b028515d_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_1b0285900_addIndent(_self_.get()._field_oc);
	_1b028713d_indent(_self_.get()._field_oc);
	if ((_6139_it.get()._field_KeyA != nullptr)) {
		_1b02a3962_varInitExpr(_self_.get()._field_oc, _6139_it.get()._field_KeyA,jule::Fn<void(void)>([=](void) mutable -> void {
			_1b028515d_write(_self_.get()._field_oc, jule::Str("it - expr.begin()", 17));
		}));
		_1b028515d_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1b028713d_indent(_self_.get()._field_oc);
	};
	if ((_6139_it.get()._field_KeyB != nullptr)) {
		if (_1e474c4e2_Copy) {
			_6139_it.get()._field_KeyB.get()._field_Reference=_1b022b8da_isIterCopyOptimizable(_6139_it.get()._field_Expr,_6139_it.get()._field_KeyB);
		};
		_1b02a3962_varInitExpr(_self_.get()._field_oc, _6139_it.get()._field_KeyB,jule::Fn<void(void)>([=](void) mutable -> void {
			_1b028515d_write(_self_.get()._field_oc, jule::Str("*it", 3));
		}));
		_1b028515d_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1b028713d_indent(_self_.get()._field_oc);
	};
	_1b022ae7d_scope(_self_, _6139_it.get()._field_Scope);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, _6313_next);
	_1b028515d_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1b028713d_indent(_self_.get()._field_oc);
	if ((_6139_it.get()._field_KeyA != nullptr)) {
		_1b028515d_write(_self_.get()._field_oc, static__1b02424c2_var(_6139_it.get()._field_KeyA));
		_1b028515d_write(_self_.get()._field_oc, jule::Str("++;\n", 4));
		_1b028713d_indent(_self_.get()._field_oc);
	};
	_1b028515d_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1b028515d_write(_self_.get()._field_oc, _6213_begin);
	_1b028515d_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1b02868e0_doneIndent(_self_.get()._field_oc);
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, static__1b0242a11_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6139_it))));
	_1b028515d_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1b02868e0_doneIndent(_self_.get()._field_oc);
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1b0226b16_rangeHashmapIter(jule::Ptr<_1b0226000_scopeCoder> _self_, jule::Ptr<_1e6a0737c_RangeIter>& _12941_it) {
	jule::Str _13013_begin = static__1b0242769_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12941_it)));;
	jule::Str _13113_next = static__1b0242ca8_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12941_it)));;
	_1b028515d_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1b0285900_addIndent(_self_.get()._field_oc);
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_1e474c4e2_Copy && _1b022b555_isCopyOptimizable(_12941_it.get()._field_Expr))) {
		_1b028515d_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_1b028515d_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_1b0238e14_model(_self_.get()._field_oc.get()._field_ec, _12941_it.get()._field_Expr.get()._field_Model);
	_1b028515d_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, _13013_begin);
	_1b028515d_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_1b0285900_addIndent(_self_.get()._field_oc);
	_1b028713d_indent(_self_.get()._field_oc);
	if ((_12941_it.get()._field_KeyA != nullptr)) {
		if (_1e474c4e2_Copy) {
			_12941_it.get()._field_KeyA.get()._field_Reference=_1b022b8da_isIterCopyOptimizable(_12941_it.get()._field_Expr,_12941_it.get()._field_KeyA);
		};
		_1b02a3962_varInitExpr(_self_.get()._field_oc, _12941_it.get()._field_KeyA,jule::Fn<void(void)>([=](void) mutable -> void {
			_1b028515d_write(_self_.get()._field_oc, jule::Str("it->first", 9));
		}));
		_1b028515d_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1b028713d_indent(_self_.get()._field_oc);
	};
	if ((_12941_it.get()._field_KeyB != nullptr)) {
		if (_1e474c4e2_Copy) {
			_12941_it.get()._field_KeyB.get()._field_Reference=_1b022b8da_isIterCopyOptimizable(_12941_it.get()._field_Expr,_12941_it.get()._field_KeyB);
		};
		_1b02a3962_varInitExpr(_self_.get()._field_oc, _12941_it.get()._field_KeyB,jule::Fn<void(void)>([=](void) mutable -> void {
			_1b028515d_write(_self_.get()._field_oc, jule::Str("it->second", 10));
		}));
		_1b028515d_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1b028713d_indent(_self_.get()._field_oc);
	};
	_1b022ae7d_scope(_self_, _12941_it.get()._field_Scope);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, _13113_next);
	_1b028515d_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1b028515d_write(_self_.get()._field_oc, _13013_begin);
	_1b028515d_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1b02868e0_doneIndent(_self_.get()._field_oc);
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, static__1b0242a11_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12941_it))));
	_1b028515d_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1b02868e0_doneIndent(_self_.get()._field_oc);
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1b0226d8b_ifCase(jule::Ptr<_1b0226000_scopeCoder> _self_, jule::Ptr<_1e6a068dc_If> _19530_i) {
	if ((_19530_i.get()._field_Expr != nullptr)) {
		_1b028515d_write(_self_.get()._field_oc, jule::Str("if (", 4));
		_1b0239189_expr(_self_.get()._field_oc.get()._field_ec, _19530_i.get()._field_Expr);
		_1b028515d_write(_self_.get()._field_oc, jule::Str(") ", 2));
	};
	_1b022ae7d_scope(_self_, _19530_i.get()._field_Scope);
}



inline void _1b0227111_conditional(jule::Ptr<_1b0226000_scopeCoder> _self_, jule::Ptr<_1e6a06cb6_Conditional> _20435_c) {
	jule::Bool _20517_writed = false;;
	{
		auto &expr = _20435_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1b34b1d8c:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a068dc_If> _20621_elif = *it;
			{
				if ((_20621_elif == nullptr)) {
					goto _iter_next_1b34b1d8c;
				};
				if (_20517_writed) {
					_1b028515d_write(_self_.get()._field_oc, jule::Str(" else ", 6));
				};
				_20517_writed=true;
				_1b0226d8b_ifCase(_self_, _20621_elif);
			}
			_iter_next_1b34b1d8c:;
			++it;
			goto _iter_begin_1b34b1d8c;
		}
		_iter_end_1b34b1d8c:;
	};
	if ((_20435_c.get()._field_Default != nullptr)) {
		if (_20517_writed) {
			_1b028515d_write(_self_.get()._field_oc, jule::Str(" else ", 6));
		};
		_1b022ae7d_scope(_self_, _20435_c.get()._field_Default.get()._field_Scope);
	};
}



inline void _1b0227386_infIter(jule::Ptr<_1b0226000_scopeCoder> _self_, jule::Ptr<_1e6a06ea3_InfIter> _22431_it) {
	_1b028515d_write(_self_.get()._field_oc, jule::Str("for (;;) {\n", 11));
	_1b0285900_addIndent(_self_.get()._field_oc);
	_1b028713d_indent(_self_.get()._field_oc);
	_1b022ae7d_scope(_self_, _22431_it.get()._field_Scope);
	_1b02868e0_doneIndent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, static__1b0242ca8_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_22431_it))));
	_1b028515d_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, static__1b0242a11_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_22431_it))));
	_1b028515d_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1b022760b_whileIter(jule::Ptr<_1b0226000_scopeCoder> _self_, jule::Ptr<_1e6a07190_WhileIter> _24133_it) {
	if (((_24133_it.get()._field_Expr != nullptr) && (_24133_it.get()._field_Next == nullptr))) {
		_1b028515d_write(_self_.get()._field_oc, jule::Str("while (", 7));
		_1b0239189_expr(_self_.get()._field_oc.get()._field_ec, _24133_it.get()._field_Expr);
		_1b028515d_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	} else {
		_1b028515d_write(_self_.get()._field_oc, jule::Str("for (; ", 7));
		if ((_24133_it.get()._field_Expr != nullptr)) {
			_1b0239189_expr(_self_.get()._field_oc.get()._field_ec, _24133_it.get()._field_Expr);
		};
		_1b028515d_write(_self_.get()._field_oc, jule::Str("; ", 2));
		if ((_24133_it.get()._field_Next != nullptr)) {
			_1b022a983_st(_self_, _24133_it.get()._field_Next);
		};
		_1b028515d_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	};
	_1b0285900_addIndent(_self_.get()._field_oc);
	_1b028713d_indent(_self_.get()._field_oc);
	_1b022ae7d_scope(_self_, _24133_it.get()._field_Scope);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1b02868e0_doneIndent(_self_.get()._field_oc);
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, static__1b0242ca8_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_24133_it))));
	_1b028515d_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, static__1b0242a11_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_24133_it))));
	_1b028515d_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1b0227881_rangeIter(jule::Ptr<_1b0226000_scopeCoder> _self_, jule::Ptr<_1e6a0737c_RangeIter> _27433_it) {
	{
		
		if ((_1e6ab9b26_Slc(_27433_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b34c2353:;
			{
				_1b0226891_rangeIndexIter(_self_, _27433_it);
			}
		}
		else if ((_1e6ab98b2_Arr(_27433_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b34c2023:;
			{
				_1b0226891_rangeIndexIter(_self_, _27433_it);
			}
		}
		else if ((_1e6aba5c7_Map(_27433_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b34c2089:;
			{
				_1b0226b16_rangeHashmapIter(_self_, _27433_it);
			}
		}
		else {
			_case_begin_1b34c1eac:;
			{
				_1b0226891_rangeIndexIter(_self_, _27433_it);
			}
		}
		_match_end_1b34c1dd0:;
	};
}



inline void _1b0227b06_cont(jule::Ptr<_1b0226000_scopeCoder> _self_, jule::Ptr<_1e6a07569_ContSt> _28724_c) {
	_1b028515d_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1b028515d_write(_self_.get()._field_oc, static__1b0242ca8_iterNext(_28724_c.get()._field_It));
}



inline void _1b0227d7b_label(jule::Ptr<_1b0226000_scopeCoder> _self_, jule::Ptr<_1e6a07943_Label> _29225_l) {
	_1b028515d_write(_self_.get()._field_oc, static__1b0243050_label(_29225_l.get()._field_Ident));
	_1b028515d_write(_self_.get()._field_oc, jule::Str(":", 1));
}



inline void _1b0228101_gotoSt(jule::Ptr<_1b0226000_scopeCoder> _self_, jule::Ptr<_1e6a07b30_GotoSt> _29726_gt) {
	_1b028515d_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1b028515d_write(_self_.get()._field_oc, static__1b0243050_label(_29726_gt.get()._field_Ident));
}



inline void _1b0228376_postfix(jule::Ptr<_1b0226000_scopeCoder> _self_, jule::Ptr<_1e6a07d1c_Postfix> _30231_p) {
	_1b028515d_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1b0239189_expr(_self_.get()._field_oc.get()._field_ec, _30231_p.get()._field_Expr);
	_1b028515d_write(_self_.get()._field_oc, jule::Str(")", 1));
	_1b028515d_write(_self_.get()._field_oc, _30231_p.get()._field_Op);
}



inline void _1b02285eb_assign(jule::Ptr<_1b0226000_scopeCoder> _self_, jule::Ptr<_1e6a08009_Assign> _30930_a) {
	_1b0239189_expr(_self_.get()._field_oc.get()._field_ec, _30930_a.get()._field_L.get()._field_Model);
	_1b028515d_write(_self_.get()._field_oc, _30930_a.get()._field_Op.get()._field_Kind);
	_1b0239189_expr(_self_.get()._field_oc.get()._field_ec, _30930_a.get()._field_R.get()._field_Model);
}



inline void _1b0228871_multiAssign(jule::Ptr<_1b0226000_scopeCoder> _self_, jule::Ptr<_1e6a081e6_MultiAssign> _31535_a) {
	_1b028515d_write(_self_.get()._field_oc, jule::Str("std::tie(", 9));
	{
		auto &expr = _31535_a.get()._field_L;
		auto it = expr.begin();
		_iter_begin_1b34cb55a:;
		if (it != expr.end()) {
			jule::I64 _31714_i = it - expr.begin();
			jule::Any _31721_l = *it;
			{
				if ((_31721_l == nullptr)) {
					_1b028515d_write(_self_.get()._field_oc, jule::Str("std::ignore", 11));
				} else {
					_1b0239189_expr(_self_.get()._field_oc.get()._field_ec, _31721_l);
				};
				if (((_31535_a.get()._field_L.len() - _31714_i) > 1LL)) {
					_1b028515d_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1b34cb55a:;
			++it;
			_31714_i++;
			goto _iter_begin_1b34cb55a;
		}
		_iter_end_1b34cb55a:;
	};
	_1b028515d_write(_self_.get()._field_oc, jule::Str(") = ", 4));
	_1b0239189_expr(_self_.get()._field_oc.get()._field_ec, _31535_a.get()._field_R);
}



inline jule::Fn<void(void)> _1b0228b7e_matchExpr(jule::Ptr<_1b0226000_scopeCoder> _self_, jule::Ptr<_1e6a083d3_Match> _33133_m) {
	if ((!(_1e6a8b631_IsConst(_33133_m.get()._field_Expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1b028515d_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
		});
	};
	if (((!(_1e5e10698_IsBool(_33133_m.get()._field_Expr.get()._field_Constant.ptr()))) || (!(_1e5e0d300_ReadBool(_33133_m.get()._field_Expr.get()._field_Constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1b0238e14_model(_self_.get()._field_oc.get()._field_ec, _33133_m.get()._field_Expr.get()._field_Model);
		});
	};
	return nullptr;
}



inline void _1b0228e9d_case(jule::Ptr<_1b0226000_scopeCoder> _self_, jule::Ptr<_1e6a083d3_Match> _34128_m, jule::Ptr<_1e6a08933_Case> _34143_c) {
	if (((_34143_c.get()._field_Exprs.len() != 0LL) && (!(_1e6a08801_IsGenericTypeMatch(_34128_m.ptr()))))) {
		if (((_34128_m.get()._field_Cases.len() > 0LL) && (_34128_m.get()._field_Cases[0LL] == _34143_c))) {
			_1b028515d_write(_self_.get()._field_oc, jule::Str("if (", 4));
		} else {
			_1b028515d_write(_self_.get()._field_oc, jule::Str("else if (", 9));
		};
		{
			auto &expr = _34143_c.get()._field_Exprs;
			auto it = expr.begin();
			_iter_begin_1b34d45eb:;
			if (it != expr.end()) {
				jule::I64 _34818_i = it - expr.begin();
				jule::Ptr<_1e6a8ac6d_Data> _34825_expr = *it;
				{
					{
						
						if ((!(_34128_m.get()._field_TypeMatch))) {
							_case_begin_1b34d69a5:;
							{
								jule::Fn<void(void)> _35125_caseExpr = _1b0228b7e_matchExpr(_self_, _34128_m);;
								if (_1e6a8b93e_GoodOperand(_34128_m.get()._field_Expr.ptr(), _34825_expr)) {
									if ((_35125_caseExpr != nullptr)) {
										_35125_caseExpr();
										_1b028515d_write(_self_.get()._field_oc, jule::Str(" == ", 4));
									};
									_1b0239189_expr(_self_.get()._field_oc.get()._field_ec, _34825_expr.get()._field_Model);
								} else {
									_1b0239189_expr(_self_.get()._field_oc.get()._field_ec, _34825_expr.get()._field_Model);
									if ((_35125_caseExpr != nullptr)) {
										_1b028515d_write(_self_.get()._field_oc, jule::Str(" == ", 4));
										_35125_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1b34d5410:;
							{
								_1b028515d_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
								_1b028515d_write(_self_.get()._field_oc, jule::Str(".type_is<", 9));
								_1b0239189_expr(_self_.get()._field_oc.get()._field_ec, _34825_expr.get()._field_Model);
								_1b028515d_write(_self_.get()._field_oc, jule::Str(">()", 3));
							}
						}
						_match_end_1b34d5333:;
					};
					if (((_34143_c.get()._field_Exprs.len() - _34818_i) > 1LL)) {
						_1b028515d_write(_self_.get()._field_oc, jule::Str(" || ", 4));
					};
				}
				_iter_next_1b34d45eb:;
				++it;
				_34818_i++;
				goto _iter_begin_1b34d45eb;
			}
			_iter_end_1b34d45eb:;
		};
		_1b028515d_write(_self_.get()._field_oc, jule::Str(") ", 2));
	} else if (((_34128_m.get()._field_Default == _34143_c) && (_34128_m.get()._field_Cases.len() != 0LL))) {
		_1b028713d_indent(_self_.get()._field_oc);
		_1b028515d_write(_self_.get()._field_oc, jule::Str("else ", 5));
	};
	_1b0285900_addIndent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, static__1b024358e_caseBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_34143_c))));
	_1b028515d_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	if ((_34143_c.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		_1b028713d_indent(_self_.get()._field_oc);
		_1b022ae7d_scope(_self_, _34143_c.get()._field_Scope);
		_1b028515d_write(_self_.get()._field_oc, jule::Str("\n", 1));
	};
	_1b02868e0_doneIndent(_self_.get()._field_oc);
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1b0229223_matchSt(jule::Ptr<_1b0226000_scopeCoder> _self_, jule::Ptr<_1e6a083d3_Match> _40031_m) {
	if (((_40031_m.get()._field_Cases.len() == 0LL) && (_40031_m.get()._field_Default == nullptr))) {
		return;;
	};
	jule::Bool _40513_genericTypeMatch = _1e6a08801_IsGenericTypeMatch(_40031_m.ptr());;
	if ((_40513_genericTypeMatch && ((_40031_m.get()._field_Default == nullptr) || (_40031_m.get()._field_Default.get()._field_Scope.get()._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1b028515d_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1b0285900_addIndent(_self_.get()._field_oc);
	_1b028713d_indent(_self_.get()._field_oc);
	if (((!(_40513_genericTypeMatch)) && (!(_1e6a8b631_IsConst(_40031_m.get()._field_Expr.ptr()))))) {
		if ((_1e474c4e2_Copy && _1b022b555_isCopyOptimizable(_40031_m.get()._field_Expr))) {
			_1b028515d_write(_self_.get()._field_oc, jule::Str("auto &_match_expr{ ", 19));
		} else {
			_1b028515d_write(_self_.get()._field_oc, jule::Str("auto _match_expr{ ", 18));
		};
		_1b0239189_expr(_self_.get()._field_oc.get()._field_ec, _40031_m.get()._field_Expr.get()._field_Model);
		_1b028515d_write(_self_.get()._field_oc, jule::Str(" };\n", 4));
		_1b028713d_indent(_self_.get()._field_oc);
	};
	if ((_40031_m.get()._field_Cases.len() > 0LL)) {
		{
			auto &expr = _40031_m.get()._field_Cases;
			auto it = expr.begin();
			_iter_begin_1b34e63dd:;
			if (it != expr.end()) {
				jule::Ptr<_1e6a08933_Case> _42925_c = *it;
				{
					if ((_42925_c == nullptr)) {
						goto _iter_next_1b34e63dd;
					};
					_1b028515d_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1b028713d_indent(_self_.get()._field_oc);
					_1b0228e9d_case(_self_, _40031_m,_42925_c);
				}
				_iter_next_1b34e63dd:;
				++it;
				goto _iter_begin_1b34e63dd;
			}
			_iter_end_1b34e63dd:;
		};
	};
	if ((_40031_m.get()._field_Default != nullptr)) {
		_1b028515d_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1b0228e9d_case(_self_, _40031_m,_40031_m.get()._field_Default);
	};
	_1b028515d_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, static__1b02432e7_matchEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_40031_m))));
	_1b028515d_write(_self_.get()._field_oc, jule::Str(":;", 2));
	_1b028515d_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1b02868e0_doneIndent(_self_.get()._field_oc);
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1b0229498_fallSt(jule::Ptr<_1b0226000_scopeCoder> _self_, jule::Ptr<_1e6a08c52_FallSt> _45626_f) {
	_1b028515d_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1b028515d_write(_self_.get()._field_oc, static__1b024358e_caseBegin(_45626_f.get()._field_DestCase));
}



inline void _1b022971d_breakSt(jule::Ptr<_1b0226000_scopeCoder> _self_, jule::Ptr<_1e6a07756_BreakSt> _46127_b) {
	_1b028515d_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	if ((_46127_b.get()._field_It != 0LLU)) {
		_1b028515d_write(_self_.get()._field_oc, static__1b0242a11_iterEnd(_46127_b.get()._field_It));
	} else {
		_1b028515d_write(_self_.get()._field_oc, static__1b02432e7_matchEnd(_46127_b.get()._field_Mtch));
	};
}



inline void _1b0229993_retWithVars(jule::Ptr<_1b0226000_scopeCoder> _self_, jule::Ptr<_1e6a08e3e_RetSt> _47035_r) {
	_1b028515d_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_47035_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1b028515d_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1b028515d_write(_self_.get()._field_oc, static__1b02ac6e6_kind(_47035_r.get()._field_Func.get()._field_Result));
		_1b028515d_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), ", 15));
	};
	if ((_47035_r.get()._field_Vars.len() > 1LL)) {
		_1b028515d_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	};
	{
		auto &expr = _47035_r.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1b3501a36:;
		if (it != expr.end()) {
			jule::I64 _48014_i = it - expr.begin();
			jule::Ptr<_1e6a3dd20_Var> _48021_v = *it;
			{
				if (_1e4716049_IsIgnoreIdent(_48021_v.get()._field_Ident)) {
					_1b0239684_initExpr(_self_.get()._field_oc.get()._field_ec, _48021_v.get()._field_Kind.get()._field_Kind);
				} else {
					_1b028515d_write(_self_.get()._field_oc, static__1b02424c2_var(_48021_v));
				};
				if (((_47035_r.get()._field_Vars.len() - _48014_i) > 1LL)) {
					_1b028515d_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1b3501a36:;
			++it;
			_48014_i++;
			goto _iter_begin_1b3501a36;
		}
		_iter_end_1b3501a36:;
	};
	if ((_47035_r.get()._field_Vars.len() > 1LL)) {
		_1b028515d_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	if (_47035_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1b028515d_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1b0229c18_retTuple(jule::Ptr<_1b0226000_scopeCoder> _self_, jule::Ptr<_1e6a08e3e_RetSt> _50032_r) {
	jule::Slice<jule::Ptr<_1e6a8ac6d_Data>> _50117_datas = _50032_r.get()._field_Expr.operator jule::Ptr<_1e5e17c55_TupleExprModel>().get()._field_Datas;;
	{
		auto &expr = _50032_r.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1b3506013:;
		if (it != expr.end()) {
			jule::I64 _50214_i = it - expr.begin();
			jule::Ptr<_1e6a3dd20_Var> _50221_v = *it;
			{
				if (_1e4716049_IsIgnoreIdent(_50221_v.get()._field_Ident)) {
					goto _iter_next_1b3506013;
				};
				jule::Any _50621_model = _50117_datas[_50214_i].get()._field_Model;;
				if ((_50621_model == _50221_v)) {
					goto _iter_next_1b3506013;
				};
				_1b028515d_write(_self_.get()._field_oc, static__1b02424c2_var(_50221_v));
				_1b028515d_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1b0239189_expr(_self_.get()._field_oc.get()._field_ec, _50621_model);
				_1b028515d_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				_1b028713d_indent(_self_.get()._field_oc);
			}
			_iter_next_1b3506013:;
			++it;
			_50214_i++;
			goto _iter_begin_1b3506013;
		}
		_iter_end_1b3506013:;
	};
	if (_50032_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1b028515d_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1b028515d_write(_self_.get()._field_oc, static__1b02ac6e6_kind(_50032_r.get()._field_Func.get()._field_Result));
		_1b028515d_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
	} else {
		_1b028515d_write(_self_.get()._field_oc, jule::Str("return ", 7));
	};
	_1b028515d_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	{
		auto &expr = _50117_datas;
		auto it = expr.begin();
		_iter_begin_1b350b090:;
		if (it != expr.end()) {
			jule::I64 _52714_i = it - expr.begin();
			jule::Ptr<_1e6a8ac6d_Data> _52721_d = *it;
			{
				jule::Ptr<_1e6a3dd20_Var> _52821_v = _50032_r.get()._field_Vars[_52714_i];;
				if (_1e4716049_IsIgnoreIdent(_52821_v.get()._field_Ident)) {
					_1b0239189_expr(_self_.get()._field_oc.get()._field_ec, _52721_d.get()._field_Model);
				} else {
					_1b028515d_write(_self_.get()._field_oc, static__1b02424c2_var(_52821_v));
				};
				if (((_50117_datas.len() - _52714_i) > 1LL)) {
					_1b028515d_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1b350b090:;
			++it;
			_52714_i++;
			goto _iter_begin_1b350b090;
		}
		_iter_end_1b350b090:;
	};
	_1b028515d_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_50032_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1b028515d_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1b0229e8d_retWithExprs(jule::Ptr<_1b0226000_scopeCoder> _self_, jule::Ptr<_1e6a08e3e_RetSt> _54536_r) {
	if ((_54536_r.get()._field_Vars.len() > 1LL)) {
		_1b0229c18_retTuple(_self_, _54536_r);
		return;;
	};
	if ((_54536_r.get()._field_Vars.len() > 0LL)) {
		jule::Ptr<_1e6a3dd20_Var> _55321_v = _54536_r.get()._field_Vars[0LL];;
		if (((!(_1e4716049_IsIgnoreIdent(_55321_v.get()._field_Ident))) && (_54536_r.get()._field_Expr != _55321_v))) {
			jule::Str _55521_ident = static__1b02424c2_var(_55321_v);;
			_1b028515d_write(_self_.get()._field_oc, _55521_ident);
			_1b028515d_write(_self_.get()._field_oc, jule::Str(" = ", 3));
			_1b0239189_expr(_self_.get()._field_oc.get()._field_ec, _54536_r.get()._field_Expr);
			_1b028515d_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			_1b028713d_indent(_self_.get()._field_oc);
			if (_54536_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
				_1b028515d_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
				_1b028515d_write(_self_.get()._field_oc, static__1b02ac6e6_kind(_54536_r.get()._field_Func.get()._field_Result));
				_1b028515d_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
				_1b028515d_write(_self_.get()._field_oc, _55521_ident);
				_1b028515d_write(_self_.get()._field_oc, jule::Str(")", 1));
			} else {
				_1b028515d_write(_self_.get()._field_oc, jule::Str("return ", 7));
				_1b028515d_write(_self_.get()._field_oc, _55521_ident);
			};
			return;;
		};
	};
	if (_54536_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1b028515d_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1b028515d_write(_self_.get()._field_oc, static__1b02ac6e6_kind(_54536_r.get()._field_Func.get()._field_Result));
		_1b028515d_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
		_1b0239189_expr(_self_.get()._field_oc.get()._field_ec, _54536_r.get()._field_Expr);
		_1b028515d_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1b028515d_write(_self_.get()._field_oc, jule::Str("return ", 7));
	_1b0239189_expr(_self_.get()._field_oc.get()._field_ec, _54536_r.get()._field_Expr);
	return;;
}



inline void _1b022a213_retSt(jule::Ptr<_1b0226000_scopeCoder> _self_, jule::Ptr<_1e6a08e3e_RetSt> _58929_r) {
	if (((_58929_r.get()._field_Expr == nullptr) && (_58929_r.get()._field_Vars.len() == 0LL))) {
		if (_58929_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_1b028515d_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();", 31));
			return;;
		};
		_1b028515d_write(_self_.get()._field_oc, jule::Str("return;", 7));
		return;;
	};
	if ((_58929_r.get()._field_Expr == nullptr)) {
		_1b0229993_retWithVars(_self_, _58929_r);
		return;;
	};
	_1b0229e8d_retWithExprs(_self_, _58929_r);
}



inline void _1b022a70d_var(jule::Ptr<_1b0226000_scopeCoder> _self_, jule::Ptr<_1e6a3dd20_Var> _62427_v) {
	if ((!(_62427_v.get()._field_Constant))) {
		_1b02a3bd7_var(_self_.get()._field_oc, _62427_v);
	};
}



inline void _1b022a983_st(jule::Ptr<_1b0226000_scopeCoder> _self_, jule::Any _63126_st) {
	if ((_63126_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _63126_st };
		
		if (_match_expr.type_is<jule::Ptr<_1e6a06700_Scope>>()) {
			_case_begin_1b352243b:;
			{
				_1b022ae7d_scope(_self_, _63126_st.operator jule::Ptr<_1e6a06700_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a3dd20_Var>>()) {
			_case_begin_1b35220ea:;
			{
				_1b022a70d_var(_self_, _63126_st.operator jule::Ptr<_1e6a3dd20_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a8ac6d_Data>>()) {
			_case_begin_1b3522a57:;
			{
				_1b0239189_expr(_self_.get()._field_oc.get()._field_ec, _63126_st.operator jule::Ptr<_1e6a8ac6d_Data>().get()._field_Model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a06cb6_Conditional>>()) {
			_case_begin_1b3522abd:;
			{
				_1b0227111_conditional(_self_, _63126_st.operator jule::Ptr<_1e6a06cb6_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a06ea3_InfIter>>()) {
			_case_begin_1b3522b34:;
			{
				_1b0227386_infIter(_self_, _63126_st.operator jule::Ptr<_1e6a06ea3_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a07190_WhileIter>>()) {
			_case_begin_1b3522b9a:;
			{
				_1b022760b_whileIter(_self_, _63126_st.operator jule::Ptr<_1e6a07190_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a0737c_RangeIter>>()) {
			_case_begin_1b3522c11:;
			{
				_1b0227881_rangeIter(_self_, _63126_st.operator jule::Ptr<_1e6a0737c_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a07569_ContSt>>()) {
			_case_begin_1b3522c77:;
			{
				_1b0227b06_cont(_self_, _63126_st.operator jule::Ptr<_1e6a07569_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a07943_Label>>()) {
			_case_begin_1b3522cdd:;
			{
				_1b0227d7b_label(_self_, _63126_st.operator jule::Ptr<_1e6a07943_Label>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a07b30_GotoSt>>()) {
			_case_begin_1b3522d54:;
			{
				_1b0228101_gotoSt(_self_, _63126_st.operator jule::Ptr<_1e6a07b30_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a07d1c_Postfix>>()) {
			_case_begin_1b3522dba:;
			{
				_1b0228376_postfix(_self_, _63126_st.operator jule::Ptr<_1e6a07d1c_Postfix>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a08009_Assign>>()) {
			_case_begin_1b3522e31:;
			{
				_1b02285eb_assign(_self_, _63126_st.operator jule::Ptr<_1e6a08009_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a081e6_MultiAssign>>()) {
			_case_begin_1b3522ea8:;
			{
				_1b0228871_multiAssign(_self_, _63126_st.operator jule::Ptr<_1e6a081e6_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a083d3_Match>>()) {
			_case_begin_1b3523030:;
			{
				_1b0229223_matchSt(_self_, _63126_st.operator jule::Ptr<_1e6a083d3_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a08c52_FallSt>>()) {
			_case_begin_1b35230a7:;
			{
				_1b0229498_fallSt(_self_, _63126_st.operator jule::Ptr<_1e6a08c52_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a07756_BreakSt>>()) {
			_case_begin_1b352312e:;
			{
				_1b022971d_breakSt(_self_, _63126_st.operator jule::Ptr<_1e6a07756_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a08e3e_RetSt>>()) {
			_case_begin_1b35231a6:;
			{
				_1b022a213_retSt(_self_, _63126_st.operator jule::Ptr<_1e6a08e3e_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e563d7cd_PushToSliceExprModel>>()) {
			_case_begin_1b352322d:;
			{
				_1b0236d9b_pushToSlice(_self_.get()._field_oc.get()._field_ec, _63126_st.operator jule::Ptr<_1e563d7cd_PushToSliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5ad7dcb_MutSlicingExprModel>>()) {
			_case_begin_1b35232a5:;
			{
				_1b0238919_mutSlicing(_self_.get()._field_oc.get()._field_ec, _63126_st.operator jule::Ptr<_1e5ad7dcb_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4926567_StrInsertBeginExprModel>>()) {
			_case_begin_1b352332c:;
			{
				_1b0238b8e_strInsertBegin(_self_.get()._field_oc.get()._field_ec, _63126_st.operator jule::Ptr<_1e4926567_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_1b3521d42:;
			{
				_1b028515d_write(_self_.get()._field_oc, jule::Str("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1b3521cdc:;
	};
}



inline void _1b022ac08_scopeStmts(jule::Ptr<_1b0226000_scopeCoder> _self_, jule::Ptr<_1e6a06700_Scope>& _68135_s) {
	{
		auto &expr = _68135_s.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_1b352d27c:;
		if (it != expr.end()) {
			jule::Any _68221_st = *it;
			{
				_1b028713d_indent(_self_.get()._field_oc);
				_1b022a983_st(_self_, _68221_st);
				_1b028515d_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1b352d27c:;
			++it;
			goto _iter_begin_1b352d27c;
		}
		_iter_end_1b352d27c:;
	};
}



inline void _1b022ae7d_scope(jule::Ptr<_1b0226000_scopeCoder> _self_, jule::Ptr<_1e6a06700_Scope> _69029_s) {
	_1b0285900_addIndent(_self_.get()._field_oc);
	if (_69029_s.get()._field_Deferred) {
		_1b028515d_write(_self_.get()._field_oc, jule::Str("__JULE_DEFER(", 13));
	};
	_1b028515d_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1b022ac08_scopeStmts(_self_, _69029_s);
	_1b02868e0_doneIndent(_self_.get()._field_oc);
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("}", 1));
	if (_69029_s.get()._field_Deferred) {
		_1b028515d_write(_self_.get()._field_oc, jule::Str(");", 2));
	};
}



inline void _1b022b203_funcScope(jule::Ptr<_1b0226000_scopeCoder> _self_, jule::Ptr<_1e5e202ce_FnIns> _70633_f) {
	if ((_70633_f.get()._field_Scope == nullptr)) {
		return;;
	};
	_1b028515d_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1b0285900_addIndent(_self_.get()._field_oc);
	if ((!(_1e5e1ca90_IsVoid(_70633_f.get()._field_Decl.ptr())))) {
		jule::Slice<jule::Ptr<_1e6ab6a8a_TypeKind>> _71321_types = _1e5e21401_Types(_70633_f.ptr());;
		{
			auto &expr = _70633_f.get()._field_Decl.get()._field_Result.get()._field_Idents;
			auto it = expr.begin();
			_iter_begin_1b3534041:;
			if (it != expr.end()) {
				jule::I64 _71417_i = it - expr.begin();
				jule::Ptr<_1e47137a5_Token> _71420_ident = *it;
				{
					if ((_1e4716049_IsIgnoreIdent(_71420_ident.get()._field_Kind) || _1e47162e1_IsAnonIdent(_71420_ident.get()._field_Kind))) {
						goto _iter_next_1b3534041;
					};
					_1b028713d_indent(_self_.get()._field_oc);
					_1b028515d_write(_self_.get()._field_oc, static__1b02ac6e6_kind(_71321_types[_71417_i]));
					_1b028515d_write(_self_.get()._field_oc, jule::Str(" ", 1));
					_1b028515d_write(_self_.get()._field_oc, static__1b0240db6_toLocal(_71420_ident.get()._field_Row,_71420_ident.get()._field_Column,_71420_ident.get()._field_Kind));
					_1b028515d_write(_self_.get()._field_oc, jule::Str(" = ", 3));
					_1b0239684_initExpr(_self_.get()._field_oc.get()._field_ec, _71321_types[_71417_i]);
					_1b028515d_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				}
				_iter_next_1b3534041:;
				++it;
				_71417_i++;
				goto _iter_begin_1b3534041;
			}
			_iter_end_1b3534041:;
		};
	};
	_1b022ac08_scopeStmts(_self_, _70633_f.get()._field_Scope);
	if ((_70633_f.get()._field_Decl.get()._field_Exceptional && _1e5e1ca90_IsVoid(_70633_f.get()._field_Decl.ptr()))) {
		_1b028515d_write(_self_.get()._field_oc, jule::Str(" return jule::VoidExceptional();\n", 33));
	};
	_1b02868e0_doneIndent(_self_.get()._field_oc);
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("}", 1));
}







std::ostream &operator<<(std::ostream &_Stream, _1b0226000_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b022da41_exprCoder> static__1b022de3c_new(jule::Ptr<_1b02a1d06_ObjectCoder>& _9724_oc) {
	return jule::new_ptr<_1b022da41_exprCoder>(_1b022da41_exprCoder{._field_oc=_9724_oc});
}



inline void _1b022e1b2_string(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5da6ba0_Const>& _10327_c) {
	jule::Str _10413_content = _1e5e0d564_ReadStr(_10327_c.ptr());;
	if ((_10413_content.len() == 0LL)) {
		_1b028515d_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		return;;
	};
	jule::Slice<jule::U8> _10913_bytes = static_cast<jule::Slice<jule::U8>>(_10413_content);;
	jule::Str _11013_len = _1e6a04434_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_10913_bytes.len())),10LL);;
	jule::Str _11113_lit = _1b023a388_cstrLit(_10913_bytes);;
	_1b028515d_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1b028515d_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1b028515d_write(_self_.get()._field_oc, _11113_lit);
	_1b028515d_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1b028515d_write(_self_.get()._field_oc, _11013_len);
	_1b028515d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b022e437_boolean(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5da6ba0_Const>& _12028_c) {
	if (_1e5e0d300_ReadBool(_12028_c.ptr())) {
		_1b028515d_write(_self_.get()._field_oc, jule::Str("true", 4));
		return;;
	};
	_1b028515d_write(_self_.get()._field_oc, jule::Str("false", 5));
}



inline void _1b022e613_nilLit(jule::Ptr<_1b022da41_exprCoder> _self_) {
	_1b028515d_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
}



inline jule::Bool _1b022e921_ftoaSpecialCases(jule::Ptr<_1b022da41_exprCoder> _self_, jule::F64& _13237_x) {
	{
		
		if (_1e694e8ce_IsNaN(_13237_x)) {
			_case_begin_1b35587e6:;
			{
				_1b028515d_write(_self_.get()._field_oc, jule::Str("NAN", 3));
			}
		}
		else if (_1e6956bd3_IsInf(_13237_x,1LL)) {
			_case_begin_1b35580a9:;
			{
				_1b028515d_write(_self_.get()._field_oc, jule::Str("INFINITY", 8));
			}
		}
		else if (_1e6956bd3_IsInf(_13237_x,-1LL)) {
			_case_begin_1b3558120:;
			{
				_1b028515d_write(_self_.get()._field_oc, jule::Str("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1b3558043:;
			{
				return false;
			}
		}
		_match_end_1b3557e66:;
	};
	return true;
}



inline void _1b022eb96_float32(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5da6ba0_Const>& _14628_c) {
	jule::F64 _14713_x = _1e5e0e015_AsF64(_14628_c.ptr());;
	if (_1b022e921_ftoaSpecialCases(_self_, _14713_x)) {
		return;;
	};
	{
		
		if ((_14713_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1b355b2bb:;
			{
				_1b028515d_write(_self_.get()._field_oc, jule::Str("jule::MAX_F32", 13));
			}
		}
		else if ((_14713_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1b355aebe:;
			{
				_1b028515d_write(_self_.get()._field_oc, jule::Str("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1b355a83c:;
			{
				_1b028515d_write(_self_.get()._field_oc, _1b023a696_ftoa(_14713_x,32LL));
				_1b028515d_write(_self_.get()._field_oc, jule::Str("f", 1));
			}
		}
		_match_end_1b355ac05:;
	};
}



inline void _1b022ee1b_float64(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5da6ba0_Const>& _16528_c) {
	jule::F64 _16613_x = _1e5e0e015_AsF64(_16528_c.ptr());;
	if (_1b022e921_ftoaSpecialCases(_self_, _16613_x)) {
		return;;
	};
	{
		
		if ((_16613_x == jule::MAX_F64)) {
			_case_begin_1b355e313:;
			{
				_1b028515d_write(_self_.get()._field_oc, jule::Str("jule::MAX_F64", 13));
			}
		}
		else if ((_16613_x == jule::MIN_F64)) {
			_case_begin_1b355e973:;
			{
				_1b028515d_write(_self_.get()._field_oc, jule::Str("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1b355d884:;
			{
				_1b028515d_write(_self_.get()._field_oc, _1b023a696_ftoa(_16613_x,64LL));
			}
		}
		_match_end_1b355dc4c:;
	};
}



inline void _1b023023a_constant(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5da6ba0_Const> _18432_c, jule::Bool _18443_fx32) {
	{
		
		if (_1e5e1090c_IsStr(_18432_c.ptr())) {
			_case_begin_1b356127c:;
			{
				_1b022e1b2_string(_self_, _18432_c);
			}
		}
		else if (_1e5e10698_IsBool(_18432_c.ptr())) {
			_case_begin_1b35612e3:;
			{
				_1b022e437_boolean(_self_, _18432_c);
			}
		}
		else if (_1e5e10b71_IsF64(_18432_c.ptr())) {
			_case_begin_1b3561359:;
			{
				{
					
					if (_18443_fx32) {
						_case_begin_1b3563548:;
						{
							_1b022eb96_float32(_self_, _18432_c);
						}
					}
					else {
						_case_begin_1b35631a2:;
						{
							_1b022ee1b_float64(_self_, _18432_c);
						}
					}
					_match_end_1b35630c5:;
				};
			}
		}
		else if (_1e5e101c0_IsI64(_18432_c.ptr())) {
			_case_begin_1b35613c0:;
			{
				_1b028515d_write(_self_.get()._field_oc, _1b023a93d_itoa(static_cast<jule::I64>(_1e5e0cd27_ReadI64(_18432_c.ptr()))));
			}
		}
		else if (_1e5e10434_IsU64(_18432_c.ptr())) {
			_case_begin_1b3561c1c:;
			{
				_1b028515d_write(_self_.get()._field_oc, _1b023abd5_utoa(static_cast<jule::U64>(_1e5e0d08b_ReadU64(_18432_c.ptr()))));
			}
		}
		else if (_1e5e10dd5_IsNil(_18432_c.ptr())) {
			_case_begin_1b3561c83:;
			{
				_1b022e613_nilLit(_self_);
			}
		}
		else {
			_case_begin_1b3561216:;
			{
				_1b028515d_write(_self_.get()._field_oc, jule::Str("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1b3561139:;
	};
}



inline void _1b0230603_divByZeroBinary(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e47137a5_Token>& _20836_op, jule::Ptr<_1e5e151b4_OperandExprModel>& _20853_l, jule::Ptr<_1e5e151b4_OperandExprModel>& _20880_r) {
	_1b028515d_write(_self_.get()._field_oc, jule::Str("jule::", 6));
	{
		auto &_match_expr{ _20836_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("/=", 2)) {
			_case_begin_1b356664a:;
			{
				_1b028515d_write(_self_.get()._field_oc, jule::Str("div(", 4));
			}
		}
		else if (_match_expr == jule::Str("%", 1) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1b35666b1:;
			{
				_1b028515d_write(_self_.get()._field_oc, jule::Str("mod(", 4));
			}
		}
		_match_end_1b356654b:;
	};
	if ((!(_1e24b666a_Production))) {
		_1b028515d_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1b0288529_locInfo(_self_.get()._field_oc, _20836_op);
		_1b028515d_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1b0239189_expr(_self_, _20853_l.get()._field_Model);
	_1b028515d_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1b0239189_expr(_self_, _20880_r.get()._field_Model);
	_1b028515d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b0230878_unsafeBinary(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5e153a1_BinopExprModel> _23036_m) {
	_1b028515d_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1b0238e14_model(_self_, _23036_m.get()._field_Left.get()._field_Model);
	_1b028515d_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1b028515d_write(_self_.get()._field_oc, _23036_m.get()._field_Op.get()._field_Kind);
	_1b028515d_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1b0238e14_model(_self_, _23036_m.get()._field_Right.get()._field_Model);
	_1b028515d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b0230aed_binary(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5e153a1_BinopExprModel> _24030_m) {
	{
		auto &_match_expr{ _24030_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("%", 1)) {
			_case_begin_1b356cc8e:;
			{
				if ((_1e6aba0ee_Struct(_24030_m.get()._field_Left.get()._field_Kind.ptr()) == nullptr)) {
					_1b0230603_divByZeroBinary(_self_, _24030_m.get()._field_Op,_24030_m.get()._field_Left,_24030_m.get()._field_Right);
					return;;
				};
			}
		}
		_match_end_1b356cbd4:;
	};
	_1b0230878_unsafeBinary(_self_, _24030_m);
}



inline void _1b0230d73_var(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e6a3dd20_Var> _25227_m) {
	if (_25227_m.get()._field_CppLinked) {
		jule::Ptr<_1e5d21268_Directive> _25417_d = _1b02b0056_findDirective(_25227_m.get()._field_Directives,jule::Str("namespace", 9));;
		if ((_25417_d != nullptr)) {
			_1b028515d_write(_self_.get()._field_oc, _1b02a6b30_concatAllParts(_25417_d.get()._field_Args));
			_1b028515d_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1b028515d_write(_self_.get()._field_oc, static__1b02424c2_var(_25227_m));
}



inline void _1b02310e8_structureIns(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5d714d8_StructIns> _26336_m) {
	_1b028515d_write(_self_.get()._field_oc, static__1b02ab0da_structureIns(_26336_m));
}



inline void _1b023136d_unary(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5e1558d_UnaryExprModel> _26729_m) {
	{
		auto &_match_expr{ _26729_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1b3572821:;
			{
				_1b028515d_write(_self_.get()._field_oc, jule::Str("(~(", 3));
				_1b0239189_expr(_self_, _26729_m.get()._field_Expr.get()._field_Model);
				_1b028515d_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1b3572887:;
			{
				if ((_1e24b666a_Production || (_1e6ab8e11_Sptr(_26729_m.get()._field_Expr.get()._field_Kind.ptr()) == nullptr))) {
					goto _match_end_1b3572766;
				};
				_1b0239189_expr(_self_, _26729_m.get()._field_Expr.get()._field_Model);
				_1b028515d_write(_self_.get()._field_oc, jule::Str(".get(\"", 6));
				_1b0288529_locInfo(_self_.get()._field_oc, _26729_m.get()._field_Op);
				_1b028515d_write(_self_.get()._field_oc, jule::Str("\")", 2));
				return;;
			}
		}
		_match_end_1b3572766:;
	};
	_1b028515d_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1b028515d_write(_self_.get()._field_oc, _26729_m.get()._field_Op.get()._field_Kind);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1b0239189_expr(_self_, _26729_m.get()._field_Expr.get()._field_Model);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1b02315e3_structureLit(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5e15967_StructLitExprModel> _29136_m) {
	if (_29136_m.get()._field_Strct.get()._field_Decl.get()._field_CppLinked) {
		_1b028515d_write(_self_.get()._field_oc, jule::Str("(", 1));
	};
	_1b028515d_write(_self_.get()._field_oc, static__1b0241e83_structureIns(_29136_m.get()._field_Strct));
	if (_29136_m.get()._field_Strct.get()._field_Decl.get()._field_CppLinked) {
		_1b028515d_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	_1b028515d_write(_self_.get()._field_oc, jule::Str("{", 1));
	if ((_29136_m.get()._field_Args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto &expr = _29136_m.get()._field_Strct.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1b3579e77:;
			if (it != expr.end()) {
				jule::I64 _30417_i = it - expr.begin();
				jule::Ptr<_1e5d4c805_FieldIns> _30420_f = *it;
				{
					{
						auto &expr = _29136_m.get()._field_Args;
						auto it = expr.begin();
						_iter_begin_1b357aa49:;
						if (it != expr.end()) {
							jule::Ptr<_1e5e1577a_StructArgExprModel> _30529_arg = *it;
							{
								if ((_30529_arg.get()._field_Field == _30420_f)) {
									_1b028515d_write(_self_.get()._field_oc, jule::Str(".", 1));
									_1b028515d_write(_self_.get()._field_oc, static__1b024222a_field(_30529_arg.get()._field_Field.get()._field_Decl));
									_1b028515d_write(_self_.get()._field_oc, jule::Str("=", 1));
									_1b0239189_expr(_self_, _30529_arg.get()._field_Expr);
									if (((_29136_m.get()._field_Strct.get()._field_Fields.len() - _30417_i) > 1LL)) {
										_1b028515d_write(_self_.get()._field_oc, jule::Str(", ", 2));
									};
									goto _iter_next_1b3579e77;
								};
							}
							_iter_next_1b357aa49:;
							++it;
							goto _iter_begin_1b357aa49;
						}
						_iter_end_1b357aa49:;
					};
				}
				_iter_next_1b3579e77:;
				++it;
				_30417_i++;
				goto _iter_begin_1b3579e77;
			}
			_iter_end_1b3579e77:;
		};
	};
	_1b028515d_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1b0231868_allocStructure(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5e15b54_AllocStructLitExprModel> _32238_m) {
	_1b028515d_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1b028515d_write(_self_.get()._field_oc, static__1b0241e83_structureIns(_32238_m.get()._field_Lit.get()._field_Strct));
	_1b028515d_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1b02315e3_structureLit(_self_, _32238_m.get()._field_Lit);
	_1b028515d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b0231add_casting(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5e15d41_CastingExprModel> _33031_m) {
	{
		
		if (((_1e6ab8b9c_Prim(_33031_m.get()._field_Kind.ptr()) != nullptr) && _1e6abea0a_IsAny(_1e6ab8b9c_Prim(_33031_m.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1b35818eb:;
			{
				_1b028515d_write(_self_.get()._field_oc, static__1b02ac6e6_kind(_33031_m.get()._field_Kind));
				_1b028515d_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1b0238e14_model(_self_, _33031_m.get()._field_Expr);
				_1b028515d_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if ((_1e6ab9175_Ptr(_33031_m.get()._field_ExprKind.ptr()) != nullptr) || (_1e6ab9175_Ptr(_33031_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b35815bb:;
			{
				_1b028515d_write(_self_.get()._field_oc, jule::Str("((", 2));
				_1b028515d_write(_self_.get()._field_oc, static__1b02ac6e6_kind(_33031_m.get()._field_Kind));
				_1b028515d_write(_self_.get()._field_oc, jule::Str(")(", 2));
				_1b0239189_expr(_self_, _33031_m.get()._field_Expr);
				_1b028515d_write(_self_.get()._field_oc, jule::Str("))", 2));
			}
		}
		else if ((_1e6aba363_Trait(_33031_m.get()._field_ExprKind.ptr()) != nullptr) || ((_1e6ab8b9c_Prim(_33031_m.get()._field_ExprKind.ptr()) != nullptr) && _1e6abea0a_IsAny(_1e6ab8b9c_Prim(_33031_m.get()._field_ExprKind.ptr()).ptr())) || (_1e6ab964d_TypeEnum(_33031_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1b3581632:;
			{
				_1b0238e14_model(_self_, _33031_m.get()._field_Expr);
				_1b028515d_write(_self_.get()._field_oc, jule::Str(".", 1));
				if (_1e24b666a_Production) {
					_1b028515d_write(_self_.get()._field_oc, jule::Str("operator ", 9));
					_1b028515d_write(_self_.get()._field_oc, static__1b02ac6e6_kind(_33031_m.get()._field_Kind));
					_1b028515d_write(_self_.get()._field_oc, jule::Str("()", 2));
				} else {
					if ((_1e6ab8e11_Sptr(_33031_m.get()._field_Kind.ptr()) != nullptr)) {
						_1b028515d_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
						_1b028515d_write(_self_.get()._field_oc, static__1b02ac6e6_kind(_1e6ab8e11_Sptr(_33031_m.get()._field_Kind.ptr()).get()._field_Elem));
					} else {
						_1b028515d_write(_self_.get()._field_oc, jule::Str("cast<", 5));
						_1b028515d_write(_self_.get()._field_oc, static__1b02ac6e6_kind(_33031_m.get()._field_Kind));
					};
					_1b028515d_write(_self_.get()._field_oc, jule::Str(">(\"", 3));
					_1b0288529_locInfo(_self_.get()._field_oc, _33031_m.get()._field_Token);
					_1b028515d_write(_self_.get()._field_oc, jule::Str("\")", 2));
				};
			}
		}
		else if ((_1e6aba363_Trait(_33031_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3581698:;
			{
				_1b028515d_write(_self_.get()._field_oc, static__1b02ac6e6_kind(_33031_m.get()._field_Kind));
				_1b028515d_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1b0239189_expr(_self_, _33031_m.get()._field_Expr);
				_1b028515d_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1b028515d_write(_self_.get()._field_oc, _1e6a04566_Itoa(static_cast<jule::I64>(_1b02764b2_findTypeOffset(_self_.get()._field_oc.ptr(), _1e6aba363_Trait(_33031_m.get()._field_Kind.ptr()),_33031_m.get()._field_ExprKind))));
				_1b028515d_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else {
			_case_begin_1b3581555:;
			{
				_1b028515d_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
				_1b028515d_write(_self_.get()._field_oc, static__1b02ac6e6_kind(_33031_m.get()._field_Kind));
				_1b028515d_write(_self_.get()._field_oc, jule::Str(">(", 2));
				_1b0239189_expr(_self_, _33031_m.get()._field_Expr);
				_1b028515d_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1b3581478:;
	};
}



inline void _1b0231d63_args(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Slice<jule::Any> _38128_args) {
	if ((_38128_args.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _38128_args;
		auto it = expr.begin();
		_iter_begin_1b3591ec2:;
		if (it != expr.end()) {
			jule::I64 _38514_i = it - expr.begin();
			jule::Any _38521_a = *it;
			{
				_1b0239189_expr(_self_, _38521_a);
				if (((_38128_args.len() - _38514_i) > 1LL)) {
					_1b028515d_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1b3591ec2:;
			++it;
			_38514_i++;
			goto _iter_begin_1b3591ec2;
		}
		_iter_end_1b3591ec2:;
	};
}



inline void _1b02320d8_modelForCall(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Any _39336_expr) {
	{
		auto &_match_expr{ _39336_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1e5e202ce_FnIns>>()) {
			_case_begin_1b3593e91:;
			{
				_1b0234dbb_funcIns(_self_, _39336_expr.operator jule::Ptr<_1e5e202ce_FnIns>());
				return;;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e172b5_StructSubIdentExprModel>>()) {
			_case_begin_1b3594018:;
			{
				jule::Ptr<_1e5e172b5_StructSubIdentExprModel> _39921_ssie = _39336_expr.operator jule::Ptr<_1e5e172b5_StructSubIdentExprModel>();;
				if ((_39921_ssie.get()._field_Method != nullptr)) {
					_1b0234dbb_funcIns(_self_, _39921_ssie.get()._field_Method);
					return;;
				};
			}
		}
		_match_end_1b3593d81:;
	};
	_1b0238e14_model(_self_, _39336_expr);
}



inline void _1b023235d_pushCallInf(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5e1602d_FnCallExprModel>& _40832_m) {
	if ((_1e24b666a_Production || ((!(_40832_m.get()._field_Func.get()._field_Anon)) && (!(_1b023b356_isBuiltinCallHasDebuginf(_40832_m)))))) {
		_1b028515d_write(_self_.get()._field_oc, jule::Str("(", 1));
		return;;
	};
	if (_40832_m.get()._field_Func.get()._field_Anon) {
		{
			auto &_match_expr{ _40832_m.get()._field_Expr };
			
			if (_match_expr.type_is<jule::Ptr<_1e5e172b5_StructSubIdentExprModel>>()) {
				_case_begin_1b359736d:;
				{
					if (_40832_m.get()._field_Expr.operator jule::Ptr<_1e5e172b5_StructSubIdentExprModel>().get()._field_Field.get()._field_Decl.get()._field_Owner.get()._field_CppLinked) {
						_1b028515d_write(_self_.get()._field_oc, jule::Str("(", 1));
						return;;
					};
					goto _case_begin_1b3597549;
				}
			}
			else {
				_case_begin_1b3597549:;
				{
					_1b028515d_write(_self_.get()._field_oc, jule::Str(".call", 5));
				}
			}
			_match_end_1b3597428:;
		};
	};
	_1b028515d_write(_self_.get()._field_oc, jule::Str("(\"", 2));
	_1b0288529_locInfo(_self_.get()._field_oc, _40832_m.get()._field_Token);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("\"", 1));
	if ((_40832_m.get()._field_Args.len() != 0LL)) {
		_1b028515d_write(_self_.get()._field_oc, jule::Str(",", 1));
	};
}



inline jule::Bool _1b023266b_isWrapped(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5e1602d_FnCallExprModel>& _43334_m) {
	if ((((!(_1e5e21665_IsBuiltin(_43334_m.get()._field_Func.ptr()))) && (_43334_m.get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _1e5e1b41d_IsSelf(_43334_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ _43334_m.get()._field_Expr };
			
			if (_match_expr.type_is<jule::Ptr<_1e5e172b5_StructSubIdentExprModel>>()) {
				_case_begin_1b359b0a8:;
				{
					jule::Ptr<_1e5e172b5_StructSubIdentExprModel> _43725_ssie = _43334_m.get()._field_Expr.operator jule::Ptr<_1e5e172b5_StructSubIdentExprModel>();;
					{
						
						if (_1e5e1b682_IsRef(_43334_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()) || (_1e6ab8e11_Sptr(_43725_ssie.get()._field_ExprKind.ptr()) != nullptr)) {
							_case_begin_1b359b8d3:;
							{
								goto _match_end_1b359be66;
							}
						}
						else {
							_case_begin_1b359becc:;
							{
								if ((_1e6aba0ee_Struct(_43725_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									if ((!(_43725_ssie.get()._field_Expr.get()._field_Lvalue))) {
										_1b028515d_write(_self_.get()._field_oc, jule::Str("({ auto _wrap_copy = ", 21));
										_1b0238e14_model(_self_, _43725_ssie.get()._field_Expr.get()._field_Model);
										_1b028515d_write(_self_.get()._field_oc, jule::Str("; ", 2));
										return true;
									};
								};
							}
						}
						_match_end_1b359be66:;
					};
				}
			}
			_match_end_1b359ad99:;
		};
	};
	return false;
}



inline void _1b02328e1_pureFuncCall(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5e1602d_FnCallExprModel>& _45737_m) {
	jule::Bool _45813_wrapped = _1b023266b_isWrapped(_self_, _45737_m);;
	if (_45737_m.get()._field_IsCo) {
		_1b028515d_write(_self_.get()._field_oc, jule::Str("__JULE_CO(", 10));
	};
	_1b02320d8_modelForCall(_self_, _45737_m.get()._field_Expr);
	if ((!(_1e5e21665_IsBuiltin(_45737_m.get()._field_Func.ptr())))) {
		if ((_45737_m.get()._field_Func.get()._field_Decl.get()._field_CppLinked && (_45737_m.get()._field_Func.get()._field_Generics.len() > 0LL))) {
			if ((!(_1b02b03db_hasDirective(_45737_m.get()._field_Func.get()._field_Decl.get()._field_Directives,jule::Str("cdef", 4))))) {
				_1b028515d_write(_self_.get()._field_oc, jule::Str("<", 1));
				{
					auto &expr = _45737_m.get()._field_Func.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1b35a3302:;
					if (it != expr.end()) {
						jule::I64 _46726_i = it - expr.begin();
						jule::Ptr<_1e6ab535d_InsGeneric> _46733_g = *it;
						{
							_1b028515d_write(_self_.get()._field_oc, static__1b02ac6e6_kind(_46733_g.get()._field_Kind));
							if (((_45737_m.get()._field_Func.get()._field_Generics.len() - _46726_i) > 1LL)) {
								_1b028515d_write(_self_.get()._field_oc, jule::Str(",", 1));
							};
						}
						_iter_next_1b35a3302:;
						++it;
						_46726_i++;
						goto _iter_begin_1b35a3302;
					}
					_iter_end_1b35a3302:;
				};
				_1b028515d_write(_self_.get()._field_oc, jule::Str(">", 1));
			};
		};
	};
	_1b023235d_pushCallInf(_self_, _45737_m);
	jule::Bool _47817_locinfo = false;;
	if ((((!(_1e5e21665_IsBuiltin(_45737_m.get()._field_Func.ptr()))) && (_45737_m.get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _1e5e1b41d_IsSelf(_45737_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ _45737_m.get()._field_Expr };
			
			if (_match_expr.type_is<jule::Ptr<_1e5e172b5_StructSubIdentExprModel>>()) {
				_case_begin_1b35a2015:;
				{
					jule::Ptr<_1e5e172b5_StructSubIdentExprModel> _48225_ssie = _45737_m.get()._field_Expr.operator jule::Ptr<_1e5e172b5_StructSubIdentExprModel>();;
					{
						
						if (_1e5e1b682_IsRef(_45737_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr())) {
							_case_begin_1b35a8ec8:;
							{
								_1b0238e14_model(_self_, _48225_ssie.get()._field_Expr.get()._field_Model);
							}
						}
						else if ((_1e6ab8e11_Sptr(_48225_ssie.get()._field_ExprKind.ptr()) != nullptr)) {
							_case_begin_1b35a9539:;
							{
								_1b0238e14_model(_self_, _48225_ssie.get()._field_Expr.get()._field_Model);
								_1b028515d_write(_self_.get()._field_oc, jule::Str(".ptr(", 5));
								if ((!(_1e24b666a_Production))) {
									_1b028515d_write(_self_.get()._field_oc, jule::Str("\"", 1));
									_1b0288529_locInfo(_self_.get()._field_oc, _45737_m.get()._field_Token);
									_1b028515d_write(_self_.get()._field_oc, jule::Str("\"", 1));
								};
								_1b028515d_write(_self_.get()._field_oc, jule::Str(")", 1));
							}
						}
						else {
							_case_begin_1b35a7b31:;
							{
								if ((_1e6aba0ee_Struct(_48225_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									_1b028515d_write(_self_.get()._field_oc, jule::Str("&", 1));
								};
								if (_45813_wrapped) {
									_1b028515d_write(_self_.get()._field_oc, jule::Str("_wrap_copy", 10));
								} else {
									_1b0238e14_model(_self_, _48225_ssie.get()._field_Expr.get()._field_Model);
								};
							}
						}
						_match_end_1b35a7aba:;
					};
					if ((_45737_m.get()._field_Args.len() > 0LL)) {
						_1b028515d_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1e5e16d97_TraitSubIdentExprModel>>()) {
				_case_begin_1b35a6ba7:;
				{
					_1b0238e14_model(_self_, _45737_m.get()._field_Expr.operator jule::Ptr<_1e5e16d97_TraitSubIdentExprModel>().get()._field_Expr);
					if ((!(_1e24b666a_Production))) {
						_47817_locinfo=true;
					};
					if ((_45737_m.get()._field_Args.len() > 0LL)) {
						_1b028515d_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			_match_end_1b35a6a42:;
		};
	};
	_1b0231d63_args(_self_, _45737_m.get()._field_Args);
	if (_47817_locinfo) {
		_1b028515d_write(_self_.get()._field_oc, jule::Str(", \"", 3));
		_1b0288529_locInfo(_self_.get()._field_oc, _45737_m.get()._field_Token);
		_1b028515d_write(_self_.get()._field_oc, jule::Str("\"", 1));
	};
	_1b028515d_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_45813_wrapped) {
		_1b028515d_write(_self_.get()._field_oc, jule::Str("; })", 4));
	};
	if (_45737_m.get()._field_IsCo) {
		_1b028515d_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1b0232b66_funcCall(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5e1602d_FnCallExprModel> _53632_m) {
	if (((_1e5e21665_IsBuiltin(_53632_m.get()._field_Func.ptr()) || (!(_53632_m.get()._field_Func.get()._field_Decl.get()._field_Exceptional))) || ((_53632_m.get()._field_Except != nullptr) && (_53632_m.get()._field_Except.get()._field_Stmts.len() == 0LL)))) {
		_1b02328e1_pureFuncCall(_self_, _53632_m);
		return;;
	};
	_1b028515d_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1b0285900_addIndent(_self_.get()._field_oc);
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("auto except = ", 14));
	_1b02328e1_pureFuncCall(_self_, _53632_m);
	_1b028515d_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1b028713d_indent(_self_.get()._field_oc);
	if ((_53632_m.get()._field_Except != nullptr)) {
		if (((_53632_m.get()._field_Func.get()._field_Result == nullptr) || (!(_53632_m.get()._field_Assigned)))) {
			_1b028515d_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) ", 18));
			_1b022ae7d_scope(_self_.get()._field_oc.get()._field_sc, _53632_m.get()._field_Except);
			_1b028515d_write(_self_.get()._field_oc, jule::Str("\n", 1));
		} else {
			jule::Bool _55821_forwarded = _1b023b08c_isForwarded(_53632_m.get()._field_Except);;
			_1b028515d_write(_self_.get()._field_oc, jule::Str("(except.ok()) ? (except.result) : (", 35));
			if (_55821_forwarded) {
				_1b028515d_write(_self_.get()._field_oc, jule::Str("{", 1));
			};
			_1b022ae7d_scope(_self_.get()._field_oc.get()._field_sc, _53632_m.get()._field_Except);
			if (_55821_forwarded) {
				_1b028515d_write(_self_.get()._field_oc, jule::Str(" ", 1));
				_1b0239684_initExpr(_self_, _53632_m.get()._field_Func.get()._field_Result);
				_1b028515d_write(_self_.get()._field_oc, jule::Str(";}", 2));
			};
			_1b028515d_write(_self_.get()._field_oc, jule::Str(");\n", 3));
		};
		_1b02868e0_doneIndent(_self_.get()._field_oc);
	} else {
		_1b028515d_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1b0288529_locInfo(_self_.get()._field_oc, _53632_m.get()._field_Token);
		_1b028515d_write(_self_.get()._field_oc, jule::Str("\"));\n", 5));
		if ((!(_1e5e1ca90_IsVoid(_53632_m.get()._field_Func.get()._field_Decl.ptr())))) {
			_1b028713d_indent(_self_.get()._field_oc);
			_1b028515d_write(_self_.get()._field_oc, jule::Str("(except.result);\n", 17));
		};
		_1b02868e0_doneIndent(_self_.get()._field_oc);
	};
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1b0232ddb_slice(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5e1621a_SliceExprModel> _58729_m) {
	if ((_58729_m.get()._field_Elems.len() == 0LL)) {
		_1b028515d_write(_self_.get()._field_oc, static__1b02aa01d_asSlice(_58729_m.get()._field_ElemKind));
		_1b028515d_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	_1b028515d_write(_self_.get()._field_oc, static__1b02aa01d_asSlice(_58729_m.get()._field_ElemKind));
	_1b028515d_write(_self_.get()._field_oc, jule::Str("::make({", 8));
	_1b0231d63_args(_self_, _58729_m.get()._field_Elems);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1b0233161_indexing(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5e16407_IndexingExprModel> _59932_m) {
	_1b0238e14_model(_self_, _59932_m.get()._field_Expr.get()._field_Model);
	{
		
		if (_1e24b666a_Production || (_1e6ab9175_Ptr(_59932_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_1e6aba5c7_Map(_59932_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b35c27e9:;
			{
				_1b028515d_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1b0239189_expr(_self_, _59932_m.get()._field_Index.get()._field_Model);
				_1b028515d_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1b35c308b:;
			{
				_1b028515d_write(_self_.get()._field_oc, jule::Str(".at(\"", 5));
				_1b0288529_locInfo(_self_.get()._field_oc, _59932_m.get()._field_Token);
				_1b028515d_write(_self_.get()._field_oc, jule::Str("\",", 2));
				_1b0239189_expr(_self_, _59932_m.get()._field_Index.get()._field_Model);
				_1b028515d_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1b35c3025:;
	};
}



inline void _1b02333d6_unsafeIndexing(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e52468c0_UnsafeIndexingExprModel> _61838_m) {
	_1b0238e14_model(_self_, _61838_m.get()._field_Node.get()._field_Expr.get()._field_Model);
	{
		
		if (_1e24b666a_Production || (_1e6ab9175_Ptr(_61838_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_1e6aba5c7_Map(_61838_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b35c5b93:;
			{
				_1b028515d_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1b0239189_expr(_self_, _61838_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1b028515d_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1b35c7579:;
			{
				_1b028515d_write(_self_.get()._field_oc, jule::Str(".__at(", 6));
				_1b0239189_expr(_self_, _61838_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1b028515d_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1b35c7513:;
	};
}



inline void _1b023365b_anonFunc(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5e165e4_AnonFnExprModel> _63532_m) {
	_1b028515d_write(_self_.get()._field_oc, static__1b02ac44e_func(_63532_m.get()._field_Func));
	_1b028515d_write(_self_.get()._field_oc, jule::Str("([=]", 4));
	_1b02a3643_paramsIns(_self_.get()._field_oc, _63532_m.get()._field_Func.get()._field_Params);
	_1b028515d_write(_self_.get()._field_oc, jule::Str(" mutable -> ", 12));
	_1b028515d_write(_self_.get()._field_oc, static__1b02abe10_funcInsResult(_63532_m.get()._field_Func));
	_1b028515d_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1b022b203_funcScope(_self_.get()._field_oc.get()._field_sc, _63532_m.get()._field_Func);
	_1b028515d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b02338d1_map(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5e169bd_MapExprModel> _64627_m) {
	_1b028515d_write(_self_.get()._field_oc, jule::Str("jule::Map<", 10));
	_1b028515d_write(_self_.get()._field_oc, static__1b02ac6e6_kind(_64627_m.get()._field_KeyKind));
	_1b028515d_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1b028515d_write(_self_.get()._field_oc, static__1b02ac6e6_kind(_64627_m.get()._field_ValKind));
	_1b028515d_write(_self_.get()._field_oc, jule::Str(">({", 3));
	if ((_64627_m.get()._field_Entries.len() > 0LL)) {
		{
			auto &expr = _64627_m.get()._field_Entries;
			auto it = expr.begin();
			_iter_begin_1b35d1044:;
			if (it != expr.end()) {
				jule::I64 _65318_i = it - expr.begin();
				jule::Ptr<_1e5e167d1_KeyValPairExprModel> _65325_pair = *it;
				{
					_1b028515d_write(_self_.get()._field_oc, jule::Str("{", 1));
					_1b0239189_expr(_self_, _65325_pair.get()._field_Key);
					_1b028515d_write(_self_.get()._field_oc, jule::Str(",", 1));
					_1b0239189_expr(_self_, _65325_pair.get()._field_Val);
					_1b028515d_write(_self_.get()._field_oc, jule::Str("}", 1));
					if (((_64627_m.get()._field_Entries.len() - _65318_i) > 1LL)) {
						_1b028515d_write(_self_.get()._field_oc, jule::Str(",", 1));
					};
				}
				_iter_next_1b35d1044:;
				++it;
				_65318_i++;
				goto _iter_begin_1b35d1044;
			}
			_iter_end_1b35d1044:;
		};
	};
	_1b028515d_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1b0233b56_slicing(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5e16baa_SlicingExprModel> _66731_m) {
	_1b0238e14_model(_self_, _66731_m.get()._field_Expr);
	_1b028515d_write(_self_.get()._field_oc, jule::Str(".slice(", 7));
	if ((!(_1e24b666a_Production))) {
		_1b028515d_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1b0288529_locInfo(_self_.get()._field_oc, _66731_m.get()._field_Token);
		_1b028515d_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1b0239189_expr(_self_, _66731_m.get()._field_Left);
	if ((_66731_m.get()._field_Right != nullptr)) {
		_1b028515d_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1b0239189_expr(_self_, _66731_m.get()._field_Right);
	};
	_1b028515d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b0233dcb_traitSub(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5e16d97_TraitSubIdentExprModel> _68332_m) {
	_1b028515d_write(_self_.get()._field_oc, static__1b024169c_traitDecl(_68332_m.get()._field_Trt));
	_1b028515d_write(_self_.get()._field_oc, jule::Str("_mptr_data", 10));
	_1b028515d_write(_self_.get()._field_oc, jule::Str("[(", 2));
	_1b0238e14_model(_self_, _68332_m.get()._field_Expr);
	_1b028515d_write(_self_.get()._field_oc, jule::Str(").type_offset].", 15));
	_1b028515d_write(_self_.get()._field_oc, static__1b024115d_func(_68332_m.get()._field_Method));
}



inline void _1b0234151_structureSub(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5e172b5_StructSubIdentExprModel> _69236_m) {
	_1b0238e14_model(_self_, _69236_m.get()._field_Expr.get()._field_Model);
	if ((_69236_m.get()._field_Field != nullptr)) {
		if ((_1e6ab9175_Ptr(_69236_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_1b028515d_write(_self_.get()._field_oc, jule::Str("->", 2));
		} else if ((_1e6ab8e11_Sptr(_69236_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_1b028515d_write(_self_.get()._field_oc, jule::Str(".get(", 5));
			if ((!(_1e24b666a_Production))) {
				_1b028515d_write(_self_.get()._field_oc, jule::Str("\"", 1));
				_1b0288529_locInfo(_self_.get()._field_oc, _69236_m.get()._field_Token);
				_1b028515d_write(_self_.get()._field_oc, jule::Str("\"", 1));
			};
			_1b028515d_write(_self_.get()._field_oc, jule::Str(").", 2));
		} else {
			_1b028515d_write(_self_.get()._field_oc, jule::Str(".", 1));
		};
		_1b028515d_write(_self_.get()._field_oc, static__1b024222a_field(_69236_m.get()._field_Field.get()._field_Decl));
	};
}



inline void _1b02343c6_commonIdent(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5e1787b_CommonIdentExprModel> _71231_m) {
	_1b028515d_write(_self_.get()._field_oc, _71231_m.get()._field_Ident);
}



inline void _1b023464b_commonSub(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5e17a68_CommonSubIdentExprModel> _71633_m) {
	_1b0238e14_model(_self_, _71633_m.get()._field_Expr);
	{
		
		if ((_1e6ab9175_Ptr(_71633_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1b35e03e9:;
			{
				_1b028515d_write(_self_.get()._field_oc, jule::Str("->", 2));
			}
		}
		else if ((_1e6ab8e11_Sptr(_71633_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1b35e0b25:;
			{
				_1b028515d_write(_self_.get()._field_oc, jule::Str(".get(", 5));
				if ((!(_1e24b666a_Production))) {
					_1b028515d_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1b0288529_locInfo(_self_.get()._field_oc, _71633_m.get()._field_Token);
					_1b028515d_write(_self_.get()._field_oc, jule::Str("\"", 1));
				};
				_1b028515d_write(_self_.get()._field_oc, jule::Str(").", 2));
			}
		}
		else {
			_case_begin_1b35e0aae:;
			{
				_1b028515d_write(_self_.get()._field_oc, jule::Str(".", 1));
			}
		}
		_match_end_1b35e0a48:;
	};
	_1b028515d_write(_self_.get()._field_oc, _71633_m.get()._field_Ident);
}



inline void _1b02348c1_array(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5e1768e_ArrayExprModel> _73529_m) {
	_1b028515d_write(_self_.get()._field_oc, static__1b02ab382_array(_73529_m.get()._field_Kind));
	if ((_73529_m.get()._field_Elems.len() == 0LL)) {
		_1b028515d_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	if (((_73529_m.get()._field_Elems.len() == 2LL) && (_73529_m.get()._field_Elems[1LL] == nullptr))) {
		_1b028515d_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1b0239189_expr(_self_, _73529_m.get()._field_Elems[0LL]);
		_1b028515d_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1b028515d_write(_self_.get()._field_oc, jule::Str("({", 2));
	_1b0231d63_args(_self_, _73529_m.get()._field_Elems);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("})", 2));
	return;;
}



inline void _1b0234b46_funcInsCommon(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5e202ce_FnIns> _75837_m) {
	_1b028515d_write(_self_.get()._field_oc, static__1b02ac44e_func(_75837_m));
	_1b028515d_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1b0234dbb_funcIns(_self_, _75837_m);
	_1b028515d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b0234dbb_funcIns(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5e202ce_FnIns> _76531_m) {
	if (((_76531_m.get()._field_Decl != nullptr) && _76531_m.get()._field_Decl.get()._field_CppLinked)) {
		jule::Ptr<_1e5d21268_Directive> _76717_d = _1b02b0056_findDirective(_76531_m.get()._field_Decl.get()._field_Directives,jule::Str("namespace", 9));;
		if ((_76717_d != nullptr)) {
			_1b028515d_write(_self_.get()._field_oc, _1b02a6b30_concatAllParts(_76717_d.get()._field_Args));
			_1b028515d_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1b028515d_write(_self_.get()._field_oc, static__1b0241405_funcIns(_76531_m));
}



inline void _1b0235141_tuple(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5e17c55_TupleExprModel> _77629_m) {
	_1b028515d_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	{
		auto &expr = _77629_m.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_1b35ed270:;
		if (it != expr.end()) {
			jule::I64 _77814_i = it - expr.begin();
			jule::Ptr<_1e6a8ac6d_Data> _77821_d = *it;
			{
				_1b0239189_expr(_self_, _77821_d.get()._field_Model);
				if (((_77629_m.get()._field_Datas.len() - _77814_i) > 1LL)) {
					_1b028515d_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1b35ed270:;
			++it;
			_77814_i++;
			goto _iter_begin_1b35ed270;
		}
		_iter_end_1b35ed270:;
	};
	_1b028515d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b02353b6_newCall(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5e18508_BuiltinNewCallExprModel> _78731_m) {
	_1b028515d_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1b028515d_write(_self_.get()._field_oc, static__1b02ac6e6_kind(_78731_m.get()._field_Kind));
	_1b028515d_write(_self_.get()._field_oc, jule::Str(">(", 2));
	if ((_78731_m.get()._field_Init != nullptr)) {
		_1b0239189_expr(_self_, _78731_m.get()._field_Init);
	};
	_1b028515d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b023563b_outCall(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5e17e42_BuiltinOutCallExprModel> _79731_m) {
	if ((_79731_m.get()._field_Debug && _1e24b666a_Production)) {
		return;;
	};
	_1b028515d_write(_self_.get()._field_oc, jule::Str("jule::out(", 10));
	_1b0239189_expr(_self_, _79731_m.get()._field_Expr);
	_1b028515d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b02358b1_outlnCall(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5e1812e_BuiltinOutlnCallExprModel> _80633_m) {
	if ((_80633_m.get()._field_Debug && _1e24b666a_Production)) {
		return;;
	};
	_1b028515d_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1b0239189_expr(_self_, _80633_m.get()._field_Expr);
	_1b028515d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b0235b36_panicCall(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5e186e5_BuiltinPanicCallExprModel> _81533_m) {
	_1b028515d_write(_self_.get()._field_oc, jule::Str("jule::panic(", 12));
	_1b0239189_expr(_self_, _81533_m.get()._field_Expr);
	_1b028515d_write(_self_.get()._field_oc, jule::Str(" + jule::Str(\"\\nlocation: ", 26));
	_1b0288529_locInfo(_self_.get()._field_oc, _81533_m.get()._field_Token);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1b0235dab_assertCall(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5e188d2_BuiltinAssertCallExprModel> _82334_m) {
	if (_1e24b666a_Production) {
		return;;
	};
	_1b028515d_write(_self_.get()._field_oc, jule::Str("if (!(", 6));
	_1b0239189_expr(_self_, _82334_m.get()._field_Expr);
	_1b028515d_write(_self_.get()._field_oc, jule::Str(")) jule::panic(jule::Str(", 25));
	_1b028515d_write(_self_.get()._field_oc, _1b023a388_cstrLit(static_cast<jule::Slice<jule::U8>>(_82334_m.get()._field_Log)));
	_1b028515d_write(_self_.get()._field_oc, jule::Str(") + jule::Str(\"\\nlocation: ", 27));
	_1b0288529_locInfo(_self_.get()._field_oc, _82334_m.get()._field_Token);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1b0236131_errorCall(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5e19185_BuiltinErrorCallExprModel> _83633_m) {
	_1b028515d_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_1e5e1ca90_IsVoid(_83633_m.get()._field_Func.get()._field_Decl.ptr())) {
		_1b028515d_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(", 22));
	} else {
		_1b028515d_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1b028515d_write(_self_.get()._field_oc, static__1b02ac6e6_kind(_83633_m.get()._field_Func.get()._field_Result));
		_1b028515d_write(_self_.get()._field_oc, jule::Str(">(", 2));
	};
	_1b0239189_expr(_self_, _83633_m.get()._field_Err);
	_1b028515d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b02363a6_copyCall(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5e18e98_BuiltinCopyCallExprModel> _84932_m) {
	_1b028515d_write(_self_.get()._field_oc, jule::Str("jule::copy((", 12));
	_1b0238e14_model(_self_, _84932_m.get()._field_Dest.get()._field_Model);
	_1b028515d_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1e6ab8b9c_Prim(_84932_m.get()._field_Dest.get()._field_Kind.ptr()) != nullptr)) {
		_1b028515d_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1b028515d_write(_self_.get()._field_oc, jule::Str(", (", 3));
	_1b0238e14_model(_self_, _84932_m.get()._field_Src.get()._field_Model);
	_1b028515d_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1e6ab8b9c_Prim(_84932_m.get()._field_Src.get()._field_Kind.ptr()) != nullptr)) {
		_1b028515d_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1b028515d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b023662b_makeCallSlice(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5e18abe_BuiltinMakeCallExprModel>& _86538_m) {
	jule::Ptr<_1e6ac0753_Slc> _86617_slice = _1e6ab9b26_Slc(_86538_m.get()._field_Kind.ptr());;
	_1b028515d_write(_self_.get()._field_oc, static__1b02ac6e6_kind(_86538_m.get()._field_Kind));
	if ((_1e6ab93d9_Enum(_86617_slice.get()._field_Elem.ptr()) != nullptr)) {
		if ((_86538_m.get()._field_Cap != nullptr)) {
			_1b028515d_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
		} else {
			_1b028515d_write(_self_.get()._field_oc, jule::Str("::alloc_def(", 12));
		};
	} else {
		_1b028515d_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	};
	_1b0239189_expr(_self_, _86538_m.get()._field_Len);
	if ((_86538_m.get()._field_Cap != nullptr)) {
		_1b028515d_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1b0239189_expr(_self_, _86538_m.get()._field_Cap);
	};
	if ((_1e6ab93d9_Enum(_86617_slice.get()._field_Elem.ptr()) != nullptr)) {
		_1b028515d_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1b0239684_initExpr(_self_, _86617_slice.get()._field_Elem);
	};
	_1b028515d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b02368a1_makeCallStr(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5e18abe_BuiltinMakeCallExprModel>& _89136_m) {
	_1b028515d_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1b028515d_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1b0239189_expr(_self_, _89136_m.get()._field_Len);
	_1b028515d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b0236b26_makeCall(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5e18abe_BuiltinMakeCallExprModel> _89832_m) {
	if ((_1e6ab9b26_Slc(_89832_m.get()._field_Kind.ptr()) != nullptr)) {
		_1b023662b_makeCallSlice(_self_, _89832_m);
		return;;
	};
	_1b02368a1_makeCallStr(_self_, _89832_m);
}



inline void _1b0236d9b_pushToSlice(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e563d7cd_PushToSliceExprModel> _90635_m) {
	jule::I64 _90713_n = _self_.get()._field_oc.get()._field_Obj.len();;
	_1b0238e14_model(_self_, _90635_m.get()._field_Dest);
	jule::Str _90913_dest = _self_.get()._field_oc.get()._field_Obj.slice(_90713_n);;
	_1b028515d_write(_self_.get()._field_oc, jule::Str(" = jule::alloc_for_append(", 26));
	_1b028515d_write(_self_.get()._field_oc, _90913_dest);
	_1b028515d_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1b028515d_write(_self_.get()._field_oc, _1e6a04566_Itoa(static_cast<jule::I64>(_90635_m.get()._field_Elems.get()._field_Elems.len())));
	_1b028515d_write(_self_.get()._field_oc, jule::Str(");", 2));
	{
		auto &expr = _90635_m.get()._field_Elems.get()._field_Elems;
		auto it = expr.begin();
		_iter_begin_1b361d1c4:;
		if (it != expr.end()) {
			jule::Any _91621_e = *it;
			{
				_1b028515d_write(_self_.get()._field_oc, _90913_dest);
				_1b028515d_write(_self_.get()._field_oc, jule::Str(".__push(", 8));
				_1b0238e14_model(_self_, _91621_e);
				_1b028515d_write(_self_.get()._field_oc, jule::Str(");", 2));
			}
			_iter_next_1b361d1c4:;
			++it;
			goto _iter_begin_1b361d1c4;
		}
		_iter_end_1b361d1c4:;
	};
}



inline void _1b0237121_appendCall(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5e18cab_BuiltinAppendCallExprModel> _92534_m) {
	_1b028515d_write(_self_.get()._field_oc, jule::Str("jule::append(", 13));
	_1b0238e14_model(_self_, _92534_m.get()._field_Dest);
	_1b028515d_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1b0238e14_model(_self_, _92534_m.get()._field_Elements);
	_1b028515d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b0237396_cloneCall(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5e1831b_BuiltinCloneCallExprModel> _93333_m) {
	_1b028515d_write(_self_.get()._field_oc, jule::Str("jule::clone(", 12));
	_1b0238e14_model(_self_, _93333_m.get()._field_Expr);
	_1b028515d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b023761b_sizeof(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5e17084_SizeofExprModel> _93930_m) {
	_1b028515d_write(_self_.get()._field_oc, jule::Str("sizeof(", 7));
	_1b0238e14_model(_self_, _93930_m.get()._field_Expr);
	_1b028515d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b0237891_alignof(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5e197e5_AlignofExprModel> _94531_m) {
	_1b028515d_write(_self_.get()._field_oc, jule::Str("alignof(", 8));
	_1b0238e14_model(_self_, _94531_m.get()._field_Expr);
	_1b028515d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline jule::Str _1b0237b9e_runeLit(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5e199d2_RuneExprModel> _95127_m) {
	if ((_95127_m.get()._field_Code <= 127LL)) {
		jule::Str _95321_b = _1b0239cc2_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>(_95127_m.get()._field_Code)));;
		if ((_95321_b == jule::Str("'", 1))) {
			_95321_b=jule::Str("\\'", 2);
		};
		return ((jule::Str("'", 1) + _95321_b) + jule::Str("'", 1));
	};
	return _1b023a93d_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_95127_m.get()._field_Code)));
}



inline void _1b0237e24_structureStatic(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5e174a2_StructStaticIdentExprModel> _96239_m) {
	_1b028515d_write(_self_.get()._field_oc, static__1b0241405_funcIns(_96239_m.get()._field_Method));
}



inline void _1b0238199_integratedToStr(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5e19bbe_IntegratedToStrExprModel> _96639_m) {
	_1b028515d_write(_self_.get()._field_oc, jule::Str("jule::to_str(", 13));
	_1b0238e14_model(_self_, _96639_m.get()._field_Expr);
	_1b028515d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b023841e_backendEmit(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5e19dab_BackendEmitExprModel> _97235_m) {
	if ((_97235_m.get()._field_Exprs.len() == 0LL)) {
		_1b028515d_write(_self_.get()._field_oc, _97235_m.get()._field_Code);
		return;;
	};
	jule::I64 _97713_n = _self_.get()._field_oc.get()._field_Obj.len();;
	jule::Slice<jule::Any> _97817_args = jule::Slice<jule::Any>::alloc(_97235_m.get()._field_Exprs.len());;
	{
		auto &expr = _97235_m.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1b362ab60:;
		if (it != expr.end()) {
			jule::I64 _97914_i = it - expr.begin();
			jule::Any _97921_expr = *it;
			{
				_1b0239189_expr(_self_, _97921_expr);
				_97817_args[_97914_i]=jule::Any(_self_.get()._field_oc.get()._field_Obj.slice(_97713_n));
				_self_.get()._field_oc.get()._field_Obj=_self_.get()._field_oc.get()._field_Obj.slice(0LL,_97713_n);
			}
			_iter_next_1b362ab60:;
			++it;
			_97914_i++;
			goto _iter_begin_1b362ab60;
		}
		_iter_end_1b362ab60:;
	};
	_1b028515d_write(_self_.get()._field_oc, _1e6b6783e_Format(_97235_m.get()._field_Code,jule::Any(_97817_args)));
}



inline void _1b0238694_free(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5e1a098_FreeExprModel> _98728_m) {
	_1b0239189_expr(_self_, _98728_m.get()._field_Expr);
	if (_1e24b5e3e_RC) {
		_1b028515d_write(_self_.get()._field_oc, jule::Str(".dealloc()", 10));
		return;;
	};
	_1b028515d_write(_self_.get()._field_oc, jule::Str(".__free()", 9));
}



inline void _1b0238919_mutSlicing(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e5ad7dcb_MutSlicingExprModel> _99634_m) {
	_1b028515d_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1b0238e14_model(_self_, _99634_m.get()._field_Expr);
	_1b028515d_write(_self_.get()._field_oc, jule::Str(").mut_slice(", 12));
	if ((!(_1e24b666a_Production))) {
		_1b028515d_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1b0288529_locInfo(_self_.get()._field_oc, _99634_m.get()._field_Token);
		_1b028515d_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1b0239189_expr(_self_, _99634_m.get()._field_Left);
	if ((_99634_m.get()._field_Right != nullptr)) {
		_1b028515d_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1b0239189_expr(_self_, _99634_m.get()._field_Right);
	};
	_1b028515d_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _1b0238b8e_strInsertBegin(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e4926567_StrInsertBeginExprModel> _101338_m) {
	_1b028515d_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1b0238e14_model(_self_, _101338_m.get()._field_Dest);
	_1b028515d_write(_self_.get()._field_oc, jule::Str(").buffer.insert(0, (", 20));
	_1b0238e14_model(_self_, _101338_m.get()._field_Expr);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("));", 3));
}



inline void _1b0238e14_model(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Any _102129_m) {
	{
		auto &_match_expr{ _102129_m };
		
		if (_match_expr.type_is<jule::Ptr<_1e6ab6a8a_TypeKind>>()) {
			_case_begin_1b3634c02:;
			{
				_1b028515d_write(_self_.get()._field_oc, static__1b02ac6e6_kind(_102129_m.operator jule::Ptr<_1e6ab6a8a_TypeKind>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5da6ba0_Const>>()) {
			_case_begin_1b3634ecc:;
			{
				_1b023023a_constant(_self_, _102129_m.operator jule::Ptr<_1e5da6ba0_Const>(),false);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a3dd20_Var>>()) {
			_case_begin_1b3635043:;
			{
				_1b0230d73_var(_self_, _102129_m.operator jule::Ptr<_1e6a3dd20_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d714d8_StructIns>>()) {
			_case_begin_1b36350a9:;
			{
				_1b02310e8_structureIns(_self_, _102129_m.operator jule::Ptr<_1e5d714d8_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e202ce_FnIns>>()) {
			_case_begin_1b3635120:;
			{
				_1b0234b46_funcInsCommon(_self_, _102129_m.operator jule::Ptr<_1e5e202ce_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4743340_UnsafeBinopExprModel>>()) {
			_case_begin_1b3635b37:;
			{
				_1b0230878_unsafeBinary(_self_, _102129_m.operator jule::Ptr<_1e4743340_UnsafeBinopExprModel>().get()._field_Node);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e153a1_BinopExprModel>>()) {
			_case_begin_1b3635b9d:;
			{
				_1b0230aed_binary(_self_, _102129_m.operator jule::Ptr<_1e5e153a1_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e1558d_UnaryExprModel>>()) {
			_case_begin_1b3635c14:;
			{
				_1b023136d_unary(_self_, _102129_m.operator jule::Ptr<_1e5e1558d_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e15967_StructLitExprModel>>()) {
			_case_begin_1b3635c7a:;
			{
				_1b02315e3_structureLit(_self_, _102129_m.operator jule::Ptr<_1e5e15967_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e15b54_AllocStructLitExprModel>>()) {
			_case_begin_1b3635ce1:;
			{
				_1b0231868_allocStructure(_self_, _102129_m.operator jule::Ptr<_1e5e15b54_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e15d41_CastingExprModel>>()) {
			_case_begin_1b3635d57:;
			{
				_1b0231add_casting(_self_, _102129_m.operator jule::Ptr<_1e5e15d41_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e1602d_FnCallExprModel>>()) {
			_case_begin_1b3635dbd:;
			{
				_1b0232b66_funcCall(_self_, _102129_m.operator jule::Ptr<_1e5e1602d_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e1621a_SliceExprModel>>()) {
			_case_begin_1b3635e34:;
			{
				_1b0232ddb_slice(_self_, _102129_m.operator jule::Ptr<_1e5e1621a_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e1768e_ArrayExprModel>>()) {
			_case_begin_1b3635e9a:;
			{
				_1b02348c1_array(_self_, _102129_m.operator jule::Ptr<_1e5e1768e_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e52468c0_UnsafeIndexingExprModel>>()) {
			_case_begin_1b3636011:;
			{
				_1b02333d6_unsafeIndexing(_self_, _102129_m.operator jule::Ptr<_1e52468c0_UnsafeIndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e16407_IndexingExprModel>>()) {
			_case_begin_1b3636077:;
			{
				_1b0233161_indexing(_self_, _102129_m.operator jule::Ptr<_1e5e16407_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e165e4_AnonFnExprModel>>()) {
			_case_begin_1b36360dd:;
			{
				_1b023365b_anonFunc(_self_, _102129_m.operator jule::Ptr<_1e5e165e4_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e169bd_MapExprModel>>()) {
			_case_begin_1b3636154:;
			{
				_1b02338d1_map(_self_, _102129_m.operator jule::Ptr<_1e5e169bd_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e16baa_SlicingExprModel>>()) {
			_case_begin_1b36361ba:;
			{
				_1b0233b56_slicing(_self_, _102129_m.operator jule::Ptr<_1e5e16baa_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e16d97_TraitSubIdentExprModel>>()) {
			_case_begin_1b3636231:;
			{
				_1b0233dcb_traitSub(_self_, _102129_m.operator jule::Ptr<_1e5e16d97_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e172b5_StructSubIdentExprModel>>()) {
			_case_begin_1b36362a8:;
			{
				_1b0234151_structureSub(_self_, _102129_m.operator jule::Ptr<_1e5e172b5_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e1787b_CommonIdentExprModel>>()) {
			_case_begin_1b3636330:;
			{
				_1b02343c6_commonIdent(_self_, _102129_m.operator jule::Ptr<_1e5e1787b_CommonIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e17a68_CommonSubIdentExprModel>>()) {
			_case_begin_1b36363a7:;
			{
				_1b023464b_commonSub(_self_, _102129_m.operator jule::Ptr<_1e5e17a68_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e17c55_TupleExprModel>>()) {
			_case_begin_1b363642e:;
			{
				_1b0235141_tuple(_self_, _102129_m.operator jule::Ptr<_1e5e17c55_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e17e42_BuiltinOutCallExprModel>>()) {
			_case_begin_1b36364a6:;
			{
				_1b023563b_outCall(_self_, _102129_m.operator jule::Ptr<_1e5e17e42_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e1812e_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1b363652d:;
			{
				_1b02358b1_outlnCall(_self_, _102129_m.operator jule::Ptr<_1e5e1812e_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e18508_BuiltinNewCallExprModel>>()) {
			_case_begin_1b36365a5:;
			{
				_1b02353b6_newCall(_self_, _102129_m.operator jule::Ptr<_1e5e18508_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e186e5_BuiltinPanicCallExprModel>>()) {
			_case_begin_1b363662c:;
			{
				_1b0235b36_panicCall(_self_, _102129_m.operator jule::Ptr<_1e5e186e5_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e188d2_BuiltinAssertCallExprModel>>()) {
			_case_begin_1b36366a4:;
			{
				_1b0235dab_assertCall(_self_, _102129_m.operator jule::Ptr<_1e5e188d2_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e19185_BuiltinErrorCallExprModel>>()) {
			_case_begin_1b363672b:;
			{
				_1b0236131_errorCall(_self_, _102129_m.operator jule::Ptr<_1e5e19185_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e18abe_BuiltinMakeCallExprModel>>()) {
			_case_begin_1b36367a3:;
			{
				_1b0236b26_makeCall(_self_, _102129_m.operator jule::Ptr<_1e5e18abe_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e18cab_BuiltinAppendCallExprModel>>()) {
			_case_begin_1b363682a:;
			{
				_1b0237121_appendCall(_self_, _102129_m.operator jule::Ptr<_1e5e18cab_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e1831b_BuiltinCloneCallExprModel>>()) {
			_case_begin_1b36368a2:;
			{
				_1b0237396_cloneCall(_self_, _102129_m.operator jule::Ptr<_1e5e1831b_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e18e98_BuiltinCopyCallExprModel>>()) {
			_case_begin_1b3636929:;
			{
				_1b02363a6_copyCall(_self_, _102129_m.operator jule::Ptr<_1e5e18e98_BuiltinCopyCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e17084_SizeofExprModel>>()) {
			_case_begin_1b36369a1:;
			{
				_1b023761b_sizeof(_self_, _102129_m.operator jule::Ptr<_1e5e17084_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e197e5_AlignofExprModel>>()) {
			_case_begin_1b3636a28:;
			{
				_1b0237891_alignof(_self_, _102129_m.operator jule::Ptr<_1e5e197e5_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e199d2_RuneExprModel>>()) {
			_case_begin_1b3636aa0:;
			{
				_1b028515d_write(_self_.get()._field_oc, _1b0237b9e_runeLit(_self_, _102129_m.operator jule::Ptr<_1e5e199d2_RuneExprModel>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e174a2_StructStaticIdentExprModel>>()) {
			_case_begin_1b3636b27:;
			{
				_1b0237e24_structureStatic(_self_, _102129_m.operator jule::Ptr<_1e5e174a2_StructStaticIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e19bbe_IntegratedToStrExprModel>>()) {
			_case_begin_1b3636b9e:;
			{
				_1b0238199_integratedToStr(_self_, _102129_m.operator jule::Ptr<_1e5e19bbe_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e19dab_BackendEmitExprModel>>()) {
			_case_begin_1b3636c26:;
			{
				_1b023841e_backendEmit(_self_, _102129_m.operator jule::Ptr<_1e5e19dab_BackendEmitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e1a098_FreeExprModel>>()) {
			_case_begin_1b3636c9d:;
			{
				_1b0238694_free(_self_, _102129_m.operator jule::Ptr<_1e5e1a098_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5ad7dcb_MutSlicingExprModel>>()) {
			_case_begin_1b3636d25:;
			{
				_1b0238919_mutSlicing(_self_, _102129_m.operator jule::Ptr<_1e5ad7dcb_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4926567_StrInsertBeginExprModel>>()) {
			_case_begin_1b3636d9c:;
			{
				_1b0238b8e_strInsertBegin(_self_, _102129_m.operator jule::Ptr<_1e4926567_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_1b3634d78:;
			{
				_1b028515d_write(_self_.get()._field_oc, jule::Str("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1b3634c9b:;
	};
}



inline void _1b0239189_expr(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Any _111428_e) {
	_1b0238e14_model(_self_, _111428_e);
}



inline void _1b023940e_val(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e6a8bce6_Value> _111827_v) {
	if (_1e6a8b631_IsConst(_111827_v.get()._field_Data.ptr())) {
		_1b023023a_constant(_self_, _111827_v.get()._field_Data.get()._field_Constant,((_111827_v.get()._field_Data.get()._field_Kind != nullptr) && _1e6abd81c_IsF32(_1e6ab8b9c_Prim(_111827_v.get()._field_Data.get()._field_Kind.ptr()).ptr())));
		return;;
	};
	_1b0239189_expr(_self_, _111827_v.get()._field_Data.get()._field_Model);
}



inline void _1b0239684_initExpr(jule::Ptr<_1b022da41_exprCoder> _self_, jule::Ptr<_1e6ab6a8a_TypeKind> _112632_t) {
	if ((_1e6ab9175_Ptr(_112632_t.ptr()) != nullptr)) {
		_1b028515d_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
		return;;
	};
	jule::Ptr<_1e5e31631_Enum> _113117_enm = _1e6ab93d9_Enum(_112632_t.ptr());;
	if ((_113117_enm != nullptr)) {
		_1b023940e_val(_self_, _113117_enm.get()._field_Items[0LL].get()._field_Value);
		return;;
	};
	_1b028515d_write(_self_.get()._field_oc, static__1b02ac6e6_kind(_112632_t));
	_1b028515d_write(_self_.get()._field_oc, jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1b022da41_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1b023bbe7_cloneFuncDecl(jule::Ptr<_1e5d4518d_Struct>& _1030_s) {
	jule::Str _1117_obj = static__1b02aad43_structure(_1030_s);;
	_1117_obj+=jule::Str(" clone(void) const ", 19);
	return _1117_obj;
}



inline jule::Str static__1b023be8e_cloneFuncDef(jule::Ptr<_1e5d4518d_Struct>& _1629_s) {
	jule::Str _1717_obj = static__1b02aad43_structure(_1629_s);;
	_1717_obj+=(jule::Str(" ", 1) + _1717_obj);
	_1717_obj+=jule::Str("::clone(void) const ", 20);
	return _1717_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _1b023b93e_deriveCoder _Src) {
	_Stream << "deriveCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b023cd6e_TestCoder> static__1b023d2e2_New(jule::Ptr<_1b02a1d06_ObjectCoder>& _2824_oc) {
	return jule::new_ptr<_1b023cd6e_TestCoder>(_1b023cd6e_TestCoder{._field_oc=_2824_oc});
}



inline jule::Ptr<_1e6a192e5_ImportInfo> _1b023d556_findTestingPackage(jule::Ptr<_1b023cd6e_TestCoder> _self_) {
	{
		auto &expr = _self_.get()._field_oc.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1b365410b:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a192e5_ImportInfo> _3521_imp = *it;
			{
				if ((_3521_imp.get()._field_LinkPath == jule::Str("std::testing", 12))) {
					return _3521_imp;
				};
			}
			_iter_next_1b365410b:;
			++it;
			goto _iter_begin_1b365410b;
		}
		_iter_end_1b365410b:;
	};
	return nullptr;
}



inline void _1b023d7cb_appendTest(jule::Ptr<_1b023cd6e_TestCoder> _self_, jule::Ptr<_1e5e202ce_FnIns> _4334_f) {
	_1b028713d_indent(_self_.get()._field_oc);
	_1b023de91_callTmReset(_self_);
	_1b028515d_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("std::cout << \">>> TEST RUNNING: \";\n", 35));
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1b028515d_write(_self_.get()._field_oc, _1b023a388_cstrLit(static_cast<jule::Slice<jule::U8>>(_4334_f.get()._field_Decl.get()._field_Ident)));
	_1b028515d_write(_self_.get()._field_oc, jule::Str(");\n", 3));
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, static__1b0241405_funcIns(_4334_f));
	_1b028515d_write(_self_.get()._field_oc, jule::Str("(_t);\n", 6));
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("post_test();\n", 13));
}



inline void _1b023da51_appendPackageTests(jule::Ptr<_1b023cd6e_TestCoder> _self_, jule::Ptr<_1e6a1c24e_Package>& _6043_p) {
	{
		auto &expr = _6043_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1b3659d9d:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a86010_SymbolTable> _6121_file = *it;
			{
				{
					auto &expr = _6121_file.get()._field_Funcs;
					auto it = expr.begin();
					_iter_begin_1b365a73e:;
					if (it != expr.end()) {
						jule::Ptr<_1e5e1c62d_Fn> _6225_f = *it;
						{
							if (_1b02b03db_hasDirective(_6225_f.get()._field_Directives,jule::Str("test", 4))) {
								_1b023d7cb_appendTest(_self_, _6225_f.get()._field_Instances[0LL]);
							};
						}
						_iter_next_1b365a73e:;
						++it;
						goto _iter_begin_1b365a73e;
					}
					_iter_end_1b365a73e:;
				};
			}
			_iter_next_1b3659d9d:;
			++it;
			goto _iter_begin_1b3659d9d;
		}
		_iter_end_1b3659d9d:;
	};
}



inline jule::Bool _1b023dcb5_readyTestingPackage(jule::Ptr<_1b023cd6e_TestCoder> _self_) {
	jule::Ptr<_1e6a192e5_ImportInfo> _7117_p = _1b023d556_findTestingPackage(_self_);;
	if ((_7117_p == nullptr)) {
		return false;
	};
	_self_.get()._field_t=_1e6a1a736_FindStruct(_7117_p.ptr(), jule::Str("T", 1),false).get()._field_Instances[0LL];
	_self_.get()._field_tmReset=_1e5d4a33b_FindMethod(_self_.get()._field_t.ptr(), jule::Str("reset", 5),false);
	_self_.get()._field_tmFailed=_1e5d4a33b_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Failed", 6),false);
	_self_.get()._field_tmSkipped=_1e5d4a33b_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Skipped", 7),false);
	return true;
}



inline void _1b023de91_callTmReset(jule::Ptr<_1b023cd6e_TestCoder> _self_) {
	_1b028515d_write(_self_.get()._field_oc, static__1b024115d_func(_self_.get()._field_tmReset));
	_1b028515d_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1b023e16c_callTmFailed(jule::Ptr<_1b023cd6e_TestCoder> _self_) {
	_1b028515d_write(_self_.get()._field_oc, static__1b024115d_func(_self_.get()._field_tmFailed));
	_1b028515d_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1b023e348_callTmSkipped(jule::Ptr<_1b023cd6e_TestCoder> _self_) {
	_1b028515d_write(_self_.get()._field_oc, static__1b024115d_func(_self_.get()._field_tmSkipped));
	_1b028515d_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1b023e524_Serialize(jule::Ptr<_1b023cd6e_TestCoder> _self_) {
	_1b02a60e6_serializeHead(_self_.get()._field_oc);
	__JULE_DEFER({
		_1b02a5e1a_end(_self_.get()._field_oc);
	});;
	_1b028515d_write(_self_.get()._field_oc, jule::Str("\nvoid test_point(void) {\n", 25));
	_1b0285900_addIndent(_self_.get()._field_oc);
	_1b028713d_indent(_self_.get()._field_oc);
	if ((!(_1b023dcb5_readyTestingPackage(_self_)))) {
		_1b028515d_write(_self_.get()._field_oc, jule::Str("}", 1));
		_1b02868e0_doneIndent(_self_.get()._field_oc);
		return;;
	};
	_1b028515d_write(_self_.get()._field_oc, static__1b02a8e51_asSptr(static__1b02ab0da_structureIns(_self_.get()._field_t)));
	_1b028515d_write(_self_.get()._field_oc, jule::Str(" _t = jule::new_ptr<", 20));
	_1b028515d_write(_self_.get()._field_oc, static__1b02ab0da_structureIns(_self_.get()._field_t));
	_1b028515d_write(_self_.get()._field_oc, jule::Str(">(); _t.ref = nullptr;\n", 23));
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("auto post_test = [&](void) {\n", 29));
	_1b0285900_addIndent(_self_.get()._field_oc);
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("++total;\n", 9));
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("if (", 4));
	_1b023e16c_callTmFailed(_self_);
	_1b028515d_write(_self_.get()._field_oc, jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("else if (", 9));
	_1b023e348_callTmSkipped(_self_);
	_1b028515d_write(_self_.get()._field_oc, jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1b02868e0_doneIndent(_self_.get()._field_oc);
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("};\n", 3));
	_1b023da51_appendPackageTests(_self_, _self_.get()._field_oc.get()._field_ir.get()._field_Main);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("\n\n", 2));
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("if (failed != 0) std::exit(1);\n", 31));
	_1b02868e0_doneIndent(_self_.get()._field_oc);
	_1b028713d_indent(_self_.get()._field_oc);
	_1b028515d_write(_self_.get()._field_oc, jule::Str("}\n", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1b023cd6e_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1b02409cb_toOut(jule::Str& _3322_ident, jule::Uintptr _3334_addr) {
	if ((_3334_addr != 0LLU)) {
		jule::Str _3521_obj = jule::Str::alloc(40LL);;
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_1e6a04302_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_3334_addr)),15LL);
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_3322_ident;
		return _3521_obj;
	};
	jule::Str _4217_obj = jule::Str::alloc((_3322_ident.len() + 1LL));;
	_4217_obj+=jule::Str("_", 1);
	_4217_obj+=_3322_ident;
	return _4217_obj;
}



inline jule::Str static__1b0240db6_toLocal(jule::I64 _5423_row, jule::I64 _5433_col, jule::Str& _5444_ident) {
	jule::Str _5517_obj = jule::Str::alloc(40LL);;
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_1e6a04566_Itoa(_5423_row);
	_5517_obj+=_1e6a04566_Itoa(_5433_col);
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_5444_ident;
	return _5517_obj;
}



inline jule::Str static__1b024115d_func(jule::Ptr<_1e5e1c62d_Fn>& _6521_f) {
	{
		
		if (_6521_f.get()._field_CppLinked) {
			_case_begin_1b367301a:;
			{
				return _6521_f.get()._field_Ident;
			}
		}
		else if ((_6521_f.get()._field_Ident == jule::Str("main", 4))) {
			_case_begin_1b3673081:;
			{
				return jule::Str("entry_point", 11);
			}
		}
		else if (_1e5e1cd04_IsMethod(_6521_f.ptr())) {
			_case_begin_1b36723e3:;
			{
				jule::Str _7221_obj = static__1b02409cb_toOut(_6521_f.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6521_f)));;
				if (_6521_f.get()._field_Statically) {
					(_7221_obj).buffer.insert(0, (jule::Str("static_", 7)));;
					return _7221_obj;
				};
				return _7221_obj;
			}
		}
		else {
			_case_begin_1b3672327:;
			{
				return static__1b02409cb_toOut(_6521_f.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6521_f)));
			}
		}
		_match_end_1b367224a:;
	};
}



inline jule::Str static__1b0241405_funcIns(jule::Ptr<_1e5e202ce_FnIns>& _8424_f) {
	if (_1e5e21665_IsBuiltin(_8424_f.ptr())) {
		return (jule::Str("jule::", 6) + _8424_f.get()._field_Decl.get()._field_Ident);
	};
	if ((_8424_f.get()._field_Decl.get()._field_CppLinked || (_8424_f.get()._field_Generics.len() == 0LL))) {
		return static__1b024115d_func(_8424_f.get()._field_Decl);
	};
	return static__1b02409cb_toOut(_8424_f.get()._field_Decl.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_8424_f)));
}



inline jule::Str static__1b024169c_traitDecl(jule::Ptr<_1e5e2e4db_Trait> _9525_t) {
	if (_1e5e30058_IsBuiltin(_9525_t.ptr())) {
		return (jule::Str("jule::", 6) + _9525_t.get()._field_Ident);
	};
	return static__1b02409cb_toOut(_9525_t.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_9525_t)));
}



inline jule::Str static__1b0241944_param(jule::Ptr<_1e5e1ace1_Param>& _10322_p) {
	if ((_1e47162e1_IsAnonIdent(_10322_p.get()._field_Ident) || _1e4716049_IsIgnoreIdent(_10322_p.get()._field_Ident))) {
		return jule::Str();
	};
	if (_1e5e1b41d_IsSelf(_10322_p.ptr())) {
		return jule::Str("_self_", 6);
	};
	if ((_10322_p.get()._field_Token == nullptr)) {
		return static__1b0240db6_toLocal(0LL,0LL,_10322_p.get()._field_Ident);
	};
	return static__1b0240db6_toLocal(_10322_p.get()._field_Token.get()._field_Row,_10322_p.get()._field_Token.get()._field_Column,_10322_p.get()._field_Ident);
}



inline jule::Str static__1b0241bdb_structure(jule::Ptr<_1e5d4518d_Struct>& _11726_s) {
	if (_11726_s.get()._field_CppLinked) {
		if (_1b02b03db_hasDirective(_11726_s.get()._field_Directives,jule::Str("typedef", 7))) {
			return _11726_s.get()._field_Ident;
		};
		return (jule::Str("struct ", 7) + _11726_s.get()._field_Ident);
	};
	return static__1b02409cb_toOut(_11726_s.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_11726_s)));
}



inline jule::Str static__1b0241e83_structureIns(jule::Ptr<_1e5d714d8_StructIns>& _12829_s) {
	if ((_12829_s.get()._field_Decl.get()._field_CppLinked || (_12829_s.get()._field_Generics.len() == 0LL))) {
		return static__1b0241bdb_structure(_12829_s.get()._field_Decl);
	};
	return static__1b02409cb_toOut(_12829_s.get()._field_Decl.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12829_s)));
}



inline jule::Str static__1b024222a_field(jule::Ptr<_1e5d37658_Field>& _13622_f) {
	if (_13622_f.get()._field_Owner.get()._field_CppLinked) {
		return _13622_f.get()._field_Ident;
	};
	return (jule::Str("_field_", 7) + _13622_f.get()._field_Ident);
}



inline jule::Str static__1b02424c2_var(jule::Ptr<_1e6a3dd20_Var> _14423_v) {
	{
		
		if (_14423_v.get()._field_CppLinked) {
			_case_begin_1b367d300:;
			{
				return _14423_v.get()._field_Ident;
			}
		}
		else if ((_14423_v.get()._field_Ident == jule::Str("error", 5))) {
			_case_begin_1b367d366:;
			{
				return jule::Str("except.error", 12);
			}
		}
		else if ((_14423_v.get()._field_Ident == jule::Str("self", 4))) {
			_case_begin_1b367c684:;
			{
				if ((_1e6ab8e11_Sptr(_14423_v.get()._field_Kind.get()._field_Kind.ptr()) == nullptr)) {
					return jule::Str("(*_self_)", 9);
				};
				return jule::Str("_self_", 6);
			}
		}
		else if ((_14423_v.get()._field_Scope != nullptr)) {
			_case_begin_1b367c6ea:;
			{
				return static__1b0240db6_toLocal(_14423_v.get()._field_Token.get()._field_Row,_14423_v.get()._field_Token.get()._field_Column,_14423_v.get()._field_Ident);
			}
		}
		else {
			_case_begin_1b367c61d:;
			{
				return static__1b02409cb_toOut(_14423_v.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_14423_v)));
			}
		}
		_match_end_1b367c563:;
	};
}



inline jule::Str static__1b0242769_iterBegin(jule::Uintptr _16325_it) {
	jule::Str _16417_obj = jule::Str::alloc(30LL);;
	_16417_obj+=jule::Str("_iter_begin_", 12);
	_16417_obj+=_1e6a04302_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_16325_it)),15LL);
	return _16417_obj;
}



inline jule::Str static__1b0242a11_iterEnd(jule::Uintptr _17123_it) {
	jule::Str _17217_obj = jule::Str::alloc(30LL);;
	_17217_obj+=jule::Str("_iter_end_", 10);
	_17217_obj+=_1e6a04302_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_17123_it)),15LL);
	return _17217_obj;
}



inline jule::Str static__1b0242ca8_iterNext(jule::Uintptr _17924_it) {
	jule::Str _18017_obj = jule::Str::alloc(30LL);;
	_18017_obj+=jule::Str("_iter_next_", 11);
	_18017_obj+=_1e6a04302_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_17924_it)),15LL);
	return _18017_obj;
}



inline jule::Str static__1b0243050_label(jule::Str& _18722_ident) {
	jule::Str _18817_obj = jule::Str::alloc(30LL);;
	_18817_obj+=jule::Str("_julec_label_", 13);
	_18817_obj+=_18722_ident;
	return _18817_obj;
}



inline jule::Str static__1b02432e7_matchEnd(jule::Uintptr _19524_m) {
	jule::Str _19617_obj = jule::Str::alloc(30LL);;
	_19617_obj+=jule::Str("_match_end_", 11);
	_19617_obj+=_1e6a04302_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19524_m)),15LL);
	return _19617_obj;
}



inline jule::Str static__1b024358e_caseBegin(jule::Uintptr _20325_c) {
	jule::Str _20417_obj = jule::Str::alloc(30LL);;
	_20417_obj+=jule::Str("_case_begin_", 12);
	_20417_obj+=_1e6a04302_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20325_c)),15LL);
	return _20417_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _1b02404c0_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b02a192c_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b02a1b19_traitHash _Src) {
	_Stream << "traitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b02a7b0e_Str(_1b02a7845_customType* _self_) {
	return (*_self_)._field_kind;
}



inline jule::Bool _1b02a7e1c_Equals(jule::Ptr<_1b02a7845_customType> _self_, jule::Ptr<_1e6ab6a8a_TypeKind> _3922_k) {
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1b02a7845_customType _Src) {
	_Stream << "customType{";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1b02a866a_toType(jule::Str _6026_id) {
	if ((_6026_id != jule::Str("uintptr", 7))) {
		_6026_id=_1e6037e63_RealKindOf(_6026_id);
	};
	if (((97LL <= _6026_id[0LL]) && (_6026_id[0LL] <= 122LLU))) {
		_6026_id[0LL]-=32LLU;
	};
	return (jule::Str("jule::", 6) + _6026_id);
}



inline jule::Str static__1b02a8912_prim(jule::Ptr<_1e6abb562_Prim> _7120_p) {
	return static__1b02a866a_toType(_1e6abb8c5_Str(_7120_p.ptr()));
}



inline jule::Str static__1b02a8ba9_tuple(jule::Ptr<_1e6ac12d1_Tuple> _7625_t) {
	jule::Str _7717_obj = jule::Str("std::tuple<", 11);;
	{
		auto &expr = _7625_t.get()._field_Types;
		auto it = expr.begin();
		_iter_begin_1b375ec3e:;
		if (it != expr.end()) {
			jule::Ptr<_1e6ab6a8a_TypeKind> _7821_tk = *it;
			{
				_7717_obj+=static__1b02ac6e6_kind(_7821_tk);
				_7717_obj+=jule::Str(",", 1);
			}
			_iter_next_1b375ec3e:;
			++it;
			goto _iter_begin_1b375ec3e;
		}
		_iter_end_1b375ec3e:;
	};
	(_7717_obj).mut_slice(0LL,(_7717_obj.len() - 1LL));;
	_7717_obj+=jule::Str(">", 1);
	return _7717_obj;
}



inline jule::Str static__1b02a8e51_asSptr(jule::Str _8822_elem) {
	jule::Str _8917_obj = jule::Str("jule::Ptr<", 10);;
	_8917_obj+=_8822_elem;
	_8917_obj+=jule::Str(">", 1);
	return _8917_obj;
}



inline jule::Str static__1b02a91e8_asPtr(jule::Str _9621_elem) {
	return (_9621_elem + jule::Str("*", 1));
}



inline jule::Str static__1b02a9490_sptr(jule::Ptr<_1e6abece6_Sptr> _10124_sptr) {
	return static__1b02a8e51_asSptr(static__1b02ac6e6_kind(_10124_sptr.get()._field_Elem));
}



inline jule::Str static__1b02a9737_ptr(jule::Ptr<_1e6ac335a_Ptr> _10623_p) {
	;
	if (_1e6ac3d2d_IsUnsafe(_10623_p.ptr())) {
		return jule::Str("void*", 5);
	};
	jule::Str _11117_elem = static__1b02ac6e6_kind(_10623_p.get()._field_Elem);;
	_11117_elem+=jule::Str("*", 1);
	return _11117_elem;
}



inline jule::Str static__1b02a99ce_enumDecl(jule::Ptr<_1e5e31631_Enum> _11728_e) {
	return static__1b02ac6e6_kind(_11728_e.get()._field_Kind.get()._field_Kind);
}



inline jule::Str static__1b02a9c76_typeEnumDecl(jule::Ptr<_1e5e32c2b_TypeEnum> _12232_e) {
	return jule::Str("jule::Any", 9);
}



inline jule::Str static__1b02aa01d_asSlice(jule::Ptr<_1e6ab6a8a_TypeKind> _12627_elem) {
	jule::Str _12717_obj = jule::Str("jule::Slice<", 12);;
	_12717_obj+=static__1b02ac6e6_kind(_12627_elem);
	_12717_obj+=jule::Str(">", 1);
	return _12717_obj;
}



inline jule::Str static__1b02aa2b5_slice(jule::Ptr<_1e6ac0753_Slc> _13425_s) {
	return static__1b02aa01d_asSlice(_13425_s.get()._field_Elem);
}



inline jule::Str static__1b02aa55c_map(jule::Ptr<_1e6ac1d09_Map> _13923_m) {
	jule::Str _14017_obj = jule::Str("jule::Map<", 10);;
	_14017_obj+=static__1b02ac6e6_kind(_13923_m.get()._field_Key);
	_14017_obj+=jule::Str(",", 1);
	_14017_obj+=static__1b02ac6e6_kind(_13923_m.get()._field_Val);
	_14017_obj+=jule::Str(">", 1);
	return _14017_obj;
}



inline jule::Str static__1b02aa804_traitIdent(jule::Str _14826_ident) {
	jule::Str _14917_obj = jule::Str("jule::Trait<", 12);;
	_14917_obj+=_14826_ident;
	_14917_obj+=jule::Str(">", 1);
	return _14917_obj;
}



inline jule::Str static__1b02aaa9b_traitDecl(jule::Ptr<_1e5e2e4db_Trait> _15625_t) {
	return static__1b02aa804_traitIdent(static__1b024169c_traitDecl(_15625_t));
}



inline jule::Str static__1b02aad43_structure(jule::Ptr<_1e5d4518d_Struct> _16125_s) {
	jule::Str _16217_rep = jule::Str();;
	if ((_16125_s.get()._field_CppLinked && (!(_1b02b03db_hasDirective(_16125_s.get()._field_Directives,jule::Str("typedef", 7)))))) {
		_16217_rep+=jule::Str("struct ", 7);
	};
	_16217_rep+=static__1b0241bdb_structure(_16125_s);
	return _16217_rep;
}



inline jule::Str static__1b02ab0da_structureIns(jule::Ptr<_1e5d714d8_StructIns> _17132_s) {
	if (_17132_s.get()._field_Decl.get()._field_CppLinked) {
		jule::Str _17321_ident = static__1b0241e83_structureIns(_17132_s);;
		if ((_17132_s.get()._field_Generics.len() > 0LL)) {
			_17321_ident+=jule::Str("<", 1);
			{
				auto &expr = _17132_s.get()._field_Generics;
				auto it = expr.begin();
				_iter_begin_1b376a0ac:;
				if (it != expr.end()) {
					jule::Ptr<_1e6ab535d_InsGeneric> _17629_g = *it;
					{
						_17321_ident+=static__1b02ac6e6_kind(_17629_g.get()._field_Kind);
						_17321_ident+=jule::Str(",", 1);
					}
					_iter_next_1b376a0ac:;
					++it;
					goto _iter_begin_1b376a0ac;
				}
				_iter_end_1b376a0ac:;
			};
			(_17321_ident).mut_slice(0LL,(_17321_ident.len() - 1LL));;
			_17321_ident+=jule::Str(">", 1);
		};
		jule::Ptr<_1e5d21268_Directive> _18317_d = _1b02b0056_findDirective(_17132_s.get()._field_Decl.get()._field_Directives,jule::Str("namespace", 9));;
		if ((_18317_d != nullptr)) {
			(_17321_ident).buffer.insert(0, ((_1b02a6b30_concatAllParts(_18317_d.get()._field_Args) + jule::Str("::", 2))));;
		};
		return _17321_ident;
	};
	return static__1b0241e83_structureIns(_17132_s);
}



inline jule::Str static__1b02ab382_array(jule::Ptr<_1e6ac28ed_Arr> _19325_a) {
	jule::Str _19417_obj = jule::Str("jule::Array<", 12);;
	_19417_obj+=static__1b02ac6e6_kind(_19325_a.get()._field_Elem);
	_19417_obj+=jule::Str(",", 1);
	_19417_obj+=_1e6a04566_Itoa(_19325_a.get()._field_N);
	_19417_obj+=jule::Str(">", 1);
	return _19417_obj;
}



inline jule::Str static__1b02ab8c1_paramIns(jule::Ptr<_1e5e1e410_ParamIns>& _21929_p) {
	jule::Str _22017_obj = jule::Str();;
	if (_21929_p.get()._field_Decl.get()._field_Variadic) {
		_22017_obj+=jule::Str("jule::Slice<", 12);
		_22017_obj+=static__1b02ac6e6_kind(_21929_p.get()._field_Kind);
		_22017_obj+=jule::Str(">", 1);
	} else {
		_22017_obj+=static__1b02ac6e6_kind(_21929_p.get()._field_Kind);
	};
	if (_21929_p.get()._field_Decl.get()._field_Reference) {
		_22017_obj+=jule::Str("&", 1);
	};
	return _22017_obj;
}



inline jule::Str static__1b02abe10_funcInsResult(jule::Ptr<_1e5e202ce_FnIns>& _24934_f) {
	if (_1e5e1ca90_IsVoid(_24934_f.get()._field_Decl.ptr())) {
		if (_24934_f.get()._field_Decl.get()._field_Exceptional) {
			return jule::Str("jule::VoidExceptional", 21);
		};
		return jule::Str("void", 4);
	};
	if (_24934_f.get()._field_Decl.get()._field_Exceptional) {
		return ((jule::Str("jule::Exceptional<", 18) + static__1b02ac6e6_kind(_24934_f.get()._field_Result)) + jule::Str(">", 1));
	};
	return static__1b02ac6e6_kind(_24934_f.get()._field_Result);
}



inline jule::Str static__1b02ac1a7_anonFunc(jule::Ptr<_1e5e202ce_FnIns> _26228_f) {
	jule::Str _26317_decl = static__1b02abe10_funcInsResult(_26228_f);;
	_26317_decl+=jule::Str("(", 1);
	if ((_26228_f.get()._field_Params.len() > 0LL)) {
		{
			auto &expr = _26228_f.get()._field_Params;
			auto it = expr.begin();
			_iter_begin_1b3776915:;
			if (it != expr.end()) {
				jule::Ptr<_1e5e1e410_ParamIns> _26625_param = *it;
				{
					if (_1e5e1b41d_IsSelf(_26625_param.get()._field_Decl.ptr())) {
						goto _iter_next_1b3776915;
					};
					_26317_decl+=static__1b02ab8c1_paramIns(_26625_param);
					_26317_decl+=jule::Str(",", 1);
				}
				_iter_next_1b3776915:;
				++it;
				goto _iter_begin_1b3776915;
			}
			_iter_end_1b3776915:;
		};
		(_26317_decl).mut_slice(0LL,(_26317_decl.len() - 1LL));;
	} else {
		_26317_decl+=jule::Str("void", 4);
	};
	_26317_decl+=jule::Str(")", 1);
	return _26317_decl;
}



inline jule::Str static__1b02ac44e_func(jule::Ptr<_1e5e202ce_FnIns> _28224_f) {
	jule::Str _28317_obj = jule::Str("jule::Fn<", 9);;
	_28317_obj+=static__1b02ac1a7_anonFunc(_28224_f);
	_28317_obj+=jule::Str(">", 1);
	return _28317_obj;
}



inline jule::Str static__1b02ac6e6_kind(jule::Ptr<_1e6ab6a8a_TypeKind> _29024_k) {
	{
		
		if (_1e6ab774a_CppLinked(_29024_k.ptr())) {
			_case_begin_1b3779440:;
			{
				return _29024_k.get()._field_CppIdent;
			}
		}
		else if ((_1e6ab8b9c_Prim(_29024_k.ptr()) != nullptr)) {
			_case_begin_1b37795c7:;
			{
				return static__1b02a8912_prim(_1e6ab8b9c_Prim(_29024_k.ptr()));
			}
		}
		else if ((_1e6aba83b_Tup(_29024_k.ptr()) != nullptr)) {
			_case_begin_1b377963d:;
			{
				return static__1b02a8ba9_tuple(_1e6aba83b_Tup(_29024_k.ptr()));
			}
		}
		else if ((_1e6ab8e11_Sptr(_29024_k.ptr()) != nullptr)) {
			_case_begin_1b37796b5:;
			{
				return static__1b02a9490_sptr(_1e6ab8e11_Sptr(_29024_k.ptr()));
			}
		}
		else if ((_1e6ab9175_Ptr(_29024_k.ptr()) != nullptr)) {
			_case_begin_1b377973c:;
			{
				return static__1b02a9737_ptr(_1e6ab9175_Ptr(_29024_k.ptr()));
			}
		}
		else if ((_1e6ab93d9_Enum(_29024_k.ptr()) != nullptr)) {
			_case_begin_1b37797b4:;
			{
				return static__1b02a99ce_enumDecl(_1e6ab93d9_Enum(_29024_k.ptr()));
			}
		}
		else if ((_1e6ab964d_TypeEnum(_29024_k.ptr()) != nullptr)) {
			_case_begin_1b377983b:;
			{
				return static__1b02a9c76_typeEnumDecl(_1e6ab964d_TypeEnum(_29024_k.ptr()));
			}
		}
		else if ((_1e6ab9b26_Slc(_29024_k.ptr()) != nullptr)) {
			_case_begin_1b37798b3:;
			{
				return static__1b02aa2b5_slice(_1e6ab9b26_Slc(_29024_k.ptr()));
			}
		}
		else if ((_1e6aba5c7_Map(_29024_k.ptr()) != nullptr)) {
			_case_begin_1b377993a:;
			{
				return static__1b02aa55c_map(_1e6aba5c7_Map(_29024_k.ptr()));
			}
		}
		else if ((_1e6aba363_Trait(_29024_k.ptr()) != nullptr)) {
			_case_begin_1b37799b2:;
			{
				return static__1b02aaa9b_traitDecl(_1e6aba363_Trait(_29024_k.ptr()));
			}
		}
		else if ((_1e6aba0ee_Struct(_29024_k.ptr()) != nullptr)) {
			_case_begin_1b3779a39:;
			{
				return static__1b02ab0da_structureIns(_1e6aba0ee_Struct(_29024_k.ptr()));
			}
		}
		else if ((_1e6ab98b2_Arr(_29024_k.ptr()) != nullptr)) {
			_case_begin_1b3779ab1:;
			{
				return static__1b02ab382_array(_1e6ab98b2_Arr(_29024_k.ptr()));
			}
		}
		else if ((_1e6ab9d8a_Fn(_29024_k.ptr()) != nullptr)) {
			_case_begin_1b3779b38:;
			{
				return static__1b02ac44e_func(_1e6ab9d8a_Fn(_29024_k.ptr()));
			}
		}
		_match_end_1b3779352:;
	};
	{
		auto &_match_expr{ _29024_k.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1b02a7845_customType>>()) {
			_case_begin_1b3779c15:;
			{
				return _29024_k.get()._field_Kind.operator jule::Ptr<_1b02a7845_customType>().get()._field_kind;
			}
		}
		else {
			_case_begin_1b378114a:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);
			}
		}
		_match_end_1b37810e5:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1b02a813c_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b357dbd4_Name(_1b378315d_Flag* _self_) {
	return (*_self_)._field_name;
}



inline jule::Str _1b357dd16_What(_1b378315d_Flag* _self_) {
	return (*_self_)._field_what;
}



inline void _1b3783548_Reset(_1b378315d_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _1b378367a_Short(_1b378315d_Flag* _self_) {
	return (*_self_)._field_short;
}







std::ostream &operator<<(std::ostream &_Stream, _1b378315d_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1b378686a_Name(_1b3786d21_Flag* _self_) {
	return (*_self_)._field_name;
}



inline jule::Str _1b37870da_What(_1b3786d21_Flag* _self_) {
	return (*_self_)._field_what;
}



inline void _1b378721c_Reset(_1b3786d21_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _1b378734e_Short(_1b3786d21_Flag* _self_) {
	return (*_self_)._field_short;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3786d21_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1b378a352_Name(_1b378a808_Flag* _self_) {
	return (*_self_)._field_name;
}



inline jule::Str _1b378aac2_What(_1b378a808_Flag* _self_) {
	return (*_self_)._field_what;
}



inline void _1b378ac04_Reset(_1b378a808_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _1b378ad36_Short(_1b378a808_Flag* _self_) {
	return (*_self_)._field_short;
}







std::ostream &operator<<(std::ostream &_Stream, _1b378a808_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1b378dd7d_Name(_1b378e334_Flag* _self_) {
	return (*_self_)._field_name;
}



inline jule::Str _1b378e5ed_What(_1b378e334_Flag* _self_) {
	return (*_self_)._field_what;
}



inline void _1b378e730_Reset(_1b378e334_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _1b378e862_Short(_1b378e334_Flag* _self_) {
	return (*_self_)._field_short;
}







std::ostream &operator<<(std::ostream &_Stream, _1b378e334_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1b3792865_Name(_1b3792d1b_Flag* _self_) {
	return (*_self_)._field_name;
}



inline jule::Str _1b37930d5_What(_1b3792d1b_Flag* _self_) {
	return (*_self_)._field_what;
}



inline void _1b3793217_Reset(_1b3792d1b_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _1b3793349_Short(_1b3792d1b_Flag* _self_) {
	return (*_self_)._field_short;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3792d1b_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b0306c7e_FlagSet> static__1b030706a_New(void) {
	return jule::new_ptr<_1b0306c7e_FlagSet>(_1b0306c7e_FlagSet{._field_flags=jule::Slice<jule::Trait<_1b0305310_CommonFlag>>::alloc(0LL,20LL)});
}



inline jule::Trait<_1b0305310_CommonFlag> _1b03074ee_FindFlag(_1b0306c7e_FlagSet* _self_, jule::Str _7127_name) {
	{
		auto &expr = (*_self_)._field_flags;
		auto it = expr.begin();
		_iter_begin_1b379d9b4:;
		if (it != expr.end()) {
			jule::Trait<_1b0305310_CommonFlag> _7221_flag = *it;
			{
				if ((_1b0305310_CommonFlag_mptr_data[(_7221_flag).type_offset]._1b02c5599_Name(_7221_flag) == _7127_name)) {
					return _7221_flag;
				};
			}
			_iter_next_1b379d9b4:;
			++it;
			goto _iter_begin_1b379d9b4;
		}
		_iter_end_1b379d9b4:;
	};
	return nullptr;
}



inline jule::Trait<_1b0305310_CommonFlag> _1b030780c_FindFlagShort(_1b0306c7e_FlagSet* _self_, jule::I32 _8132_name) {
	{
		auto &expr = (*_self_)._field_flags;
		auto it = expr.begin();
		_iter_begin_1b379de26:;
		if (it != expr.end()) {
			jule::Trait<_1b0305310_CommonFlag> _8221_flag = *it;
			{
				if ((_1b0305310_CommonFlag_mptr_data[(_8221_flag).type_offset]._1b02c56cb_Short(_8221_flag) == _8132_name)) {
					return _8221_flag;
				};
			}
			_iter_next_1b379de26:;
			++it;
			goto _iter_begin_1b379de26;
		}
		_iter_end_1b379de26:;
	};
	return nullptr;
}



inline jule::Slice<jule::Trait<_1b0305310_CommonFlag>> _1b0307a71_Flags(_1b0306c7e_FlagSet* _self_) {
	return (*_self_)._field_flags;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1b0307d7e_Parse(_1b0306c7e_FlagSet* _self_, jule::Slice<jule::Str> _11524_args) {
	_1b0309457_argParser _11617_ap = _1b0309457_argParser{._field_set=(*_self_), ._field_args=_11524_args, };;
	({
		auto except = _1b030a843_parse(&_11617_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(),_11617_ap._field_content);
}



inline void _1b030805a_Reset(_1b0306c7e_FlagSet* _self_) {
	{
		auto &expr = (*_self_)._field_flags;
		auto it = expr.begin();
		_iter_begin_1b37a22c0:;
		if (it != expr.end()) {
			jule::Trait<_1b0305310_CommonFlag> _12616_f = *it;
			{
				_1b0305310_CommonFlag_mptr_data[(_12616_f).type_offset]._1b02c5995_Reset(_12616_f);
			}
			_iter_next_1b37a22c0:;
			++it;
			goto _iter_begin_1b37a22c0;
		}
		_iter_end_1b37a22c0:;
	};
}



inline jule::Ptr<_1b3792d1b_Flag> _1b381e64a_addFlagCommon(_1b0306c7e_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1b3820c56:;
			{
				goto _match_end_1b3820be0;
			}
		}
		_match_end_1b3820be0:;
	};
	if ((_1b03074ee_FindFlag(&(*_self_), _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1b030780c_FindFlagShort(&(*_self_), _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1b3792d1b_Flag> _14817_flag = jule::new_ptr<_1b3792d1b_Flag>(_1b3792d1b_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	(*_self_)._field_flags = jule::alloc_for_append((*_self_)._field_flags,1);(*_self_)._field_flags.__push(jule::Trait<_1b0305310_CommonFlag>(_14817_flag, 4));;
	return _14817_flag;
}

inline jule::Ptr<_1b378e334_Flag> _1b3828269_addFlagCommon(_1b0306c7e_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1b38297dc:;
			{
				goto _match_end_1b3829765;
			}
		}
		_match_end_1b3829765:;
	};
	if ((_1b03074ee_FindFlag(&(*_self_), _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1b030780c_FindFlagShort(&(*_self_), _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1b378e334_Flag> _14817_flag = jule::new_ptr<_1b378e334_Flag>(_1b378e334_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	(*_self_)._field_flags = jule::alloc_for_append((*_self_)._field_flags,1);(*_self_)._field_flags.__push(jule::Trait<_1b0305310_CommonFlag>(_14817_flag, 3));;
	return _14817_flag;
}



inline void _1b381c59e_AddVar(_1b0306c7e_FlagSet* _self_, jule::Ptr<jule::Str> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1b3792d1b_Flag> _17617_flag = _1b381e64a_addFlagCommon(&(*_self_), _17541_name,_17552_short,_17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}

inline void _1b38261ce_AddVar(_1b0306c7e_FlagSet* _self_, jule::Ptr<jule::Bool> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1b378e334_Flag> _17617_flag = _1b3828269_addFlagCommon(&(*_self_), _17541_name,_17552_short,_17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0306c7e_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Ptr<_1c9974888_IR>,jule::Slice<_1e43e3a18_Log>> static__1c8bb7989_Build(jule::Str _2721_path, jule::I64 _2732_flags) {
	jule::Ptr<_1e708dccb_JuleImporter> _2817_importer = static__1e6ee9572_New(_1c8ca6d75_buildCompileInfo());;
	jule::Slice<jule::Ptr<_1e5d201bd_Ast>> _2918_files;;
	jule::Slice<_1e43e3a18_Log> _2929_logs;;
	std::tie(_2918_files,_2929_logs) = _1c8b8aa6c_ImportPackage(_2817_importer.ptr(), _2721_path,true);
	if ((_2929_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_2929_logs);
	};
	jule::Str _3313_root = _2721_path;;
	if ((_2918_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Ptr<_1e6a1c24e_Package> _3918_pkg;;
	std::tie(_3918_pkg,_2929_logs) = _1e6ad3975_AnalyzePackage(_2918_files,jule::Trait<_1e6a16a62_Importer>(_2817_importer, 0),_2732_flags);
	if ((_2929_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_2929_logs);
	};
	jule::Ptr<_1c9974888_IR> _4417_ir = jule::new_ptr<_1c9974888_IR>(_1c9974888_IR{._field_Root=_3313_root, ._field_Main=_3918_pkg, ._field_Used=_1e700a671_AllPackages(_2817_importer.ptr()), });;
	_4417_ir.get()._field_Passes=_1c8c7984d_getAllUniquePasses(_4417_ir.get()._field_Main,_4417_ir.get()._field_Used);
	return std::make_tuple(_4417_ir,nullptr);
}



inline void _1c8bc8b54_appendStructs(_1c9974888_IR* _self_, jule::Ptr<_1e6a1c24e_Package>& _5633_p, jule::Slice<jule::Ptr<_1e5d4518d_Struct>>& _5657_buffer) {
	{
		auto &expr = _5633_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1b3230798:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a86010_SymbolTable> _5721_f = *it;
			{
				{
					auto &expr = _5721_f.get()._field_Structs;
					auto it = expr.begin();
					_iter_begin_1b3231139:;
					if (it != expr.end()) {
						jule::Ptr<_1e5d4518d_Struct> _5825_s = *it;
						{
							if ((!(_5825_s.get()._field_CppLinked))) {
								_5657_buffer = jule::alloc_for_append(_5657_buffer,1);_5657_buffer.__push(_5825_s);;
							};
						}
						_iter_next_1b3231139:;
						++it;
						goto _iter_begin_1b3231139;
					}
					_iter_end_1b3231139:;
				};
			}
			_iter_next_1b3230798:;
			++it;
			goto _iter_begin_1b3230798;
		}
		_iter_end_1b3230798:;
	};
}



inline jule::Slice<jule::Ptr<_1e5d4518d_Struct>> _1c8bceb7c_GetAllStructures(_1c9974888_IR* _self_) {
	jule::Slice<jule::Ptr<_1e5d4518d_Struct>> _6917_buffer = nullptr;;
	_1c8bc8b54_appendStructs(&(*_self_), (*_self_)._field_Main,_6917_buffer);
	{
		auto &expr = (*_self_)._field_Used;
		auto it = expr.begin();
		_iter_begin_1b3231aa7:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a192e5_ImportInfo> _7121_u = *it;
			{
				if ((!(_7121_u.get()._field_CppLinked))) {
					_1c8bc8b54_appendStructs(&(*_self_), _7121_u.get()._field_Package,_6917_buffer);
				};
			}
			_iter_next_1b3231aa7:;
			++it;
			goto _iter_begin_1b3231aa7;
		}
		_iter_end_1b3231aa7:;
	};
	return _6917_buffer;
}



inline void _1c8be9746_appendGlobals(_1c9974888_IR* _self_, jule::Ptr<_1e6a1c24e_Package>& _7933_p, jule::Slice<jule::Ptr<_1e6a3dd20_Var>>& _7957_buffer) {
	{
		auto &expr = _7933_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1b3233933:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a86010_SymbolTable> _8021_f = *it;
			{
				{
					auto &expr = _8021_f.get()._field_Vars;
					auto it = expr.begin();
					_iter_begin_1b3234280:;
					if (it != expr.end()) {
						jule::Ptr<_1e6a3dd20_Var> _8125_v = *it;
						{
							if ((((_8125_v.get()._field_Token != nullptr) && (!(_8125_v.get()._field_CppLinked))) && (!(_8125_v.get()._field_Constant)))) {
								_7957_buffer = jule::alloc_for_append(_7957_buffer,1);_7957_buffer.__push(_8125_v);;
							};
						}
						_iter_next_1b3234280:;
						++it;
						goto _iter_begin_1b3234280;
					}
					_iter_end_1b3234280:;
				};
			}
			_iter_next_1b3233933:;
			++it;
			goto _iter_begin_1b3233933;
		}
		_iter_end_1b3233933:;
	};
}



inline jule::Slice<jule::Ptr<_1e6a3dd20_Var>> _1c8c09adb_GetAllGlobals(_1c9974888_IR* _self_) {
	jule::Slice<jule::Ptr<_1e6a3dd20_Var>> _9217_buffer = nullptr;;
	_1c8be9746_appendGlobals(&(*_self_), (*_self_)._field_Main,_9217_buffer);
	{
		auto &expr = (*_self_)._field_Used;
		auto it = expr.begin();
		_iter_begin_1b3235c76:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a192e5_ImportInfo> _9421_u = *it;
			{
				if ((!(_9421_u.get()._field_CppLinked))) {
					_1c8be9746_appendGlobals(&(*_self_), _9421_u.get()._field_Package,_9217_buffer);
				};
			}
			_iter_next_1b3235c76:;
			++it;
			goto _iter_begin_1b3235c76;
		}
		_iter_end_1b3235c76:;
	};
	return _9217_buffer;
}



inline void _1c8c2e46d_Order(_1c9974888_IR* _self_) {
	(*_self_)._field_Ordered._field_Structs=_1c8bceb7c_GetAllStructures(&(*_self_));
	(*_self_)._field_Ordered._field_Globals=_1c8c09adb_GetAllGlobals(&(*_self_));
	static__1c8cda5c3_orderStructures((*_self_)._field_Ordered._field_Structs);
	static__1c8d04356_orderVars((*_self_)._field_Ordered._field_Globals);
}







std::ostream &operator<<(std::ostream &_Stream, _1c9974888_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e5d3a65b_Str(_1e5d714d8_StructIns* _self_) {
	jule::Str _24317_kind = jule::Str();;
	_24317_kind+=(*_self_)._field_Decl.get()._field_Ident;
	if (((*_self_)._field_Generics.len() > 0LL)) {
		_24317_kind+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_Generics;
			auto it = expr.begin();
			_iter_begin_1b224995b:;
			if (it != expr.end()) {
				jule::Ptr<_1e6ab535d_InsGeneric> &_24720_g = *it;
				{
					_24317_kind+=_1e6ab6e86_Str(_24720_g.get()._field_Kind.ptr());
					_24317_kind+=jule::Str(",", 1);
				}
				_iter_next_1b224995b:;
				++it;
				goto _iter_begin_1b224995b;
			}
			_iter_end_1b224995b:;
		};
		(_24317_kind).mut_slice(0LL,(_24317_kind.len() - 1LL));;
		_24317_kind+=jule::Str("]", 1);
	};
	return _24317_kind;
}



inline jule::Bool _1e5d46d71_Equals(jule::Ptr<_1e5d714d8_StructIns> _self_, jule::Ptr<_1e6ab6a8a_TypeKind> _25822_other) {
	jule::Ptr<_1e5d714d8_StructIns> _25913_s = _1e6aba0ee_Struct(_25822_other.ptr());;
	if ((_25913_s == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_Decl != _25913_s.get()._field_Decl)) {
		return false;
	};
	if ((_self_.get()._field_Generics.len() != _25913_s.get()._field_Generics.len())) {
		return false;
	};
	jule::I64 _27217_i = 0LL;;
	for (; (_27217_i < _self_.get()._field_Generics.len()); (_27217_i)++) {
		{
			if ((!(_1e6ab7294_Equals(_self_.get()._field_Generics[_27217_i].get()._field_Kind, _25913_s.get()._field_Generics[_27217_i].get()._field_Kind)))) {
				return false;
			};
		}
	_iter_next_1b224d18a:;
	}
	_iter_end_1b224d18a:;;
	return true;
}



inline jule::Bool _1e5d47ed7_Same(_1e5d714d8_StructIns* _self_, jule::Ptr<_1e5d714d8_StructIns> _28619_s) {
	if ((((*_self_)._field_Decl != _28619_s.get()._field_Decl) || (_28619_s.get()._field_Generics.len() != (*_self_)._field_Generics.len()))) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_Generics;
		auto it = expr.begin();
		_iter_begin_1b2250610:;
		if (it != expr.end()) {
			jule::I64 _29013_i = it - expr.begin();
			jule::Ptr<_1e6ab535d_InsGeneric> &_29016_g = *it;
			{
				if ((!(_1e6ab7294_Equals(_29016_g.get()._field_Kind, _28619_s.get()._field_Generics[_29013_i].get()._field_Kind)))) {
					return false;
				};
			}
			_iter_next_1b2250610:;
			++it;
			_29013_i++;
			goto _iter_begin_1b2250610;
		}
		_iter_end_1b2250610:;
	};
	return true;
}



inline jule::Ptr<_1e5e1c62d_Fn> _1e5d4a33b_FindMethod(_1e5d714d8_StructIns* _self_, jule::Str _30029_ident, jule::Bool _30041_statically) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_1b22520e5:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e1c62d_Fn> _30121_f = *it;
			{
				if (((_30121_f.get()._field_Statically == _30041_statically) && (_30121_f.get()._field_Ident == _30029_ident))) {
					return _30121_f;
				};
			}
			_iter_next_1b22520e5:;
			++it;
			goto _iter_begin_1b22520e5;
		}
		_iter_end_1b22520e5:;
	};
	return nullptr;
}



inline jule::Ptr<_1e5d4c805_FieldIns> _1e5d4b65b_FindField(_1e5d714d8_StructIns* _self_, jule::Str _31128_ident) {
	{
		auto &expr = (*_self_)._field_Fields;
		auto it = expr.begin();
		_iter_begin_1b225336b:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d4c805_FieldIns> _31221_f = *it;
			{
				if ((_31221_f.get()._field_Decl.get()._field_Ident == _31128_ident)) {
					return _31221_f;
				};
			}
			_iter_next_1b225336b:;
			++it;
			goto _iter_begin_1b225336b;
		}
		_iter_end_1b225336b:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5d714d8_StructIns _Src) {
	_Stream << "StructIns{";
	_Stream << "Checked:" << _Src._field_Checked << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Operators:" << _Src._field_Operators;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c9ace262_ObjectDeadCode> static__1c9ace729_new(jule::Ptr<_1c9974888_IR>& _3424_ir) {
	return jule::new_ptr<_1c9ace262_ObjectDeadCode>(_1c9ace262_ObjectDeadCode{._field_ir=_3424_ir});
}



inline jule::Bool _1b3270772_isLive(jule::Ptr<_1c9ace262_ObjectDeadCode> _self_, jule::Ptr<_1e5e2e4db_Trait>& _4030_t) {
	jule::Slice<jule::Ptr<_1e5e2e4db_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1b32727eb:;
			{
				_4117_live=_self_.get()._field_live._field_traits;
			}
		}
		_match_end_1b3272510:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1b3272ec2:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;
				};
			}
			_iter_next_1b3272ec2:;
			++it;
			_5213_i++;
			goto _iter_begin_1b3272ec2;
		}
		_iter_end_1b3272ec2:;
	};
	return false;
}

inline jule::Bool _1b3276547_isLive(jule::Ptr<_1c9ace262_ObjectDeadCode> _self_, jule::Ptr<_1e5e202ce_FnIns>& _4030_t) {
	jule::Slice<jule::Ptr<_1e5e202ce_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1b3277d73:;
			{
				_4117_live=_self_.get()._field_live._field_fns;
			}
		}
		_match_end_1b3277cb8:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1b3278428:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;
				};
			}
			_iter_next_1b3278428:;
			++it;
			_5213_i++;
			goto _iter_begin_1b3278428;
		}
		_iter_end_1b3278428:;
	};
	return false;
}

inline jule::Bool _1b327c6c4_isLive(jule::Ptr<_1c9ace262_ObjectDeadCode> _self_, jule::Ptr<_1e5d714d8_StructIns>& _4030_t) {
	jule::Slice<jule::Ptr<_1e5d714d8_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1b3281c17:;
			{
				_4117_live=_self_.get()._field_live._field_structs;
			}
		}
		_match_end_1b3281992:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1b3281ce4:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;
				};
			}
			_iter_next_1b3281ce4:;
			++it;
			_5213_i++;
			goto _iter_begin_1b3281ce4;
		}
		_iter_end_1b3281ce4:;
	};
	return false;
}

inline jule::Bool _1b32845dd_isLive(jule::Ptr<_1c9ace262_ObjectDeadCode> _self_, jule::Ptr<_1e6a3dd20_Var>& _4030_t) {
	jule::Slice<jule::Ptr<_1e6a3dd20_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1b3286458:;
			{
				_4117_live=_self_.get()._field_live._field_vars;
			}
		}
		_match_end_1b3286337:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1b3286d60:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;
				};
			}
			_iter_next_1b3286d60:;
			++it;
			_5213_i++;
			goto _iter_begin_1b3286d60;
		}
		_iter_end_1b3286d60:;
	};
	return false;
}



inline void _1b3270d16_pushLive(jule::Ptr<_1c9ace262_ObjectDeadCode> _self_, jule::Ptr<_1e5e2e4db_Trait> _6035_t) {
	{
		
{
			_case_begin_1b3274a0c:;
			{
				_self_.get()._field_live._field_traits = jule::alloc_for_append(_self_.get()._field_live._field_traits,1);_self_.get()._field_live._field_traits.__push(_6035_t);;
			}
		}
		_match_end_1b32746aa:;
	};
}

inline void _1b3279b77_pushLive(jule::Ptr<_1c9ace262_ObjectDeadCode> _self_, jule::Ptr<_1e5e202ce_FnIns> _6035_t) {
	{
		
{
			_case_begin_1b327a804:;
			{
				_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_6035_t);;
			}
		}
		_match_end_1b327a57e:;
	};
}

inline void _1b327cc57_pushLive(jule::Ptr<_1c9ace262_ObjectDeadCode> _self_, jule::Ptr<_1e5d714d8_StructIns> _6035_t) {
	{
		
{
			_case_begin_1b327e51c:;
			{
				_self_.get()._field_live._field_structs = jule::alloc_for_append(_self_.get()._field_live._field_structs,1);_self_.get()._field_live._field_structs.__push(_6035_t);;
			}
		}
		_match_end_1b327e231:;
	};
}

inline void _1b3287ec6_pushLive(jule::Ptr<_1c9ace262_ObjectDeadCode> _self_, jule::Ptr<_1e6a3dd20_Var> _6035_t) {
	{
		
{
			_case_begin_1b328d817:;
			{
				_self_.get()._field_live._field_vars = jule::alloc_for_append(_self_.get()._field_live._field_vars,1);_self_.get()._field_live._field_vars.__push(_6035_t);;
			}
		}
		_match_end_1b328d74b:;
	};
}



inline void _1c9b0c878_setReferencesAsLive(jule::Ptr<_1c9ace262_ObjectDeadCode> _self_, jule::Ptr<_1e5e231a0_ReferenceStack>& _7344_rs) {
	if ((_7344_rs == nullptr)) {
		return;;
	};
	jule::I64 _7717_i = 0LL;;
	for (; (_7717_i < _1e5e23821_Len(_7344_rs.ptr())); (_7717_i)++) {
		{
			jule::Any _7921_ref = _1e5e23b2e_At(_7344_rs.ptr(), _7717_i);;
			{
				auto &_match_expr{ _7921_ref };
				
				if (_match_expr.type_is<jule::Ptr<_1e5e2e4db_Trait>>()) {
					_case_begin_1b326e7d7:;
					{
						jule::Ptr<_1e5e2e4db_Trait> _8225_t = _7921_ref.operator jule::Ptr<_1e5e2e4db_Trait>();;
						if (_1b3270772_isLive(_self_, _8225_t)) {
							goto _iter_next_1b326dac2;
						};
						_1b3270d16_pushLive(_self_, _8225_t);
						{
							auto &expr = _8225_t.get()._field_Methods;
							auto it = expr.begin();
							_iter_begin_1b327429d:;
							if (it != expr.end()) {
								jule::Ptr<_1e5e1c62d_Fn> _8729_ins = *it;
								{
									{
										auto &expr = _8729_ins.get()._field_Instances;
										auto it = expr.begin();
										_iter_begin_1b32744bd:;
										if (it != expr.end()) {
											jule::Ptr<_1e5e202ce_FnIns> _8833_mins = *it;
											{
												if (_1b3276547_isLive(_self_, _8833_mins)) {
													goto _iter_next_1b32744bd;
												};
												_1b3279b77_pushLive(_self_, _8833_mins);
												_1c9b0c878_setReferencesAsLive(_self_, _8833_mins.get()._field_Refers);
											}
											_iter_next_1b32744bd:;
											++it;
											goto _iter_begin_1b32744bd;
										}
										_iter_end_1b32744bd:;
									};
								}
								_iter_next_1b327429d:;
								++it;
								goto _iter_begin_1b327429d;
							}
							_iter_end_1b327429d:;
						};
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1e5e202ce_FnIns>>()) {
					_case_begin_1b326e84d:;
					{
						jule::Ptr<_1e5e202ce_FnIns> _9725_f = _7921_ref.operator jule::Ptr<_1e5e202ce_FnIns>();;
						if (_1b3276547_isLive(_self_, _9725_f)) {
							goto _match_end_1b326e463;
						};
						if (((_9725_f.get()._field_Owner != nullptr) && (!(_9725_f.get()._field_Decl.get()._field_Statically)))) {
							if ((!(_1b327c6c4_isLive(_self_, _9725_f.get()._field_Owner)))) {
								_1b327cc57_pushLive(_self_, _9725_f.get()._field_Owner);
								_1c9b0c878_setReferencesAsLive(_self_, _9725_f.get()._field_Owner.get()._field_Refers);
							};
						};
						_1b3279b77_pushLive(_self_, _9725_f);
						_1c9b0c878_setReferencesAsLive(_self_, _9725_f.get()._field_Refers);
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1e6a3dd20_Var>>()) {
					_case_begin_1b326e93b:;
					{
						jule::Ptr<_1e6a3dd20_Var> _11025_v = _7921_ref.operator jule::Ptr<_1e6a3dd20_Var>();;
						if (_1b32845dd_isLive(_self_, _11025_v)) {
							goto _match_end_1b326e463;
						};
						_1b3287ec6_pushLive(_self_, _11025_v);
						_1c9b0c878_setReferencesAsLive(_self_, _11025_v.get()._field_Refers);
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1e5d714d8_StructIns>>()) {
					_case_begin_1b326e9a2:;
					{
						jule::Ptr<_1e5d714d8_StructIns> _11725_s = _7921_ref.operator jule::Ptr<_1e5d714d8_StructIns>();;
						if (_1b327c6c4_isLive(_self_, _11725_s)) {
							goto _match_end_1b326e463;
						};
						_1b327cc57_pushLive(_self_, _11725_s);
						_1c9b0c878_setReferencesAsLive(_self_, _11725_s.get()._field_Refers);
						{
							auto &expr = _11725_s.get()._field_Methods;
							auto it = expr.begin();
							_iter_begin_1b3291c9e:;
							if (it != expr.end()) {
								jule::Ptr<_1e5e1c62d_Fn> _12329_ins = *it;
								{
									{
										auto &expr = _12329_ins.get()._field_Instances;
										auto it = expr.begin();
										_iter_begin_1b3288339:;
										if (it != expr.end()) {
											jule::Ptr<_1e5e202ce_FnIns> _12433_mins = *it;
											{
												if (_1b3276547_isLive(_self_, _12433_mins)) {
													goto _iter_next_1b3288339;
												};
												_1b3279b77_pushLive(_self_, _12433_mins);
												_1c9b0c878_setReferencesAsLive(_self_, _12433_mins.get()._field_Refers);
											}
											_iter_next_1b3288339:;
											++it;
											goto _iter_begin_1b3288339;
										}
										_iter_end_1b3288339:;
									};
								}
								_iter_next_1b3291c9e:;
								++it;
								goto _iter_begin_1b3291c9e;
							}
							_iter_end_1b3291c9e:;
						};
					}
				}
				_match_end_1b326e463:;
			};
		}
	_iter_next_1b326dac2:;
	}
	_iter_end_1b326dac2:;;
}



inline void _1c9b0caed_inits(jule::Ptr<_1c9ace262_ObjectDeadCode> _self_, jule::Ptr<_1e6a1c24e_Package>& _13630_pkg) {
	{
		auto &expr = _13630_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1b326de8a:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a86010_SymbolTable> _13721_file = *it;
			{
				{
					auto &expr = _13721_file.get()._field_Funcs;
					auto it = expr.begin();
					_iter_begin_1b3294c80:;
					if (it != expr.end()) {
						jule::Ptr<_1e5e1c62d_Fn> _13825_f = *it;
						{
							if ((_13825_f.get()._field_Ident == jule::Str("init", 4))) {
								jule::Ptr<_1e5e202ce_FnIns> _14029_ins = _13825_f.get()._field_Instances[0LL];;
								_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_14029_ins);;
								_1c9b0c878_setReferencesAsLive(_self_, _14029_ins.get()._field_Refers);
							};
						}
						_iter_next_1b3294c80:;
						++it;
						goto _iter_begin_1b3294c80;
					}
					_iter_end_1b3294c80:;
				};
			}
			_iter_next_1b326de8a:;
			++it;
			goto _iter_begin_1b326de8a;
		}
		_iter_end_1b326de8a:;
	};
}



inline void _1c9b0cd73_collectLivePackage(jule::Ptr<_1c9ace262_ObjectDeadCode> _self_, jule::Ptr<_1e6a1c24e_Package>& _14843_pkg) {
	_1c9b0caed_inits(_self_, _14843_pkg);
	if (_1e24b5b31_Test) {
		{
			auto &expr = _14843_pkg.get()._field_Files;
			auto it = expr.begin();
			_iter_begin_1b3297249:;
			if (it != expr.end()) {
				jule::Ptr<_1e6a86010_SymbolTable> _15425_file = *it;
				{
					{
						auto &expr = _15425_file.get()._field_Funcs;
						auto it = expr.begin();
						_iter_begin_1b3297ada:;
						if (it != expr.end()) {
							jule::Ptr<_1e5e1c62d_Fn> _15529_f = *it;
							{
								if (_1c9b0ed86_hasDirective(_15529_f.get()._field_Directives,jule::Str("test", 4))) {
									jule::Ptr<_1e5e202ce_FnIns> _15733_ins = _15529_f.get()._field_Instances[0LL];;
									_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_15733_ins);;
									_1c9b0c878_setReferencesAsLive(_self_, _15733_ins.get()._field_Refers);
								};
							}
							_iter_next_1b3297ada:;
							++it;
							goto _iter_begin_1b3297ada;
						}
						_iter_end_1b3297ada:;
					};
				}
				_iter_next_1b3297249:;
				++it;
				goto _iter_begin_1b3297249;
			}
			_iter_end_1b3297249:;
		};
	};
}



inline void _1c9b0d04e_collectLive(jule::Ptr<_1c9ace262_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1b3298547:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a192e5_ImportInfo> _16721_used = *it;
			{
				if ((!(_16721_used.get()._field_CppLinked))) {
					_1c9b0cd73_collectLivePackage(_self_, _16721_used.get()._field_Package);
				};
			}
			_iter_next_1b3298547:;
			++it;
			goto _iter_begin_1b3298547;
		}
		_iter_end_1b3298547:;
	};
	_1c9b0cd73_collectLivePackage(_self_, _self_.get()._field_ir.get()._field_Main);
	jule::Ptr<_1e5e1c62d_Fn> _17517_main = _1e6a1da03_FindFn(_self_.get()._field_ir.get()._field_Main.ptr(), jule::Str("main", 4),false);;
	jule::Ptr<_1e5e202ce_FnIns> _17617_ins = _17517_main.get()._field_Instances[0LL];;
	_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_17617_ins);;
	_1c9b0c878_setReferencesAsLive(_self_, _17617_ins.get()._field_Refers);
}



inline void _1c9b0d2c4_removeDeadGlobals(jule::Ptr<_1c9ace262_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1e6a3dd20_Var>>& _18142_vars) {
	jule::I64 _18217_i = 0LL;;
	while ((_18217_i < _18142_vars.len())) {
		{
			jule::Ptr<_1e6a3dd20_Var> _18417_v = _18142_vars[_18217_i];;
			if (_1b32845dd_isLive(_self_, _18417_v)) {
				(_18217_i)++;
				goto _iter_next_1b329c947;
			};
			_18142_vars=jule::append(_18142_vars.slice(0LL,_18217_i),_18142_vars.slice((_18217_i + 1LL)));
		}
	_iter_next_1b329c947:;
	}
	_iter_end_1b329c947:;;
}



inline void _1c9b0d549_removeDeadFns(jule::Ptr<_1c9ace262_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1e5e1c62d_Fn>>& _19338_funcs) {
	jule::I64 _19417_i = 0LL;;
	while ((_19417_i < _19338_funcs.len())) {
		{
			jule::Ptr<_1e5e1c62d_Fn> _19621_f = _19338_funcs[_19417_i];;
			jule::I64 _19721_j = 0LL;;
			while ((_19721_j < _19621_f.get()._field_Instances.len())) {
				{
					jule::Ptr<_1e5e202ce_FnIns> _19921_ins = _19621_f.get()._field_Instances[_19721_j];;
					if (_1b3276547_isLive(_self_, _19921_ins)) {
						(_19721_j)++;
						goto _iter_next_1b32a1077;
					};
					_19621_f.get()._field_Instances=jule::append(_19621_f.get()._field_Instances.slice(0LL,_19721_j),_19621_f.get()._field_Instances.slice((_19721_j + 1LL)));
				}
			_iter_next_1b32a1077:;
			}
			_iter_end_1b32a1077:;;
			if ((_19621_f.get()._field_Instances.len() == 0LL)) {
				_19338_funcs=jule::append(_19338_funcs.slice(0LL,_19417_i),_19338_funcs.slice((_19417_i + 1LL)));
				goto _iter_next_1b329ce42;
			};
			(_19417_i)++;
		}
	_iter_next_1b329ce42:;
	}
	_iter_end_1b329ce42:;;
}



inline void _1c9b0d7be_removeDeadStructs(jule::Ptr<_1c9ace262_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1e5d4518d_Struct>>& _21442_structs) {
	jule::I64 _21517_i = 0LL;;
	while ((_21517_i < _21442_structs.len())) {
		{
			jule::Ptr<_1e5d4518d_Struct> _21721_s = _21442_structs[_21517_i];;
			jule::I64 _21821_j = 0LL;;
			while ((_21821_j < _21721_s.get()._field_Instances.len())) {
				{
					jule::Ptr<_1e5d714d8_StructIns> _22025_ins = _21721_s.get()._field_Instances[_21821_j];;
					_1c9b0d549_removeDeadFns(_self_, _22025_ins.get()._field_Methods);
					if (((_22025_ins.get()._field_Methods.len() != 0LL) || _1b327c6c4_isLive(_self_, _22025_ins))) {
						(_21821_j)++;
						goto _iter_next_1b32a529b;
					};
					_21721_s.get()._field_Instances=jule::append(_21721_s.get()._field_Instances.slice(0LL,_21821_j),_21721_s.get()._field_Instances.slice((_21821_j + 1LL)));
				}
			_iter_next_1b32a529b:;
			}
			_iter_end_1b32a529b:;;
			if ((_21721_s.get()._field_Instances.len() == 0LL)) {
				_21442_structs=jule::append(_21442_structs.slice(0LL,_21517_i),_21442_structs.slice((_21517_i + 1LL)));
				goto _iter_next_1b32a40e1;
			};
			(_21517_i)++;
		}
	_iter_next_1b32a40e1:;
	}
	_iter_end_1b32a40e1:;;
}



inline void _1c9b0da44_removeDeadTraits(jule::Ptr<_1c9ace262_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1e5e2e4db_Trait>>& _23641_traits) {
	jule::I64 _23717_i = 0LL;;
	while ((_23717_i < _23641_traits.len())) {
		{
			jule::Ptr<_1e5e2e4db_Trait> _23921_t = _23641_traits[_23717_i];;
			if ((!(_1b3270772_isLive(_self_, _23921_t)))) {
				_23641_traits=jule::append(_23641_traits.slice(0LL,_23717_i),_23641_traits.slice((_23717_i + 1LL)));
				goto _iter_next_1b32a8c1c;
			};
			jule::I64 _24421_j = 0LL;;
			while ((_24421_j < _23921_t.get()._field_Implemented.len())) {
				{
					jule::Ptr<_1e5d4518d_Struct> _24621_s = _23921_t.get()._field_Implemented[_24421_j];;
					if ((_24621_s.get()._field_Instances.len() > 0LL)) {
						(_24421_j)++;
						goto _iter_next_1b32a98aa;
					};
					_23921_t.get()._field_Implemented=jule::append(_23921_t.get()._field_Implemented.slice(0LL,_24421_j),_23921_t.get()._field_Implemented.slice((_24421_j + 1LL)));
				}
			_iter_next_1b32a98aa:;
			}
			_iter_end_1b32a98aa:;;
			(_23717_i)++;
		}
	_iter_next_1b32a8c1c:;
	}
	_iter_end_1b32a8c1c:;;
}



inline void _1c9b0dcb9_removeDeadsFile(jule::Ptr<_1c9ace262_ObjectDeadCode> _self_, jule::Ptr<_1e6a86010_SymbolTable>& _25740_file) {
	_1c9b0d549_removeDeadFns(_self_, _25740_file.get()._field_Funcs);
	_1c9b0d7be_removeDeadStructs(_self_, _25740_file.get()._field_Structs);
	_1c9b0da44_removeDeadTraits(_self_, _25740_file.get()._field_Traits);
	_1c9b0d2c4_removeDeadGlobals(_self_, _25740_file.get()._field_Vars);
}



inline void _1c9b0e03e_removeDeadsPackage(jule::Ptr<_1c9ace262_ObjectDeadCode> _self_, jule::Ptr<_1e6a1c24e_Package>& _26443_pkg) {
	{
		auto &expr = _26443_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1b32ae41a:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a86010_SymbolTable> _26521_file = *it;
			{
				_1c9b0dcb9_removeDeadsFile(_self_, _26521_file);
			}
			_iter_next_1b32ae41a:;
			++it;
			goto _iter_begin_1b32ae41a;
		}
		_iter_end_1b32ae41a:;
	};
}



inline void _1c9b0e21a_removeDeads(jule::Ptr<_1c9ace262_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1b32b033e:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a192e5_ImportInfo> _27121_used = *it;
			{
				if ((!(_27121_used.get()._field_CppLinked))) {
					_1c9b0e03e_removeDeadsPackage(_self_, _27121_used.get()._field_Package);
				};
			}
			_iter_next_1b32b033e:;
			++it;
			goto _iter_begin_1b32b033e;
		}
		_iter_end_1b32b033e:;
	};
	_1c9b0e03e_removeDeadsPackage(_self_, _self_.get()._field_ir.get()._field_Main);
}



inline void _1c9b0e3e6_elimanate(jule::Ptr<_1c9ace262_ObjectDeadCode> _self_) {
	_1c9b0d04e_collectLive(_self_);
	_1c9b0e21a_removeDeads(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1c9ace262_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b02a1d06_ObjectCoder> static__1b0284d2d_New(jule::Ptr<_1c9974888_IR>& _7224_ir, _1b02a192c_SerializationInfo _7233_info) {
	jule::Ptr<_1b02a1d06_ObjectCoder> _7317_oc = jule::new_ptr<_1b02a1d06_ObjectCoder>(_1b02a1d06_ObjectCoder{._field_ir=_7224_ir, ._field_info=_7233_info, });;
	_7317_oc.get()._field_ec=static__1b022de3c_new(_7317_oc);
	_7317_oc.get()._field_sc=static__1b022661b_new(_7317_oc);
	return _7317_oc;
}



inline void _1b028515d_write(jule::Ptr<_1b02a1d06_ObjectCoder> _self_, jule::Str _8225_s) {
	_self_.get()._field_Obj+=_8225_s;
}



inline void _1b0285900_addIndent(jule::Ptr<_1b02a1d06_ObjectCoder> _self_) {
	;
	_self_.get()._field_indentBuffer+=jule::Str("\t", 1);
}



inline void _1b02868e0_doneIndent(jule::Ptr<_1b02a1d06_ObjectCoder> _self_) {
	_self_.get()._field_indentBuffer=_self_.get()._field_indentBuffer.slice(0LL,(_self_.get()._field_indentBuffer.len() - 1LL));
}



inline void _1b028713d_indent(jule::Ptr<_1b02a1d06_ObjectCoder> _self_) {
	_self_.get()._field_Obj+=_self_.get()._field_indentBuffer;
}



inline jule::I64 _1b02764b2_findTypeOffset(_1b02a1d06_ObjectCoder* _self_, jule::Ptr<_1e5e2e4db_Trait> _10229_t, jule::Ptr<_1e6ab6a8a_TypeKind> _10244_k) {
	if ((_10229_t.get()._field_Implemented.len() == 0LL)) {
		return 0LL;
	};
	jule::Ptr<_1e5d714d8_StructIns> _10617_s = nullptr;;
	if ((_1e6ab8e11_Sptr(_10244_k.ptr()) != nullptr)) {
		_10244_k=_1e6ab8e11_Sptr(_10244_k.ptr()).get()._field_Elem;
	};
	if ((_1e6aba0ee_Struct(_10244_k.ptr()) == nullptr)) {
		return -1LL;
	};
	_10617_s=_1e6aba0ee_Struct(_10244_k.ptr());
	{
		auto &expr = (*_self_)._field_tmap;
		auto it = expr.begin();
		_iter_begin_1b3692cb5:;
		if (it != expr.end()) {
			jule::Ptr<_1b02a1b19_traitHash> &_11416_hash = *it;
			{
				if (((_11416_hash.get()._field_t == _10229_t) && (_11416_hash.get()._field_s == _10617_s))) {
					return _11416_hash.get()._field_i;
				};
			}
			_iter_next_1b3692cb5:;
			++it;
			goto _iter_begin_1b3692cb5;
		}
		_iter_end_1b3692cb5:;
	};
	return -1LL;
}



inline void _1b0288529_locInfo(jule::Ptr<_1b02a1d06_ObjectCoder> _self_, jule::Ptr<_1e47137a5_Token>& _12328_t) {
	jule::Str &_12414_loc = _12328_t.get()._field_File.get()._field_Path;;
	if (_1e24b666a_Production) {
		{
			
			if (_1e350be95_HasPrefix(_12414_loc,_1e441574e_PathStdlib)) {
				_case_begin_1b3695218:;
				{
					_1b028515d_write(_self_, _1b023a069_cstrBytes(static_cast<jule::Slice<jule::U8>>(_12414_loc.slice((_1e34b81c6_Dir(_1e441574e_PathStdlib).len() + 1LL)))));
				}
			}
			else if (_1e350be95_HasPrefix(_12414_loc,_self_.get()._field_ir.get()._field_Root)) {
				_case_begin_1b3694dd8:;
				{
					_1b028515d_write(_self_, _1b023a069_cstrBytes(static_cast<jule::Slice<jule::U8>>(_12414_loc.slice((_1e34b81c6_Dir(_self_.get()._field_ir.get()._field_Root).len() + 1LL)))));
				}
			}
			else {
				_case_begin_1b3694d72:;
				{
					_1b028515d_write(_self_, _1b023a069_cstrBytes(static_cast<jule::Slice<jule::U8>>(_12414_loc)));
				}
			}
			_match_end_1b3694c95:;
		};
	} else {
		_1b028515d_write(_self_, _1b023a069_cstrBytes(static_cast<jule::Slice<jule::U8>>(_12414_loc)));
	};
	_1b028515d_write(_self_, jule::Str(":", 1));
	_1b028515d_write(_self_, _1e6a04566_Itoa(_12328_t.get()._field_Row));
	_1b028515d_write(_self_, jule::Str(":", 1));
	_1b028515d_write(_self_, _1e6a04566_Itoa(_12328_t.get()._field_Column));
}



inline void _1b0267b57_head(jule::Ptr<_1b02a1d06_ObjectCoder> _self_) {
	_1b029b608_Time _15013_time = static__1b029bb9c_Now();;
	_1b029ae65_AbsTime _15113_abs = _1b029d2db_Abs(&_15013_time);;
	_1b028515d_write(_self_, jule::Str("// Auto generated by JuleC.\n", 28));
	_1b028515d_write(_self_, jule::Str("// JuleC version: ", 18));
	_1b028515d_write(_self_, jule::Str("jule0.0.12 @master", 18));
	_1b028515d_write(_self_, jule::Str("\n", 1));
	_1b028515d_write(_self_, jule::Str("// Date: ", 9));
	_1b028515d_write(_self_, _1e6a04302_FmtUint(_15113_abs._field_Day,10LL));
	_1b028515d_write(_self_, jule::Str("/", 1));
	_1b028515d_write(_self_, _1e6a04302_FmtUint(_15113_abs._field_Month,10LL));
	_1b028515d_write(_self_, jule::Str("/", 1));
	_1b028515d_write(_self_, _1e6a04302_FmtUint(_15113_abs._field_Year,10LL));
	_1b028515d_write(_self_, jule::Str(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1b028515d_write(_self_, _self_.get()._field_info._field_Compiler);
	_1b028515d_write(_self_, jule::Str(" ", 1));
	_1b028515d_write(_self_, _self_.get()._field_info._field_CompilerCommand);
	_1b028515d_write(_self_, jule::Str("\n\n", 2));
	if (_1e24b666a_Production) {
		_1b028515d_write(_self_, jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_1e24b5e3e_RC))) {
		_1b028515d_write(_self_, jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_1e24b635c_Safety))) {
		_1b028515d_write(_self_, jule::Str("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1b028515d_write(_self_, jule::Str("\n\n#include \"", 12));
	_1b028515d_write(_self_, _1e4430add_PathApi);
	_1b028515d_write(_self_, jule::Str("\"\n\n", 3));
}



inline void _1b028614d_links(jule::Ptr<_1b02a1d06_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1b36a1158:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a192e5_ImportInfo> _18316_used = *it;
			{
				{
					
					if ((!(_18316_used.get()._field_CppLinked))) {
						_case_begin_1b36a2b1b:;
						{
							goto _iter_next_1b36a1158;
						}
					}
					else if (_1e43d6eb2_IsStdHeaderPath(_18316_used.get()._field_Path)) {
						_case_begin_1b36a2027:;
						{
							_1b028515d_write(_self_, jule::Str("#include ", 9));
							_1b028515d_write(_self_, _18316_used.get()._field_Path);
							_1b028515d_write(_self_, jule::Str("\n", 1));
						}
					}
					else {
						_case_begin_1b36a1b81:;
						{
							_1b028515d_write(_self_, jule::Str("#include \"", 10));
							_1b028515d_write(_self_, _18316_used.get()._field_Path);
							_1b028515d_write(_self_, jule::Str("\"\n", 2));
						}
					}
					_match_end_1b36a1aa4:;
				};
			}
			_iter_next_1b36a1158:;
			++it;
			goto _iter_begin_1b36a1158;
		}
		_iter_end_1b36a1158:;
	};
}



inline void _1b026b485_prepareStructures(jule::Ptr<_1b02a1d06_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_1b36a1873:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d4518d_Struct> _20021_s = *it;
			{
				if ((_20021_s.get()._field_Token != nullptr)) {
					_1b02a6888_prepareStructure(_20021_s);
				};
			}
			_iter_next_1b36a1873:;
			++it;
			goto _iter_begin_1b36a1873;
		}
		_iter_end_1b36a1873:;
	};
}



inline void _1b02732c2_iterPackages(jule::Ptr<_1b02a1d06_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_1e6a1c24e_Package>&)> _20732_f) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1b36a4821:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a192e5_ImportInfo> _20821_used = *it;
			{
				if ((!(_20821_used.get()._field_CppLinked))) {
					_20732_f(_20821_used.get()._field_Package);
				};
			}
			_iter_next_1b36a4821:;
			++it;
			goto _iter_begin_1b36a4821;
		}
		_iter_end_1b36a4821:;
	};
	_20732_f(_self_.get()._field_ir.get()._field_Main);
}



inline void _1b0273855_buildTraitMap(jule::Ptr<_1b02a1d06_ObjectCoder> _self_) {
	_1b02732c2_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1e6a1c24e_Package>&)>([=](jule::Ptr<_1e6a1c24e_Package>& _21735_pkg) mutable -> void {
		_1b02a6635_iterFiles(_21735_pkg,jule::Fn<void(jule::Ptr<_1e6a86010_SymbolTable>&)>([=](jule::Ptr<_1e6a86010_SymbolTable>& _21836_file) mutable -> void {
			{
				auto &expr = _21836_file.get()._field_Traits;
				auto it = expr.begin();
				_iter_begin_1b36a867c:;
				if (it != expr.end()) {
					jule::Ptr<_1e5e2e4db_Trait> _21929_t = *it;
					{
						if ((_21929_t.get()._field_Token == nullptr)) {
							return;;
						};
						if ((_21929_t.get()._field_Implemented.len() == 0LL)) {
							_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1b02a1b19_traitHash>(_1b02a1b19_traitHash{._field_t=_21929_t, ._field_s=nullptr, ._field_i=0LL}));;
							goto _iter_next_1b36a867c;
						};
						jule::I64 _23129_i = 0LL;;
						{
							auto &expr = _21929_t.get()._field_Implemented;
							auto it = expr.begin();
							_iter_begin_1b36a9969:;
							if (it != expr.end()) {
								jule::Ptr<_1e5d4518d_Struct> _23233_s = *it;
								{
									{
										auto &expr = _23233_s.get()._field_Instances;
										auto it = expr.begin();
										_iter_begin_1b36a923d:;
										if (it != expr.end()) {
											jule::Ptr<_1e5d714d8_StructIns> _23337_ins = *it;
											{
												_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1b02a1b19_traitHash>(_1b02a1b19_traitHash{._field_t=_21929_t, ._field_s=_23337_ins, ._field_i=_23129_i}));;
												(_23129_i)++;
											}
											_iter_next_1b36a923d:;
											++it;
											goto _iter_begin_1b36a923d;
										}
										_iter_end_1b36a923d:;
									};
								}
								_iter_next_1b36a9969:;
								++it;
								goto _iter_begin_1b36a9969;
							}
							_iter_end_1b36a9969:;
						};
					}
					_iter_next_1b36a867c:;
					++it;
					goto _iter_begin_1b36a867c;
				}
				_iter_end_1b36a867c:;
			};
		}));
	}));
}



inline void _1b0274724_traitDecls(jule::Ptr<_1b02a1d06_ObjectCoder> _self_) {
	_1b02732c2_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1e6a1c24e_Package>&)>([=](jule::Ptr<_1e6a1c24e_Package>& _24835_pkg) mutable -> void {
		_1b02a6635_iterFiles(_24835_pkg,jule::Fn<void(jule::Ptr<_1e6a86010_SymbolTable>&)>([=](jule::Ptr<_1e6a86010_SymbolTable>& _24936_file) mutable -> void {
			{
				auto &expr = _24936_file.get()._field_Traits;
				auto it = expr.begin();
				_iter_begin_1b36b309e:;
				if (it != expr.end()) {
					jule::Ptr<_1e5e2e4db_Trait> _25029_t = *it;
					{
						if ((_25029_t.get()._field_Token == nullptr)) {
							return;;
						};
						_1b028713d_indent(_self_);
						_1b028515d_write(_self_, jule::Str("struct ", 7));
						_1b028515d_write(_self_, static__1b024169c_traitDecl(_25029_t));
						_1b028515d_write(_self_, jule::Str("{};\n", 4));
					}
					_iter_next_1b36b309e:;
					++it;
					goto _iter_begin_1b36b309e;
				}
				_iter_end_1b36b309e:;
			};
		}));
	}));
}



inline void _1b0274dd9_structurePlainDecl(jule::Ptr<_1b02a1d06_ObjectCoder> _self_, jule::Ptr<_1e5d4518d_Struct>& _26343_s) {
	{
		auto &expr = _26343_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1b36b2b92:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d714d8_StructIns> _26421_ins = *it;
			{
				_1b028515d_write(_self_, jule::Str("struct ", 7));
				_1b028515d_write(_self_, static__1b0241e83_structureIns(_26421_ins));
				_1b028515d_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1b36b2b92:;
			++it;
			goto _iter_begin_1b36b2b92;
		}
		_iter_end_1b36b2b92:;
	};
}



inline void _1b027559e_structurePlainDecls(jule::Ptr<_1b02a1d06_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_1b36b5337:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d4518d_Struct> _27221_s = *it;
			{
				if ((_27221_s.get()._field_Token != nullptr)) {
					_1b0274dd9_structurePlainDecl(_self_, _27221_s);
				};
			}
			_iter_next_1b36b5337:;
			++it;
			goto _iter_begin_1b36b5337;
		}
		_iter_end_1b36b5337:;
	};
}



inline void _1b0275c64_fieldDecl(jule::Ptr<_1b02a1d06_ObjectCoder> _self_, jule::Ptr<_1e5d4c805_FieldIns>& _27934_f) {
	_1b028515d_write(_self_, static__1b02ac6e6_kind(_27934_f.get()._field_Kind));
	_1b028515d_write(_self_, jule::Str(" ", 1));
	_1b028515d_write(_self_, static__1b024222a_field(_27934_f.get()._field_Decl));
	_1b028515d_write(_self_, jule::Str(" = ", 3));
	if ((_27934_f.get()._field_Default == nullptr)) {
		_1b0239684_initExpr(_self_.get()._field_ec, _27934_f.get()._field_Kind);
	} else {
		_1b0239189_expr(_self_.get()._field_ec, _27934_f.get()._field_Default.get()._field_Model);
	};
	_1b028515d_write(_self_, jule::Str(";", 1));
}



inline void _1b026c84e_structureDestructor(jule::Ptr<_1b02a1d06_ObjectCoder> _self_, jule::Ptr<_1e5d714d8_StructIns>& _29444_s) {
	;
	jule::Ptr<_1e5e1c62d_Fn> _29713_disposeMethod = _1e5d4a33b_FindMethod(_29444_s.ptr(), jule::Str("dispose", 7),false);;
	jule::Bool _29817_disposed = static__1e6a3eeb9_Dispose(_29713_disposeMethod);;
	if ((!(_29817_disposed))) {
		return;;
	};
	_1b028515d_write(_self_, jule::Str("~", 1));
	_1b028515d_write(_self_, static__1b0241e83_structureIns(_29444_s));
	_1b028515d_write(_self_, jule::Str("(void) { ", 9));
	_1b028515d_write(_self_, static__1b024115d_func(_29713_disposeMethod));
	_1b028515d_write(_self_, jule::Str("(this); }", 9));
}



inline void _1b02a239a_structureDeriveDefsDecls(jule::Ptr<_1b02a1d06_ObjectCoder> _self_, jule::Ptr<_1e5d714d8_StructIns>& _31045_s) {
	if (_1e5d36cd9_IsDerives(_31045_s.get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1b028713d_indent(_self_);
		_1b028515d_write(_self_, static__1b023bbe7_cloneFuncDecl(_31045_s.get()._field_Decl));
		_1b028515d_write(_self_, jule::Str(";\n\n", 3));
	};
}



inline void _1b02a24cc_structureOperatorEq(jule::Ptr<_1b02a1d06_ObjectCoder> _self_, jule::Str& _31840_ident, jule::Ptr<_1e5d714d8_StructIns>& _31857_s) {
	if ((_31857_s.get()._field_Operators._field_Eq != nullptr)) {
		_1b02a2741_structureOperator(_self_, _31840_ident,_31857_s.get()._field_Operators._field_Eq,jule::Str("==", 2));
		return;;
	};
	_1b028713d_indent(_self_);
	if (_1e4773903_Inline) {
		_1b028515d_write(_self_, jule::Str("inline ", 7));
	};
	_1b028515d_write(_self_, jule::Str("bool operator==(", 16));
	_1b028515d_write(_self_, _31840_ident);
	_1b028515d_write(_self_, jule::Str(" _other) {", 10));
	if ((_31857_s.get()._field_Fields.len() > 0LL)) {
		_1b0285900_addIndent(_self_);
		_1b028515d_write(_self_, jule::Str("\n", 1));
		_1b028713d_indent(_self_);
		_1b028515d_write(_self_, jule::Str("return ", 7));
		_1b0285900_addIndent(_self_);
		jule::Bool _33821_writed = false;;
		{
			auto &expr = _31857_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1b36c37b8:;
			if (it != expr.end()) {
				jule::Ptr<_1e5d4c805_FieldIns> _33925_f = *it;
				{
					jule::Ptr<_1e5d714d8_StructIns> _34121_strct = _1e6aba0ee_Struct(_33925_f.get()._field_Kind.ptr());;
					if ((((_34121_strct != nullptr) && (_34121_strct.get()._field_Decl != nullptr)) && _34121_strct.get()._field_Decl.get()._field_CppLinked)) {
						goto _iter_next_1b36c37b8;
					};
					if (_33821_writed) {
						_1b028515d_write(_self_, jule::Str(" &&", 3));
					};
					_33821_writed=true;
					_1b028515d_write(_self_, jule::Str("\n", 1));
					_1b028713d_indent(_self_);
					_1b028515d_write(_self_, jule::Str("this->", 6));
					jule::Str _35321_fIdent = static__1b024222a_field(_33925_f.get()._field_Decl);;
					_1b028515d_write(_self_, _35321_fIdent);
					_1b028515d_write(_self_, jule::Str(" == _other.", 11));
					_1b028515d_write(_self_, _35321_fIdent);
				}
				_iter_next_1b36c37b8:;
				++it;
				goto _iter_begin_1b36c37b8;
			}
			_iter_end_1b36c37b8:;
		};
		_1b02868e0_doneIndent(_self_);
		if ((!(_33821_writed))) {
			_1b028515d_write(_self_, jule::Str("true", 4));
		};
		_1b028515d_write(_self_, jule::Str(";\n", 2));
		_1b02868e0_doneIndent(_self_);
		_1b028713d_indent(_self_);
		_1b028515d_write(_self_, jule::Str("}", 1));
	} else {
		_1b028515d_write(_self_, jule::Str(" return true; }", 15));
	};
	_1b028515d_write(_self_, jule::Str("\n\n", 2));
}



inline void _1b02a260e_structureOperatorNotEq(jule::Ptr<_1b02a1d06_ObjectCoder> _self_, jule::Str& _37243_ident, jule::Ptr<_1e5d714d8_StructIns>& _37260_s) {
	_1b028713d_indent(_self_);
	if (_1e4773903_Inline) {
		_1b028515d_write(_self_, jule::Str("inline ", 7));
	};
	_1b028515d_write(_self_, jule::Str("bool operator!=(", 16));
	_1b028515d_write(_self_, _37243_ident);
	_1b028515d_write(_self_, jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1b02a2741_structureOperator(jule::Ptr<_1b02a1d06_ObjectCoder> _self_, jule::Str& _38338_ident, jule::Ptr<_1e5e202ce_FnIns>& _38355_f, jule::Str _38366_op) {
	if ((_38355_f == nullptr)) {
		return;;
	};
	jule::Bool _38813_unary = (_38355_f.get()._field_Params.len() == 1LL);;
	jule::Bool _38913_assignment = _1e5e1ca90_IsVoid(_38355_f.get()._field_Decl.ptr());;
	_1b028713d_indent(_self_);
	if (_1e4773903_Inline) {
		_1b028515d_write(_self_, jule::Str("inline ", 7));
	};
	if (_38913_assignment) {
		_1b028515d_write(_self_, _38338_ident);
		_1b028515d_write(_self_, jule::Str("&", 1));
	} else {
		if ((_1e6ab8b9c_Prim(_38355_f.get()._field_Result.ptr()) == nullptr)) {
			_1b028515d_write(_self_, _38338_ident);
		} else {
			_1b028515d_write(_self_, jule::Str("jule::Bool", 10));
		};
	};
	_1b028515d_write(_self_, jule::Str(" operator", 9));
	_1b028515d_write(_self_, _38366_op);
	_1b028515d_write(_self_, jule::Str("(", 1));
	if ((!(_38813_unary))) {
		jule::Ptr<_1e5e1e410_ParamIns> _41121_p = _38355_f.get()._field_Params[1LL];;
		_1b028515d_write(_self_, static__1b02ab8c1_paramIns(_41121_p));
		_1b028515d_write(_self_, jule::Str(" _other", 7));
	};
	_1b028515d_write(_self_, jule::Str(") { ", 4));
	if ((!(_38913_assignment))) {
		_1b028515d_write(_self_, jule::Str("return ", 7));
	};
	_1b028515d_write(_self_, static__1b0241405_funcIns(_38355_f));
	if ((!(_38813_unary))) {
		_1b028515d_write(_self_, jule::Str("(this, _other); ", 16));
		if (_38913_assignment) {
			_1b028515d_write(_self_, jule::Str("return *this; ", 14));
		};
		_1b028515d_write(_self_, jule::Str("}", 1));
	} else {
		_1b028515d_write(_self_, jule::Str("(this); }", 9));
	};
	_1b028515d_write(_self_, jule::Str("\n\n", 2));
}



inline void _1b02a2873_structureOperators(jule::Ptr<_1b02a1d06_ObjectCoder> _self_, jule::Ptr<_1e5d714d8_StructIns>& _43243_s) {
	jule::Str _43313_ident = static__1b0241e83_structureIns(_43243_s);;
	_1b02a24cc_structureOperatorEq(_self_, _43313_ident,_43243_s);
	_1b02a260e_structureOperatorNotEq(_self_, _43313_ident,_43243_s);
	_1b02a2741_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Gt,jule::Str(">", 1));
	_1b02a2741_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_GtEq,jule::Str(">=", 2));
	_1b02a2741_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Lt,jule::Str("<", 1));
	_1b02a2741_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_LtEq,jule::Str("<=", 2));
	_1b02a2741_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Shl,jule::Str("<<", 2));
	_1b02a2741_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Shr,jule::Str(">>", 2));
	_1b02a2741_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Add,jule::Str("+", 1));
	_1b02a2741_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Sub,jule::Str("-", 1));
	_1b02a2741_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Div,jule::Str("/", 1));
	_1b02a2741_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Mul,jule::Str("*", 1));
	_1b02a2741_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Mod,jule::Str("%", 1));
	_1b02a2741_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitAnd,jule::Str("&", 1));
	_1b02a2741_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitOr,jule::Str("|", 1));
	_1b02a2741_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitXor,jule::Str("^", 1));
	_1b02a2741_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Neg,jule::Str("-", 1));
	_1b02a2741_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Pos,jule::Str("+", 1));
	_1b02a2741_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitNot,jule::Str("~", 1));
	_1b02a2741_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_AddAssign,jule::Str("+=", 2));
	_1b02a2741_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_SubAssign,jule::Str("-=", 2));
	_1b02a2741_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_DivAssign,jule::Str("/=", 2));
	_1b02a2741_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_MulAssign,jule::Str("*=", 2));
	_1b02a2741_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_ModAssign,jule::Str("%=", 2));
	_1b02a2741_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_ShlAssign,jule::Str("<<=", 3));
	_1b02a2741_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_ShrAssign,jule::Str(">>=", 3));
	_1b02a2741_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitOrAssign,jule::Str("|=", 2));
	_1b02a2741_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitAndAssign,jule::Str("&=", 2));
	_1b02a2741_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitXorAssign,jule::Str("^=", 2));
}



inline void _1b02a29a5_structureInsDecl(jule::Ptr<_1b02a1d06_ObjectCoder> _self_, jule::Ptr<_1e5d714d8_StructIns>& _47141_s) {
	if ((_47141_s.get()._field_Methods.len() > 0LL)) {
		{
			auto &expr = _47141_s.get()._field_Methods;
			auto it = expr.begin();
			_iter_begin_1b36e16a4:;
			if (it != expr.end()) {
				jule::Ptr<_1e5e1c62d_Fn> _47325_m = *it;
				{
					_1b02a30b0_funcDecl(_self_, _47325_m,false);
				}
				_iter_next_1b36e16a4:;
				++it;
				goto _iter_begin_1b36e16a4;
			}
			_iter_end_1b36e16a4:;
		};
	};
	_1b028515d_write(_self_, jule::Str("struct ", 7));
	jule::Str _47913_outIdent = static__1b0241e83_structureIns(_47141_s);;
	_1b028515d_write(_self_, _47913_outIdent);
	_1b028515d_write(_self_, jule::Str(" {\n", 3));
	_1b0285900_addIndent(_self_);
	{
		auto &expr = _47141_s.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1b36e36a6:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d4c805_FieldIns> _48521_f = *it;
			{
				_1b028713d_indent(_self_);
				_1b0275c64_fieldDecl(_self_, _48521_f);
				_1b028515d_write(_self_, jule::Str("\n", 1));
			}
			_iter_next_1b36e36a6:;
			++it;
			goto _iter_begin_1b36e36a6;
		}
		_iter_end_1b36e36a6:;
	};
	_1b028713d_indent(_self_);
	_1b026c84e_structureDestructor(_self_, _47141_s);
	_1b028515d_write(_self_, jule::Str("\n\n", 2));
	_1b028713d_indent(_self_);
	_1b028515d_write(_self_, _47913_outIdent);
	_1b028515d_write(_self_, jule::Str("(void) = default;\n\n", 19));
	_1b02a239a_structureDeriveDefsDecls(_self_, _47141_s);
	_1b02a2873_structureOperators(_self_, _47141_s);
	_1b028515d_write(_self_, jule::Str("\n", 1));
	_1b02868e0_doneIndent(_self_);
	_1b028713d_indent(_self_);
	_1b028515d_write(_self_, jule::Str("};", 2));
}



inline void _1b02a2ad7_structureDecl(jule::Ptr<_1b02a1d06_ObjectCoder> _self_, jule::Ptr<_1e5d4518d_Struct>& _51038_s) {
	{
		auto &expr = _51038_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1b36e7732:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d714d8_StructIns> _51121_ins = *it;
			{
				_1b02a29a5_structureInsDecl(_self_, _51121_ins);
			}
			_iter_next_1b36e7732:;
			++it;
			goto _iter_begin_1b36e7732;
		}
		_iter_end_1b36e7732:;
	};
}



inline void _1b02a2c19_structureDecls(jule::Ptr<_1b02a1d06_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_1b36e8656:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d4518d_Struct> _51721_s = *it;
			{
				if ((_51721_s.get()._field_Token != nullptr)) {
					_1b02a2ad7_structureDecl(_self_, _51721_s);
					_1b028515d_write(_self_, jule::Str("\n", 1));
				};
			}
			_iter_next_1b36e8656:;
			++it;
			goto _iter_begin_1b36e8656;
		}
		_iter_end_1b36e8656:;
	};
}



inline void _1b02a2d4b_paramsDecls(jule::Ptr<_1b02a1d06_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1e5e1e410_ParamIns>>& _52536_params) {
	if ((_52536_params.len() == 0LL)) {
		_1b028515d_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1b028515d_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _52536_params;
		auto it = expr.begin();
		_iter_begin_1b36ea724:;
		if (it != expr.end()) {
			jule::I64 _53214_i = it - expr.begin();
			jule::Ptr<_1e5e1e410_ParamIns> _53221_p = *it;
			{
				_1b028515d_write(_self_, static__1b02ab8c1_paramIns(_53221_p));
				if (((_52536_params.len() - _53214_i) > 1LL)) {
					_1b028515d_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1b36ea724:;
			++it;
			_53214_i++;
			goto _iter_begin_1b36ea724;
		}
		_iter_end_1b36ea724:;
	};
	_1b028515d_write(_self_, jule::Str(")", 1));
}



inline void _1b02a2e7d_funcHead(jule::Ptr<_1b02a1d06_ObjectCoder> _self_, jule::Ptr<_1e5e202ce_FnIns>& _54233_f, jule::Bool _54244_ptr) {
	if ((((!(_54244_ptr)) && _1e4773903_Inline) && (!(_1e5e1d068_IsEntryPoint(_54233_f.get()._field_Decl.ptr()))))) {
		_1b028515d_write(_self_, jule::Str("inline ", 7));
	};
	_1b028515d_write(_self_, static__1b02abe10_funcInsResult(_54233_f));
	if (_54244_ptr) {
		_1b028515d_write(_self_, jule::Str("(*", 2));
		_1b028515d_write(_self_, static__1b0241405_funcIns(_54233_f));
		_1b028515d_write(_self_, jule::Str(")", 1));
	} else {
		_1b028515d_write(_self_, jule::Str(" ", 1));
		_1b028515d_write(_self_, static__1b0241405_funcIns(_54233_f));
	};
}



inline void _1b02a30b0_funcDecl(jule::Ptr<_1b02a1d06_ObjectCoder> _self_, jule::Ptr<_1e5e1c62d_Fn>& _55733_f, jule::Bool _55741_ptr) {
	{
		auto &expr = _55733_f.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1b3700b8b:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e202ce_FnIns> _55821_c = *it;
			{
				_1b028713d_indent(_self_);
				_1b02a2e7d_funcHead(_self_, _55821_c,_55741_ptr);
				_1b02a2d4b_paramsDecls(_self_, _55821_c.get()._field_Params);
				_1b028515d_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1b3700b8b:;
			++it;
			goto _iter_begin_1b3700b8b;
		}
		_iter_end_1b3700b8b:;
	};
}



inline void _1b02a31e2_funcDecls(jule::Ptr<_1b02a1d06_ObjectCoder> _self_) {
	_1b02732c2_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1e6a1c24e_Package>&)>([=](jule::Ptr<_1e6a1c24e_Package>& _56735_pkg) mutable -> void {
		_1b02a6635_iterFiles(_56735_pkg,jule::Fn<void(jule::Ptr<_1e6a86010_SymbolTable>&)>([=](jule::Ptr<_1e6a86010_SymbolTable>& _56836_file) mutable -> void {
			{
				auto &expr = _56836_file.get()._field_Funcs;
				auto it = expr.begin();
				_iter_begin_1b3704266:;
				if (it != expr.end()) {
					jule::Ptr<_1e5e1c62d_Fn> _56929_f = *it;
					{
						if (((!(_56929_f.get()._field_CppLinked)) && (_56929_f.get()._field_Token != nullptr))) {
							_1b02a30b0_funcDecl(_self_, _56929_f,false);
						};
					}
					_iter_next_1b3704266:;
					++it;
					goto _iter_begin_1b3704266;
				}
				_iter_end_1b3704266:;
			};
		}));
	}));
}



inline void _1b02a3324_traitDataTypes(jule::Ptr<_1b02a1d06_ObjectCoder> _self_) {
	_1b02732c2_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1e6a1c24e_Package>&)>([=](jule::Ptr<_1e6a1c24e_Package>& _57935_pkg) mutable -> void {
		_1b02a6635_iterFiles(_57935_pkg,jule::Fn<void(jule::Ptr<_1e6a86010_SymbolTable>&)>([=](jule::Ptr<_1e6a86010_SymbolTable>& _58036_file) mutable -> void {
			{
				auto &expr = _58036_file.get()._field_Traits;
				auto it = expr.begin();
				_iter_begin_1b3707049:;
				if (it != expr.end()) {
					jule::Ptr<_1e5e2e4db_Trait> _58129_t = *it;
					{
						if ((_58129_t.get()._field_Token == nullptr)) {
							return;;
						};
						_1b028515d_write(_self_, jule::Str("struct ", 7));
						_1b028515d_write(_self_, static__1b024169c_traitDecl(_58129_t));
						_1b028515d_write(_self_, jule::Str("MptrData", 8));
						_1b028515d_write(_self_, jule::Str(" {\n", 3));
						_1b0285900_addIndent(_self_);
						{
							auto &expr = _58129_t.get()._field_Methods;
							auto it = expr.begin();
							_iter_begin_1b3708d09:;
							if (it != expr.end()) {
								jule::Ptr<_1e5e1c62d_Fn> _59033_m = *it;
								{
									jule::Ptr<_1e5e202ce_FnIns> _59133_ins = _59033_m.get()._field_Instances[0LL];;
									jule::Ptr<_1e5e1e410_ParamIns> _59233_p = _59133_ins.get()._field_Params[0LL];;
									_59233_p.get()._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_58129_t, 2)});
									{
										auto expr = _59133_ins.get()._field_Params.slice(1LL);
										auto it = expr.begin();
										_iter_begin_1b370b26d:;
										if (it != expr.end()) {
											jule::I64 _59630_i = it - expr.begin();
											jule::Ptr<_1e5e1e410_ParamIns> _59637_ip = *it;
											{
												if (_1e47162e1_IsAnonIdent(_59637_ip.get()._field_Decl.get()._field_Ident)) {
													_59637_ip.get()._field_Decl.get()._field_Ident=(jule::Str("_", 1) + _1e6a04566_Itoa(_59630_i));
												};
											}
											_iter_next_1b370b26d:;
											++it;
											_59630_i++;
											goto _iter_begin_1b370b26d;
										}
										_iter_end_1b370b26d:;
									};
									if ((!(_1e24b666a_Production))) {
										_59133_ins.get()._field_Params = jule::alloc_for_append(_59133_ins.get()._field_Params,1);_59133_ins.get()._field_Params.__push(jule::new_ptr<_1e5e1e410_ParamIns>(_1e5e1e410_ParamIns{._field_Decl=jule::new_ptr<_1e5e1ace1_Param>(_1e5e1ace1_Param{._field_Ident=jule::Str("__file", 6)}), ._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(jule::new_ptr<_1b02a7845_customType>(_1b02a7845_customType{._field_kind=jule::Str("const char*", 11)}), 13)})}));;
									};
									_1b02a30b0_funcDecl(_self_, _59033_m,true);
								}
								_iter_next_1b3708d09:;
								++it;
								goto _iter_begin_1b3708d09;
							}
							_iter_end_1b3708d09:;
						};
						_1b02868e0_doneIndent(_self_);
						_1b028713d_indent(_self_);
						_1b028515d_write(_self_, jule::Str("};\n\n", 4));
					}
					_iter_next_1b3707049:;
					++it;
					goto _iter_begin_1b3707049;
				}
				_iter_end_1b3707049:;
			};
		}));
	}));
}



inline void _1b02a3456_paramIns(jule::Ptr<_1b02a1d06_ObjectCoder> _self_, jule::Ptr<_1e5e1e410_ParamIns>& _62333_p) {
	_1b028515d_write(_self_, static__1b02ab8c1_paramIns(_62333_p));
	_1b028515d_write(_self_, jule::Str(" ", 1));
	_1b028515d_write(_self_, static__1b0241944_param(_62333_p.get()._field_Decl));
}



inline void _1b02a3643_paramsIns(jule::Ptr<_1b02a1d06_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1e5e1e410_ParamIns>>& _62934_params) {
	if ((_62934_params.len() == 0LL)) {
		_1b028515d_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1b028515d_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _62934_params;
		auto it = expr.begin();
		_iter_begin_1b371097b:;
		if (it != expr.end()) {
			jule::I64 _63514_i = it - expr.begin();
			jule::Ptr<_1e5e1e410_ParamIns> _63521_p = *it;
			{
				_1b02a3456_paramIns(_self_, _63521_p);
				if (((_62934_params.len() - _63514_i) > 1LL)) {
					_1b028515d_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1b371097b:;
			++it;
			_63514_i++;
			goto _iter_begin_1b371097b;
		}
		_iter_end_1b371097b:;
	};
	_1b028515d_write(_self_, jule::Str(")", 1));
}



inline void _1b02a3962_varInitExpr(jule::Ptr<_1b02a1d06_ObjectCoder> _self_, jule::Ptr<_1e6a3dd20_Var>& _64436_v, jule::Fn<void(void)> _64445_init) {
	if (_64436_v.get()._field_Statically) {
		_1b028515d_write(_self_, jule::Str("static ", 7));
	};
	_1b028515d_write(_self_, static__1b02ac6e6_kind(_64436_v.get()._field_Kind.get()._field_Kind));
	_1b028515d_write(_self_, jule::Str(" ", 1));
	if (_64436_v.get()._field_Reference) {
		_1b028515d_write(_self_, jule::Str("&", 1));
	};
	_1b028515d_write(_self_, static__1b02424c2_var(_64436_v));
	if ((_64445_init != nullptr)) {
		_1b028515d_write(_self_, jule::Str(" = ", 3));
		_64445_init();
	};
	_1b028515d_write(_self_, jule::Str(";", 1));
}



inline void _1b02a3bd7_var(jule::Ptr<_1b02a1d06_ObjectCoder> _self_, jule::Ptr<_1e6a3dd20_Var> _66227_v) {
	if (_1e4716049_IsIgnoreIdent(_66227_v.get()._field_Ident)) {
		return;;
	};
	if (((_66227_v.get()._field_Value != nullptr) && (_66227_v.get()._field_Value.get()._field_Expr != nullptr))) {
		if ((_66227_v.get()._field_Value.get()._field_Data.get()._field_Model != nullptr)) {
			_1b02a3962_varInitExpr(_self_, _66227_v,jule::Fn<void(void)>([=](void) mutable -> void {
				_1b023940e_val(_self_.get()._field_ec, _66227_v.get()._field_Value);
			}));
			return;;
		};
		_1b02a3962_varInitExpr(_self_, _66227_v,nullptr);
		return;;
	};
	_1b02a3962_varInitExpr(_self_, _66227_v,jule::Fn<void(void)>([=](void) mutable -> void {
		_1b0239684_initExpr(_self_.get()._field_ec, _66227_v.get()._field_Kind.get()._field_Kind);
	}));
}



inline void _1b02a3e5c_func(jule::Ptr<_1b02a1d06_ObjectCoder> _self_, jule::Ptr<_1e5e1c62d_Fn>& _67729_f) {
	{
		auto &expr = _67729_f.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1b371990d:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e202ce_FnIns> _67821_ins = *it;
			{
				_1b02a2e7d_funcHead(_self_, _67821_ins,false);
				_1b02a3643_paramsIns(_self_, _67821_ins.get()._field_Params);
				_1b028515d_write(_self_, jule::Str(" ", 1));
				_1b022b203_funcScope(_self_.get()._field_sc, _67821_ins);
				if ((_67821_ins.get()._field_Scope != nullptr)) {
					_1b028515d_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1b371990d:;
			++it;
			goto _iter_begin_1b371990d;
		}
		_iter_end_1b371990d:;
	};
}



inline void _1b02a4138_traitWrappers(jule::Ptr<_1b02a1d06_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_1b371a14a:;
		if (it != expr.end()) {
			jule::Ptr<_1b02a1b19_traitHash> _69021_hash = *it;
			{
				{
					auto &expr = _69021_hash.get()._field_t.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1b371c49e:;
					if (it != expr.end()) {
						jule::Ptr<_1e5e1c62d_Fn> _69125_m = *it;
						{
							jule::Str _69221_ident = _69125_m.get()._field_Ident;;
							_69125_m.get()._field_Instances[0LL].get()._field_Scope=nullptr;
							_69125_m.get()._field_Ident=((_69221_ident + jule::Str("_", 1)) + _1e6a04566_Itoa(_69021_hash.get()._field_i));
							_1b02a3e5c_func(_self_, _69125_m);
							_69125_m.get()._field_Ident=_69221_ident;
							if ((_69021_hash.get()._field_s == nullptr)) {
								if (_1e24b666a_Production) {
									_1b028515d_write(_self_, jule::Str(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
								} else {
									_1b028515d_write(_self_, jule::Str(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
								};
								goto _iter_next_1b371c49e;
							};
							jule::Bool _70821_ptr = (!(_1e5e1b682_IsRef(_69125_m.get()._field_Params[0LL].ptr())));;
							jule::Ptr<_1e5e1c62d_Fn> _71025_sm = _1e5d4a33b_FindMethod(_69021_hash.get()._field_s.ptr(), _69125_m.get()._field_Ident,false);;
							if (((_71025_sm == nullptr) || (_71025_sm.get()._field_Instances.len() == 0LL))) {
								goto _iter_next_1b371c49e;
							};
							_1b0285900_addIndent(_self_);
							_1b028515d_write(_self_, jule::Str("{\n", 2));
							_1b028713d_indent(_self_);
							if ((!(_1e5e1ca90_IsVoid(_71025_sm.ptr())))) {
								_1b028515d_write(_self_, jule::Str("return ", 7));
							};
							_1b028515d_write(_self_, static__1b024115d_func(_71025_sm));
							_1b028515d_write(_self_, jule::Str("(", 1));
							if (_70821_ptr) {
								_1b028515d_write(_self_, jule::Str("_self_.safe_ptr<", 16));
								_1b028515d_write(_self_, static__1b02ab0da_structureIns(_69021_hash.get()._field_s));
								_1b028515d_write(_self_, jule::Str(">(", 2));
								if ((!(_1e24b666a_Production))) {
									_1b028515d_write(_self_, jule::Str("_00___file", 10));
								};
								_1b028515d_write(_self_, jule::Str(")", 1));
							} else {
								_1b028515d_write(_self_, jule::Str("_self_.data.as<", 15));
								_1b028515d_write(_self_, static__1b02aad43_structure(_71025_sm.get()._field_Owner));
								_1b028515d_write(_self_, jule::Str(">()", 3));
							};
							{
								auto expr = _69125_m.get()._field_Params.slice(1LL);
								auto it = expr.begin();
								_iter_begin_1b37267e9:;
								if (it != expr.end()) {
									jule::Ptr<_1e5e1ace1_Param> _73624_mp = *it;
									{
										_1b028515d_write(_self_, jule::Str(", ", 2));
										_1b028515d_write(_self_, static__1b0241944_param(_73624_mp));
									}
									_iter_next_1b37267e9:;
									++it;
									goto _iter_begin_1b37267e9;
								}
								_iter_end_1b37267e9:;
							};
							_1b028515d_write(_self_, jule::Str(");\n}\n", 5));
							_1b02868e0_doneIndent(_self_);
						}
						_iter_next_1b371c49e:;
						++it;
						goto _iter_begin_1b371c49e;
					}
					_iter_end_1b371c49e:;
				};
			}
			_iter_next_1b371a14a:;
			++it;
			goto _iter_begin_1b371a14a;
		}
		_iter_end_1b371a14a:;
	};
}



inline void _1b02a4314_traitDatas(jule::Ptr<_1b02a1d06_ObjectCoder> _self_) {
	jule::Ptr<_1e5e2e4db_Trait> _74717_old = nullptr;;
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_1b37280c0:;
		if (it != expr.end()) {
			jule::Ptr<_1b02a1b19_traitHash> _74821_hash = *it;
			{
				jule::Str _74917_ident = static__1b024169c_traitDecl(_74821_hash.get()._field_t);;
				if ((_74821_hash.get()._field_t != _74717_old)) {
					if ((_74717_old != nullptr)) {
						_1b02868e0_doneIndent(_self_);
						_1b028713d_indent(_self_);
						_1b028515d_write(_self_, jule::Str("};\n", 3));
					};
					_1b028515d_write(_self_, jule::Str("static ", 7));
					_1b028515d_write(_self_, _74917_ident);
					_1b028515d_write(_self_, jule::Str("MptrData ", 9));
					_1b028515d_write(_self_, _74917_ident);
					_1b028515d_write(_self_, jule::Str("_mptr_data[] = {\n", 17));
					_74717_old=_74821_hash.get()._field_t;
					_1b0285900_addIndent(_self_);
				};
				_1b028713d_indent(_self_);
				_1b028515d_write(_self_, jule::Str("{\n", 2));
				_1b0285900_addIndent(_self_);
				{
					auto &expr = _74821_hash.get()._field_t.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1b372be09:;
					if (it != expr.end()) {
						jule::Ptr<_1e5e1c62d_Fn> _76725_m = *it;
						{
							jule::Str _76821_mIdent = static__1b024115d_func(_76725_m);;
							_1b028713d_indent(_self_);
							_1b028515d_write(_self_, jule::Str(".", 1));
							_1b028515d_write(_self_, _76821_mIdent);
							_1b028515d_write(_self_, jule::Str("=", 1));
							_1b028515d_write(_self_, _76821_mIdent);
							_1b028515d_write(_self_, jule::Str("_", 1));
							_1b028515d_write(_self_, _1e6a04566_Itoa(_74821_hash.get()._field_i));
							_1b028515d_write(_self_, jule::Str(",\n", 2));
						}
						_iter_next_1b372be09:;
						++it;
						goto _iter_begin_1b372be09;
					}
					_iter_end_1b372be09:;
				};
				_1b02868e0_doneIndent(_self_);
				_1b028713d_indent(_self_);
				_1b028515d_write(_self_, jule::Str("},\n", 3));
			}
			_iter_next_1b37280c0:;
			++it;
			goto _iter_begin_1b37280c0;
		}
		_iter_end_1b37280c0:;
	};
	if ((_74717_old != nullptr)) {
		_1b02868e0_doneIndent(_self_);
		_1b028713d_indent(_self_);
		_1b028515d_write(_self_, jule::Str("};\n", 3));
	};
}



inline void _1b02a44e0_globals(jule::Ptr<_1b02a1d06_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Globals;
		auto it = expr.begin();
		_iter_begin_1b3730b11:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a3dd20_Var> _79021_v = *it;
			{
				_1b028515d_write(_self_, static__1b02ac6e6_kind(_79021_v.get()._field_Kind.get()._field_Kind));
				_1b028515d_write(_self_, jule::Str(" ", 1));
				if (_79021_v.get()._field_Reference) {
					_1b028515d_write(_self_, jule::Str("&", 1));
				};
				_1b028515d_write(_self_, static__1b02424c2_var(_79021_v));
				_1b028515d_write(_self_, jule::Str(" = ", 3));
				_1b023940e_val(_self_.get()._field_ec, _79021_v.get()._field_Value);
				_1b028515d_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1b3730b11:;
			++it;
			goto _iter_begin_1b3730b11;
		}
		_iter_end_1b3730b11:;
	};
}



inline void _1b02a46bb_decls(jule::Ptr<_1b02a1d06_ObjectCoder> _self_) {
	_1b0274724_traitDecls(_self_);
	_1b027559e_structurePlainDecls(_self_);
	_1b02a2c19_structureDecls(_self_);
	_1b02a31e2_funcDecls(_self_);
	_1b028515d_write(_self_, jule::Str("\n\n", 2));
	_1b02a3324_traitDataTypes(_self_);
	_1b028515d_write(_self_, jule::Str("\n\n", 2));
	_1b02a4138_traitWrappers(_self_);
	_1b028515d_write(_self_, jule::Str("\n\n", 2));
	_1b02a4314_traitDatas(_self_);
	_1b028515d_write(_self_, jule::Str("\n\n", 2));
	_1b02a44e0_globals(_self_);
}



inline void _1b02a4941_structureMethods(jule::Ptr<_1b02a1d06_ObjectCoder> _self_, jule::Ptr<_1e5d714d8_StructIns>& _81841_s) {
	{
		auto &expr = _81841_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1b3737288:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e1c62d_Fn> _81921_f = *it;
			{
				_1b02a3e5c_func(_self_, _81921_f);
				_1b028515d_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1b3737288:;
			++it;
			goto _iter_begin_1b3737288;
		}
		_iter_end_1b3737288:;
	};
}



inline void _1b02a4bb6_structureDeriveDefs(jule::Ptr<_1b02a1d06_ObjectCoder> _self_, jule::Ptr<_1e5d714d8_StructIns>& _82544_s) {
	if (_1e5d36cd9_IsDerives(_82544_s.get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1b028515d_write(_self_, static__1b023be8e_cloneFuncDef(_82544_s.get()._field_Decl));
		_1b028515d_write(_self_, jule::Str("{\n", 2));
		_1b0285900_addIndent(_self_);
		_1b028713d_indent(_self_);
		_1b028515d_write(_self_, static__1b02ab0da_structureIns(_82544_s));
		_1b028515d_write(_self_, jule::Str(" clone;\n", 8));
		{
			auto &expr = _82544_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1b3739ed3:;
			if (it != expr.end()) {
				jule::Ptr<_1e5d4c805_FieldIns> _83320_f = *it;
				{
					jule::Str _83421_ident = static__1b024222a_field(_83320_f.get()._field_Decl);;
					_1b028713d_indent(_self_);
					_1b028515d_write(_self_, jule::Str("clone.", 6));
					_1b028515d_write(_self_, _83421_ident);
					_1b028515d_write(_self_, jule::Str(" = jule::clone(this->", 21));
					_1b028515d_write(_self_, _83421_ident);
					_1b028515d_write(_self_, jule::Str(");\n", 3));
				}
				_iter_next_1b3739ed3:;
				++it;
				goto _iter_begin_1b3739ed3;
			}
			_iter_end_1b3739ed3:;
		};
		_1b028713d_indent(_self_);
		_1b028515d_write(_self_, jule::Str("return clone;\n", 14));
		_1b02868e0_doneIndent(_self_);
		_1b028515d_write(_self_, jule::Str("}", 1));
	};
}



inline void _1b02a4e3b_structureOstream(jule::Ptr<_1b02a1d06_ObjectCoder> _self_, jule::Ptr<_1e5d714d8_StructIns>& _84941_s) {
	_1b028713d_indent(_self_);
	_1b028515d_write(_self_, jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_1b028515d_write(_self_, static__1b0241e83_structureIns(_84941_s));
	_1b028515d_write(_self_, jule::Str(" _Src) {\n", 9));
	_1b0285900_addIndent(_self_);
	_1b028713d_indent(_self_);
	jule::Ptr<_1e5e1c62d_Fn> _85717_fts = _1e5d4a33b_FindMethod(_84941_s.ptr(), jule::Str("to_str", 6),false);;
	if (static__1e6a40261_Str(_85717_fts)) {
		_1b028515d_write(_self_, jule::Str("_Stream << ", 11));
		_1b028515d_write(_self_, static__1b024115d_func(_85717_fts));
		_1b028515d_write(_self_, jule::Str("(&_Src);\n", 9));
	} else {
		_1b028515d_write(_self_, jule::Str("_Stream << \"", 12));
		_1b028515d_write(_self_, _84941_s.get()._field_Decl.get()._field_Ident);
		_1b028515d_write(_self_, jule::Str("{\";\n", 4));
		{
			auto &expr = _84941_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1b37428c0:;
			if (it != expr.end()) {
				jule::I64 _86718_i = it - expr.begin();
				jule::Ptr<_1e5d4c805_FieldIns> _86725_f = *it;
				{
					_1b028713d_indent(_self_);
					_1b028515d_write(_self_, jule::Str("_Stream << \"", 12));
					_1b028515d_write(_self_, _86725_f.get()._field_Decl.get()._field_Ident);
					_1b028515d_write(_self_, jule::Str(":", 1));
					jule::Ptr<_1e5d714d8_StructIns> _87421_strct = _1e6aba0ee_Struct(_86725_f.get()._field_Kind.ptr());;
					if ((((_87421_strct != nullptr) && (_87421_strct.get()._field_Decl != nullptr)) && _87421_strct.get()._field_Decl.get()._field_CppLinked)) {
						_1b028515d_write(_self_, jule::Str(" cpp.", 5));
						_1b028515d_write(_self_, static__1b024222a_field(_86725_f.get()._field_Decl));
						_1b028515d_write(_self_, jule::Str("\"", 1));
					} else {
						_1b028515d_write(_self_, jule::Str("\" << _Src.", 10));
						_1b028515d_write(_self_, static__1b024222a_field(_86725_f.get()._field_Decl));
					};
					if (((_86718_i + 1LL) < _84941_s.get()._field_Fields.len())) {
						_1b028515d_write(_self_, jule::Str(" << \", \"", 8));
					};
					_1b028515d_write(_self_, jule::Str(";\n", 2));
				}
				_iter_next_1b37428c0:;
				++it;
				_86718_i++;
				goto _iter_begin_1b37428c0;
			}
			_iter_end_1b37428c0:;
		};
		_1b028713d_indent(_self_);
		_1b028515d_write(_self_, jule::Str("_Stream << \"}\";\n", 16));
	};
	_1b028713d_indent(_self_);
	_1b028515d_write(_self_, jule::Str("return _Stream;\n", 16));
	_1b02868e0_doneIndent(_self_);
	_1b028515d_write(_self_, jule::Str("}", 1));
}



inline void _1b02a51b1_structureIns(jule::Ptr<_1b02a1d06_ObjectCoder> _self_, jule::Ptr<_1e5d714d8_StructIns>& _90037_s) {
	_1b02a4941_structureMethods(_self_, _90037_s);
	_1b028515d_write(_self_, jule::Str("\n\n", 2));
	_1b02a4bb6_structureDeriveDefs(_self_, _90037_s);
	_1b028515d_write(_self_, jule::Str("\n\n", 2));
	_1b02a4e3b_structureOstream(_self_, _90037_s);
}



inline void _1b02a5436_structure(jule::Ptr<_1b02a1d06_ObjectCoder> _self_, jule::Ptr<_1e5d4518d_Struct>& _90834_s) {
	{
		auto &expr = _90834_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1b374a8b7:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d714d8_StructIns> _90921_ins = *it;
			{
				_1b02a51b1_structureIns(_self_, _90921_ins);
				_1b028515d_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1b374a8b7:;
			++it;
			goto _iter_begin_1b374a8b7;
		}
		_iter_end_1b374a8b7:;
	};
}



inline void _1b02a5612_structures(jule::Ptr<_1b02a1d06_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_1b374b148:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d4518d_Struct> _91621_s = *it;
			{
				if ((_91621_s.get()._field_Token != nullptr)) {
					_1b02a5436_structure(_self_, _91621_s);
					_1b028515d_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1b374b148:;
			++it;
			goto _iter_begin_1b374b148;
		}
		_iter_end_1b374b148:;
	};
}



inline void _1b02a57dd_funcs(jule::Ptr<_1b02a1d06_ObjectCoder> _self_) {
	_1b02732c2_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1e6a1c24e_Package>&)>([=](jule::Ptr<_1e6a1c24e_Package>& _92535_pkg) mutable -> void {
		_1b02a6635_iterFiles(_92535_pkg,jule::Fn<void(jule::Ptr<_1e6a86010_SymbolTable>&)>([=](jule::Ptr<_1e6a86010_SymbolTable>& _92636_file) mutable -> void {
			{
				auto &expr = _92636_file.get()._field_Funcs;
				auto it = expr.begin();
				_iter_begin_1b374edd8:;
				if (it != expr.end()) {
					jule::Ptr<_1e5e1c62d_Fn> _92729_f = *it;
					{
						if (((!(_1e24b5b31_Test)) && _1b02b03db_hasDirective(_92729_f.get()._field_Directives,jule::Str("test", 4)))) {
							goto _iter_next_1b374edd8;
						};
						if (((!(_92729_f.get()._field_CppLinked)) && (_92729_f.get()._field_Token != nullptr))) {
							_1b02a3e5c_func(_self_, _92729_f);
							_1b028515d_write(_self_, jule::Str("\n\n", 2));
						};
					}
					_iter_next_1b374edd8:;
					++it;
					goto _iter_begin_1b374edd8;
				}
				_iter_end_1b374edd8:;
			};
		}));
	}));
}



inline void _1b02a5a63_pushInit(jule::Ptr<_1b02a1d06_ObjectCoder> _self_, jule::Ptr<_1e6a1c24e_Package>& _94033_pkg) {
	_1b02a6635_iterFiles(_94033_pkg,jule::Fn<void(jule::Ptr<_1e6a86010_SymbolTable>&)>([=](jule::Ptr<_1e6a86010_SymbolTable>& _94132_file) mutable -> void {
		{
			auto &expr = _94132_file.get()._field_Funcs;
			auto it = expr.begin();
			_iter_begin_1b375278c:;
			if (it != expr.end()) {
				jule::Ptr<_1e5e1c62d_Fn> _94220_f = *it;
				{
					if ((_94220_f.get()._field_Ident == jule::Str("init", 4))) {
						_1b028713d_indent(_self_);
						_1b028515d_write(_self_, static__1b024115d_func(_94220_f));
						_1b028515d_write(_self_, jule::Str("();\n", 4));
					};
				}
				_iter_next_1b375278c:;
				++it;
				goto _iter_begin_1b375278c;
			}
			_iter_end_1b375278c:;
		};
	}));
}



inline void _1b02a5c3e_initCaller(jule::Ptr<_1b02a1d06_ObjectCoder> _self_) {
	_1b028515d_write(_self_, jule::Str("void __jule_call_initializers(void) {\n", 38));
	_1b0285900_addIndent(_self_);
	_1b02732c2_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1e6a1c24e_Package>&)>([=](jule::Ptr<_1e6a1c24e_Package>& _95535_pkg) mutable -> void {
		_1b02a5a63_pushInit(_self_, _95535_pkg);
	}));
	_1b02868e0_doneIndent(_self_);
	_1b028515d_write(_self_, jule::Str("\n}", 2));
}



inline void _1b02a5e1a_end(jule::Ptr<_1b02a1d06_ObjectCoder> _self_) {
	_1b028515d_write(_self_, jule::Str("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_1e24b5b31_Test) {
		_1b028515d_write(_self_, jule::Str("test_point();", 13));
	} else {
		_1b028515d_write(_self_, jule::Str("entry_point();", 14));
	};
	_1b028515d_write(_self_, jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1b02a60e6_serializeHead(jule::Ptr<_1b02a1d06_ObjectCoder> _self_) {
	_1b026b485_prepareStructures(_self_);
	_1b0273855_buildTraitMap(_self_);
	_1b0267b57_head(_self_);
	_1b028614d_links(_self_);
	_1b028515d_write(_self_, jule::Str("\n", 1));
	_1b02a46bb_decls(_self_);
	_1b028515d_write(_self_, jule::Str("\n", 1));
	_1b02a5612_structures(_self_);
	_1b02a57dd_funcs(_self_);
	_1b02a5c3e_initCaller(_self_);
	_1b028515d_write(_self_, jule::Str("\n\n", 2));
}



inline void _1b02a62c2_Serialize(jule::Ptr<_1b02a1d06_ObjectCoder> _self_) {
	_1b02a60e6_serializeHead(_self_);
	_1b02a5e1a_end(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1b02a1d06_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Obj:" << _Src._field_Obj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::I64,jule::Bool> _1b37a6d0d_parseInteger(_1b0309457_argParser* _self_, jule::Str& _19031_s, jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)> _19039_parser) {
	jule::I64 _19083_x = jule::I64();
	jule::Bool _19089_ok = jule::Bool();
	{
		
		if (_19031_s.empty()) {
			_case_begin_1b37a9a14:;
			{
				_19083_x = 0LL;
				_19089_ok = false;
				return std::make_tuple(_19083_x,_19089_ok);
			}
		}
		else if (_1e350be95_HasPrefix(_19031_s,jule::Str("0x", 2))) {
			_case_begin_1b37a9edc:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),16LL);
			}
		}
		else if (_1e350be95_HasPrefix(_19031_s,jule::Str("0b", 2))) {
			_case_begin_1b37a9d77:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),2LL);
			}
		}
		else if (_1e350be95_HasPrefix(_19031_s,jule::Str("0o", 2))) {
			_case_begin_1b37aa0ca:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),8LL);
			}
		}
		else if ((_19031_s[0LL] == '0')) {
			_case_begin_1b37aa141:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_1b37a966d:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s,10LL);
			}
		}
		_match_end_1b37a9591:;
	};
	return std::make_tuple(_19083_x,_19089_ok);
}

inline std::tuple<jule::U64,jule::Bool> _1b37aedc1_parseInteger(_1b0309457_argParser* _self_, jule::Str& _19031_s, jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)> _19039_parser) {
	jule::U64 _19083_x = jule::U64();
	jule::Bool _19089_ok = jule::Bool();
	{
		
		if (_19031_s.empty()) {
			_case_begin_1b37b2a83:;
			{
				_19083_x = 0LLU;
				_19089_ok = false;
				return std::make_tuple(_19083_x,_19089_ok);
			}
		}
		else if (_1e350be95_HasPrefix(_19031_s,jule::Str("0x", 2))) {
			_case_begin_1b37b305b:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),16LL);
			}
		}
		else if (_1e350be95_HasPrefix(_19031_s,jule::Str("0b", 2))) {
			_case_begin_1b37b2de6:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),2LL);
			}
		}
		else if (_1e350be95_HasPrefix(_19031_s,jule::Str("0o", 2))) {
			_case_begin_1b37b3149:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),8LL);
			}
		}
		else if ((_19031_s[0LL] == '0')) {
			_case_begin_1b37b31b0:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_1b37b26dc:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s,10LL);
			}
		}
		_match_end_1b37b2610:;
	};
	return std::make_tuple(_19083_x,_19089_ok);
}



inline jule::Str _1b0309c4e_getData(_1b0309457_argParser* _self_) {
	if ((((*_self_)._field_i + 1LL) >= (*_self_)._field_args.len())) {
		return jule::Str();
	};
	((*_self_)._field_i)++;
	return (*_self_)._field_args[(*_self_)._field_i];
}



inline jule::VoidExceptional _1b0309e91_processFlag(_1b0309457_argParser* _self_, jule::Trait<_1b0305310_CommonFlag>& _21735_flag) {
	{
		auto &_match_expr{ _21735_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1b378e334_Flag>>()) {
			_case_begin_1b37a3e81:;
			{
				jule::Ptr<_1b378e334_Flag> _22021_bf = _21735_flag.operator jule::Ptr<_1b378e334_Flag>();;
				(*(_22021_bf.get()._field_data))=(!(_22021_bf.get()._field_default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_1b37a3e1a:;
	};
	jule::Str _22513_data = _1b0309c4e_getData(&(*_self_));;
	if (_22513_data.empty()) {
		return jule::VoidExceptional(((jule::Str("--", 2) + _1b0305310_CommonFlag_mptr_data[(_21735_flag).type_offset]._1b02c5599_Name(_21735_flag)) + jule::Str(": expression missing", 20)));
	};
	{
		auto &_match_expr{ _21735_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1b378315d_Flag>>()) {
			_case_begin_1b37a5647:;
			{
				jule::Ptr<_1b378315d_Flag> _23221_intf = _21735_flag.operator jule::Ptr<_1b378315d_Flag>();;
				jule::Bool _23332_ok;;
				std::tie((*(_23221_intf.get()._field_data)),_23332_ok) = _1b37a6d0d_parseInteger(&(*_self_), _22513_data,jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _23370_s, jule::I64 _23378_base) mutable -> std::tuple<jule::I64,jule::Bool> {
					return std::make_tuple(static_cast<jule::I64>(({
						auto except = _1e670d605_ParseInt(_23370_s,_23378_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LL,false);
						} jule::I64();});
					})),true);
				}));
				if ((!(_23332_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _1b0305310_CommonFlag_mptr_data[(_21735_flag).type_offset]._1b02c5599_Name(_21735_flag)) + jule::Str(": expression must be valid signed integer", 41)));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b3786d21_Flag>>()) {
			_case_begin_1b37a6071:;
			{
				jule::Ptr<_1b3786d21_Flag> _24021_uintf = _21735_flag.operator jule::Ptr<_1b3786d21_Flag>();;
				jule::Bool _24133_ok;;
				std::tie((*(_24021_uintf.get()._field_data)),_24133_ok) = _1b37aedc1_parseInteger(&(*_self_), _22513_data,jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _24171_s, jule::I64 _24179_base) mutable -> std::tuple<jule::U64,jule::Bool> {
					return std::make_tuple(static_cast<jule::U64>(({
						auto except = _1e6681974_ParseUint(_24171_s,_24179_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LLU,false);
						} jule::U64();});
					})),true);
				}));
				if ((!(_24133_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _1b0305310_CommonFlag_mptr_data[(_21735_flag).type_offset]._1b02c5599_Name(_21735_flag)) + jule::Str(": expression must be valid unsigned integer", 43)));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b378a808_Flag>>()) {
			_case_begin_1b37a60d7:;
			{
				jule::Ptr<_1b378a808_Flag> _24821_ff = _21735_flag.operator jule::Ptr<_1b378a808_Flag>();;
				(*(_24821_ff.get()._field_data))=static_cast<jule::F64>(({
					auto except = _1e679c221_ParseFloat(_22513_data,64LL);
					(except.ok()) ? (except.result) : ({{
						return jule::VoidExceptional(((jule::Str("--", 2) + _1b0305310_CommonFlag_mptr_data[(_21735_flag).type_offset]._1b02c5599_Name(_21735_flag)) + jule::Str(": expression must be valid floating-point", 41)));
					} jule::F64();});
				}));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b3792d1b_Flag>>()) {
			_case_begin_1b37a614d:;
			{
				(*(_21735_flag.operator jule::Ptr<_1b3792d1b_Flag>().get()._field_data))=_22513_data;
			}
		}
		_match_end_1b37a600a:;
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1b030a216_singleDash(_1b0309457_argParser* _self_, jule::Str& _25730_arg) {
	if ((_25730_arg.len() == 1LL)) {
		return jule::VoidExceptional((_25730_arg + jule::Str(": missing argument", 18)));
	};
	jule::Slice<jule::I32> _26113_rarg = static_cast<jule::Slice<jule::I32>>(_25730_arg).slice(1LL);;
	{
		auto &expr = _26113_rarg;
		auto it = expr.begin();
		_iter_begin_1b37b9e42:;
		if (it != expr.end()) {
			jule::I32 &_26216_r = *it;
			{
				jule::Trait<_1b0305310_CommonFlag> _26321_flag = _1b030780c_FindFlagShort(&(*_self_)._field_set, _26216_r);;
				if ((_26321_flag == nullptr)) {
					return jule::VoidExceptional(((_25730_arg + jule::Str(": flag is not exist: ", 21)) + static_cast<jule::Str>(_26216_r)));
				};
				({
					auto except = _1b0309e91_processFlag(&(*_self_), _26321_flag);
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_1b37b9e42:;
			++it;
			goto _iter_begin_1b37b9e42;
		}
		_iter_end_1b37b9e42:;
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1b030a48b_doubleDash(_1b0309457_argParser* _self_, jule::Str& _27230_arg) {
	if ((_27230_arg.len() == 2LL)) {
		return jule::VoidExceptional((_27230_arg + jule::Str(": missing argument", 18)));
	};
	jule::Trait<_1b0305310_CommonFlag> _27617_flag = _1b03074ee_FindFlag(&(*_self_)._field_set, _27230_arg.slice(2LL));;
	if ((_27617_flag == nullptr)) {
		return jule::VoidExceptional((_27230_arg + jule::Str(": flag is not exist", 19)));
	};
	({
		auto except = _1b0309e91_processFlag(&(*_self_), _27617_flag);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1b030a667_tryArg(_1b0309457_argParser* _self_) {
	jule::Str _28413_arg = (*_self_)._field_args[(*_self_)._field_i];;
	if (((*_self_)._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_28413_arg[0LL] == '-')) {
		if (((_28413_arg.len() > 1LL) && (_28413_arg[1LL] == '-'))) {
			({
				auto except = _1b030a48b_doubleDash(&(*_self_), _28413_arg);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _1b030a216_singleDash(&(*_self_), _28413_arg);
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	(*_self_)._field_content = jule::alloc_for_append((*_self_)._field_content,1);(*_self_)._field_content.__push(_28413_arg);;
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1b030a843_parse(_1b0309457_argParser* _self_) {
	for (; ((*_self_)._field_i < (*_self_)._field_args.len()); ((*_self_)._field_i)++) {
		{
			({
				auto except = _1b030a667_tryArg(&(*_self_));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_1b37c3016:;
	}
	_iter_end_1b37c3016:;;
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1b0309457_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::I32 _1e32d3574_DecodeRune(jule::I32 _6815_r1, jule::I32 _6825_r2) {
	if (((((55296LL <= _6815_r1) && (_6815_r1 < 56320LL)) && (56320LL <= _6825_r2)) && (_6825_r2 < 57344LL))) {
		return static_cast<jule::I32>(((((_6815_r1 - 55296LL) << 10LL) | (_6825_r2 - 56320LL)) + 65536LL));
	};
	return 65533LL;
}



inline std::tuple<jule::I32,jule::I32> _1e32d381b_EncodeRune(jule::I32 _7819_r) {
	jule::I32 _7830_r1 = jule::I32();
	jule::I32 _7840_r2 = jule::I32();
	if (((_7819_r < 65536LL) || (_7819_r > 1114111LL))) {
		_7830_r1 = 65533LL;
		_7840_r2 = 65533LL;
		return std::make_tuple(_7830_r1,_7840_r2);
	};
	_7819_r-=65536LL;
	_7830_r1 = static_cast<jule::I32>((55296LL + ((_7819_r >> 10LL) & 1023LL)));
	_7840_r2 = static_cast<jule::I32>((56320LL + (_7819_r & 1023LL)));
	return std::make_tuple(_7830_r1,_7840_r2);
}



inline jule::Slice<jule::I32> _1e32d3dd2_Decode(jule::Slice<jule::U16> _11911_s) {
	jule::Slice<jule::I32> _12013_a = jule::Slice<jule::I32>::alloc(_11911_s.len());;
	jule::I64 _12113_n = 0LL;;
	jule::I64 _12213_i = 0LL;;
	for (; (_12213_i < _11911_s.len()); (_12213_i)++) {
		{
			jule::U16 _12413_r = _11911_s[_12213_i];;
			{
				
				if ((_12413_r < 55296LLU) || (57344LL <= _12413_r)) {
					_case_begin_1b031a534:;
					{
						_12013_a[_12113_n]=static_cast<jule::I32>(static_cast<jule::I32>(_12413_r));
					}
				}
				else if (((((_12413_r < 56320LLU) && ((_12213_i + 1LL) < _11911_s.len())) && (56320LL <= _11911_s[(_12213_i + 1LL)])) && (_11911_s[(_12213_i + 1LL)] < 57344LLU))) {
					_case_begin_1b031b0a1:;
					{
						_12013_a[_12113_n]=static_cast<jule::I32>(_1e32d3574_DecodeRune(static_cast<jule::I32>(static_cast<jule::I32>(_12413_r)),static_cast<jule::I32>(static_cast<jule::I32>(_11911_s[(_12213_i + 1LL)]))));
						(_12213_i)++;
					}
				}
				else {
					_case_begin_1b031aa1d:;
					{
						_12013_a[_12113_n]=65533LL;
					}
				}
				_match_end_1b031a9a7:;
			};
			(_12113_n)++;
		}
	_iter_next_1b0319566:;
	}
	_iter_end_1b0319566:;;
	return _12013_a.slice(0LL,_12113_n);
}



inline jule::Slice<jule::U16> _1e32d41e0_AppendRune(jule::Slice<jule::U16> _14919_a, jule::I32 _14929_r) {
	{
		
		if (((0LL <= _14929_r) && (_14929_r < 55296LL)) || ((57344LL <= _14929_r) && (_14929_r < 65536LL))) {
			_case_begin_1b031e0d7:;
			{
				return jule::append(_14919_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(static_cast<jule::U16>(_14929_r))}));
			}
		}
		else if (((65536LL <= _14929_r) && (_14929_r <= 1114111LL))) {
			_case_begin_1b031e15e:;
			{
				jule::I32 _15614_r1;;
				jule::I32 _15618_r2;;
				std::tie(_15614_r1,_15618_r2) = _1e32d381b_EncodeRune(_14929_r);
				return jule::append(_14919_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(static_cast<jule::U16>(_15614_r1)),static_cast<jule::U16>(static_cast<jule::U16>(_15618_r2))}));
			}
		}
		_match_end_1b031d0b4:;
	};
	return jule::append(_14919_a,jule::Slice<jule::U16>::make({65533LLU}));
}



inline jule::Slice<jule::U16> _1e26ad6db_Utf16FromStr(jule::Str _1417_s) {
	;
	jule::Slice<jule::I32> _209_runes = static_cast<jule::Slice<jule::I32>>(_1417_s);;
	jule::Slice<jule::U16> _2113_buff = jule::Slice<jule::U16>::alloc(0LL,_209_runes.len());;
	{
		auto &expr = _209_runes;
		auto it = expr.begin();
		_iter_begin_1b032ac09:;
		if (it != expr.end()) {
			jule::I32 &_2212_r = *it;
			{
				if ((_2212_r == 0LL)) {
					goto _iter_end_1b032ac09;
				};
				_2113_buff=_1e32d41e0_AppendRune(_2113_buff,_2212_r);
			}
			_iter_next_1b032ac09:;
			++it;
			goto _iter_begin_1b032ac09;
		}
		_iter_end_1b032ac09:;
	};
	return _1e32d41e0_AppendRune(_2113_buff,0LL);
}



inline jule::Str _1e26ae324_Utf16ToStr(jule::Slice<jule::U16> _3415_s) {
	if ((_3415_s == nullptr)) {
		return jule::Str();
	};
	jule::Slice<jule::U16> _3813_codePage = _3415_s;;
	{
		auto &expr = _3415_s;
		auto it = expr.begin();
		_iter_begin_1b032c3c0:;
		if (it != expr.end()) {
			jule::I64 _399_i = it - expr.begin();
			jule::U16 &_3912_v = *it;
			{
				if ((_3912_v == 0LLU)) {
					_3813_codePage=_3813_codePage.slice(0LL,_399_i);
					goto _iter_end_1b032c3c0;
				};
			}
			_iter_next_1b032c3c0:;
			++it;
			_399_i++;
			goto _iter_begin_1b032c3c0;
		}
		_iter_end_1b032c3c0:;
	};
	return static_cast<jule::Str>(_1e32d3dd2_Decode(_3813_codePage));
}



inline jule::Str _1e26ae456_U16PtrToStr(jule::U16* _5023_s) {
	if ((_5023_s == nullptr)) {
		return jule::Str();
	};
	jule::Slice<jule::U16> _5513_codePage = nullptr;;
	jule::I64 _5613_i = 0LL;;
	for (; ; (_5613_i)++) {
		{
			jule::U16 _5813_r = _5023_s[_5613_i];;
			if ((_5813_r == 0LLU)) {
				return static_cast<jule::Str>(_1e32d3dd2_Decode(_5513_codePage));
			};
			_5513_codePage = jule::alloc_for_append(_5513_codePage,1);_5513_codePage.__push(_5813_r);;
		}
	_iter_next_1b032d734:;
	}
	_iter_end_1b032d734:;;
	return jule::Str();
}



inline jule::I64 _1e25496cb_GetLastErrno(void) {
	return errno;
}



inline jule::Uintptr _1e32d580c_GetStdHandle(jule::Uintptr _5417_stdh) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)(GetStdHandle(_5417_stdh))));
}



inline jule::I64 _1e32d5c5d_Wstat(jule::U16* _5817_path, struct stat* _5833_stat) {
	return static_cast<jule::I64>(wstat(((wchar_t*)(_5817_path)),_5833_stat));
}



inline jule::I64 _1e32d6148_Wopen(jule::U16* _6317_path, jule::I64 _6329_flag, jule::I64 _6340_mode) {
	return static_cast<jule::I64>(_wopen(((wchar_t*)((&(_6317_path[0LL])))),_6329_flag,_6340_mode));
}



inline jule::U32 _1e32d6346_GetLastError(void) {
	return static_cast<jule::U32>(GetLastError());
}



inline jule::U32 _1e32d6687_GetCurrentDirectory(jule::U32 _7231_bufflen, jule::U16* _7249_buff) {
	return static_cast<jule::U32>(GetCurrentDirectoryW(_7231_bufflen,((wchar_t*)(_7249_buff))));
}



inline jule::Bool _1e32d6bc6_DeleteFile(jule::U16* _8322_path) {
	return DeleteFileW(((wchar_t*)(_8322_path)));
}



inline jule::Bool _1e32d6e6d_CreateDirectory(jule::U16* _8827_path) {
	return CreateDirectoryW(((wchar_t*)(_8827_path)),nullptr);
}



inline jule::Bool _1e32d7215_RemoveDirectory(jule::U16* _9327_path) {
	return RemoveDirectoryW(((wchar_t*)(_9327_path)));
}



inline _WDIR* _1e32d74ac_Wopendir(jule::U16* _9820_path) {
	return _wopendir(((wchar_t*)(_9820_path)));
}



inline struct _wdirent* _1e32d7754_Wreaddir(_WDIR* _10124_dir) {
	return _wreaddir(_10124_dir);
}



inline jule::I64 _1e32d79eb_Wclosedir(_WDIR* _10425_dir) {
	return static_cast<jule::I64>(_wclosedir(_10425_dir));
}



inline jule::U32 _1e32d81c2_GetFullPathName(jule::U16* _10727_path, jule::U32 _10739_bufflen, jule::U16* _1085_buff, jule::U16** _10817_fname) {
	return static_cast<jule::U32>(GetFullPathNameW(((wchar_t*)(_10727_path)),_10739_bufflen,((wchar_t*)(_1085_buff)),((wchar_t**)(_10817_fname))));
}



inline jule::Bool _1e32d8513_GetConsoleMode(jule::Uintptr _11319_handle, jule::I64& _11340_mode) {
	return GetConsoleMode(((HANDLE)(_11319_handle)),((DWORD*)((&(_11340_mode)))));
}



inline jule::Bool _1e32d8854_SetConsoleMode(jule::Uintptr _11819_handle, jule::I64 _11835_mode) {
	return SetConsoleMode(((HANDLE)(_11819_handle)),static_cast<DWORD>(_11835_mode));
}



inline jule::Bool _1e32d8d82_WriteConsole(jule::Uintptr _12324_handle, jule::U16* _12340_buffer, jule::I64 _12354_to_write, jule::I64& _12410_written, void* _12424_reserved) {
	return WriteConsoleW(((HANDLE)(_12324_handle)),((void*)(_12340_buffer)),static_cast<DWORD>(_12354_to_write),((DWORD*)(_12410_written)),_12424_reserved);
}



inline jule::Bool _1e32d93b0_ReadConsole(jule::Uintptr _13023_handle, jule::U16* _13043_buffer, jule::I64 _13057_to_read, jule::I64& _13110_readed, void* _13123_input_control) {
	return ReadConsoleW(((HANDLE)(_13023_handle)),((void*)(_13043_buffer)),static_cast<DWORD>(_13057_to_read),((DWORD*)((&(_13110_readed)))),_13123_input_control);
}



inline jule::I64 _1e32db747_Seek(jule::I64 _269_handle, jule::I64 _2622_offset, jule::I64 _2635_origin) {
	return static_cast<jule::I64>(lseek(_269_handle,_2622_offset,_2635_origin));
}



inline jule::I64 _1e32dbb32_Read(jule::I64 _3116_handle, void* _3133_buff, jule::U64 _3148_n) {
	return static_cast<jule::I64>(read(_3116_handle,_3133_buff,_3148_n));
}



inline jule::I64 _1e32dbea6_Close(jule::I64 _3610_handle) {
	return static_cast<jule::I64>(close(_3610_handle));
}



inline jule::I64 _1e32dc391_Write(jule::I64 _3917_handle, void* _3930_buff, jule::U64 _3945_n) {
	return static_cast<jule::I64>(write(_3917_handle,_3930_buff,_3945_n));
}



inline void _1e32dc5a0_Exit(jule::I64 _449_code) {
	exit(_449_code);
}



inline std::tuple<jule::I32,jule::I64> _1e33ba0ea_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	jule::I32 _18228_r = jule::I32();
	jule::I64 _18237_size = jule::I64();
	if ((_18215_p.len() < 1LL)) {
		_18228_r = 65533LL;
		_18237_size = 0LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	jule::U8 _1869_p0 = _18215_p[0LL];;
	jule::U8 _1879_x = _1e33b8e95_first[static_cast<jule::I64>(_1869_p0)];;
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::I32>(((_1879_x << 31LLU) >> 31LLU));;
		_18228_r = static_cast<jule::I32>(((static_cast<jule::I32>(_18215_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask)));
		_18237_size = 1LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	jule::I64 _1959_sz = static_cast<jule::I64>((_1879_x & 7LLU));;
	_1e33b9517_acceptRange _1969_accept = _1e33b987a_acceptRanges[static_cast<jule::I64>((_1879_x >> 4LLU))];;
	if ((_18215_p.len() < _1959_sz)) {
		_18228_r = 65533LL;
		_18237_size = 1LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	jule::U8 _2009_b1 = _18215_p[1LL];;
	if (((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1))) {
		_18228_r = 65533LL;
		_18237_size = 1LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	if ((_1959_sz <= 2LL)) {
		_18228_r = static_cast<jule::I32>(((static_cast<jule::I32>((_1869_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2009_b1 & 63LLU))));
		_18237_size = 2LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	jule::U8 _2079_b2 = _18215_p[2LL];;
	if (((_2079_b2 < 128LLU) || (191LL < _2079_b2))) {
		_18228_r = 65533LL;
		_18237_size = 1LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	if ((_1959_sz <= 3LL)) {
		_18228_r = static_cast<jule::I32>((((static_cast<jule::I32>((_1869_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2079_b2 & 63LLU))));
		_18237_size = 3LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	jule::U8 _2149_b3 = _18215_p[3LL];;
	if (((_2149_b3 < 128LLU) || (191LL < _2149_b3))) {
		_18228_r = 65533LL;
		_18237_size = 1LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	_18228_r = static_cast<jule::I32>(((((static_cast<jule::I32>((_1869_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2079_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2149_b3 & 63LLU))));
	_18237_size = 4LL;
	return std::make_tuple(_18228_r,_18237_size);
}



inline std::tuple<jule::I32,jule::I64> _1e33ba419_DecodeRuneStr(jule::Str _22918_s) {
	jule::I32 _22928_r = jule::I32();
	jule::I64 _22937_size = jule::I64();
	if ((_22918_s.len() < 1LL)) {
		_22928_r = 65533LL;
		_22937_size = 0LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	jule::U8 _2339_s0 = _22918_s[0LL];;
	jule::U8 _2349_x = _1e33b8e95_first[static_cast<jule::I64>(_2339_s0)];;
	if ((_2349_x >= 240LLU)) {
		jule::I32 _23913_mask = static_cast<jule::I32>(((_2349_x << 31LLU) >> 31LLU));;
		_22928_r = static_cast<jule::I32>(((static_cast<jule::I32>(_22918_s[0LL]) & (~(_23913_mask))) | (65533LL & _23913_mask)));
		_22937_size = 1LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	jule::I64 _2429_sz = static_cast<jule::I64>((_2349_x & 7LLU));;
	_1e33b9517_acceptRange _2439_accept = _1e33b987a_acceptRanges[static_cast<jule::I64>((_2349_x >> 4LLU))];;
	if ((_22918_s.len() < _2429_sz)) {
		_22928_r = 65533LL;
		_22937_size = 1LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	jule::U8 _2479_s1 = _22918_s[1LL];;
	if (((_2479_s1 < _2439_accept._field_lo) || (_2439_accept._field_hi < _2479_s1))) {
		_22928_r = 65533LL;
		_22937_size = 1LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	if ((_2429_sz <= 2LL)) {
		_22928_r = static_cast<jule::I32>(((static_cast<jule::I32>((_2339_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2479_s1 & 63LLU))));
		_22937_size = 2LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	jule::U8 _2549_s2 = _22918_s[2LL];;
	if (((_2549_s2 < 128LLU) || (191LL < _2549_s2))) {
		_22928_r = 65533LL;
		_22937_size = 1LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	if ((_2429_sz <= 3LL)) {
		_22928_r = static_cast<jule::I32>((((static_cast<jule::I32>((_2339_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2549_s2 & 63LLU))));
		_22937_size = 3LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	jule::U8 _2619_s3 = _22918_s[3LL];;
	if (((_2619_s3 < 128LLU) || (191LL < _2619_s3))) {
		_22928_r = 65533LL;
		_22937_size = 1LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	_22928_r = static_cast<jule::I32>(((((static_cast<jule::I32>((_2339_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2549_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2619_s3 & 63LLU))));
	_22937_size = 4LL;
	return std::make_tuple(_22928_r,_22937_size);
}



inline std::tuple<jule::I32,jule::I64> _1e33ba6b1_DecodeLastRune(jule::Slice<jule::U8> _27619_p) {
	jule::I32 _27632_r = jule::I32();
	jule::I64 _27641_size = jule::I64();
	if ((_27619_p.len() == 0LL)) {
		_27632_r = 65533LL;
		_27641_size = 0LL;
		return std::make_tuple(_27632_r,_27641_size);
	};
	jule::I64 _2809_end = _27619_p.len();;
	jule::I64 _28113_start = (_2809_end - 1LL);;
	_27632_r=static_cast<jule::I32>(static_cast<jule::I32>(_27619_p[_28113_start]));
	if ((_27632_r < 128LL)) {
		_27641_size = 1LL;
		return std::make_tuple(_27632_r,_27641_size);
	};
	jule::I64 _28913_lim = (_2809_end - 4LL);;
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	};
	(_28113_start)--;
	for (; (_28113_start >= _28913_lim); (_28113_start)--) {
		{
			if (_1e33bc086_RuneStart(_27619_p[_28113_start])) {
				goto _iter_end_1b03a700a;
			};
		}
	_iter_next_1b03a700a:;
	}
	_iter_end_1b03a700a:;;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	};
	std::tie(_27632_r,_27641_size) = _1e33ba0ea_DecodeRune(_27619_p.slice(_28113_start,_2809_end));
	if (((_28113_start + _27641_size) != _2809_end)) {
		_27632_r = 65533LL;
		_27641_size = 1LL;
		return std::make_tuple(_27632_r,_27641_size);
	};
	return std::make_tuple(_27632_r,_27641_size);
}



inline jule::I64 _1e33bac00_RuneLen(jule::I32 _35212_r) {
	{
		
		if ((_35212_r < 0LL)) {
			_case_begin_1b03ae1cc:;
			{
				return -1LL;
			}
		}
		else if ((_35212_r <= 127LL)) {
			_case_begin_1b03ad918:;
			{
				return 1LL;
			}
		}
		else if ((_35212_r <= 2047LL)) {
			_case_begin_1b03ad990:;
			{
				return 2LL;
			}
		}
		else if (((55296LL <= _35212_r) && (_35212_r <= 57343LL))) {
			_case_begin_1b03ada17:;
			{
				return -1LL;
			}
		}
		else if ((_35212_r <= 65535LL)) {
			_case_begin_1b03ada8e:;
			{
				return 3LL;
			}
		}
		else if ((_35212_r <= 1114111LL)) {
			_case_begin_1b03add36:;
			{
				return 4LL;
			}
		}
		else {
			_case_begin_1b03ad8a2:;
			{
				return -1LL;
			}
		}
		_match_end_1b03ad7e7:;
	};
}



inline jule::I64 _1e33bb11d_EncodeRune(jule::Slice<jule::U8> _37419_p, jule::I32 _37434_r) {
	jule::U32 _3769_i = static_cast<jule::U32>(_37434_r);;
	{
		
		if ((_3769_i <= 127LLU)) {
			_case_begin_1b03b4545:;
			{
				_37419_p[0LL]=static_cast<jule::U8>(static_cast<jule::U8>(_37434_r));
				return 1LL;
			}
		}
		else if ((_3769_i <= 2047LLU)) {
			_case_begin_1b03b45ab:;
			{
				_37419_p[0LL]=static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_37434_r >> 6LL))));
				_37419_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU)));
				return 2LL;
			}
		}
		else if ((_3769_i > 1114111LLU) || ((55296LL <= _3769_i) && (_3769_i <= 57343LLU))) {
			_case_begin_1b03b4303:;
			{
				_37434_r=65533LL;
				goto _case_begin_1b03b4369;
			}
		}
		else if ((_3769_i <= 65535LLU)) {
			_case_begin_1b03b4369:;
			{
				_37419_p[0LL]=static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_37434_r >> 12LL))));
				_37419_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU)));
				_37419_p[2LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU)));
				return 3LL;
			}
		}
		else {
			_case_begin_1b03b1a5e:;
			{
				_37419_p[0LL]=static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_37434_r >> 18LL))));
				_37419_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37434_r >> 12LL)) & 63LLU)));
				_37419_p[2LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU)));
				_37419_p[3LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU)));
				return 4LL;
			}
		}
		_match_end_1b03b1a09:;
	};
}



inline jule::Slice<jule::U8> _1e33bb45e_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40530_r))}));
	};
	return _1e33bb7a0_appendRuneNonASCII(_40519_p,_40530_r);
}



inline jule::Slice<jule::U8> _1e33bb7a0_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4149_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4149_i <= 2047LLU)) {
			_case_begin_1b03bc729:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41242_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));
			}
		}
		else if ((_4149_i > 1114111LLU) || ((55296LL <= _4149_i) && (_4149_i <= 57343LLU))) {
			_case_begin_1b03badba:;
			{
				_41242_r=128LL;
				goto _case_begin_1b03bae31;
			}
		}
		else if ((_4149_i <= 65535LLU)) {
			_case_begin_1b03bae31:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41242_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));
			}
		}
		else {
			_case_begin_1b03ba3a3:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41242_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));
			}
		}
		_match_end_1b03ba34d:;
	};
}



inline jule::I64 _1e33bbcde_RuneCountStr(jule::Str _47317_s) {
	jule::I64 _47327_n = jule::I64();
	jule::I64 _47413_i = 0LL;;
	for (; (_47413_i < _47317_s.len()); (_47327_n)++) {
		{
			jule::U8 _47617_c = _47317_s[_47413_i];;
			if ((_47617_c < 128LLU)) {
				(_47413_i)++;
				goto _iter_next_1b03c4b71;
			};
			jule::U8 _48213_x = _1e33b8e95_first[static_cast<jule::I64>(_47617_c)];;
			if ((_48213_x == 241LLU)) {
				(_47413_i)++;
				goto _iter_next_1b03c4b71;
			};
			jule::I64 _48717_size = static_cast<jule::I64>((_48213_x & 7LLU));;
			if (((_47413_i + _48717_size) > _47317_s.len())) {
				(_47413_i)++;
				goto _iter_next_1b03c4b71;
			};
			_1e33b9517_acceptRange _49213_accept = _1e33b987a_acceptRanges[static_cast<jule::I64>((_48213_x >> 4LLU))];;
			_47617_c=_47317_s[(_47413_i + 1LL)];
			if (((_47617_c < _49213_accept._field_lo) || (_49213_accept._field_hi < _47617_c))) {
				_48717_size=1LL;
			} else if ((_48717_size == 2LL)) {
			} else {
				_47617_c=_47317_s[(_47413_i + 2LL)];
				if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
					_48717_size=1LL;
				} else if ((_48717_size == 3LL)) {
				} else {
					_47617_c=_47317_s[(_47413_i + 3LL)];
					if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
						_48717_size=1LL;
					};
				};
			};
			_47413_i+=_48717_size;
		}
	_iter_next_1b03c4b71:;
	}
	_iter_end_1b03c4b71:;;
	return _47327_n;
}



inline jule::Bool _1e33bc086_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);
}



inline jule::I64 _1e346574a_getLastOsErrorWindows(void) {
	jule::U32 _169_err = _1e32d6346_GetLastError();;
	{
		auto &_match_expr{ _169_err };
		
		if (_match_expr == 5LL) {
			_case_begin_1b03ea746:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1b03ec78c:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1b03ec803:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 123LL) {
			_case_begin_1b03ec869:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else {
			_case_begin_1b03eaa54:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		_match_end_1b03ec726:;
	};
}



inline jule::Slice<jule::Str> _1e3469397_Args(void) {
	return jule::args();
}



inline jule::Exceptional<jule::Str> _1e346981a_WorkingDir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(),({
		auto except = _1e346a71c_getwd();
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));
}



inline jule::Exceptional<jule::Str> _1e346a71c_getwd(void) {
	jule::Array<jule::U16,261> _1513_buff = jule::Array<jule::U16,261>();;
	jule::U32 _169_n = _1e32d6687_GetCurrentDirectory(261LLU,(&(_1513_buff[0LL])));;
	if ((_169_n == 0LLU)) {
		return jule::Exceptional<jule::Str>(_1e346574a_getLastOsErrorWindows());
	};
	return jule::Exceptional<jule::Str>(jule::Any(),_1e26ae456_U16PtrToStr((&(_1513_buff[0LL]))));
}



inline jule::Slice<jule::U8> _1e3503035_Stobs(jule::Str& _911_s) {
	return _911_s.fake_slice();
}



inline jule::Bool _1e4319246_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_1e4383733__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);
	};
	return _1e438c1dc_isExcludingLatin(_1e43241b8_Letter,_7613_r);
}



inline jule::Bool _1e438b609_is16(jule::Slice<_1e4389a47_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto &expr = _1919_ranges;
			auto it = expr.begin();
			_iter_begin_1b15eca9b:;
			if (it != expr.end()) {
				jule::I64 _19313_i = it - expr.begin();
				{
					_1e4389a47_Range16* _19417_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < _19417_range->_field_Lo)) {
							return false;
						};
						if ((_19128_r <= _19417_range->_field_Hi)) {
							return ((_19417_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _19417_range->_field_Lo),_19417_range->_field_Stride) == 0LLU));
						};
					};
				}
				_iter_next_1b15eca9b:;
				++it;
				_19313_i++;
				goto _iter_begin_1b15eca9b;
			}
			_iter_end_1b15eca9b:;
		};
		return false;
	};
	jule::I64 _20813_lo = 0LL;;
	jule::I64 _20913_hi = _1919_ranges.len();;
	while ((_20813_lo < _20913_hi)) {
		{
			jule::I64 _21113_m = (_20813_lo + ((_20913_hi - _20813_lo) >> 1LLU));;
			_1e4389a47_Range16* _21213_range = (&(_1919_ranges[_21113_m]));;
			{
				if (((_21213_range->_field_Lo <= _19128_r) && (_19128_r <= _21213_range->_field_Hi))) {
					return ((_21213_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _21213_range->_field_Lo),_21213_range->_field_Stride) == 0LLU));
				};
				if ((_19128_r < _21213_range->_field_Lo)) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I64>((_21113_m + 1LL));
				};
			};
		}
	_iter_next_1b15eb429:;
	}
	_iter_end_1b15eb429:;;
	return false;
}



inline jule::Bool _1e438b94a_is32(jule::Slice<_1e4389eba_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto &expr = _2289_ranges;
			auto it = expr.begin();
			_iter_begin_1b1604234:;
			if (it != expr.end()) {
				jule::I64 _23013_i = it - expr.begin();
				{
					_1e4389eba_Range32* _23117_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < _23117_range->_field_Lo)) {
							return false;
						};
						if ((_22828_r <= _23117_range->_field_Hi)) {
							return ((_23117_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _23117_range->_field_Lo),_23117_range->_field_Stride) == 0LLU));
						};
					};
				}
				_iter_next_1b1604234:;
				++it;
				_23013_i++;
				goto _iter_begin_1b1604234;
			}
			_iter_end_1b1604234:;
		};
		return false;
	};
	jule::I64 _24513_lo = 0LL;;
	jule::I64 _24613_hi = _2289_ranges.len();;
	while ((_24513_lo < _24613_hi)) {
		{
			jule::I64 _24813_m = (_24513_lo + ((_24613_hi - _24513_lo) >> 1LLU));;
			_1e4389eba_Range32* _24913_range = (&(_2289_ranges[_24813_m]));;
			{
				if (((_24913_range->_field_Lo <= _22828_r) && (_22828_r <= _24913_range->_field_Hi))) {
					return ((_24913_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _24913_range->_field_Lo),_24913_range->_field_Stride) == 0LLU));
				};
				if ((_22828_r < _24913_range->_field_Lo)) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I64>((_24813_m + 1LL));
				};
			};
		}
	_iter_next_1b1600dbd:;
	}
	_iter_end_1b1600dbd:;;
	return false;
}



inline jule::Bool _1e438c1dc_isExcludingLatin(jule::Ptr<_1e438a43d_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_1e4389a47_Range16> &_28014_R16 = _27821_rangeTab.get()._field_R16;;
		jule::I64 _28213_off = _27821_rangeTab.get()._field_LatinOffset;;
		if (((_28014_R16.len() > _28213_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>(_28014_R16[(_28014_R16.len() - 1LL)]._field_Hi)))) {
			return _1e438b609_is16(_28014_R16.slice(_28213_off),static_cast<jule::U16>(static_cast<jule::U16>(_27844_r)));
		};
	};
	jule::Slice<_1e4389eba_Range32> &_28710_R32 = _27821_rangeTab.get()._field_R32;;
	if (((_28710_R32.len() > 0LL) && (_27844_r >= static_cast<jule::I32>(_28710_R32[0LL]._field_Lo)))) {
		return _1e438b94a_is32(_28710_R32,static_cast<jule::U32>(static_cast<jule::U32>(_27844_r)));
	};
	return false;
}



inline jule::Bool _1e438c484_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_1e4383733__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);
	};
	return _1e438c1dc_isExcludingLatin(_1e432b258_Upper,_29512_r);
}



inline jule::Str _1e350c9ac_Repeat(jule::Str _1111_s, jule::I64 _1123_n) {
	if ((_1123_n <= 0LL)) {
		return jule::Str();
	};
	if ((_1111_s.len() > jule::div(jule::MAX_I64,_1123_n))) {
		jule::panic(jule::Str("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:16:9"));;
	};
	jule::Str _1913_ss = jule::Str::alloc((_1111_s.len() * _1123_n));;
	for (; (_1123_n > 0LL); (_1123_n)--) {
		{
			_1913_ss+=_1111_s;
		}
	_iter_next_1b16269b5:;
	}
	_iter_end_1b16269b5:;;
	return _1913_ss;
}



inline jule::Bool _1e3510a48_hasPrefix(jule::Str& _2615_s, jule::Str& _2624_sub, jule::I64 _2638_start) {
	if (((_2624_sub.len() == 0LL) || ((_2615_s.len() - _2638_start) < _2624_sub.len()))) {
		return false;
	};
	jule::I64 _3113_i = 0LL;;
	for (; (_3113_i < _2624_sub.len()); std::tie(_3113_i,_2638_start) = std::make_tuple(static_cast<jule::I64>((_3113_i + 1LL)),static_cast<jule::I64>((_2638_start + 1LL)))) {
		{
			if ((_2615_s[_2638_start] != _2624_sub[_3113_i])) {
				return false;
			};
		}
	_iter_next_1b1629a84:;
	}
	_iter_end_1b1629a84:;;
	return true;
}



inline jule::Bool _1e350be95_HasPrefix(jule::Str _4114_s, jule::Str _4122_sub) {
	return _1e3510a48_hasPrefix(_4114_s,_4122_sub,0LL);
}



inline jule::Bool _1e35133ec_hasSuffix(jule::Str& _4515_s, jule::Str& _4524_sub, jule::I64 _4538_start) {
	if (((_4524_sub.len() == 0LL) || ((_4515_s.len() - _4538_start) < _4524_sub.len()))) {
		return false;
	};
	_4538_start=static_cast<jule::I64>((_4515_s.len() - _4538_start));
	jule::I64 _5113_i = 0LL;;
	for (; (_5113_i < _4524_sub.len()); (_5113_i)++) {
		{
			if ((_4515_s[((_4538_start - _5113_i) - 1LL)] != _4524_sub[((_4524_sub.len() - _5113_i) - 1LL)])) {
				return false;
			};
		}
	_iter_next_1b162ba97:;
	}
	_iter_end_1b162ba97:;;
	return true;
}



inline jule::Bool _1e42deeca_HasSuffix(jule::Str _6114_s, jule::Str _6122_sub) {
	return _1e35133ec_hasSuffix(_6114_s,_6122_sub,0LL);
}



inline jule::I64 _1e42e8379_FindAt(jule::Str _6911_s, jule::Str _6919_sub, jule::I64 _6933_i) {
	if ((((_6933_i < 0LL) || (_6911_s.len() < _6919_sub.len())) || (_6919_sub.len() == 0LL))) {
		return -1LL;
	};
	for (; (_6933_i < _6911_s.len()); (_6933_i)++) {
		{
			if (_1e3510a48_hasPrefix(_6911_s,_6919_sub,_6933_i)) {
				return _6933_i;
			};
		}
	_iter_next_1b163054b:;
	}
	_iter_end_1b163054b:;;
	return -1LL;
}



inline jule::I64 _1e43147d5_FindLastAt(jule::Str _9215_s, jule::Str _9223_sub, jule::I64 _9233_i) {
	jule::I64 _9313_j = ((_9233_i - _9223_sub.len()) + 1LL);;
	if (((((_9223_sub.len() == 0LL) || (_9233_i < 0LL)) || (_9233_i >= _9215_s.len())) || (_9313_j < 0LL))) {
		return -1LL;
	};
	_julec_label_loop:;
	for (; (_9313_j >= 0LL); (_9313_j)--) {
		{
			jule::I64 _9917_k = _9313_j;;
			jule::I64 _10017_z = 0LL;;
			for (; (_10017_z < _9223_sub.len()); std::tie(_9917_k,_10017_z) = std::make_tuple(static_cast<jule::I64>((_9917_k + 1LL)),static_cast<jule::I64>((_10017_z + 1LL)))) {
				{
					if ((_9215_s[_9917_k] != _9223_sub[_10017_z])) {
						goto _iter_next_1b1632c02;
					};
				}
			_iter_next_1b1634bd2:;
			}
			_iter_end_1b1634bd2:;;
			return _9313_j;
		}
	_iter_next_1b1632c02:;
	}
	_iter_end_1b1632c02:;;
	return -1LL;
}



inline jule::I64 _1e42de958_FindLast(jule::Str _11413_s, jule::Str _11421_sub) {
	return static_cast<jule::I64>(_1e43147d5_FindLastAt(_11413_s,_11421_sub,static_cast<jule::I64>((_11413_s.len() - 1LL))));
}



inline jule::I64 _1e438cac2_findRune(jule::Slice<jule::U8>& _17014_s, jule::I32 _17025_r) {
	jule::I64 _17113_i = 0LL;;
	while ((_17113_i < _17014_s.len())) {
		{
			jule::I32 _17314_br;;
			jule::I64 _17318_n;;
			std::tie(_17314_br,_17318_n) = _1e33ba0ea_DecodeRune(_17014_s.slice(_17113_i));
			if ((_17025_r == _17314_br)) {
				return _17113_i;
			};
			_17113_i+=_17318_n;
		}
	_iter_next_1b163c69b:;
	}
	_iter_end_1b163c69b:;;
	return -1LL;
}



inline jule::I64 _1e438d067_FindLastByte(jule::Str _19717_s, jule::U8 _19725_b) {
	jule::I64 _19813_i = (_19717_s.len() - 1LL);;
	for (; (_19813_i >= 0LL); (_19813_i)--) {
		{
			if ((_19717_s[_19813_i] == _19725_b)) {
				return _19813_i;
			};
		}
	_iter_next_1b1640704:;
	}
	_iter_end_1b1640704:;;
	return -1LL;
}



inline jule::I64 _1e438d540_FindAny(jule::Str _23812_s, jule::Str _23820_runes) {
	jule::Slice<jule::U8> _2399_sb = _1e3503035_Stobs(_23812_s);;
	jule::Slice<jule::U8> _24013_rb = _1e3503035_Stobs(_23820_runes);;
	jule::I64 _24113_i = 0LL;;
	while ((_24113_i < _2399_sb.len())) {
		{
			jule::I32 _24314_r;;
			jule::I64 _24317_n;;
			std::tie(_24314_r,_24317_n) = _1e33ba0ea_DecodeRune(_2399_sb.slice(_24113_i));
			if ((_1e438cac2_findRune(_24013_rb,_24314_r) != -1LL)) {
				return _24113_i;
			};
			_24113_i+=_24317_n;
		}
	_iter_next_1b1645110:;
	}
	_iter_end_1b1645110:;;
	return -1LL;
}



inline jule::Slice<jule::Str> _1e438d7a4_Split(jule::Str _27210_s, jule::Str _27218_sub, jule::I64 _27232_n) {
	jule::I64 _27313_cap = _27232_n;;
	if ((_27232_n < 0LL)) {
		_27313_cap=16LL;
	};
	jule::Slice<jule::Str> _27713_parts = jule::Slice<jule::Str>::alloc(0LL,_27313_cap);;
	if ((_27232_n == 0LL)) {
		return _27713_parts;
	};
	if ((_27232_n < 0LL)) {
		_27232_n=static_cast<jule::I64>(_27210_s.len());
	};
	jule::I64 _28413_i = 0LL;;
	for (; (_27232_n > 0LL); (_27232_n)--) {
		{
			jule::I64 _28613_j = _1e42e8379_FindAt(_27210_s,_27218_sub,_28413_i);;
			if ((_28613_j == -1LL)) {
				goto _iter_end_1b164bcd7;
			};
			_27713_parts = jule::alloc_for_append(_27713_parts,1);_27713_parts.__push(_27210_s.slice(_28413_i,_28613_j));;
			_28413_i=static_cast<jule::I64>((_28613_j + _27218_sub.len()));
		}
	_iter_next_1b164bcd7:;
	}
	_iter_end_1b164bcd7:;;
	if (((_27232_n > 0LL) && (_28413_i < _27210_s.len()))) {
		_27713_parts = jule::alloc_for_append(_27713_parts,1);_27713_parts.__push(_27210_s.slice(_28413_i));;
	};
	return _27713_parts;
}



inline jule::Bool _1e438d8d6_Contains(jule::Str _30013_s, jule::Str _30021_sub) {
	return (_1e42e8379_FindAt(_30013_s,_30021_sub,0LL) != -1LL);
}



inline jule::Bool _1e438dc7c_ContainsAny(jule::Str _31616_s, jule::Str _31624_runes) {
	return (_1e438d540_FindAny(_31616_s,_31624_runes) != -1LL);
}



inline jule::I64 _1e438ddae_Count(jule::Str _32210_s, jule::Str _32218_sub) {
	if ((_32218_sub.len() == 0LL)) {
		return 0LL;
	};
	jule::I64 _32613_n = 0LL;;
	jule::I64 _32713_i = 0LL;;
	for (;;) {
		{
			jule::I64 _32913_j = _1e42e8379_FindAt(_32210_s,_32218_sub,_32713_i);;
			if ((_32913_j == -1LL)) {
				goto _iter_end_1b1657562;
			};
			(_32613_n)++;
			_32713_i=static_cast<jule::I64>((_32913_j + _32218_sub.len()));
		}
	_iter_next_1b1657562:;
	}
	_iter_end_1b1657562:;;
	return _32613_n;
}



inline jule::Str _1e438dee1_Replace(jule::Str _34212_s, jule::Str _34220_sub, jule::Str _34230_new, jule::I64 _34244_n) {
	if (((_34244_n == 0LL) || (_34220_sub == _34230_new))) {
		return _34212_s;
	};
	jule::I64 _3479_m = _1e438ddae_Count(_34212_s,_34220_sub);;
	if ((_3479_m == 0LL)) {
		return _34212_s;
	};
	if (((_34244_n < 0LL) || (_3479_m < _34244_n))) {
		_34244_n=_3479_m;
	};
	jule::Str _35513_ss = jule::Str::alloc((_34212_s.len() + (_34244_n * (_34230_new.len() - _34220_sub.len()))));;
	jule::I64 _35613_i = 0LL;;
	for (; (_34244_n > 0LL); (_34244_n)--) {
		{
			jule::I64 _35813_j = _1e42e8379_FindAt(_34212_s,_34220_sub,_35613_i);;
			if ((_35813_j == -1LL)) {
				goto _iter_end_1b165b566;
			};
			_35513_ss+=_34212_s.slice(_35613_i,_35813_j);
			_35513_ss+=_34230_new;
			_35613_i=static_cast<jule::I64>((_35813_j + _34220_sub.len()));
		}
	_iter_next_1b165b566:;
	}
	_iter_end_1b165b566:;;
	_35513_ss+=_34212_s.slice(_35613_i);
	return _35513_ss;
}



inline void _1e438cd36_trimLeft(jule::Slice<jule::U8>& _39818_s, jule::Slice<jule::U8>& _39830_cutset) {
	jule::I64 _39913_i = 0LL;;
	while ((_39913_i < _39818_s.len())) {
		{
			jule::I32 _40114_r;;
			jule::I64 _40117_n;;
			std::tie(_40114_r,_40117_n) = _1e33ba0ea_DecodeRune(_39818_s.slice(_39913_i));
			if ((_1e438cac2_findRune(_39830_cutset,_40114_r) == -1LL)) {
				_39818_s=_39818_s.slice(_39913_i);
				return;;
			};
			_39913_i+=_40117_n;
		}
	_iter_next_1b1661428:;
	}
	_iter_end_1b1661428:;;
	_39818_s=nullptr;
}



inline jule::Str _1e438e93c_TrimLeft(jule::Str _41313_s, jule::Str _41321_cutset) {
	jule::Slice<jule::U8> _41413_bytes = _1e3503035_Stobs(_41313_s);;
	jule::Slice<jule::U8> _4159_bcutset = _1e3503035_Stobs(_41321_cutset);;
	_1e438cd36_trimLeft(_41413_bytes,_4159_bcutset);
	return static_cast<jule::Str>(_41413_bytes);
}



inline void _1e438ea6e_trimRight(jule::Slice<jule::U8>& _42019_s, jule::Slice<jule::U8>& _42031_cutset) {
	jule::I64 _42113_i = _42019_s.len();;
	while ((_42113_i > 0LL)) {
		{
			jule::I32 _42314_r;;
			jule::I64 _42317_n;;
			std::tie(_42314_r,_42317_n) = _1e33ba6b1_DecodeLastRune(_42019_s.slice(0LL,_42113_i));
			if ((_1e438cac2_findRune(_42031_cutset,_42314_r) == -1LL)) {
				_42019_s=_42019_s.slice(0LL,_42113_i);
				return;;
			};
			_42113_i-=_42317_n;
		}
	_iter_next_1b166487c:;
	}
	_iter_end_1b166487c:;;
	_42019_s=nullptr;
}



inline jule::Str _1e438ecd3_Trim(jule::Str _4449_s, jule::Str _44417_cutset) {
	jule::Slice<jule::U8> _44513_bytes = _1e3503035_Stobs(_4449_s);;
	jule::Slice<jule::U8> _4469_bcutset = _1e3503035_Stobs(_44417_cutset);;
	_1e438cd36_trimLeft(_44513_bytes,_4469_bcutset);
	_1e438ea6e_trimRight(_44513_bytes,_4469_bcutset);
	return static_cast<jule::Str>(_44513_bytes);
}



inline jule::Bool _1e3442ace_IsPathSep(jule::U8 _4814_c) {
	return ((_4814_c == 92LLU) || (_4814_c == '/'));
}



inline jule::Bool _1e3442c11_isSlash(jule::U8 _5212_c) {
	return ((_5212_c == '\\') || (_5212_c == '/'));
}



inline jule::U8 _1e3442dcb_toUpper(jule::U8 _5412_c) {
	if ((('a' <= _5412_c) && (_5412_c <= 'z'))) {
		return static_cast<jule::U8>((_5412_c - ('a' - 'A')));
	};
	return _5412_c;
}



inline jule::I64 _1e3443492_volumeNameLen(jule::Str _8218_path) {
	if ((_8218_path.len() < 2LL)) {
		return 0LL;
	};
	jule::U8 _879_c = _8218_path[0LL];;
	if (((_8218_path[1LL] == ':') && ((('a' <= _879_c) && (_879_c <= 'z')) || (('A' <= _879_c) && (_879_c <= 'Z'))))) {
		return 2LL;
	};
	if (((!(_1e3442c11_isSlash(_8218_path[0LL]))) || (!(_1e3442c11_isSlash(_8218_path[1LL]))))) {
		return 0LL;
	};
	jule::Str _9510_p1;;
	jule::Str _9518_rest;;
	std::tie(_9510_p1,_9518_rest,std::ignore) = _1e3443739_cutPath(_8218_path.slice(2LL));
	jule::Str _9613_p2 = jule::Str();;
	jule::Bool _9713_ok = false;;
	std::tie(_9613_p2,_9518_rest,_9713_ok) = _1e3443739_cutPath(_9518_rest);
	if ((!(_9713_ok))) {
		return static_cast<jule::I64>(_8218_path.len());
	};
	if (((_9510_p1 != jule::Str(".", 1)) && (_9510_p1 != jule::Str("?", 1)))) {
		return static_cast<jule::I64>(((_8218_path.len() - _9518_rest.len()) - 1LL));
	};
	if (((((_9613_p2.len() == 3LL) && (_1e3442dcb_toUpper(_9613_p2[0LL]) == 'U')) && (_1e3442dcb_toUpper(_9613_p2[1LL]) == 'N')) && (_1e3442dcb_toUpper(_9613_p2[2LL]) == 'C'))) {
		std::tie(std::ignore,_9518_rest,std::ignore) = _1e3443739_cutPath(_9518_rest);
		std::tie(std::ignore,_9518_rest,_9713_ok) = _1e3443739_cutPath(_9518_rest);
		if ((!(_9713_ok))) {
			return static_cast<jule::I64>(_8218_path.len());
		};
	};
	return static_cast<jule::I64>(((_8218_path.len() - _9518_rest.len()) - 1LL));
}



inline std::tuple<jule::Str,jule::Str,jule::Bool> _1e3443739_cutPath(jule::Str _11912_path) {
	jule::Str _11925_before = jule::Str();
	jule::Str _11938_after = jule::Str();
	jule::Bool _11950_found = jule::Bool();
	{
		auto &expr = _11912_path;
		auto it = expr.begin();
		_iter_begin_1b1682092:;
		if (it != expr.end()) {
			jule::I64 _1209_i = it - expr.begin();
			{
				if (_1e3442c11_isSlash(_11912_path[_1209_i])) {
					_11925_before = _11912_path.slice(0LL,_1209_i);
					_11938_after = _11912_path.slice((_1209_i + 1LL));
					_11950_found = true;
					return std::make_tuple(_11925_before,_11938_after,_11950_found);
				};
			}
			_iter_next_1b1682092:;
			++it;
			_1209_i++;
			goto _iter_begin_1b1682092;
		}
		_iter_end_1b1682092:;
	};
	_11925_before = _11912_path;
	_11938_after = jule::Str();
	_11950_found = false;
	return std::make_tuple(_11925_before,_11938_after,_11950_found);
}



inline std::tuple<jule::Str,jule::Bool> _1e34439d1_fullPath(jule::Str _12813_name) {
	jule::Str _12826_path = jule::Str();
	jule::Bool _12837_ok = jule::Bool();
	jule::Slice<jule::U16> _1299_utf16Name = _1e26ad6db_Utf16FromStr(_12813_name);;
	jule::U16* _1309_p = (&(_1299_utf16Name[0LL]));;
	jule::U32 _13113_n = 100LLU;;
	for (;;) {
		{
			jule::Slice<jule::U16> _13317_buff = jule::Slice<jule::U16>::alloc(static_cast<jule::I64>(_13113_n));;
			_13113_n=static_cast<jule::U32>(_1e32d81c2_GetFullPathName(_1309_p,static_cast<jule::U32>(static_cast<jule::U32>(_13317_buff.len())),(&(_13317_buff[0LL])),nullptr));
			if ((_13113_n == 0LLU)) {
				_12826_path = jule::Str();
				_12837_ok = false;
				return std::make_tuple(_12826_path,_12837_ok);
			};
			if ((_13113_n <= static_cast<jule::U32>(_13317_buff.len()))) {
				_12826_path = _1e26ae324_Utf16ToStr(_13317_buff.slice(0LL,static_cast<jule::I64>(_13113_n)));
				_12837_ok = true;
				return std::make_tuple(_12826_path,_12837_ok);
			};
		}
	_iter_next_1b1683e73:;
	}
	_iter_end_1b1683e73:;;
	_12826_path = jule::Str();
	_12837_ok = false;
	return std::make_tuple(_12826_path,_12837_ok);
}



inline std::tuple<jule::Str,jule::Bool> _1e3443d55_abs(jule::Str _14512_path) {
	jule::Bool _14530_ok = jule::Bool();
	if (_14512_path.empty()) {
		_14512_path=jule::Str(".", 1);
	};
	std::tie(_14512_path,_14530_ok) = _1e34439d1_fullPath(_14512_path);
	if ((!(_14530_ok))) {
		_14530_ok = false;
		return std::make_tuple(jule::Str(),_14530_ok);
	};
	_14530_ok = true;
	return std::make_tuple(_1e34c0d49_Clean(_14512_path),_14530_ok);
}



inline jule::Str _1e34440ec_join(jule::Slice<jule::Str> _15913_elem) {
	jule::Str _16013_s = jule::Str();;
	jule::U8 _16113_lastChar = 0LLU;;
	{
		auto &expr = _15913_elem;
		auto it = expr.begin();
		_iter_begin_1b16896e8:;
		if (it != expr.end()) {
			jule::Str _16217_e = *it;
			{
				{
					
					if ((_16013_s.len() == 0LL)) {
						_case_begin_1b168b189:;
					}
					else if (_1e3442c11_isSlash(_16113_lastChar)) {
						_case_begin_1b168b332:;
						{
							while (((_16217_e.len() > 0LL) && _1e3442c11_isSlash(_16217_e[0LL]))) {
								{
									(_16217_e).mut_slice(1LL);;
								}
							_iter_next_1b168ba08:;
							}
							_iter_end_1b168ba08:;;
						}
					}
					else if ((_16113_lastChar == ':')) {
						_case_begin_1b168b398:;
					}
					else {
						_case_begin_1b168acd2:;
						{
							_16013_s+=jule::Str("\\", 1);
							_16113_lastChar='\\';
						}
					}
					_match_end_1b168ac05:;
				};
				if ((_16217_e.len() > 0LL)) {
					_16013_s+=_16217_e;
					_16113_lastChar=_16217_e[(_16217_e.len() - 1LL)];
				};
			}
			_iter_next_1b16896e8:;
			++it;
			goto _iter_begin_1b16896e8;
		}
		_iter_end_1b16896e8:;
	};
	if ((_16013_s.len() == 0LL)) {
		return jule::Str();
	};
	return _1e34c0d49_Clean(_16013_s);
}



inline jule::Str _1e34c0d49_Clean(jule::Str _10814_path) {
	jule::Str _1099_originalPath = _10814_path;;
	jule::I64 _1109_volLen = _1e3443492_volumeNameLen(_10814_path);;
	(_10814_path).mut_slice(_1109_volLen);;
	if (_10814_path.empty()) {
		if ((((_1109_volLen > 1LL) && _1e3442ace_IsPathSep(_1099_originalPath[0LL])) && _1e3442ace_IsPathSep(_1099_originalPath[1LL]))) {
			return _1e34c82b3_FromSlash(_1099_originalPath);
		};
		return (_1099_originalPath + jule::Str(".", 1));
	};
	jule::Bool _1199_rooted = _1e3442ace_IsPathSep(_10814_path[0LL]);;
	jule::I64 _1269_n = _10814_path.len();;
	_1e34a1e29_lazyBuff _12713_out = _1e34a1e29_lazyBuff{._field_path=_10814_path, ._field_volAndPath=_1099_originalPath, ._field_volLen=_1109_volLen};;
	jule::I64 _13214_r = 0LL;;
	jule::I64 _13221_dotdot = 0LL;;
	std::tie(_13214_r,_13221_dotdot) = std::make_tuple(0LL,0LL);
	if (_1199_rooted) {
		_1e34a8518_append(&_12713_out, 92LLU);
		std::tie(_13214_r,_13221_dotdot) = std::make_tuple(1LL,1LL);
	};
	while ((_13214_r < _1269_n)) {
		{
			{
				
				if (_1e3442ace_IsPathSep(_10814_path[_13214_r])) {
					_case_begin_1b169555b:;
					{
						(_13214_r)++;
					}
				}
				else if (((_10814_path[_13214_r] == '.') && (((_13214_r + 1LL) == _1269_n) || _1e3442ace_IsPathSep(_10814_path[(_13214_r + 1LL)])))) {
					_case_begin_1b1698251:;
					{
						(_13214_r)++;
					}
				}
				else if ((((_10814_path[_13214_r] == '.') && (_10814_path[(_13214_r + 1LL)] == '.')) && (((_13214_r + 2LL) == _1269_n) || _1e3442ace_IsPathSep(_10814_path[(_13214_r + 2LL)])))) {
					_case_begin_1b16982b7:;
					{
						_13214_r+=2LL;
						{
							
							if ((_12713_out._field_w > _13221_dotdot)) {
								_case_begin_1b169b210:;
								{
									(_12713_out._field_w)--;
									while (((_12713_out._field_w > _13221_dotdot) && (!(_1e3442ace_IsPathSep(static_cast<jule::U8>(_1e34a7d0e_index(&_12713_out, _12713_out._field_w))))))) {
										{
											(_12713_out._field_w)--;
										}
									_iter_next_1b169b50c:;
									}
									_iter_end_1b169b50c:;;
								}
							}
							else if ((!(_1199_rooted))) {
								_case_begin_1b169b276:;
								{
									if ((_12713_out._field_w > 0LL)) {
										_1e34a8518_append(&_12713_out, 92LLU);
									};
									_1e34a8518_append(&_12713_out, '.');
									_1e34a8518_append(&_12713_out, '.');
									_13221_dotdot=_12713_out._field_w;
								}
							}
							_match_end_1b169ad47:;
						};
					}
				}
				else {
					_case_begin_1b16938cd:;
					{
						if (((_1199_rooted && (_12713_out._field_w != 1LL)) || ((!(_1199_rooted)) && (_12713_out._field_w != 0LL)))) {
							_1e34a8518_append(&_12713_out, 92LLU);
						};
						if ((((true && (_12713_out._field_w == 0LL)) && (_12713_out._field_volLen == 0LL)) && (_13214_r != 0LL))) {
							jule::I64 _17525_i = _13214_r;;
							for (; ((_17525_i < _1269_n) && (!(_1e3442ace_IsPathSep(_10814_path[_17525_i])))); (_17525_i)++) {
								{
									if ((_10814_path[_17525_i] == ':')) {
										_1e34a8518_append(&_12713_out, '.');
										_1e34a8518_append(&_12713_out, 92LLU);
										goto _iter_end_1b1695605;
									};
								}
							_iter_next_1b1695605:;
							}
							_iter_end_1b1695605:;;
						};
						for (; ((_13214_r < _1269_n) && (!(_1e3442ace_IsPathSep(_10814_path[_13214_r])))); (_13214_r)++) {
							{
								_1e34a8518_append(&_12713_out, _10814_path[_13214_r]);
							}
						_iter_next_1b169501c:;
						}
						_iter_end_1b169501c:;;
					}
				}
				_match_end_1b1693801:;
			};
		}
	_iter_next_1b1692e60:;
	}
	_iter_end_1b1692e60:;;
	if ((_12713_out._field_w == 0LL)) {
		_1e34a8518_append(&_12713_out, '.');
	};
	return _1e34c82b3_FromSlash(_1e34ab0ba_string(&_12713_out));
}



inline jule::Str _1e34c82b3_FromSlash(jule::Str _21114_path) {
	if ((92LL == '/')) {
		return _21114_path;
	};
	return _1e438dee1_Replace(_21114_path,jule::Str("/", 1),static_cast<jule::Str>(92LL),-1LL);
}



inline jule::Str _1e34d0919_Join(jule::Slice<jule::Str> _2259_elem) {
	return _1e34440ec_join(_2259_elem);
}



inline jule::Str _1e34d2432_Ext(jule::Str _2308_path) {
	jule::I64 _23113_i = (_2308_path.len() - 1LL);;
	for (; ((_23113_i >= 0LL) && (!(_1e3442ace_IsPathSep(_2308_path[_23113_i])))); (_23113_i)--) {
		{
			if ((_2308_path[_23113_i] == '.')) {
				return _2308_path.slice(_23113_i);
			};
		}
	_iter_next_1b16a118d:;
	}
	_iter_end_1b16a118d:;;
	return jule::Str();
}



inline std::tuple<jule::Str,jule::Bool> _1e34aee26_Abs(jule::Str _2458_path) {
	jule::Str _24610_abs_path;;
	jule::Bool _24620_ok;;
	std::tie(_24610_abs_path,_24620_ok) = _1e3443d55_abs(_2458_path);
	return std::make_tuple(_24610_abs_path,_24620_ok);
}



inline jule::Str _1e34b4887_Base(jule::Str _25413_path) {
	if (_25413_path.empty()) {
		return jule::Str(".", 1);
	};
	while (((_25413_path.len() > 0LL) && _1e3442ace_IsPathSep(_25413_path[(_25413_path.len() - 1LL)]))) {
		{
			(_25413_path).mut_slice(0LL,(_25413_path.len() - 1LL));;
		}
	_iter_next_1b16a2ea3:;
	}
	_iter_end_1b16a2ea3:;;
	(_25413_path).mut_slice(_1e34e1d7b_VolumeName(_25413_path).len());;
	jule::I64 _26513_i = (_25413_path.len() - 1LL);;
	while (((_26513_i >= 0LL) && (!(_1e3442ace_IsPathSep(_25413_path[_26513_i]))))) {
		{
			(_26513_i)--;
		}
	_iter_next_1b16a4e3e:;
	}
	_iter_end_1b16a4e3e:;;
	if ((_26513_i >= 0LL)) {
		(_25413_path).mut_slice((_26513_i + 1LL));;
	};
	if (_25413_path.empty()) {
		return static_cast<jule::Str>(92LL);
	};
	return _25413_path;
}



inline jule::Str _1e34b81c6_Dir(jule::Str _2858_path) {
	jule::Str _2869_vol = _1e34e1d7b_VolumeName(_2858_path);;
	jule::I64 _28713_i = (_2858_path.len() - 1LL);;
	while (((_28713_i >= _2869_vol.len()) && (!(_1e3442ace_IsPathSep(_2858_path[_28713_i]))))) {
		{
			(_28713_i)--;
		}
	_iter_next_1b16a73b4:;
	}
	_iter_end_1b16a73b4:;;
	jule::Str _2919_dir = _1e34c0d49_Clean(_2858_path.slice(_2869_vol.len(),(_28713_i + 1LL)));;
	if (((_2919_dir == jule::Str(".", 1)) && (_2869_vol.len() > 2LL))) {
		return _2869_vol;
	};
	return (_2869_vol + _2919_dir);
}



inline jule::Str _1e34e1d7b_VolumeName(jule::Str _30315_path) {
	return _1e34c82b3_FromSlash(_30315_path.slice(0LL,_1e3443492_volumeNameLen(_30315_path)));
}



inline jule::I64 _1e2600c7c_getLastFsError(void) {
	jule::I64 _729_err = _1e25496cb_GetLastErrno();;
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1b16bb593:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1b16baa7b:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_1b16baeee:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_1b16bb065:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1b16bb0cb:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1b16bb142:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 132LL) {
			_case_begin_1b16bb7a2:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1b16bb818:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1b16bb87e:;
			{
				return static_cast<jule::I64>(8LL);
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1b16bb8e5:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1b16bb95b:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1b16bb9c2:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1b16bba38:;
			{
				return static_cast<jule::I64>(12LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1b16bbab0:;
			{
				return static_cast<jule::I64>(13LL);
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1b16bbb37:;
			{
				return static_cast<jule::I64>(14LL);
			}
		}
		else if (_match_expr == 124LL) {
			_case_begin_1b16bbbae:;
			{
				return static_cast<jule::I64>(15LL);
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1b16bbc36:;
			{
				return static_cast<jule::I64>(16LL);
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1b16bbcad:;
			{
				return static_cast<jule::I64>(17LL);
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1b16bbd35:;
			{
				return static_cast<jule::I64>(18LL);
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1b16bbdac:;
			{
				return static_cast<jule::I64>(19LL);
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_1b16bbe34:;
			{
				return static_cast<jule::I64>(20LL);
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1b16bbeab:;
			{
				return static_cast<jule::I64>(21LL);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1b16bc033:;
			{
				return static_cast<jule::I64>(22LL);
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1b16bc0aa:;
			{
				return static_cast<jule::I64>(23LL);
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1b16bc132:;
			{
				return static_cast<jule::I64>(24LL);
			}
		}
		else if (_match_expr == 119LL) {
			_case_begin_1b16bc1a9:;
			{
				return static_cast<jule::I64>(25LL);
			}
		}
		else if (_match_expr == 104LL) {
			_case_begin_1b16bc231:;
			{
				return static_cast<jule::I64>(26LL);
			}
		}
		else if (_match_expr == 41LL) {
			_case_begin_1b16bc2a8:;
			{
				return static_cast<jule::I64>(27LL);
			}
		}
		else {
			_case_begin_1b16bad67:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		_match_end_1b16bad12:;
	};
}



inline jule::Bool _1e338cd48_isConsoleHandle(jule::Uintptr _11520_handle) {
	return (((_11520_handle == _1e26ae764_STDIN) || (_11520_handle == _1e26b32a1_STDOUT)) || (_11520_handle == _1e26acbc4_STDERR));
}



inline jule::I64 _1e443200c_getLastProcessError(void) {
	jule::I64 _429_err = _1e25496cb_GetLastErrno();;
	{
		auto &_match_expr{ _429_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1b16eb32b:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_1b16eb79e:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_1b16eb815:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1b16eb87b:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1b16eb8e2:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1b16ebb34:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1b16ebb9a:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_1b16ebc11:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1b16ebc77:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 121LL) {
			_case_begin_1b16ebcdd:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1b16ebd54:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else {
			_case_begin_1b16eb617:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		_match_end_1b16eb5b2:;
	};
}



inline jule::Slice<wchar_t*> _1e4441abb_ustrSliceToWcstrSlice(jule::Slice<jule::Slice<jule::U16>> _1726_us) {
	jule::Slice<wchar_t*> _1813_wcs = jule::Slice<wchar_t*>::alloc(0LL,(_1726_us.len() + 1LL));;
	{
		auto &expr = _1726_us;
		auto it = expr.begin();
		_iter_begin_1b17048d9:;
		if (it != expr.end()) {
			jule::I64 _199_i = it - expr.begin();
			{
				_1813_wcs = jule::alloc_for_append(_1813_wcs,1);_1813_wcs.__push(((wchar_t*)((&(_1726_us[_199_i][0LL])))));;
			}
			_iter_next_1b17048d9:;
			++it;
			_199_i++;
			goto _iter_begin_1b17048d9;
		}
		_iter_end_1b17048d9:;
	};
	_1813_wcs = jule::alloc_for_append(_1813_wcs,1);_1813_wcs.__push(nullptr);;
	return _1813_wcs;
}



inline jule::Slice<jule::Slice<jule::U16>> _1e4441d63_strSliceToUstrSlice(jule::Slice<jule::Str> _2624_s) {
	jule::Slice<jule::Slice<jule::U16>> _2713_us = jule::Slice<jule::Slice<jule::U16>>::alloc(0LL,_2624_s.len());;
	{
		auto &expr = _2624_s;
		auto it = expr.begin();
		_iter_begin_1b17066aa:;
		if (it != expr.end()) {
			jule::Str &_2812_p = *it;
			{
				_2713_us = jule::alloc_for_append(_2713_us,1);_2713_us.__push(_1e26ad6db_Utf16FromStr(_2812_p));;
			}
			_iter_next_1b17066aa:;
			++it;
			goto _iter_begin_1b17066aa;
		}
		_iter_end_1b17066aa:;
	};
	return _2713_us;
}



inline jule::I64 _1e4442171_execvp(jule::Str _3411_file, jule::Slice<jule::Str> _3422_argv) {
	jule::Slice<jule::U16> _359_utf16File = _1e26ad6db_Utf16FromStr(_3411_file);;
	jule::Slice<jule::Slice<jule::U16>> _369_ucargv = _1e4441d63_strSliceToUstrSlice(_3422_argv);;
	jule::Slice<wchar_t*> _379_cargv = _1e4441abb_ustrSliceToWcstrSlice(_369_ucargv);;
	return static_cast<jule::I64>(_wspawnvp(P_NOWAIT,((wchar_t*)((&(_359_utf16File[0LL])))),(&(_379_cargv[0LL]))));
}



inline jule::I64 _1e444255b_execve(jule::Str _4111_file, jule::Slice<jule::Str> _4122_argv, jule::Slice<jule::Str> _4135_env) {
	jule::Slice<jule::Slice<jule::U16>> _429_ucargv = _1e4441d63_strSliceToUstrSlice(_4122_argv);;
	jule::Slice<wchar_t*> _439_cargv = _1e4441abb_ustrSliceToWcstrSlice(_429_ucargv);;
	jule::Slice<jule::Slice<jule::U16>> _449_ucenv = _1e4441d63_strSliceToUstrSlice(_4135_env);;
	jule::Slice<wchar_t*> _459_cenv = _1e4441abb_ustrSliceToWcstrSlice(_449_ucenv);;
	jule::Slice<jule::U16> _469_utf16File = _1e26ad6db_Utf16FromStr(_4111_file);;
	return static_cast<jule::I64>(_wspawnvpe(P_NOWAIT,((wchar_t*)((&(_469_utf16File[0LL])))),(&(_439_cargv[0LL])),(&(_459_cenv[0LL]))));
}



inline void _1e4443282_Exit(jule::I64 _129_code) {
	_1e32dc5a0_Exit(_129_code);
}



inline jule::Str _1e4443480_Executable(void) {
	return jule::executable();
}



inline jule::Bool _1e43d6eb2_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));
}



inline jule::Bool _1e43d70e4_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto &expr = _1e24c00e1_CppHeaderExts;
		auto it = expr.begin();
		_iter_begin_1b173bd3e:;
		if (it != expr.end()) {
			jule::Str &_3212_valid_ext = *it;
			{
				if ((_3121_ext == _3212_valid_ext)) {
					return true;
				};
			}
			_iter_next_1b173bd3e:;
			++it;
			goto _iter_begin_1b173bd3e;
		}
		_iter_end_1b173bd3e:;
	};
	return false;
}



inline jule::Bool _1e43d7347_IsValidCppExt(jule::Str _4218_ext) {
	if ((_4218_ext == jule::Str(".c", 2))) {
		return true;
	};
	{
		auto &expr = _1e43d5895_CppExts;
		auto it = expr.begin();
		_iter_begin_1b173dd30:;
		if (it != expr.end()) {
			jule::Str &_4612_e = *it;
			{
				if ((_4218_ext == _4612_e)) {
					return true;
				};
			}
			_iter_next_1b173dd30:;
			++it;
			goto _iter_begin_1b173dd30;
		}
		_iter_end_1b173dd30:;
	};
	{
		auto &expr = _1e43d6dc4_ObjectiveCppExts;
		auto it = expr.begin();
		_iter_begin_1b173ea78:;
		if (it != expr.end()) {
			jule::Str &_5112_e = *it;
			{
				if ((_4218_ext == _5112_e)) {
					return true;
				};
			}
			_iter_next_1b173ea78:;
			++it;
			goto _iter_begin_1b173ea78;
		}
		_iter_end_1b173ea78:;
	};
	return false;
}



inline jule::Str _1e43e3e58_Logf(jule::Str _2949_fmt, jule::Slice<jule::Any> _29422_args) {
	return _1e43e4871_applyFmt(_2949_fmt,jule::Any(_29422_args));
}



inline jule::Str _1e43e4244_argToStr(jule::Any _29813_arg) {
	{
		auto &_match_expr{ _29813_arg };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1b1740c55:;
			{
				return _29813_arg.operator jule::Str();
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_1b1740cbb:;
			{
				return static_cast<jule::Str>(_29813_arg.operator jule::U8());
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_1b1740d32:;
			{
				return static_cast<jule::Str>(_29813_arg.operator jule::I32());
			}
		}
		else {
			_case_begin_1b173edec:;
			{
				return jule::Str("<fmt?>", 6);
			}
		}
		_match_end_1b1740848:;
	};
}



inline jule::I64 _1e43e44db_findNextFmt(jule::Str _31116_fmt) {
	{
		auto &expr = _31116_fmt;
		auto it = expr.begin();
		_iter_begin_1b1742086:;
		if (it != expr.end()) {
			jule::I64 _3129_i = it - expr.begin();
			jule::U8 &_31212_b = *it;
			{
				if ((_31212_b == '@')) {
					return _3129_i;
				};
			}
			_iter_next_1b1742086:;
			++it;
			_3129_i++;
			goto _iter_begin_1b1742086;
		}
		_iter_end_1b1742086:;
	};
	return -1LL;
}



inline jule::Str _1e43e4871_applyFmt(jule::Str _32017_fmt, jule::Slice<jule::Any> _32027_args) {
	jule::Str _32113_s = jule::Str();;
	{
		auto &expr = _32027_args;
		auto it = expr.begin();
		_iter_begin_1b17438b2:;
		if (it != expr.end()) {
			jule::Any &_32212_arg = *it;
			{
				jule::I64 _32313_i = _1e43e44db_findNextFmt(_32017_fmt);;
				if ((_32313_i == -1LL)) {
					goto _iter_end_1b17438b2;
				};
				_32113_s+=_32017_fmt.slice(0LL,_32313_i);
				_32113_s+=_1e43e4244_argToStr(jule::Any(_32212_arg));
				(_32017_fmt).mut_slice((_32313_i + 1LL));;
			}
			_iter_next_1b17438b2:;
			++it;
			goto _iter_begin_1b17438b2;
		}
		_iter_end_1b17438b2:;
	};
	_32113_s+=_32017_fmt;
	return _32113_s;
}



inline jule::Bool _1e43e593d_IsTopDirective(jule::Str _2819_directive) {
	return ((_2819_directive == jule::Str("pass", 4)) || (_2819_directive == jule::Str("build", 5)));
}



inline jule::Bool _1e43e6d6d_IsWindows(jule::Str _3714_os) {
	return (_3714_os == jule::Str("windows", 7));
}



inline jule::Bool _1e43e7126_IsDarwin(jule::Str _4013_os) {
	return (_4013_os == jule::Str("darwin", 6));
}



inline jule::Bool _1e43e73bd_IsLinux(jule::Str _4312_os) {
	return (_4312_os == jule::Str("linux", 5));
}



inline jule::Bool _1e43e76dc_IsI386(jule::Str _4611_arch) {
	return (_4611_arch == jule::Str("i386", 4));
}



inline jule::Bool _1e43e7984_IsAmd64(jule::Str _4912_arch) {
	return (_4912_arch == jule::Str("amd64", 5));
}



inline jule::Bool _1e43e7c2b_IsArm64(jule::Str _5212_arch) {
	return (_5212_arch == jule::Str("arm64", 5));
}



inline jule::Bool _1e43e7ec3_IsUnix(jule::Str _5511_os) {
	return (_1e43e7126_IsDarwin(_5511_os) || _1e43e73bd_IsLinux(_5511_os));
}



inline jule::Bool _1e43e8347_Is32Bit(jule::Str _5812_arch) {
	return _1e43e76dc_IsI386(_5812_arch);
}



inline jule::Bool _1e43e85de_Is64Bit(jule::Str _6112_arch) {
	return (_1e43e7984_IsAmd64(_6112_arch) || _1e43e7c2b_IsArm64(_6112_arch));
}



inline void _1e440570b_init(void) {
	jule::Str _2513_path = _1e4443480_Executable();;
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_1e44172ab_PathWd=({
			auto except = _1e346981a_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_1e44163a9_PathExec=_1e34b81c6_Dir(_2513_path);
		_1e441574e_PathStdlib=_1e34d0919_Join(jule::Slice<jule::Str>::make({_1e44163a9_PathExec,jule::Str("..", 2),jule::Str("std", 3)}));
		_1e4430add_PathApi=_1e34d0919_Join(jule::Slice<jule::Str>::make({_1e44163a9_PathExec,jule::Str("..", 2),jule::Str("api", 3),jule::Str("jule.hpp", 8)}));
	};
}



inline jule::Bool _1e4713eae_IsUnaryOp(jule::Str _31014_kind) {
	{
		auto &expr = _1e46697d8_UnaryOps;
		auto it = expr.begin();
		_iter_begin_1b178c400:;
		if (it != expr.end()) {
			jule::Str &_31112_op = *it;
			{
				if ((_31014_kind == _31112_op)) {
					return true;
				};
			}
			_iter_next_1b178c400:;
			++it;
			goto _iter_begin_1b178c400;
		}
		_iter_end_1b178c400:;
	};
	return false;
}



inline jule::Bool _1e471429a_IsBinOp(jule::Str _32012_kind) {
	{
		auto &expr = _1e4669b29_BinOps;
		auto it = expr.begin();
		_iter_begin_1b178cd07:;
		if (it != expr.end()) {
			jule::Str &_32112_op = *it;
			{
				if ((_32012_kind == _32112_op)) {
					return true;
				};
			}
			_iter_next_1b178cd07:;
			++it;
			goto _iter_begin_1b178cd07;
		}
		_iter_end_1b178cd07:;
	};
	return false;
}



inline jule::Bool _1e4714861_IsStr(jule::Str _34010_k) {
	return ((!(_34010_k.empty())) && ((_34010_k[0LL] == '\"') || _1e4714b08_IsRawStr(_34010_k)));
}



inline jule::Bool _1e4714b08_IsRawStr(jule::Str _34313_k) {
	return ((!(_34313_k.empty())) && (_34313_k[0LL] == '`'));
}



inline jule::Bool _1e4714da0_IsRune(jule::Str _34711_k) {
	return ((!(_34711_k.empty())) && (_34711_k[0LL] == '\''));
}



inline jule::Bool _1e47154bb_IsBool(jule::Str _35311_k) {
	return ((_35311_k == jule::Str("true", 4)) || (_35311_k == jule::Str("false", 5)));
}



inline jule::Bool _1e4715763_IsFloat(jule::Str _35612_k) {
	if (_1e350be95_HasPrefix(_35612_k,jule::Str("0x", 2))) {
		return _1e438dc7c_ContainsAny(_35612_k,jule::Str(".pP", 3));
	};
	return _1e438dc7c_ContainsAny(_35612_k,jule::Str(".eE", 3));
}



inline jule::Bool _1e4715a0a_IsNum(jule::Str _36410_k) {
	if (_36410_k.empty()) {
		return false;
	};
	jule::U8 _3699_b = _36410_k[0LL];;
	return ((_3699_b == '.') || (('0' <= _3699_b) && (_3699_b <= '9')));
}



inline jule::Bool _1e4716049_IsIgnoreIdent(jule::Str _37918_ident) {
	return (_37918_ident == jule::Str("_", 1));
}



inline jule::Bool _1e47162e1_IsAnonIdent(jule::Str _38216_ident) {
	return (_38216_ident == jule::Str("<anonymous>", 11));
}



inline jule::Bool _1e4716830_IsSpace(jule::I32 _39512_r) {
	{
		auto &expr = _1e4669574_Spaces;
		auto it = expr.begin();
		_iter_begin_1b1796bce:;
		if (it != expr.end()) {
			jule::I32 &_39612_cr = *it;
			{
				if ((_39512_r == _39612_cr)) {
					return true;
				};
			}
			_iter_next_1b1796bce:;
			++it;
			goto _iter_begin_1b1796bce;
		}
		_iter_end_1b1796bce:;
	};
	return false;
}



inline jule::Bool _1e4716c81_IsLetter(jule::I32 _40513_r) {
	return _1e4319246_IsLetter(_40513_r);
}



inline jule::Bool _1e47172c0_IsDecimal(jule::U8 _42514_b) {
	return (('0' <= _42514_b) && (_42514_b <= '9'));
}



inline jule::Bool _1e4717567_IsBinary(jule::U8 _42813_b) {
	return ((_42813_b == '0') || (_42813_b == '1'));
}



inline jule::Bool _1e471780e_IsOctal(jule::U8 _43112_b) {
	return (('0' <= _43112_b) && (_43112_b <= '7'));
}



inline jule::Bool _1e4717aa6_IsHex(jule::U8 _43410_b) {
	{
		
		if ((('0' <= _43410_b) && (_43410_b <= '9'))) {
			_case_begin_1b179ba3b:;
			{
				return true;
			}
		}
		else if ((('a' <= _43410_b) && (_43410_b <= 'f'))) {
			_case_begin_1b179b321:;
			{
				return true;
			}
		}
		else if ((('A' <= _43410_b) && (_43410_b <= 'F'))) {
			_case_begin_1b179b387:;
			{
				return true;
			}
		}
		else {
			_case_begin_1b179b2aa:;
			{
				return false;
			}
		}
		_match_end_1b179b200:;
	};
}



inline jule::Bool _1e4717d4d_IsAssign(jule::U64 _44913_id) {
	return (((((((_44913_id == static_cast<jule::U64>(2LLU)) || (_44913_id == static_cast<jule::U64>(30LLU))) || (_44913_id == static_cast<jule::U64>(33LLU))) || (_44913_id == static_cast<jule::U64>(20LLU))) || (_44913_id == static_cast<jule::U64>(27LLU))) || (_44913_id == static_cast<jule::U64>(3LLU))) || (_44913_id == static_cast<jule::U64>(7LLU)));
}



inline jule::Bool _1e47180e5_IsPostfixOp(jule::Str _46016_kind) {
	{
		auto &expr = _1e470cd76_PostfixOps;
		auto it = expr.begin();
		_iter_begin_1b179d488:;
		if (it != expr.end()) {
			jule::Str &_46112_op = *it;
			{
				if ((_46016_kind == _46112_op)) {
					return true;
				};
			}
			_iter_next_1b179d488:;
			++it;
			goto _iter_begin_1b179d488;
		}
		_iter_end_1b179d488:;
	};
	return false;
}



inline jule::Bool _1e471838c_IsAssignOp(jule::Str _47015_kind) {
	if (_1e47180e5_IsPostfixOp(_47015_kind)) {
		return true;
	};
	{
		auto &expr = _1e470d1b7_AssignOps;
		auto it = expr.begin();
		_iter_begin_1b17a0e91:;
		if (it != expr.end()) {
			jule::Str &_47412_op = *it;
			{
				if ((_47015_kind == _47412_op)) {
					return true;
				};
			}
			_iter_next_1b17a0e91:;
			++it;
			goto _iter_begin_1b17a0e91;
		}
		_iter_end_1b17a0e91:;
	};
	return false;
}



inline jule::Ptr<_1e4718b40_File> _1e471a16e_NewFileSet(jule::Str _6315_path) {
	return jule::new_ptr<_1e4718b40_File>(_1e4718b40_File{._field_Path=_6315_path, });
}



inline _1e43e3a18_Log _1e471b99a_makeErr(jule::I64 _11012_row, jule::I64 _11022_col, jule::Ptr<_1e4718b40_File>& _11033_f, jule::Str _11043_fmt, jule::Slice<jule::Any> _11056_args) {
	return _1e43e3a18_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_11012_row, ._field_Column=_11022_col, ._field_Path=_11033_f.get()._field_Path, ._field_Text=_1e43e3e58_Logf(_11043_fmt,jule::Any(_11056_args)), };
}



inline jule::Bool _1e471bd30_bytesHasPrefix(jule::Slice<jule::U8>& _12020_bytes, jule::Str _12035_prefix) {
	if ((_12020_bytes.len() < _12035_prefix.len())) {
		return false;
	};
	{
		auto &expr = _12035_prefix;
		auto it = expr.begin();
		_iter_begin_1b17b1237:;
		if (it != expr.end()) {
			jule::I64 _1249_i = it - expr.begin();
			{
				if ((_12020_bytes[_1249_i] != _12035_prefix[_1249_i])) {
					return false;
				};
			}
			_iter_next_1b17b1237:;
			++it;
			_1249_i++;
			goto _iter_begin_1b17b1237;
		}
		_iter_end_1b17b1237:;
	};
	return true;
}



inline jule::Str _1e471c171_floatFmtE(jule::Slice<jule::U8>& _13215_txt, jule::I64 _13232_i) {
	jule::Str _13242_lit = jule::Str();
	(_13232_i)++;
	if ((_13232_i >= _13215_txt.len())) {
		return _13242_lit;
	};
	jule::U8 _13813_b = _13215_txt[_13232_i];;
	if ((_13813_b == '_')) {
		return _13242_lit;
	};
	if (((_13813_b == '+') || (_13813_b == '-'))) {
		(_13232_i)++;
		if ((_13232_i >= _13215_txt.len())) {
			return _13242_lit;
		};
		if ((_13215_txt[_13232_i] == '_')) {
			return _13242_lit;
		};
	};
	jule::I64 _1529_first = _13232_i;;
	for (; (_13232_i < _13215_txt.len()); (_13232_i)++) {
		{
			_13813_b=_13215_txt[_13232_i];
			if (((_13813_b != '_') && (!(_1e47172c0_IsDecimal(_13813_b))))) {
				goto _iter_end_1b17b4b75;
			};
		}
	_iter_next_1b17b4b75:;
	}
	_iter_end_1b17b4b75:;;
	if ((_13232_i == _1529_first)) {
		_13242_lit = jule::Str();
		return _13242_lit;
	};
	_13242_lit = static_cast<jule::Str>(_13215_txt.slice(0LL,_13232_i));
	return _13242_lit;
}



inline jule::Str _1e471c506_floatFmtP(jule::Slice<jule::U8>& _16615_txt, jule::I64 _16628_i) {
	return _1e471c171_floatFmtE(_16615_txt,_16628_i);
}



inline jule::Str _1e471c847_floatFmtDotnp(jule::Slice<jule::U8>& _17019_txt, jule::I64 _17036_i) {
	if ((_17019_txt[_17036_i] != '.')) {
		return jule::Str();
	};
	(_17036_i)++;
	_julec_label_loop:;
	for (; (_17036_i < _17019_txt.len()); (_17036_i)++) {
		{
			jule::U8 _17813_b = _17019_txt[_17036_i];;
			{
				
				if ((_17813_b == '_') || _1e47172c0_IsDecimal(_17813_b)) {
					_case_begin_1b17b7e42:;
					{
						goto _iter_next_1b17b665a;
					}
				}
				else if (_1e471e0eb_isFloatFmtP(_17813_b,_17036_i)) {
					_case_begin_1b17b7ea8:;
					{
						return _1e471c506_floatFmtP(_17019_txt,_17036_i);
					}
				}
				else {
					_case_begin_1b17b7dcb:;
					{
						goto _iter_end_1b17b665a;
					}
				}
				_match_end_1b17b7d65:;
			};
		}
	_iter_next_1b17b665a:;
	}
	_iter_end_1b17b665a:;;
	return jule::Str();
}



inline jule::Str _1e471cb88_floatFmtDotfp(jule::Slice<jule::U8>& _19119_txt, jule::I64 _19136_i) {
	_19136_i+=2LL;
	return _1e471c171_floatFmtE(_19119_txt,_19136_i);
}



inline jule::Str _1e471cec9_floatFmtDotp(jule::Slice<jule::U8>& _19618_txt, jule::I64 _19635_i) {
	(_19635_i)++;
	return _1e471c171_floatFmtE(_19618_txt,_19635_i);
}



inline jule::Str _1e471d42a_floatNum(jule::Slice<jule::U8>& _20114_txt, jule::I64 _20131_i) {
	jule::Str _20141_lit = jule::Str();
	(_20131_i)++;
	if ((_20131_i >= _20114_txt.len())) {
		_20141_lit = static_cast<jule::Str>(_20114_txt);
		return _20141_lit;
	};
	if ((_20114_txt[_20131_i] == '_')) {
		(_20131_i)--;
		_20141_lit = static_cast<jule::Str>(_20114_txt.slice(0LL,_20131_i));
		return _20141_lit;
	};
	for (; (_20131_i < _20114_txt.len()); (_20131_i)++) {
		{
			jule::U8 _21113_b = _20114_txt[_20131_i];;
			if (((_20131_i > 1LL) && ((_21113_b == 'e') || (_21113_b == 'E')))) {
				_20141_lit = _1e471c171_floatFmtE(_20114_txt,_20131_i);
				return _20141_lit;
			};
			if (((_21113_b != '_') && (!(_1e47172c0_IsDecimal(_21113_b))))) {
				goto _iter_end_1b17ba75d;
			};
		}
	_iter_next_1b17ba75d:;
	}
	_iter_end_1b17ba75d:;;
	if ((_20131_i == 1LL)) {
		return _20141_lit;
	};
	_20141_lit = static_cast<jule::Str>(_20114_txt.slice(0LL,_20131_i));
	return _20141_lit;
}



inline jule::Str _1e471d6c2_commonNum(jule::Slice<jule::U8>& _22615_txt) {
	jule::Str _22630_lit = jule::Str();
	jule::I64 _22713_i = 0LL;;
	_julec_label_loop:;
	for (; (_22713_i < _22615_txt.len()); (_22713_i)++) {
		{
			jule::U8 _23013_b = _22615_txt[_22713_i];;
			{
				
				if ((_23013_b == '.')) {
					_case_begin_1b17bee9e:;
					{
						_22630_lit = _1e471d42a_floatNum(_22615_txt,_22713_i);
						return _22630_lit;
					}
				}
				else if ((_23013_b == '_')) {
					_case_begin_1b17c0026:;
					{
						goto _iter_next_1b17be234;
					}
				}
				else if (_1e471dcaa_isFloatFmtE(_23013_b,_22713_i)) {
					_case_begin_1b17c009d:;
					{
						_22630_lit = _1e471c171_floatFmtE(_22615_txt,_22713_i);
						return _22630_lit;
					}
				}
				else if ((!(_1e47172c0_IsDecimal(_23013_b)))) {
					_case_begin_1b17c0125:;
					{
						goto _iter_end_1b17be234;
					}
				}
				_match_end_1b17bedc2:;
			};
		}
	_iter_next_1b17be234:;
	}
	_iter_end_1b17be234:;;
	if ((_22713_i == 0LL)) {
		return _22630_lit;
	};
	_22630_lit = static_cast<jule::Str>(_22615_txt.slice(0LL,_22713_i));
	return _22630_lit;
}



inline jule::Str _1e471d969_binaryNum(jule::Slice<jule::U8>& _24915_txt) {
	jule::Str _24930_lit = jule::Str();
	if ((!(_1e471bd30_bytesHasPrefix(_24915_txt,jule::Str("0b", 2))))) {
		_24930_lit = jule::Str();
		return _24930_lit;
	};
	if ((_24915_txt.len() < 2LL)) {
		return _24930_lit;
	};
	;
	jule::I64 _25813_i = 2LL;;
	for (; (_25813_i < _24915_txt.len()); (_25813_i)++) {
		{
			if (((_24915_txt[_25813_i] != '_') && (!(_1e4717567_IsBinary(_24915_txt[_25813_i]))))) {
				goto _iter_end_1b17c3711;
			};
		}
	_iter_next_1b17c3711:;
	}
	_iter_end_1b17c3711:;;
	if ((_25813_i == 2LL)) {
		return _24930_lit;
	};
	_24930_lit = static_cast<jule::Str>(_24915_txt.slice(0LL,_25813_i));
	return _24930_lit;
}



inline jule::Bool _1e471dcaa_isFloatFmtE(jule::U8 _27116_b, jule::I64 _27125_i) {
	return ((_27125_i > 0LL) && ((_27116_b == 'e') || (_27116_b == 'E')));
}



inline jule::Bool _1e471e0eb_isFloatFmtP(jule::U8 _27516_b, jule::I64 _27525_i) {
	return ((_27525_i > 0LL) && ((_27516_b == 'p') || (_27516_b == 'P')));
}



inline jule::Bool _1e471e43c_isFloatFmtDotnp(jule::Slice<jule::U8>& _27921_txt, jule::I64 _27938_i) {
	if ((_27921_txt[_27938_i] != '.')) {
		return false;
	};
	(_27938_i)++;
	_julec_label_loop:;
	for (; (_27938_i < _27921_txt.len()); (_27938_i)++) {
		{
			jule::U8 _28613_b = _27921_txt[_27938_i];;
			{
				
				if ((_28613_b == '_') || _1e47172c0_IsDecimal(_28613_b)) {
					_case_begin_1b17c810b:;
					{
						goto _iter_next_1b17c612b;
					}
				}
				else if (_1e471e0eb_isFloatFmtP(_28613_b,_27938_i)) {
					_case_begin_1b17c8172:;
					{
						return true;
					}
				}
				else {
					_case_begin_1b17c8095:;
					{
						goto _iter_end_1b17c612b;
					}
				}
				_match_end_1b17c802e:;
			};
		}
	_iter_next_1b17c612b:;
	}
	_iter_end_1b17c612b:;;
	return false;
}



inline jule::Bool _1e471e77d_isFloatFmtDotp(jule::Slice<jule::U8>& _30020_txt, jule::I64 _30033_i) {
	{
		
		if ((_30020_txt.len() < 3LL)) {
			_case_begin_1b17c9e10:;
			{
				goto _case_begin_1b17c96c3;
			}
		}
		else if ((_30020_txt[_30033_i] != '.')) {
			_case_begin_1b17c96c3:;
			{
				goto _case_begin_1b17c9739;
			}
		}
		else if (((_30020_txt[(_30033_i + 1LL)] != 'p') && (_30020_txt[(_30033_i + 1LL)] != 'P'))) {
			_case_begin_1b17c9739:;
			{
				return false;
			}
		}
		else {
			_case_begin_1b17c965c:;
			{
				return true;
			}
		}
		_match_end_1b17c9580:;
	};
}



inline jule::Bool _1e471eabe_isFloatFmtDotfp(jule::Slice<jule::U8>& _31321_txt, jule::I64 _31334_i) {
	{
		
		if ((_31321_txt.len() < 4LL)) {
			_case_begin_1b17cc220:;
			{
				goto _case_begin_1b17cba5a;
			}
		}
		else if ((_31321_txt[_31334_i] != '.')) {
			_case_begin_1b17cba5a:;
			{
				goto _case_begin_1b17cbac1;
			}
		}
		else if (((_31321_txt[(_31334_i + 1LL)] != 'f') && (_31321_txt[(_31334_i + 1LL)] != 'F'))) {
			_case_begin_1b17cbac1:;
			{
				goto _case_begin_1b17cbb37;
			}
		}
		else if (((_31321_txt[(_31334_i + 2LL)] != 'p') && (_31321_txt[(_31334_i + 1LL)] != 'P'))) {
			_case_begin_1b17cbb37:;
			{
				return false;
			}
		}
		else {
			_case_begin_1b17cb51b:;
			{
				return true;
			}
		}
		_match_end_1b17cb43e:;
	};
}



inline jule::Str _1e4720020_octalNum(jule::Slice<jule::U8>& _32814_txt) {
	jule::Str _32829_lit = jule::Str();
	if ((_32814_txt[0LL] != '0')) {
		_32829_lit = jule::Str();
		return _32829_lit;
	};
	if ((_32814_txt.len() < 2LL)) {
		return _32829_lit;
	};
	jule::I64 _33613_octalStart = 1LL;;
	jule::Bool _33813_o = false;;
	if ((_32814_txt[1LL] == 'o')) {
		if ((_32814_txt.len() < 3LL)) {
			return _32829_lit;
		};
		(_33613_octalStart)++;
		_33813_o=true;
	};
	jule::I64 _34713_i = _33613_octalStart;;
	for (; (_34713_i < _32814_txt.len()); (_34713_i)++) {
		{
			jule::U8 _34913_b = _32814_txt[_34713_i];;
			if ((_34913_b == '.')) {
				if (_33813_o) {
					_32829_lit = jule::Str();
					return _32829_lit;
				};
				_32829_lit = _1e471d42a_floatNum(_32814_txt,_34713_i);
				return _32829_lit;
			};
			if (_1e471dcaa_isFloatFmtE(_34913_b,_34713_i)) {
				_32829_lit = _1e471c171_floatFmtE(_32814_txt,_34713_i);
				return _32829_lit;
			};
			if (((_34913_b != '_') && (!(_1e471780e_IsOctal(_34913_b))))) {
				goto _iter_end_1b17d2049;
			};
		}
	_iter_next_1b17d2049:;
	}
	_iter_end_1b17d2049:;;
	if ((_34713_i == _33613_octalStart)) {
		return _32829_lit;
	};
	_32829_lit = static_cast<jule::Str>(_32814_txt.slice(0LL,_34713_i));
	return _32829_lit;
}



inline jule::Str _1e4725135_hexNum(jule::Slice<jule::U8>& _37012_txt) {
	jule::Str _37027_lit = jule::Str();
	if ((_37012_txt.len() < 3LL)) {
		return _37027_lit;
	};
	if (((_37012_txt[0LL] != '0') || ((_37012_txt[1LL] != 'x') && (_37012_txt[1LL] != 'X')))) {
		return _37027_lit;
	};
	;
	jule::I64 _37913_i = 2LL;;
	_julec_label_loop:;
	for (; (_37913_i < _37012_txt.len()); (_37913_i)++) {
		{
			jule::U8 _38213_b = _37012_txt[_37913_i];;
			{
				
				if (_1e471e77d_isFloatFmtDotp(_37012_txt,_37913_i)) {
					_case_begin_1b17d7b98:;
					{
						_37027_lit = _1e471cec9_floatFmtDotp(_37012_txt,_37913_i);
						return _37027_lit;
					}
				}
				else if (_1e471eabe_isFloatFmtDotfp(_37012_txt,_37913_i)) {
					_case_begin_1b17d7c20:;
					{
						_37027_lit = _1e471cb88_floatFmtDotfp(_37012_txt,_37913_i);
						return _37027_lit;
					}
				}
				else if (_1e471e0eb_isFloatFmtP(_38213_b,_37913_i)) {
					_case_begin_1b17d7c97:;
					{
						_37027_lit = _1e471c506_floatFmtP(_37012_txt,_37913_i);
						return _37027_lit;
					}
				}
				else if (_1e471e43c_isFloatFmtDotnp(_37012_txt,_37913_i)) {
					_case_begin_1b17d7d1e:;
					{
						_37027_lit = _1e471c847_floatFmtDotnp(_37012_txt,_37913_i);
						return _37027_lit;
					}
				}
				else if (((_38213_b != '_') && (!(_1e4717aa6_IsHex(_38213_b))))) {
					_case_begin_1b17d7d96:;
					{
						goto _iter_end_1b17d6da6;
					}
				}
				_match_end_1b17d7aaa:;
			};
		}
	_iter_next_1b17d6da6:;
	}
	_iter_end_1b17d6da6:;;
	if ((_37913_i == 2LL)) {
		return _37027_lit;
	};
	_37027_lit = static_cast<jule::Str>(_37012_txt.slice(0LL,_37913_i));
	return _37027_lit;
}



inline jule::Str _1e4725465_hexEscape(jule::Slice<jule::U8>& _40315_txt, jule::I64 _40328_n) {
	jule::Str _40338_seq = jule::Str();
	if ((_40315_txt.len() < _40328_n)) {
		return _40338_seq;
	};
	;
	jule::I64 _40913_i = 2LL;;
	for (; (_40913_i < _40328_n); (_40913_i)++) {
		{
			if ((!(_1e4717aa6_IsHex(_40315_txt[_40913_i])))) {
				return _40338_seq;
			};
		}
	_iter_next_1b17da9ae:;
	}
	_iter_end_1b17da9ae:;;
	_40338_seq=static_cast<jule::Str>(_40315_txt.slice(0LL,_40328_n));
	return _40338_seq;
}



inline jule::Str _1e472570c_bigUnicodePointEscape(jule::Slice<jule::U8>& _42127_txt) {
	return _1e4725465_hexEscape(_42127_txt,10LL);
}



inline jule::Str _1e47259c6_littleUnicodePointEscape(jule::Slice<jule::U8>& _42630_txt) {
	return _1e4725465_hexEscape(_42630_txt,6LL);
}



inline jule::Str _1e4725b80_hexByteEscape(jule::Slice<jule::U8>& _43119_txt) {
	return _1e4725465_hexEscape(_43119_txt,4LL);
}



inline jule::Str _1e4725e16_byteEscape(jule::Slice<jule::U8>& _43616_txt) {
	jule::Str _43631_seq = jule::Str();
	if ((_43616_txt.len() < 4LL)) {
		return _43631_seq;
	};
	if ((((!(_1e471780e_IsOctal(_43616_txt[1LL]))) || (!(_1e471780e_IsOctal(_43616_txt[2LL])))) || (!(_1e471780e_IsOctal(_43616_txt[3LL]))))) {
		return _43631_seq;
	};
	_43631_seq = static_cast<jule::Str>(_43616_txt.slice(0LL,4LL));
	return _43631_seq;
}



inline jule::Slice<_1e43e3a18_Log> _1e472a910_Lex(jule::Ptr<_1e4718b40_File> _82512_f, jule::I64 _82522_mode) {
	if ((_82512_f == nullptr)) {
		return nullptr;
	};
	_1e47265ed_lex _83013_lex = _1e47265ed_lex{._field_mode=_82522_mode, ._field_file=_82512_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_1e472918e_newLine(&_83013_lex);
	_1e472718c_lex(&_83013_lex);
	if ((_83013_lex._field_errors.len() > 0LL)) {
		return _83013_lex._field_errors;
	};
	_82512_f.get()._field_Tokens=_83013_lex._field_tokens;
	return nullptr;
}



inline void _1e5e14c52_lshiftUnsig(_1e5da6ba0_Const& _58721_c, _1e5da6ba0_Const& _58732_x) {
	jule::U64 _5889_l = _1e5e0dca1_AsU64(&_58721_c);;
	jule::U64 _5899_r = _1e5e0dca1_AsU64(&_58732_x);;
	_1e5e0e510_SetU64(&_58721_c, static_cast<jule::U64>((_5889_l << _5899_r)));
}



inline void _1e5e1504e_rshiftUnsig(_1e5da6ba0_Const& _59321_c, _1e5da6ba0_Const& _59332_x) {
	jule::U64 _5949_l = _1e5e0dca1_AsU64(&_59321_c);;
	jule::U64 _5959_r = _1e5e0dca1_AsU64(&_59332_x);;
	_1e5e0e510_SetU64(&_59321_c, static_cast<jule::U64>((_5949_l >> _5959_r)));
}



inline jule::I64 _1e69b1e6e_LeadingZeros64(jule::U64 _6119_x) {
	return static_cast<jule::I64>((64LL - _1e69b9680_Len64(_6119_x)));
}



inline jule::I64 _1e69b2ec5_TrailingZeros(jule::U64 _8318_x) {
	;
	return static_cast<jule::I64>(_1e69b3b63_TrailingZeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8318_x))));
}



inline jule::I64 _1e69b38bb_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1e69b2623__DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]));
}



inline jule::I64 _1e69b3b63_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1e69b2c72__DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]));
}



inline jule::I64 _1e69b93d8_Len32(jule::U32 _35214_x) {
	jule::I64 _35224_n = jule::I64();
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		_35224_n=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		_35224_n+=8LL;
	};
	_35224_n = static_cast<jule::I64>((_35224_n + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_35214_x)])));
	return _35224_n;
}



inline jule::I64 _1e69b9680_Len64(jule::U64 _36614_x) {
	jule::I64 _36624_n = jule::I64();
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		_36624_n=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		_36624_n+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		_36624_n+=8LL;
	};
	_36624_n = static_cast<jule::I64>((_36624_n + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_36614_x)])));
	return _36624_n;
}



inline std::tuple<jule::U64,jule::U64> _1e69ba340_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	jule::U64 _41540_sum = jule::U64();
	jule::U64 _41550_carryout = jule::U64();
	_41540_sum=static_cast<jule::U64>(((_41510_x + _41518_y) + _41526_carry));
	_41550_carryout=static_cast<jule::U64>((((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(_41540_sum)))) >> 63LLU));
	return std::make_tuple(_41540_sum,_41550_carryout);
}



inline std::tuple<jule::U64,jule::U64> _1e69bb9c3_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	jule::U64 _49928_hi = jule::U64();
	jule::U64 _49937_lo = jule::U64();
	;
	jule::U64 _5019_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5029_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5039_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5049_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5059_w0 = (_5019_x0 * _5039_y0);;
	jule::U64 _5069_t = ((_5029_x1 * _5039_y0) + (_5059_w0 >> 32LLU));;
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);;
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);;
	_50713_w1+=(_5019_x0 * _5049_y1);
	_49928_hi=static_cast<jule::U64>((((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LLU)));
	_49937_lo=static_cast<jule::U64>((_49910_x * _49918_y));
	return std::make_tuple(_49928_hi,_49937_lo);
}



inline jule::U32 _1e68dd1a8_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));
}



inline jule::F32 _1e68dd494_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));
}



inline jule::U64 _1e68dd73b_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));
}



inline jule::F64 _1e68dda5a_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));
}



inline std::tuple<jule::F64,jule::I64> _1e68e1167_Frexp(jule::F64 _4714_f) {
	jule::F64 _4724_frac = jule::F64();
	jule::I64 _4735_exp = jule::I64();
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1b19d0d5d:;
			{
				_4724_frac = _4714_f;
				_4735_exp = 0LL;
				return std::make_tuple(_4724_frac,_4735_exp);
			}
		}
		else if (_1e6956bd3_IsInf(_4714_f,0LL) || _1e694e8ce_IsNaN(_4714_f)) {
			_case_begin_1b19d0dd5:;
			{
				_4724_frac = _4714_f;
				_4735_exp = 0LL;
				return std::make_tuple(_4724_frac,_4735_exp);
			}
		}
		_match_end_1b19d0c70:;
	};
	std::tie(_4714_f,_4735_exp) = _1e69582de_normalize(_4714_f);
	jule::U64 _5613_x = _1e68dd73b_F64Bits(_4714_f);;
	_4735_exp+=((static_cast<jule::I64>(((_5613_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	_4724_frac=static_cast<jule::F64>(_1e68dda5a_F64FromBits(_5613_x));
	return std::make_tuple(_4724_frac,_4735_exp);
}



inline jule::F64 _1e694d999_NaN(void) {
	return static_cast<jule::F64>(_1e68dda5a_F64FromBits(9221120237041090561LLU));
}



inline jule::Bool _1e694e8ce_IsNaN(jule::F64 _5210_f) {
	return (_5210_f != _5210_f);
}



inline jule::F64 _1e6951370_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return static_cast<jule::F64>(_1e68dda5a_F64FromBits(9218868437227405312LLU));
	};
	return static_cast<jule::F64>(_1e68dda5a_F64FromBits(18442240474082181120LLU));
}



inline jule::Bool _1e6956bd3_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));
}



inline std::tuple<jule::F64,jule::I64> _1e69582de_normalize(jule::F64 _8214_x) {
	jule::F64 _8224_y = jule::F64();
	jule::I64 _8232_exp = jule::I64();
	;
	if ((_1e696ee2c_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		_8224_y = static_cast<jule::F64>((_8214_x * 4503599627370496LL));
		_8232_exp = -52LL;
		return std::make_tuple(_8224_y,_8232_exp);
	};
	_8224_y = _8214_x;
	_8232_exp = 0LL;
	return std::make_tuple(_8224_y,_8232_exp);
}



inline jule::F64 _1e69684a8_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1e694e8ce_IsNaN(_1118_x) || _1e6956bd3_IsInf(_1118_x,1LL)) {
			_case_begin_1b1a240b0:;
			{
				return _1118_x;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1b1a24137:;
			{
				return static_cast<jule::F64>(_1e694d999_NaN());
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1b1a241ae:;
			{
				return static_cast<jule::F64>(_1e6951370_Inf(-1LL));
			}
		}
		_match_end_1b1a23ee4:;
	};
	jule::F64 _13314_f1;;
	jule::I64 _13322_ki;;
	std::tie(_13314_f1,_13322_ki) = _1e68e1167_Frexp(_1118_x);
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	};
	jule::F64 _1389_f = (_13314_f1 - 1LL);;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);;
	jule::F64 _1429_s = jule::div(_1389_f,(2LL + _1389_f));;
	jule::F64 _1439_s2 = (_1429_s * _1429_s);;
	jule::F64 _1449_s4 = (_1439_s2 * _1439_s2);;
	jule::F64 _1459_t1 = (_1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586)))))));;
	jule::F64 _1469_t2 = (_1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373)))));;
	jule::F64 _1479_R = (_1459_t1 + _1469_t2);;
	jule::F64 _1489_hfsq = ((0.5 * _1389_f) * _1389_f);;
	return static_cast<jule::F64>(((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f)));
}



inline jule::F64 _1e696ee2c_Abs(jule::F64 _438_x) {
	return static_cast<jule::F64>(_1e68dda5a_F64FromBits(static_cast<jule::U64>((_1e68dd73b_F64Bits(_438_x) & 9223372036854775807LLU))));
}



inline std::tuple<jule::F64,jule::F64> _1e69c536c_Modf(jule::F64 _449_f) {
	jule::F64 _4419_integer = jule::F64();
	jule::F64 _4433_frac = jule::F64();
	;
	jule::F64 _469_absF = _1e696ee2c_Abs(_449_f);;
	jule::F64 _4713_i = 0LL;;
	if ((_469_absF > 4503599627370496LL)) {
		_4713_i=_449_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_absF + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while ((_4713_i > _469_absF)) {
			{
				(_4713_i)--;
			}
		_iter_next_1b1a962db:;
		}
		_iter_end_1b1a962db:;;
		if ((_449_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		};
	};
	_4419_integer = _4713_i;
	_4433_frac = static_cast<jule::F64>((_449_f - _4713_i));
	return std::make_tuple(_4419_integer,_4433_frac);
}



inline jule::F64 _1e69c5b31_Log2(jule::F64 _449_x) {
	jule::F64 _4510_frac;;
	jule::I64 _4516_exp;;
	std::tie(_4510_frac,_4516_exp) = _1e68e1167_Frexp(_449_x);
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));
	};
	return static_cast<jule::F64>(((_1e69684a8_Log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp)));
}



inline jule::Str _1e6434c00_FmtFloat(jule::F64 _7813_f, jule::U8 _7821_fmt, jule::I64 _7832_prec, jule::I64 _7843_bit_size) {
	return static_cast<jule::Str>(_1e64493a7_genericFtoa(jule::Slice<jule::U8>::alloc(0LL,_1e65cd8b0_max(static_cast<jule::I64>((_7832_prec + 4LL)),24LL)),_7813_f,_7821_fmt,_7832_prec,_7843_bit_size));
}



inline jule::Slice<jule::U8> _1e64493a7_genericFtoa(jule::Slice<jule::U8> _8220_dst, jule::F64 _8233_val, jule::U8 _8243_fmt, jule::I64 _8258_prec, jule::I64 _8269_bit_size) {
	jule::U64 _8313_bits = 0LLU;;
	jule::Ptr<_1e65c747a_floatInfo> _8413_flt = nullptr;;
	{
		auto &_match_expr{ _8269_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1b1ca980c:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_1e68dd1a8_F32Bits(static_cast<jule::F32>(static_cast<jule::F32>(_8233_val)))));
				_8413_flt=((jule::Ptr<_1e65c747a_floatInfo>)((&(_1e6424b79_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1b1ca99e9:;
			{
				_8313_bits=static_cast<jule::U64>(_1e68dd73b_F64Bits(_8233_val));
				_8413_flt=((jule::Ptr<_1e65c747a_floatInfo>)((&(_1e642a113_f64info))));
			}
		}
		else {
			_case_begin_1b1ca91d0:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_1b1ca7d8d:;
	};
	jule::Bool _969_neg = ((_8313_bits >> (_8413_flt.get()._field_expbits + _8413_flt.get()._field_mantbits)) != 0LLU);;
	jule::I64 _9713_exp = (static_cast<jule::I64>((_8313_bits >> _8413_flt.get()._field_mantbits)) & static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)));;
	jule::U64 _9813_mant = (_8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)))) {
			_case_begin_1b1cad190:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_1b1cb067b:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'n','a','n'}));
						}
					}
					else if (_969_neg) {
						_case_begin_1b1cb0813:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'-','i','n','f'}));
						}
					}
					else {
						_case_begin_1b1cae67a:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'+','i','n','f'}));
						}
					}
					_match_end_1b1cae59d:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1b1cadbda:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_1b1ca95dc:;
			{
				_9813_mant|=(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits);
			}
		}
		_match_end_1b1cad13a:;
	};
	_9713_exp+=_8413_flt.get()._field_bias;
	if ((_8243_fmt == 'b')) {
		return _1e64e1196_fmtB(_8220_dst,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	if (((_8243_fmt == 'x') || (_8243_fmt == 'X'))) {
		return _1e65a4c4e_fmtX(_8220_dst,_8258_prec,_8243_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	;
	_1e64ce0da_decimalSlice _13213_digs = _1e64ce0da_decimalSlice{};;
	jule::Bool _13313_ok = false;;
	jule::Bool _1359_shortest = (_8258_prec < 0LL);;
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL);
		_1e64900bd_ryuFtoaShortest(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),(*(_8413_flt)));
		_13313_ok=true;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1b1cb4839:;
				{
					_8258_prec=static_cast<jule::I64>(_1e65cd8b0_max(static_cast<jule::I64>((_13213_digs._field_nd - 1LL)),0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1b1cb48a0:;
				{
					_8258_prec=static_cast<jule::I64>(_1e65cd8b0_max(static_cast<jule::I64>((_13213_digs._field_nd - _13213_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1b1cb495a:;
				{
					_8258_prec=_13213_digs._field_nd;
				}
			}
			_match_end_1b1cb3b24:;
		};
	} else if ((_8243_fmt != 'f')) {
		jule::I64 _15217_digits = _8258_prec;;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1b1cb6eac:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1b1cb6819:;
				{
					if ((_8258_prec == 0LL)) {
						_8258_prec=1LL;
					};
					_15217_digits=_8258_prec;
				}
			}
			else {
				_case_begin_1b1cb69e5:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_1b1cb68a2:;
		};
		if (((_8269_bit_size == 32LL) && (_15217_digits <= 9LL))) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_1e686c0b0_ryuFtoaFixed32(_13213_digs,static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)),static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_1e68c3875_ryuFtoaFixed64(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		};
	};
	if ((!(_13313_ok))) {
		return _1e64a2036_bigFtoa(_8220_dst,_8258_prec,_8243_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	return _1e64cd78d_fmtDigits(_8220_dst,_1359_shortest,_969_neg,_13213_digs,_8258_prec,_8243_fmt);
}



inline jule::Slice<jule::U8> _1e64a2036_bigFtoa(jule::Slice<jule::U8> _18216_dst, jule::I64 _18233_prec, jule::U8 _18244_fmt, jule::Bool _18255_neg, jule::U64 _1835_mant, jule::I64 _18316_exp, _1e65c747a_floatInfo& _18327_flt) {
	_1e6a02740_decimal _18413_d = _1e6a02740_decimal{};;
	_1e6a0292c_assign(&_18413_d, _1835_mant);
	_1e6a02a5e_shift(&_18413_d, static_cast<jule::I64>((_18316_exp - static_cast<jule::I64>(_18327_flt._field_mantbits))));
	_1e64ce0da_decimalSlice _18713_digs = _1e64ce0da_decimalSlice{};;
	jule::Bool _1889_shortest = (_18233_prec < 0LL);;
	if (_1889_shortest) {
		_1e64d095a_roundShortest(_18413_d,_1835_mant,_18316_exp,_18327_flt);
		_18713_digs=_1e64ce0da_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1b1cbbc2b:;
				{
					_18233_prec=static_cast<jule::I64>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1b1cbe57a:;
				{
					_18233_prec=static_cast<jule::I64>(_1e65cd8b0_max(static_cast<jule::I64>((_18713_digs._field_nd - _18713_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1b1cbe5e1:;
				{
					_18233_prec=_18713_digs._field_nd;
				}
			}
			_match_end_1b1cbdbea:;
		};
	} else {
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1b1cbd612:;
				{
					_1e6a02e05_round(&_18413_d, static_cast<jule::I64>((_18233_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1b1cbd678:;
				{
					_1e6a02e05_round(&_18413_d, static_cast<jule::I64>((_18413_d._field_dp + _18233_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1b1cbd700:;
				{
					if ((_18233_prec == 0LL)) {
						_18233_prec=1LL;
					};
					_1e6a02e05_round(&_18413_d, _18233_prec);
				}
			}
			_match_end_1b1cbd557:;
		};
		_18713_digs=_1e64ce0da_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
	};
	return _1e64cd78d_fmtDigits(_18216_dst,_1889_shortest,_18255_neg,_18713_digs,_18233_prec,_18244_fmt);
}



inline jule::Slice<jule::U8> _1e64cd78d_fmtDigits(jule::Slice<jule::U8> _21918_dst, jule::Bool _21931_shortest, jule::Bool _21947_neg, _1e64ce0da_decimalSlice _2205_digs, jule::I64 _22029_prec, jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1b1cc4607:;
			{
				return _1e64dea57_fmtE(_21918_dst,_21947_neg,_2205_digs,_22029_prec,_22040_fmt);
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1b1cc466d:;
			{
				return _1e64e020b_fmtF(_21918_dst,_21947_neg,_2205_digs,_22029_prec);
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1b1cc46d4:;
			{
				jule::I64 _22817_eprec = _22029_prec;;
				if (((_22817_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp))) {
					_22817_eprec=_2205_digs._field_nd;
				};
				if (_21931_shortest) {
					_22817_eprec=6LL;
				};
				jule::I64 _23813_exp = (_2205_digs._field_dp - 1LL);;
				if (((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec))) {
					if ((_22029_prec > _2205_digs._field_nd)) {
						_22029_prec=_2205_digs._field_nd;
					};
					return _1e64dea57_fmtE(_21918_dst,_21947_neg,_2205_digs,static_cast<jule::I64>((_22029_prec - 1LL)),static_cast<jule::U8>(((_22040_fmt + 'e') - 'g')));
				};
				if ((_22029_prec > _2205_digs._field_dp)) {
					_22029_prec=_2205_digs._field_nd;
				};
				return _1e64e020b_fmtF(_21918_dst,_21947_neg,_2205_digs,static_cast<jule::I64>(_1e65cd8b0_max(static_cast<jule::I64>((_22029_prec - _2205_digs._field_dp)),0LL)));
			}
		}
		_match_end_1b1cc44b4:;
	};
	return jule::append(_21918_dst,jule::Slice<jule::U8>::make({'%',_22040_fmt}));
}



inline void _1e64d095a_roundShortest(_1e6a02740_decimal& _25723_d, jule::U64 _25735_mant, jule::I64 _25746_exp, _1e65c747a_floatInfo& _25757_flt) {
	if ((_25735_mant == 0LLU)) {
		_25723_d._field_nd=0LL;
		return;;
	};
	jule::I64 _2789_minexp = (_25757_flt._field_bias + 1LL);;
	if (((_25746_exp > _2789_minexp) && ((332LL * (_25723_d._field_dp - _25723_d._field_nd)) >= (100LL * (_25746_exp - static_cast<jule::I64>(_25757_flt._field_mantbits)))))) {
		return;;
	};
	_1e6a02740_decimal _28713_upper = _1e6a02740_decimal{};;
	_1e6a0292c_assign(&_28713_upper, static_cast<jule::U64>(((_25735_mant << 1LLU) + 1LLU)));
	_1e6a02a5e_shift(&_28713_upper, static_cast<jule::I64>(((_25746_exp - static_cast<jule::I64>(_25757_flt._field_mantbits)) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;;
	jule::I64 _29813_explo = 0LL;;
	if (((_25735_mant > (1LLU << _25757_flt._field_mantbits)) || (_25746_exp == _2789_minexp))) {
		_29713_mantlo=static_cast<jule::U64>((_25735_mant - 1LLU));
		_29813_explo=_25746_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>(((_25735_mant << 1LLU) - 1LLU));
		_29813_explo=static_cast<jule::I64>((_25746_exp - 1LL));
	};
	_1e6a02740_decimal _30613_lower = _1e6a02740_decimal{};;
	_1e6a0292c_assign(&_30613_lower, static_cast<jule::U64>(((_29713_mantlo << 1LLU) + 1LLU)));
	_1e6a02a5e_shift(&_30613_lower, static_cast<jule::I64>(((_29813_explo - static_cast<jule::I64>(_25757_flt._field_mantbits)) - 1LL)));
	jule::Bool _3139_inclusive = ((_25735_mant & 1LL) == 0LLU);;
	jule::U8 _32613_upperdelta = 0LLU;;
	jule::I64 _33013_ui = 0LL;;
	for (; ; (_33013_ui)++) {
		{
			jule::I64 _33513_mi = ((_33013_ui - _28713_upper._field_dp) + _25723_d._field_dp);;
			if ((_33513_mi >= _25723_d._field_nd)) {
				goto _iter_end_1b1cd26d1;
			};
			jule::I64 _33913_li = ((_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp);;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);;
			if (((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd))) {
				_34017_l=_30613_lower._field_d[_33913_li];
			};
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);;
			if ((_33513_mi >= 0LL)) {
				_34417_m=_25723_d._field_d[_33513_mi];
			};
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);;
			if ((_33013_ui < _28713_upper._field_nd)) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			};
			jule::Bool _35613_okdown = ((_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd)));;
			{
				
				if (((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u))) {
					_case_begin_1b1cd7a27:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if (((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u))) {
					_case_begin_1b1cd7a9e:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if (((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0')))) {
					_case_begin_1b1cd7b26:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_1b1cd795b:;
			};
			jule::Bool _37713_okup = ((_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd)));;
			{
				
				if ((_35613_okdown && _37713_okup)) {
					_case_begin_1b1cdacc2:;
					{
						_1e6a02e05_round(&_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_35613_okdown) {
					_case_begin_1b1cdad38:;
					{
						_1e6a02b91_roundDown(&_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_37713_okup) {
					_case_begin_1b1cdadb0:;
					{
						_1e6a02cc3_roundUp(&_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				_match_end_1b1cdac28:;
			};
		}
	_iter_next_1b1cd26d1:;
	}
	_iter_end_1b1cd26d1:;;
}



inline jule::Slice<jule::U8> _1e64dea57_fmtE(jule::Slice<jule::U8> _39613_dst, jule::Bool _39626_neg, _1e64ce0da_decimalSlice _39637_d, jule::I64 _39654_prec, jule::U8 _39665_fmt) {
	if (_39626_neg) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('-');;
	};
	jule::U8 _40313_ch = '0';;
	if ((_39637_d._field_nd != 0LL)) {
		_40313_ch=_39637_d._field_d[0LL];
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	if ((_39654_prec > 0LL)) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('.');;
		jule::I64 _41217_i = 1LL;;
		jule::I64 _41313_m = _1e65c84d1_min(_39637_d._field_nd,static_cast<jule::I64>((_39654_prec + 1LL)));;
		if ((_41217_i < _41313_m)) {
			_39613_dst=jule::append(_39613_dst,_39637_d._field_d.slice(_41217_i,_41313_m));
			_41217_i=_41313_m;
		};
		for (; (_41217_i <= _39654_prec); (_41217_i)++) {
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('0');;
			}
		_iter_next_1b1ce0bb7:;
		}
		_iter_end_1b1ce0bb7:;;
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_39665_fmt);;
	jule::I64 _42513_exp = (_39637_d._field_dp - 1LL);;
	if ((_39637_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	};
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I64>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_1b1ce378b:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push('0');_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(_42513_exp) + '0')));;
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_1b1ce4a56:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 10LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1b1ce2dc8:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,3);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 100LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_42513_exp / 10LL)) % 10LL) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1b1ce1338:;
	};
	return _39613_dst;
}



inline jule::Slice<jule::U8> _1e64e020b_fmtF(jule::Slice<jule::U8> _45113_dst, jule::Bool _45126_neg, _1e64ce0da_decimalSlice _45137_d, jule::I64 _45154_prec) {
	if (_45126_neg) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('-');;
	};
	if ((_45137_d._field_dp > 0LL)) {
		jule::I64 _45917_m = _1e65c84d1_min(_45137_d._field_nd,_45137_d._field_dp);;
		_45113_dst=jule::append(_45113_dst,_45137_d._field_d.slice(0LL,_45917_m));
		for (; (_45917_m < _45137_d._field_dp); (_45917_m)++) {
			{
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
			}
		_iter_next_1b1ce76a2:;
		}
		_iter_end_1b1ce76a2:;;
	} else {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
	};
	if ((_45154_prec > 0LL)) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('.');;
		jule::I64 _47017_i = 0LL;;
		for (; (_47017_i < _45154_prec); (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47317_j = (_45137_d._field_dp + _47017_i);;
				if (((0LL <= _47317_j) && (_47317_j < _45137_d._field_nd))) {
					_47221_ch=_45137_d._field_d[_47317_j];
				};
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push(_47221_ch);;
			}
		_iter_next_1b1ce8e12:;
		}
		_iter_end_1b1ce8e12:;;
	};
	return _45113_dst;
}



inline jule::Slice<jule::U8> _1e64e1196_fmtB(jule::Slice<jule::U8> _48413_dst, jule::Bool _48426_neg, jule::U64 _48437_mant, jule::I64 _48452_exp, _1e65c747a_floatInfo& _48463_flt) {
	if (_48426_neg) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('-');;
	};
	std::tie(_48413_dst,std::ignore) = _1e6a0490c_fmtBits(_48413_dst,_48437_mant,10LL,false,true);
	_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('p');;
	_48452_exp-=static_cast<jule::I64>(_48463_flt._field_mantbits);
	if ((_48452_exp >= 0LL)) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('+');;
	};
	std::tie(_48413_dst,std::ignore) = _1e6a0490c_fmtBits(_48413_dst,static_cast<jule::U64>(static_cast<jule::U64>(_48452_exp)),10LL,(_48452_exp < 0LL),true);
	return _48413_dst;
}



inline jule::Slice<jule::U8> _1e65a4c4e_fmtX(jule::Slice<jule::U8> _50613_dst, jule::I64 _50626_prec, jule::U8 _50637_fmt, jule::Bool _50648_neg, jule::U64 _5079_mant, jule::I64 _50724_exp, _1e65c747a_floatInfo& _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	};
	_5079_mant<<=(60LLU - _50735_flt._field_mantbits);
	while (((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_1b1cee1ae:;
	}
	_iter_end_1b1cee1ae:;;
	if (((_50626_prec >= 0LL) && (_50626_prec < 15LL))) {
		jule::U64 _52113_shift = static_cast<jule::U64>((_50626_prec << 2LLU));;
		jule::U64 _52213_extra = ((_5079_mant << _52113_shift) & 1152921504606846975LLU);;
		_5079_mant>>=(60LLU - _52113_shift);
		if (((_52213_extra | (_5079_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5079_mant)++;
		};
		_5079_mant<<=(60LLU - _52113_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		};
	};
	jule::Str _53513_hex = jule::Str();;
	if ((_50637_fmt == 'X')) {
		_53513_hex=jule::Str("0123456789ABCDEF", 16);
	} else {
		_53513_hex=jule::Str("0123456789abcdef", 16);
	};
	if (_50648_neg) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('-');;
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push('0');_50613_dst.__push(_50637_fmt);_50613_dst.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU)))));;
	_5079_mant<<=4LLU;
	if (((_50626_prec < 0LL) && (_5079_mant != 0LLU))) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		while ((_5079_mant != 0LLU)) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1b1d04093:;
		}
		_iter_end_1b1d04093:;;
	} else if ((_50626_prec > 0LL)) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		jule::I64 _55817_i = 0LL;;
		for (; (_55817_i < _50626_prec); (_55817_i)++) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1b1d068ae:;
		}
		_iter_end_1b1d068ae:;;
	};
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);;
	if ((_50637_fmt == _1e663e48c_lower(_50637_fmt))) {
		_56613_ch='p';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	if ((_50724_exp < 0LL)) {
		_56613_ch='-';
		_50724_exp=static_cast<jule::I64>((-(_50724_exp)));
	} else {
		_56613_ch='+';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_1b1d08d01:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,2);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_1b1d0b4b8:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 100LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1b1d09065:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,4);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 1000LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_50724_exp / 100LL)) % 10LL) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1b1d06edb:;
	};
	return _50613_dst;
}



inline jule::I64 _1e65c84d1_min(jule::I64 _5918_a, jule::I64 _59116_b) {
	if ((_5918_a < _59116_b)) {
		return _5918_a;
	};
	return _59116_b;
}



inline jule::I64 _1e65cd8b0_max(jule::I64 _5988_a, jule::I64 _59816_b) {
	if ((_5988_a > _59816_b)) {
		return _5988_a;
	};
	return _59816_b;
}



inline jule::U8 _1e663e48c_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | ('x' - 'X')));
}



inline std::tuple<jule::U64,jule::I64> _1e665e3d0_parseUint(jule::Str _5118_s, jule::I64 _5130_base, jule::I64 _5145_bitSize) {
	if (_5118_s.empty()) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
	};
	{
		
		if (((2LL <= _5130_base) && (_5130_base <= 36LL))) {
			_case_begin_1b1d1129d:;
		}
		else if ((_5130_base == 0LL)) {
			_case_begin_1b1d11149:;
			{
				_5130_base=10LL;
				if ((_5118_s[0LL] == '0')) {
					{
						
						if (((_5118_s.len() >= 3LL) && (_1e663e48c_lower(_5118_s[1LL]) == 'b'))) {
							_case_begin_1b1d13019:;
							{
								_5130_base=2LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_1e663e48c_lower(_5118_s[1LL]) == 'o'))) {
							_case_begin_1b1d12d2c:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_1e663e48c_lower(_5118_s[1LL]) == 'x'))) {
							_case_begin_1b1d12da4:;
							{
								_5130_base=16LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1b1d12986:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(1LL);;
							}
						}
						_match_end_1b1d128a9:;
					};
				};
			}
		}
		else {
			_case_begin_1b1d1039b:;
			{
				return std::make_tuple(0LLU,static_cast<jule::I64>(3LL));
			}
		}
		_match_end_1b1d10346:;
	};
	if ((_5145_bitSize == 0LL)) {
		_5145_bitSize=64LL;
	} else if (((_5145_bitSize < 0LL) || (_5145_bitSize > 64LL))) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(4LL));
	};
	jule::U64 _9013_cutoff = 0LLU;;
	{
		auto &_match_expr{ _5130_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1b1d17bde:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1b1d1732b:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1b1d175e5:;
			{
				_9013_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5130_base)) + 1LLU));
			}
		}
		_match_end_1b1d1746e:;
	};
	jule::U64 _10013_maxVal = 0LLU;;
	{
		auto &_match_expr{ _5145_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1b1d176d3:;
			{
				_10013_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1b1d18d88:;
			{
				_10013_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1b1d18d33:;
	};
	jule::U64 _10813_n = 0LLU;;
	{
		auto &expr = _5118_s;
		auto it = expr.begin();
		_iter_begin_1b1d19d9a:;
		if (it != expr.end()) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11017_d = 0LLU;;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1b1d1b4ea:;
						{
							_11017_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _1e663e48c_lower(_10912_c)) && (_1e663e48c_lower(_10912_c) <= 'z'))) {
						_case_begin_1b1d1b3b8:;
						{
							_11017_d=static_cast<jule::U8>(((_1e663e48c_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1b1d1b42e:;
						{
							goto _iter_next_1b1d19d9a;
						}
					}
					else {
						_case_begin_1b1d1ae34:;
						{
							return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
						}
					}
					_match_end_1b1d1adbd:;
				};
				if ((_11017_d >= static_cast<jule::U8>(_5130_base))) {
					return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
				};
				if ((_10813_n >= _9013_cutoff)) {
					return std::make_tuple(_10013_maxVal,static_cast<jule::I64>(1LL));
				};
				_10813_n*=static_cast<jule::U64>(_5130_base);
				jule::U64 _13213_n1 = (_10813_n + static_cast<jule::U64>(_11017_d));;
				if (((_13213_n1 < _10813_n) || (_13213_n1 > _10013_maxVal))) {
					return std::make_tuple(_10013_maxVal,static_cast<jule::I64>(1LL));
				};
				_10813_n=_13213_n1;
			}
			_iter_next_1b1d19d9a:;
			++it;
			goto _iter_begin_1b1d19d9a;
		}
		_iter_end_1b1d19d9a:;
	};
	return std::make_tuple(_10813_n,static_cast<jule::I64>(0LL));
}



inline jule::Exceptional<jule::U64> _1e6681974_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bit_size) {
	jule::U64 _14710_un;;
	jule::I64 _14714_err;;
	std::tie(_14710_un,_14714_err) = _1e665e3d0_parseUint(_14618_s,_14630_base,_14645_bit_size);
	if ((_14714_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>(_14714_err);
	};
	return jule::Exceptional<jule::U64>(jule::Any(),_14710_un);
}



inline jule::Exceptional<jule::I64> _1e670d605_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if (_17217_s.empty()) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(2LL));
	};
	jule::Bool _17813_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_17813_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _18714_un;;
	jule::I64 _18718_err;;
	std::tie(_18714_un,_18718_err) = _1e665e3d0_parseUint(_17217_s,_17225_base,_17240_bitSize);
	if (((_18718_err != static_cast<jule::I64>(0LL)) && (_18718_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>(_18718_err);
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1969_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17240_bitSize - 1LL))));;
	if (((!(_17813_neg)) && (_18714_un >= _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	};
	if ((_17813_neg && (_18714_un > _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	};
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);;
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_20313_n);
}



inline std::tuple<jule::F64,jule::Bool> _1e6425c57_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	jule::F64 _4157_f = jule::F64();
	jule::Bool _4165_ok = jule::Bool();
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			_4157_f=static_cast<jule::F64>(_1e68dda5a_F64FromBits(9223372036854775808LLU));
		};
		_4165_ok = true;
		return std::make_tuple(_4157_f,_4165_ok);
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		_4157_f = 0LL;
		_4165_ok = false;
		return std::make_tuple(_4157_f,_4165_ok);
	};
	jule::I64 _579_clz = _1e69b1e6e_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U64>(_579_clz);
	;
	jule::U64 _6013_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_579_clz));;
	jule::U64 _6314_xHi;;
	jule::U64 _6323_xLo;;
	std::tie(_6314_xHi,_6323_xLo) = _1e69bb9c3_Mul64(_4122_man,_1e64b9d73_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
	if ((((_6314_xHi & 511LLU) == 511LLU) && ((_6323_xLo + _4122_man) < _4122_man))) {
		jule::U64 _6714_yHi;;
		jule::U64 _6719_yLo;;
		std::tie(_6714_yHi,_6719_yLo) = _1e69bb9c3_Mul64(_4122_man,_1e64b9d73_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
		jule::U64 _6818_mergedHi = _6314_xHi;;
		jule::U64 _6828_mergedLo = (_6323_xLo + _6714_yHi);;
		std::tie(_6818_mergedHi,_6828_mergedLo) = std::make_tuple(_6314_xHi,(_6323_xLo + _6714_yHi));
		if ((_6828_mergedLo < _6323_xLo)) {
			(_6818_mergedHi)++;
		};
		if (((((_6818_mergedHi & 511LLU) == 511LLU) && ((_6828_mergedLo + 1LLU) == 0LLU)) && ((_6719_yLo + _4122_man) < _4122_man))) {
			_4157_f = 0LL;
			_4165_ok = false;
			return std::make_tuple(_4157_f,_4165_ok);
		};
		std::tie(_6314_xHi,_6323_xLo) = std::make_tuple(_6818_mergedHi,_6828_mergedLo);
	};
	jule::U64 _799_msb = (_6314_xHi >> 63LLU);;
	jule::U64 _8013_retMantissa = (_6314_xHi >> (_799_msb + 9LLU));;
	_6013_retExp2-=(1LLU ^ _799_msb);
	if ((((_6323_xLo == 0LLU) && ((_6314_xHi & 511LLU) == 0LLU)) && ((_8013_retMantissa & 3LLU) == 1LLU))) {
		_4157_f = 0LL;
		_4165_ok = false;
		return std::make_tuple(_4157_f,_4165_ok);
	};
	_8013_retMantissa+=(_8013_retMantissa & 1LLU);
	_8013_retMantissa>>=1LLU;
	if (((_8013_retMantissa >> 53LLU) > 0LLU)) {
		_8013_retMantissa>>=1LLU;
		_6013_retExp2+=1LLU;
	};
	if (((_6013_retExp2 - 1LLU) >= 2046LLU)) {
		_4157_f = 0LL;
		_4165_ok = false;
		return std::make_tuple(_4157_f,_4165_ok);
	};
	jule::U64 _10313_retBits = ((_6013_retExp2 << 52LLU) | (_8013_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_10313_retBits|=9223372036854775808LLU;
	};
	_4157_f = static_cast<jule::F64>(_1e68dda5a_F64FromBits(_10313_retBits));
	_4165_ok = true;
	return std::make_tuple(_4157_f,_4165_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1e67cd61a_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	jule::F32 _11057_f = jule::F32();
	jule::Bool _11065_ok = jule::Bool();
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			_11057_f=static_cast<jule::F32>(_1e68dd494_F32FromBits(2147483648LLU));
		};
		_11065_ok = true;
		return std::make_tuple(_11057_f,_11065_ok);
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		_11057_f = 0LL;
		_11065_ok = false;
		return std::make_tuple(_11057_f,_11065_ok);
	};
	jule::I64 _1329_clz = _1e69b1e6e_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U64>(_1329_clz);
	;
	jule::U64 _13513_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1329_clz));;
	jule::U64 _13814_x_hi;;
	jule::U64 _13824_x_lo;;
	std::tie(_13814_x_hi,_13824_x_lo) = _1e69bb9c3_Mul64(_11022_man,_1e64b9d73_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
	if ((((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _14214_y_hi;;
		jule::U64 _14220_y_lo;;
		std::tie(_14214_y_hi,_14220_y_lo) = _1e69bb9c3_Mul64(_11022_man,_1e64b9d73_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
		jule::U64 _14318_merged_hi = _13814_x_hi;;
		jule::U64 _14329_merged_lo = (_13824_x_lo + _14214_y_hi);;
		std::tie(_14318_merged_hi,_14329_merged_lo) = std::make_tuple(_13814_x_hi,(_13824_x_lo + _14214_y_hi));
		if ((_14329_merged_lo < _13824_x_lo)) {
			(_14318_merged_hi)++;
		};
		if (((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11022_man) < _11022_man))) {
			_11057_f = 0LL;
			_11065_ok = false;
			return std::make_tuple(_11057_f,_11065_ok);
		};
		std::tie(_13814_x_hi,_13824_x_lo) = std::make_tuple(_14318_merged_hi,_14329_merged_lo);
	};
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);;
	jule::U64 _15513_retMantissa = (_13814_x_hi >> (_1549_msb + 38LLU));;
	_13513_retExp2-=(1LLU ^ _1549_msb);
	if ((((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_retMantissa & 3LLU) == 1LLU))) {
		_11057_f = 0LL;
		_11065_ok = false;
		return std::make_tuple(_11057_f,_11065_ok);
	};
	_15513_retMantissa+=(_15513_retMantissa & 1LLU);
	_15513_retMantissa>>=1LLU;
	if (((_15513_retMantissa >> 24LLU) > 0LLU)) {
		_15513_retMantissa>>=1LLU;
		_13513_retExp2+=1LLU;
	};
	if (((_13513_retExp2 - 1LLU) >= 254LLU)) {
		_11057_f = 0LL;
		_11065_ok = false;
		return std::make_tuple(_11057_f,_11065_ok);
	};
	jule::U64 _17813_retBits = ((_13513_retExp2 << 23LLU) | (_15513_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_17813_retBits|=2147483648LLU;
	};
	_11057_f = static_cast<jule::F32>(_1e68dd494_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_retBits))));
	_11065_ok = true;
	return std::make_tuple(_11057_f,_11065_ok);
}



inline jule::I64 _1e66bdc25_commonPrefixLenIgnoreCase(jule::Str _4530_s, jule::Str _4538_prefix) {
	jule::I64 _4613_n = _4538_prefix.len();;
	if ((_4613_n > _4530_s.len())) {
		_4613_n=static_cast<jule::I64>(_4530_s.len());
	};
	jule::I64 _5013_i = 0LL;;
	for (; (_5013_i < _4613_n); (_5013_i)++) {
		{
			jule::U8 _5217_c = _4530_s[_5013_i];;
			if ((('A' <= _5217_c) && (_5217_c <= 'Z'))) {
				_5217_c+=('a' - 'A');
			};
			if ((_5217_c != _4538_prefix[_5013_i])) {
				return _5013_i;
			};
		}
	_iter_next_1b1d487d0:;
	}
	_iter_end_1b1d487d0:;;
	return _4613_n;
}



inline std::tuple<jule::F64,jule::I64,jule::Bool> _1e64dd9bd_special(jule::Str _6816_s) {
	jule::F64 _6826_f = jule::F64();
	jule::I64 _6834_n = jule::I64();
	jule::Bool _6842_ok = jule::Bool();
	if (_6816_s.empty()) {
		_6826_f = 0LL;
		_6834_n = 0LL;
		_6842_ok = false;
		return std::make_tuple(_6826_f,_6834_n,_6842_ok);
	};
	jule::I64 _7213_sign = 1LL;;
	jule::I64 _7313_nsign = 0LL;;
	{
		auto &_match_expr{ _6816_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1b1d4d1db:;
			{
				if ((_6816_s[0LL] == '-')) {
					_7213_sign=-1LL;
				};
				_7313_nsign=1LL;
				(_6816_s).mut_slice(1LL);;
				goto _case_begin_1b1d4d263;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1b1d4d263:;
			{
				jule::I64 _8317_caseN = _1e66bdc25_commonPrefixLenIgnoreCase(_6816_s,jule::Str("infinity", 8));;
				if (((3LL < _8317_caseN) && (_8317_caseN < 8LL))) {
					_8317_caseN=3LL;
				};
				if (((_8317_caseN == 3LL) || (_8317_caseN == 8LL))) {
					_6826_f = static_cast<jule::F64>(_1e6951370_Inf(_7213_sign));
					_6834_n = static_cast<jule::I64>((_7313_nsign + _6834_n));
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1b1d4d2da:;
			{
				if ((_1e66bdc25_commonPrefixLenIgnoreCase(_6816_s,jule::Str("NaN", 3)) == 3LL)) {
					_6826_f = static_cast<jule::F64>(_1e694d999_NaN());
					_6834_n = 3LL;
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				};
			}
		}
		_match_end_1b1d4d120:;
	};
	_6826_f = 0LL;
	_6834_n = 0LL;
	_6842_ok = false;
	return std::make_tuple(_6826_f,_6834_n,_6842_ok);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _1e681baa9_readFloat(jule::Str _10314_s) {
	jule::U64 _10324_mantissa = jule::U64();
	jule::I64 _10339_exp = jule::I64();
	jule::Bool _10349_neg = jule::Bool();
	jule::Bool _10360_trunc = jule::Bool();
	jule::Bool _10373_hex = jule::Bool();
	jule::I64 _10384_i = jule::I64();
	jule::Bool _10392_ok = jule::Bool();
	if ((_10384_i >= _10314_s.len())) {
		return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
	};
	{
		
		if ((_10314_s[_10384_i] == '+')) {
			_case_begin_1b1d54434:;
			{
				(_10384_i)++;
			}
		}
		else if ((_10314_s[_10384_i] == '-')) {
			_case_begin_1b1d5449a:;
			{
				_10349_neg=true;
				(_10384_i)++;
			}
		}
		_match_end_1b1d54258:;
	};
	jule::U64 _11713_base = 10LLU;;
	jule::I64 _11813_maxMantDigits = 19LL;;
	jule::U8 _11913_expChar = 'e';;
	if (((((_10384_i + 2LL) < _10314_s.len()) && (_10314_s[_10384_i] == '0')) && (_1e663e48c_lower(_10314_s[(_10384_i + 1LL)]) == 'x'))) {
		_11713_base=16LLU;
		_11813_maxMantDigits=16LL;
		_10384_i+=2LL;
		_11913_expChar='p';
		_10373_hex=true;
	};
	jule::Bool _12713_sawdot = false;;
	jule::Bool _12813_sawdigits = false;;
	jule::I64 _12913_nd = 0LL;;
	jule::I64 _13013_ndMant = 0LL;;
	jule::I64 _13113_dp = 0LL;;
	for (; (_10384_i < _10314_s.len()); (_10384_i)++) {
		{
			jule::U8 _13313_c = _10314_s[_10384_i];;
			{
				
				if ((_13313_c == '_')) {
					_case_begin_1b1d5a8ad:;
					{
						goto _iter_next_1b1d59ca8;
					}
				}
				else if ((_13313_c == '.')) {
					_case_begin_1b1d5a935:;
					{
						if (_12713_sawdot) {
							goto _julec_label_loop_end;
						};
						_12713_sawdot=true;
						_13113_dp=_12913_nd;
						goto _iter_next_1b1d59ca8;
					}
				}
				else if ((('0' <= _13313_c) && (_13313_c <= '9'))) {
					_case_begin_1b1d5a9ac:;
					{
						_12813_sawdigits=true;
						if (((_13313_c == '0') && (_12913_nd == 0LL))) {
							(_13113_dp)--;
							goto _iter_next_1b1d59ca8;
						};
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							_10324_mantissa*=_11713_base;
							_10324_mantissa+=static_cast<jule::U64>((_13313_c - '0'));
							(_13013_ndMant)++;
						} else if ((_13313_c != '0')) {
							_10360_trunc=true;
						};
						goto _iter_next_1b1d59ca8;
					}
				}
				else if ((((_11713_base == 16LLU) && ('a' <= _1e663e48c_lower(_13313_c))) && (_1e663e48c_lower(_13313_c) <= 'f'))) {
					_case_begin_1b1d5aa34:;
					{
						_12813_sawdigits=true;
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							_10324_mantissa*=16LLU;
							_10324_mantissa+=static_cast<jule::U64>(((_1e663e48c_lower(_13313_c) - 'a') + 10LLU));
							(_13013_ndMant)++;
						} else {
							_10360_trunc=true;
						};
						goto _iter_next_1b1d59ca8;
					}
				}
				_match_end_1b1d5a7d1:;
			};
			goto _iter_end_1b1d59ca8;
		}
	_iter_next_1b1d59ca8:;
	}
	_iter_end_1b1d59ca8:;;
	_julec_label_loop_end:;
	if ((!(_12813_sawdigits))) {
		return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
	};
	if ((!(_12713_sawdot))) {
		_13113_dp=_12913_nd;
	};
	if ((_11713_base == 16LLU)) {
		_13113_dp*=4LL;
		_13013_ndMant*=4LL;
	};
	if (((_10384_i < _10314_s.len()) && (_1e663e48c_lower(_10314_s[_10384_i]) == _11913_expChar))) {
		(_10384_i)++;
		if ((_10384_i >= _10314_s.len())) {
			return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
		};
		jule::I64 _19617_esign = 1LL;;
		if ((_10314_s[_10384_i] == '+')) {
			(_10384_i)++;
		} else if ((_10314_s[_10384_i] == '-')) {
			(_10384_i)++;
			_19617_esign=-1LL;
		};
		if ((((_10384_i >= _10314_s.len()) || (_10314_s[_10384_i] < '0')) || (_10314_s[_10384_i] > '9'))) {
			return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
		};
		jule::I64 _20617_e = 0LL;;
		for (; ((_10384_i < _10314_s.len()) && ((('0' <= _10314_s[_10384_i]) && (_10314_s[_10384_i] <= '9')) || (_10314_s[_10384_i] == '_'))); (_10384_i)++) {
			{
				if ((_10314_s[_10384_i] == '_')) {
					goto _iter_next_1b1d654cd;
				};
				if ((_20617_e < 10000LL)) {
					_20617_e=static_cast<jule::I64>((((_20617_e * 10LL) + static_cast<jule::I64>(_10314_s[_10384_i])) - '0'));
				};
			}
		_iter_next_1b1d654cd:;
		}
		_iter_end_1b1d654cd:;;
		_13113_dp+=(_20617_e * _19617_esign);
	} else if ((_11713_base == 16LLU)) {
		return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
	};
	if ((_10324_mantissa != 0LLU)) {
		_10339_exp=static_cast<jule::I64>((_13113_dp - _13013_ndMant));
	};
	_10392_ok=true;
	return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
}



inline std::tuple<jule::F64,jule::Bool> _1e646b5e9_atof64exact(jule::U64 _48116_mantissa, jule::I64 _48135_exp, jule::Bool _48145_neg) {
	jule::F64 _48158_f = jule::F64();
	jule::Bool _48166_ok = jule::Bool();
	if (((_48116_mantissa >> _1e642a113_f64info._field_mantbits) != 0LLU)) {
		return std::make_tuple(_48158_f,_48166_ok);
	};
	_48158_f=static_cast<jule::F64>(static_cast<jule::F64>(_48116_mantissa));
	if (_48145_neg) {
		_48158_f=static_cast<jule::F64>((-(_48158_f)));
	};
	{
		
		if ((_48135_exp == 0LL)) {
			_case_begin_1b1d70b6a:;
			{
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		else if (((_48135_exp > 0LL) && (_48135_exp <= 37LL))) {
			_case_begin_1b1d70be2:;
			{
				if ((_48135_exp > 22LL)) {
					_48158_f*=_1e651d129_f64pow10[(_48135_exp - 22LL)];
					_48135_exp=22LL;
				};
				if (((_48158_f > 1000000000000000LL) || (_48158_f < -1000000000000000LL))) {
					return std::make_tuple(_48158_f,_48166_ok);
				};
				_48158_f = static_cast<jule::F64>((_48158_f * _1e651d129_f64pow10[_48135_exp]));
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		else if (((_48135_exp < 0LL) && (_48135_exp >= -22LL))) {
			_case_begin_1b1d70c69:;
			{
				_48158_f = static_cast<jule::F64>(jule::div(_48158_f,_1e651d129_f64pow10[(-(_48135_exp))]));
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		_match_end_1b1d70ab0:;
	};
	return std::make_tuple(_48158_f,_48166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1e64b01dc_atof32exact(jule::U64 _51516_mantissa, jule::I64 _51535_exp, jule::Bool _51549_neg) {
	jule::F32 _51562_f = jule::F32();
	jule::Bool _51570_ok = jule::Bool();
	if (((_51516_mantissa >> _1e6424b79_f32info._field_mantbits) != 0LLU)) {
		return std::make_tuple(_51562_f,_51570_ok);
	};
	_51562_f=static_cast<jule::F32>(static_cast<jule::F32>(_51516_mantissa));
	if (_51549_neg) {
		_51562_f=static_cast<jule::F32>((-(_51562_f)));
	};
	{
		
		if ((_51535_exp == 0LL)) {
			_case_begin_1b1d75c91:;
			{
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		else if (((_51535_exp > 0LL) && (_51535_exp <= 17LL))) {
			_case_begin_1b1d75d18:;
			{
				if ((_51535_exp > 10LL)) {
					_51562_f*=_1e6534d99_f32pow10[(_51535_exp - 10LL)];
					_51535_exp=10LL;
				};
				if (((_51562_f > 10000000LL) || (_51562_f < -10000000LL))) {
					return std::make_tuple(_51562_f,_51570_ok);
				};
				_51562_f = static_cast<jule::F32>((_51562_f * _1e6534d99_f32pow10[_51535_exp]));
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		else if (((_51535_exp < 0LL) && (_51535_exp >= -10LL))) {
			_case_begin_1b1d75d90:;
			{
				_51562_f = static_cast<jule::F32>(jule::div(_51562_f,_1e6534d99_f32pow10[(-(_51535_exp))]));
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		_match_end_1b1d75bd6:;
	};
	return std::make_tuple(_51562_f,_51570_ok);
}



inline std::tuple<jule::F64,jule::I64> _1e6514a8d_atofHex(jule::Str _55112_s, _1e65c747a_floatInfo& _55121_flt, jule::U64 _55141_mantissa, jule::I64 _55160_exp, jule::Bool _55170_neg, jule::Bool _55181_trunc) {
	jule::I64 _5529_maxExp = ((static_cast<jule::I64>((1LL << _55121_flt._field_expbits)) + _55121_flt._field_bias) - 2LL);;
	jule::I64 _5539_minExp = (_55121_flt._field_bias + 1LL);;
	_55160_exp+=static_cast<jule::I64>(_55121_flt._field_mantbits);
	while (((_55141_mantissa != 0LLU) && ((_55141_mantissa >> (_55121_flt._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55141_mantissa<<=1LLU;
			(_55160_exp)--;
		}
	_iter_next_1b1d7b7e1:;
	}
	_iter_end_1b1d7b7e1:;;
	if (_55181_trunc) {
		_55141_mantissa|=1LLU;
	};
	while (((_55141_mantissa >> ((1LLU + _55121_flt._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_1b1d7bca8:;
	}
	_iter_end_1b1d7bca8:;;
	while (((_55141_mantissa > 1LLU) && (_55160_exp < (_5539_minExp - 2LL)))) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_1b1d7d8e2:;
	}
	_iter_end_1b1d7d8e2:;;
	jule::U64 _58313_round = (_55141_mantissa & 3LLU);;
	_55141_mantissa>>=2LLU;
	_58313_round|=(_55141_mantissa & 1LLU);
	_55160_exp+=2LL;
	if ((_58313_round == 3LLU)) {
		(_55141_mantissa)++;
		if ((_55141_mantissa == (1LLU << (1LLU + _55121_flt._field_mantbits)))) {
			_55141_mantissa>>=1LLU;
			(_55160_exp)++;
		};
	};
	if (((_55141_mantissa >> _55121_flt._field_mantbits) == 0LLU)) {
		_55160_exp=_55121_flt._field_bias;
	};
	jule::I64 _59813_err = static_cast<jule::I64>(0LL);;
	if ((_55160_exp > _5529_maxExp)) {
		_55141_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << _55121_flt._field_mantbits)));
		_55160_exp=static_cast<jule::I64>((_5529_maxExp + 1LL));
		_59813_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _60513_bits = (_55141_mantissa & ((1LLU << _55121_flt._field_mantbits) - 1LLU));;
	_60513_bits|=(static_cast<jule::U64>(((_55160_exp - _55121_flt._field_bias) & static_cast<jule::I64>(((1LL << _55121_flt._field_expbits) - 1LL)))) << _55121_flt._field_mantbits);
	if (_55170_neg) {
		_60513_bits|=((1LLU << _55121_flt._field_mantbits) << _55121_flt._field_expbits);
	};
	if ((_55121_flt == _1e6424b79_f32info)) {
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_1e68dd494_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_60513_bits))))),_59813_err);
	};
	return std::make_tuple(static_cast<jule::F64>(_1e68dda5a_F64FromBits(_60513_bits)),_59813_err);
}



inline std::tuple<jule::F32,jule::I64,jule::I64> _1e6688162_atof32(jule::Str _61611_s) {
	jule::F32 _61621_f = jule::F32();
	jule::I64 _61629_n = jule::I64();
	jule::I64 _61637_err = 0LL;
	{
		jule::F64 _61814_val;;
		jule::I64 _61819__n;;
		jule::Bool _61823_ok;;
		std::tie(_61814_val,_61819__n,_61823_ok) = _1e64dd9bd_special(_61611_s);
		if (_61823_ok) {
			_61621_f = static_cast<jule::F32>(static_cast<jule::F32>(_61814_val));
			_61629_n = _61819__n;
			_61637_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_61621_f,_61629_n,_61637_err);
		};
	};
	jule::U64 _62410_mantissa;;
	jule::I64 _62420_exp;;
	jule::Bool _62425_neg;;
	jule::Bool _62430_trunc;;
	jule::Bool _62437_hex;;
	jule::I64 _62442__n;;
	jule::Bool _62450_ok;;
	std::tie(_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc,_62437_hex,_62442__n,_62450_ok) = _1e681baa9_readFloat(_61611_s);
	_61629_n=_62442__n;
	if ((!(_62450_ok))) {
		_61621_f = 0LL;
		_61637_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	if (_62437_hex) {
		jule::F64 _63117_ff = 0LL;;
		std::tie(_63117_ff,_61637_err) = _1e6514a8d_atofHex(_61611_s.slice(0LL,_61629_n),_1e6424b79_f32info,_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc);
		_61621_f = static_cast<jule::F32>(static_cast<jule::F32>(_63117_ff));
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	{
		if ((!(_62430_trunc))) {
			std::tie(_61621_f,_62450_ok) = _1e64b01dc_atof32exact(_62410_mantissa,_62420_exp,_62425_neg);
			if (_62450_ok) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
		};
		std::tie(_61621_f,_62450_ok) = _1e67cd61a_eiselLemire32(_62410_mantissa,_62420_exp,_62425_neg);
		if (_62450_ok) {
			if ((!(_62430_trunc))) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
			jule::F32 _65321_fUp = 0LL;;
			std::tie(_65321_fUp,_62450_ok) = _1e67cd61a_eiselLemire32(static_cast<jule::U64>((_62410_mantissa + 1LLU)),_62420_exp,_62425_neg);
			if ((_62450_ok && (_61621_f == _65321_fUp))) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
		};
	};
	_1e6a02740_decimal _66213_d = _1e6a02740_decimal{};;
	if ((!(_1e686a421_set(&_66213_d, _61611_s.slice(0LL,_61629_n))))) {
		_61621_f = 0LL;
		_61637_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	jule::U64 _66610_b;;
	jule::Bool _66613_ovf;;
	std::tie(_66610_b,_66613_ovf) = _1e64de33c_floatBits(&_66213_d, _1e6424b79_f32info);
	_61621_f=static_cast<jule::F32>(_1e68dd494_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_66610_b))));
	if (_66613_ovf) {
		_61637_err=static_cast<jule::I64>(1LL);
	};
	return std::make_tuple(_61621_f,_61629_n,_61637_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _1e670dc21_atof64(jule::Str _67411_s) {
	jule::F64 _67421_f = jule::F64();
	jule::I64 _67429_n = jule::I64();
	jule::I64 _67437_err = 0LL;
	{
		jule::F64 _67614_val;;
		jule::I64 _67619__n;;
		jule::Bool _67623_ok;;
		std::tie(_67614_val,_67619__n,_67623_ok) = _1e64dd9bd_special(_67411_s);
		if (_67623_ok) {
			_67421_f = _67614_val;
			_67429_n = _67619__n;
			_67437_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_67421_f,_67429_n,_67437_err);
		};
	};
	jule::U64 _68210_mantissa;;
	jule::I64 _68220_exp;;
	jule::Bool _68225_neg;;
	jule::Bool _68230_trunc;;
	jule::Bool _68237_hex;;
	jule::I64 _68242__n;;
	jule::Bool _68250_ok;;
	std::tie(_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc,_68237_hex,_68242__n,_68250_ok) = _1e681baa9_readFloat(_67411_s);
	_67429_n=_68242__n;
	if ((!(_68250_ok))) {
		_67421_f = 0LL;
		_67437_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	if (_68237_hex) {
		std::tie(_67421_f,_67437_err) = _1e6514a8d_atofHex(_67411_s.slice(0LL,_67429_n),_1e642a113_f64info,_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	{
		if ((!(_68230_trunc))) {
			std::tie(_67421_f,_68250_ok) = _1e646b5e9_atof64exact(_68210_mantissa,_68220_exp,_68225_neg);
			if (_68250_ok) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
		};
		std::tie(_67421_f,_68250_ok) = _1e6425c57_eiselLemire64(_68210_mantissa,_68220_exp,_68225_neg);
		if (_68250_ok) {
			if ((!(_68230_trunc))) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
			jule::F64 _71021_fUp = 0LL;;
			std::tie(_71021_fUp,_68250_ok) = _1e6425c57_eiselLemire64(static_cast<jule::U64>((_68210_mantissa + 1LLU)),_68220_exp,_68225_neg);
			if ((_68250_ok && (_67421_f == _71021_fUp))) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
		};
	};
	_1e6a02740_decimal _71913_d = _1e6a02740_decimal{};;
	if ((!(_1e686a421_set(&_71913_d, _67411_s.slice(0LL,_67429_n))))) {
		_67421_f = 0LL;
		_67437_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	jule::U64 _72310_b;;
	jule::Bool _72313_ovf;;
	std::tie(_72310_b,_72313_ovf) = _1e64de33c_floatBits(&_71913_d, _1e642a113_f64info);
	_67421_f=static_cast<jule::F64>(_1e68dda5a_F64FromBits(_72310_b));
	if (_72313_ovf) {
		_67437_err=static_cast<jule::I64>(1LL);
	};
	return std::make_tuple(_67421_f,_67429_n,_67437_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _1e6759640_parseFloatPrefix(jule::Str _73121_s, jule::I64 _73129_bit_size) {
	if ((_73129_bit_size == 32LL)) {
		jule::F32 _73314_f;;
		jule::I64 _73317_n;;
		jule::I64 _73320_err;;
		std::tie(_73314_f,_73317_n,_73320_err) = _1e6688162_atof32(_73121_s);
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_73314_f)),_73317_n,_73320_err);
	};
	jule::F64 _73710_f;;
	jule::I64 _73713_n;;
	jule::I64 _73716_err;;
	std::tie(_73710_f,_73713_n,_73716_err) = _1e670dc21_atof64(_73121_s);
	return std::make_tuple(_73710_f,_73713_n,_73716_err);
}



inline jule::Exceptional<jule::F64> _1e679c221_ParseFloat(jule::Str _76515_s, jule::I64 _76523_bit_size) {
	jule::F64 _76610_f;;
	jule::I64 _76613_n;;
	jule::I64 _76616_err;;
	std::tie(_76610_f,_76613_n,_76616_err) = _1e6759640_parseFloatPrefix(_76515_s,_76523_bit_size);
	if (((_76613_n != _76515_s.len()) && ((_76616_err == static_cast<jule::I64>(0LL)) || (_76616_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>(static_cast<jule::I64>(2LL));
	};
	if ((_76616_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>(_76616_err);
	};
	return jule::Exceptional<jule::F64>(jule::Any(),_76610_f);
}



inline void _1e686c0b0_ryuFtoaFixed32(_1e64ce0da_decimalSlice& _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		std::tie(_4924_d._field_nd,_4924_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	jule::I64 _6213_e2 = _4956_exp;;
	jule::I64 _639_b = _1e69b93d8_Len32(_4945_mant);;
	if ((_639_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U64>((25LL - _639_b));
		_6213_e2+=(static_cast<jule::I64>(_639_b) - 25LL);
	};
	jule::I64 _749_q = (((-(_1e65781ea_mulByLog2Log10(static_cast<jule::I64>((_6213_e2 + 24LL))))) + _4966_prec) - 1LL);;
	jule::Bool _7913_exact = ((_749_q <= 27LL) && (_749_q >= 0LL));;
	jule::U32 _8114_di;;
	jule::I64 _8118_dexp2;;
	jule::Bool _8129_d0;;
	std::tie(_8114_di,_8118_dexp2,_8129_d0) = _1e6a0192b_mult64bitPow10(_4945_mant,_6213_e2,_749_q);
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_749_q < 0LL) && (_749_q >= -10LL)) && _1e6a01b90_divisibleByPow5(static_cast<jule::U64>(static_cast<jule::U64>(_4945_mant)),static_cast<jule::I64>((-(_749_q)))))) {
		_7913_exact=true;
		_8129_d0=true;
	};
	jule::U64 _949_extra = static_cast<jule::U64>((-(_8118_dexp2)));;
	jule::U32 _959_extraMask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));;
	jule::U32 _9713_dfrac = 0LLU;;
	std::tie(_8114_di,_9713_dfrac) = std::make_tuple(static_cast<jule::U32>((_8114_di >> _949_extra)),static_cast<jule::U32>((_8114_di & _959_extraMask)));
	jule::Bool _9913_roundUp = false;;
	if (_7913_exact) {
		_9913_roundUp=(((_9713_dfrac > (1LLU << (_949_extra - 1LLU))) || ((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU)));
	} else {
		_9913_roundUp=((_9713_dfrac >> (_949_extra - 1LLU)) == 1LLU);
	};
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	};
	_1e68ca1b7_formatDecimal(_4924_d,static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)),(!(_8129_d0)),_9913_roundUp,_4966_prec);
	_4924_d._field_dp-=_749_q;
}



inline void _1e68c3875_ryuFtoaFixed64(_1e64ce0da_decimalSlice& _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		std::tie(_12124_d._field_nd,_12124_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	jule::I64 _13113_e2 = _12156_exp;;
	jule::I64 _1329_b = _1e69b9680_Len64(_12145_mant);;
	if ((_1329_b < 55LL)) {
		_12145_mant=static_cast<jule::U64>((_12145_mant << static_cast<jule::U64>((55LL - _1329_b))));
		_13113_e2+=(static_cast<jule::I64>(_1329_b) - 55LL);
	};
	jule::I64 _1469_q = (((-(_1e65781ea_mulByLog2Log10(static_cast<jule::I64>((_13113_e2 + 54LL))))) + _12166_prec) - 1LL);;
	jule::Bool _15113_exact = ((_1469_q <= 55LL) && (_1469_q >= 0LL));;
	jule::U64 _15314_di;;
	jule::I64 _15318_dexp2;;
	jule::Bool _15329_d0;;
	std::tie(_15314_di,_15318_dexp2,_15329_d0) = _1e6a01a5d_mult128bitPow10(_12145_mant,_13113_e2,_1469_q);
	if ((_15318_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1469_q < 0LL) && (_1469_q >= -22LL)) && _1e6a01b90_divisibleByPow5(_12145_mant,static_cast<jule::I64>((-(_1469_q)))))) {
		_15113_exact=true;
		_15329_d0=true;
	};
	jule::U64 _1669_extra = static_cast<jule::U64>((-(_15318_dexp2)));;
	jule::U64 _1679_extraMask = static_cast<jule::U64>(((1LL << _1669_extra) - 1LL));;
	jule::U64 _16913_dfrac = 0LLU;;
	std::tie(_15314_di,_16913_dfrac) = std::make_tuple(static_cast<jule::U64>((_15314_di >> _1669_extra)),static_cast<jule::U64>((_15314_di & _1679_extraMask)));
	jule::Bool _17113_roundUp = false;;
	if (_15113_exact) {
		_17113_roundUp=(((_16913_dfrac > (1LLU << (_1669_extra - 1LLU))) || ((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && (!(_15329_d0)))) || (((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && _15329_d0) && ((_15314_di & 1LLU) == 1LLU)));
	} else {
		_17113_roundUp=((_16913_dfrac >> (_1669_extra - 1LLU)) == 1LLU);
	};
	if ((_16913_dfrac != 0LLU)) {
		_15329_d0=false;
	};
	_1e68ca1b7_formatDecimal(_12124_d,_15314_di,(!(_15329_d0)),_17113_roundUp,_12166_prec);
	_12124_d._field_dp-=_1469_q;
}



inline void _1e68ca1b7_formatDecimal(_1e64ce0da_decimalSlice& _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2019_max = _1e65c7964_u64pow10[_20088_prec];;
	jule::I64 _20213_trimmed = 0LL;;
	while ((_20044_m >= _2019_max)) {
		{
			jule::U64 _20414_a = (_20044_m / 10LLU);;
			jule::U64 _20417_b = (_20044_m % 10LL);;
			std::tie(_20414_a,_20417_b) = std::make_tuple((_20044_m / 10LLU),(_20044_m % 10LL));
			_20044_m=_20414_a;
			(_20213_trimmed)++;
			if ((_20417_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20417_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20417_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1b1db64da:;
	}
	_iter_end_1b1db64da:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2019_max)) {
		_20044_m/=10LLU;
		(_20213_trimmed)++;
	};
	jule::U64 _22913_n = static_cast<jule::U64>(_20088_prec);;
	_20023_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20088_prec));
	jule::U64 _23113_v = _20044_m;;
	while ((_23113_v >= 100LLU)) {
		{
			jule::U64 _23317_v1 = 0LLU;;
			jule::U64 _23417_v2 = 0LLU;;
			if (((_23113_v >> 32LLU) == 0LLU)) {
				std::tie(_23317_v1,_23417_v2) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) / 100LLU))),static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) % 100LL))));
			} else {
				std::tie(_23317_v1,_23417_v2) = std::make_tuple(static_cast<jule::U64>((_23113_v / 100LLU)),static_cast<jule::U64>((_23113_v % 100LL)));
			};
			_22913_n-=2LLU;
			_20023_d._field_d[static_cast<jule::I64>((_22913_n + 1LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 1LLU))]);
			_20023_d._field_d[static_cast<jule::I64>((_22913_n + 0LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 0LLU))]);
			_23113_v=_23317_v1;
		}
	_iter_next_1b1db9ed3:;
	}
	_iter_end_1b1db9ed3:;;
	if ((_23113_v > 0LLU)) {
		(_22913_n)--;
		_20023_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23113_v) + 1LLU))]);
	};
	if ((_23113_v >= 10LLU)) {
		(_22913_n)--;
		_20023_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((2LL * _23113_v))]);
	};
	while ((_20023_d._field_d[(_20023_d._field_nd - 1LL)] == '0')) {
		{
			(_20023_d._field_nd)--;
			(_20213_trimmed)++;
		}
	_iter_next_1b1dc0626:;
	}
	_iter_end_1b1dc0626:;;
	_20023_d._field_dp=static_cast<jule::I64>((_20023_d._field_nd + _20213_trimmed));
}



inline void _1e64900bd_ryuFtoaShortest(_1e64ce0da_decimalSlice& _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1e65c747a_floatInfo& _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		std::tie(_26125_d._field_nd,_26125_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	if (((_26157_exp <= 0LL) && (_1e69b3b63_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U64>((-(_26157_exp)));
		_1e6a016b7_ryuDigits(_26125_d,_26146_mant,_26146_mant,_26146_mant,true,false);
		return;;
	};
	jule::U64 _27310_ml;;
	jule::U64 _27314_mc;;
	jule::U64 _27318_mu;;
	jule::I64 _27326_e2;;
	std::tie(_27310_ml,_27314_mc,_27318_mu,_27326_e2) = _1e6a01475_computeBounds(_26146_mant,_26157_exp,_26168_flt);
	if ((_27326_e2 == 0LL)) {
		_1e6a016b7_ryuDigits(_26125_d,_27310_ml,_27314_mc,_27318_mu,true,false);
		return;;
	};
	jule::I64 _2799_q = (_1e65781ea_mulByLog2Log10(static_cast<jule::I64>((-(_27326_e2)))) + 1LL);;
	jule::U64 _28313_dl = 0LLU;;
	jule::U64 _28413_dc = 0LLU;;
	jule::U64 _28513_du = 0LLU;;
	jule::Bool _28613_dl0 = false;;
	jule::Bool _28713_dc0 = false;;
	jule::Bool _28813_du0 = false;;
	if ((_26168_flt == _1e6424b79_f32info)) {
		jule::U32 _29017_dl32 = 0LLU;;
		jule::U32 _29117_dc32 = 0LLU;;
		jule::U32 _29217_du32 = 0LLU;;
		std::tie(_29017_dl32,std::ignore,_28613_dl0) = _1e6a0192b_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27310_ml)),_27326_e2,_2799_q);
		std::tie(_29117_dc32,std::ignore,_28713_dc0) = _1e6a0192b_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27314_mc)),_27326_e2,_2799_q);
		std::tie(_29217_du32,_27326_e2,_28813_du0) = _1e6a0192b_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27318_mu)),_27326_e2,_2799_q);
		std::tie(_28313_dl,_28413_dc,_28513_du) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>(_29017_dl32)),static_cast<jule::U64>(static_cast<jule::U64>(_29117_dc32)),static_cast<jule::U64>(static_cast<jule::U64>(_29217_du32)));
	} else {
		std::tie(_28313_dl,std::ignore,_28613_dl0) = _1e6a01a5d_mult128bitPow10(_27310_ml,_27326_e2,_2799_q);
		std::tie(_28413_dc,std::ignore,_28713_dc0) = _1e6a01a5d_mult128bitPow10(_27314_mc,_27326_e2,_2799_q);
		std::tie(_28513_du,_27326_e2,_28813_du0) = _1e6a01a5d_mult128bitPow10(_27318_mu,_27326_e2,_2799_q);
	};
	if ((_27326_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2799_q > 55LL)) {
		std::tie(_28613_dl0,_28713_dc0,_28813_du0) = std::make_tuple(false,false,false);
	};
	if (((_2799_q < 0LL) && (_2799_q >= -24LL))) {
		if (_1e6a01b90_divisibleByPow5(_27310_ml,static_cast<jule::I64>((-(_2799_q))))) {
			_28613_dl0=true;
		};
		if (_1e6a01b90_divisibleByPow5(_27314_mc,static_cast<jule::I64>((-(_2799_q))))) {
			_28713_dc0=true;
		};
		if (_1e6a01b90_divisibleByPow5(_27318_mu,static_cast<jule::I64>((-(_2799_q))))) {
			_28813_du0=true;
		};
	};
	jule::U64 _3259_extra = static_cast<jule::U64>((-(_27326_e2)));;
	jule::U64 _3269_extraMask = static_cast<jule::U64>(((1LL << _3259_extra) - 1LL));;
	jule::U64 _32813_fracl = 0LLU;;
	std::tie(_28313_dl,_32813_fracl) = std::make_tuple(static_cast<jule::U64>((_28313_dl >> _3259_extra)),static_cast<jule::U64>((_28313_dl & _3269_extraMask)));
	jule::U64 _33013_fracc = 0LLU;;
	std::tie(_28413_dc,_33013_fracc) = std::make_tuple(static_cast<jule::U64>((_28413_dc >> _3259_extra)),static_cast<jule::U64>((_28413_dc & _3269_extraMask)));
	jule::U64 _33213_fracu = 0LLU;;
	std::tie(_28513_du,_33213_fracu) = std::make_tuple(static_cast<jule::U64>((_28513_du >> _3259_extra)),static_cast<jule::U64>((_28513_du & _3269_extraMask)));
	jule::Bool _33813_uok = ((!(_28813_du0)) || (_33213_fracu > 0LLU));;
	if ((_28813_du0 && (_33213_fracu == 0LLU))) {
		_33813_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_33813_uok))) {
		(_28513_du)--;
	};
	jule::Bool _34713_cup = false;;
	if (_28713_dc0) {
		_34713_cup=((_33013_fracc > (1LLU << (_3259_extra - 1LLU))) || ((_33013_fracc == (1LLU << (_3259_extra - 1LLU))) && ((_28413_dc & 1LLU) == 1LLU)));
	} else {
		_34713_cup=((_33013_fracc >> (_3259_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3619_lok = ((_28613_dl0 && (_32813_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3619_lok))) {
		(_28313_dl)++;
	};
	jule::Bool _3669_c0 = (_28713_dc0 && (_33013_fracc == 0LLU));;
	_1e6a016b7_ryuDigits(_26125_d,_28313_dl,_28413_dc,_28513_du,_3669_c0,_34713_cup);
	_26125_d._field_dp-=_2799_q;
}



inline jule::I64 _1e65781ea_mulByLog2Log10(jule::I64 _37719_x) {
	return static_cast<jule::I64>(((_37719_x * 78913LL) >> 18LL));
}



inline jule::I64 _1e6605398_mulByLog10Log2(jule::I64 _38719_x) {
	return static_cast<jule::I64>(((_38719_x * 108853LL) >> 15LL));
}



inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _1e6a01475_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1e65c747a_floatInfo& _3966_flt) {
	jule::U64 _39624_lower = jule::U64();
	jule::U64 _39636_central = jule::U64();
	jule::U64 _39650_upper = jule::U64();
	jule::I64 _39662_e2 = jule::I64();
	if (((_39518_mant != (1LLU << _3966_flt._field_mantbits)) || (_39529_exp == ((_3966_flt._field_bias + 1LL) - static_cast<jule::I64>(_3966_flt._field_mantbits))))) {
		std::tie(_39624_lower,_39636_central,_39650_upper) = std::make_tuple(static_cast<jule::U64>(((2LLU * _39518_mant) - 1LLU)),static_cast<jule::U64>((2LLU * _39518_mant)),static_cast<jule::U64>(((2LLU * _39518_mant) + 1LLU)));
		_39662_e2=static_cast<jule::I64>((_39529_exp - 1LL));
	} else {
		std::tie(_39624_lower,_39636_central,_39650_upper) = std::make_tuple(static_cast<jule::U64>(((4LLU * _39518_mant) - 1LLU)),static_cast<jule::U64>((4LLU * _39518_mant)),static_cast<jule::U64>(((4LLU * _39518_mant) + 2LLU)));
		_39662_e2=static_cast<jule::I64>((_39529_exp - 2LL));
	};
	return std::make_tuple(_39624_lower,_39636_central,_39650_upper,_39662_e2);
}



inline void _1e6a016b7_ryuDigits(_1e64ce0da_decimalSlice& _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _41014_lhi;;
	jule::U32 _41019_llo;;
	std::tie(_41014_lhi,_41019_llo) = _1e6a01cc2_divmod1e9(_40936_lower);
	jule::U32 _41110_chi;;
	jule::U32 _41115_clo;;
	std::tie(_41110_chi,_41115_clo) = _1e6a01cc2_divmod1e9(_40948_central);
	jule::U32 _41210_uhi;;
	jule::U32 _41215_ulo;;
	std::tie(_41210_uhi,_41215_ulo) = _1e6a01cc2_divmod1e9(_40962_upper);
	if ((_41210_uhi == 0LLU)) {
		_1e6a017e9_ryuDigits32(_40919_d,_41019_llo,_41115_clo,_41215_ulo,_40978_c0,_40992_cup,8LL);
	} else if ((_41014_lhi < _41210_uhi)) {
		if ((_41019_llo != 0LLU)) {
			(_41014_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41115_clo == 0LLU));
		_40992_cup=((_41115_clo > 500000000LL) || ((_41115_clo == 500000000LL) && _40992_cup));
		_1e6a017e9_ryuDigits32(_40919_d,_41014_lhi,_41110_chi,_41210_uhi,_40978_c0,_40992_cup,8LL);
		_40919_d._field_dp+=9LL;
	} else {
		_40919_d._field_nd=0LL;
		jule::U64 _42817_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42917_v = _41110_chi;;
		while ((_42917_v > 0LLU)) {
			{
				jule::U32 _43118_v1 = (_42917_v / 10LLU);;
				jule::U32 _43122_v2 = (_42917_v % 10LL);;
				std::tie(_43118_v1,_43122_v2) = std::make_tuple((_42917_v / 10LLU),(_42917_v % 10LL));
				_42917_v=_43118_v1;
				(_42817_n)--;
				_40919_d._field_d[static_cast<jule::I64>(_42817_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43122_v2 + '0')));
			}
		_iter_next_1b1de0db6:;
		}
		_iter_end_1b1de0db6:;;
		_40919_d._field_d=_40919_d._field_d.slice(static_cast<jule::I64>(_42817_n));
		_40919_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>((9LL - _42817_n)));
		_1e6a017e9_ryuDigits32(_40919_d,_41019_llo,_41115_clo,_41215_ulo,_40978_c0,_40992_cup,static_cast<jule::I64>((_40919_d._field_nd + 8LL)));
	};
	while (((_40919_d._field_nd > 0LL) && (_40919_d._field_d[(_40919_d._field_nd - 1LL)] == '0'))) {
		{
			(_40919_d._field_nd)--;
		}
	_iter_next_1b1de31a4:;
	}
	_iter_end_1b1de31a4:;;
	while (((_40919_d._field_nd > 0LL) && (_40919_d._field_d[0LL] == '0'))) {
		{
			(_40919_d._field_nd)--;
			(_40919_d._field_dp)--;
			_40919_d._field_d=_40919_d._field_d.slice(1LL);
		}
	_iter_next_1b1de0b41:;
	}
	_iter_end_1b1de0b41:;;
}



inline void _1e6a017e9_ryuDigits32(_1e64ce0da_decimalSlice& _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		_45421_d._field_dp=static_cast<jule::I64>((_45554_endindex + 1LL));
		return;;
	};
	jule::I64 _46013_trimmed = 0LL;;
	jule::I64 _46313_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _47013_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47118_c = (_45458_central / 10LLU);;
			jule::U32 _47125_cdigit = (_45458_central % 10LL);;
			std::tie(_47118_c,_47125_cdigit) = std::make_tuple((_45458_central / 10LLU),(_45458_central % 10LL));
			jule::U32 _47213_u = (_4559_upper / 10LLU);;
			if ((_47013_l > _47213_u)) {
				goto _iter_end_1b1de6a7b;
			};
			if (((_47013_l == (_47118_c + 1LLU)) && (_47118_c < _47213_u))) {
				(_47118_c)++;
				_47125_cdigit=0LLU;
				_45539_cup=false;
			};
			(_46013_trimmed)++;
			_45525_c0=(_45525_c0 && (_46313_cNextDigit == 0LL));
			_46313_cNextDigit=static_cast<jule::I64>(static_cast<jule::I64>(_47125_cdigit));
			std::tie(_45442_lower,_45458_central,_4559_upper) = std::make_tuple(_47013_l,_47118_c,_47213_u);
		}
	_iter_next_1b1de6a7b:;
	}
	_iter_end_1b1de6a7b:;;
	if ((_46013_trimmed > 0LL)) {
		_45539_cup=(((_46313_cNextDigit > 5LL) || ((_46313_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_46313_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_46013_trimmed;
	jule::U32 _50913_v = _45458_central;;
	jule::I64 _51013_n = _45554_endindex;;
	while ((_51013_n > _45421_d._field_nd)) {
		{
			jule::U32 _51214_v1 = (_50913_v / 100LLU);;
			jule::U32 _51218_v2 = (_50913_v % 100LL);;
			std::tie(_51214_v1,_51218_v2) = std::make_tuple((_50913_v / 100LLU),(_50913_v % 100LL));
			_45421_d._field_d[_51013_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 1LLU))]);
			_45421_d._field_d[(_51013_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 0LLU))]);
			_51013_n-=2LL;
			_50913_v=_51214_v1;
		}
	_iter_next_1b1ded6a9:;
	}
	_iter_end_1b1ded6a9:;;
	if ((_51013_n == _45421_d._field_nd)) {
		_45421_d._field_d[_51013_n]=static_cast<jule::U8>(static_cast<jule::U8>((_50913_v + '0')));
	};
	_45421_d._field_nd=static_cast<jule::I64>((_45554_endindex + 1LL));
	_45421_d._field_dp=static_cast<jule::I64>((_45421_d._field_nd + _46013_trimmed));
}



inline std::tuple<jule::U32,jule::I64,jule::Bool> _1e6a0192b_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	jule::U32 _53450_resM = jule::U32();
	jule::I64 _53461_resE = jule::I64();
	jule::Bool _53472_exact = jule::Bool();
	if ((_53440_q == 0LL)) {
		_53450_resM = static_cast<jule::U32>((_53419_m << 6LLU));
		_53461_resE = static_cast<jule::I64>((_53431_e2 - 6LL));
		_53472_exact = true;
		return std::make_tuple(_53450_resM,_53461_resE,_53472_exact);
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _54313_pow = _1e64b9d73_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_54313_pow+=1LLU;
	};
	jule::U64 _54810_hi;;
	jule::U64 _54814_lo;;
	std::tie(_54810_hi,_54814_lo) = _1e69bb9c3_Mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53419_m)),_54313_pow);
	_53431_e2+=((_1e6605398_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	_53450_resM = static_cast<jule::U32>(static_cast<jule::U32>(((_54810_hi << 7LLU) | (_54814_lo >> 57LLU))));
	_53461_resE = _53431_e2;
	_53472_exact = ((_54814_lo << 7LLU) == 0LLU);
	return std::make_tuple(_53450_resM,_53461_resE,_53472_exact);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool> _1e6a01a5d_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	jule::U64 _56251_resM = jule::U64();
	jule::I64 _56262_resE = jule::I64();
	jule::Bool _56273_exact = jule::Bool();
	if ((_56241_q == 0LL)) {
		_56251_resM = static_cast<jule::U64>((_56220_m << 8LLU));
		_56262_resE = static_cast<jule::I64>((_56232_e2 - 8LL));
		_56273_exact = true;
		return std::make_tuple(_56251_resM,_56262_resE,_56273_exact);
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _57113_pow = _1e64b9d73_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_57113_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1e6605398_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _57910_l1;;
	jule::U64 _57914_l0;;
	std::tie(_57910_l1,_57914_l0) = _1e69bb9c3_Mul64(_56220_m,_57113_pow[0LL]);
	jule::U64 _58014_h1;;
	jule::U64 _58018_h0;;
	std::tie(_58014_h1,_58018_h0) = _1e69bb9c3_Mul64(_56220_m,_57113_pow[1LL]);
	jule::U64 _58110_mid;;
	jule::U64 _58115_carry;;
	std::tie(_58110_mid,_58115_carry) = _1e69ba340_Add64(_57910_l1,_58018_h0,0LLU);
	_58014_h1+=_58115_carry;
	_56251_resM = static_cast<jule::U64>(((_58014_h1 << 9LLU) | (_58110_mid >> 55LLU)));
	_56262_resE = _56232_e2;
	_56273_exact = (((_58110_mid << 9LLU) == 0LLU) && (_57914_l0 == 0LLU));
	return std::make_tuple(_56251_resM,_56262_resE,_56273_exact);
}



inline jule::Bool _1e6a01b90_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;
	};
	jule::I64 _59013_i = 0LL;;
	for (; (_59013_i < _58632_k); (_59013_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;
			};
			_58624_m/=5LLU;
		}
	_iter_next_1b1e0d147:;
	}
	_iter_end_1b1e0d147:;;
	return true;
}



inline std::tuple<jule::U32,jule::U32> _1e6a01cc2_divmod1e9(jule::U64 _60214_x) {
	{
		return std::make_tuple(static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL))),static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL))));
	};
}



inline void _1e6a0329b_trim(_1e6a02740_decimal& _45314_a) {
	while (((_45314_a._field_nd > 0LL) && (_45314_a._field_d[(_45314_a._field_nd - 1LL)] == '0'))) {
		{
			(_45314_a._field_nd)--;
		}
	_iter_next_1b1e1268a:;
	}
	_iter_end_1b1e1268a:;;
	if ((_45314_a._field_nd == 0LL)) {
		_45314_a._field_dp=0LL;
	};
}



inline void _1e6a033cd_rightShift(_1e6a02740_decimal& _46320_a, jule::U64 _46332_k) {
	jule::I64 _46413_r = 0LL;;
	jule::I64 _46513_w = 0LL;;
	jule::U64 _46813_n = 0LLU;;
	for (; ((_46813_n >> _46332_k) == 0LLU); (_46413_r)++) {
		{
			if ((_46413_r >= _46320_a._field_nd)) {
				if ((_46813_n == 0LLU)) {
					_46320_a._field_nd=0LL;
					return;;
				};
				while (((_46813_n >> _46332_k) == 0LLU)) {
					{
						_46813_n=static_cast<jule::U64>((_46813_n * 10LLU));
						(_46413_r)++;
					}
				_iter_next_1b1e15a34:;
				}
				_iter_end_1b1e15a34:;;
				goto _iter_end_1b1e144b1;
			};
			jule::U64 _48213_c = static_cast<jule::U64>(_46320_a._field_d[_46413_r]);;
			_46813_n=static_cast<jule::U64>((((_46813_n * 10LLU) + _48213_c) - '0'));
		}
	_iter_next_1b1e144b1:;
	}
	_iter_end_1b1e144b1:;;
	_46320_a._field_dp-=(_46413_r - 1LL);
	jule::U64 _4879_mask = static_cast<jule::U64>((static_cast<jule::U64>((1LL << _46332_k)) - 1LLU));;
	for (; (_46413_r < _46320_a._field_nd); (_46413_r)++) {
		{
			jule::U64 _49113_c = static_cast<jule::U64>(_46320_a._field_d[_46413_r]);;
			jule::U64 _49213_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			_46320_a._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_49213_dig + '0')));
			(_46513_w)++;
			_46813_n=static_cast<jule::U64>((((_46813_n * 10LLU) + _49113_c) - '0'));
		}
	_iter_next_1b1e1830b:;
	}
	_iter_end_1b1e1830b:;;
	while ((_46813_n > 0LLU)) {
		{
			jule::U64 _50113_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			if ((_46513_w < 800LL)) {
				_46320_a._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_50113_dig + '0')));
				(_46513_w)++;
			} else if ((_50113_dig > 0LLU)) {
				_46320_a._field_trunc=true;
			};
			_46813_n=static_cast<jule::U64>((_46813_n * 10LLU));
		}
	_iter_next_1b1e18e66:;
	}
	_iter_end_1b1e18e66:;;
	_46320_a._field_nd=_46513_w;
	_1e6a0329b_trim(_46320_a);
}



inline jule::Bool _1e6a03510_prefixIsLessThan(jule::Array<jule::U8,800> _51721_b, jule::I64 _51735_end, jule::Str _51745_s) {
	jule::I64 _51813_i = 0LL;;
	for (; (_51813_i < _51745_s.len()); (_51813_i)++) {
		{
			if ((_51813_i >= _51735_end)) {
				return true;
			};
			if ((_51721_b[_51813_i] != _51745_s[_51813_i])) {
				return (_51721_b[_51813_i] < _51745_s[_51813_i]);
			};
		}
	_iter_next_1b1e1cc8e:;
	}
	_iter_end_1b1e1cc8e:;;
	return false;
}



inline void _1e6a03642_leftShift(_1e6a02740_decimal& _53119_a, jule::U64 _53131_k) {
	jule::I64 _53213_delta = _1e65c949e_leftCheats[static_cast<jule::I64>(_53131_k)]._field_delta;;
	if (_1e6a03510_prefixIsLessThan(_53119_a._field_d,_53119_a._field_nd,_1e65c949e_leftCheats[static_cast<jule::I64>(_53131_k)]._field_cutoff)) {
		(_53213_delta)--;
	};
	jule::I64 _53713_r = _53119_a._field_nd;;
	jule::I64 _53813_w = (_53119_a._field_nd + _53213_delta);;
	jule::U64 _54113_n = 0LLU;;
	(_53713_r)--;
	for (; (_53713_r >= 0LL); (_53713_r)--) {
		{
			_54113_n+=((static_cast<jule::U64>(_53119_a._field_d[_53713_r]) - '0') << _53131_k);
			jule::U64 _54513_quo = (_54113_n / 10LLU);;
			jule::U64 _54613_rem = (_54113_n - (10LLU * _54513_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				_53119_a._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_54613_rem + '0')));
			} else if ((_54613_rem != 0LLU)) {
				_53119_a._field_trunc=true;
			};
			_54113_n=_54513_quo;
		}
	_iter_next_1b1e21644:;
	}
	_iter_end_1b1e21644:;;
	while ((_54113_n > 0LLU)) {
		{
			jule::U64 _55813_quo = (_54113_n / 10LLU);;
			jule::U64 _55913_rem = (_54113_n - (10LLU * _55813_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				_53119_a._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_55913_rem + '0')));
			} else if ((_55913_rem != 0LLU)) {
				_53119_a._field_trunc=true;
			};
			_54113_n=_55813_quo;
		}
	_iter_next_1b1e23c62:;
	}
	_iter_end_1b1e23c62:;;
	_53119_a._field_nd+=_53213_delta;
	if ((_53119_a._field_nd >= 800LL)) {
		_53119_a._field_nd=800LL;
	};
	_53119_a._field_dp+=_53213_delta;
	_1e6a0329b_trim(_53119_a);
}



inline jule::Bool _1e6a03774_shouldRoundUp(_1e6a02740_decimal& _57819_a, jule::I64 _57831_nd) {
	if (((_57831_nd < 0LL) || (_57831_nd >= _57819_a._field_nd))) {
		return false;
	};
	if (((_57819_a._field_d[_57831_nd] == '5') && ((_57831_nd + 1LL) == _57819_a._field_nd))) {
		if (_57819_a._field_trunc) {
			return true;
		};
		return ((_57831_nd > 0LL) && (((_57819_a._field_d[(_57831_nd - 1LL)] - '0') & 1LL) != 0LLU));
	};
	return (_57819_a._field_d[_57831_nd] >= '5');
}



inline jule::Str _1e6a04302_FmtUint(jule::U64 _6012_i, jule::I64 _6020_base) {
	if (((true && (_6012_i < 100LLU)) && (_6020_base == 10LL))) {
		return _1e6a04698_small(static_cast<jule::I64>(static_cast<jule::I64>(_6012_i)));
	};
	jule::Str _6413_s;;
	std::tie(std::ignore,_6413_s) = _1e6a0490c_fmtBits(nullptr,_6012_i,_6020_base,false,false);
	return _6413_s;
}



inline jule::Str _1e6a04434_FmtInt(jule::I64 _7111_i, jule::I64 _7119_base) {
	if ((((true && (0LL <= _7111_i)) && (_7111_i < 100LL)) && (_7119_base == 10LL))) {
		return _1e6a04698_small(static_cast<jule::I64>(static_cast<jule::I64>(_7111_i)));
	};
	jule::Str _7513_s;;
	std::tie(std::ignore,_7513_s) = _1e6a0490c_fmtBits(nullptr,static_cast<jule::U64>(static_cast<jule::U64>(_7111_i)),_7119_base,(_7111_i < 0LL),false);
	return _7513_s;
}



inline jule::Str _1e6a04566_Itoa(jule::I64 _809_i) {
	return _1e6a04434_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_809_i)),10LL);
}



inline jule::Str _1e6a04698_small(jule::I64 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i,(_8510_i + 1LL));
	};
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU),((_8510_i << 1LLU) + 2LL));
}



inline jule::Bool _1e6a047ca_isPowerOfTwo(jule::I64 _9217_x) {
	return ((_9217_x & (_9217_x - 1LL)) == 0LL);
}



inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1e6a0490c_fmtBits(jule::Slice<jule::U8> _10116_dst, jule::U64 _10133_u, jule::I64 _10141_base, jule::Bool _10152_neg, jule::Bool _10163_append_) {
	jule::Slice<jule::U8> _10180_d = jule::Slice<jule::U8>();
	jule::Str _10191_s = jule::Str();
	if (((_10141_base < 2LL) || (_10141_base > 36LL))) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _10713_a = jule::Slice<jule::U8>::alloc(65LL);;
	jule::I64 _10813_i = _10713_a.len();;
	if (_10152_neg) {
		_10133_u=static_cast<jule::U64>((-(_10133_u)));
	};
	if ((_10141_base == 10LL)) {
		;
		jule::U64 _14917_us = static_cast<jule::U64>(_10133_u);;
		while ((_14917_us >= 100LLU)) {
			{
				jule::U64 _15117_is = ((_14917_us % 100LL) << 1LLU);;
				_14917_us/=100LLU;
				_10813_i-=2LL;
				_10713_a[(_10813_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 1LLU))]);
				_10713_a[(_10813_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 0LLU))]);
			}
		_iter_next_1b1e63147:;
		}
		_iter_end_1b1e63147:;;
		jule::U64 _15913_is = (_14917_us << 1LLU);;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15913_is + 1LLU))]);
		if ((_14917_us >= 10LLU)) {
			(_10813_i)--;
			_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(_15913_is)]);
		};
	} else if (_1e6a047ca_isPowerOfTwo(_10141_base)) {
		jule::U64 _17413_shift = (static_cast<jule::U64>(_1e69b2ec5_TrailingZeros(static_cast<jule::U64>(static_cast<jule::U64>(_10141_base)))) & 7LLU);;
		jule::U64 _17513_b = static_cast<jule::U64>(_10141_base);;
		jule::U64 _17613_m = (static_cast<jule::U64>(_10141_base) - 1LLU);;
		while ((_10133_u >= _17513_b)) {
			{
				(_10813_i)--;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>((static_cast<jule::U64>(_10133_u) & _17613_m))]);
				_10133_u>>=_17413_shift;
			}
		_iter_next_1b1e6bc66:;
		}
		_iter_end_1b1e6bc66:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	} else {
		jule::U64 _18713_b = static_cast<jule::U64>(_10141_base);;
		while ((_10133_u >= _18713_b)) {
			{
				(_10813_i)--;
				jule::U64 _19317_q = jule::div(_10133_u,_18713_b);;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>((_10133_u - (_19317_q * _18713_b))))]);
				_10133_u=_19317_q;
			}
		_iter_next_1b1e6ea05:;
		}
		_iter_end_1b1e6ea05:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	};
	if (_10152_neg) {
		(_10813_i)--;
		_10713_a[_10813_i]='-';
	};
	if (_10163_append_) {
		_10180_d=jule::append(_10116_dst,_10713_a.slice(_10813_i));
		return std::make_tuple(_10180_d,_10191_s);
	};
	_10191_s=static_cast<jule::Str>(_10713_a.slice(_10813_i));
	return std::make_tuple(_10180_d,_10191_s);
}



inline jule::Str _1e6037e63_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1b1e8a36c:;
			{
				return _1e601654b_SysInt;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1b1e8a3d3:;
			{
				return _1e605ab23_SysUint;
			}
		}
		else {
			_case_begin_1b1e8a24b:;
			{
				return _4515_kind;
			}
		}
		_match_end_1b1e8a191:;
	};
}



inline jule::I64 _1e603e695_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1b1e8baee:;
			{
				return 8LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_1b1e8bb65:;
			{
				return 16LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_1b1e8b45b:;
			{
				return 32LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_1b1e8b4c2:;
			{
				return 64LL;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3)) {
			_case_begin_1b1e8b538:;
			{
				return _1e601601d_BitSize;
			}
		}
		else {
			_case_begin_1b1e8b3e5:;
			{
				return -1LL;
			}
		}
		_match_end_1b1e8b14d:;
	};
}



inline jule::Str _1e606392d_IntFromBits(jule::I64 _8616_bits) {
	{
		auto &_match_expr{ _8616_bits };
		
		if (_match_expr == 8LL) {
			_case_begin_1b1e8d716:;
			{
				return jule::Str("i8", 2);
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1b1e8d77c:;
			{
				return jule::Str("i16", 3);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1b1e8d7e3:;
			{
				return jule::Str("i32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1b1e8d903:;
			{
				return jule::Str("i64", 3);
			}
		}
		else {
			_case_begin_1b1e8ca9a:;
			{
				return jule::Str();
			}
		}
		_match_end_1b1e8d5e5:;
	};
}



inline jule::Str _1e6075841_UintFromBits(jule::I64 _10417_bits) {
	{
		auto &_match_expr{ _10417_bits };
		
		if (_match_expr == 8LL) {
			_case_begin_1b1e8ea8b:;
			{
				return jule::Str("u8", 2);
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1b1e8eb02:;
			{
				return jule::Str("u16", 3);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1b1e8eb68:;
			{
				return jule::Str("u32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1b1e8ee65:;
			{
				return jule::Str("u64", 3);
			}
		}
		else {
			_case_begin_1b1e8e10c:;
			{
				return jule::Str();
			}
		}
		_match_end_1b1e8deb9:;
	};
}



inline jule::Str _1e60a46b6_FloatFromBits(jule::I64 _12218_bits) {
	{
		auto &_match_expr{ _12218_bits };
		
		if (_match_expr == 32LL) {
			_case_begin_1b1e91076:;
			{
				return jule::Str("f32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1b1e910dc:;
			{
				return jule::Str("f64", 3);
			}
		}
		else {
			_case_begin_1b1e9064c:;
			{
				return jule::Str();
			}
		}
		_match_end_1b1e90509:;
	};
}



inline jule::Bool _1e62406ed_CheckBitFloat(jule::Str _15018_val, jule::I64 _15028_bit) {
	({
		auto except = _1e679c221_ParseFloat(_15018_val,_15028_bit);
		(except.ok()) ? (except.result) : ({{
			return false;
		} jule::F64();});
	});
	return true;
}



inline jule::I64 _1e625e783_BitsizeOfFloat(jule::F64 _16019_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16019_x) && (_16019_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1b1e999b9:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1b1e9a8bb:;
			{
				return 64LL;
			}
		}
		_match_end_1b1e9ac1d:;
	};
}



inline jule::I64 _1e63101c4_BitsizeOfInt(jule::I64 _17617_x) {
	{
		
		if (((-128LL <= _17617_x) && (_17617_x <= 127LL))) {
			_case_begin_1b1e9bdc8:;
			{
				return 8LL;
			}
		}
		else if (((-32768LL <= _17617_x) && (_17617_x <= 32767LL))) {
			_case_begin_1b1e9be3e:;
			{
				return 16LL;
			}
		}
		else if (((-2147483648LL <= _17617_x) && (_17617_x <= 2147483647LL))) {
			_case_begin_1b1e9beb6:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1b1e9bb97:;
			{
				return 64LL;
			}
		}
		_match_end_1b1e9baba:;
	};
}



inline jule::I64 _1e6327e67_BitsizeOfUint(jule::U64 _19618_x) {
	{
		
		if ((_19618_x <= 255LLU)) {
			_case_begin_1b1e9dc43:;
			{
				return 8LL;
			}
		}
		else if ((_19618_x <= 65535LLU)) {
			_case_begin_1b1e9dca9:;
			{
				return 16LL;
			}
		}
		else if ((_19618_x <= 4294967295LLU)) {
			_case_begin_1b1e9dd31:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1b1e9db88:;
			{
				return 64LL;
			}
		}
		_match_end_1b1e9e2b5:;
	};
}



inline void _1e6328693_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _1e4414b5a_Arch };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_1b1e9ebab:;
				{
					_1e601601d_BitSize=64LL;
					_1e601654b_SysInt=jule::Str("i64", 3);
					_1e605ab23_SysUint=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_1b1ea04c5:;
				{
					_1e601601d_BitSize=32LL;
					_1e601654b_SysInt=jule::Str("i32", 3);
					_1e605ab23_SysUint=jule::Str("u32", 3);
				}
			}
			_match_end_1b1e9eace:;
		};
	};
}



inline void _1e6335c55_init(void) {
	_1e6328693_UpdateTarget();
}



inline jule::F64 _1e63b4e16_Min(jule::Str _6112_k) {
	_6112_k=_1e6037e63_RealKindOf(_6112_k);
	{
		auto &_match_expr{ _6112_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1b1ea331e:;
			{
				return -128LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1b1ea3385:;
			{
				return -32768LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1b1ea2cbe:;
			{
				return -2147483648LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1b1ea2d46:;
			{
				return jule::MIN_I64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1b1ea2dbd:;
			{
				return -340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1b1ea2e45:;
			{
				return jule::MIN_F64;
			}
		}
		else {
			_case_begin_1b1ea0d22:;
			{
				return 0LL;
			}
		}
		_match_end_1b1ea0b35:;
	};
}



inline jule::F64 _1e63bcc43_Max(jule::Str _8312_k) {
	_8312_k=_1e6037e63_RealKindOf(_8312_k);
	{
		auto &_match_expr{ _8312_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1b1ea30bb:;
			{
				return 127LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1b1ea4a18:;
			{
				return 32767LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1b1ea4a7e:;
			{
				return 2147483647LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1b1ea4ae5:;
			{
				return jule::MAX_I64;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1b1ea4b5b:;
			{
				return 255LL;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1b1ea4dc0:;
			{
				return 65535LL;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1b1ea4e36:;
			{
				return 4294967295LL;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1b1ea4e9c:;
			{
				return jule::MAX_U64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1b1ea5024:;
			{
				return 340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1b1ea509b:;
			{
				return jule::MAX_F64;
			}
		}
		else {
			_case_begin_1b1ea4881:;
			{
				return 0LL;
			}
		}
		_match_end_1b1ea37d6:;
	};
}



inline jule::Bool _1e63c9755_IsI8Compatible(jule::Str _623_k) {
	return (_623_k == jule::Str("i8", 2));
}



inline jule::Bool _1e63d5c4a_IsI16Compatible(jule::Str _1124_k) {
	return ((_1124_k == jule::Str("i8", 2)) || (_1124_k == jule::Str("i16", 3)));
}



inline jule::Bool _1e6405d14_IsI32Compatible(jule::Str _1724_k) {
	return ((((_1724_k == jule::Str("i8", 2)) || (_1724_k == jule::Str("i16", 3))) || (_1724_k == jule::Str("i32", 3))) || (_1724_k == jule::Str("u8", 2)));
}



inline jule::Bool _1e640c3d1_IsI64Compatible(jule::Str _2524_k) {
	return ((((_2524_k == jule::Str("i8", 2)) || (_2524_k == jule::Str("i16", 3))) || (_2524_k == jule::Str("i32", 3))) || (_2524_k == jule::Str("i64", 3)));
}



inline jule::Bool _1e60151e8_IsU8Compatible(jule::Str _3323_k) {
	return (_3323_k == jule::Str("u8", 2));
}



inline jule::Bool _1e5ebb303_IsU16Compatible(jule::Str _3824_k) {
	return ((_3824_k == jule::Str("u8", 2)) || (_3824_k == jule::Str("u16", 3)));
}



inline jule::Bool _1e608c57d_IsU32Compatible(jule::Str _4324_k) {
	return (((_4324_k == jule::Str("u8", 2)) || (_4324_k == jule::Str("u16", 3))) || (_4324_k == jule::Str("u32", 3)));
}



inline jule::Bool _1e608d0ea_IsU64Compatible(jule::Str _5024_k) {
	return ((((_5024_k == jule::Str("u8", 2)) || (_5024_k == jule::Str("u16", 3))) || (_5024_k == jule::Str("u32", 3))) || (_5024_k == jule::Str("u64", 3)));
}



inline jule::Bool _1e628060b_IsF32Compatible(jule::Str _5824_k) {
	return (_5824_k == jule::Str("f32", 3));
}



inline jule::Bool _1e628173e_IsF64Compatible(jule::Str _6324_k) {
	return (_6324_k == jule::Str("f64", 3));
}



inline jule::Bool _1e6286898_TypesAreCompatible(jule::Str _7027_k1, jule::Str _7036_k2) {
	{
		auto &_match_expr{ _7027_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1b1ead58d:;
			{
				return true;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1b1ead802:;
			{
				return (_7036_k2 == jule::Str("int", 3));
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1b1ead868:;
			{
				return (_7036_k2 == jule::Str("uintptr", 7));
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1b1ead8ce:;
			{
				return (_7036_k2 == jule::Str("uint", 4));
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1b1ead945:;
			{
				return _1e63c9755_IsI8Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1b1ead9ab:;
			{
				return _1e63d5c4a_IsI16Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1b1eada22:;
			{
				return _1e6405d14_IsI32Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1b1eada88:;
			{
				return _1e640c3d1_IsI64Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1b1eadb10:;
			{
				return _1e60151e8_IsU8Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1b1eadb76:;
			{
				return _1e5ebb303_IsU16Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1b1eadbed:;
			{
				return _1e608c57d_IsU32Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1b1eadc75:;
			{
				return _1e608d0ea_IsU64Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1b1eadcec:;
			{
				return _1e628060b_IsF32Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1b1eadd74:;
			{
				return _1e628173e_IsF64Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1b1eaddeb:;
			{
				return (_7036_k2 == jule::Str("bool", 4));
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1b1eade73:;
			{
				return (_7036_k2 == jule::Str("str", 3));
			}
		}
		else {
			_case_begin_1b1ead34b:;
			{
				return false;
			}
		}
		_match_end_1b1ead280:;
	};
}



inline jule::Bool _1e628ba02_IsI16Greater(jule::Str _11021_k) {
	return (_11021_k == jule::Str("i8", 2));
}



inline jule::Bool _1e6406276_IsI32Greater(jule::Str _11521_k) {
	return ((_11521_k == jule::Str("i8", 2)) || (_11521_k == jule::Str("i16", 3)));
}



inline jule::Bool _1e6017294_IsI64Greater(jule::Str _12021_k) {
	return (((_12021_k == jule::Str("i8", 2)) || (_12021_k == jule::Str("i16", 3))) || (_12021_k == jule::Str("i32", 3)));
}



inline jule::Bool _1e624005a_IsU16Greater(jule::Str _12721_k) {
	return (_12721_k == jule::Str("u8", 2));
}



inline jule::Bool _1e6a053be_IsU32Greater(jule::Str _13221_k) {
	return ((_13221_k == jule::Str("u8", 2)) || (_13221_k == jule::Str("u16", 3)));
}



inline jule::Bool _1e6a05501_IsU64Greater(jule::Str _13821_k) {
	return (((_13821_k == jule::Str("u8", 2)) || (_13821_k == jule::Str("u16", 3))) || (_13821_k == jule::Str("u32", 3)));
}



inline jule::Bool _1e6a05633_IsF32Greater(jule::Str _14517_k) {
	return (_14517_k != jule::Str("f64", 3));
}



inline jule::Bool _1e6a05765_IsF64Greater(jule::Str _15017_k) {
	return true;
}



inline jule::Bool _1e6a05897_IsGreater(jule::Str _15518_k1, jule::Str _15527_k2) {
	{
		auto &_match_expr{ _15518_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1b1eb6d8d:;
			{
				return _1e6a05cd7_IsSigInt(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1b1eb6e04:;
			{
				return _1e6a05e19_IsUnsigInt(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1b1eb7102:;
			{
				return _1e6a05e19_IsUnsigInt(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1b1eb7168:;
			{
				return _1e628ba02_IsI16Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1b1eb71ce:;
			{
				return _1e6406276_IsI32Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1b1eb7256:;
			{
				return _1e6017294_IsI64Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1b1eb72cd:;
			{
				return _1e624005a_IsU16Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1b1eb7355:;
			{
				return _1e6a053be_IsU32Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1b1eb7432:;
			{
				return _1e6a05501_IsU64Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1b1eb7498:;
			{
				return _1e6a05633_IsF32Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1b1eb750e:;
			{
				return _1e6a05765_IsF64Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1b1eb7575:;
			{
				return true;
			}
		}
		else {
			_case_begin_1b1eb6b4b:;
			{
				return false;
			}
		}
		_match_end_1b1eb6530:;
	};
}



inline jule::Bool _1e6a05cd7_IsSigInt(jule::Str _2717_k) {
	return (((((_2717_k == jule::Str("i8", 2)) || (_2717_k == jule::Str("i16", 3))) || (_2717_k == jule::Str("i32", 3))) || (_2717_k == jule::Str("i64", 3))) || (_2717_k == jule::Str("int", 3)));
}



inline jule::Bool _1e6a05e19_IsUnsigInt(jule::Str _3619_k) {
	return ((((((_3619_k == jule::Str("u8", 2)) || (_3619_k == jule::Str("u16", 3))) || (_3619_k == jule::Str("u32", 3))) || (_3619_k == jule::Str("u64", 3))) || (_3619_k == jule::Str("uint", 4))) || (_3619_k == jule::Str("uintptr", 7)));
}



inline jule::Bool _1e6a0604b_IsInt(jule::Str _4610_k) {
	return (_1e6a05cd7_IsSigInt(_4610_k) || _1e6a05e19_IsUnsigInt(_4610_k));
}



inline jule::Bool _1e6a0617d_IsFloat(jule::Str _5112_k) {
	return ((_5112_k == jule::Str("f32", 3)) || (_5112_k == jule::Str("f64", 3)));
}



inline jule::Bool _1e6a062b0_IsNum(jule::Str _5610_k) {
	return (_1e6a0604b_IsInt(_5610_k) || _1e6a0617d_IsFloat(_5610_k));
}



inline jule::Bool _1e6a063e2_IsSigNum(jule::Str _6113_k) {
	return (_1e6a05cd7_IsSigInt(_6113_k) || _1e6a0617d_IsFloat(_6113_k));
}



inline jule::Bool _1e6a5bc2d_IsAscii(jule::I32 _1012_r) {
	;
	return (_1012_r <= 127LL);
}



inline jule::I32 _1e6a5bd60_ToRune(jule::Slice<jule::U8> _1811_bytes) {
	if ((_1811_bytes.len() == 0LL)) {
		return 0LL;
	};
	jule::I32 _2313_r = 0LL;;
	if (((_1811_bytes[0LL] == '\\') && (_1811_bytes.len() > 1LL))) {
		jule::I64 _2517_i = 0LL;;
		_2313_r=static_cast<jule::I32>(_1e6a744d7_runeFromEsqSeq(_1811_bytes,_2517_i));
	} else {
		std::tie(_2313_r,std::ignore) = _1e33ba0ea_DecodeRune(_1811_bytes);
	};
	return _2313_r;
}



inline jule::Str _1e6a73b79_ToRawStr(jule::Slice<jule::U8> _3713_bytes) {
	return static_cast<jule::Str>(_3713_bytes);
}



inline jule::Str _1e6a73e32_ToStr(jule::Slice<jule::U8> _4210_bytes) {
	if ((_4210_bytes.len() == 0LL)) {
		return jule::Str();
	};
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL,_4210_bytes.len());;
	jule::I64 _4813_i = 0LL;;
	while ((_4813_i < _4210_bytes.len())) {
		{
			jule::U8 _5013_b = _4210_bytes[_4813_i];;
			if ((_5013_b == '\\')) {
				_4713_s=jule::append(_4713_s,_1e6a74828_strEsqSeq(_4210_bytes,_4813_i));
			} else {
				jule::I32 _5418_r;;
				jule::I64 _5421_size;;
				std::tie(_5418_r,_5421_size) = _1e33ba0ea_DecodeRune(_4210_bytes.slice(_4813_i));
				_4813_i+=_5421_size;
				_4713_s=_1e33bb45e_AppendRune(_4713_s,_5418_r);
			};
		}
	_iter_next_1b1ec50aa:;
	}
	_iter_end_1b1ec50aa:;;
	return static_cast<jule::Str>(_4713_s);
}



inline std::tuple<jule::U8,jule::Bool> _1e6a741c9_tryBtoaCommonEsq(jule::Slice<jule::U8> _6221_bytes) {
	jule::U8 _6238_seq = jule::U8();
	jule::Bool _6249_ok = jule::Bool();
	if (((_6221_bytes.len() < 2LL) || (_6221_bytes[0LL] != '\\'))) {
		return std::make_tuple(_6238_seq,_6249_ok);
	};
	{
		auto &_match_expr{ _6221_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1b1ec9bc5:;
			{
				_6238_seq='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1b1ec9c3b:;
			{
				_6238_seq='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1b1ec9ca2:;
			{
				_6238_seq='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1b1ec9d18:;
			{
				_6238_seq='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1b1ec9d90:;
			{
				_6238_seq='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1b1ec9e17:;
			{
				_6238_seq='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1b1ec9e8e:;
			{
				_6238_seq='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1b1eca016:;
			{
				_6238_seq='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1b1eca08d:;
			{
				_6238_seq='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1b1eca115:;
			{
				_6238_seq='\v';
			}
		}
		_match_end_1b1ec9aa4:;
	};
	_6249_ok=(_6238_seq != 0LLU);
	return std::make_tuple(_6238_seq,_6249_ok);
}



inline jule::I32 _1e6a744d7_runeFromEsqSeq(jule::Slice<jule::U8> _9219_bytes, jule::I64& _9239_i) {
	jule::U8 _9310_b;;
	jule::Bool _9313_ok;;
	std::tie(_9310_b,_9313_ok) = _1e6a741c9_tryBtoaCommonEsq(_9219_bytes.slice(_9239_i));
	(_9239_i)++;
	if (_9313_ok) {
		(_9239_i)++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_9310_b));
	};
	{
		auto &_match_expr{ _9219_bytes[_9239_i] };
		
		if (_match_expr == 'u') {
			_case_begin_1b1ed089b:;
			{
				;
				jule::I32 _10313_r = static_cast<jule::I32>(({
					auto except = _1e6681974_ParseUint(static_cast<jule::Str>(_9219_bytes.slice((_9239_i + 1LL),(_9239_i + 5LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:103:22"));
					(except.result);
				}));;
				_9239_i+=5LL;
				return _10313_r;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1b1ed0956:;
			{
				;
				jule::I32 _10813_r = static_cast<jule::I32>(({
					auto except = _1e6681974_ParseUint(static_cast<jule::Str>(_9219_bytes.slice((_9239_i + 1LL),(_9239_i + 9LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:108:22"));
					(except.result);
				}));;
				_9239_i+=9LL;
				return _10813_r;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1b1ed09bc:;
			{
				;
				jule::Slice<jule::U8> _11313_seq = _9219_bytes.slice((_9239_i + 1LL),(_9239_i + 3LL));;
				_9239_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1e6681974_ParseUint(static_cast<jule::Str>(_11313_seq),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:115:18"));
					(except.result);
				})));
			}
		}
		else {
			_case_begin_1b1ece779:;
			{
				;
				jule::Slice<jule::U8> _11813_seq = _9219_bytes.slice(_9239_i,(_9239_i + 3LL));;
				_9239_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1e6681974_ParseUint(static_cast<jule::Str>(_11813_seq.slice(1LL)),8LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:120:18"));
					(except.result);
				})));
			}
		}
		_match_end_1b1ece724:;
	};
}



inline jule::Slice<jule::U8> _1e6a74828_strEsqSeq(jule::Slice<jule::U8> _12414_bytes, jule::I64& _12434_i) {
	jule::I32 _1259_r = _1e6a744d7_runeFromEsqSeq(_12414_bytes,_12434_i);;
	if ((_1259_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1259_r))});
	};
	return static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1259_r));
}



inline jule::I64 _1e6b48be9_findFormatPrefix(jule::Slice<jule::U8>& _922_bytes, jule::I64& _938_start) {
	jule::I64 _1013_i = _938_start;;
	while ((_1013_i < _922_bytes.len())) {
		{
			jule::I32 _1214_r;;
			jule::I64 _1217_size;;
			std::tie(_1214_r,_1217_size) = _1e33ba0ea_DecodeRune(_922_bytes.slice(_1013_i));
			if ((_1214_r == '{')) {
				return _1013_i;
			};
			_1013_i+=_1217_size;
		}
	_iter_next_1b2021942:;
	}
	_iter_end_1b2021942:;;
	return -1LL;
}



inline jule::Slice<jule::U8> _1e6b494ad_getFormatRange(jule::I64& _2624_i, jule::Slice<jule::U8>& _2637_bytes) {
	jule::I64 _279_start = _2624_i;;
	jule::I64 _2813_braces = 0LL;;
	while ((_2624_i < _2637_bytes.len())) {
		{
			jule::I32 _3014_r;;
			jule::I64 _3017_size;;
			std::tie(_3014_r,_3017_size) = _1e33ba0ea_DecodeRune(_2637_bytes.slice(_2624_i));
			_2624_i+=_3017_size;
			{
				auto &_match_expr{ _3014_r };
				
				if (_match_expr == '{') {
					_case_begin_1b2024769:;
					{
						(_2813_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1b20247e1:;
					{
						(_2813_braces)--;
						if ((_2813_braces == 0LL)) {
							return _2637_bytes.slice(_279_start,_2624_i);
						};
					}
				}
				_match_end_1b202435c:;
			};
		}
	_iter_next_1b20238ab:;
	}
	_iter_end_1b20238ab:;;
	return nullptr;
}



inline jule::Slice<jule::U8> _1e6b3064d_fmtByDefault(jule::Any& _4518_arg) {
	if ((_4518_arg == nullptr)) {
		return jule::Slice<jule::U8>::make({'<','n','i','l','>'});
	};
	{
		auto &_match_expr{ _4518_arg };
		
		if (_match_expr.type_is<jule::F32>()) {
			_case_begin_1b20267b0:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e6434c00_FmtFloat(static_cast<jule::F64>(static_cast<jule::F64>(_4518_arg.operator jule::F32())),'g',-1LL,32LL));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1b202645d:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e6434c00_FmtFloat(static_cast<jule::F64>(_4518_arg.operator jule::F64()),'g',-1LL,64LL));
			}
		}
		else if (_match_expr.type_is<jule::I8>()) {
			_case_begin_1b2024b76:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e6a04434_FmtInt(static_cast<jule::I64>(_4518_arg.operator jule::I8()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I16>()) {
			_case_begin_1b2024bdc:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e6a04434_FmtInt(static_cast<jule::I64>(_4518_arg.operator jule::I16()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_1b2026150:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e6a04434_FmtInt(static_cast<jule::I64>(_4518_arg.operator jule::I32()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1b20261b6:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e6a04434_FmtInt(static_cast<jule::I64>(_4518_arg.operator jule::I64()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_1b202622c:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e6a04302_FmtUint(static_cast<jule::U64>(_4518_arg.operator jule::U8()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U16>()) {
			_case_begin_1b2026293:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e6a04302_FmtUint(static_cast<jule::U64>(_4518_arg.operator jule::U16()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U32>()) {
			_case_begin_1b2026309:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e6a04302_FmtUint(static_cast<jule::U64>(_4518_arg.operator jule::U32()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1b2026837:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e6a04302_FmtUint(static_cast<jule::U64>(_4518_arg.operator jule::U64()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1b202689d:;
			{
				return static_cast<jule::Slice<jule::U8>>(_4518_arg.operator jule::Str());
			}
		}
		else if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_1b2026914:;
			{
				if (_4518_arg.operator jule::Bool()) {
					return jule::Slice<jule::U8>::make({'t','r','u','e'});
				};
				return jule::Slice<jule::U8>::make({'f','a','l','s','e'});
			}
		}
		else {
			_case_begin_1b2023a65:;
			{
				return static_cast<jule::Slice<jule::U8>>(jule::to_str(_4518_arg));
			}
		}
		_match_end_1b2023a10:;
	};
}



inline jule::Slice<jule::U8> _1e6b2ee33_applyFmtByDefault(jule::I64& _8327_j, jule::Slice<jule::Any>& _8336_args) {
	jule::Any _849_arg = _8336_args[_8327_j];;
	(_8327_j)++;
	return _1e6b3064d_fmtByDefault(_849_arg);
}



inline jule::Slice<jule::U8> _1e6b3370b_applyFmt(jule::Slice<jule::U8>& _9118_fmt, jule::I64& _9136_j, jule::Slice<jule::Any>& _9145_args) {
	if ((_9118_fmt.len() == 2LL)) {
		return _1e6b2ee33_applyFmtByDefault(_9136_j,_9145_args);
	};
	if (((_9118_fmt.len() == 4LL) && (_9118_fmt == jule::Slice<jule::U8>::make({'{','{','}','}'})))) {
		return jule::Slice<jule::U8>::make({'{','}'});
	};
	return _9118_fmt;
}



inline jule::Slice<jule::U8> _1e6b40d9a_formatBytes(jule::Str _10516_fmt, jule::Slice<jule::Any> _10526_args) {
	jule::Slice<jule::U8> _10613_fmtBytes = static_cast<jule::Slice<jule::U8>>(_10516_fmt);;
	if ((_10526_args.len() == 0LL)) {
		return _10613_fmtBytes;
	};
	jule::Slice<jule::U8> _11213_bytes = jule::Slice<jule::U8>::alloc(0LL,_10516_fmt.len());;
	jule::I64 _11413_j = 0LL;;
	jule::I64 _11513_last = 0LL;;
	jule::I64 _11613_i = _1e6b48be9_findFormatPrefix(_10613_fmtBytes,_11513_last);;
	for (; (_11613_i != -1LL); _11613_i=static_cast<jule::I64>(_1e6b48be9_findFormatPrefix(_10613_fmtBytes,_11613_i))) {
		{
			_11213_bytes=jule::append(_11213_bytes,_10613_fmtBytes.slice(_11513_last,_11613_i));
			jule::Slice<jule::U8> _11917_format = _1e6b494ad_getFormatRange(_11613_i,_10613_fmtBytes);;
			if ((_11917_format == nullptr)) {
				goto _iter_next_1b2031578;
			};
			_11213_bytes=jule::append(_11213_bytes,_1e6b3370b_applyFmt(_11917_format,_11413_j,_10526_args));
			if ((_11413_j >= _10526_args.len())) {
				_11213_bytes=jule::append(_11213_bytes,_10613_fmtBytes.slice(_11613_i));
				_11513_last=static_cast<jule::I64>(_10613_fmtBytes.len());
				goto _iter_end_1b2031578;
			};
			_11513_last=_11613_i;
		}
	_iter_next_1b2031578:;
	}
	_iter_end_1b2031578:;;
	if ((_11513_last < _10613_fmtBytes.len())) {
		_11213_bytes=jule::append(_11213_bytes,_10613_fmtBytes.slice(_11513_last));
	};
	return _11213_bytes;
}



inline jule::Str _1e6b6783e_Format(jule::Str _16511_fmt, jule::Slice<jule::Any> _16521_args) {
	return static_cast<jule::Str>(_1e6b40d9a_formatBytes(_16511_fmt,jule::Any(_16521_args)));
}



inline jule::Bool _1e5e223e1_parameterUsesGenerics(jule::Ptr<_1e5e1ace1_Param>& _37427_p, jule::Slice<jule::Ptr<_1e5d62045_GenericDecl>>& _37439_generics) {
	if (_1e5e1b41d_IsSelf(_37427_p.ptr())) {
		return false;
	};
	return _1e6acd387_kindUsesGenerics(_37427_p.get()._field_Kind.get()._field_Decl.get()._field_Kind,_37439_generics);
}



inline jule::Ptr<_1e6ababe3_TypeSymbol> _1e5e248bb_buildType(jule::Ptr<_1e5d54961_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1e6ababe3_TypeSymbol>(_1e6ababe3_TypeSymbol{._field_Decl=_9418_t, });
}



inline jule::Ptr<_1e6a8bce6_Value> _1e5e24ba7_buildExpr(jule::Ptr<_1e5d58e82_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1e6a8bce6_Value>(_1e6a8bce6_Value{._field_Expr=_10318_expr, });
}



inline jule::Ptr<_1e6ab5d97_TypeAlias> _1e5e24e4e_buildTypeAlias(jule::Ptr<_1e5d6b0b5_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_1e6ab5d97_TypeAlias>(_1e6ab5d97_TypeAlias{._field_Scope=_11223_decl.get()._field_Scope, ._field_Public=_11223_decl.get()._field_Public, ._field_CppLinked=_11223_decl.get()._field_CppLinked, ._field_Token=_11223_decl.get()._field_Token, ._field_Ident=_11223_decl.get()._field_Ident, ._field_Kind=_1e5e248bb_buildType(_11223_decl.get()._field_Kind), });
}



inline jule::Ptr<_1e5d37658_Field> _1e5e2526d_buildField(jule::Ptr<_1e5d6e6a1_FieldDecl> _12319_decl) {
	return jule::new_ptr<_1e5d37658_Field>(_1e5d37658_Field{._field_Token=_12319_decl.get()._field_Token, ._field_Public=_12319_decl.get()._field_Public, ._field_Mutable=_12319_decl.get()._field_Mutable, ._field_Ident=_12319_decl.get()._field_Ident, ._field_Kind=_1e5e248bb_buildType(_12319_decl.get()._field_Kind), ._field_Default=_12319_decl.get()._field_Default});
}



inline jule::Slice<jule::Ptr<_1e5d37658_Field>> _1e5e25515_buildFields(jule::Slice<jule::Ptr<_1e5d6e6a1_FieldDecl>>& _13421_decls) {
	jule::Slice<jule::Ptr<_1e5d37658_Field>> _13513_fields = jule::Slice<jule::Ptr<_1e5d37658_Field>>::alloc(0LL,_13421_decls.len());;
	{
		auto &expr = _13421_decls;
		auto it = expr.begin();
		_iter_begin_1b22841b0:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d6e6a1_FieldDecl> _13617_decl = *it;
			{
				_13513_fields = jule::alloc_for_append(_13513_fields,1);_13513_fields.__push(_1e5e2526d_buildField(_13617_decl));;
			}
			_iter_next_1b22841b0:;
			++it;
			goto _iter_begin_1b22841b0;
		}
		_iter_end_1b22841b0:;
	};
	return _13513_fields;
}



inline jule::Ptr<_1e5d4518d_Struct> _1e5e257ac_buildStruct(jule::Ptr<_1e5d7000e_StructDecl> _14220_decl) {
	return jule::new_ptr<_1e5d4518d_Struct>(_1e5d4518d_Struct{._field_Token=_14220_decl.get()._field_Token, ._field_Ident=_14220_decl.get()._field_Ident, ._field_Fields=_1e5e25515_buildFields(_14220_decl.get()._field_Fields), ._field_Public=_14220_decl.get()._field_Public, ._field_CppLinked=_14220_decl.get()._field_CppLinked, ._field_Directives=_14220_decl.get()._field_Directives, ._field_Generics=_14220_decl.get()._field_Generics, });
}



inline jule::Ptr<_1e5e1ace1_Param> _1e5e25a54_buildParam(jule::Ptr<_1e5d65455_ParamDecl> _15419_decl) {
	return jule::new_ptr<_1e5e1ace1_Param>(_1e5e1ace1_Param{._field_Token=_15419_decl.get()._field_Token, ._field_Mutable=_15419_decl.get()._field_Mutable, ._field_Variadic=_15419_decl.get()._field_Variadic, ._field_Reference=_15419_decl.get()._field_Reference, ._field_Kind=_1e5e248bb_buildType(_15419_decl.get()._field_Kind), ._field_Ident=_15419_decl.get()._field_Ident});
}



inline jule::Slice<jule::Ptr<_1e5e1ace1_Param>> _1e5e25dc8_buildParams(jule::Slice<jule::Ptr<_1e5d65455_ParamDecl>>& _16521_decls) {
	jule::Slice<jule::Ptr<_1e5e1ace1_Param>> _16613_params = jule::Slice<jule::Ptr<_1e5e1ace1_Param>>::alloc(0LL,_16521_decls.len());;
	{
		auto &expr = _16521_decls;
		auto it = expr.begin();
		_iter_begin_1b228704d:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d65455_ParamDecl> _16717_decl = *it;
			{
				_16613_params = jule::alloc_for_append(_16613_params,1);_16613_params.__push(_1e5e25a54_buildParam(_16717_decl));;
			}
			_iter_next_1b228704d:;
			++it;
			goto _iter_begin_1b228704d;
		}
		_iter_end_1b228704d:;
	};
	return _16613_params;
}



inline jule::Ptr<_1e5e1a62b_RetType> _1e5e26170_buildRetType(jule::Ptr<_1e5d57a74_RetTypeDecl> _17321_decl) {
	if (((_17321_decl.get()._field_Idents == nullptr) && (_17321_decl.get()._field_Kind == nullptr))) {
		return nullptr;
	};
	return jule::new_ptr<_1e5e1a62b_RetType>(_1e5e1a62b_RetType{._field_Kind=_1e5e248bb_buildType(_17321_decl.get()._field_Kind), ._field_Idents=_17321_decl.get()._field_Idents});
}



inline jule::Ptr<_1e5e1c62d_Fn> _1e5e26417_buildFn(jule::Ptr<_1e5d66775_FnDecl> _18316_decl) {
	return jule::new_ptr<_1e5e1c62d_Fn>(_1e5e1c62d_Fn{._field_Token=_18316_decl.get()._field_Token, ._field_Global=_18316_decl.get()._field_Global, ._field_Unsafety=_18316_decl.get()._field_Unsafety, ._field_Public=_18316_decl.get()._field_Public, ._field_CppLinked=_18316_decl.get()._field_CppLinked, ._field_Statically=_18316_decl.get()._field_Statically, ._field_Exceptional=_18316_decl.get()._field_Exceptional, ._field_Ident=_18316_decl.get()._field_Ident, ._field_Directives=_18316_decl.get()._field_Directives, ._field_Scope=_18316_decl.get()._field_Scope, ._field_Generics=_18316_decl.get()._field_Generics, ._field_Result=_1e5e26170_buildRetType(_18316_decl.get()._field_Result), ._field_Params=_1e5e25dc8_buildParams(_18316_decl.get()._field_Params), });
}



inline jule::Slice<jule::Ptr<_1e5e1c62d_Fn>> _1e5e266ae_buildMethods(jule::Slice<jule::Ptr<_1e5d66775_FnDecl>>& _20122_decls) {
	jule::Slice<jule::Ptr<_1e5e1c62d_Fn>> _20213_methods = jule::Slice<jule::Ptr<_1e5e1c62d_Fn>>::alloc(0LL,_20122_decls.len());;
	{
		auto &expr = _20122_decls;
		auto it = expr.begin();
		_iter_begin_1b228a9e1:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d66775_FnDecl> _20317_decl = *it;
			{
				_20213_methods = jule::alloc_for_append(_20213_methods,1);_20213_methods.__push(_1e5e26417_buildFn(_20317_decl));;
			}
			_iter_next_1b228a9e1:;
			++it;
			goto _iter_begin_1b228a9e1;
		}
		_iter_end_1b228a9e1:;
	};
	return _20213_methods;
}



inline jule::Ptr<_1e5e2e4db_Trait> _1e5e26956_buildTrait(jule::Ptr<_1e5d70619_TraitDecl> _20919_decl) {
	return jule::new_ptr<_1e5e2e4db_Trait>(_1e5e2e4db_Trait{._field_Token=_20919_decl.get()._field_Token, ._field_Ident=_20919_decl.get()._field_Ident, ._field_Public=_20919_decl.get()._field_Public, ._field_Methods=_1e5e266ae_buildMethods(_20919_decl.get()._field_Methods), });
}



inline jule::Ptr<_1e5e30b3b_EnumItem> _1e5e26bed_buildEnumItem(jule::Ptr<_1e5d6c924_EnumItemDecl> _21822_decl) {
	return jule::new_ptr<_1e5e30b3b_EnumItem>(_1e5e30b3b_EnumItem{._field_Token=_21822_decl.get()._field_Token, ._field_Ident=_21822_decl.get()._field_Ident, ._field_Value=_1e5e24ba7_buildExpr(_21822_decl.get()._field_Expr)});
}



inline jule::Slice<jule::Ptr<_1e5e30b3b_EnumItem>> _1e5e26e95_buildEnumItems(jule::Slice<jule::Ptr<_1e5d6c924_EnumItemDecl>>& _22624_decls) {
	jule::Slice<jule::Ptr<_1e5e30b3b_EnumItem>> _22713_items = jule::Slice<jule::Ptr<_1e5e30b3b_EnumItem>>::alloc(0LL,_22624_decls.len());;
	{
		auto &expr = _22624_decls;
		auto it = expr.begin();
		_iter_begin_1b228d076:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d6c924_EnumItemDecl> _22817_decl = *it;
			{
				_22713_items = jule::alloc_for_append(_22713_items,1);_22713_items.__push(_1e5e26bed_buildEnumItem(_22817_decl));;
			}
			_iter_next_1b228d076:;
			++it;
			goto _iter_begin_1b228d076;
		}
		_iter_end_1b228d076:;
	};
	return _22713_items;
}



inline jule::Ptr<_1e5e31631_Enum> _1e5e2723c_buildEnum(jule::Ptr<_1e5d6d44c_EnumDecl> _23418_decl) {
	return jule::new_ptr<_1e5e31631_Enum>(_1e5e31631_Enum{._field_Token=_23418_decl.get()._field_Token, ._field_Public=_23418_decl.get()._field_Public, ._field_Ident=_23418_decl.get()._field_Ident, ._field_Kind=_1e5e248bb_buildType(_23418_decl.get()._field_Kind), ._field_Items=_1e5e26e95_buildEnumItems(_23418_decl.get()._field_Items)});
}



inline jule::Ptr<_1e5e32665_TypeEnumItem> _1e5e2768d_buildTypeEnumItem(jule::Ptr<_1e5d6de53_TypeEnumItemDecl> _24426_decl) {
	return jule::new_ptr<_1e5e32665_TypeEnumItem>(_1e5e32665_TypeEnumItem{._field_Token=_24426_decl.get()._field_Token, ._field_Ident=_24426_decl.get()._field_Ident, ._field_Kind=_1e5e248bb_buildType(_24426_decl.get()._field_Kind)});
}



inline jule::Slice<jule::Ptr<_1e5e32665_TypeEnumItem>> _1e5e27935_buildTypeEnumItems(jule::Slice<jule::Ptr<_1e5d6de53_TypeEnumItemDecl>>& _25228_decls) {
	jule::Slice<jule::Ptr<_1e5e32665_TypeEnumItem>> _25313_items = jule::Slice<jule::Ptr<_1e5e32665_TypeEnumItem>>::alloc(0LL,_25228_decls.len());;
	{
		auto &expr = _25228_decls;
		auto it = expr.begin();
		_iter_begin_1b229084d:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d6de53_TypeEnumItemDecl> _25417_decl = *it;
			{
				_25313_items = jule::alloc_for_append(_25313_items,1);_25313_items.__push(_1e5e2768d_buildTypeEnumItem(_25417_decl));;
			}
			_iter_next_1b229084d:;
			++it;
			goto _iter_begin_1b229084d;
		}
		_iter_end_1b229084d:;
	};
	return _25313_items;
}



inline jule::Ptr<_1e5e32c2b_TypeEnum> _1e5e27bcc_buildTypeEnum(jule::Ptr<_1e5d6e151_TypeEnumDecl> _26022_decl) {
	return jule::new_ptr<_1e5e32c2b_TypeEnum>(_1e5e32c2b_TypeEnum{._field_Token=_26022_decl.get()._field_Token, ._field_Public=_26022_decl.get()._field_Public, ._field_Ident=_26022_decl.get()._field_Ident, ._field_Items=_1e5e27935_buildTypeEnumItems(_26022_decl.get()._field_Items)});
}



inline jule::Ptr<_1e6a3dd20_Var> _1e5e27e74_buildVar(jule::Ptr<_1e5d67754_VarDecl> _26917_decl) {
	return jule::new_ptr<_1e6a3dd20_Var>(_1e6a3dd20_Var{._field_Token=_26917_decl.get()._field_Token, ._field_Ident=_26917_decl.get()._field_Ident, ._field_CppLinked=_26917_decl.get()._field_CppLinked, ._field_Constant=_26917_decl.get()._field_Constant, ._field_Mutable=_26917_decl.get()._field_Mutable, ._field_Public=_26917_decl.get()._field_Public, ._field_Statically=_26917_decl.get()._field_Statically, ._field_Reference=_26917_decl.get()._field_Reference, ._field_Kind=_1e5e248bb_buildType(_26917_decl.get()._field_Kind), ._field_Value=_1e5e24ba7_buildExpr(_26917_decl.get()._field_Expr), ._field_Refers=static__1e5e2348b_new(), ._field_Directives=_26917_decl.get()._field_Directives, });
}



inline jule::Slice<jule::Ptr<_1e6a3dd20_Var>> _1e5e2821b_buildVars(jule::Slice<jule::Ptr<_1e5d67754_VarDecl>> _28618_decls) {
	jule::Slice<jule::Ptr<_1e6a3dd20_Var>> _28713_vars = jule::Slice<jule::Ptr<_1e6a3dd20_Var>>::alloc(0LL,_28618_decls.len());;
	{
		auto &expr = _28618_decls;
		auto it = expr.begin();
		_iter_begin_1b2293b09:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d67754_VarDecl> _28817_decl = *it;
			{
				_28713_vars = jule::alloc_for_append(_28713_vars,1);_28713_vars.__push(_1e5e27e74_buildVar(_28817_decl));;
			}
			_iter_next_1b2293b09:;
			++it;
			goto _iter_begin_1b2293b09;
		}
		_iter_end_1b2293b09:;
	};
	return _28713_vars;
}



inline jule::Ptr<_1e5eb8a5e_Impl> _1e5e284b3_buildImpl(jule::Ptr<_1e5d70c24_Impl> _29418_decl) {
	return jule::new_ptr<_1e5eb8a5e_Impl>(_1e5eb8a5e_Impl{._field_Base=_29418_decl.get()._field_Base, ._field_Dest=_29418_decl.get()._field_Dest, ._field_Methods=_1e5e266ae_buildMethods(_29418_decl.get()._field_Methods), ._field_Statics=_1e5e2821b_buildVars(_29418_decl.get()._field_Statics)});
}



inline jule::Bool _1e5e95c17_matchConstraint(jule::Str& _14221_c, jule::Ptr<_1e6ab6a8a_TypeKind>& _14234_g) {
	{
		auto &_match_expr{ _14221_c };
		
		if (_match_expr == jule::Str("signed", 6)) {
			_case_begin_1b22eec31:;
			{
				jule::Ptr<_1e6abb562_Prim> _14513_prim = _1e6ab8b9c_Prim(_14234_g.ptr());;
				if ((_14513_prim == nullptr)) {
					return false;
				};
				return _1e6a063e2_IsSigNum(_14513_prim.get()._field_Kind);
			}
		}
		else if (_match_expr == jule::Str("unsigned", 8)) {
			_case_begin_1b22eec97:;
			{
				jule::Ptr<_1e6abb562_Prim> _15113_prim = _1e6ab8b9c_Prim(_14234_g.ptr());;
				if ((_15113_prim == nullptr)) {
					return false;
				};
				return _1e6a05e19_IsUnsigInt(_15113_prim.get()._field_Kind);
			}
		}
		else if (_match_expr == jule::Str("float", 5)) {
			_case_begin_1b22eedc9:;
			{
				jule::Ptr<_1e6abb562_Prim> _15713_prim = _1e6ab8b9c_Prim(_14234_g.ptr());;
				if ((_15713_prim == nullptr)) {
					return false;
				};
				return _1e6a0617d_IsFloat(_15713_prim.get()._field_Kind);
			}
		}
		else if (_match_expr == jule::Str("numeric", 7)) {
			_case_begin_1b22eee40:;
			{
				jule::Ptr<_1e6abb562_Prim> _16313_prim = _1e6ab8b9c_Prim(_14234_g.ptr());;
				if ((_16313_prim == nullptr)) {
					return false;
				};
				return _1e6a062b0_IsNum(_16313_prim.get()._field_Kind);
			}
		}
		else if (_match_expr == jule::Str("mutable", 7)) {
			_case_begin_1b22eeea6:;
			{
				return _1e6ab7e87_Mutable(_14234_g.ptr());
			}
		}
		else if (_match_expr == jule::Str("immutable", 9)) {
			_case_begin_1b230001c:;
			{
				return (!(_1e6ab7e87_Mutable(_14234_g.ptr())));
			}
		}
		else if (_match_expr == jule::Str("comparable", 10)) {
			_case_begin_1b2300083:;
			{
				return true;
			}
		}
		else if (_match_expr == jule::Str("ordered", 7)) {
			_case_begin_1b23000e9:;
			{
				jule::Ptr<_1e6abb562_Prim> _17513_prim = _1e6ab8b9c_Prim(_14234_g.ptr());;
				if ((_17513_prim != nullptr)) {
					return (_1e6a062b0_IsNum(_17513_prim.get()._field_Kind) || _1e6abe796_IsStr(_17513_prim.ptr()));
				};
				if ((_1e6ab9175_Ptr(_14234_g.ptr()) != nullptr)) {
					return true;
				};
				jule::Ptr<_1e5d714d8_StructIns> _18213_s = _1e6aba0ee_Struct(_14234_g.ptr());;
				if ((_18213_s != nullptr)) {
					return ((((_18213_s.get()._field_Operators._field_Gt != nullptr) && (_18213_s.get()._field_Operators._field_GtEq != nullptr)) && (_18213_s.get()._field_Operators._field_Lt != nullptr)) && (_18213_s.get()._field_Operators._field_LtEq != nullptr));
				};
				jule::Ptr<_1e5e31631_Enum> _18913_enm = _1e6ab93d9_Enum(_14234_g.ptr());;
				if ((_18913_enm != nullptr)) {
					return _1e6a062b0_IsNum(_1e6ab6e86_Str(_18913_enm.get()._field_Kind.get()._field_Kind.ptr()));
				};
				return false;
			}
		}
		else {
			_case_begin_1b22ee956:;
			{
				return false;
			}
		}
		_match_end_1b22ee89b:;
	};
}



inline jule::Bool _1e5e9780c_isBuiltinConstraint(jule::Str& _19925_ident) {
	{
		auto &expr = _1e5e51024_builtinConstraints;
		auto it = expr.begin();
		_iter_begin_1b2305bb0:;
		if (it != expr.end()) {
			jule::Str &_20012_bc = *it;
			{
				if ((_19925_ident == _20012_bc)) {
					return true;
				};
			}
			_iter_next_1b2305bb0:;
			++it;
			goto _iter_begin_1b2305bb0;
		}
		_iter_end_1b2305bb0:;
	};
	return false;
}



inline jule::Ptr<_1e6a09505_scopeChecker> _1e5ea1ad0_newScopeCheckerBase(jule::Ptr<_1e6a22441_Sema>& _5929_s, jule::Ptr<_1e5e202ce_FnIns> _5943_owner) {
	return jule::new_ptr<_1e6a09505_scopeChecker>(_1e6a09505_scopeChecker{._field_s=_5929_s, ._field_owner=_5943_owner, ._field_table=jule::new_ptr<_1e6a86010_SymbolTable>(), });
}



inline jule::Ptr<_1e6a09505_scopeChecker> _1e5ea265d_newScopeChecker(jule::Ptr<_1e6a22441_Sema>& _6725_s, jule::Ptr<_1e5e202ce_FnIns> _6739_owner) {
	jule::Ptr<_1e6a09505_scopeChecker> _6813_base = _1e5ea1ad0_newScopeCheckerBase(_6725_s,_6739_owner);;
	_6813_base.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1e6a0912b_scopeLabel>>>(nullptr);
	_6813_base.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1e6a09318_scopeGoto>>>(nullptr);
	return _6813_base;
}



inline jule::Ptr<_1e6a0912b_scopeLabel> _1e5ea351b_findLabelParent(jule::Str _7720_ident, jule::Ptr<_1e6a09505_scopeChecker> _7736_scope) {
	jule::Ptr<_1e6a0912b_scopeLabel> _7813_label = _1e6a0ac76_findLabelScope(_7736_scope, _7720_ident);;
	while ((_7813_label == nullptr)) {
		{
			if (((_7736_scope.get()._field_parent == nullptr) || (_7736_scope.get()._field_owner != nullptr))) {
				return nullptr;
			};
			_7736_scope=_7736_scope.get()._field_parent;
			_7813_label=_1e6a0ac76_findLabelScope(_7736_scope, _7720_ident);
		}
	_iter_next_1b231e338:;
	}
	_iter_end_1b231e338:;;
	return _7813_label;
}



inline jule::Bool _1e5e97664_modelIsGotoScope(jule::Any _9121_Model, jule::Ptr<_1e6a06700_Scope>& _9134_sc) {
	{
		auto &_match_expr{ _9121_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1e5e1602d_FnCallExprModel>>()) {
			_case_begin_1b232122a:;
			{
				jule::Ptr<_1e5e1602d_FnCallExprModel> _9413_fcem = _9121_Model.operator jule::Ptr<_1e5e1602d_FnCallExprModel>();;
				if ((_9413_fcem.get()._field_Except == _9134_sc)) {
					return true;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a8ac6d_Data>>()) {
			_case_begin_1b23212a2:;
			{
				jule::Ptr<_1e6a8ac6d_Data> _9913_d = _9121_Model.operator jule::Ptr<_1e6a8ac6d_Data>();;
				return _1e5e97664_modelIsGotoScope(jule::Any(_9913_d.get()._field_Model),_9134_sc);
			}
		}
		_match_end_1b232111a:;
	};
	return false;
}



inline jule::Bool _1e5ea44d9_stmtIsGotoScope(jule::Any& _10521_stmt, jule::Ptr<_1e6a06700_Scope>& _10534_sc) {
	{
		auto &_match_expr{ _10521_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1e6a06700_Scope>>()) {
			_case_begin_1b23233e7:;
			{
				return (_10521_stmt.operator jule::Ptr<_1e6a06700_Scope>() == _10534_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a06ea3_InfIter>>()) {
			_case_begin_1b232345d:;
			{
				return (_10521_stmt.operator jule::Ptr<_1e6a06ea3_InfIter>().get()._field_Scope == _10534_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a0737c_RangeIter>>()) {
			_case_begin_1b23234c4:;
			{
				jule::Ptr<_1e6a0737c_RangeIter> _11213_it = _10521_stmt.operator jule::Ptr<_1e6a0737c_RangeIter>();;
				return ((_11213_it.get()._field_Scope == _10534_sc) || _1e5e97664_modelIsGotoScope(jule::Any(_11213_it.get()._field_Expr.get()._field_Model),_10534_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a07190_WhileIter>>()) {
			_case_begin_1b23235b2:;
			{
				jule::Ptr<_1e6a07190_WhileIter> _11513_it = _10521_stmt.operator jule::Ptr<_1e6a07190_WhileIter>();;
				return (((_11513_it.get()._field_Scope == _10534_sc) || _1e5e97664_modelIsGotoScope(jule::Any(_11513_it.get()._field_Expr),_10534_sc)) || _1e5e97664_modelIsGotoScope(jule::Any(_11513_it.get()._field_Next),_10534_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a083d3_Match>>()) {
			_case_begin_1b2323639:;
			{
				jule::Ptr<_1e6a083d3_Match> _12013_m = _10521_stmt.operator jule::Ptr<_1e6a083d3_Match>();;
				{
					auto &expr = _12013_m.get()._field_Cases;
					auto it = expr.begin();
					_iter_begin_1b232720e:;
					if (it != expr.end()) {
						jule::Ptr<_1e6a08933_Case> &_12116_c = *it;
						{
							if ((_12116_c.get()._field_Scope == _10534_sc)) {
								return true;
							};
							{
								auto &expr = _12116_c.get()._field_Exprs;
								auto it = expr.begin();
								_iter_begin_1b23281cc:;
								if (it != expr.end()) {
									jule::Ptr<_1e6a8ac6d_Data> &_12520_expr = *it;
									{
										if (_1e5e97664_modelIsGotoScope(jule::Any(_12520_expr.get()._field_Model),_10534_sc)) {
											return true;
										};
									}
									_iter_next_1b23281cc:;
									++it;
									goto _iter_begin_1b23281cc;
								}
								_iter_end_1b23281cc:;
							};
						}
						_iter_next_1b232720e:;
						++it;
						goto _iter_begin_1b232720e;
					}
					_iter_end_1b232720e:;
				};
				return ((_12013_m.get()._field_Default != nullptr) && (_12013_m.get()._field_Default.get()._field_Scope == _10534_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a06cb6_Conditional>>()) {
			_case_begin_1b23236b1:;
			{
				jule::Ptr<_1e6a06cb6_Conditional> _13313_c = _10521_stmt.operator jule::Ptr<_1e6a06cb6_Conditional>();;
				{
					auto &expr = _13313_c.get()._field_Elifs;
					auto it = expr.begin();
					_iter_begin_1b23297b6:;
					if (it != expr.end()) {
						jule::Ptr<_1e6a068dc_If> &_13416_elif = *it;
						{
							if (((_13416_elif.get()._field_Scope == _10534_sc) || _1e5e97664_modelIsGotoScope(jule::Any(_13416_elif.get()._field_Expr),_10534_sc))) {
								return true;
							};
						}
						_iter_next_1b23297b6:;
						++it;
						goto _iter_begin_1b23297b6;
					}
					_iter_end_1b23297b6:;
				};
				return ((_13313_c.get()._field_Default != nullptr) && (_13313_c.get()._field_Default.get()._field_Scope == _10534_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a8ac6d_Data>>()) {
			_case_begin_1b2323738:;
			{
				jule::Ptr<_1e6a8ac6d_Data> _14113_d = _10521_stmt.operator jule::Ptr<_1e6a8ac6d_Data>();;
				return _1e5e97664_modelIsGotoScope(jule::Any(_14113_d.get()._field_Model),_10534_sc);
			}
		}
		else {
			_case_begin_1b23216d1:;
			{
				return false;
			}
		}
		_match_end_1b232167b:;
	};
}



inline jule::I64 _1e5ea5397_countMatchType(jule::Ptr<_1e6a083d3_Match>& _14820_m, jule::Ptr<_1e6ab6a8a_TypeKind>& _14832_t) {
	jule::I64 _14913_n = 0LL;;
	jule::Str _1509_kind = _1e6ab6e86_Str(_14832_t.ptr());;
	_julec_label_loop:;
	{
		auto &expr = _14820_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1b232c7db:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a08933_Case> &_15212_c = *it;
			{
				if ((_15212_c == nullptr)) {
					goto _iter_next_1b232c7db;
				};
				{
					auto &expr = _15212_c.get()._field_Exprs;
					auto it = expr.begin();
					_iter_begin_1b232d17c:;
					if (it != expr.end()) {
						jule::Ptr<_1e6a8ac6d_Data> &_15716_expr = *it;
						{
							if ((_15716_expr == nullptr)) {
								goto _iter_end_1b232c7db;
							};
							if ((_1509_kind == _1e6ab6e86_Str(_15716_expr.get()._field_Model.operator jule::Ptr<_1e6ab6a8a_TypeKind>().ptr()))) {
								(_14913_n)++;
							};
						}
						_iter_next_1b232d17c:;
						++it;
						goto _iter_begin_1b232d17c;
					}
					_iter_end_1b232d17c:;
				};
			}
			_iter_next_1b232c7db:;
			++it;
			goto _iter_begin_1b232c7db;
		}
		_iter_end_1b232c7db:;
	};
	return _14913_n;
}



inline jule::Slice<jule::Ptr<_1e6a8ac6d_Data>> _1e5eb3152_getDatasFromTupleData(jule::Ptr<_1e6a8ac6d_Data>& _17231_d) {
	if ((_1e6aba83b_Tup(_17231_d.get()._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _17231_d.get()._field_Model };
			
			if (_match_expr.type_is<jule::Ptr<_1e5e17c55_TupleExprModel>>()) {
				_case_begin_1b23323c3:;
				{
					return _17231_d.get()._field_Model.operator jule::Ptr<_1e5e17c55_TupleExprModel>().get()._field_Datas;
				}
			}
			else {
				_case_begin_1b232ecc7:;
				{
					jule::Ptr<_1e6ac12d1_Tuple> _17821_t = _1e6aba83b_Tup(_17231_d.get()._field_Kind.ptr());;
					jule::Slice<jule::Ptr<_1e6a8ac6d_Data>> _17921_r = jule::Slice<jule::Ptr<_1e6a8ac6d_Data>>::alloc(0LL,_17821_t.get()._field_Types.len());;
					{
						auto &expr = _17821_t.get()._field_Types;
						auto it = expr.begin();
						_iter_begin_1b23312e5:;
						if (it != expr.end()) {
							jule::Ptr<_1e6ab6a8a_TypeKind> _18025_kind = *it;
							{
								_17921_r = jule::alloc_for_append(_17921_r,1);_17921_r.__push(jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=_18025_kind, ._field_Mutable=true, }));;
							}
							_iter_next_1b23312e5:;
							++it;
							goto _iter_begin_1b23312e5;
						}
						_iter_end_1b23312e5:;
					};
					return _17921_r;
				}
			}
			_match_end_1b232eb51:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1e6a8ac6d_Data>>::make({_17231_d});
	};
}



inline jule::Slice<jule::Any> _1e5eb609a_getExprModels(jule::Any& _19323_m) {
	{
		auto &_match_expr{ _19323_m };
		
		if (_match_expr.type_is<jule::Ptr<_1e5d59b0e_TupleExpr>>()) {
			_case_begin_1b2332802:;
			{
				jule::Ptr<_1e5d59b0e_TupleExpr> _19617_tup = _19323_m.operator jule::Ptr<_1e5d59b0e_TupleExpr>();;
				jule::Slice<jule::Any> _19717_models = jule::Slice<jule::Any>::alloc(0LL,_19617_tup.get()._field_Expr.len());;
				{
					auto &expr = _19617_tup.get()._field_Expr;
					auto it = expr.begin();
					_iter_begin_1b2333d86:;
					if (it != expr.end()) {
						jule::Ptr<_1e5d58e82_Expr> _19821_expr = *it;
						{
							_19717_models = jule::alloc_for_append(_19717_models,1);_19717_models.__push(_19821_expr.get()._field_Kind);;
						}
						_iter_next_1b2333d86:;
						++it;
						goto _iter_begin_1b2333d86;
					}
					_iter_end_1b2333d86:;
				};
				return _19717_models;
			}
		}
		else {
			_case_begin_1b232edc6:;
			{
				return jule::Slice<jule::Any>::make({_19323_m});
			}
		}
		_match_end_1b233268c:;
	};
}



inline jule::Bool _1e5eb6ad4_checkMut(jule::Ptr<_1e6a22441_Sema>& _20718_s, jule::Ptr<_1e6a8ac6d_Data>& _20729_left, jule::Ptr<_1e6a8ac6d_Data> _20746_right, jule::Ptr<_1e47137a5_Token> _20760_op) {
	jule::Bool _20774_ok = jule::Bool();
	{
		
		if ((!(_20729_left.get()._field_Mutable))) {
			_case_begin_1b2335618:;
			{
				_1e6a25103_pushErr(_20718_s.ptr(), _20760_op,jule::Str("cannot assign to immutable storage", 34),jule::Slice<jule::Any>());
				_20774_ok = false;
				return _20774_ok;
			}
		}
		else if ((((_20746_right != nullptr) && (!(_20746_right.get()._field_Mutable))) && _1e6ab7e87_Mutable(_20746_right.get()._field_Kind.ptr()))) {
			_case_begin_1b2335728:;
			{
				if (((_20760_op.get()._field_Kind != jule::Str("=", 1)) && (_1e6aba0ee_Struct(_20746_right.get()._field_Kind.ptr()) != nullptr))) {
					_20774_ok = true;
					return _20774_ok;
				};
				_1e6a25103_pushErr(_20718_s.ptr(), _20760_op,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_1e6ab6e86_Str(_20746_right.get()._field_Kind.ptr()))}));
				_20774_ok = false;
				return _20774_ok;
			}
		}
		else {
			_case_begin_1b2334edb:;
			{
				_20774_ok = true;
				return _20774_ok;
			}
		}
		_match_end_1b23345a1:;
	};
}



inline jule::Bool _1e5eb7662_checkAssign(jule::Ptr<_1e6a22441_Sema>& _22621_s, jule::Ptr<_1e6a8ac6d_Data>& _22636_left, jule::Ptr<_1e6a8ac6d_Data> _22653_right, jule::Ptr<_1e47137a5_Token> _22667_op) {
	jule::Bool _22681_ok = jule::Bool();
	jule::Ptr<_1e5e202ce_FnIns> _2279_f = _1e6ab9d8a_Fn(_22636_left.get()._field_Kind.ptr());;
	if ((((_2279_f != nullptr) && (_2279_f.get()._field_Decl != nullptr)) && _2279_f.get()._field_Decl.get()._field_Global)) {
		_1e6a25103_pushErr(_22621_s.ptr(), _22667_op,jule::Str("type is not support assignment", 30),jule::Slice<jule::Any>());
		_22681_ok = false;
		return _22681_ok;
	};
	{
		
		if (_1e6a8b631_IsConst(_22636_left.ptr())) {
			_case_begin_1b233a62e:;
			{
				_1e6a25103_pushErr(_22621_s.ptr(), _22667_op,jule::Str("constants is can't assign", 25),jule::Slice<jule::Any>());
				_1e6a25422_pushSugggestion(_22621_s.ptr(), jule::Str("remove constant qualifer if you need to assign", 46),jule::Slice<jule::Any>());
				_22681_ok = false;
				return _22681_ok;
			}
		}
		else if ((!(_22636_left.get()._field_Lvalue))) {
			_case_begin_1b233a70b:;
			{
				_1e6a25103_pushErr(_22621_s.ptr(), _22667_op,jule::Str("invalid expression: expected lvalue for assignment", 50),jule::Slice<jule::Any>());
				_22681_ok = false;
				return _22681_ok;
			}
		}
		else if ((!(_1e5eb6ad4_checkMut(_22621_s,_22636_left,_22653_right,_22667_op)))) {
			_case_begin_1b233a783:;
			{
				_22681_ok = false;
				return _22681_ok;
			}
		}
		else {
			_case_begin_1b2339ed0:;
			{
				_22681_ok = true;
				return _22681_ok;
			}
		}
		_match_end_1b2339d7b:;
	};
}



inline jule::Bool _1e5eb2ccd_isValidAstStForNextSt(jule::Any& _24831_n) {
	{
		auto &_match_expr{ _24831_n };
		
		if (_match_expr.type_is<jule::Ptr<_1e5d636d9_AssignSt>>()) {
			_case_begin_1b233a83d:;
			{
				return (!(_24831_n.operator jule::Ptr<_1e5d636d9_AssignSt>().get()._field_Declarative));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d58e82_Expr>>()) {
			_case_begin_1b233a8a4:;
			{
				return true;
			}
		}
		else {
			_case_begin_1b233c125:;
			{
				return false;
			}
		}
		_match_end_1b233c411:;
	};
}



inline jule::Bool _1e5e64ad7_isValidStForNextSt(jule::Any& _25924_st) {
	{
		auto &_match_expr{ _25924_st };
		
		if (_match_expr.type_is<jule::Ptr<_1e6a07d1c_Postfix>>() || _match_expr.type_is<jule::Ptr<_1e6a08009_Assign>>() || _match_expr.type_is<jule::Ptr<_1e6a081e6_MultiAssign>>()) {
			_case_begin_1b233d27a:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6a8ac6d_Data>>()) {
			_case_begin_1b233d2e1:;
			{
				{
					auto &_match_expr{ _25924_st.operator jule::Ptr<_1e6a8ac6d_Data>().get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_1e5e1602d_FnCallExprModel>>()) {
						_case_begin_1b233e6cc:;
						{
							return true;
						}
					}
					else {
						_case_begin_1b233e666:;
						{
							return false;
						}
					}
					_match_end_1b233e402:;
				};
			}
		}
		else {
			_case_begin_1b233cb92:;
			{
				return false;
			}
		}
		_match_end_1b233caa4:;
	};
}



inline jule::Bool _1e5ea1393_stmtIsDef(jule::Any& _27715_st) {
	{
		auto &_match_expr{ _27715_st };
		
		if (_match_expr.type_is<jule::Ptr<_1e6a3dd20_Var>>()) {
			_case_begin_1b234036a:;
			{
				return true;
			}
		}
		else {
			_case_begin_1b233e303:;
			{
				return false;
			}
		}
		_match_end_1b233e29d:;
	};
}



inline jule::Ptr<_1e6a3dd20_Var> _1e6a16de7_findVarInPackage(jule::Slice<jule::Ptr<_1e6a86010_SymbolTable>>& _4626_files, jule::Str _4649_ident, jule::Bool _4661_cpp_linked) {
	{
		auto &expr = _4626_files;
		auto it = expr.begin();
		_iter_begin_1b24a04a8:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a86010_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_1e6a3dd20_Var> _4817_v = _1e6a86be2_FindVar(_4717_f.ptr(), _4649_ident,_4661_cpp_linked);;
				if ((_4817_v != nullptr)) {
					return _4817_v;
				};
			}
			_iter_next_1b24a04a8:;
			++it;
			goto _iter_begin_1b24a04a8;
		}
		_iter_end_1b24a04a8:;
	};
	return nullptr;
}



inline jule::Ptr<_1e6ab5d97_TypeAlias> _1e6a17326_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1e6a86010_SymbolTable>>& _5832_files, jule::Str _5855_ident, jule::Bool _5867_cpp_linked) {
	{
		auto &expr = _5832_files;
		auto it = expr.begin();
		_iter_begin_1b24a1a5e:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a86010_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_1e6ab5d97_TypeAlias> _6017_ta = _1e6a87099_FindTypeAlias(_5917_f.ptr(), _5855_ident,_5867_cpp_linked);;
				if ((_6017_ta != nullptr)) {
					return _6017_ta;
				};
			}
			_iter_next_1b24a1a5e:;
			++it;
			goto _iter_begin_1b24a1a5e;
		}
		_iter_end_1b24a1a5e:;
	};
	return nullptr;
}



inline jule::Ptr<_1e5d4518d_Struct> _1e6a17711_findStructInPackage(jule::Slice<jule::Ptr<_1e6a86010_SymbolTable>>& _7029_files, jule::Str _7052_ident, jule::Bool _7064_cpp_linked) {
	{
		auto &expr = _7029_files;
		auto it = expr.begin();
		_iter_begin_1b24a3104:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a86010_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_1e5d4518d_Struct> _7217_s = _1e6a87451_FindStruct(_7117_f.ptr(), _7052_ident,_7064_cpp_linked);;
				if ((_7217_s != nullptr)) {
					return _7217_s;
				};
			}
			_iter_next_1b24a3104:;
			++it;
			goto _iter_begin_1b24a3104;
		}
		_iter_end_1b24a3104:;
	};
	return nullptr;
}



inline jule::Ptr<_1e5e1c62d_Fn> _1e6a17b73_findFnInPackage(jule::Slice<jule::Ptr<_1e6a86010_SymbolTable>>& _8225_files, jule::Str _8248_ident, jule::Bool _8260_cpp_linked) {
	{
		auto &expr = _8225_files;
		auto it = expr.begin();
		_iter_begin_1b24a4699:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a86010_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_1e5e1c62d_Fn> _8417_f = _1e6a87808_FindFn(_8317_file.ptr(), _8248_ident,_8260_cpp_linked);;
				if ((_8417_f != nullptr)) {
					return _8417_f;
				};
			}
			_iter_next_1b24a4699:;
			++it;
			goto _iter_begin_1b24a4699;
		}
		_iter_end_1b24a4699:;
	};
	return nullptr;
}



inline jule::Ptr<_1e5e2e4db_Trait> _1e6a17e81_findTraitInPackage(jule::Slice<jule::Ptr<_1e6a86010_SymbolTable>>& _9428_files, jule::Str _9451_ident) {
	{
		auto &expr = _9428_files;
		auto it = expr.begin();
		_iter_begin_1b24a4c93:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a86010_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_1e5e2e4db_Trait> _9617_t = _1e6a87b16_FindTrait(_9517_f.ptr(), _9451_ident);;
				if ((_9617_t != nullptr)) {
					return _9617_t;
				};
			}
			_iter_next_1b24a4c93:;
			++it;
			goto _iter_begin_1b24a4c93;
		}
		_iter_end_1b24a4c93:;
	};
	return nullptr;
}



inline jule::Ptr<_1e5e31631_Enum> _1e6a182c2_findEnumInPackage(jule::Slice<jule::Ptr<_1e6a86010_SymbolTable>>& _10627_files, jule::Str _10650_ident) {
	{
		auto &expr = _10627_files;
		auto it = expr.begin();
		_iter_begin_1b24a614b:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a86010_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_1e5e31631_Enum> _10817_e = _1e6a87e24_FindEnum(_10717_f.ptr(), _10650_ident);;
				if ((_10817_e != nullptr)) {
					return _10817_e;
				};
			}
			_iter_next_1b24a614b:;
			++it;
			goto _iter_begin_1b24a614b;
		}
		_iter_end_1b24a614b:;
	};
	return nullptr;
}



inline jule::Ptr<_1e5e32c2b_TypeEnum> _1e6a18613_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1e6a86010_SymbolTable>>& _11831_files, jule::Str _11854_ident) {
	{
		auto &expr = _11831_files;
		auto it = expr.begin();
		_iter_begin_1b24a7515:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a86010_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_1e5e32c2b_TypeEnum> _12017_e = _1e6a88232_FindTypeEnum(_11917_f.ptr(), _11854_ident);;
				if ((_12017_e != nullptr)) {
					return _12017_e;
				};
			}
			_iter_next_1b24a7515:;
			++it;
			goto _iter_begin_1b24a7515;
		}
		_iter_end_1b24a7515:;
	};
	return nullptr;
}



inline jule::Bool _1e6a1e828_isStdPackage(jule::Str _35017_f, jule::Str _35025_p) {
	return _1e350be95_HasPrefix(_35017_f,_1e34d0919_Join(jule::Slice<jule::Str>::make({_1e441574e_PathStdlib,_35025_p})));
}



inline jule::Bool _1e6a20582_isValidModelForRef(jule::Any& _1228_m) {
	{
		auto &_match_expr{ _1228_m };
		
		if (_match_expr.type_is<jule::Ptr<_1e6a3dd20_Var>>()) {
			_case_begin_1b24b9747:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e172b5_StructSubIdentExprModel>>()) {
			_case_begin_1b24b97ad:;
			{
				jule::Ptr<_1e5e172b5_StructSubIdentExprModel> _1717_model = _1228_m.operator jule::Ptr<_1e5e172b5_StructSubIdentExprModel>();;
				return _1e6a20582_isValidModelForRef(_1717_model.get()._field_Expr.get()._field_Model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e16d97_TraitSubIdentExprModel>>()) {
			_case_begin_1b24b9824:;
			{
				jule::Ptr<_1e5e16d97_TraitSubIdentExprModel> _2017_model = _1228_m.operator jule::Ptr<_1e5e16d97_TraitSubIdentExprModel>();;
				return _1e6a20582_isValidModelForRef(_2017_model.get()._field_Expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e1558d_UnaryExprModel>>()) {
			_case_begin_1b24b999a:;
			{
				jule::Ptr<_1e5e1558d_UnaryExprModel> _2317_unary = _1228_m.operator jule::Ptr<_1e5e1558d_UnaryExprModel>();;
				if ((_2317_unary.get()._field_Op.get()._field_Kind != jule::Str("*", 1))) {
					return false;
				};
				if ((_1e6ab9175_Ptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
					return true;
				};
				if ((_1e6ab8e11_Sptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) == nullptr)) {
					return false;
				};
				return _1e6a20582_isValidModelForRef(_2317_unary.get()._field_Expr.get()._field_Model);
			}
		}
		else {
			_case_begin_1b24b904e:;
			{
				return false;
			}
		}
		_match_end_1b24b8ee9:;
	};
}



inline _1e43e3a18_Log _1e6a20a27_compilerErr(jule::Ptr<_1e47137a5_Token>& _4117_token, jule::Bool _4132_line, jule::Str _4144_fmt, jule::Slice<jule::Any> _4157_args) {
	_1e43e3a18_Log _4213_log = _1e43e3a18_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_4117_token.get()._field_Row, ._field_Column=_4117_token.get()._field_Column, ._field_Path=_4117_token.get()._field_File.get()._field_Path, ._field_Text=_1e43e3e58_Logf(_4144_fmt,jule::Any(_4157_args)), };;
	if (_4132_line) {
		_4213_log._field_Line=_1e4719d1c_GetRow(_4117_token.get()._field_File.ptr(), _4117_token.get()._field_Row);
	};
	return _4213_log;
}



inline jule::Bool _1e6a20d68_impIsLookupable(jule::Ptr<_1e6a192e5_ImportInfo>& _5521_i, jule::Str _5537_ident) {
	if (_5521_i.get()._field_CppLinked) {
		return false;
	};
	if ((!(_5521_i.get()._field_ImportAll))) {
		if ((_5521_i.get()._field_Selected.len() > 0LL)) {
			return _1e6a1bbbb_existIdent(_5521_i.ptr(), _5537_ident);
		};
	};
	return _5521_i.get()._field_ImportAll;
}



inline void _1e6a21165_appendRetVars(jule::Slice<jule::Ptr<_1e6a3dd20_Var>>& _6723_dest, jule::Ptr<_1e5e202ce_FnIns>& _6742_f) {
	if ((_1e5e1ca90_IsVoid(_6742_f.get()._field_Decl.ptr()) || (_6742_f.get()._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1e6ab6a8a_TypeKind>> _7213_types = _1e5e21401_Types(_6742_f.ptr());;
	{
		auto &expr = _6742_f.get()._field_Decl.get()._field_Result.get()._field_Idents;
		auto it = expr.begin();
		_iter_begin_1b24c3146:;
		if (it != expr.end()) {
			jule::I64 _7310_i = it - expr.begin();
			jule::Ptr<_1e47137a5_Token> _7317_ident = *it;
			{
				if ((_1e4716049_IsIgnoreIdent(_7317_ident.get()._field_Kind) || _1e47162e1_IsAnonIdent(_7317_ident.get()._field_Kind))) {
					goto _iter_next_1b24c3146;
				};
				_6723_dest = jule::alloc_for_append(_6723_dest,1);_6723_dest.__push(jule::new_ptr<_1e6a3dd20_Var>(_1e6a3dd20_Var{._field_Scope=_6742_f.get()._field_Scope, ._field_Token=_7317_ident, ._field_Ident=_7317_ident.get()._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_1e6ababe3_TypeSymbol>(_1e6ababe3_TypeSymbol{._field_Kind=_7213_types[_7310_i]}), ._field_Value=jule::new_ptr<_1e6a8bce6_Value>(_1e6a8bce6_Value{._field_Data=jule::new_ptr<_1e6a8ac6d_Data>()}), }));;
			}
			_iter_next_1b24c3146:;
			++it;
			_7310_i++;
			goto _iter_begin_1b24c3146;
		}
		_iter_end_1b24c3146:;
	};
}



inline void _1e6a2141d_appendParamVars(jule::Slice<jule::Ptr<_1e6a3dd20_Var>>& _9325_dest, jule::Ptr<_1e5e202ce_FnIns>& _9344_f) {
	if ((_9344_f.get()._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _9344_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1b24c47c9:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e1e410_ParamIns> _9817_p = *it;
			{
				if ((_1e4716049_IsIgnoreIdent(_9817_p.get()._field_Decl.get()._field_Ident) || _1e47162e1_IsAnonIdent(_9817_p.get()._field_Decl.get()._field_Ident))) {
					goto _iter_next_1b24c47c9;
				};
				jule::Ptr<_1e6a3dd20_Var> _10317_v = jule::new_ptr<_1e6a3dd20_Var>(_1e6a3dd20_Var{._field_Scope=_9344_f.get()._field_Scope, ._field_Token=_9817_p.get()._field_Decl.get()._field_Token, ._field_Ident=_9817_p.get()._field_Decl.get()._field_Ident, ._field_Mutable=_9817_p.get()._field_Decl.get()._field_Mutable, ._field_Used=true, ._field_Reference=_9817_p.get()._field_Decl.get()._field_Reference, ._field_Kind=jule::new_ptr<_1e6ababe3_TypeSymbol>(), ._field_Value=jule::new_ptr<_1e6a8bce6_Value>(_1e6a8bce6_Value{._field_Data=jule::new_ptr<_1e6a8ac6d_Data>()}), });;
				{
					
					if (_1e5e1b41d_IsSelf(_9817_p.get()._field_Decl.ptr())) {
						_case_begin_1b24c859c:;
						{
							_10317_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1e6ab665b_Kind>(_9344_f.get()._field_Owner, 0)});
							_10317_v.get()._field_Reference=(!(_1e5e1b682_IsRef(_9817_p.get()._field_Decl.ptr())));
							if (_1e5e1b682_IsRef(_9817_p.get()._field_Decl.ptr())) {
								_10317_v.get()._field_Ident=_10317_v.get()._field_Ident.slice(1LL);
								_10317_v.get()._field_Kind.get()._field_Kind.get()._field_Kind=jule::Trait<_1e6ab665b_Kind>(jule::new_ptr<_1e6abece6_Sptr>(_1e6abece6_Sptr{._field_Elem=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_CppIdent=_10317_v.get()._field_Kind.get()._field_Kind.get()._field_CppIdent, ._field_Kind=_10317_v.get()._field_Kind.get()._field_Kind.get()._field_Kind})}), 7);
							};
						}
					}
					else if (_9817_p.get()._field_Decl.get()._field_Variadic) {
						_case_begin_1b24c828e:;
						{
							_10317_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1e6ab665b_Kind>(jule::new_ptr<_1e6ac0753_Slc>(_1e6ac0753_Slc{._field_Elem=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_CppIdent=_9817_p.get()._field_Kind.get()._field_CppIdent, ._field_Kind=_9817_p.get()._field_Kind.get()._field_Kind})}), 8)});
						}
					}
					else {
						_case_begin_1b24c6e08:;
						{
							_10317_v.get()._field_Kind.get()._field_Kind=_9817_p.get()._field_Kind;
						}
					}
					_match_end_1b24c813a:;
				};
				_9325_dest = jule::alloc_for_append(_9325_dest,1);_9325_dest.__push(_10317_v);;
			}
			_iter_next_1b24c47c9:;
			++it;
			goto _iter_begin_1b24c47c9;
		}
		_iter_end_1b24c47c9:;
	};
}



inline void _1e6a216e8_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1e6ab5d97_TypeAlias>>& _15334_dest, jule::Ptr<_1e5e202ce_FnIns>& _15359_f) {
	jule::I64 _15413_size = _15359_f.get()._field_Generics.len();;
	if ((_15359_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		_15413_size+=_15359_f.get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	if ((_15413_size == 0LL)) {
		return;;
	};
	{
		auto &expr = _15359_f.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1b24cd76c:;
		if (it != expr.end()) {
			jule::I64 _16310_i = it - expr.begin();
			jule::Ptr<_1e6ab535d_InsGeneric> _16317_g = *it;
			{
				jule::Ptr<_1e5d62045_GenericDecl> _16417_decl = _15359_f.get()._field_Decl.get()._field_Generics[_16310_i];;
				_15334_dest = jule::alloc_for_append(_15334_dest,1);_15334_dest.__push(jule::new_ptr<_1e6ab5d97_TypeAlias>(_1e6ab5d97_TypeAlias{._field_Scope=_15359_f.get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_16417_decl.get()._field_Token, ._field_Ident=_16417_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1e6ababe3_TypeSymbol>(_1e6ababe3_TypeSymbol{._field_Kind=_16317_g.get()._field_Kind}), }));;
			}
			_iter_next_1b24cd76c:;
			++it;
			_16310_i++;
			goto _iter_begin_1b24cd76c;
		}
		_iter_end_1b24cd76c:;
	};
	if ((_15359_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		jule::Ptr<_1e5d714d8_StructIns> _17617_owner = _15359_f.get()._field_Owner;;
		{
			auto &expr = _17617_owner.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_1b24d00dc:;
			if (it != expr.end()) {
				jule::I64 _17714_i = it - expr.begin();
				jule::Ptr<_1e6ab535d_InsGeneric> _17721_g = *it;
				{
					jule::Ptr<_1e5d62045_GenericDecl> _17821_decl = _17617_owner.get()._field_Decl.get()._field_Generics[_17714_i];;
					_15334_dest = jule::alloc_for_append(_15334_dest,1);_15334_dest.__push(jule::new_ptr<_1e6ab5d97_TypeAlias>(_1e6ab5d97_TypeAlias{._field_Scope=_15359_f.get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_17821_decl.get()._field_Token, ._field_Ident=_17821_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1e6ababe3_TypeSymbol>(_1e6ababe3_TypeSymbol{._field_Kind=_17721_g.get()._field_Kind}), }));;
				}
				_iter_next_1b24d00dc:;
				++it;
				_17714_i++;
				goto _iter_begin_1b24d00dc;
			}
			_iter_end_1b24d00dc:;
		};
	};
}



inline jule::Ptr<_1e6a86010_SymbolTable> _1e6a21a4a_findFile(jule::Slice<jule::Ptr<_1e6a86010_SymbolTable>>& _19118_files, jule::Ptr<_1e4718b40_File>& _19142_handler) {
	{
		auto &expr = _19118_files;
		auto it = expr.begin();
		_iter_begin_1b24ce0ca:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a86010_SymbolTable> _19217_fl = *it;
			{
				if ((_19217_fl.get()._field_File == _19142_handler)) {
					return _19217_fl;
				};
			}
			_iter_next_1b24ce0ca:;
			++it;
			goto _iter_begin_1b24ce0ca;
		}
		_iter_end_1b24ce0ca:;
	};
	return nullptr;
}



inline void _1e6a21eac_pushSugggestion(_1e43e3a18_Log* _20031_log, jule::Str _20042_fmt, jule::Slice<jule::Any> _20055_args) {
	_20031_log->_field_Suggestion=_1e43e3e58_Logf(_20042_fmt,jule::Any(_20055_args));
}



inline jule::Bool _1e6a65121_traitHasReferenceReceiver(jule::Ptr<_1e5e2e4db_Trait>& _2631_t) {
	{
		auto &expr = _2631_t.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1b26c8d85:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e1c62d_Fn> &_2712_f = *it;
			{
				if (_2712_f.get()._field_Statically) {
					goto _iter_next_1b26c8d85;
				};
				jule::Ptr<_1e5e1ace1_Param> _3313_p = _2712_f.get()._field_Params[0LL];;
				if ((_1e5e1b682_IsRef(_3313_p.ptr()) && _1e5e1b41d_IsSelf(_3313_p.ptr()))) {
					return true;
				};
			}
			_iter_next_1b26c8d85:;
			++it;
			goto _iter_begin_1b26c8d85;
		}
		_iter_end_1b26c8d85:;
	};
	return false;
}



inline jule::Bool _1e6a5c14b_floatAssignable(jule::Str _4120_kind, jule::Ptr<_1e6a8ac6d_Data>& _4132_d) {
	jule::Str _429_value = _1e6434c00_FmtFloat(static_cast<jule::F64>(_1e5e0e015_AsF64(_4132_d.get()._field_Constant.ptr())),'g',-1LL,64LL);;
	return _1e62406ed_CheckBitFloat(_429_value,static_cast<jule::I64>(_1e603e695_BitsizeOf(_4120_kind)));
}



inline jule::Bool _1e6a5c27d_sigAssignable(jule::Str _4618_kind, jule::Ptr<_1e6a8ac6d_Data>& _4630_d) {
	jule::F64 _479_min = _1e63b4e16_Min(_4618_kind);;
	jule::F64 _489_max = _1e63bcc43_Max(_4618_kind);;
	{
		
		if (_1e5e10b71_IsF64(_4630_d.get()._field_Constant.ptr())) {
			_case_begin_1b26d0aa1:;
			{
				jule::F64 _5113_x = _1e5e0d7c8_ReadF64(_4630_d.get()._field_Constant.ptr());;
				jule::F64 _5214_i;;
				jule::F64 _5217_frac;;
				std::tie(_5214_i,_5217_frac) = _1e69c536c_Modf(_5113_x);
				if ((_5217_frac != 0LL)) {
					return false;
				};
				return ((_5214_i >= _479_min) && (_5214_i <= _489_max));
			}
		}
		else if (_1e5e10434_IsU64(_4630_d.get()._field_Constant.ptr())) {
			_case_begin_1b26d0b17:;
			{
				jule::F64 _5813_x = _1e5e0e015_AsF64(_4630_d.get()._field_Constant.ptr());;
				if ((_5813_x <= _489_max)) {
					return true;
				};
			}
		}
		else if (_1e5e101c0_IsI64(_4630_d.get()._field_Constant.ptr())) {
			_case_begin_1b26d0b7d:;
			{
				jule::F64 _6313_x = _1e5e0e015_AsF64(_4630_d.get()._field_Constant.ptr());;
				return ((_479_min <= _6313_x) && (_6313_x <= _489_max));
			}
		}
		_match_end_1b26d095d:;
	};
	return false;
}



inline jule::Bool _1e6a7386b_unsigAssignable(jule::Str _6920_kind, jule::Ptr<_1e6a8ac6d_Data>& _6932_d) {
	jule::F64 _709_max = _1e63bcc43_Max(_6920_kind);;
	if ((_6932_d.get()._field_IsRune && (_6920_kind == jule::Str("u8", 2)))) {
		return _1e6a5bc2d_IsAscii(static_cast<jule::I32>(static_cast<jule::I32>(_1e5e0cd27_ReadI64(_6932_d.get()._field_Constant.ptr()))));
	};
	{
		
		if (_1e5e10b71_IsF64(_6932_d.get()._field_Constant.ptr())) {
			_case_begin_1b26d526a:;
			{
				jule::F64 _7713_x = _1e5e0d7c8_ReadF64(_6932_d.get()._field_Constant.ptr());;
				if ((_7713_x < 0LL)) {
					return false;
				};
				jule::F64 _8114_i;;
				jule::F64 _8117_frac;;
				std::tie(_8114_i,_8117_frac) = _1e69c536c_Modf(_7713_x);
				if ((_8117_frac != 0LL)) {
					return false;
				};
				return (_8114_i <= _709_max);
			}
		}
		else if (_1e5e10434_IsU64(_6932_d.get()._field_Constant.ptr())) {
			_case_begin_1b26d5d09:;
			{
				jule::F64 _8713_x = _1e5e0e015_AsF64(_6932_d.get()._field_Constant.ptr());;
				if ((_8713_x <= _709_max)) {
					return true;
				};
			}
		}
		else if (_1e5e101c0_IsI64(_6932_d.get()._field_Constant.ptr())) {
			_case_begin_1b26d5d81:;
			{
				jule::F64 _9213_x = _1e5e0e015_AsF64(_6932_d.get()._field_Constant.ptr());;
				return ((0LL <= _9213_x) && (_9213_x <= _709_max));
			}
		}
		_match_end_1b26d51c1:;
	};
	return false;
}



inline jule::Bool _1e6a7399d_intAssignable(jule::Str _9818_kind, jule::Ptr<_1e6a8ac6d_Data>& _9830_d) {
	{
		
		if (_1e6a05cd7_IsSigInt(_9818_kind)) {
			_case_begin_1b26da836:;
			{
				return _1e6a5c27d_sigAssignable(_9818_kind,_9830_d);
			}
		}
		else if (_1e6a05e19_IsUnsigInt(_9818_kind)) {
			_case_begin_1b26da1a4:;
			{
				return _1e6a7386b_unsigAssignable(_9818_kind,_9830_d);
			}
		}
		else {
			_case_begin_1b26d64e1:;
			{
				return false;
			}
		}
		_match_end_1b26d6414:;
	};
}



inline jule::Ptr<_1e5d21268_Directive> _1e6ab12d2_findDirective(jule::Slice<jule::Ptr<_1e5d21268_Directive>>& _419323_directives, jule::Str _419354_d) {
	{
		auto &expr = _419323_directives;
		auto it = expr.begin();
		_iter_begin_1b2803a09:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d21268_Directive> _419417_dr = *it;
			{
				if ((_419417_dr.get()._field_Tag.get()._field_Kind == _419354_d)) {
					return _419417_dr;
				};
			}
			_iter_next_1b2803a09:;
			++it;
			goto _iter_begin_1b2803a09;
		}
		_iter_end_1b2803a09:;
	};
	return nullptr;
}



inline jule::Any _1e6ab1667_findBuiltinsImport(jule::Str _420223_ident, jule::Ptr<_1e6a192e5_ImportInfo> _420235_imp) {
	return jule::Any(_1e6b656e9_findPackageBuiltinDef(_420235_imp.get()._field_LinkPath,_420223_ident));
}



inline void _1e6ab1876_fitBitsize(jule::Ptr<_1e6a8ac6d_Data>& _420920_d) {
	jule::Ptr<_1e6abb562_Prim> _421013_prim = _1e6ab8b9c_Prim(_420920_d.get()._field_Kind.ptr());;
	jule::I64 _42119_z = _1e603e695_BitsizeOf(_1e6abb8c5_Str(_421013_prim.ptr()));;
	if ((_42119_z == 64LL)) {
		return;;
	};
	jule::I64 _421613_k = 0LL;;
	{
		
		if (_1e5e101c0_IsI64(_420920_d.get()._field_Constant.ptr())) {
			_case_begin_1b28068b9:;
			{
				_421613_k=static_cast<jule::I64>(_1e63101c4_BitsizeOfInt(static_cast<jule::I64>(_1e5e0cd27_ReadI64(_420920_d.get()._field_Constant.ptr()))));
				if ((_421613_k > _42119_z)) {
					_421013_prim.get()._field_Kind=_1e606392d_IntFromBits(_421613_k);
				};
			}
		}
		else if (_1e5e10434_IsU64(_420920_d.get()._field_Constant.ptr())) {
			_case_begin_1b2806941:;
			{
				_421613_k=static_cast<jule::I64>(_1e6327e67_BitsizeOfUint(static_cast<jule::U64>(_1e5e0d08b_ReadU64(_420920_d.get()._field_Constant.ptr()))));
				if ((_421613_k > _42119_z)) {
					_421013_prim.get()._field_Kind=_1e6075841_UintFromBits(_421613_k);
				};
			}
		}
		else if (_1e5e10b71_IsF64(_420920_d.get()._field_Constant.ptr())) {
			_case_begin_1b28069b8:;
			{
				_421613_k=static_cast<jule::I64>(_1e625e783_BitsizeOfFloat(static_cast<jule::F64>(_1e5e0d7c8_ReadF64(_420920_d.get()._field_Constant.ptr()))));
				if ((_421613_k > _42119_z)) {
					_421013_prim.get()._field_Kind=_1e60a46b6_FloatFromBits(_421613_k);
				};
			}
		}
		_match_end_1b28067ed:;
	};
}



inline void _1e6ab1b73_makeStructLitAlloc(jule::Ptr<_1e6a8ac6d_Data>& _423628_d, jule::Ptr<_1e5e15967_StructLitExprModel>& _423643_lit) {
	_423628_d.get()._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(jule::new_ptr<_1e6abece6_Sptr>(_1e6abece6_Sptr{._field_Elem=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_423643_lit.get()._field_Strct, 0)})}), 7)});
	_423628_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e5e15b54_AllocStructLitExprModel>(_1e5e15b54_AllocStructLitExprModel{._field_Lit=_423643_lit}));
}



inline jule::Ptr<_1e6a3dd20_Var> _1e6ab1eb4_buildErrorVar(jule::Ptr<_1e6a06700_Scope>& _424723_s, jule::Ptr<_1e5d5d250_FnCallExpr>& _424739_fc) {
	return jule::new_ptr<_1e6a3dd20_Var>(_1e6a3dd20_Var{._field_Scope=_424723_s, ._field_Token=_424739_fc.get()._field_Token, ._field_Ident=jule::Str("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=jule::new_ptr<_1e6ababe3_TypeSymbol>(_1e6ababe3_TypeSymbol{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("any", 3)), 6)})}), ._field_Value=jule::new_ptr<_1e6a8bce6_Value>(_1e6a8bce6_Value{._field_Data=jule::new_ptr<_1e6a8ac6d_Data>()}), });
}



inline jule::Any _1e6ab2305_findBuiltinsSema(jule::Str _426621_ident, jule::Ptr<_1e6a22441_Sema> _426637_s) {
	{
		auto &expr = _426637_s.get()._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1b280c4a2:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a192e5_ImportInfo> _426717_imp = *it;
			{
				if ((_426717_imp.get()._field_ImportAll || _1e6a1bbbb_existIdent(_426717_imp.ptr(), _426621_ident))) {
					jule::Any _426921_def = _1e6ab1667_findBuiltinsImport(_426621_ident,_426717_imp);;
					if ((_426921_def != nullptr)) {
						return jule::Any(_426921_def);
					};
				};
			}
			_iter_next_1b280c4a2:;
			++it;
			goto _iter_begin_1b280c4a2;
		}
		_iter_end_1b280c4a2:;
	};
	jule::Str _427713_ppath = _1e4719536_Dir(_426637_s.get()._field_file.get()._field_File.ptr());;
	if (_1e350be95_HasPrefix(_427713_ppath,_1e441574e_PathStdlib)) {
		(_427713_ppath).mut_slice(_1e441574e_PathStdlib.len());;
		_427713_ppath=(jule::Str("std", 3) + _1e438dee1_Replace(_427713_ppath,static_cast<jule::Str>(92LL),jule::Str("::", 2),-1LL));
		return jule::Any(_1e6b656e9_findPackageBuiltinDef(_427713_ppath,_426621_ident));
	};
	return nullptr;
}



inline jule::Bool _1e6ab259c_isOkForShifting(jule::Ptr<_1e6a8ac6d_Data>& _429125_d) {
	if (_1e6a8b631_IsConst(_429125_d.ptr())) {
		{
			
			if (_1e5e101c0_IsI64(_429125_d.get()._field_Constant.ptr())) {
				_case_begin_1b28110aa:;
				{
					return (_1e5e0cd27_ReadI64(_429125_d.get()._field_Constant.ptr()) >= 0LL);
				}
			}
			else if (_1e5e10434_IsU64(_429125_d.get()._field_Constant.ptr())) {
				_case_begin_1b281086d:;
				{
					return true;
				}
			}
			else if (_1e5e10b71_IsF64(_429125_d.get()._field_Constant.ptr())) {
				_case_begin_1b28108d4:;
				{
					return (_1e5e0d7c8_ReadF64(_429125_d.get()._field_Constant.ptr()) >= 0LL);
				}
			}
			else {
				_case_begin_1b2810807:;
				{
					return false;
				}
			}
			_match_end_1b281072a:;
		};
	};
	jule::Ptr<_1e6abb562_Prim> _43049_prim = _1e6ab8b9c_Prim(_429125_d.get()._field_Kind.ptr());;
	return ((_43049_prim != nullptr) && _1e6a0604b_IsInt(_1e6abb8c5_Str(_43049_prim.ptr())));
}



inline jule::Bool _1e6ab2954_isInstancedStruct(jule::Ptr<_1e5d714d8_StructIns> _430822_s) {
	return (_430822_s.get()._field_Decl.get()._field_Generics.len() == _430822_s.get()._field_Generics.len());
}



inline jule::Bool _1e6ab2c1d_isPtrArithmeticCompatibleInt(jule::Ptr<_1e6a8ac6d_Data>& _431238_d) {
	if (_1e6a8b631_IsConst(_431238_d.ptr())) {
		return _1e6a7399d_intAssignable(jule::Str("int", 3),_431238_d);
	};
	_1e6a74bd0_typeCompatibilityChecker _431613_tcc = _1e6a74bd0_typeCompatibilityChecker{._field_dest=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("int", 3)), 6)}), ._field_src=_431238_d.get()._field_Kind, };;
	return _1e6a762b9_check(&_431613_tcc);
}



inline void _1e6ab2e60_applyCastKindModel(jule::Ptr<_1e6a8ac6d_Data>& _432528_d, jule::Ptr<_1e6ab6a8a_TypeKind>& _432543_t) {
	_432528_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e5e15d41_CastingExprModel>(_1e5e15d41_CastingExprModel{._field_Expr=_432528_d.get()._field_Model, ._field_Kind=_432543_t, ._field_ExprKind=_432528_d.get()._field_Kind}));
}



inline void _1e6ab3218_applyCastKind(jule::Ptr<_1e6a8ac6d_Data>& _433323_d, jule::Ptr<_1e6ab6a8a_TypeKind>& _433338_t) {
	_1e6ab2e60_applyCastKindModel(_433323_d,_433338_t);
	_433323_d.get()._field_Kind=_433338_t;
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6ab3416_buildVoidData(void) {
	return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("void", 4)), 6)}), });
}



inline jule::Str _1e6ab36d0_checkDataForIntegerIndexing(jule::Ptr<_1e6a8ac6d_Data>& _434637_d) {
	jule::Str _434649_err_fmt = jule::Str();
	if ((_434637_d == nullptr)) {
		_434649_err_fmt = jule::Str();
		return _434649_err_fmt;
	};
	{
		
		if ((_1e6ab8b9c_Prim(_434637_d.get()._field_Kind.ptr()) == nullptr)) {
			_case_begin_1b2816be8:;
			{
				_434649_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _434649_err_fmt;
			}
		}
		else if ((!(_1e6a0604b_IsInt(_1e6abb8c5_Str(_1e6ab8b9c_Prim(_434637_d.get()._field_Kind.ptr()).ptr()))))) {
			_case_begin_1b2816c5e:;
			{
				_434649_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _434649_err_fmt;
			}
		}
		else if (_1e6a8b631_IsConst(_434637_d.ptr())) {
			_case_begin_1b2816cc5:;
			{
				if ((_1e5e0e015_AsF64(_434637_d.get()._field_Constant.ptr()) < 0LL)) {
					_434649_err_fmt = jule::Str("overflow the limit of data-type", 31);
					return _434649_err_fmt;
				};
			}
		}
		else if ((_1e6ab8b9c_Prim(_434637_d.get()._field_Kind.ptr()) == nullptr) || _1e6a8b631_IsConst(_434637_d.ptr()) || (_1e6037e63_RealKindOf(_1e6abb8c5_Str(_1e6ab8b9c_Prim(_434637_d.get()._field_Kind.ptr()).ptr())) != _1e6037e63_RealKindOf(jule::Str("int", 3)))) {
			_case_begin_1b2816d3b:;
			{
				jule::Ptr<_1e6ab6a8a_TypeKind> _436317_t = jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("int", 3)), 6)});;
				_1e6ab3218_applyCastKind(_434637_d,_436317_t);
			}
		}
		_match_end_1b28172c0:;
	};
	_434649_err_fmt = jule::Str();
	return _434649_err_fmt;
}



inline void _1e6ab3999_applyCastModelByEnum(jule::Ptr<_1e6a8ac6d_Data>& _437230_d, jule::Ptr<_1e5e31631_Enum> _437244_e) {
	if ((_437244_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1e6abb562_Prim> _43769_p = _1e6ab8b9c_Prim(_437244_e.get()._field_Kind.get()._field_Kind.ptr());;
	if (_1e6abe796_IsStr(_43769_p.ptr())) {
		return;;
	};
	_1e6ab2e60_applyCastKindModel(_437230_d,_437244_e.get()._field_Kind.get()._field_Kind);
}



inline void _1e6ab3c52_castConstByType(jule::Str& _438321_t, jule::Ptr<_1e6a8ac6d_Data>& _438334_d) {
	{
		
		if (_1e6a05cd7_IsSigInt(_438321_t)) {
			_case_begin_1b281cabc:;
			{
				{
					auto _match_expr{ _1e603e695_BitsizeOf(_1e6037e63_RealKindOf(_438321_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1b281d7c1:;
						{
							_1e5e0e28a_SetI64(_438334_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1e5e0da3c_AsI64(_438334_d.get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1b281d837:;
						{
							_1e5e0e28a_SetI64(_438334_d.get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_1e5e0da3c_AsI64(_438334_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LL) {
						_case_begin_1b281d89d:;
						{
							_1e5e0e28a_SetI64(_438334_d.get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_1e5e0da3c_AsI64(_438334_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LL) {
						_case_begin_1b281d914:;
						{
							_1e5e0e28a_SetI64(_438334_d.get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_1e5e0da3c_AsI64(_438334_d.get()._field_Constant.ptr())))));
						}
					}
					_match_end_1b281d76b:;
				};
			}
		}
		else if (_1e6a05e19_IsUnsigInt(_438321_t)) {
			_case_begin_1b281cb44:;
			{
				{
					auto _match_expr{ _1e603e695_BitsizeOf(_1e6037e63_RealKindOf(_438321_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1b2821de0:;
						{
							_1e5e0e510_SetU64(_438334_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1e5e0dca1_AsU64(_438334_d.get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1b2821e56:;
						{
							_1e5e0e510_SetU64(_438334_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_1e5e0dca1_AsU64(_438334_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LL) {
						_case_begin_1b2821ebc:;
						{
							_1e5e0e510_SetU64(_438334_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_1e5e0dca1_AsU64(_438334_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LL) {
						_case_begin_1b2822033:;
						{
							_1e5e0e510_SetU64(_438334_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_1e5e0dca1_AsU64(_438334_d.get()._field_Constant.ptr())))));
						}
					}
					_match_end_1b2821461:;
				};
			}
		}
		else if (_1e6a0617d_IsFloat(_438321_t)) {
			_case_begin_1b281cbbb:;
			{
				{
					auto _match_expr{ _1e603e695_BitsizeOf(_1e6037e63_RealKindOf(_438321_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1b2825300:;
						{
							_1e5e0ec80_SetF64(_438334_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1e5e0e015_AsF64(_438334_d.get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1b2825553:;
						{
							_1e5e0ec80_SetF64(_438334_d.get()._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_1e5e0e015_AsF64(_438334_d.get()._field_Constant.ptr())))));
						}
					}
					_match_end_1b2824a91:;
				};
			}
		}
		_match_end_1b281c98a:;
	};
}



inline void _1e6ab425d_updateModelToGenericIns(jule::Any& _441733_m, jule::Ptr<_1e5e202ce_FnIns>& _441752_f) {
	{
		auto &_match_expr{ _441733_m };
		
		if (_match_expr.type_is<jule::Ptr<_1e5e202ce_FnIns>>()) {
			_case_begin_1b28265ba:;
			{
				_441733_m=static_cast<jule::Any>(_441752_f);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e172b5_StructSubIdentExprModel>>()) {
			_case_begin_1b2825993:;
			{
				_441733_m.operator jule::Ptr<_1e5e172b5_StructSubIdentExprModel>().get()._field_Method=_441752_f;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e174a2_StructStaticIdentExprModel>>()) {
			_case_begin_1b2825a09:;
			{
				_441733_m.operator jule::Ptr<_1e5e174a2_StructStaticIdentExprModel>().get()._field_Method=_441752_f;
			}
		}
		_match_end_1b281e926:;
	};
}



inline jule::Bool _1e6ab44a0_pushSubIdentFromExpr(jule::Any _442829_expr, jule::Ptr<_1e5d55676_SubIdentTypeDecl>& _442850_t) {
	{
		auto &_match_expr{ _442829_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1e5d5aeea_IdentExpr>>()) {
			_case_begin_1b2828732:;
			{
				jule::Ptr<_1e5d5aeea_IdentExpr> _443117_e = _442829_expr.operator jule::Ptr<_1e5d5aeea_IdentExpr>();;
				_442850_t.get()._field_Idents = jule::alloc_for_append(_442850_t.get()._field_Idents,1);_442850_t.get()._field_Idents.__push(jule::new_ptr<_1e5d55027_IdentTypeDecl>(_1e5d55027_IdentTypeDecl{._field_Token=_443117_e.get()._field_Token, ._field_Ident=_443117_e.get()._field_Ident, }));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5d5c78d_SubIdentExpr>>()) {
			_case_begin_1b2828798:;
			{
				jule::Ptr<_1e5d5c78d_SubIdentExpr> _443717_e = _442829_expr.operator jule::Ptr<_1e5d5c78d_SubIdentExpr>();;
				if ((!(_1e6ab44a0_pushSubIdentFromExpr(_443717_e.get()._field_Expr.get()._field_Kind,_442850_t)))) {
					return false;
				};
				_442850_t.get()._field_Idents = jule::alloc_for_append(_442850_t.get()._field_Idents,1);_442850_t.get()._field_Idents.__push(jule::new_ptr<_1e5d55027_IdentTypeDecl>(_1e5d55027_IdentTypeDecl{._field_Token=_443717_e.get()._field_Ident, ._field_Ident=_443717_e.get()._field_Ident.get()._field_Kind, }));;
			}
		}
		else {
			_case_begin_1b2828666:;
			{
				return false;
			}
		}
		_match_end_1b2828611:;
	};
	return true;
}



inline jule::Bool _1e6acd387_kindUsesGenerics(jule::Any& _156422_k, jule::Slice<jule::Ptr<_1e5d62045_GenericDecl>>& _156440_generics) {
	{
		auto &expr = _156440_generics;
		auto it = expr.begin();
		_iter_begin_1b2b3cb89:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d62045_GenericDecl> &_156512_g = *it;
			{
				if (static__1e6acce8b_exist(_156512_g.get()._field_Ident,_156422_k)) {
					return true;
				};
			}
			_iter_next_1b2b3cb89:;
			++it;
			goto _iter_begin_1b2b3cb89;
		}
		_iter_end_1b2b3cb89:;
	};
	return false;
}



inline jule::Bool _1e6acd71c_hasDirective(jule::Slice<jule::Ptr<_1e5d21268_Directive>>& _157422_directives, jule::Str _157453_tag) {
	{
		auto &expr = _157422_directives;
		auto it = expr.begin();
		_iter_begin_1b2b3dccd:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d21268_Directive> _157517_dr = *it;
			{
				if ((_157517_dr.get()._field_Tag.get()._field_Kind == _157453_tag)) {
					return true;
				};
			}
			_iter_next_1b2b3dccd:;
			++it;
			goto _iter_begin_1b2b3dccd;
		}
		_iter_end_1b2b3dccd:;
	};
	return false;
}



inline jule::Bool _1e6acd9b4_canGetPtr(jule::Ptr<_1e6a8ac6d_Data>& _158319_d) {
	if (((!(_158319_d.get()._field_Lvalue)) || _1e6a8b631_IsConst(_158319_d.ptr()))) {
		return false;
	};
	{
		
		if (((_1e6ab9d8a_Fn(_158319_d.get()._field_Kind.ptr()) != nullptr) || (_1e6ab93d9_Enum(_158319_d.get()._field_Kind.ptr()) != nullptr))) {
			_case_begin_1b2b40939:;
			{
				return false;
			}
		}
		else {
			_case_begin_1b2b401ec:;
			{
				return true;
			}
		}
		_match_end_1b2b400dc:;
	};
}



inline jule::Bool _1e6acdcd3_isValidForSptrType(jule::Ptr<_1e6ab6a8a_TypeKind>& _159628_t) {
	jule::Ptr<_1e5d714d8_StructIns> _159713_s = _1e6aba0ee_Struct(_159628_t.ptr());;
	if ((((_159713_s != nullptr) && (_159713_s.get()._field_Decl != nullptr)) && _159713_s.get()._field_Decl.get()._field_CppLinked)) {
		return false;
	};
	return true;
}



inline jule::Bool _1e6ace07a_isValidForRef(jule::Ptr<_1e6ab6a8a_TypeKind>& _160523_t) {
	return (_1e6ab9d8a_Fn(_160523_t.ptr()) == nullptr);
}



inline jule::Bool _1e6ace344_isBuiltinStrConvertable(jule::Ptr<_1e6ab6a8a_TypeKind>& _160833_t) {
	return (((!(_1e6ab7c23_Void(_160833_t.ptr()))) && (_1e6ab9d8a_Fn(_160833_t.ptr()) == nullptr)) && (_1e6aba83b_Tup(_160833_t.ptr()) == nullptr));
}



inline jule::Str _1e6ace5b9_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1e47137a5_Token>>& _161227_tokens) {
	jule::Str _161313_s = _161227_tokens[0LL].get()._field_Kind;;
	{
		auto expr = _161227_tokens.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1b2b44696:;
		if (it != expr.end()) {
			jule::Ptr<_1e47137a5_Token> &_161412_token = *it;
			{
				_161313_s+=jule::Str("::", 2);
				_161313_s+=_161412_token.get()._field_Kind;
			}
			_iter_next_1b2b44696:;
			++it;
			goto _iter_begin_1b2b44696;
		}
		_iter_end_1b2b44696:;
	};
	return _161313_s;
}



inline jule::Ptr<_1e6abb562_Prim> _1e6ace971_buildPrimType(jule::Str _162118_kind) {
	return jule::new_ptr<_1e6abb562_Prim>(_1e6abb562_Prim{._field_Kind=_162118_kind});
}



inline jule::Ptr<_1e5d4518d_Struct> _1e6acec18_getStructFromKind(jule::Ptr<_1e6ab6a8a_TypeKind> _162726_k) {
	{
		
		if ((_162726_k == nullptr)) {
			_case_begin_1b2b45983:;
			{
				return nullptr;
			}
		}
		else if ((_1e6aba0ee_Struct(_162726_k.ptr()) != nullptr)) {
			_case_begin_1b2b459e9:;
			{
				return _1e6aba0ee_Struct(_162726_k.ptr()).get()._field_Decl;
			}
		}
		else if ((_1e6ab8e11_Sptr(_162726_k.ptr()) != nullptr)) {
			_case_begin_1b2b45a60:;
			{
				return _1e6acec18_getStructFromKind(_1e6ab8e11_Sptr(_162726_k.ptr()).get()._field_Elem);
			}
		}
		else if ((_1e6ab9b26_Slc(_162726_k.ptr()) != nullptr)) {
			_case_begin_1b2b45ac6:;
			{
				return _1e6acec18_getStructFromKind(_1e6ab9b26_Slc(_162726_k.ptr()).get()._field_Elem);
			}
		}
		else if ((_1e6ab98b2_Arr(_162726_k.ptr()) != nullptr)) {
			_case_begin_1b2b45d7e:;
			{
				return _1e6acec18_getStructFromKind(_1e6ab98b2_Arr(_162726_k.ptr()).get()._field_Elem);
			}
		}
		else if ((_1e6ab9175_Ptr(_162726_k.ptr()) != nullptr)) {
			_case_begin_1b2b45de5:;
			{
				return nullptr;
			}
		}
		else {
			_case_begin_1b2b4591c:;
			{
				return nullptr;
			}
		}
		_match_end_1b2ad39ba:;
	};
}



inline jule::Bool _1e6aceeb0_isPrim(jule::Str _165011_kind) {
	return ((((((((((((((((_165011_kind == jule::Str("i8", 2)) || (_165011_kind == jule::Str("i16", 3))) || (_165011_kind == jule::Str("i32", 3))) || (_165011_kind == jule::Str("i64", 3))) || (_165011_kind == jule::Str("u8", 2))) || (_165011_kind == jule::Str("u16", 3))) || (_165011_kind == jule::Str("u32", 3))) || (_165011_kind == jule::Str("u64", 3))) || (_165011_kind == jule::Str("f32", 3))) || (_165011_kind == jule::Str("f64", 3))) || (_165011_kind == jule::Str("int", 3))) || (_165011_kind == jule::Str("uint", 4))) || (_165011_kind == jule::Str("uintptr", 7))) || (_165011_kind == jule::Str("bool", 4))) || (_165011_kind == jule::Str("str", 3))) || (_165011_kind == jule::Str("any", 3)));
}



inline void _1e6ad0268_applyImplicitCast(jule::Ptr<_1e6ab6a8a_TypeKind>& _166927_dest, jule::Ptr<_1e6a8ac6d_Data>& _166949_d) {
	if (_1e6ab79ae_IsNil(_166949_d.get()._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1e6abb562_Prim> _16739_destPrim = _1e6ab8b9c_Prim(_166927_dest.ptr());;
	jule::Ptr<_1e6abb562_Prim> _16749_prim = _1e6ab8b9c_Prim(_166949_d.get()._field_Kind.ptr());;
	if ((_16739_destPrim != nullptr)) {
		if (_1e6abea0a_IsAny(_16739_destPrim.ptr())) {
			_1e6ab3218_applyCastKind(_166949_d,_166927_dest);
			return;;
		};
		if (((((((!(_1e6ab774a_CppLinked(_166949_d.get()._field_Kind.ptr()))) && (!(_166949_d.get()._field_Kind.get()._field_Variadic))) && (!(_166949_d.get()._field_Lvalue))) && (!(_1e6a8b631_IsConst(_166949_d.ptr())))) && (_16749_prim != nullptr)) && _1e6a062b0_IsNum(_16749_prim.get()._field_Kind))) {
			_1e6ab3218_applyCastKind(_166949_d,_166927_dest);
		};
		return;;
	};
	if (((_1e6aba363_Trait(_166927_dest.ptr()) != nullptr) && (_1e6aba363_Trait(_166949_d.get()._field_Kind.ptr()) == nullptr))) {
		_1e6ab2e60_applyCastKindModel(_166949_d,_166927_dest);
		return;;
	};
	if (((_1e6ab964d_TypeEnum(_166927_dest.ptr()) != nullptr) && (_1e6ab964d_TypeEnum(_166949_d.get()._field_Kind.ptr()) == nullptr))) {
		_1e6ab2e60_applyCastKindModel(_166949_d,_166927_dest);
		return;;
	};
}



inline std::tuple<jule::Ptr<_1e6a86010_SymbolTable>,jule::Slice<_1e43e3a18_Log>> _1e6ad315b_buildSymbols(jule::Ptr<_1e5d201bd_Ast>& _1522_ast, jule::Trait<_1e6a16a62_Importer>& _1538_importer, jule::Ptr<_1e5e28a13_symbolBuilder> _1562_owner) {
	jule::Ptr<_1e5e28a13_symbolBuilder> _1613_sb = jule::new_ptr<_1e5e28a13_symbolBuilder>(_1e5e28a13_symbolBuilder{._field_owner=_1562_owner, ._field_importer=_1538_importer, ._field_ast=_1522_ast, });;
	_1e5e2d9b3_build(_1613_sb);
	if ((_1613_sb.get()._field_errors.len() == 0LL)) {
		return std::make_tuple(_1613_sb.get()._field_table,nullptr);
	};
	return std::make_tuple(nullptr,_1613_sb.get()._field_errors);
}



inline std::tuple<jule::Ptr<_1e6a1c24e_Package>,jule::Slice<_1e43e3a18_Log>> _1e6ad358a_analyzePackage(jule::Slice<jule::Ptr<_1e5d201bd_Ast>>& _2924_files, jule::Trait<_1e6a16a62_Importer>& _2944_importer, jule::I64& _2965_flags) {
	jule::Slice<jule::Ptr<_1e6a86010_SymbolTable>> _3113_tables = jule::Slice<jule::Ptr<_1e6a86010_SymbolTable>>::alloc(0LL,_2924_files.len());;
	{
		auto &expr = _2924_files;
		auto it = expr.begin();
		_iter_begin_1b2c4b1a4:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d201bd_Ast> _3217_f = *it;
			{
				jule::Ptr<_1e6a86010_SymbolTable> _3318_table;;
				jule::Slice<_1e43e3a18_Log> _3329_errors;;
				std::tie(_3318_table,_3329_errors) = _1e6ad315b_buildSymbols(_3217_f,_2944_importer,nullptr);
				if ((_3329_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_3329_errors);
				};
				_3113_tables = jule::alloc_for_append(_3113_tables,1);_3113_tables.__push(_3318_table);;
			}
			_iter_next_1b2c4b1a4:;
			++it;
			goto _iter_begin_1b2c4b1a4;
		}
		_iter_end_1b2c4b1a4:;
	};
	jule::Ptr<_1e6a22441_Sema> _4013_sema = jule::new_ptr<_1e6a22441_Sema>(_1e6a22441_Sema{._field_flags=_2965_flags});;
	_1e6a3ad3e_check(_4013_sema, _3113_tables);
	if ((_4013_sema.get()._field_errors.len() > 0LL)) {
		return std::make_tuple(nullptr,_4013_sema.get()._field_errors);
	};
	jule::Ptr<_1e6a1c24e_Package> _4813_pkg = jule::new_ptr<_1e6a1c24e_Package>(_1e6a1c24e_Package{._field_Files=_4013_sema.get()._field_files});;
	return std::make_tuple(_4813_pkg,nullptr);
}



inline std::tuple<jule::Ptr<_1e6a1c24e_Package>,jule::Slice<_1e43e3a18_Log>> _1e6ad3975_AnalyzePackage(jule::Slice<jule::Ptr<_1e5d201bd_Ast>> _7223_files, jule::Trait<_1e6a16a62_Importer> _7242_importer, jule::I64 _7262_flags) {
	if ((_7223_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Ptr<_1e6a1c24e_Package> _7614_package;;
	jule::Slice<_1e43e3a18_Log> _7627_logs;;
	std::tie(_7614_package,_7627_logs) = _1e6ad358a_analyzePackage(_7223_files,_7242_importer,_7262_flags);
	return std::make_tuple(_7614_package,_7627_logs);
}



inline jule::Ptr<_1e5e202ce_FnIns> _1e6adc792_findBuiltinFn(jule::Str _2218_ident) {
	{
		auto &_match_expr{ _2218_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1b2c53cc2:;
			{
				static jule::Ptr<_1e5e202ce_FnIns> _2520_f = jule::new_ptr<_1e5e202ce_FnIns>(_1e5e202ce_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e6a8ac6d_Data>(jule::Ptr<_1e6a8c7db_Eval>&,jule::Ptr<_1e5d5d250_FnCallExpr>&,jule::Ptr<_1e6a8ac6d_Data>&)>(_1e6b62ae2_builtinCallerOut), });;
				return _2520_f;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1b2c53d38:;
			{
				static jule::Ptr<_1e5e202ce_FnIns> _2820_f = jule::new_ptr<_1e5e202ce_FnIns>(_1e5e202ce_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e6a8ac6d_Data>(jule::Ptr<_1e6a8c7db_Eval>&,jule::Ptr<_1e5d5d250_FnCallExpr>&,jule::Ptr<_1e6a8ac6d_Data>&)>(_1e6b654da_builtinCallerOutln), });;
				return _2820_f;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_1b2c54047:;
			{
				static jule::Ptr<_1e5e202ce_FnIns> _3120_f = jule::new_ptr<_1e5e202ce_FnIns>(_1e5e202ce_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e6a8ac6d_Data>(jule::Ptr<_1e6a8c7db_Eval>&,jule::Ptr<_1e5d5d250_FnCallExpr>&,jule::Ptr<_1e6a8ac6d_Data>&)>(_1e6add5b7_builtinCallerNew), });;
				return _3120_f;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_1b2c540ad:;
			{
				static jule::Ptr<_1e5e202ce_FnIns> _3420_f = jule::new_ptr<_1e5e202ce_FnIns>(_1e5e202ce_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e6a8ac6d_Data>(jule::Ptr<_1e6a8c7db_Eval>&,jule::Ptr<_1e5d5d250_FnCallExpr>&,jule::Ptr<_1e6a8ac6d_Data>&)>(_1e6b2e95a_builtinCallerPanic), });;
				return _3420_f;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_1b2c54124:;
			{
				static jule::Ptr<_1e5e202ce_FnIns> _3720_f = jule::new_ptr<_1e5e202ce_FnIns>(_1e5e202ce_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e6a8ac6d_Data>(jule::Ptr<_1e6a8c7db_Eval>&,jule::Ptr<_1e5d5d250_FnCallExpr>&,jule::Ptr<_1e6a8ac6d_Data>&)>(_1e6b48336_builtinCallerMake), });;
				return _3720_f;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_1b2c5418a:;
			{
				static jule::Ptr<_1e5e202ce_FnIns> _4020_f = jule::new_ptr<_1e5e202ce_FnIns>(_1e5e202ce_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e6a8ac6d_Data>(jule::Ptr<_1e6a8c7db_Eval>&,jule::Ptr<_1e5d5d250_FnCallExpr>&,jule::Ptr<_1e6a8ac6d_Data>&)>(_1e6b4176e_builtinCallerAppend), });;
				return _4020_f;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_1b2c54201:;
			{
				static jule::Ptr<_1e5e202ce_FnIns> _4320_f = jule::new_ptr<_1e5e202ce_FnIns>(_1e5e202ce_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e6a8ac6d_Data>(jule::Ptr<_1e6a8c7db_Eval>&,jule::Ptr<_1e5d5d250_FnCallExpr>&,jule::Ptr<_1e6a8ac6d_Data>&)>(_1e6b55420_builtinCallerCopy), });;
				return _4320_f;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_1b2c54267:;
			{
				static jule::Ptr<_1e5e202ce_FnIns> _4620_f = jule::new_ptr<_1e5e202ce_FnIns>(_1e5e202ce_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e6a8ac6d_Data>(jule::Ptr<_1e6a8c7db_Eval>&,jule::Ptr<_1e5d5d250_FnCallExpr>&,jule::Ptr<_1e6a8ac6d_Data>&)>(_1e6b4020c_builtinCallerClone), });;
				return _4620_f;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_1b2c54333:;
			{
				static jule::Ptr<_1e5e202ce_FnIns> _4920_f = jule::new_ptr<_1e5e202ce_FnIns>(_1e5e202ce_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e6a8ac6d_Data>(jule::Ptr<_1e6a8c7db_Eval>&,jule::Ptr<_1e5d5d250_FnCallExpr>&,jule::Ptr<_1e6a8ac6d_Data>&)>(_1e6b0747c_builtinCallerAssert), });;
				return _4920_f;
			}
		}
		else {
			_case_begin_1b2c53ab3:;
			{
				return nullptr;
			}
		}
		_match_end_1b2c5351e:;
	};
}



inline jule::Ptr<_1e6ab5d97_TypeAlias> _1e6ade695_findBuiltinTypeAlias(jule::Str _5625_ident) {
	{
		auto &_match_expr{ _5625_ident };
		
		if (_match_expr == jule::Str("byte", 4)) {
			_case_begin_1b2c59a97:;
			{
				static jule::Ptr<_1e6ab5d97_TypeAlias> _5920_t = jule::new_ptr<_1e6ab5d97_TypeAlias>(_1e6ab5d97_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1e6ababe3_TypeSymbol>(_1e6ababe3_TypeSymbol{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("u8", 2)), 6)})}), });;
				return _5920_t;
			}
		}
		else if (_match_expr == jule::Str("rune", 4)) {
			_case_begin_1b2c59b0d:;
			{
				static jule::Ptr<_1e6ab5d97_TypeAlias> _6920_t = jule::new_ptr<_1e6ab5d97_TypeAlias>(_1e6ab5d97_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1e6ababe3_TypeSymbol>(_1e6ababe3_TypeSymbol{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("i32", 3)), 6)})}), });;
				return _6920_t;
			}
		}
		else {
			_case_begin_1b2c59239:;
			{
				return nullptr;
			}
		}
		_match_end_1b2c546c9:;
	};
}



inline jule::Any _1e6ae0278_findBuiltinDef(jule::Str _8319_ident) {
	jule::Ptr<_1e5e202ce_FnIns> _8413_f = _1e6adc792_findBuiltinFn(_8319_ident);;
	if ((_8413_f != nullptr)) {
		return jule::Any(_8413_f);
	};
	jule::Ptr<_1e6ab5d97_TypeAlias> _8813_ta = _1e6ade695_findBuiltinTypeAlias(_8319_ident);;
	if ((_8813_ta != nullptr)) {
		return jule::Any(_8813_ta);
	};
	return nullptr;
}



inline jule::Any _1e6ae0c90_findBuiltinDefStdDebug(jule::Str _9527_ident) {
	{
		auto &_match_expr{ _9527_ident };
		
		if (_match_expr == jule::Str("Out", 3)) {
			_case_begin_1b2c5d54b:;
			{
				static jule::Ptr<_1e5e202ce_FnIns> _9820_f = jule::new_ptr<_1e5e202ce_FnIns>(_1e5e202ce_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e6a8ac6d_Data>(jule::Ptr<_1e6a8c7db_Eval>&,jule::Ptr<_1e5d5d250_FnCallExpr>&,jule::Ptr<_1e6a8ac6d_Data>&)>(_1e6b75dbe_builtinCallerStdDebugOut), });;
				return jule::Any(_9820_f);
			}
		}
		else if (_match_expr == jule::Str("Outln", 5)) {
			_case_begin_1b2c5d5b2:;
			{
				static jule::Ptr<_1e5e202ce_FnIns> _10120_f = jule::new_ptr<_1e5e202ce_FnIns>(_1e5e202ce_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e6a8ac6d_Data>(jule::Ptr<_1e6a8c7db_Eval>&,jule::Ptr<_1e5d5d250_FnCallExpr>&,jule::Ptr<_1e6a8ac6d_Data>&)>(_1e6b762a9_builtinCallerStdDebugOutln), });;
				return jule::Any(_10120_f);
			}
		}
		else {
			_case_begin_1b2c5d13e:;
			{
				return nullptr;
			}
		}
		_match_end_1b2c5ceeb:;
	};
}



inline jule::Any _1e6b19a33_findBuiltinDefStdMem(jule::Str _10825_ident) {
	{
		auto &_match_expr{ _10825_ident };
		
		if (_match_expr == jule::Str("SizeOf", 6)) {
			_case_begin_1b2c5d99c:;
			{
				static jule::Ptr<_1e5e202ce_FnIns> _11120_f = jule::new_ptr<_1e5e202ce_FnIns>(_1e5e202ce_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e6a8ac6d_Data>(jule::Ptr<_1e6a8c7db_Eval>&,jule::Ptr<_1e5d5d250_FnCallExpr>&,jule::Ptr<_1e6a8ac6d_Data>&)>(_1e6b2361e_builtinCallerStdMemSizeOf), });;
				return jule::Any(_11120_f);
			}
		}
		else if (_match_expr == jule::Str("AlignOf", 7)) {
			_case_begin_1b2c5da13:;
			{
				static jule::Ptr<_1e5e202ce_FnIns> _11420_f = jule::new_ptr<_1e5e202ce_FnIns>(_1e5e202ce_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e6a8ac6d_Data>(jule::Ptr<_1e6a8c7db_Eval>&,jule::Ptr<_1e5d5d250_FnCallExpr>&,jule::Ptr<_1e6a8ac6d_Data>&)>(_1e6b74c9c_builtinCallerStdMemAlignOf), });;
				return jule::Any(_11420_f);
			}
		}
		else if (_match_expr == jule::Str("Free", 4)) {
			_case_begin_1b2c5da79:;
			{
				static jule::Ptr<_1e5e202ce_FnIns> _11720_f = jule::new_ptr<_1e5e202ce_FnIns>(_1e5e202ce_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e6a8ac6d_Data>(jule::Ptr<_1e6a8c7db_Eval>&,jule::Ptr<_1e5d5d250_FnCallExpr>&,jule::Ptr<_1e6a8ac6d_Data>&)>(_1e6b75132_builtinCallerStdMemFree), });;
				return jule::Any(_11720_f);
			}
		}
		else {
			_case_begin_1b2c5e53b:;
			{
				return nullptr;
			}
		}
		_match_end_1b2c600a8:;
	};
}



inline jule::Any _1e6b66651_findBuiltinDefStdJuleIntegrated(jule::Str _12436_ident) {
	{
		auto &_match_expr{ _12436_ident };
		
		if (_match_expr == jule::Str("ToStr", 5)) {
			_case_begin_1b2c60482:;
			{
				static jule::Ptr<_1e5e202ce_FnIns> _12720_f = jule::new_ptr<_1e5e202ce_FnIns>(_1e5e202ce_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e6a8ac6d_Data>(jule::Ptr<_1e6a8c7db_Eval>&,jule::Ptr<_1e5d5d250_FnCallExpr>&,jule::Ptr<_1e6a8ac6d_Data>&)>(_1e6b75561_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_12720_f);
			}
		}
		else if (_match_expr == jule::Str("Emit", 4)) {
			_case_begin_1b2c604e8:;
			{
				static jule::Ptr<_1e5e202ce_FnIns> _13020_f = jule::new_ptr<_1e5e202ce_FnIns>(_1e5e202ce_FnIns{._field_Decl=jule::new_ptr<_1e5e1c62d_Fn>(_1e5e1c62d_Fn{._field_Generics=jule::Slice<jule::Ptr<_1e5d62045_GenericDecl>>::alloc(1LL), }), ._field_caller=jule::Fn<jule::Ptr<_1e6a8ac6d_Data>(jule::Ptr<_1e6a8c7db_Eval>&,jule::Ptr<_1e5d5d250_FnCallExpr>&,jule::Ptr<_1e6a8ac6d_Data>&)>(_1e6b7597e_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_13020_f);
			}
		}
		else {
			_case_begin_1b2c62671:;
			{
				return nullptr;
			}
		}
		_match_end_1b2c6252d:;
	};
}



inline jule::Any _1e6b656e9_findPackageBuiltinDef(jule::Str _14226_link_path, jule::Str _14242_ident) {
	{
		auto &_match_expr{ _14226_link_path };
		
		if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_1b2c64673:;
			{
				return jule::Any(_1e6ae0c90_findBuiltinDefStdDebug(_14242_ident));
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_1b2c646d9:;
			{
				return jule::Any(_1e6b19a33_findBuiltinDefStdMem(_14242_ident));
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_1b2c64750:;
			{
				return jule::Any(_1e6b66651_findBuiltinDefStdJuleIntegrated(_14242_ident));
			}
		}
		else {
			_case_begin_1b2c6286e:;
			{
				return nullptr;
			}
		}
		_match_end_1b2c63474:;
	};
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6b407a1_builtinCallerCommonPlain(jule::Ptr<_1e6a8c7db_Eval>& _15534_e, jule::Ptr<_1e5d5d250_FnCallExpr>& _15549_fc, jule::Ptr<_1e6a8ac6d_Data>& _15571_d) {
	jule::Ptr<_1e5e202ce_FnIns> _15613_f = _1e6ab9d8a_Fn(_15571_d.get()._field_Kind.ptr());;
	_1e6a7ca1d_fnCallArgChecker _15813_fcac = _1e6a7ca1d_fnCallArgChecker{._field_e=_15534_e, ._field_args=_15549_fc.get()._field_Args, ._field_errorToken=_15549_fc.get()._field_Token, ._field_f=_15613_f, ._field_dynamicAnnotation=false, };;
	if ((!(_1e6a7edd8_check(&_15813_fcac)))) {
		return nullptr;
	};
	jule::Ptr<_1e5e1602d_FnCallExprModel> _16913_model = jule::new_ptr<_1e5e1602d_FnCallExprModel>(_1e5e1602d_FnCallExprModel{._field_Token=_15549_fc.get()._field_Token, ._field_Func=_15613_f, ._field_Expr=_15571_d.get()._field_Model, ._field_Args=_15813_fcac._field_argModels, });;
	if ((_15613_f.get()._field_Result == nullptr)) {
		_15571_d=_1e6ab3416_buildVoidData();
	} else {
		_15571_d=jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=_15613_f.get()._field_Result, });
	};
	_15571_d.get()._field_Model=static_cast<jule::Any>(_16913_model);
	return _15571_d;
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6b49e5e_builtinCallerCommon(jule::Ptr<_1e6a8c7db_Eval>& _18829_e, jule::Ptr<_1e5d5d250_FnCallExpr>& _18844_fc, jule::Ptr<_1e6a8ac6d_Data>& _18866_d) {
	return _1e6b407a1_builtinCallerCommonPlain(_18829_e,_18844_fc,_18866_d);
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6b66112_builtinCallerCommonMut(jule::Ptr<_1e6a8c7db_Eval>& _19232_e, jule::Ptr<_1e5d5d250_FnCallExpr>& _19247_fc, jule::Ptr<_1e6a8ac6d_Data>& _19269_d) {
	if ((!(_19269_d.get()._field_Mutable))) {
		_1e6a8cce7_pushErr(_19232_e.ptr(), _19247_fc.get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	return _1e6b49e5e_builtinCallerCommon(_19232_e,_19247_fc,_19269_d);
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6b41450_builtinCallerError(jule::Ptr<_1e6a8c7db_Eval>& _19928_e, jule::Ptr<_1e5d5d250_FnCallExpr>& _19943_fc) {
	if ((_19943_fc.get()._field_Args.len() < 1LL)) {
		_1e6a8cce7_pushErr(_19928_e.ptr(), _19943_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("err", 3))}));
		return nullptr;
	};
	if ((_19943_fc.get()._field_Args.len() > 1LL)) {
		_1e6a8cce7_pushErr(_19928_e.ptr(), _19943_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e6a8ac6d_Data> _20713_expr = _1e6aa832e_evalExpr(_19928_e, _19943_fc.get()._field_Args[0LL]);;
	if ((_20713_expr == nullptr)) {
		return nullptr;
	};
	if (_1e6a8b158_IsNil(_20713_expr.ptr())) {
		_1e6a8cce7_pushErr(_19928_e.ptr(), _19943_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("you cannot call error function with nil", 39),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e6a8ac6d_Data> _21613_d = _1e6ab3416_buildVoidData();;
	_21613_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e5e19185_BuiltinErrorCallExprModel>(_1e5e19185_BuiltinErrorCallExprModel{._field_Err=_20713_expr.get()._field_Model}));
	return _21613_d;
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6b62ae2_builtinCallerOut(jule::Ptr<_1e6a8c7db_Eval>& _22426_e, jule::Ptr<_1e5d5d250_FnCallExpr>& _22441_fc, jule::Ptr<_1e6a8ac6d_Data>& ) {
	if ((_22441_fc.get()._field_Args.len() < 1LL)) {
		_1e6a8cce7_pushErr(_22426_e.ptr(), _22441_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1))}));
		return nullptr;
	};
	if ((_22441_fc.get()._field_Args.len() > 1LL)) {
		_1e6a8cce7_pushErr(_22426_e.ptr(), _22441_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e6a8ac6d_Data> _23313_expr = _1e6aa832e_evalExpr(_22426_e, _22441_fc.get()._field_Args[0LL]);;
	if ((_23313_expr == nullptr)) {
		return nullptr;
	};
	if ((!(_1e6ace344_isBuiltinStrConvertable(_23313_expr.get()._field_Kind)))) {
		_1e6a8cce7_pushErr(_22426_e.ptr(), _22441_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e6a8ac6d_Data> _24313_d = _1e6ab3416_buildVoidData();;
	_24313_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e5e17e42_BuiltinOutCallExprModel>(_1e5e17e42_BuiltinOutCallExprModel{._field_Expr=_23313_expr.get()._field_Model, }));
	return _24313_d;
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6b654da_builtinCallerOutln(jule::Ptr<_1e6a8c7db_Eval>& _24828_e, jule::Ptr<_1e5d5d250_FnCallExpr>& _24843_fc, jule::Ptr<_1e6a8ac6d_Data>& _24865_d) {
	_24865_d=_1e6b62ae2_builtinCallerOut(_24828_e,_24843_fc,_24865_d);
	if ((_24865_d == nullptr)) {
		return nullptr;
	};
	_24865_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e5e1812e_BuiltinOutlnCallExprModel>(_1e5e1812e_BuiltinOutlnCallExprModel{._field_Expr=_24865_d.get()._field_Model.operator jule::Ptr<_1e5e17e42_BuiltinOutCallExprModel>().get()._field_Expr, }));
	return _24865_d;
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6add5b7_builtinCallerNew(jule::Ptr<_1e6a8c7db_Eval>& _26026_e, jule::Ptr<_1e5d5d250_FnCallExpr>& _26041_fc, jule::Ptr<_1e6a8ac6d_Data>& _26063_d) {
	if ((_26041_fc.get()._field_Args.len() < 1LL)) {
		_1e6a8cce7_pushErr(_26026_e.ptr(), _26041_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type", 4))}));
		return nullptr;
	};
	if ((_26041_fc.get()._field_Args.len() > 2LL)) {
		_1e6a8cce7_pushErr(_26026_e.ptr(), _26041_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e6a8ac6d_Data> _26913_t = _1e6aa7c13_evalExprKind(_26026_e, _26041_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_26913_t == nullptr)) {
		return nullptr;
	};
	if ((!(_26913_t.get()._field_Decl))) {
		_1e6a8cce7_pushErr(_26026_e.ptr(), _26041_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((!(_1e6acdcd3_isValidForSptrType(_26913_t.get()._field_Kind)))) {
		jule::Ptr<_1e5d714d8_StructIns> _28017_s = _1e6aba0ee_Struct(_26913_t.get()._field_Kind.ptr());;
		if ((((_28017_s != nullptr) && (_28017_s.get()._field_Decl != nullptr)) && _28017_s.get()._field_Decl.get()._field_CppLinked)) {
			_1e6a8cce7_pushErr(_26026_e.ptr(), _26041_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
		};
		return nullptr;
	};
	_26063_d.get()._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(jule::new_ptr<_1e6abece6_Sptr>(_1e6abece6_Sptr{._field_Elem=_26913_t.get()._field_Kind}), 7)});
	if ((_26041_fc.get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1e6ab6a8a_TypeKind> _29417_old = _26026_e.get()._field_prefix;;
		_26026_e.get()._field_prefix=_26913_t.get()._field_Kind;
		jule::Ptr<_1e6a8ac6d_Data> _29717_init = _1e6aa832e_evalExpr(_26026_e, _26041_fc.get()._field_Args[1LL]);;
		_26026_e.get()._field_prefix=_29417_old;
		if ((_29717_init != nullptr)) {
			jule::Ptr<_1e47137a5_Token> _30221_token = _26041_fc.get()._field_Args[1LL].get()._field_Token;;
			;
			_1e6a2d89d_checkValidityForInitExpr(_26026_e.get()._field_s, (!(_26026_e.get()._field_immutable)),false,_26913_t.get()._field_Kind,_29717_init,_30221_token);
			_1e6a2ab64_checkAssignType(_26026_e.get()._field_s, false,_26913_t.get()._field_Kind,_29717_init,_30221_token);
			_26063_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e5e18508_BuiltinNewCallExprModel>(_1e5e18508_BuiltinNewCallExprModel{._field_Kind=_26913_t.get()._field_Kind, ._field_Init=_29717_init.get()._field_Model}));
		};
	} else {
		_26063_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e5e18508_BuiltinNewCallExprModel>(_1e5e18508_BuiltinNewCallExprModel{._field_Kind=_26913_t.get()._field_Kind, }));
	};
	return _26063_d;
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6b2e95a_builtinCallerPanic(jule::Ptr<_1e6a8c7db_Eval>& _32228_e, jule::Ptr<_1e5d5d250_FnCallExpr>& _32243_fc, jule::Ptr<_1e6a8ac6d_Data>& ) {
	if ((_32243_fc.get()._field_Args.len() < 1LL)) {
		_1e6a8cce7_pushErr(_32228_e.ptr(), _32243_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("message", 7))}));
		return nullptr;
	};
	if ((_32243_fc.get()._field_Args.len() > 1LL)) {
		_1e6a8cce7_pushErr(_32228_e.ptr(), _32243_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e6a8ac6d_Data> _33113_expr = _1e6aa832e_evalExpr(_32228_e, _32243_fc.get()._field_Args[0LL]);;
	if ((_33113_expr == nullptr)) {
		return nullptr;
	};
	if (((_1e6ab8b9c_Prim(_33113_expr.get()._field_Kind.ptr()) == nullptr) || (!(_1e6abe796_IsStr(_1e6ab8b9c_Prim(_33113_expr.get()._field_Kind.ptr()).ptr()))))) {
		_1e6a8cce7_pushErr(_32228_e.ptr(), _32243_fc.get()._field_Token,jule::Str("panic function only accepts strings", 35),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e6a8ac6d_Data> _34013_d = _1e6ab3416_buildVoidData();;
	_34013_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e5e186e5_BuiltinPanicCallExprModel>(_1e5e186e5_BuiltinPanicCallExprModel{._field_Token=_32243_fc.get()._field_Token, ._field_Expr=_33113_expr.get()._field_Model}));
	return _34013_d;
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6b48336_builtinCallerMake(jule::Ptr<_1e6a8c7db_Eval>& _34827_e, jule::Ptr<_1e5d5d250_FnCallExpr>& _34842_fc, jule::Ptr<_1e6a8ac6d_Data>& _34864_d) {
	if ((_34842_fc.get()._field_Args.len() < 2LL)) {
		if ((_34842_fc.get()._field_Args.len() == 1LL)) {
			_1e6a8cce7_pushErr(_34827_e.ptr(), _34842_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("size", 4))}));
			return nullptr;
		};
		_1e6a8cce7_pushErr(_34827_e.ptr(), _34842_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type, size", 10))}));
		return nullptr;
	};
	jule::Ptr<_1e6a8ac6d_Data> _35813_t = _1e6aa7c13_evalExprKind(_34827_e, _34842_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_35813_t == nullptr)) {
		return nullptr;
	};
	{
		
		if ((!(_35813_t.get()._field_Decl))) {
			_case_begin_1b2c8929c:;
			{
				goto _match_end_1b2c89588;
			}
		}
		else if ((_1e6ab9b26_Slc(_35813_t.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2c89313:;
			{
				if ((_34842_fc.get()._field_Args.len() > 3LL)) {
					_1e6a8cce7_pushErr(_34827_e.ptr(), _34842_fc.get()._field_Args[3LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				};
				goto _julec_label_cont;
			}
		}
		else if (((_1e6ab8b9c_Prim(_35813_t.get()._field_Kind.ptr()) != nullptr) && _1e6abe796_IsStr(_1e6ab8b9c_Prim(_35813_t.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1b2c89379:;
			{
				if ((_34842_fc.get()._field_Args.len() > 2LL)) {
					_1e6a8cce7_pushErr(_34827_e.ptr(), _34842_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				};
				goto _julec_label_cont;
			}
		}
		_match_end_1b2c89588:;
	};
	_1e6a8cce7_pushErr(_34827_e.ptr(), _34842_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
	return nullptr;
	_julec_label_cont:;
	_34864_d.get()._field_Kind=_35813_t.get()._field_Kind;
	jule::Ptr<_1e6a8ac6d_Data> _38213_len = _1e6aa832e_evalExpr(_1e6a2a35b_evalp(_34827_e.get()._field_s, _34827_e.get()._field_lookup,_35813_t.get()._field_Kind), _34842_fc.get()._field_Args[1LL]);;
	if ((_38213_len == nullptr)) {
		return nullptr;
	};
	_1e6a963d8_checkIntegerIndexingByData(_34827_e.ptr(), _38213_len,_34842_fc.get()._field_Args[1LL].get()._field_Token);
	jule::Ptr<_1e5e18abe_BuiltinMakeCallExprModel> _38913_model = jule::new_ptr<_1e5e18abe_BuiltinMakeCallExprModel>(_1e5e18abe_BuiltinMakeCallExprModel{._field_Kind=_35813_t.get()._field_Kind, ._field_Len=_38213_len.get()._field_Model, });;
	_34864_d.get()._field_Model=static_cast<jule::Any>(_38913_model);
	if ((_34842_fc.get()._field_Args.len() == 3LL)) {
		jule::Ptr<_1e6a8ac6d_Data> _39517_cap = _1e6aa832e_evalExpr(_1e6a2a35b_evalp(_34827_e.get()._field_s, _34827_e.get()._field_lookup,_35813_t.get()._field_Kind), _34842_fc.get()._field_Args[2LL]);;
		if ((_39517_cap == nullptr)) {
			return _34864_d;
		};
		_1e6a963d8_checkIntegerIndexingByData(_34827_e.ptr(), _39517_cap,_34842_fc.get()._field_Args[2LL].get()._field_Token);
		_38913_model.get()._field_Cap=_39517_cap.get()._field_Model;
	};
	return _34864_d;
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6b4176e_builtinCallerAppend(jule::Ptr<_1e6a8c7db_Eval>& _40529_e, jule::Ptr<_1e5d5d250_FnCallExpr>& _40544_fc, jule::Ptr<_1e6a8ac6d_Data>& _40566_d) {
	if ((_40544_fc.get()._field_Args.len() < 2LL)) {
		if ((_40544_fc.get()._field_Args.len() == 1LL)) {
			_1e6a8cce7_pushErr(_40529_e.ptr(), _40544_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		};
		_1e6a8cce7_pushErr(_40529_e.ptr(), _40544_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	};
	jule::Ptr<_1e6a8ac6d_Data> _41513_t = _1e6aa832e_evalExpr(_40529_e, _40544_fc.get()._field_Args[0LL]);;
	if ((_41513_t == nullptr)) {
		return nullptr;
	};
	if ((_1e6ab9b26_Slc(_41513_t.get()._field_Kind.ptr()) == nullptr)) {
		_1e6a8cce7_pushErr(_40529_e.ptr(), _40544_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e5e202ce_FnIns> _42513_f = jule::new_ptr<_1e5e202ce_FnIns>(_1e5e202ce_FnIns{._field_Params=jule::Slice<jule::Ptr<_1e5e1e410_ParamIns>>::make({jule::new_ptr<_1e5e1e410_ParamIns>(_1e5e1e410_ParamIns{._field_Decl=jule::new_ptr<_1e5e1ace1_Param>(_1e5e1ace1_Param{._field_Mutable=true, }), ._field_Kind=_41513_t.get()._field_Kind}),jule::new_ptr<_1e5e1e410_ParamIns>(_1e5e1e410_ParamIns{._field_Decl=jule::new_ptr<_1e5e1ace1_Param>(_1e5e1ace1_Param{._field_Mutable=true, ._field_Variadic=true, }), ._field_Kind=_1e6ab9b26_Slc(_41513_t.get()._field_Kind.ptr()).get()._field_Elem})}), ._field_Result=_41513_t.get()._field_Kind, ._field_caller=jule::Fn<jule::Ptr<_1e6a8ac6d_Data>(jule::Ptr<_1e6a8c7db_Eval>&,jule::Ptr<_1e5d5d250_FnCallExpr>&,jule::Ptr<_1e6a8ac6d_Data>&)>(_1e6b407a1_builtinCallerCommonPlain), });;
	_40566_d.get()._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_42513_f, 1)});
	_40566_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e5e1787b_CommonIdentExprModel>(_1e5e1787b_CommonIdentExprModel{._field_Ident=jule::Str("append", 6)}));
	_40566_d=_1e6b407a1_builtinCallerCommonPlain(_40529_e,_40544_fc,_40566_d);
	if ((_40566_d != nullptr)) {
		jule::Ptr<_1e5e1602d_FnCallExprModel> _45317_model = _40566_d.get()._field_Model.operator jule::Ptr<_1e5e1602d_FnCallExprModel>();;
		_40566_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e5e18cab_BuiltinAppendCallExprModel>(_1e5e18cab_BuiltinAppendCallExprModel{._field_Dest=_45317_model.get()._field_Args[0LL], ._field_Elements=_45317_model.get()._field_Args[1LL]}));
	};
	return _40566_d;
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6b62295_callerCopySlice(jule::Ptr<_1e6a8ac6d_Data>& _46225_dest, jule::Ptr<_1e6a8c7db_Eval>& _46243_e, jule::Ptr<_1e5d5d250_FnCallExpr>& _46258_fc, jule::Ptr<_1e6a8ac6d_Data>& _46280_d) {
	if ((!(_46225_dest.get()._field_Mutable))) {
		_1e6a8cce7_pushErr(_46243_e.ptr(), _46258_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e6a8ac6d_Data> _46713_src = _1e6aa832e_evalExpr(_46243_e, _46258_fc.get()._field_Args[1LL]);;
	if ((_46713_src == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1e6ac0753_Slc> _47113_slc = _1e6ab9b26_Slc(_46713_src.get()._field_Kind.ptr());;
	if ((_47113_slc != nullptr)) {
		if (((!(_46713_src.get()._field_Mutable)) && _1e6ab7e87_Mutable(_47113_slc.get()._field_Elem.ptr()))) {
			_1e6a8cce7_pushErr(_46243_e.ptr(), _46258_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
		};
		if ((!(_1e6ab7294_Equals(_46225_dest.get()._field_Kind, _46713_src.get()._field_Kind)))) {
			_1e6a8cce7_pushErr(_46243_e.ptr(), _46258_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1e6ab6e86_Str(_46225_dest.get()._field_Kind.ptr())),jule::Any(_1e6ab6e86_Str(_46713_src.get()._field_Kind.ptr()))}));
		};
	} else {
		jule::Ptr<_1e6abb562_Prim> _48113_dest_prim = _1e6ab8b9c_Prim(_1e6ab9b26_Slc(_46225_dest.get()._field_Kind.ptr()).get()._field_Elem.ptr());;
		jule::Ptr<_1e6abb562_Prim> _48213_prim = _1e6ab8b9c_Prim(_46713_src.get()._field_Kind.ptr());;
		if (((((_48113_dest_prim == nullptr) || (_48213_prim == nullptr)) || (!(_1e6abe796_IsStr(_48213_prim.ptr())))) || (!(_1e6abcd6b_IsU8(_48113_dest_prim.ptr()))))) {
			_1e6a8cce7_pushErr(_46243_e.ptr(), _46258_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1e6ab6e86_Str(_46225_dest.get()._field_Kind.ptr())),jule::Any(_1e6ab6e86_Str(_46713_src.get()._field_Kind.ptr()))}));
		};
	};
	_46280_d.get()._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("int", 3)), 6)});
	_46280_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e5e18e98_BuiltinCopyCallExprModel>(_1e5e18e98_BuiltinCopyCallExprModel{._field_Dest=_46225_dest, ._field_Src=_46713_src}));
	return _46280_d;
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6adadcd_callerCopyStr(jule::Ptr<_1e6a8ac6d_Data>& _49623_dest, jule::Ptr<_1e6a8c7db_Eval>& _49641_e, jule::Ptr<_1e5d5d250_FnCallExpr>& _49656_fc, jule::Ptr<_1e6a8ac6d_Data>& _49678_d) {
	if ((!(_49623_dest.get()._field_Mutable))) {
		_1e6a8cce7_pushErr(_49641_e.ptr(), _49656_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e6a8ac6d_Data> _50113_src = _1e6aa832e_evalExpr(_49641_e, _49656_fc.get()._field_Args[1LL]);;
	if ((_50113_src == nullptr)) {
		return nullptr;
	};
	{
		
		if ((_1e6ab8b9c_Prim(_50113_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2ca7474:;
			{
				if (_1e6abe796_IsStr(_1e6ab8b9c_Prim(_50113_src.get()._field_Kind.ptr()).ptr())) {
					goto _julec_label_end;
				};
			}
		}
		else if ((_1e6ab9b26_Slc(_50113_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2ca74da:;
			{
				jule::Ptr<_1e6ac0753_Slc> _51117_slc = _1e6ab9b26_Slc(_50113_src.get()._field_Kind.ptr());;
				if (((_1e6ab8b9c_Prim(_51117_slc.get()._field_Elem.ptr()) != nullptr) && _1e6abcd6b_IsU8(_1e6ab8b9c_Prim(_51117_slc.get()._field_Elem.ptr()).ptr()))) {
					goto _julec_label_end;
				};
			}
		}
		_match_end_1b2ca7908:;
	};
	_1e6a8cce7_pushErr(_49641_e.ptr(), _49656_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1e6ab6e86_Str(_49623_dest.get()._field_Kind.ptr())),jule::Any(_1e6ab6e86_Str(_50113_src.get()._field_Kind.ptr()))}));
	_julec_label_end:;
	_49678_d.get()._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("int", 3)), 6)});
	_49678_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e5e18e98_BuiltinCopyCallExprModel>(_1e5e18e98_BuiltinCopyCallExprModel{._field_Dest=_49623_dest, ._field_Src=_50113_src}));
	return _49678_d;
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6b55420_builtinCallerCopy(jule::Ptr<_1e6a8c7db_Eval>& _52627_e, jule::Ptr<_1e5d5d250_FnCallExpr>& _52642_fc, jule::Ptr<_1e6a8ac6d_Data>& _52664_d) {
	if ((_52642_fc.get()._field_Args.len() < 2LL)) {
		if ((_52642_fc.get()._field_Args.len() == 1LL)) {
			_1e6a8cce7_pushErr(_52627_e.ptr(), _52642_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		};
		_1e6a8cce7_pushErr(_52627_e.ptr(), _52642_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	};
	if ((_52642_fc.get()._field_Args.len() > 2LL)) {
		_1e6a8cce7_pushErr(_52627_e.ptr(), _52642_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e6a8ac6d_Data> _53913_dest = _1e6aa832e_evalExpr(_52627_e, _52642_fc.get()._field_Args[0LL]);;
	{
		
		if ((_53913_dest == nullptr)) {
			_case_begin_1b2cb1b54:;
			{
				return nullptr;
			}
		}
		else if ((_1e6ab9b26_Slc(_53913_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2cb1bba:;
			{
				return _1e6b62295_callerCopySlice(_53913_dest,_52627_e,_52642_fc,_52664_d);
			}
		}
		else if (((_1e6ab8b9c_Prim(_53913_dest.get()._field_Kind.ptr()) != nullptr) && _1e6abe796_IsStr(_1e6ab8b9c_Prim(_53913_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1b2cb1c31:;
			{
				return _1e6adadcd_callerCopyStr(_53913_dest,_52627_e,_52642_fc,_52664_d);
			}
		}
		else {
			_case_begin_1b2cb1add:;
			{
				_1e6a8cce7_pushErr(_52627_e.ptr(), _52642_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1b2cb1a88:;
	};
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6b4020c_builtinCallerClone(jule::Ptr<_1e6a8c7db_Eval>& _55328_e, jule::Ptr<_1e5d5d250_FnCallExpr>& _55343_fc, jule::Ptr<_1e6a8ac6d_Data>& ) {
	if ((_55343_fc.get()._field_Args.len() < 1LL)) {
		_1e6a8cce7_pushErr(_55328_e.ptr(), _55343_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_55343_fc.get()._field_Args.len() > 1LL)) {
		_1e6a8cce7_pushErr(_55328_e.ptr(), _55343_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e6a8ac6d_Data> _56213_d = _1e6aa7c13_evalExprKind(_55328_e, _55343_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_56213_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1e6ab86c4_SupportsCloning(_56213_d.get()._field_Kind.ptr())))) {
		{
			
			if ((_1e6ab9b26_Slc(_56213_d.get()._field_Kind.ptr()) != nullptr) || (_1e6aba5c7_Map(_56213_d.get()._field_Kind.ptr()) != nullptr) || (_1e6ab98b2_Arr(_56213_d.get()._field_Kind.ptr()) != nullptr) || (_1e6ab8e11_Sptr(_56213_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1b2cb78b3:;
				{
					{
						_1e6a8cce7_pushErr(_55328_e.ptr(), _55343_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("type @ has internally types which is not supports cloning", 57),jule::Slice<jule::Any>::make({jule::Any(_1e6ab6e86_Str(_56213_d.get()._field_Kind.ptr()))}));
					};
				}
			}
			else if ((_1e6aba0ee_Struct(_56213_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1b2cb7929:;
				{
					{
						_1e6a8cce7_pushErr(_55328_e.ptr(), _55343_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("type @ is not derives @", 23),jule::Slice<jule::Any>::make({jule::Any(_1e6ab6e86_Str(_56213_d.get()._field_Kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					};
				}
			}
			else {
				_case_begin_1b2cb784c:;
				{
					{
						_1e6a8cce7_pushErr(_55328_e.ptr(), _55343_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("type @ is not support cloning", 29),jule::Slice<jule::Any>::make({jule::Any(_1e6ab6e86_Str(_56213_d.get()._field_Kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					};
				}
			}
			_match_end_1b2cb7484:;
		};
	};
	_56213_d.get()._field_Mutable=true;
	_56213_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e5e1831b_BuiltinCloneCallExprModel>(_1e5e1831b_BuiltinCloneCallExprModel{._field_Expr=_56213_d.get()._field_Model}));
	return _56213_d;
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6b0747c_builtinCallerAssert(jule::Ptr<_1e6a8c7db_Eval>& _59529_e, jule::Ptr<_1e5d5d250_FnCallExpr>& _59544_fc, jule::Ptr<_1e6a8ac6d_Data>& ) {
	if ((_59544_fc.get()._field_Args.len() < 1LL)) {
		_1e6a8cce7_pushErr(_59529_e.ptr(), _59544_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_59544_fc.get()._field_Args.len() > 2LL)) {
		_1e6a8cce7_pushErr(_59529_e.ptr(), _59544_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e6a8ac6d_Data> _60413_expr = _1e6aa832e_evalExpr(_59529_e, _59544_fc.get()._field_Args[0LL]);;
	if ((_60413_expr == nullptr)) {
		return nullptr;
	};
	if (((_1e6ab8b9c_Prim(_60413_expr.get()._field_Kind.ptr()) == nullptr) || (!(_1e6abe532_IsBool(_1e6ab8b9c_Prim(_60413_expr.get()._field_Kind.ptr()).ptr()))))) {
		_1e6a8cce7_pushErr(_59529_e.ptr(), _59544_fc.get()._field_Token,jule::Str("assertion requires boolean expression", 37),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e5e188d2_BuiltinAssertCallExprModel> _61313_model = jule::new_ptr<_1e5e188d2_BuiltinAssertCallExprModel>(_1e5e188d2_BuiltinAssertCallExprModel{._field_Token=_59544_fc.get()._field_Token, ._field_Expr=_60413_expr.get()._field_Model, ._field_Log=jule::Str("assertion failed", 16)});;
	if ((_59544_fc.get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1e6a8ac6d_Data> _62117_log = _1e6aa832e_evalExpr(_59529_e, _59544_fc.get()._field_Args[1LL]);;
		if ((_62117_log == nullptr)) {
			return nullptr;
		};
		if ((((!(_1e6a8b631_IsConst(_62117_log.ptr()))) || (_1e6ab8b9c_Prim(_62117_log.get()._field_Kind.ptr()) == nullptr)) || (!(_1e6abe796_IsStr(_1e6ab8b9c_Prim(_62117_log.get()._field_Kind.ptr()).ptr()))))) {
			_1e6a8cce7_pushErr(_59529_e.ptr(), _59544_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("const str", 9)),jule::Any(_1e6ab6e86_Str(_62117_log.get()._field_Kind.ptr()))}));
			return nullptr;
		};
		_61313_model.get()._field_Log=_1e5e0d564_ReadStr(_62117_log.get()._field_Constant.ptr());
	};
	jule::Ptr<_1e6a8ac6d_Data> _63413_d = _1e6ab3416_buildVoidData();;
	_63413_d.get()._field_Model=static_cast<jule::Any>(_61313_model);
	return _63413_d;
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6b2361e_builtinCallerStdMemSizeOf(jule::Ptr<_1e6a8c7db_Eval>& _63935_e, jule::Ptr<_1e5d5d250_FnCallExpr>& _63950_fc, jule::Ptr<_1e6a8ac6d_Data>& ) {
	jule::Ptr<_1e6a8ac6d_Data> _64013_result = jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("uint", 4)), 6)}), });;
	if ((_63950_fc.get()._field_Args.len() < 1LL)) {
		_1e6a8cce7_pushErr(_63935_e.ptr(), _63950_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9))}));
		return _64013_result;
	};
	if ((_63950_fc.get()._field_Args.len() > 1LL)) {
		_1e6a8cce7_pushErr(_63935_e.ptr(), _63950_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e6a8ac6d_Data> _65213_d = _1e6aa7c13_evalExprKind(_63935_e, _63950_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_65213_d == nullptr)) {
		return _64013_result;
	};
	_64013_result.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e5e17084_SizeofExprModel>(_1e5e17084_SizeofExprModel{._field_Expr=_65213_d.get()._field_Model}));
	return _64013_result;
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6b74c9c_builtinCallerStdMemAlignOf(jule::Ptr<_1e6a8c7db_Eval>& _66136_e, jule::Ptr<_1e5d5d250_FnCallExpr>& _66151_fc, jule::Ptr<_1e6a8ac6d_Data>& ) {
	jule::Ptr<_1e6a8ac6d_Data> _66213_result = jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("uint", 4)), 6)}), });;
	if ((_66151_fc.get()._field_Args.len() < 1LL)) {
		_1e6a8cce7_pushErr(_66136_e.ptr(), _66151_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9))}));
		return _66213_result;
	};
	if ((_66151_fc.get()._field_Args.len() > 1LL)) {
		_1e6a8cce7_pushErr(_66136_e.ptr(), _66151_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e6a8ac6d_Data> _67413_d = _1e6aa7c13_evalExprKind(_66136_e, _66151_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_67413_d == nullptr)) {
		return _66213_result;
	};
	_66213_result.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e5e197e5_AlignofExprModel>(_1e5e197e5_AlignofExprModel{._field_Expr=_67413_d.get()._field_Model}));
	return _66213_result;
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6b75132_builtinCallerStdMemFree(jule::Ptr<_1e6a8c7db_Eval>& _68333_e, jule::Ptr<_1e5d5d250_FnCallExpr>& _68348_fc, jule::Ptr<_1e6a8ac6d_Data>& ) {
	if ((_68348_fc.get()._field_Args.len() < 1LL)) {
		_1e6a8cce7_pushErr(_68333_e.ptr(), _68348_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("h", 1))}));
		return nullptr;
	};
	if ((_68348_fc.get()._field_Args.len() > 1LL)) {
		_1e6a8cce7_pushErr(_68333_e.ptr(), _68348_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e6a8ac6d_Data> _69213_d = _1e6aa7c13_evalExprKind(_68333_e, _68348_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_69213_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1e6ab8460_PerformsRC(_69213_d.get()._field_Kind.ptr())))) {
		_1e6a8cce7_pushErr(_68333_e.ptr(), _68348_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e6a8ac6d_Data> _70113_result = _1e6ab3416_buildVoidData();;
	_70113_result.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e5e1a098_FreeExprModel>(_1e5e1a098_FreeExprModel{._field_Expr=_69213_d.get()._field_Model}));
	return _70113_result;
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6b75561_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1e6a8c7db_Eval>& _70645_e, jule::Ptr<_1e5d5d250_FnCallExpr>& _70660_fc, jule::Ptr<_1e6a8ac6d_Data>& ) {
	if ((_70660_fc.get()._field_Args.len() < 1LL)) {
		_1e6a8cce7_pushErr(_70645_e.ptr(), _70660_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_70660_fc.get()._field_Args.len() > 1LL)) {
		_1e6a8cce7_pushErr(_70645_e.ptr(), _70660_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e6a8ac6d_Data> _71513_d = _1e6aa7c13_evalExprKind(_70645_e, _70660_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_71513_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1e6ace344_isBuiltinStrConvertable(_71513_d.get()._field_Kind)))) {
		_1e6a8cce7_pushErr(_70645_e.ptr(), _70660_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1e6a8ac6d_Data>(_1e6a8ac6d_Data{._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(_1e6ace971_buildPrimType(jule::Str("str", 3)), 6)}), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e5e19bbe_IntegratedToStrExprModel>(_1e5e19bbe_IntegratedToStrExprModel{._field_Expr=_71513_d.get()._field_Model})), });
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6b7597e_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1e6a8c7db_Eval>& _73344_e, jule::Ptr<_1e5d5d250_FnCallExpr>& _73359_fc, jule::Ptr<_1e6a8ac6d_Data>& _73381_d) {
	if ((!(_1e6a8d732_isUnsafe(_73344_e.ptr())))) {
		_1e6a8cce7_pushErr(_73344_e.ptr(), _73359_fc.get()._field_Token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	if ((_73359_fc.get()._field_Args.len() < 1LL)) {
		_1e6a8cce7_pushErr(_73344_e.ptr(), _73359_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("code", 4))}));
		return nullptr;
	};
	jule::Ptr<_1e6a8ac6d_Data> _74313_argd = _1e6aa832e_evalExpr(_73344_e, _73359_fc.get()._field_Args[0LL]);;
	if ((_74313_argd == nullptr)) {
		return nullptr;
	};
	if (((_1e6ab8b9c_Prim(_74313_argd.get()._field_Kind.ptr()) == nullptr) || (!(_1e6abe796_IsStr(_1e6ab8b9c_Prim(_74313_argd.get()._field_Kind.ptr()).ptr()))))) {
		_1e6a8cce7_pushErr(_73344_e.ptr(), _73359_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1e6ab6e86_Str(_74313_argd.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	if (((!(_1e6a8b631_IsConst(_74313_argd.ptr()))) || (!(_1e5e1090c_IsStr(_74313_argd.get()._field_Constant.ptr()))))) {
		_1e6a8cce7_pushErr(_73344_e.ptr(), _73359_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e6a8ac6d_Data> _75813_r = _1e6ab3416_buildVoidData();;
	jule::Ptr<_1e5e202ce_FnIns> _76013_f = _1e6ab9d8a_Fn(_73381_d.get()._field_Kind.ptr());;
	if ((_76013_f.get()._field_Generics.len() > 0LL)) {
		_75813_r.get()._field_Kind=_76013_f.get()._field_Generics[0LL].get()._field_Kind;
	};
	jule::Ptr<_1e5e19dab_BackendEmitExprModel> _76513_model = jule::new_ptr<_1e5e19dab_BackendEmitExprModel>(_1e5e19dab_BackendEmitExprModel{._field_Code=_1e5e0d564_ReadStr(_74313_argd.get()._field_Constant.ptr()), });;
	if ((_73359_fc.get()._field_Args.len() > 1LL)) {
		_76513_model.get()._field_Exprs=jule::Slice<jule::Any>::alloc(0LL,(_73359_fc.get()._field_Args.len() - 1LL));
		{
			auto expr = _73359_fc.get()._field_Args.slice(1LL);
			auto it = expr.begin();
			_iter_begin_1b2ce1db5:;
			if (it != expr.end()) {
				jule::Ptr<_1e5d58e82_Expr> _77121_arg = *it;
				{
					_74313_argd=_1e6aa7c13_evalExprKind(_73344_e, _77121_arg.get()._field_Kind);
					if ((_74313_argd == nullptr)) {
						return nullptr;
					};
					_76513_model.get()._field_Exprs = jule::alloc_for_append(_76513_model.get()._field_Exprs,1);_76513_model.get()._field_Exprs.__push(_74313_argd.get()._field_Model);;
				}
				_iter_next_1b2ce1db5:;
				++it;
				goto _iter_begin_1b2ce1db5;
			}
			_iter_end_1b2ce1db5:;
		};
	};
	_75813_r.get()._field_Model=static_cast<jule::Any>(_76513_model);
	return _75813_r;
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6b75dbe_builtinCallerStdDebugOut(jule::Ptr<_1e6a8c7db_Eval>& _78434_e, jule::Ptr<_1e5d5d250_FnCallExpr>& _78449_fc, jule::Ptr<_1e6a8ac6d_Data>& _78471_d) {
	_78471_d=_1e6b62ae2_builtinCallerOut(_78434_e,_78449_fc,_78471_d);
	if ((_78471_d == nullptr)) {
		return nullptr;
	};
	_78471_d.get()._field_Model.operator jule::Ptr<_1e5e17e42_BuiltinOutCallExprModel>().get()._field_Debug=true;
	return _78471_d;
}



inline jule::Ptr<_1e6a8ac6d_Data> _1e6b762a9_builtinCallerStdDebugOutln(jule::Ptr<_1e6a8c7db_Eval>& _79336_e, jule::Ptr<_1e5d5d250_FnCallExpr>& _79351_fc, jule::Ptr<_1e6a8ac6d_Data>& _79373_d) {
	_79373_d=_1e6b654da_builtinCallerOutln(_79336_e,_79351_fc,_79373_d);
	if ((_79373_d == nullptr)) {
		return nullptr;
	};
	_79373_d.get()._field_Model.operator jule::Ptr<_1e5e1812e_BuiltinOutlnCallExprModel>().get()._field_Debug=true;
	return _79373_d;
}



inline jule::Bool _1e6baa3ba_FindModuleFile(jule::Slice<jule::Ptr<_1e261a48e_DirEntry>>& _1220_dirents) {
	{
		auto &expr = _1220_dirents;
		auto it = expr.begin();
		_iter_begin_1b2ce7294:;
		if (it != expr.end()) {
			jule::Ptr<_1e261a48e_DirEntry> &_1312_d = *it;
			{
				if (((!(_1e26092c4_IsDir(_1312_d.get()._field_Stat.ptr()))) && (_1312_d.get()._field_Name == jule::Str("jule.mod", 8)))) {
					return true;
				};
			}
			_iter_next_1b2ce7294:;
			++it;
			goto _iter_begin_1b2ce7294;
		}
		_iter_end_1b2ce7294:;
	};
	return false;
}



inline jule::Str _1e6baa4ec_FindModuleFileDeep(jule::Str _2427_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_1e261a48e_DirEntry>> _2617_dirents = ({
				auto except = static__1e33cde66_Read(_2427_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1b2ce754c;
				} jule::Slice<jule::Ptr<_1e261a48e_DirEntry>>();});
			});;
			jule::Bool _3013_exist = _1e6baa3ba_FindModuleFile(_2617_dirents);;
			if (_3013_exist) {
				return _2427_path;
			};
			jule::I64 _3513_n = _2427_path.len();;
			_2427_path=_1e34b81c6_Dir(_2427_path);
			if ((_2427_path.len() == _3513_n)) {
				goto _iter_end_1b2ce754c;
			};
		}
	_iter_next_1b2ce754c:;
	}
	_iter_end_1b2ce754c:;;
	return jule::Str();
}



inline jule::Slice<_1e43e3a18_Log> _1e6baa783_CheckModuleFile(jule::Str _4620_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__1e26046a9_Read(_1e34d0919_Join(jule::Slice<jule::Str>::make({_4620_path,jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_1e43e3a18_Log>::make({_1e43e3a18_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file could not checked because of a problem", 50), }});
		} jule::Slice<jule::U8>();});
	});;
	jule::Str _539_s = _1e438ecd3_Trim(static_cast<jule::Str>(_479_bytes),jule::Str(" \n\r\t\v", 5));;
	if ((_539_s.len() != 0LL)) {
		return jule::Slice<_1e43e3a18_Log>::make({_1e43e3a18_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file has syntax error(s)", 31), }});
	};
	return nullptr;
}



inline jule::Ptr<_1c9978c99_FileInfo> _1c99c0494_ParseFile(jule::Ptr<_1e4718b40_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1c9978c99_FileInfo> _2713_finf = jule::new_ptr<_1c9978c99_FileInfo>();;
	std::tie(_2713_finf.get()._field_Ast,_2713_finf.get()._field_Errors) = _1c99c09c2_parseFileset(_2318_f);
	if ((_2713_finf.get()._field_Errors.len() > 0LL)) {
		_2713_finf.get()._field_Ast=nullptr;
	};
	return _2713_finf;
}



inline std::tuple<jule::Ptr<_1e5d201bd_Ast>,jule::Slice<_1e43e3a18_Log>> _1c99c09c2_parseFileset(jule::Ptr<_1e4718b40_File> _5521_f) {
	jule::Ptr<_1c99ddced_parser> _5613_p = jule::new_ptr<_1c99ddced_parser>();;
	_1c99ed6c0_parse(_5613_p, _5521_f);
	return std::make_tuple(_5613_p.get()._field_ast,_5613_p.get()._field_errors);
}



inline jule::Ptr<_1e5d64c7e_ScopeTree> _1c99c13c9_newScope(void) {
	return jule::new_ptr<_1e5d64c7e_ScopeTree>();
}



inline std::tuple<jule::Bool,jule::Bool> _1c99c16d7_isSt(jule::Ptr<_1e47137a5_Token> _509_current, jule::Ptr<_1e47137a5_Token> _5026_prev) {
	jule::Bool _5042_ok = jule::Bool();
	jule::Bool _5052_terminated = jule::Bool();
	_5042_ok=((_509_current.get()._field_Id == static_cast<jule::U64>(5LLU)) || (_5026_prev.get()._field_Row < _509_current.get()._field_Row));
	_5052_terminated=(_509_current.get()._field_Id == static_cast<jule::U64>(5LLU));
	return std::make_tuple(_5042_ok,_5052_terminated);
}



inline jule::Bool _1c99c1a28_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1e47137a5_Token>>& _5626_tokens, jule::I64& _5645_i) {
	if (((_5645_i > 1LL) && (_5626_tokens[(_5645_i - 2LL)].get()._field_Id == static_cast<jule::U64>(22LLU)))) {
		return false;
	};
	{
		jule::Ptr<_1e47137a5_Token> _6213_prev = _5626_tokens[(_5645_i - 1LL)];;
		return ((_6213_prev.get()._field_Id == static_cast<jule::U64>(20LLU)) || (((_6213_prev.get()._field_Id == static_cast<jule::U64>(7LLU)) && _1e471429a_IsBinOp(_6213_prev.get()._field_Kind)) && (_6213_prev.get()._field_Row < _5626_tokens[_5645_i].get()._field_Row)));
	};
}



inline std::tuple<jule::I64,jule::Bool> _1c99c1dad_nextStPos(jule::Slice<jule::Ptr<_1e47137a5_Token>>& _7115_tokens, jule::I64 _7133_start) {
	jule::I64 _7213_braceN = 0LL;;
	jule::I64 _7313_i = _7133_start;;
	for (; (_7313_i < _7115_tokens.len()); (_7313_i)++) {
		{
			jule::Bool _7517_ok = false;;
			jule::Bool _7617_terminated = false;;
			jule::Ptr<_1e47137a5_Token> _7713_tok = _7115_tokens[_7313_i];;
			{
				auto &_match_expr{ _7713_tok.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(3LLU)) {
					_case_begin_1b2d8253d:;
					{
						{
							auto &_match_expr{ _7713_tok.get()._field_Kind };
							
							if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
								_case_begin_1b2d841dd:;
								{
									if (((_7213_braceN == 0LL) && (_7313_i > _7133_start))) {
										if ((!(_1c99c1a28_prevIsIncompleteExpr(_7115_tokens,_7313_i)))) {
											std::tie(_7517_ok,_7617_terminated) = _1c99c16d7_isSt(_7713_tok,_7115_tokens[(_7313_i - 1LL)]);
											if (_7517_ok) {
												goto _julec_label_return;
											};
										};
									};
									(_7213_braceN)++;
								}
							}
							else {
								_case_begin_1b2d82d68:;
								{
									(_7213_braceN)--;
									if (((_7213_braceN == 0LL) && ((_7313_i + 1LL) < _7115_tokens.len()))) {
										std::tie(_7517_ok,_7617_terminated) = _1c99c16d7_isSt(_7115_tokens[(_7313_i + 1LL)],_7713_tok);
										if (_7517_ok) {
											(_7313_i)++;
											goto _julec_label_return;
										};
									};
								}
							}
							_match_end_1b2d82b9d:;
						};
						goto _iter_next_1b2d80b79;
					}
				}
				_match_end_1b2d824d8:;
			};
			if ((_7213_braceN != 0LL)) {
				goto _iter_next_1b2d80b79;
			};
			if ((_7313_i > _7133_start)) {
				if (_1c99c1a28_prevIsIncompleteExpr(_7115_tokens,_7313_i)) {
					goto _iter_next_1b2d80b79;
				};
				std::tie(_7517_ok,_7617_terminated) = _1c99c16d7_isSt(_7713_tok,_7115_tokens[(_7313_i - 1LL)]);
			} else {
				std::tie(_7517_ok,_7617_terminated) = _1c99c16d7_isSt(_7713_tok,_7713_tok);
			};
			if ((!(_7517_ok))) {
				goto _iter_next_1b2d80b79;
			};
			_julec_label_return:;
			if (_7617_terminated) {
				(_7313_i)++;
			};
			return std::make_tuple(_7313_i,_7617_terminated);
		}
	_iter_next_1b2d80b79:;
	}
	_iter_end_1b2d80b79:;;
	return std::make_tuple(_7313_i,false);
}



inline std::tuple<jule::Slice<jule::Ptr<_1e47137a5_Token>>,jule::Bool> _1c99c21ee_skipSt(jule::I64& _13316_i, jule::Slice<jule::Ptr<_1e47137a5_Token>> _13328_tokens) {
	jule::I64 _1349_start = _13316_i;;
	jule::Bool _13513_terminated = false;;
	std::tie(_13316_i,_13513_terminated) = _1c99c1dad_nextStPos(_13328_tokens,_1349_start);
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _13713_stTokens = _13328_tokens.slice(_1349_start,_13316_i);;
	if (_13513_terminated) {
		if ((_13713_stTokens.len() == 1LL)) {
			std::tie(_13713_stTokens,_13513_terminated) = _1c99c21ee_skipSt(_13316_i,_13328_tokens);
			return std::make_tuple(_13713_stTokens,_13513_terminated);
		};
		_13713_stTokens=_13713_stTokens.slice(0LL,(_13713_stTokens.len() - 1LL));
	};
	return std::make_tuple(_13713_stTokens,_13513_terminated);
}



inline jule::Slice<jule::Ptr<_1c99c24eb_stmt>> _1c99c2892_splitStmts(jule::Slice<jule::Ptr<_1e47137a5_Token>>& _15520_tokens) {
	jule::Slice<jule::Ptr<_1c99c24eb_stmt>> _15613_stmts = jule::Slice<jule::Ptr<_1c99c24eb_stmt>>::alloc(0LL,20LL);;
	jule::I64 _15713_pos = 0LL;;
	while ((_15713_pos < _15520_tokens.len())) {
		{
			jule::Slice<jule::Ptr<_1e47137a5_Token>> _15918_stmt;;
			jule::Bool _15924_terminated;;
			std::tie(_15918_stmt,_15924_terminated) = _1c99c21ee_skipSt(_15713_pos,_15520_tokens);
			_15613_stmts = jule::alloc_for_append(_15613_stmts,1);_15613_stmts.__push(jule::new_ptr<_1c99c24eb_stmt>(_1c99c24eb_stmt{._field_tokens=_15918_stmt, ._field_terminated=_15924_terminated}));;
		}
	_iter_next_1b2d8bc84:;
	}
	_iter_end_1b2d8bc84:;;
	return _15613_stmts;
}



inline jule::Slice<jule::Ptr<_1e47137a5_Token>> _1c99ce294_getBlockExpr(jule::Slice<jule::Ptr<_1e47137a5_Token>>& _4022_tokens) {
	jule::I64 _4113_braceN = 0LL;;
	jule::I64 _4213_skipToNextBraceClose = 0LL;;
	{
		auto &expr = _4022_tokens;
		auto it = expr.begin();
		_iter_begin_1b2e48b87:;
		if (it != expr.end()) {
			jule::I64 _439_i = it - expr.begin();
			jule::Ptr<_1e47137a5_Token> _4312_tok = *it;
			{
				{
					auto &_match_expr{ _4312_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(16LLU) || _match_expr == static_cast<jule::U64>(17LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
						_case_begin_1b2e49a23:;
						{
							(_4213_skipToNextBraceClose)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1b2e49a9a:;
						{
							{
								auto &_match_expr{ _4312_tok.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1b2e4a804:;
									{
										if (((_4113_braceN > 0LL) || (_4213_skipToNextBraceClose > 0LL))) {
											if ((_4213_skipToNextBraceClose > 0LL)) {
												(_4213_skipToNextBraceClose)--;
											};
											(_4113_braceN)++;
											goto _match_end_1b2e4a936;
										};
										return _4022_tokens.slice(0LL,_439_i);
									}
								}
								else if (_match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1b2e4aea8:;
									{
										(_4113_braceN)++;
									}
								}
								else {
									_case_begin_1b2e4aa46:;
									{
										(_4113_braceN)--;
									}
								}
								_match_end_1b2e4a936:;
							};
						}
					}
					_match_end_1b2e49847:;
				};
			}
			_iter_next_1b2e48b87:;
			++it;
			_439_i++;
			goto _iter_begin_1b2e48b87;
		}
		_iter_end_1b2e48b87:;
	};
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_1e47137a5_Token>>,jule::Slice<jule::Ptr<_1e47137a5_Token>>> _1c99ce5e6_splitDelim(jule::Slice<jule::Ptr<_1e47137a5_Token>>& _7120_tokens, jule::U64 _7138_delim) {
	jule::I64 _7213_rangeN = 0LL;;
	{
		auto &expr = _7120_tokens;
		auto it = expr.begin();
		_iter_begin_1b2e4c718:;
		if (it != expr.end()) {
			jule::I64 _739_i = it - expr.begin();
			jule::Ptr<_1e47137a5_Token> _7312_token = *it;
			{
				{
					auto &_match_expr{ _7312_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1b2e4d2eb:;
						{
							{
								auto &_match_expr{ _7312_token.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1b2e4d94a:;
									{
										(_7213_rangeN)++;
										goto _iter_next_1b2e4c718;
									}
								}
								else {
									_case_begin_1b2e4dbd1:;
									{
										(_7213_rangeN)--;
									}
								}
								_match_end_1b2e4da16:;
							};
						}
					}
					else if (_match_expr == _7138_delim) {
						_case_begin_1b2e4d373:;
						{
							if ((_7213_rangeN == 0LL)) {
								jule::Slice<jule::Ptr<_1e47137a5_Token>> _8725_l = _7120_tokens.slice(0LL,_739_i);;
								jule::Slice<jule::Ptr<_1e47137a5_Token>> _8825_r = _7120_tokens.slice((_739_i + 1LL));;
								return std::make_tuple(_8725_l,_8825_r);
							};
						}
					}
					_match_end_1b2e4d0ba:;
				};
			}
			_iter_next_1b2e4c718:;
			++it;
			_739_i++;
			goto _iter_begin_1b2e4c718;
		}
		_iter_end_1b2e4c718:;
	};
	return std::make_tuple(nullptr,nullptr);
}



inline jule::I64 _1c99ce88d_findLowestPrecOp(jule::Slice<jule::Ptr<_1e47137a5_Token>>& _9822_tokens) {
	jule::U8 _10313_prec = 255LLU;;
	jule::I64 _10413_precPos = -1LL;;
	jule::I64 _10613_braceN = 0LL;;
	jule::Bool _10713_skipToNextBraceOpen = false;;
	{
		auto &expr = _9822_tokens;
		auto it = expr.begin();
		_iter_begin_1b2e51ad5:;
		if (it != expr.end()) {
			jule::I64 _1089_i = it - expr.begin();
			jule::Ptr<_1e47137a5_Token> &_10812_token = *it;
			{
				{
					
					if ((_10812_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
						_case_begin_1b2e528e9:;
						{
							{
								auto &_match_expr{ _10812_token.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1b2e53532:;
									{
										_10713_skipToNextBraceOpen=false;
										goto _case_begin_1b2e53c6e;
									}
								}
								else if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("[", 1)) {
									_case_begin_1b2e53c6e:;
									{
										(_10613_braceN)++;
									}
								}
								else {
									_case_begin_1b2e537b8:;
									{
										(_10613_braceN)--;
									}
								}
								_match_end_1b2e535ed:;
							};
							goto _iter_next_1b2e51ad5;
						}
					}
					else if (_10713_skipToNextBraceOpen) {
						_case_begin_1b2e52971:;
						{
							goto _iter_next_1b2e51ad5;
						}
					}
					else if ((_10812_token.get()._field_Id == static_cast<jule::U64>(16LLU))) {
						_case_begin_1b2e529e8:;
						{
							_10713_skipToNextBraceOpen=true;
							goto _iter_next_1b2e51ad5;
						}
					}
					else if ((_1089_i == 0LL)) {
						_case_begin_1b2e52a70:;
						{
							goto _iter_next_1b2e51ad5;
						}
					}
					else if ((_10812_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
						_case_begin_1b2e52ae7:;
						{
							goto _iter_next_1b2e51ad5;
						}
					}
					else if ((_10613_braceN > 0LL)) {
						_case_begin_1b2e52b6e:;
						{
							goto _iter_next_1b2e51ad5;
						}
					}
					_match_end_1b2e52784:;
				};
				jule::Ptr<_1e47137a5_Token> _13513_left = _9822_tokens[(_1089_i - 1LL)];;
				if (((_13513_left.get()._field_Id == static_cast<jule::U64>(7LLU)) || (_13513_left.get()._field_Id == static_cast<jule::U64>(11LLU)))) {
					goto _iter_next_1b2e51ad5;
				};
				if ((((_1089_i > 1LL) && (_13513_left.get()._field_Id == static_cast<jule::U64>(3LLU))) && (_13513_left.get()._field_Kind == jule::Str("]", 1)))) {
					jule::Ptr<_1e47137a5_Token> _14317_lleft = _9822_tokens[(_1089_i - 2LL)];;
					if (((_14317_lleft.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_14317_lleft.get()._field_Kind == jule::Str("[", 1)))) {
						if (((_10812_token.get()._field_Kind == jule::Str("&", 1)) || (_10812_token.get()._field_Kind == jule::Str("*", 1)))) {
							goto _iter_next_1b2e51ad5;
						};
					};
				};
				jule::U8 _15213_p = _1e4713b5c_Prec(_10812_token.ptr());;
				if (((_15213_p != 0LLU) && (_15213_p <= _10313_prec))) {
					_10313_prec=_15213_p;
					_10413_precPos=_1089_i;
				};
			}
			_iter_next_1b2e51ad5:;
			++it;
			_1089_i++;
			goto _iter_begin_1b2e51ad5;
		}
		_iter_end_1b2e51ad5:;
	};
	return _10413_precPos;
}



inline jule::Ptr<_1e5d5aeea_IdentExpr> _1c99cebac_buildIdentExpr(jule::Ptr<_1e47137a5_Token>& _16124_token) {
	return jule::new_ptr<_1e5d5aeea_IdentExpr>(_1e5d5aeea_IdentExpr{._field_Token=_16124_token, ._field_Ident=_16124_token.get()._field_Kind, ._field_CppLinked=false});
}



inline std::tuple<jule::Slice<jule::Ptr<_1e47137a5_Token>>,jule::I64> _1c99cee54_getRangeExprTokens(jule::Slice<jule::Ptr<_1e47137a5_Token>>& _16928_tokens) {
	jule::I64 _17013_rangeN = 0LL;;
	jule::I64 _17113_i = (_16928_tokens.len() - 1LL);;
	for (; (_17113_i >= 0LL); (_17113_i)--) {
		{
			jule::Ptr<_1e47137a5_Token> _17313_tok = _16928_tokens[_17113_i];;
			if ((_17313_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _17313_tok.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1b2e5b53a:;
						{
							(_17013_rangeN)++;
						}
					}
					else {
						_case_begin_1b2e5bded:;
						{
							(_17013_rangeN)--;
						}
					}
					_match_end_1b2e5bbde:;
				};
			};
			if ((_17013_rangeN == 0LL)) {
				return std::make_tuple(_16928_tokens.slice(0LL,_17113_i),_17013_rangeN);
			};
		}
	_iter_next_1b2e5ad42:;
	}
	_iter_end_1b2e5ad42:;;
	return std::make_tuple(nullptr,_17013_rangeN);
}



inline jule::Bool _1c99da866_checkAssignTokens(jule::Slice<jule::Ptr<_1e47137a5_Token>>& _1623_tokens) {
	if (((_1623_tokens.len() == 0LL) || (!(_1e4717d4d_IsAssign(_1623_tokens[0LL].get()._field_Id))))) {
		return false;
	};
	jule::I64 _2013_braceN = 0LL;;
	{
		auto &expr = _1623_tokens;
		auto it = expr.begin();
		_iter_begin_1b3005271:;
		if (it != expr.end()) {
			jule::Ptr<_1e47137a5_Token> &_2112_t = *it;
			{
				if ((_2112_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _2112_t.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1b3005d98:;
							{
								(_2013_braceN)++;
							}
						}
						else {
							_case_begin_1b3006173:;
							{
								(_2013_braceN)--;
							}
						}
						_match_end_1b3005e64:;
					};
				};
				if ((_2013_braceN < 0LL)) {
					return false;
				} else if ((_2013_braceN > 0LL)) {
					goto _iter_next_1b3005271;
				} else if (((_2112_t.get()._field_Id == static_cast<jule::U64>(7LLU)) && _1e471838c_IsAssignOp(_2112_t.get()._field_Kind))) {
					return true;
				};
			}
			_iter_next_1b3005271:;
			++it;
			goto _iter_begin_1b3005271;
		}
		_iter_end_1b3005271:;
	};
	return false;
}



inline _1e43e3a18_Log _1c99dba87_makeErr(jule::I64 _5212_row, jule::I64 _5222_col, jule::Ptr<_1e4718b40_File>& _5233_f, jule::Str _5243_fmt, jule::Slice<jule::Any> _5256_args) {
	return _1e43e3a18_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_5212_row, ._field_Column=_5222_col, ._field_Path=_5233_f.get()._field_Path, ._field_Text=_1e43e3e58_Logf(_5243_fmt,jule::Any(_5256_args)), };
}



inline jule::Slice<jule::Ptr<_1e47137a5_Token>> _1c99dc060_range(jule::I64& _7115_i, jule::Str _7123_open, jule::Str _7140_close, jule::Slice<jule::Ptr<_1e47137a5_Token>>& _7163_tokens) {
	if ((_7115_i >= _7163_tokens.len())) {
		return nullptr;
	};
	jule::Ptr<_1e47137a5_Token> _769_tok = _7163_tokens[_7115_i];;
	if (((_769_tok.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_769_tok.get()._field_Kind != _7123_open))) {
		return nullptr;
	};
	(_7115_i)++;
	jule::I64 _8213_rangeN = 1LL;;
	jule::I64 _839_start = _7115_i;;
	for (; ((_8213_rangeN != 0LL) && (_7115_i < _7163_tokens.len())); (_7115_i)++) {
		{
			jule::Ptr<_1e47137a5_Token> _8513_token = _7163_tokens[_7115_i];;
			if ((_8513_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _8513_token.get()._field_Kind };
					
					if (_match_expr == _7123_open) {
						_case_begin_1b300c19b:;
						{
							(_8213_rangeN)++;
						}
					}
					else if (_match_expr == _7140_close) {
						_case_begin_1b300c223:;
						{
							(_8213_rangeN)--;
						}
					}
					_match_end_1b300be6a:;
				};
			};
		}
	_iter_next_1b300a95d:;
	}
	_iter_end_1b300a95d:;;
	return _7163_tokens.slice(_839_start,(_7115_i - 1LL));
}



inline std::tuple<jule::Slice<jule::Ptr<_1e47137a5_Token>>,jule::Slice<jule::Ptr<_1e47137a5_Token>>> _1c99dc307_rangeLast(jule::Slice<jule::Ptr<_1e47137a5_Token>>& _10619_tokens) {
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _10639_cutted = jule::Slice<jule::Ptr<_1e47137a5_Token>>();
	jule::Slice<jule::Ptr<_1e47137a5_Token>> _10657_cut = jule::Slice<jule::Ptr<_1e47137a5_Token>>();
	if ((_10619_tokens.len() == 0LL)) {
		_10639_cutted = _10619_tokens;
		_10657_cut = nullptr;
		return std::make_tuple(_10639_cutted,_10657_cut);
	} else if ((_10619_tokens[(_10619_tokens.len() - 1LL)].get()._field_Id != static_cast<jule::U64>(3LLU))) {
		_10639_cutted = _10619_tokens;
		_10657_cut = nullptr;
		return std::make_tuple(_10639_cutted,_10657_cut);
	};
	jule::I64 _11313_braceN = 0LL;;
	jule::I64 _11413_i = (_10619_tokens.len() - 1LL);;
	for (; (_11413_i >= 0LL); (_11413_i)--) {
		{
			jule::Ptr<_1e47137a5_Token> _11613_token = _10619_tokens[_11413_i];;
			if ((_11613_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _11613_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1b3010853:;
						{
							(_11313_braceN)++;
							goto _iter_next_1b300d202;
						}
					}
					else {
						_case_begin_1b301125a:;
						{
							(_11313_braceN)--;
						}
					}
					_match_end_1b301104b:;
				};
			};
			if ((_11313_braceN == 0LL)) {
				_10639_cutted = _10619_tokens.slice(0LL,_11413_i);
				_10657_cut = _10619_tokens.slice(_11413_i);
				return std::make_tuple(_10639_cutted,_10657_cut);
			};
		}
	_iter_next_1b300d202:;
	}
	_iter_end_1b300d202:;;
	_10639_cutted = _10619_tokens;
	_10657_cut = nullptr;
	return std::make_tuple(_10639_cutted,_10657_cut);
}



inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>>,jule::Slice<_1e43e3a18_Log>> _1c99dc6e2_partsKind(jule::Slice<jule::Ptr<_1e47137a5_Token>>& _13819_tokens, jule::Str _13837_kind, jule::Bool _13854_expr_must) {
	if ((_13819_tokens.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>> _14313_parts = nullptr;;
	jule::Slice<_1e43e3a18_Log> _14413_errors = nullptr;;
	jule::I64 _14613_rangeN = 0LL;;
	jule::I64 _14713_last = 0LL;;
	{
		auto &expr = _13819_tokens;
		auto it = expr.begin();
		_iter_begin_1b3014945:;
		if (it != expr.end()) {
			jule::I64 _1489_i = it - expr.begin();
			jule::Ptr<_1e47137a5_Token> _14812_token = *it;
			{
				if ((_14812_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _14812_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1b301598a:;
							{
								(_14613_rangeN)++;
								goto _iter_next_1b3014945;
							}
						}
						else {
							_case_begin_1b3015c65:;
							{
								(_14613_rangeN)--;
							}
						}
						_match_end_1b3015a56:;
					};
				};
				if ((_14613_rangeN > 0LL)) {
					goto _iter_next_1b3014945;
				};
				if ((_14812_token.get()._field_Kind == _13837_kind)) {
					if ((_13854_expr_must && ((_1489_i - _14713_last) <= 0LL))) {
						_1e43e3a18_Log _16721_err = _1c99dba87_makeErr(_14812_token.get()._field_Row,_14812_token.get()._field_Column,_14812_token.get()._field_File,jule::Str("expression missing", 18),jule::Slice<jule::Any>());;
						_14413_errors = jule::alloc_for_append(_14413_errors,1);_14413_errors.__push(_16721_err);;
					};
					_14313_parts = jule::alloc_for_append(_14313_parts,1);_14313_parts.__push(_13819_tokens.slice(_14713_last,_1489_i));;
					_14713_last=static_cast<jule::I64>((_1489_i + 1LL));
				};
			}
			_iter_next_1b3014945:;
			++it;
			_1489_i++;
			goto _iter_begin_1b3014945;
		}
		_iter_end_1b3014945:;
	};
	if ((_14713_last < _13819_tokens.len())) {
		_14313_parts = jule::alloc_for_append(_14313_parts,1);_14313_parts.__push(_13819_tokens.slice(_14713_last));;
	} else if ((!(_13854_expr_must))) {
		_14313_parts = jule::alloc_for_append(_14313_parts,1);_14313_parts.__push(jule::Slice<jule::Ptr<_1e47137a5_Token>>());;
	};
	return std::make_tuple(_14313_parts,_14413_errors);
}



inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>>,jule::Slice<_1e43e3a18_Log>> _1c99dcacc_parts(jule::Slice<jule::Ptr<_1e47137a5_Token>>& _19015_tokens, jule::U64 _19033_id, jule::Bool _19046_expr_must) {
	if ((_19015_tokens.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Slice<jule::Slice<jule::Ptr<_1e47137a5_Token>>> _19513_parts = nullptr;;
	jule::Slice<_1e43e3a18_Log> _19613_errors = nullptr;;
	jule::I64 _19813_rangeN = 0LL;;
	jule::I64 _19913_last = 0LL;;
	{
		auto &expr = _19015_tokens;
		auto it = expr.begin();
		_iter_begin_1b301b463:;
		if (it != expr.end()) {
			jule::I64 _2009_i = it - expr.begin();
			jule::Ptr<_1e47137a5_Token> _20012_token = *it;
			{
				if ((_20012_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _20012_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1b301c4a8:;
							{
								(_19813_rangeN)++;
								goto _iter_next_1b301b463;
							}
						}
						else {
							_case_begin_1b301c783:;
							{
								(_19813_rangeN)--;
							}
						}
						_match_end_1b301c574:;
					};
				};
				if ((_19813_rangeN > 0LL)) {
					goto _iter_next_1b301b463;
				};
				if ((_20012_token.get()._field_Id == _19033_id)) {
					if ((_19046_expr_must && ((_2009_i - _19913_last) <= 0LL))) {
						_1e43e3a18_Log _21921_err = _1c99dba87_makeErr(_20012_token.get()._field_Row,_20012_token.get()._field_Column,_20012_token.get()._field_File,jule::Str("expression missing", 18),jule::Slice<jule::Any>());;
						_19613_errors = jule::alloc_for_append(_19613_errors,1);_19613_errors.__push(_21921_err);;
					};
					_19513_parts = jule::alloc_for_append(_19513_parts,1);_19513_parts.__push(_19015_tokens.slice(_19913_last,_2009_i));;
					_19913_last=static_cast<jule::I64>((_2009_i + 1LL));
				};
			}
			_iter_next_1b301b463:;
			++it;
			_2009_i++;
			goto _iter_begin_1b301b463;
		}
		_iter_end_1b301b463:;
	};
	if ((_19913_last < _19015_tokens.len())) {
		_19513_parts = jule::alloc_for_append(_19513_parts,1);_19513_parts.__push(_19015_tokens.slice(_19913_last));;
	} else if ((!(_19046_expr_must))) {
		_19513_parts = jule::alloc_for_append(_19513_parts,1);_19513_parts.__push(jule::Slice<jule::Ptr<_1e47137a5_Token>>());;
	};
	return std::make_tuple(_19513_parts,_19613_errors);
}



inline jule::Str _1c99dcd74_getCloseKindOfBrace(jule::Str _23624_left) {
	{
		auto &_match_expr{ _23624_left };
		
		if (_match_expr == jule::Str(")", 1)) {
			_case_begin_1b3020ec3:;
			{
				return jule::Str("(", 1);
			}
		}
		else if (_match_expr == jule::Str("}", 1)) {
			_case_begin_1b3021039:;
			{
				return jule::Str("{", 1);
			}
		}
		else if (_match_expr == jule::Str("]", 1)) {
			_case_begin_1b30210a0:;
			{
				return jule::Str("[", 1);
			}
		}
		else {
			_case_begin_1b3020984:;
			{
				return jule::Str();
			}
		}
		_match_end_1b30208c9:;
	};
}



inline _1e43e3a18_Log _1c99dd25e_compilerErr(jule::Ptr<_1e47137a5_Token>& _24917_token, jule::Str& _24933_fmt, jule::Slice<jule::Any> _24946_args) {
	return _1e43e3a18_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_24917_token.get()._field_Row, ._field_Column=_24917_token.get()._field_Column, ._field_Path=_24917_token.get()._field_File.get()._field_Path, ._field_Text=_1e43e3e58_Logf(_24933_fmt,jule::Any(_24946_args)), ._field_Line=_1e4719d1c_GetRow(_24917_token.get()._field_File.ptr(), _24917_token.get()._field_Row), };
}



inline void _1c99dd68d_pushSuggestion(_1e43e3a18_Log* _26030_log, jule::Str _26041_fmt, jule::Slice<jule::Any> _26054_args) {
	_26030_log->_field_Suggestion=_1e43e3e58_Logf(_26041_fmt,jule::Any(_26054_args));
}



inline jule::Str _1c99dd935_tokstoa(jule::Slice<jule::Ptr<_1e47137a5_Token>>& _26413_tokens) {
	jule::I64 _26513_n = 0LL;;
	{
		auto &expr = _26413_tokens;
		auto it = expr.begin();
		_iter_begin_1b302424b:;
		if (it != expr.end()) {
			jule::Ptr<_1e47137a5_Token> &_26612_token = *it;
			{
				_26513_n+=_26612_token.get()._field_Kind.len();
			}
			_iter_next_1b302424b:;
			++it;
			goto _iter_begin_1b302424b;
		}
		_iter_end_1b302424b:;
	};
	jule::Str _26913_s = jule::Str::alloc(_26513_n);;
	{
		auto &expr = _26413_tokens;
		auto it = expr.begin();
		_iter_begin_1b3024e1c:;
		if (it != expr.end()) {
			jule::Ptr<_1e47137a5_Token> &_27012_token = *it;
			{
				_26913_s+=_27012_token.get()._field_Kind;
			}
			_iter_next_1b3024e1c:;
			++it;
			goto _iter_begin_1b3024e1c;
		}
		_iter_end_1b3024e1c:;
	};
	return _26913_s;
}



inline jule::Bool _1c99ed99a_isPub(jule::Str& _204111_ident) {
	jule::I32 _204210_r;;
	std::tie(_204210_r,std::ignore) = _1e33ba419_DecodeRuneStr(_204111_ident);
	return _1e438c484_IsUpper(_204210_r);
}



inline jule::Ptr<_1e5d54961_TypeDecl> _1c99ee319_buildVoidType(void) {
	return jule::new_ptr<_1e5d54961_TypeDecl>();
}



inline jule::Ptr<_1e5d54961_TypeDecl> _1c99ee57d_buildPrimType(jule::Ptr<_1e47137a5_Token> _2322_t) {
	return jule::new_ptr<_1e5d54961_TypeDecl>(_1e5d54961_TypeDecl{._field_Token=_2322_t, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1e5d55027_IdentTypeDecl>(_1e5d55027_IdentTypeDecl{._field_Token=_2322_t, ._field_Ident=_2322_t.get()._field_Kind, }))});
}



inline jule::I64 _1c99ee8be_mapColon(jule::Slice<jule::Ptr<_1e47137a5_Token>>& _3618_tokens, jule::I64& _3641_i) {
	jule::I64 _3651_delim = jule::I64();
	_3651_delim=-1LL;
	jule::I64 _3813_rangeN = 0LL;;
	for (; (_3641_i < _3618_tokens.len()); (_3641_i)++) {
		{
			jule::Ptr<_1e47137a5_Token> _4013_token = _3618_tokens[_3641_i];;
			if ((_4013_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _4013_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1b317dcac:;
						{
							(_3813_rangeN)++;
							goto _iter_next_1b317d5a3;
						}
					}
					else {
						_case_begin_1b317e670:;
						{
							(_3813_rangeN)--;
						}
					}
					_match_end_1b317e461:;
				};
			};
			if ((_3813_rangeN == 0LL)) {
				if (((_3618_tokens.len() - _3641_i) == 1LL)) {
					return _3651_delim;
				};
				if ((_3618_tokens[(_3641_i + 1LL)].get()._field_Id == static_cast<jule::U64>(11LLU))) {
					_3651_delim = static_cast<jule::I64>((_3641_i + 1LL));
					return _3651_delim;
				};
				goto _iter_end_1b317d5a3;
			};
		}
	_iter_next_1b317d5a3:;
	}
	_iter_end_1b317d5a3:;;
	return _3651_delim;
}



inline std::tuple<jule::Bool,jule::Bool> _1e6b7a0c1_checkOs(jule::Str _912_arg) {
	jule::Bool _924_ok = jule::Bool();
	jule::Bool _934_exist = jule::Bool();
	_924_ok=false;
	_934_exist=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_1b31d2959:;
			{
				_924_ok=_1e43e6d6d_IsWindows(_1e44313c4_Os);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_1b31d255d:;
			{
				_924_ok=_1e43e7126_IsDarwin(_1e44313c4_Os);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_1b31d233d:;
			{
				_924_ok=_1e43e73bd_IsLinux(_1e44313c4_Os);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_1b31d23a4:;
			{
				_924_ok=_1e43e7ec3_IsUnix(_1e44313c4_Os);
			}
		}
		else {
			_case_begin_1b31d1b12:;
			{
				_924_ok=true;
				_934_exist=false;
			}
		}
		_match_end_1b31d201e:;
	};
	return std::make_tuple(_924_ok,_934_exist);
}



inline std::tuple<jule::Bool,jule::Bool> _1e6b7a203_checkArch(jule::Str _2814_arg) {
	jule::Bool _2826_ok = jule::Bool();
	jule::Bool _2836_exist = jule::Bool();
	_2826_ok=false;
	_2836_exist=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_1b31d4ad2:;
			{
				_2826_ok=_1e43e76dc_IsI386(_1e4414b5a_Arch);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_1b31d48b2:;
			{
				_2826_ok=_1e43e7984_IsAmd64(_1e4414b5a_Arch);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_1b31d4928:;
			{
				_2826_ok=_1e43e7c2b_IsArm64(_1e4414b5a_Arch);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_1b31d498e:;
			{
				_2826_ok=_1e43e85de_Is64Bit(_1e4414b5a_Arch);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_1b31d4a05:;
			{
				_2826_ok=_1e43e8347_Is32Bit(_1e4414b5a_Arch);
			}
		}
		else {
			_case_begin_1b31d4186:;
			{
				_2826_ok=true;
				_2836_exist=false;
			}
		}
		_match_end_1b31d4593:;
	};
	return std::make_tuple(_2826_ok,_2836_exist);
}



inline jule::Bool _1e6b7a335_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_1e34b4887_Base(_5029_p);
	jule::I64 _529_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL,(_529_n - _1e34d2432_Ext(_5029_p).len()));;
	jule::Str _5813_a1 = jule::Str();;
	jule::Str _6113_a2 = jule::Str();;
	jule::I64 _6413_i = _1e438d067_FindLastByte(_5029_p,'_');;
	if ((_6413_i == -1LL)) {
		jule::Bool _6718_ok;;
		jule::Bool _6726_exist;;
		std::tie(_6718_ok,_6726_exist) = _1e6b7a0c1_checkOs(_5029_p);
		if (_6726_exist) {
			return _6718_ok;
		};
		std::tie(_6718_ok,_6726_exist) = _1e6b7a203_checkArch(_5029_p);
		return ((!(_6726_exist)) || _6718_ok);
	};
	if (((_6413_i + 1LL) >= _529_n)) {
		return true;
	};
	_5813_a1=_5029_p.slice((_6413_i + 1LL));
	(_5029_p).mut_slice(0LL,_6413_i);;
	_6413_i=static_cast<jule::I64>(_1e438d067_FindLastByte(_5029_p,'_'));
	if ((_6413_i != -1LL)) {
		_6113_a2=_5029_p.slice((_6413_i + 1LL));
	};
	if (_6113_a2.empty()) {
		jule::Bool _8818_ok;;
		jule::Bool _8826_exist;;
		std::tie(_8818_ok,_8826_exist) = _1e6b7a0c1_checkOs(_5813_a1);
		if (_8826_exist) {
			return _8818_ok;
		};
		std::tie(_8818_ok,_8826_exist) = _1e6b7a203_checkArch(_5813_a1);
		return ((!(_8826_exist)) || _8818_ok);
	};
	jule::Bool _9614_ok;;
	jule::Bool _9622_exist;;
	std::tie(_9614_ok,_9622_exist) = _1e6b7a203_checkArch(_5813_a1);
	if (_9622_exist) {
		if ((!(_9614_ok))) {
			return false;
		};
		std::tie(_9614_ok,_9622_exist) = _1e6b7a0c1_checkOs(_6113_a2);
		return ((!(_9622_exist)) || _9614_ok);
	};
	std::tie(_9614_ok,_9622_exist) = _1e6b7a0c1_checkOs(_5813_a1);
	return ((!(_9622_exist)) || _9614_ok);
}



inline void _1e6b94838_setOsVars(jule::Slice<jule::Str>& _3619_vars) {
	_3619_vars = jule::alloc_for_append(_3619_vars,1);_3619_vars.__push(_1e44313c4_Os);;
	if (_1e43e7ec3_IsUnix(_1e44313c4_Os)) {
		_3619_vars = jule::alloc_for_append(_3619_vars,1);_3619_vars.__push(jule::Str("unix", 4));;
	};
}



inline void _1e6b94a8b_setArchVars(jule::Slice<jule::Str>& _4421_vars) {
	_4421_vars = jule::alloc_for_append(_4421_vars,1);_4421_vars.__push(_1e4414b5a_Arch);;
	if (_1e43e85de_Is64Bit(_1e4414b5a_Arch)) {
		_4421_vars = jule::alloc_for_append(_4421_vars,1);_4421_vars.__push(jule::Str("x64", 3));;
	};
	if (_1e43e8347_Is32Bit(_1e4414b5a_Arch)) {
		_4421_vars = jule::alloc_for_append(_4421_vars,1);_4421_vars.__push(jule::Str("x32", 3));;
	};
}



inline void _1e6b94d44_initVars(jule::Slice<jule::Str>& _5518_vars, _1e6b9452a_CompileInfo& _5532_info) {
	_1e6b94838_setOsVars(_5518_vars);
	_1e6b94a8b_setArchVars(_5518_vars);
	if (_5532_info._field_Prod) {
		_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("production", 10));;
	};
	if (_5532_info._field_Test) {
		_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("test", 4));;
	};
	{
		auto &_match_expr{ _5532_info._field_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1b31e0a33:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("clang", 5));;
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1b31e0c31:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("gcc", 3));;
			}
		}
		_match_end_1b31e15e4:;
	};
	{
		auto &_match_expr{ _5532_info._field_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1b31e255c:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("cpp14", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1b31e22a4:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("cpp17", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1b31e231a:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("cpp20", 5));;
			}
		}
		_match_end_1b31e2507:;
	};
}



inline jule::Slice<jule::U8> _1e6ed3d0e_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__1e26046a9_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			;
			_1e4443282_Exit(1LL);
			return nullptr;
		} jule::Slice<jule::U8>();});
	});
}



inline _1e43e3a18_Log _1e6eda9d6_flatCompilerErr(jule::Str _4120_text) {
	return _1e43e3a18_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Text=_4120_text, };
}



inline void _1c8c49444_pushPasses(jule::Ptr<_1e6a1c24e_Package>& _11120_p, jule::Slice<jule::Str>& _11144_passes) {
	{
		auto &expr = _11120_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1b32249bd:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a86010_SymbolTable> _11217_f = *it;
			{
				_julec_label_push:;
				{
					auto &expr = _11217_f.get()._field_Passes;
					auto it = expr.begin();
					_iter_begin_1b32254a2:;
					if (it != expr.end()) {
						_1e5e24569_Pass _11416_pass = *it;
						{
							if (_11416_pass._field_Text.empty()) {
								goto _iter_next_1b32254a2;
							};
							{
								auto &expr = _11144_passes;
								auto it = expr.begin();
								_iter_begin_1b32262e9:;
								if (it != expr.end()) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_1b32254a2;
										};
									}
									_iter_next_1b32262e9:;
									++it;
									goto _iter_begin_1b32262e9;
								}
								_iter_end_1b32262e9:;
							};
							_11144_passes = jule::alloc_for_append(_11144_passes,1);_11144_passes.__push(_11416_pass._field_Text);;
						}
						_iter_next_1b32254a2:;
						++it;
						goto _iter_begin_1b32254a2;
					}
					_iter_end_1b32254a2:;
				};
			}
			_iter_next_1b32249bd:;
			++it;
			goto _iter_begin_1b32249bd;
		}
		_iter_end_1b32249bd:;
	};
}



inline jule::Slice<jule::Str> _1c8c7984d_getAllUniquePasses(jule::Ptr<_1e6a1c24e_Package>& _12828_pkg, jule::Slice<jule::Ptr<_1e6a192e5_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_1c8c49444_pushPasses(_12828_pkg,_12913_passes);
	{
		auto &expr = _12853_uses;
		auto it = expr.begin();
		_iter_begin_1b322774b:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a192e5_ImportInfo> _13217_u = *it;
			{
				if ((!(_13217_u.get()._field_CppLinked))) {
					_1c8c49444_pushPasses(_13217_u.get()._field_Package,_12913_passes);
				};
			}
			_iter_next_1b322774b:;
			++it;
			goto _iter_begin_1b322774b;
		}
		_iter_end_1b322774b:;
	};
	return _12913_passes;
}



inline _1e6b9452a_CompileInfo _1c8ca6d75_buildCompileInfo(void) {
	_1e6b9452a_CompileInfo _14213_info = _1e6b9452a_CompileInfo{._field_Prod=_1e24b666a_Production, ._field_Test=_1e24b5b31_Test, };;
	{
		auto &_match_expr{ _1e2407226_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1b3229055:;
			{
				_14213_info._field_Compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1b32290cc:;
			{
				_14213_info._field_Compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_1b3228ecd:;
	};
	{
		auto &_match_expr{ _1e24b52d4_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1b3227949:;
			{
				_14213_info._field_Compiler=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1b32294a6:;
			{
				_14213_info._field_Compiler=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1b322951c:;
			{
				_14213_info._field_Compiler=jule::Str("cpp20", 5);
			}
		}
		_match_end_1b3229374:;
	};
	return _14213_info;
}



inline void _1c9b0e6b0_EliminateDefines(jule::Ptr<_1c9974888_IR>& _28526_ir) {
	jule::Ptr<_1c9ace262_ObjectDeadCode> _28613_ocd = static__1c9ace729_new(_28526_ir);;
	_1c9b0e3e6_elimanate(_28613_ocd);
}



inline jule::Ptr<_1e5d21268_Directive> _1c9b0ea45_findDirective(jule::Slice<jule::Ptr<_1e5d21268_Directive>>& _29123_directives, jule::Str _29154_tag) {
	{
		auto &expr = _29123_directives;
		auto it = expr.begin();
		_iter_begin_1b326b608:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d21268_Directive> _29217_dr = *it;
			{
				if ((_29217_dr.get()._field_Tag.get()._field_Kind == _29154_tag)) {
					return _29217_dr;
				};
			}
			_iter_next_1b326b608:;
			++it;
			goto _iter_begin_1b326b608;
		}
		_iter_end_1b326b608:;
	};
	return nullptr;
}



inline jule::Bool _1c9b0ed86_hasDirective(jule::Slice<jule::Ptr<_1e5d21268_Directive>>& _30118_directives, jule::Str _30149_tag) {
	return (_1c9b0ea45_findDirective(_30118_directives,_30149_tag) != nullptr);
}



inline void _1c9b139d3_eliminateDeadCodeOfScope(jule::Ptr<_1e6a06700_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_1e6a07943_Label>> _2429_labels = jule::Slice<jule::Ptr<_1e6a07943_Label>>::alloc(0LL,16LL);;
	jule::Slice<jule::Ptr<_1e6a07b30_GotoSt>> _2439_gotos = jule::Slice<jule::Ptr<_1e6a07b30_GotoSt>>::alloc(0LL,16LL);;
	jule::Ptr<_1c9b10ace_scopeDeadCode> _24413_sdc = jule::new_ptr<_1c9b10ace_scopeDeadCode>(_1c9b10ace_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&(_24133_s.get()._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1e6a07943_Label>>>)((&(_2429_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1e6a07b30_GotoSt>>>)((&(_2439_gotos)))), });;
	{
		_1c9b136e7_optimizeStmts(_24413_sdc);
	};
}



inline void _1c9b13c69_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1e5e1c62d_Fn>>& _25433_funcs) {
	{
		auto &expr = _25433_funcs;
		auto it = expr.begin();
		_iter_begin_1b32b471c:;
		if (it != expr.end()) {
			jule::Ptr<_1e5e1c62d_Fn> _25517_func = *it;
			{
				{
					auto &expr = _25517_func.get()._field_Instances;
					auto it = expr.begin();
					_iter_begin_1b32b4d27:;
					if (it != expr.end()) {
						jule::Ptr<_1e5e202ce_FnIns> _25621_ins = *it;
						{
							_1c9b139d3_eliminateDeadCodeOfScope(_25621_ins.get()._field_Scope);
						}
						_iter_next_1b32b4d27:;
						++it;
						goto _iter_begin_1b32b4d27;
					}
					_iter_end_1b32b4d27:;
				};
			}
			_iter_next_1b32b471c:;
			++it;
			goto _iter_begin_1b32b471c;
		}
		_iter_end_1b32b471c:;
	};
}



inline void _1c9b13eab_eliminateFunctionsScopePackage(jule::Ptr<_1e6a1c24e_Package>& _26240_pkg) {
	{
		auto &expr = _26240_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1b32b52de:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a86010_SymbolTable> _26317_f = *it;
			{
				_1c9b13c69_eliminateScopeFunctions(_26317_f.get()._field_Funcs);
			}
			_iter_next_1b32b52de:;
			++it;
			goto _iter_begin_1b32b52de;
		}
		_iter_end_1b32b52de:;
	};
}



inline void _1c9b14253_eliminateScopePackage(jule::Ptr<_1e6a1c24e_Package>& _26831_pkg) {
	_1c9b13eab_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _1c9b14462_EliminateScopes(jule::Ptr<_1c9974888_IR>& _27325_ir) {
	jule::I64 _27413_i = (_27325_ir.get()._field_Used.len() - 1LL);;
	for (; (_27413_i >= 0LL); (_27413_i)--) {
		{
			jule::Ptr<_1e6a192e5_ImportInfo> _27617_u = _27325_ir.get()._field_Used[_27413_i];;
			if ((!(_27617_u.get()._field_CppLinked))) {
				_1c9b14253_eliminateScopePackage(_27617_u.get()._field_Package);
			};
		}
	_iter_next_1b32b6db2:;
	}
	_iter_end_1b32b6db2:;;
	_1c9b14253_eliminateScopePackage(_27325_ir.get()._field_Main);
}



inline jule::Bool _1e487253a_isStdPackage(jule::Str _39917_f, jule::Str _39925_p) {
	return _1e350be95_HasPrefix(_39917_f,_1e34d0919_Join(jule::Slice<jule::Str>::make({_1e441574e_PathStdlib,_39925_p})));
}



inline jule::Bool _1e4873b46_isConstantValidConditionalCase(jule::Ptr<_1e6a068dc_If>& _40336_i) {
	{
		auto &_match_expr{ _40336_i.get()._field_Expr };
		
		if (_match_expr.type_is<jule::Ptr<_1e5da6ba0_Const>>()) {
			_case_begin_1b3337bd0:;
			{
				jule::Ptr<_1e5da6ba0_Const> _40613_c = _40336_i.get()._field_Expr.operator jule::Ptr<_1e5da6ba0_Const>();;
				return (_1e5e10698_IsBool(_40613_c.ptr()) && _1e5e0d300_ReadBool(_40613_c.ptr()));
			}
		}
		_match_end_1b3337a26:;
	};
	return false;
}



inline jule::Bool _1e48766a4_isUnreachableExpr(jule::Any& _41223_expr) {
	{
		auto &_match_expr{ _41223_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1e5da6ba0_Const>>()) {
			_case_begin_1b33385e8:;
			{
				jule::Ptr<_1e5da6ba0_Const> _41513_c = _41223_expr.operator jule::Ptr<_1e5da6ba0_Const>();;
				return (_1e5e10698_IsBool(_41513_c.ptr()) && (!(_1e5e0d300_ReadBool(_41513_c.ptr()))));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e5e153a1_BinopExprModel>>()) {
			_case_begin_1b333865e:;
			{
				jule::Ptr<_1e5e153a1_BinopExprModel> _41813_m = _41223_expr.operator jule::Ptr<_1e5e153a1_BinopExprModel>();;
				if ((_41813_m.get()._field_Op.get()._field_Kind == jule::Str("&&", 2))) {
					return (_1e48766a4_isUnreachableExpr(_41813_m.get()._field_Left.get()._field_Model) || _1e48766a4_isUnreachableExpr(_41813_m.get()._field_Right.get()._field_Model));
				};
			}
		}
		_match_end_1b3338ae3:;
	};
	return false;
}



inline jule::Bool _1e4877908_isConstantValidMatchCase(jule::Ptr<_1e6a08933_Case>& _42730_case) {
	{
		auto &expr = _42730_case.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1b333b640:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a8ac6d_Data> &_42812_expr = *it;
			{
				if (((_1e6a8b631_IsConst(_42812_expr.ptr()) && _1e5e10698_IsBool(_42812_expr.get()._field_Constant.ptr())) && _1e5e0d300_ReadBool(_42812_expr.get()._field_Constant.ptr()))) {
					return true;
				};
			}
			_iter_next_1b333b640:;
			++it;
			goto _iter_begin_1b333b640;
		}
		_iter_end_1b333b640:;
	};
	return false;
}



inline jule::Bool _1e488554d_isUnreachableConditionalCase(jule::Ptr<_1e6a068dc_If>& _43634_i) {
	return _1e48766a4_isUnreachableExpr(_43634_i.get()._field_Expr);
}



inline jule::Bool _1e48a1a75_isUnreachableMatchCase(jule::Ptr<_1e6a08933_Case>& _44028_case) {
	{
		auto &expr = _44028_case.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1b333d345:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a8ac6d_Data> &_44112_expr = *it;
			{
				if ((!(_1e48766a4_isUnreachableExpr(_44112_expr.get()._field_Model)))) {
					return false;
				};
			}
			_iter_next_1b333d345:;
			++it;
			goto _iter_begin_1b333d345;
		}
		_iter_end_1b333d345:;
	};
	return true;
}



inline std::tuple<jule::Bool,jule::U64> _1e4c7022e_checkForBitShiftOpt(jule::Ptr<_1e5e151b4_OperandExprModel>& _42725_l, jule::Ptr<_1e5e151b4_OperandExprModel>& _42748_r) {
	jule::Bool _42772_ok = jule::Bool();
	jule::U64 _42782_x = jule::U64();
	if (((!(_1e6a0604b_IsInt(_1e6ab6e86_Str(_42725_l.get()._field_Kind.ptr())))) || (!(_1e6a0604b_IsInt(_1e6ab6e86_Str(_42748_r.get()._field_Kind.ptr())))))) {
		_42772_ok = false;
		_42782_x = 0LLU;
		return std::make_tuple(_42772_ok,_42782_x);
	};
	{
		auto &_match_expr{ _42748_r.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1e5da6ba0_Const>>()) {
			_case_begin_1b3376e94:;
			{
				goto _match_end_1b3377967;
			}
		}
		else {
			_case_begin_1b3377aaa:;
			{
				_42772_ok = false;
				_42782_x = 0LLU;
				return std::make_tuple(_42772_ok,_42782_x);
			}
		}
		_match_end_1b3377967:;
	};
	_42782_x=static_cast<jule::U64>(_1e5e0dca1_AsU64(_42748_r.get()._field_Model.operator jule::Ptr<_1e5da6ba0_Const>().ptr()));
	if (((_42782_x == 0LLU) || ((_42782_x & 1LL) != 0LLU))) {
		_42772_ok = false;
		_42782_x = 0LLU;
		return std::make_tuple(_42772_ok,_42782_x);
	};
	jule::F64 _4419_j = _1e69c5b31_Log2(static_cast<jule::F64>(static_cast<jule::F64>(_42782_x)));;
	jule::U64 _4429_z = static_cast<jule::U64>(_4419_j);;
	if ((static_cast<jule::F64>(_4429_z) != _4419_j)) {
		_42772_ok = false;
		_42782_x = 0LLU;
		return std::make_tuple(_42772_ok,_42782_x);
	};
	_42772_ok = true;
	_42782_x = _4429_z;
	return std::make_tuple(_42772_ok,_42782_x);
}



inline void _1e4c76ba3_PushOptLevel(jule::I64 _3217_level) {
	_1e474c4e2_Copy=(_3217_level >= static_cast<jule::I64>(1LL));
	_1e4751a24_Deadcode=(_3217_level >= static_cast<jule::I64>(1LL));
	_1e473c779_Append=(_3217_level >= static_cast<jule::I64>(1LL));
	_1e4758410_Math=(_3217_level >= static_cast<jule::I64>(1LL));
	_1e475d866_Access=(_3217_level >= static_cast<jule::I64>(1LL));
	_1e4773903_Inline=(_3217_level >= static_cast<jule::I64>(1LL));
	_1e477b103_Ptr=(_3217_level >= static_cast<jule::I64>(1LL));
	_1e477e0c3_Cond=(_3217_level >= static_cast<jule::I64>(1LL));
}



inline void _1c9a9e6a5_detectEnabled(void) {
	_1c9a1b369_exprEnabled=(((_1e477b103_Ptr || _1e4758410_Math) || _1e475d866_Access) || _1e477e0c3_Cond);
	_1c9a1c4be_scopeEnabled=((_1e477e0c3_Cond || _1e473c779_Append) || _1e474c4e2_Copy);
}



inline void _1c9b31825_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_1e4443282_Exit(1LL);
}



inline jule::U64 _1b02a10e1_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));
}



inline jule::U64 _1b02a1432_unixYearToSeconds(jule::U64 _26222_y, jule::Bool& _26240_leap) {
	if (((_26222_y - 2LLU) <= 136LLU)) {
		jule::U64 _26417_leaps = ((_26222_y - 68LLU) >> 2LLU);;
		_26240_leap=(((_26222_y - 68LLU) & 3LLU) == 0LLU);
		if (_26240_leap) {
			(_26417_leaps)--;
		};
		return static_cast<jule::U64>(((31536000LLU * (_26222_y - 70LLU)) + (86400LLU * _26417_leaps)));
	};
	jule::U64 _27213_leaps = 0LLU;;
	jule::U64 _27313_centuries = 0LLU;;
	jule::U64 _27413_cycles = ((_26222_y - 100LLU) / 400LLU);;
	jule::U64 _27513_rem = ((_26222_y - 100LLU) % 400LL);;
	if ((_27513_rem < 0LLU)) {
		(_27413_cycles)--;
		_27513_rem+=400LLU;
	};
	if ((_27513_rem == 0LLU)) {
		_26240_leap=true;
		_27313_centuries=0LLU;
		_27213_leaps=0LLU;
	} else {
		if ((_27513_rem >= 200LLU)) {
			if ((_27513_rem >= 300LLU)) {
				_27313_centuries=3LLU;
				_27513_rem-=300LLU;
			} else {
				_27313_centuries=2LLU;
				_27513_rem-=200LLU;
			};
		} else {
			if ((_27513_rem >= 100LLU)) {
				_27313_centuries=1LLU;
				_27513_rem-=100LLU;
			} else {
				_27313_centuries=0LLU;
			};
		};
		if ((_27513_rem == 0LLU)) {
			_26240_leap=false;
			_27213_leaps=0LLU;
		} else {
			_27213_leaps=static_cast<jule::U64>((_27513_rem >> 2LLU));
			_27513_rem%=4LL;
			_26240_leap=(_27513_rem == 0LLU);
		};
	};
	_27213_leaps+=((97LLU * _27413_cycles) + (24LLU * _27313_centuries));
	if (_26240_leap) {
		(_27213_leaps)++;
	};
	return static_cast<jule::U64>((((((_26222_y - 100LLU) * 31536000LLU) + (_27213_leaps * 86400LLU)) + 946684800LLU) + 86400LLU));
}



inline jule::U64 _1b02a17b7_unixMonthToSeconds(jule::U64 _31923_m, jule::Bool _31936_leap) {
	jule::U64 _32113_t = 0LLU;;
	{
		auto &_match_expr{ _31923_m };
		
		if (_match_expr == 1LL) {
			_case_begin_1b3409565:;
			{
				_32113_t=2678400LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1b34096b9:;
			{
				_32113_t=5097600LLU;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1b3409730:;
			{
				_32113_t=7776000LLU;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1b3409796:;
			{
				_32113_t=10368000LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1b340980c:;
			{
				_32113_t=13046400LLU;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1b3409873:;
			{
				_32113_t=15638400LLU;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1b34098d9:;
			{
				_32113_t=18316800LLU;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1b3409950:;
			{
				_32113_t=20995200LLU;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1b34099b6:;
			{
				_32113_t=23587200LLU;
			}
		}
		else if (_match_expr == 10LL) {
			_case_begin_1b3409a2c:;
			{
				_32113_t=26265600LLU;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1b3409aa4:;
			{
				_32113_t=28857600LLU;
			}
		}
		_match_end_1b3409510:;
	};
	if ((_31936_leap && (_31923_m >= 2LLU))) {
		_32113_t+=86400LLU;
	};
	return _32113_t;
}



inline jule::Bool _1b022b555_isCopyOptimizable(jule::Ptr<_1e6a8ac6d_Data>& _74123_expr) {
	if ((!(_74123_expr.get()._field_Lvalue))) {
		return false;
	};
	{
		auto &_match_expr{ _74123_expr.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1e5e16baa_SlicingExprModel>>()) {
			_case_begin_1b348910b:;
			{
				return false;
			}
		}
		_match_end_1b3489628:;
	};
	return true;
}



inline jule::Bool _1b022b8da_isIterCopyOptimizable(jule::Ptr<_1e6a8ac6d_Data>& _75227_expr, jule::Ptr<_1e6a3dd20_Var>& _75241_v) {
	if (((!(_75227_expr.get()._field_Lvalue)) && (!(_1e6ab7e87_Mutable(_75227_expr.get()._field_Kind.ptr()))))) {
		return true;
	};
	return ((!(_75241_v.get()._field_Mutable)) && (!(_75227_expr.get()._field_Mutable)));
}



inline jule::Str _1b02399d6_decomposeCommonEsq(jule::U8 _114123_b) {
	{
		auto &_match_expr{ _114123_b };
		
		if (_match_expr == '\\') {
			_case_begin_1b353a102:;
			{
				return jule::Str("\\\\", 2);
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1b353a168:;
			{
				return jule::Str("'", 1);
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1b353a3bb:;
			{
				return jule::Str("\\\"", 2);
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1b353a432:;
			{
				return jule::Str("\\a", 2);
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1b353a498:;
			{
				return jule::Str("\\b", 2);
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1b353a50e:;
			{
				return jule::Str("\\f", 2);
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1b353a586:;
			{
				return jule::Str("\\n", 2);
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1b353a60d:;
			{
				return jule::Str("\\r", 2);
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1b353a685:;
			{
				return jule::Str("\\t", 2);
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1b353a70c:;
			{
				return jule::Str("\\v", 2);
			}
		}
		else {
			_case_begin_1b3539e8c:;
			{
				return jule::Str();
			}
		}
		_match_end_1b3539dd2:;
	};
}



inline jule::Str _1b0239cc2_sbtoa(jule::U8 _116810_b) {
	if ((_116810_b == 0LLU)) {
		return jule::Str("\\x00", 4);
	};
	if ((_116810_b < 128LLU)) {
		jule::Str _117313_seq = _1b02399d6_decomposeCommonEsq(_116810_b);;
		if ((!(_117313_seq.empty()))) {
			return _117313_seq;
		};
		if (((32LL <= _116810_b) && (_116810_b <= 126LLU))) {
			return static_cast<jule::Str>(_116810_b);
		};
	};
	jule::Str _11819_seq = _1e6a04302_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_116810_b)),8LL);;
	if ((_11819_seq.len() == 2LL)) {
		return (jule::Str("\\0", 2) + _11819_seq);
	};
	return (jule::Str("\\", 1) + _11819_seq);
}



inline jule::Str _1b023a069_cstrBytes(jule::Slice<jule::U8> _118814_bytes) {
	jule::Str _118913_lit = jule::Str::alloc(_118814_bytes.len());;
	{
		auto &expr = _118814_bytes;
		auto it = expr.begin();
		_iter_begin_1b3540c95:;
		if (it != expr.end()) {
			jule::U8 &_119012_b = *it;
			{
				_118913_lit+=_1b0239cc2_sbtoa(_119012_b);
			}
			_iter_next_1b3540c95:;
			++it;
			goto _iter_begin_1b3540c95;
		}
		_iter_end_1b3540c95:;
	};
	return _118913_lit;
}



inline jule::Str _1b023a388_cstrLit(jule::Slice<jule::U8> _119612_bytes) {
	return ((jule::Str("\"", 1) + _1b023a069_cstrBytes(_119612_bytes)) + jule::Str("\"", 1));
}



inline jule::Str _1b023a696_ftoa(jule::F64 _12009_f, jule::I64 _120017_bitsize) {
	if ((_120017_bitsize != 32LL)) {
		if ((_12009_f == static_cast<jule::F64>(static_cast<jule::I64>(_12009_f)))) {
			return _1b023a93d_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_12009_f)));
		};
		if ((_12009_f == static_cast<jule::F64>(static_cast<jule::U64>(_12009_f)))) {
			return _1b023abd5_utoa(static_cast<jule::U64>(static_cast<jule::U64>(_12009_f)));
		};
	};
	jule::Str _120913_m = _1e6434c00_FmtFloat(_12009_f,'f',-1LL,_120017_bitsize);;
	if ((!(_1e438d8d6_Contains(_120913_m,jule::Str(".", 1))))) {
		_120913_m+=jule::Str(".0", 2);
	};
	return _120913_m;
}



inline jule::Str _1b023a93d_itoa(jule::I64 _12169_x) {
	{
		
		if ((_12169_x == jule::MAX_I64)) {
			_case_begin_1b3544e0e:;
			{
				return jule::Str("jule::MAX_I64", 13);
			}
		}
		else if ((_12169_x == jule::MIN_I64)) {
			_case_begin_1b3544e97:;
			{
				return jule::Str("jule::MIN_I64", 13);
			}
		}
		_match_end_1b3544cdd:;
	};
	jule::Str _12249_fmt = _1e6a04434_FmtInt(_12169_x,10LL);;
	if (_1e43e85de_Is64Bit(jule::Str("amd64", 5))) {
		return (_12249_fmt + jule::Str("LL", 2));
	};
	return (_12249_fmt + jule::Str("L", 1));
}



inline jule::Str _1b023abd5_utoa(jule::U64 _12319_x) {
	{
		
		if ((_12319_x == jule::MAX_U64)) {
			_case_begin_1b3546c35:;
			{
				return jule::Str("jule::MAX_U64", 13);
			}
		}
		_match_end_1b3546b25:;
	};
	jule::Str _12379_fmt = _1e6a04302_FmtUint(_12319_x,10LL);;
	if (_1e43e85de_Is64Bit(jule::Str("amd64", 5))) {
		return (_12379_fmt + jule::Str("LLU", 3));
	};
	return (_12379_fmt + jule::Str("LU", 2));
}



inline jule::Bool _1b023b08c_isForwarded(jule::Ptr<_1e6a06700_Scope>& _124417_s) {
	jule::Any _12459_last = _124417_s.get()._field_Stmts[(_124417_s.get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _12459_last };
		
		if (_match_expr.type_is<jule::Ptr<_1e6a8ac6d_Data>>()) {
			_case_begin_1b3549012:;
			{
				{
					auto &_match_expr{ _12459_last.operator jule::Ptr<_1e6a8ac6d_Data>().get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_1e5e19185_BuiltinErrorCallExprModel>>()) {
						_case_begin_1b3549b28:;
						{
							return true;
						}
					}
					else {
						_case_begin_1b3549ab2:;
						{
							return false;
						}
					}
					_match_end_1b35497e8:;
				};
			}
		}
		else {
			_case_begin_1b3548e57:;
			{
				return true;
			}
		}
		_match_end_1b3548e02:;
	};
}



inline jule::Bool _1b023b356_isBuiltinCallHasDebuginf(jule::Ptr<_1e5e1602d_FnCallExprModel>& _125930_m) {
	if ((!(_1e5e21665_IsBuiltin(_125930_m.get()._field_Func.ptr())))) {
		return false;
	};
	{
		auto &_match_expr{ _125930_m.get()._field_Expr };
		
		if (_match_expr.type_is<jule::Ptr<_1e5e17a68_CommonSubIdentExprModel>>()) {
			_case_begin_1b354a8b5:;
			{
				jule::Ptr<_1e5e17a68_CommonSubIdentExprModel> _126513_csie = _125930_m.get()._field_Expr.operator jule::Ptr<_1e5e17a68_CommonSubIdentExprModel>();;
				return (_126513_csie.get()._field_Ident == jule::Str("swap", 4));
			}
		}
		else {
			_case_begin_1b3549595:;
			{
				return false;
			}
		}
		_match_end_1b3549540:;
	};
}



inline void _1b02a6635_iterFiles(jule::Ptr<_1e6a1c24e_Package>& _100219_pkg, jule::Fn<void(jule::Ptr<_1e6a86010_SymbolTable>&)> _100234_f) {
	{
		auto &expr = _100219_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1b3685e62:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a86010_SymbolTable> _100317_file = *it;
			{
				_100234_f(_100317_file);
			}
			_iter_next_1b3685e62:;
			++it;
			goto _iter_begin_1b3685e62;
		}
		_iter_end_1b3685e62:;
	};
}



inline void _1b02a6888_prepareStructure(jule::Ptr<_1e5d4518d_Struct>& _100826_s) {
	{
		auto &expr = _100826_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1b3686a78:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d714d8_StructIns> _100917_ins = *it;
			{
				{
					auto &expr = _100917_ins.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1b3687293:;
					if (it != expr.end()) {
						jule::Ptr<_1e5e1c62d_Fn> _101021_m = *it;
						{
							if (_101021_m.get()._field_Statically) {
								goto _iter_next_1b3687293;
							};
							{
								auto &expr = _101021_m.get()._field_Instances;
								auto it = expr.begin();
								_iter_begin_1b3688074:;
								if (it != expr.end()) {
									jule::Ptr<_1e5e202ce_FnIns> _101425_mins = *it;
									{
										jule::Ptr<_1e5e1e410_ParamIns> _101525_p = _101425_mins.get()._field_Params[0LL];;
										if ((!(_1e5e1b682_IsRef(_101525_p.get()._field_Decl.ptr())))) {
											_101525_p.get()._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(jule::new_ptr<_1b02a7845_customType>(_1b02a7845_customType{._field_kind=static__1b02a91e8_asPtr(static__1b02ac6e6_kind(_101525_p.get()._field_Kind))}), 13)});
										} else {
											_101525_p.get()._field_Kind=jule::new_ptr<_1e6ab6a8a_TypeKind>(_1e6ab6a8a_TypeKind{._field_Kind=jule::Trait<_1e6ab665b_Kind>(jule::new_ptr<_1b02a7845_customType>(_1b02a7845_customType{._field_kind=static__1b02ac6e6_kind(_101525_p.get()._field_Kind)}), 13)});
										};
									}
									_iter_next_1b3688074:;
									++it;
									goto _iter_begin_1b3688074;
								}
								_iter_end_1b3688074:;
							};
						}
						_iter_next_1b3687293:;
						++it;
						goto _iter_begin_1b3687293;
					}
					_iter_end_1b3687293:;
				};
			}
			_iter_next_1b3686a78:;
			++it;
			goto _iter_begin_1b3686a78;
		}
		_iter_end_1b3686a78:;
	};
}



inline jule::Str _1b02a6b30_concatAllParts(jule::Slice<jule::Ptr<_1e47137a5_Token>> _103519_parts) {
	jule::I64 _103613_n = 0LL;;
	{
		auto &expr = _103519_parts;
		auto it = expr.begin();
		_iter_begin_1b3687095:;
		if (it != expr.end()) {
			jule::Ptr<_1e47137a5_Token> &_103712_part = *it;
			{
				_103613_n+=_103712_part.get()._field_Kind.len();
			}
			_iter_next_1b3687095:;
			++it;
			goto _iter_begin_1b3687095;
		}
		_iter_end_1b3687095:;
	};
	if ((_103613_n == 0LL)) {
		return jule::Str();
	};
	jule::Str _104313_s = jule::Str::alloc(_103613_n);;
	{
		auto &expr = _103519_parts;
		auto it = expr.begin();
		_iter_begin_1b368ba39:;
		if (it != expr.end()) {
			jule::Ptr<_1e47137a5_Token> &_104412_p = *it;
			{
				_104313_s+=_104412_p.get()._field_Kind;
			}
			_iter_next_1b368ba39:;
			++it;
			goto _iter_begin_1b368ba39;
		}
		_iter_end_1b368ba39:;
	};
	return _104313_s;
}



inline jule::Ptr<_1e5d21268_Directive> _1b02b0056_findDirective(jule::Slice<jule::Ptr<_1e5d21268_Directive>>& _32923_directives, jule::Str _32954_tag) {
	{
		auto &expr = _32923_directives;
		auto it = expr.begin();
		_iter_begin_1b375a6b8:;
		if (it != expr.end()) {
			jule::Ptr<_1e5d21268_Directive> _33017_dr = *it;
			{
				if ((_33017_dr.get()._field_Tag.get()._field_Kind == _32954_tag)) {
					return _33017_dr;
				};
			}
			_iter_next_1b375a6b8:;
			++it;
			goto _iter_begin_1b375a6b8;
		}
		_iter_end_1b375a6b8:;
	};
	return nullptr;
}



inline jule::Bool _1b02b03db_hasDirective(jule::Slice<jule::Ptr<_1e5d21268_Directive>>& _33918_directives, jule::Str _33949_tag) {
	return (_1b02b0056_findDirective(_33918_directives,_33949_tag) != nullptr);
}



inline void _1e43b2ca1_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _1e43c6424_help(jule::Slice<jule::Str>& _3510_args) {
	if ((_3510_args.len() > 2LL)) {
		_1e43b2ca1_printErrorMessage((jule::Str("invalid command: ", 17) + _3510_args[2LL]));
		return;;
	};
	jule::I64 _4113_max = _1e43b64e1_HelpMap[0LL][0LL].len();;
	{
		auto &expr = _1e43b64e1_HelpMap;
		auto it = expr.begin();
		_iter_begin_1b37d1b90:;
		if (it != expr.end()) {
			jule::Array<jule::Str,2> &_4212_k = *it;
			{
				jule::I64 _4313_n = _4212_k[0LL].len();;
				if ((_4313_n > _4113_max)) {
					_4113_max=_4313_n;
				};
			}
			_iter_next_1b37d1b90:;
			++it;
			goto _iter_begin_1b37d1b90;
		}
		_iter_end_1b37d1b90:;
	};
	jule::Str _4913_s = jule::Str();;
	;
	{
		auto &expr = _1e43b64e1_HelpMap;
		auto it = expr.begin();
		_iter_begin_1b37d49d9:;
		if (it != expr.end()) {
			jule::I64 _519_i = it - expr.begin();
			jule::Array<jule::Str,2> &_5112_part = *it;
			{
				_4913_s+=_5112_part[0LL];
				_4913_s+=_1e350c9ac_Repeat(jule::Str(" ", 1),static_cast<jule::I64>(((_4113_max - _5112_part[0LL].len()) + 5LL)));
				_4913_s+=_5112_part[1LL];
				if (((_519_i + 1LL) < 5LL)) {
					_4913_s+=jule::Str("\n", 1);
				};
			}
			_iter_next_1b37d49d9:;
			++it;
			_519_i++;
			goto _iter_begin_1b37d49d9;
		}
		_iter_end_1b37d49d9:;
	};
	jule::outln(_4913_s);
}



inline void _1e43c6b72_version(jule::Slice<jule::Str>& _6313_args) {
	if ((_6313_args.len() > 2LL)) {
		_1e43b2ca1_printErrorMessage((jule::Str("invalid command: ", 17) + _6313_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("jule0.0.12 @master", 18));
}



inline void _1e43c8525_toolDistos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	jule::out(jule::Str("windows", 7));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("linux", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("darwin", 6));
	jule::outln(jule::Str());
}



inline void _1e43c8c73_toolDistarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	jule::out(jule::Str("amd64", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("i386", 4));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("arm64", 5));
	jule::outln(jule::Str());
}



inline void _1e43c94c1_tool(jule::Slice<jule::Str>& _9410_args) {
	if ((_9410_args.len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if ((_9410_args.len() > 3LL)) {
		_1e43b2ca1_printErrorMessage((jule::Str("invalid command: ", 17) + _9410_args[3LL]));
		return;;
	};
	jule::Str _1059_cmd = _9410_args[2LL];;
	{
		auto &_match_expr{ _1059_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_1b37dbbbc:;
			{
				_1e43c8525_toolDistos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_1b37db8ae:;
			{
				_1e43c8c73_toolDistarch();
			}
		}
		else {
			_case_begin_1b37da182:;
			{
				_1e43b2ca1_printErrorMessage((jule::Str("undefined command: ", 19) + _1059_cmd));
			}
		}
		_match_end_1b37db6e4:;
	};
}



inline void _1e43b3ba3_julenv(jule::Slice<jule::Str>& _11712_args) {
	if ((_11712_args.len() > 2LL)) {
		_1e43b2ca1_printErrorMessage((jule::Str("invalid command: ", 17) + _11712_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("julec version: jule0.0.12 @master", 33));
	jule::outln(jule::Str("architecture: amd64", 19));
	jule::outln(jule::Str("operating system: windows", 25));
	jule::outln((jule::Str("default compiler: ", 18) + _1e2407226_Compiler));
	jule::outln((jule::Str("default C++ standard: ", 22) + _1e24b52d4_CppStd));
}



inline void _1e43d5d7e_mod(jule::Slice<jule::Str>& _1309_args) {
	if ((_1309_args.len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;;
	};
	if ((_1309_args.len() > 3LL)) {
		_1e43b2ca1_printErrorMessage((jule::Str("invalid command: ", 17) + _1309_args[3LL]));
		return;;
	};
	{
		auto &_match_expr{ _1309_args[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_1b37e1232:;
			{
				({
					auto except = static__1e260518d_Write(jule::Str("jule.mod", 8),jule::Slice<jule::U8>(),432LL);
					if (!except.ok()) {
						_1e43b2ca1_printErrorMessage(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1b37dea5a:;
			{
				_1e43b2ca1_printErrorMessage((jule::Str("invalid command: ", 17) + _1309_args[2LL]));
			}
		}
		_match_end_1b37e0cc0:;
	};
}



inline jule::Bool _1e24d6bc9_processCommand(jule::Slice<jule::Str>& _15320_args) {
	{
		auto &_match_expr{ _15320_args[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_1b37e2486:;
			{
				_1e43c6424_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_1b37e24ec:;
			{
				_1e43c6b72_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_1b37e2563:;
			{
				_1e43c94c1_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_1b37e2c4a:;
			{
				_1e43b3ba3_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_1b37e2cb1:;
			{
				_1e43d5d7e_mod(_15320_args);
			}
		}
		else {
			_case_begin_1b37e23a9:;
			{
				return false;
			}
		}
		_match_end_1b37e22dd:;
	};
	return true;
}



inline void _1e43ca00a_showInfo(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help,\n    version       Show version,\n    tool          Tools for effective Jule,\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 310));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18913_args = _1e3469397_Args();;
	if ((_18913_args.len() < 2LL)) {
		_1e43ca00a_showInfo();
		return;;
	};
	if (_1e24d6bc9_processCommand(_18913_args)) {
		return;;
	};
	_1b030b39e_compileCommand(_18913_args);
}



inline void _1e43b9cdb_enableVtp(void) {
	jule::Uintptr _199_hOut = _1e32d580c_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551605LLU));;
	if ((_199_hOut == jule::MAX_U64)) {
		return;;
	};
	jule::I64 _2413_dwMode = 0LL;;
	if ((!(_1e32d8513_GetConsoleMode(_199_hOut,_2413_dwMode)))) {
		return;;
	};
	_2413_dwMode|=4LL;
	_1e32d8854_SetConsoleMode(_199_hOut,_2413_dwMode);
}



inline void _1e43c79a8_init(void) {
	_1e43b9cdb_enableVtp();
}



inline void _1b02cc370_init(void) {
	_1e2407226_Compiler=jule::Str("clang", 5);
}



inline jule::Ptr<_1e32e8a84_File> _1b02cde21_openOutput(jule::Str& _4316_path) {
	jule::Str _449_dir = _1e34b81c6_Dir(_4316_path);;
	({
		auto except = static__1e341a722_Of(_449_dir);
		if (!except.ok()) {
			({
				auto except = static__1e33d195d_Create(_449_dir);
				if (!except.ok()) {
					_1c9b31825_Throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__1e2603b2b_Create(_4316_path);
		(except.ok()) ? (except.result) : ({
			_1c9b31825_Throw(jule::Str("a problem occurs when code generation", 37));
			nullptr;
		});
	});
}



inline void _1b02da108_clearObjects(void) {
	({
		auto except = static__1e3352b10_Remove(_1b02c7d3d_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__1e34368e7_Remove(_1b02ce5d6_OutDir);
}



inline void _1b02c6556_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_1e443278d_Cmd> _7313_cmd = static__1e4432bbc_New(_7214_compiler);;
	_7313_cmd.get()._field_Args=jule::Slice<jule::Str>::make({_7214_compiler});
	_7313_cmd.get()._field_Args=jule::append(_7313_cmd.get()._field_Args,_1e438d7a4_Split(_7229_compilerCmd,jule::Str(" ", 1),-1LL));
	jule::I64 _769_status = ({
		auto except = _1e4432e31_Spawn(_7313_cmd.ptr());
		(except.ok()) ? (except.result) : ({
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(12LL)) == _match_expr) {
					_case_begin_1b37ec1a5:;
					{
						static__1c9b2e0c5_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of fork problem", 56));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(3LL)) == _match_expr) {
					_case_begin_1b37eb979:;
					{
						static__1c9b2e0c5_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(9LL)) == _match_expr) {
					_case_begin_1b37ebbdd:;
					{
						static__1c9b2e0c5_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not in the proper format", 85));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL)) == _match_expr) {
					_case_begin_1b37ebc54:;
					{
						static__1c9b2e0c5_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1b37ebabc:;
					{
						static__1c9b2e0c5_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of unkown problem", 58));
					}
				}
				_match_end_1b37eba12:;
			};
			_1c9b31825_Throw(jule::Str());
			0LL;
		});
	});;
	if ((_769_status != 0LL)) {
		jule::Str _9313_errorMessage = ((jule::Str("\n>>> your backend compiler (", 28) + _1e2407226_Compiler) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1c9b2e0c5_Print(jule::Str("\033[31m", 5),_9313_errorMessage);
		_1c9b31825_Throw(jule::Str());
	};
	_1b02da108_clearObjects();
}



inline jule::Bool _1b02c5ec3_isCppSourceFile(jule::Str _10420_path) {
	jule::I64 _1059_offset = _1e438d067_FindLastByte(_10420_path,'.');;
	if ((_1059_offset == -1LL)) {
		return false;
	};
	return _1e43d7347_IsValidCppExt(_10420_path.slice(_1059_offset));
}



inline void _1b02ca6d1_pushCompCmdClang(jule::Str& _11226_cmd) {
	_11226_cmd+=jule::Str("-Wno-everything ", 16);
	_11226_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _1e24b52d4_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1b3801ab1:;
			{
				_11226_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1b3801b27:;
			{
				_11226_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1b3801c7b:;
			{
				_11226_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1b380196d:;
	};
	_11226_cmd+=jule::Str(" ", 1);
	if (_1e24b666a_Production) {
		_11226_cmd+=jule::Str("-O3 ", 4);
		_11226_cmd+=jule::Str("-flto ", 6);
		_11226_cmd+=jule::Str("-DNDEBUG ", 9);
		_11226_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_11226_cmd+=jule::Str("-O0 ", 4);
	};
}



inline void _1b02c88aa_pushCompCmdGcc(jule::Str& _13824_cmd) {
	_13824_cmd+=jule::Str("-w ", 3);
	_13824_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _1e24b52d4_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1b3804300:;
			{
				_13824_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1b3804366:;
			{
				_13824_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1b38044ba:;
			{
				_13824_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1b38041ac:;
	};
	_13824_cmd+=jule::Str(" ", 1);
	if (_1e24b666a_Production) {
		_13824_cmd+=jule::Str("-O3 ", 4);
		_13824_cmd+=jule::Str("-DNDEBUG ", 9);
		_13824_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_13824_cmd+=jule::Str("-O0 ", 4);
	};
}



inline std::tuple<jule::Str,jule::Str> _1b02edcdc_genCompileCmd(jule::Str _16418_sourcePath, jule::Ptr<_1c9974888_IR>& _16436_ir) {
	jule::Str &_16510_compiler = _1e24b5070_CompilerPath;;
	jule::Str _16613_cmd = jule::Str::alloc(64LL);;
	{
		auto &_match_expr{ _1e2407226_Compiler };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1b3806c09:;
			{
				_1b02c88aa_pushCompCmdGcc(_16613_cmd);
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1b3807259:;
			{
				_1b02ca6d1_pushCompCmdClang(_16613_cmd);
			}
		}
		_match_end_1b3806ee5:;
	};
	{
		auto &expr = _16436_ir.get()._field_Passes;
		auto it = expr.begin();
		_iter_begin_1b380759a:;
		if (it != expr.end()) {
			jule::Str &_17612_pass = *it;
			{
				_16613_cmd+=_17612_pass;
				_16613_cmd+=jule::Str(" ", 1);
			}
			_iter_next_1b380759a:;
			++it;
			goto _iter_begin_1b380759a;
		}
		_iter_end_1b380759a:;
	};
	{
		auto &expr = _16436_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1b3808975:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a192e5_ImportInfo> &_18212_u = *it;
			{
				if ((_18212_u.get()._field_CppLinked && _1b02c5ec3_isCppSourceFile(_18212_u.get()._field_Path))) {
					_16613_cmd+=_18212_u.get()._field_Path;
					_16613_cmd+=jule::Str(" ", 1);
				};
			}
			_iter_next_1b3808975:;
			++it;
			goto _iter_begin_1b3808975;
		}
		_iter_end_1b3808975:;
	};
	if ((!(_1b02d1c37_Out.empty()))) {
		_16613_cmd+=jule::Str("-o ", 3);
		_16613_cmd+=_1b02d1c37_Out;
		_16613_cmd+=jule::Str(" ", 1);
	};
	_16613_cmd+=_16418_sourcePath;
	return std::make_tuple(_16510_compiler,_16613_cmd);
}



inline jule::Str _1b02c7d3d_getCompilePath(void) {
	return _1e34d0919_Join(jule::Slice<jule::Str>::make({_1b02ce5d6_OutDir,_1b02d10cc_OutName}));
}



inline void _1b02c83c1_applyTargetIndependentOptimizations(jule::Ptr<_1c9974888_IR>& _20545_ir) {
	jule::Ptr<_1c9ad938d_Optimizer> _20713_opt = static__1c9a47d24_New(_20545_ir);;
	_1c9a99419_Optimize(_20713_opt.ptr());
}



inline void _1b02d5db2_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _1e2407226_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1b380a35b:;
			{
				_1c9b31825_Throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1b380b181:;
			{
				if (_1e24b5070_CompilerPath.empty()) {
					_1e24b5070_CompilerPath=jule::Str("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1b380b1e7:;
			{
				if (_1e24b5070_CompilerPath.empty()) {
					_1e24b5070_CompilerPath=jule::Str("g++", 3);
				};
			}
		}
		else {
			_case_begin_1b380b11a:;
			{
				_1c9b31825_Throw((jule::Str("invalid option value for --compiler: ", 37) + _1e2407226_Compiler));
			}
		}
		_match_end_1b380ad51:;
	};
}



inline void _1b02c5ac7_checkTargetArch(jule::Str _22820_arch) {
	if ((((_22820_arch != jule::Str("amd64", 5)) && (_22820_arch != jule::Str("arm64", 5))) && (_22820_arch != jule::Str("i386", 4)))) {
		_1c9b31825_Throw((jule::Str("--target: unsupported/undefined architecture: ", 46) + _22820_arch));
	};
}



inline void _1b02c9933_checkTargetOs(jule::Str _23618_os) {
	if ((((_23618_os != jule::Str("windows", 7)) && (_23618_os != jule::Str("linux", 5))) && (_23618_os != jule::Str("darwin", 6)))) {
		_1c9b31825_Throw((jule::Str("--target: unsupported/undefined operating system: ", 50) + _23618_os));
	};
}



inline void _1b02c9a65_checkTargetFlag(jule::Str& _24421_target) {
	if (_24421_target.empty()) {
		_1c9b31825_Throw(jule::Str("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2499_parts = _1e438d7a4_Split(_24421_target,jule::Str("-", 1),-1LL);;
	if ((_2499_parts.len() != 2LL)) {
		_1c9b31825_Throw((jule::Str("--target: undefined platform target format: ", 44) + _24421_target));
	};
	jule::Str _25410_os = _2499_parts[0LL];;
	jule::Str _25414_arch = _2499_parts[1LL];;
	std::tie(_25410_os,_25414_arch) = std::make_tuple(_2499_parts[0LL],_2499_parts[1LL]);
	if ((_25410_os != jule::Str("native", 6))) {
		_1b02c9933_checkTargetOs(_25410_os);
		_1e44313c4_Os=_25410_os;
	};
	if ((_25414_arch != jule::Str("native", 6))) {
		_1b02c5ac7_checkTargetArch(_25414_arch);
		_1e4414b5a_Arch=_25414_arch;
	};
	_1e6328693_UpdateTarget();
}



inline void _1b030aa63_checkOptFlag(jule::Str& _26718_opt) {
	if (_26718_opt.empty()) {
		_1c9b31825_Throw(jule::Str("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ _26718_opt };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_1b3813c9e:;
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_1b38142ee:;
			{
				_1e4c76ba3_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1b3813a7e:;
			{
				_1c9b31825_Throw((jule::Str("--opt: invalid optimization level: ", 35) + _26718_opt));
			}
		}
		_match_end_1b3813a29:;
	};
}



inline void _1b030adc6_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _1e24b52d4_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1b3814365:;
			{
				goto _match_end_1b3815168;
			}
		}
		else {
			_case_begin_1b3814c7d:;
			{
				_1c9b31825_Throw((jule::Str("--cppstd: invalid optimization level: ", 38) + _1e24b52d4_CppStd));
			}
		}
		_match_end_1b3815168:;
	};
}



inline jule::Slice<jule::Str> _1b030b008_checkFlags(jule::Slice<jule::Str>& _29216_args) {
	jule::Str _29313_opt = jule::Str("L0", 2);;
	jule::Str _29413_target = jule::Str("native-native", 13);;
	jule::Ptr<_1b0306c7e_FlagSet> _29613_fs = static__1b030706a_New();;
	_1b381c59e_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29313_opt)))),jule::Str("opt", 3),0LL,jule::Str("Optimization level", 18));
	_1b381c59e_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29413_target)))),jule::Str("target", 6),0LL,jule::Str("Target system", 13));
	_1b381c59e_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1b02d1c37_Out)))),jule::Str("out", 3),'o',jule::Str("Output identifier", 17));
	_1b38261ce_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e24b5548_Shadowing)))),jule::Str("shadowing", 9),0LL,jule::Str("Allow shadowing", 15));
	_1b38261ce_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e24b5823_Transpilation)))),jule::Str("transpile", 9),'t',jule::Str("Transpile code", 14));
	_1b381c59e_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1e2407226_Compiler)))),jule::Str("compiler", 8),0LL,jule::Str("Backend compiler", 16));
	_1b381c59e_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1e24b5070_CompilerPath)))),jule::Str("compiler-path", 13),0LL,jule::Str("Path of backend compiler", 24));
	_1b38261ce_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e24b666a_Production)))),jule::Str("production", 10),'p',jule::Str("Compile for production", 22));
	_1b38261ce_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e24b5e3e_RC)))),jule::Str("disable-rc", 10),0LL,jule::Str("Disable reference counting", 26));
	_1b38261ce_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e24b635c_Safety)))),jule::Str("disable-safety", 14),0LL,jule::Str("Disable safety", 14));
	_1b381c59e_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1e24b52d4_CppStd)))),jule::Str("cppstd", 6),0LL,jule::Str("C++ standard", 12));
	_1b38261ce_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e474c4e2_Copy)))),jule::Str("opt-copy", 8),0LL,jule::Str("Copy optimization", 17));
	_1b38261ce_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e4751a24_Deadcode)))),jule::Str("opt-deadcode", 12),0LL,jule::Str("Deadcode optimization", 21));
	_1b38261ce_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e473c779_Append)))),jule::Str("opt-append", 10),0LL,jule::Str("Append optimization", 19));
	_1b38261ce_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e4758410_Math)))),jule::Str("opt-math", 8),0LL,jule::Str("Math optimization", 17));
	_1b38261ce_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e475d866_Access)))),jule::Str("opt-access", 10),0LL,jule::Str("Access optimization", 19));
	_1b38261ce_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e4773903_Inline)))),jule::Str("opt-inline", 10),0LL,jule::Str("Inline optimization", 19));
	_1b38261ce_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e477b103_Ptr)))),jule::Str("opt-ptr", 7),0LL,jule::Str("Pointer optimizations", 21));
	_1b38261ce_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e477e0c3_Cond)))),jule::Str("opt-cond", 8),0LL,jule::Str("Conditional optimizations", 25));
	jule::Slice<jule::Str> _31813_content = ({
		auto except = _1b0307d7e_Parse(_29613_fs.ptr(), _29216_args);
		(except.ok()) ? (except.result) : ({
			_1c9b31825_Throw(except.error.operator jule::Str());
			nullptr;
		});
	});;
	_1b02d5db2_checkCompilerFlag();
	_1b030adc6_checkCppStdFlag();
	_1b02c9a65_checkTargetFlag(_29413_target);
	_1b030aa63_checkOptFlag(_29313_opt);
	return _31813_content;
}



inline void _1b030b13a_setupSemaFlags(jule::I64& _33124_flags) {
	if (_1e24b5548_Shadowing) {
		_33124_flags|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1c9974888_IR> _1b030b26c_buildIr(jule::Slice<jule::Str>& _33713_args) {
	jule::Slice<jule::Str> _3389_content = _1b030b008_checkFlags(_33713_args);;
	jule::I64 _34013_semaFlags = static_cast<jule::I64>(0LL);;
	_1b030b13a_setupSemaFlags(_34013_semaFlags);
	if ((_3389_content.len() == 0LL)) {
		_1c9b31825_Throw(_1e43e3e58_Logf(jule::Str("missing compile path", 20),jule::Slice<jule::Any>()));
	} else if ((_3389_content.len() > 1LL)) {
		_1c9b31825_Throw((jule::Str("undefined content: ", 19) + _3389_content[1LL]));
	};
	jule::Str _34814_path;;
	jule::Bool _34820_ok;;
	std::tie(_34814_path,_34820_ok) = _1e34aee26_Abs(_3389_content[0LL]);
	if ((!(_34820_ok))) {
		_1c9b31825_Throw(jule::Str("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_1e32e8c71_Status> _3549_inf = ({
		auto except = static__1e341a722_Of(_1e441574e_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1c9b31825_Throw(_1e43e3e58_Logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
			return nullptr;
		} jule::Ptr<_1e32e8c71_Status>();});
	});;
	if ((!(_1e26092c4_IsDir(_3549_inf.ptr())))) {
		_1c9b31825_Throw(_1e43e3e58_Logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1c9974888_IR> _36214_ir;;
	jule::Slice<_1e43e3a18_Log> _36218_logs;;
	std::tie(_36214_ir,_36218_logs) = static__1c8bb7989_Build(_34814_path,_34013_semaFlags);
	if (((_36214_ir == nullptr) && (_36218_logs == nullptr))) {
		_1c9b31825_Throw(_1e43e3e58_Logf(jule::Str("there is no Jule source code in package: @", 42),jule::Slice<jule::Any>::make({jule::Any(_34814_path)})));
	};
	if ((_36218_logs != nullptr)) {
		static__1c9b30da7_PrintLogs(_36218_logs);
		_1c9b31825_Throw(jule::Str());
	};
	return _36214_ir;
}



inline void _1b030b39e_compileCommand(jule::Slice<jule::Str>& _37724_args) {
	_37724_args=_37724_args.slice(1LL);
	if ((_37724_args[0LL] == jule::Str("test", 4))) {
		_1e24b5b31_Test=true;
		_37724_args=_37724_args.slice(1LL);
	};
	jule::Ptr<_1c9974888_IR> _38313_ir = _1b030b26c_buildIr(_37724_args);;
	;
	if ((!(_1e24b5b31_Test))) {
		jule::Ptr<_1e5e1c62d_Fn> _38817_main = _1e6a1da03_FindFn(_38313_ir.get()._field_Main.ptr(), jule::Str("main", 4),false);;
		if ((_38817_main == nullptr)) {
			_1c9b31825_Throw(_1e43e3e58_Logf(jule::Str("missing entry point: entry point (main) function is not defined", 63),jule::Slice<jule::Any>()));
		};
	};
	_1b02c83c1_applyTargetIndependentOptimizations(_38313_ir);
	_1c8c2e46d_Order(_38313_ir.ptr());
	jule::Str _39910_compiler;;
	jule::Str _39920_compilerCmd;;
	std::tie(_39910_compiler,_39920_compilerCmd) = _1b02edcdc_genCompileCmd(_1b02c7d3d_getCompilePath(),_38313_ir);
	jule::Ptr<_1b02a1d06_ObjectCoder> _40113_oc = static__1b0284d2d_New(_38313_ir,_1b02a192c_SerializationInfo{._field_Compiler=_39910_compiler, ._field_CompilerCommand=_39920_compilerCmd});;
	if (_1e24b5b31_Test) {
		jule::Ptr<_1b023cd6e_TestCoder> _40617_tc = static__1b023d2e2_New(_40113_oc);;
		_1b023e524_Serialize(_40617_tc);
	} else {
		_1b02a62c2_Serialize(_40113_oc);
	};
	jule::Str _4129_path = _1b02c7d3d_getCompilePath();;
	jule::Ptr<_1e32e8a84_File> _41313_file = _1b02cde21_openOutput(_4129_path);;
	({
		auto except = _1e337c376_Write(_41313_file.ptr(), static_cast<jule::Slice<jule::U8>>(_40113_oc.get()._field_Obj));
		if (!except.ok()) {
			_1c9b31825_Throw(jule::Str("object code could not write", 27));
		}
	});
	({
		auto except = _1e260724a_Close(_41313_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:417:5"));
	});
	if ((!(_1e24b5823_Transpilation))) {
		_1b02c6556_compileIr(_39910_compiler,_39920_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_1e440570b_init();
	_1e6335c55_init();
	_1e43c79a8_init();
	_1b02cc370_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}