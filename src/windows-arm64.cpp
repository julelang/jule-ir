// Auto generated by JuleC.
// JuleC version: jule0.0.15 @master
// Date: 28/7/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp -lws2_32 -lshell32 -lshell32

#define __JULE_ENABLE__PRODUCTION
#include "std/jule/integrated/integrated.hpp"                                   
#include <winsock2.h>
#include <ws2ipdef.h>
#include <windows.h>
#include <fcntl.h>
#include <io.h>
#include <cstdio>
#include <sys/stat.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   


struct _1acb3a20d_comptimeRangeKind{};
struct _1abcd86ed_Importer{};
struct _1acca4740_Kind{};
struct _1accc2ecd_Lookup{};
struct _1a4955dcd_CommonFlag{};
struct _208395e29_acceptRange;
struct _2093657bb_Range16;
struct _209365c3e_Range32;
struct _2093661b2_RangeTable;
struct _2093a64cc_lazyBuff;
struct _2082a94ad_DirEntry;
struct _2082a9722_Directory;
struct _2082b61e0_File;
struct _2082b8830_Status;
struct _2094cea78_cmdAttrs;
struct _20943da3c_Log;
struct _2097d15d8_Token;
struct _2097d6973_File;
struct _2097d8755_kindPair;
struct _2097de2b6_lex;
struct _1dde8d4ec_floatInfo;
struct _1dde8de8c_decimalSlice;
struct _1ddea02bc_leftCheat;
struct _1ddea0c90_decimal;
struct _1ddeb4b1c_Const;
struct _1acaa352d_Ast;
struct _1acaa43b9_Node;
struct _1acaa47b5_Directive;
struct _1acad72cb_TypeDecl;
struct _1acad7892_IdentTypeDecl;
struct _1acad7b7d_SubIdentTypeDecl;
struct _1acad8002_NamespaceTypeDecl;
struct _1acad82dd_SptrTypeDecl;
struct _1acad86d9_SlcTypeDecl;
struct _1acad89c5_TupleTypeDecl;
struct _1acad8cb1_PtrTypeDecl;
struct _1acad9487_ArrTypeDecl;
struct _1acad9b91_MapTypeDecl;
struct _1acada048_RetTypeDecl;
struct _1acadb456_Expr;
struct _1acadb742_RangeExpr;
struct _1acadbce7_UseExpr;
struct _1acadc0d3_TupleExpr;
struct _1acadc48a_LitExpr;
struct _1acadcac8_UnsafeExpr;
struct _1acadd04b_IdentExpr;
struct _1acadd755_UnaryExpr;
struct _1acaddb0c_VariadicExpr;
struct _1acaddeb4_CastExpr;
struct _1acade36b_NsSelectionExpr;
struct _1acade7de_SubIdentExpr;
struct _1acadec62_BinopExpr;
struct _1acae036c_FnCallExpr;
struct _1acae0ceb_FieldExprPair;
struct _1acae15c1_StructLit;
struct _1acae1a44_BraceLit;
struct _1acae2429_KeyValPair;
struct _1acae2a9a_SliceExpr;
struct _1acae3408_IndexingExpr;
struct _1acae3a13_SlicingExpr;
struct _1acae3cee_Constraint;
struct _1acae4272_GenericDecl;
struct _1acae4629_LabelSt;
struct _1acae49d1_GotoSt;
struct _1acae4cbc_FallSt;
struct _1acae53c7_AssignLeft;
struct _1acae5916_AssignSt;
struct _1acae6807_Stmt;
struct _1acae6e12_ScopeTree;
struct _1acae75d8_ParamDecl;
struct _1acae8908_FnDecl;
struct _1acae98d7_VarDecl;
struct _1acae9c8e_RetSt;
struct _1acaea3ee_Iter;
struct _1acaeabc4_WhileKind;
struct _1acaeb565_RangeKind;
struct _1acaeb91c_BreakSt;
struct _1acaebcc4_ContSt;
struct _1acaec247_If;
struct _1acaec5ee_Else;
struct _1acaeca72_Conditional;
struct _1acaed248_TypeAliasDecl;
struct _1acaed6bb_Case;
struct _1acaedd92_MatchCase;
struct _1acaee634_UseDecl;
struct _1acaeeaa7_EnumItemDecl;
struct _1acb005d0_EnumDecl;
struct _1acb00da5_TypeEnumItemDecl;
struct _1acb014b0_TypeEnumDecl;
struct _1acb01724_FieldDecl;
struct _1acb02071_StructDecl;
struct _1acb02747_TraitDecl;
struct _1acb02d52_Impl;
struct _1acb0444c_Field;
struct _1acb0620c_Operators;
struct _1acb07021_Struct;
struct _1acb09342_FieldIns;
struct _1acb0dc3c_OperandExprModel;
struct _1acb0e204_BinopExprModel;
struct _1acb0e5ab_UnaryExprModel;
struct _1acb0e9a7_StructArgExprModel;
struct _1acb0ed5e_StructLitExprModel;
struct _1acb1016c_AllocStructLitExprModel;
struct _1acb106bc_CastingExprModel;
struct _1acb1106e_FnCallExprModel;
struct _1acb11426_SliceExprModel;
struct _1acb11899_IndexingExprModel;
struct _1acb11c51_AnonFnExprModel;
struct _1acb12108_KeyValPairExprModel;
struct _1acb1257b_MapExprModel;
struct _1acb12aba_SlicingExprModel;
struct _1acb13109_TraitSubIdentExprModel;
struct _1acb138e0_StructSubIdentExprModel;
struct _1acb13c86_StructStaticIdentExprModel;
struct _1acb1414e_ArrayExprModel;
struct _1acb1443a_CommonIdentExprModel;
struct _1acb1499b_CommonSubIdentExprModel;
struct _1acb14c98_TupleExprModel;
struct _1acb15172_BuiltinOutCallExprModel;
struct _1acb1555c_BuiltinOutlnCallExprModel;
struct _1acb1587b_BuiltinCloneCallExprModel;
struct _1acb15c66_BuiltinNewCallExprModel;
struct _1acb16151_BuiltinPanicCallExprModel;
struct _1acb16607_BuiltinAssertCallExprModel;
struct _1acb16aad_BuiltinMakeCallExprModel;
struct _1acb16e98_BuiltinAppendCallExprModel;
struct _1acb172b7_BuiltinLenCallExprModel;
struct _1acb175d6_BuiltinCapCallExprModel;
struct _1acb1cb19_BuiltinDeleteCallExprModel;
struct _1acb1ce5a_BuiltinCopyCallExprModel;
struct _1acb1d345_BuiltinErrorCallExprModel;
struct _1acb1d642_SizeofExprModel;
struct _1acb1d92d_AlignofExprModel;
struct _1acb1dc19_RuneExprModel;
struct _1acb1e027_IntegratedToStrExprModel;
struct _1acb1e3e0_BackendEmitExprModel;
struct _1acb1e6cb_FreeExprModel;
struct _1acb2018d_RetType;
struct _1acb20897_Param;
struct _1acb221d4_Fn;
struct _1acb23eb6_ParamIns;
struct _1acb24d85_FnIns;
struct _1acb27cde_ReferenceStack;
struct _1acb29120_Pass;
struct _1acb2d861_symbolBuilder;
struct _1acb34405_Trait;
struct _1acb36193_EnumItem;
struct _1acb36b88_Enum;
struct _1acb37c00_TypeEnumItem;
struct _1acb38283_TypeEnum;
struct _1acb3a3d9_comptimeRange;
struct _1acb3adce_comptimeStructField;
struct _1acb3c908_comptimeStructFields;
struct _1acb3ddd2_comptimeStatic;
struct _1acb40994_comptimeStatics;
struct _1acb41dd5_comptimeEnumField;
struct _1acb43106_comptimeEnumFields;
struct _1acb44657_comptimeParam;
struct _1acb46703_comptimeParams;
struct _1acb47bbb_comptimeTypeInfos;
struct _1acb49184_comptimeTypeInfo;
struct _1acb4eb7e_comptimeValue;
struct _1acb5227a_comptimeFiles;
struct _1acb53743_comptimeFile;
struct _1acb5759e_constraintChecker;
struct _1abcb7831_Impl;
struct _1abcbc935_Scope;
struct _1abcbcd31_If;
struct _1abcbd11c_Else;
struct _1abcbd491_Conditional;
struct _1abcbd77c_InfIter;
struct _1abcbdc00_WhileIter;
struct _1abcbe5d5_RangeIter;
struct _1abcbe9d1_ContSt;
struct _1abcbed88_BreakSt;
struct _1abcc0174_Label;
struct _1abcc0460_GotoSt;
struct _1abcc0817_Postfix;
struct _1abcc0c8a_Assign;
struct _1abcc1142_MultiAssign;
struct _1abcc174c_Match;
struct _1abcc2297_Case;
struct _1abcc286e_FallSt;
struct _1abcc2bc1_RetSt;
struct _1abcc32cb_scopeLabel;
struct _1abcc374e_scopeGoto;
struct _1abcc4563_scopeChecker;
struct _1abcd52bb_directiveChecker;
struct _1abcdb39e_ImportInfo;
struct _1abcdded9_Package;
struct _1abce3b59_commonSemaMeta;
struct _1abce4671_Sema;
struct _1abd11726_missingRetChecker;
struct _1abd13937_IterRelation;
struct _1abd1497c_Var;
struct _1abd1572a_FuncPattern;
struct _1abd476b3_typeCompatibilityChecker;
struct _1abd492db_assignTypeChecker;
struct _1abd4acc1_dynamicTypeAnnotation;
struct _1abd506bb_fnCallArgChecker;
struct _1abd53092_structLitChecker;
struct _1abd54b76_rangeChecker;
struct _1abd57173_retTypeChecker;
struct _1abd59241_SymbolTable;
struct _1abd5dc4b_Data;
struct _1abd5ecc4_Value;
struct _1acc78e73_Eval;
struct _1acc95e07_unaryEval;
struct _1acc97bd9_binaryEval;
struct _1acca3420_InsGeneric;
struct _1acca3e59_TypeAlias;
struct _1acca4ba2_TypeKind;
struct _1accaba55_TypeSymbol;
struct _1accac407_Prim;
struct _1accb0b58_Sptr;
struct _1accb15b5_Slc;
struct _1accb21ba_Tuple;
struct _1accb2b6b_Map;
struct _1accb3760_Arr;
struct _1accb41bc_Ptr;
struct _1accb5113_referencer;
struct _1accb5ee3_typeChecker;
struct _1accbd3d5_identTypeLookup;
struct _1a3d9ceb3_FileInfo;
struct _1a3de5538_stmt;
struct _1a3de5d63_scopeParser;
struct _1a3e02347_exprBuilder;
struct _1a3e0db7d_assignInfo;
struct _1a3e12577_parser;
struct _1a3e2329c_typeBuilder;
struct _1ace622c1_CompileInfo;
struct _1ace63624_directiveEval;
struct _1a3e27290_JuleImporter;
struct _1a3e2c042_OrderedDefines;
struct _1a3e2c2a6_defineOrderer;
struct _1a4024b95_liveTable;
struct _1a405a934_scopeDeadCode;
struct _1a405e88e_exprDeadCode;
struct _1acd78e1e_StrCompExprModel;
struct _1acd792d7_StrAppendExprModel;
struct _1acd795c3_UnsafeBinopExprModel;
struct _1acd79958_UnsafeIndexingExprModel;
struct _1acd79cdd_PushToSliceExprModel;
struct _1acd7a195_AppendToSliceExprModel;
struct _1acd7a6d4_MutSlicingExprModel;
struct _1acd7abbd_StrInsertBeginExprModel;
struct _1acd7bcbd_scopeOptimizer;
struct _1acd826b9_exprOptimizer;
struct _1a4066654_Optimizer;
struct _1a4088ac7_AnsiEscape;
struct _1a408a15b_Logger;
struct _1a48ca528_AbsTime;
struct _1a48cabbb_Time;
struct _1a482044b_scopeCoder;
struct _1a4828894_exprCoder;
struct _1a483d216_deriveCoder;
struct _1a483eaec_TestCoder;
struct _1a484213d_identCoder;
struct _1a48d33aa_SerializationInfo;
struct _1a48d3872_traitHash;
struct _1a48d3c29_traitCast;
struct _1a48e2d04_customType;
struct _1a48e3772_typeCoder;
struct _1a48eb33a_resultCoder;
struct _1a736e7a0_Flag;
struct _1a7373232_Flag;
struct _1a73768d9_Flag;
struct _1a737a0d5_Flag;
struct _1a737d78c_Flag;
struct _1a495783b_FlagSet;
struct _1a495a047_argParser;
struct _1a48d4c4c_ObjectCoder;
struct _1a402505d_ObjectDeadCode;
struct _1a3e29a01_IR;
struct _1acb09d37_StructIns;
struct _2094cac94_Cmd;
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1abd5dc4b_Data__jule_tuple_x_1abd5dc4b_Data {
	jule::Ptr<_1abd5dc4b_Data> __jule_result_arg0;
	jule::Ptr<_1abd5dc4b_Data> __jule_result_arg1;
};
struct __jule_tuple_x_1acaed6bb_Case__jule_tuple_bool {
	jule::Ptr<_1acaed6bb_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1acaed6bb_Case__jule_tuple_x_1acaec5ee_Else {
	jule::Slice<jule::Ptr<_1acaed6bb_Case>> __jule_result_arg0;
	jule::Ptr<_1acaec5ee_Else> __jule_result_arg1;
};
struct __jule_tuple__1acae65c6_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1acae5916_AssignSt__jule_tuple_bool {
	jule::Ptr<_1acae5916_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1acad72cb_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1acad72cb_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1acada048_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1acada048_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1acaa352d_Ast__jule_tuple_s_20943da3c_Log {
	jule::Slice<jule::Ptr<_1acaa352d_Ast>> __jule_result_arg0;
	jule::Slice<_20943da3c_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_20943da3c_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_20943da3c_Log> __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a3e29a01_IR__jule_tuple_s_20943da3c_Log {
	jule::Ptr<_1a3e29a01_IR> __jule_result_arg0;
	jule::Slice<_20943da3c_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_i32 {
	jule::I32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__216a5d88b_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I64 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__216a5d88b_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__216a5d88b_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__216a5d88b_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I64 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1abd59241_SymbolTable__jule_tuple_s_20943da3c_Log {
	jule::Ptr<_1abd59241_SymbolTable> __jule_result_arg0;
	jule::Slice<_20943da3c_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1abcdded9_Package__jule_tuple_s_20943da3c_Log {
	jule::Ptr<_1abcdded9_Package> __jule_result_arg0;
	jule::Slice<_20943da3c_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1acaa352d_Ast__jule_tuple_s_20943da3c_Log {
	jule::Ptr<_1acaa352d_Ast> __jule_result_arg0;
	jule::Slice<_20943da3c_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_2097d15d8_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_2097d15d8_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_2097d15d8_Token__jule_tuple_sx_2097d15d8_Token {
	jule::Slice<jule::Ptr<_2097d15d8_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_2097d15d8_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_2097d15d8_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_2097d15d8_Token>> __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_ssx_2097d15d8_Token__jule_tuple_s_20943da3c_Log {
	jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>> __jule_result_arg0;
	jule::Slice<_20943da3c_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct _208395e29_acceptRange {
	jule::U8 _field_lo = 0;
	jule::U8 _field_hi = 0;
	

	inline bool operator==(_208395e29_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_208395e29_acceptRange _other) { return !this->operator==(_other); }


};
struct _2093657bb_Range16 {
	jule::U16 _field_Lo = 0;
	jule::U16 _field_Hi = 0;
	jule::U16 _field_Stride = 0;
	

	inline bool operator==(_2093657bb_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_2093657bb_Range16 _other) { return !this->operator==(_other); }


};
struct _209365c3e_Range32 {
	jule::U32 _field_Lo = 0;
	jule::U32 _field_Hi = 0;
	jule::U32 _field_Stride = 0;
	

	inline bool operator==(_209365c3e_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_209365c3e_Range32 _other) { return !this->operator==(_other); }


};
struct _2093661b2_RangeTable {
	jule::Slice<_2093657bb_Range16> _field_R16;
	jule::Slice<_209365c3e_Range32> _field_R32;
	jule::I64 _field_LatinOffset = 0;
	


};
inline jule::U8 _2093a690b_index(_2093a64cc_lazyBuff*, jule::I64);
inline void _2093a6b81_append(_2093a64cc_lazyBuff*, jule::U8);
inline jule::Str _2093a6de5_string(_2093a64cc_lazyBuff*);
struct _2093a64cc_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I64 _field_w = 0;
	jule::Str _field_volAndPath;
	jule::I64 _field_volLen = 0;
	


};
struct _2082a94ad_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_2082b8830_Status> _field_Stat;
	

	inline bool operator==(_2082a94ad_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_2082a94ad_DirEntry _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Slice<jule::Ptr<_2082a94ad_DirEntry>>> static__2093a8e80_Read(jule::Str);
inline jule::VoidExceptional static__2093a918e_Create(jule::Str);
inline jule::VoidExceptional static__2093a939d_Remove(jule::Str);
struct _2082a9722_Directory {
	

	inline bool operator==(_2082a9722_Directory _other) { return true; }

	inline bool operator!=(_2082a9722_Directory _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_2082b61e0_File> static__2082b660d_New(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_2082b61e0_File>> static__2082b68a5_Create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__2082b6b4c_Read(jule::Str);
inline jule::VoidExceptional static__2082b6e9e_Write(jule::Str, jule::Slice<jule::U8>, jule::I64);
inline jule::VoidExceptional static__2082b7301_WriteStr(jule::Str, jule::Str*, jule::I64);
inline jule::Exceptional<jule::I64> _2082b780c_Seek(_2082b61e0_File*, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _2082b7b1a_WriteStr(_2082b61e0_File*, jule::Str*);
inline jule::VoidExceptional _2082b7ce6_Close(_2082b61e0_File*);
inline jule::Exceptional<jule::Ptr<_2082b61e0_File>> static__2083998bc_Open(jule::Str, jule::I64, jule::I64);
inline jule::VoidExceptional static__208399acb_Remove(jule::Str);
inline jule::Exceptional<jule::I64> _20839a02c_Write(_2082b61e0_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _20839a33a_Read(_2082b61e0_File*, jule::Slice<jule::U8>);
struct _2082b61e0_File {
	jule::Uintptr _field_handle = 0;
	

	inline bool operator==(_2082b61e0_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_2082b61e0_File _other) { return !this->operator==(_other); }


};
inline jule::Bool _2082b8be8_IsDir(_2082b8830_Status*);
inline jule::Bool _2082b8e5c_IsReg(_2082b8830_Status*);
inline jule::U64 _2082b91c1_Size(_2082b8830_Status*);
inline jule::Exceptional<jule::Ptr<_2082b8830_Status>> static__2093a9c0b_Of(jule::Str);
struct _2082b8830_Status {
	jule::I64 _field_mode = 0LL;
	jule::U64 _field_size = 0;
	

	inline bool operator==(_2082b8830_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_2082b8830_Status _other) { return !this->operator==(_other); }


};
struct _2094cea78_cmdAttrs {
	HANDLE _field_hProcess = nullptr;
	HANDLE _field_hThread = nullptr;
	

	inline bool operator==(_2094cea78_cmdAttrs _other) {
		return 
			this->_field_hProcess == _other._field_hProcess &&
			this->_field_hThread == _other._field_hThread;
	}

	inline bool operator!=(_2094cea78_cmdAttrs _other) { return !this->operator==(_other); }


};
struct _20943da3c_Log {
	jule::I64 _field_Kind = 0LL;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

	inline bool operator==(_20943da3c_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_20943da3c_Log _other) { return !this->operator==(_other); }


};
inline jule::U8 _2097d194b_Prec(_2097d15d8_Token*);
struct _2097d15d8_Token {
	jule::Ptr<_2097d6973_File> _field_File;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Kind;
	jule::U64 _field_Id = 0LLU;
	

	inline bool operator==(_2097d15d8_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_2097d15d8_Token _other) { return !this->operator==(_other); }


};
inline void _2097d6d3b_Fill(_2097d6973_File*, jule::Slice<jule::U8>);
inline jule::Str _2097d70a0_Dir(_2097d6973_File*);
inline jule::Str _2097d7314_Name(_2097d6973_File*);
inline jule::Uintptr _2097d7578_Addr(_2097d6973_File*);
inline jule::Str _2097d7886_GetRow(_2097d6973_File*, jule::I64);
struct _2097d6973_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _field_Tokens;
	


};
struct _2097d8755_kindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U64 _field_id = 0LLU;
	

	inline bool operator==(_2097d8755_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_2097d8755_kindPair _other) { return !this->operator==(_other); }


};
inline void _2097de816_pushErr(_2097de2b6_lex*, jule::Str, jule::Slice<jule::Any>);
inline void _2097deb35_pushErrTok(_2097de2b6_lex*, jule::Ptr<_2097d15d8_Token>*, jule::Str);
inline void _2097ded11_lex(_2097de2b6_lex*);
inline jule::Str _2097e011e_id(_2097de2b6_lex*, jule::Slice<jule::U8>*);
inline jule::Slice<jule::U8> _2097e0383_resume(_2097de2b6_lex*);
inline void _2097e0608_lexLineComment(_2097de2b6_lex*, jule::Ptr<_2097d15d8_Token>*);
inline void _2097e087d_lexRangeComment(_2097de2b6_lex*, jule::Ptr<_2097d15d8_Token>*);
inline jule::Str _2097e0b8b_num(_2097de2b6_lex*, jule::Slice<jule::U8>*);
inline jule::Str _2097e0e99_escapeSeq(_2097de2b6_lex*, jule::Slice<jule::U8>*);
inline jule::Str _2097e1351_getRune(_2097de2b6_lex*, jule::Slice<jule::U8>*, jule::Bool);
inline jule::Str _2097e165e_lexRune(_2097de2b6_lex*, jule::Slice<jule::U8>*);
inline jule::Str _2097e18c3_lexStr(_2097de2b6_lex*);
inline jule::Bool _2097e1b37_isFirstTokenOfLine(_2097de2b6_lex*);
inline void _2097e1d13_newLine(_2097de2b6_lex*);
inline jule::Bool _2097e230d_isOp(_2097de2b6_lex*, jule::Slice<jule::U8>*, jule::Str, jule::U64, jule::Ptr<_2097d15d8_Token>*);
inline jule::Bool _2097e26b5_lexBasicOps(_2097de2b6_lex*, jule::Slice<jule::U8>, jule::Ptr<_2097d15d8_Token>*);
inline jule::Bool _2097e2a6c_lexId(_2097de2b6_lex*, jule::Slice<jule::U8>*, jule::Ptr<_2097d15d8_Token>*);
inline jule::Bool _2097e2e24_lexNum(_2097de2b6_lex*, jule::Slice<jule::U8>*, jule::Ptr<_2097d15d8_Token>*);
inline jule::Ptr<_2097d15d8_Token> _2097e3188_token(_2097de2b6_lex*);
struct _2097de2b6_lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _field_tokens;
	jule::Ptr<_2097d6973_File> _field_file;
	jule::I64 _field_pos = 0;
	jule::I64 _field_column = 0;
	jule::I64 _field_row = 0;
	jule::Slice<_20943da3c_Log> _field_errors;
	


};
struct _1dde8d4ec_floatInfo {
	jule::U64 _field_mantbits = 0;
	jule::U64 _field_expbits = 0;
	jule::I64 _field_bias = 0;
	

	inline bool operator==(_1dde8d4ec_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_1dde8d4ec_floatInfo _other) { return !this->operator==(_other); }


};
struct _1dde8de8c_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	


};
struct _1ddea02bc_leftCheat {
	jule::I64 _field_delta = 0;
	jule::Str _field_cutoff;
	

	inline bool operator==(_1ddea02bc_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_1ddea02bc_leftCheat _other) { return !this->operator==(_other); }


};
inline jule::Bool _1dde97cba_set(_1ddea0c90_decimal*, jule::Str);
inline __jule_tuple_u64__jule_tuple_bool _1dde980c8_floatBits(_1ddea0c90_decimal*, _1dde8d4ec_floatInfo*);
inline void _1ddea1125_assign(_1ddea0c90_decimal*, jule::U64);
inline void _1ddea139a_shift(_1ddea0c90_decimal*, jule::I64);
inline void _1ddea1620_roundDown(_1ddea0c90_decimal*, jule::I64);
inline void _1ddea1895_roundUp(_1ddea0c90_decimal*, jule::I64);
inline void _1ddea1b1a_round(_1ddea0c90_decimal*, jule::I64);
inline jule::U64 _1ddea1d7e_roundedInteger(_1ddea0c90_decimal*);
struct _1ddea0c90_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>(0);
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	jule::Bool _field_trunc = false;
	

	inline bool operator==(_1ddea0c90_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_1ddea0c90_decimal _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ddeb4b1c_Const> static__1ddeb504b_NewI64(jule::I64);
inline jule::Ptr<_1ddeb4b1c_Const> static__1ddeb52e3_NewU64(jule::U64);
inline jule::Ptr<_1ddeb4b1c_Const> static__1ddeb558a_NewBool(jule::Bool);
inline jule::Ptr<_1ddeb4b1c_Const> static__1ddeb5832_NewStr(jule::Str);
inline jule::Ptr<_1ddeb4b1c_Const> static__1ddeb5ac9_NewF64(jule::F64);
inline jule::Ptr<_1ddeb4b1c_Const> static__1ddeb5cc7_NewNil(void);
inline jule::I64 _1ddeb6415_ReadI64(_1ddeb4b1c_Const*);
inline jule::U64 _1ddeb6679_ReadU64(_1ddeb4b1c_Const*);
inline jule::Bool _1ddeb68dd_ReadBool(_1ddeb4b1c_Const*);
inline jule::Str _1ddeb6b52_ReadStr(_1ddeb4b1c_Const*);
inline jule::F64 _1ddeb6db6_ReadF64(_1ddeb4b1c_Const*);
inline jule::I64 _1ddeb712a_AsI64(_1ddeb4b1c_Const*);
inline jule::U64 _1ddeb738e_AsU64(_1ddeb4b1c_Const*);
inline jule::F64 _1ddeb7603_AsF64(_1ddeb4b1c_Const*);
inline void _1ddeb7878_SetI64(_1ddeb4b1c_Const*, jule::I64);
inline void _1ddeb7aed_SetU64(_1ddeb4b1c_Const*, jule::U64);
inline void _1ddeb7d73_SetBool(_1ddeb4b1c_Const*, jule::Bool);
inline void _1ddeb80e8_SetStr(_1ddeb4b1c_Const*, jule::Str);
inline void _1ddeb836d_SetF64(_1ddeb4b1c_Const*, jule::F64);
inline void _1ddeb8549_SetNil(_1ddeb4b1c_Const*);
inline jule::Bool _1ddeb87ad_IsI64(_1ddeb4b1c_Const*);
inline jule::Bool _1ddeb8a22_IsU64(_1ddeb4b1c_Const*);
inline jule::Bool _1ddeb8c86_IsBool(_1ddeb4b1c_Const*);
inline jule::Bool _1ddeb8eea_IsStr(_1ddeb4b1c_Const*);
inline jule::Bool _1ddeb925e_IsF64(_1ddeb4b1c_Const*);
inline jule::Bool _1ddeb94c3_IsNil(_1ddeb4b1c_Const*);
inline jule::Bool _1ddeb97d1_AreSameTypes(_1ddeb4b1c_Const*, _1ddeb4b1c_Const);
inline jule::Bool _1ddeb9ade_And(_1ddeb4b1c_Const*, _1ddeb4b1c_Const);
inline jule::Bool _1ddeb9dec_Or(_1ddeb4b1c_Const*, _1ddeb4b1c_Const);
inline jule::Bool _1ddeba20a_Eq(_1ddeb4b1c_Const*, _1ddeb4b1c_Const);
inline jule::Bool _1ddeba518_Lt(_1ddeb4b1c_Const*, _1ddeb4b1c_Const);
inline jule::Bool _1ddeba826_LtEq(_1ddeb4b1c_Const*, _1ddeb4b1c_Const);
inline jule::Bool _1ddebab34_Gt(_1ddeb4b1c_Const*, _1ddeb4b1c_Const);
inline jule::Bool _1ddebae42_GtEq(_1ddeb4b1c_Const*, _1ddeb4b1c_Const);
inline jule::Bool _1ddebb250_Add(_1ddeb4b1c_Const*, _1ddeb4b1c_Const);
inline jule::Bool _1ddebb55d_Sub(_1ddeb4b1c_Const*, _1ddeb4b1c_Const);
inline jule::Bool _1ddebb86b_Mul(_1ddeb4b1c_Const*, _1ddeb4b1c_Const);
inline jule::Bool _1ddebbb79_Div(_1ddeb4b1c_Const*, _1ddeb4b1c_Const);
inline jule::Bool _1ddebbe87_Mod(_1ddeb4b1c_Const*, _1ddeb4b1c_Const);
inline jule::Bool _1ddebc295_BitwiseAnd(_1ddeb4b1c_Const*, _1ddeb4b1c_Const);
inline jule::Bool _1ddebc5a3_BitwiseOr(_1ddeb4b1c_Const*, _1ddeb4b1c_Const);
inline jule::Bool _1ddebc8b1_Xor(_1ddeb4b1c_Const*, _1ddeb4b1c_Const);
inline jule::Bool _1ddebcbbe_Lshift(_1ddeb4b1c_Const*, _1ddeb4b1c_Const);
inline jule::Bool _1ddebcecc_Rshift(_1ddeb4b1c_Const*, _1ddeb4b1c_Const);
struct _1ddeb4b1c_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

	inline jule::Bool operator==(_1ddeb4b1c_Const _other) { return _1ddeba20a_Eq(this, _other); }

	inline bool operator!=(_1ddeb4b1c_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_1ddeb4b1c_Const _other) { return _1ddebab34_Gt(this, _other); }

	inline jule::Bool operator>=(_1ddeb4b1c_Const _other) { return _1ddebae42_GtEq(this, _other); }

	inline jule::Bool operator<(_1ddeb4b1c_Const _other) { return _1ddeba518_Lt(this, _other); }

	inline jule::Bool operator<=(_1ddeb4b1c_Const _other) { return _1ddeba826_LtEq(this, _other); }


};
struct _1acaa352d_Ast {
	jule::Ptr<_2097d6973_File> _field_File;
	jule::Slice<jule::Ptr<_1acaa47b5_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1acaee634_UseDecl>> _field_UseDecls;
	jule::Slice<_1acaa43b9_Node> _field_Nodes;
	


};
struct _1acaa43b9_Node {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_1acaa43b9_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1acaa43b9_Node _other) { return !this->operator==(_other); }


};
struct _1acaa47b5_Directive {
	jule::Ptr<_2097d15d8_Token> _field_Tag;
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _field_Args;
	


};
struct _1acad72cb_TypeDecl {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_1acad72cb_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1acad72cb_TypeDecl _other) { return !this->operator==(_other); }


};
struct _1acad7892_IdentTypeDecl {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1acad72cb_TypeDecl>> _field_Generics;
	


};
struct _1acad7b7d_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1acad7892_IdentTypeDecl>> _field_Idents;
	


};
struct _1acad8002_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _field_Idents;
	jule::Ptr<_1acad72cb_TypeDecl> _field_Kind;
	


};
struct _1acad82dd_SptrTypeDecl {
	jule::Ptr<_1acad72cb_TypeDecl> _field_Elem;
	

	inline bool operator==(_1acad82dd_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1acad82dd_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1acad86d9_SlcTypeDecl {
	jule::Ptr<_1acad72cb_TypeDecl> _field_Elem;
	

	inline bool operator==(_1acad86d9_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1acad86d9_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1acad89c5_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1acad72cb_TypeDecl>> _field_Types;
	


};
inline jule::Bool _1acad9113_IsUnsafe(_1acad8cb1_PtrTypeDecl*);
struct _1acad8cb1_PtrTypeDecl {
	jule::Ptr<_1acad72cb_TypeDecl> _field_Elem;
	

	inline bool operator==(_1acad8cb1_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1acad8cb1_PtrTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1acad97d9_AutoSized(_1acad9487_ArrTypeDecl*);
struct _1acad9487_ArrTypeDecl {
	jule::Ptr<_1acad72cb_TypeDecl> _field_Elem;
	jule::Ptr<_1acadb456_Expr> _field_Size;
	

	inline bool operator==(_1acad9487_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_1acad9487_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1acad9b91_MapTypeDecl {
	jule::Ptr<_1acad72cb_TypeDecl> _field_Key;
	jule::Ptr<_1acad72cb_TypeDecl> _field_Val;
	

	inline bool operator==(_1acad9b91_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1acad9b91_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1acada048_RetTypeDecl {
	jule::Ptr<_1acad72cb_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _field_Idents;
	


};
struct _1acadb456_Expr {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Ptr<_2097d15d8_Token> _field_End;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_1acadb456_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1acadb456_Expr _other) { return !this->operator==(_other); }


};
struct _1acadb742_RangeExpr {
	jule::Ptr<_1acadb456_Expr> _field_Expr;
	

	inline bool operator==(_1acadb742_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1acadb742_RangeExpr _other) { return !this->operator==(_other); }


};
struct _1acadbce7_UseExpr {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Ptr<_1acadb456_Expr> _field_Expr;
	

	inline bool operator==(_1acadbce7_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1acadbce7_UseExpr _other) { return !this->operator==(_other); }


};
struct _1acadc0d3_TupleExpr {
	jule::Slice<jule::Ptr<_1acadb456_Expr>> _field_Expr;
	


};
inline jule::Bool _1acadc7dc_IsNil(_1acadc48a_LitExpr*);
struct _1acadc48a_LitExpr {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Str _field_Value;
	

	inline bool operator==(_1acadc48a_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1acadc48a_LitExpr _other) { return !this->operator==(_other); }


};
struct _1acadcac8_UnsafeExpr {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Ptr<_1acadb456_Expr> _field_Expr;
	

	inline bool operator==(_1acadcac8_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1acadcac8_UnsafeExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1acadd39d_IsSelf(_1acadd04b_IdentExpr*);
struct _1acadd04b_IdentExpr {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	

	inline bool operator==(_1acadd04b_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Binded == _other._field_Binded;
	}

	inline bool operator!=(_1acadd04b_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1acadd755_UnaryExpr {
	jule::Ptr<_2097d15d8_Token> _field_Op;
	jule::Ptr<_1acadb456_Expr> _field_Expr;
	

	inline bool operator==(_1acadd755_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1acadd755_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1acaddb0c_VariadicExpr {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Ptr<_1acadb456_Expr> _field_Expr;
	

	inline bool operator==(_1acaddb0c_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1acaddb0c_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1acaddeb4_CastExpr {
	jule::Ptr<_1acad72cb_TypeDecl> _field_Kind;
	jule::Ptr<_1acadb456_Expr> _field_Expr;
	

	inline bool operator==(_1acaddeb4_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1acaddeb4_CastExpr _other) { return !this->operator==(_other); }


};
struct _1acade36b_NsSelectionExpr {
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _field_Ns;
	jule::Ptr<_2097d15d8_Token> _field_Ident;
	


};
struct _1acade7de_SubIdentExpr {
	jule::Bool _field_IsSelf = false;
	jule::Ptr<_1acadb456_Expr> _field_Expr;
	jule::Ptr<_2097d15d8_Token> _field_Ident;
	

	inline bool operator==(_1acade7de_SubIdentExpr _other) {
		return 
			this->_field_IsSelf == _other._field_IsSelf &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1acade7de_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1acadec62_BinopExpr {
	jule::Ptr<_1acadb456_Expr> _field_Left;
	jule::Ptr<_1acadb456_Expr> _field_Right;
	jule::Ptr<_2097d15d8_Token> _field_Op;
	

	inline bool operator==(_1acadec62_BinopExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1acadec62_BinopExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1acae06d0_Unhandled(_1acae036c_FnCallExpr*);
inline jule::Bool _1acae0944_Ignored(_1acae036c_FnCallExpr*);
struct _1acae036c_FnCallExpr {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Ptr<_1acadb456_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1acadb456_Expr>> _field_Args;
	jule::Ptr<_1acae6e12_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo = false;
	


};
inline jule::Bool _1acae114d_IsTargeted(_1acae0ceb_FieldExprPair*);
struct _1acae0ceb_FieldExprPair {
	jule::Ptr<_2097d15d8_Token> _field_Field;
	jule::Ptr<_1acadb456_Expr> _field_Expr;
	

	inline bool operator==(_1acae0ceb_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1acae0ceb_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1acae15c1_StructLit {
	jule::Ptr<_2097d15d8_Token> _field_End;
	jule::Ptr<_1acad72cb_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1acadb456_Expr>> _field_Exprs;
	


};
inline jule::Bool _1acae1d96_IsEmpty(_1acae1a44_BraceLit*);
struct _1acae1a44_BraceLit {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Ptr<_2097d15d8_Token> _field_End;
	jule::Slice<jule::Ptr<_1acadb456_Expr>> _field_Exprs;
	


};
struct _1acae2429_KeyValPair {
	jule::Ptr<_1acadb456_Expr> _field_Key;
	jule::Ptr<_1acadb456_Expr> _field_Val;
	jule::Ptr<_2097d15d8_Token> _field_Colon;
	

	inline bool operator==(_1acae2429_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_1acae2429_KeyValPair _other) { return !this->operator==(_other); }


};
inline jule::Bool _1acae2db9_IsEmpty(_1acae2a9a_SliceExpr*);
struct _1acae2a9a_SliceExpr {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Ptr<_2097d15d8_Token> _field_End;
	jule::Slice<jule::Ptr<_1acadb456_Expr>> _field_Exprs;
	


};
struct _1acae3408_IndexingExpr {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Ptr<_2097d15d8_Token> _field_End;
	jule::Ptr<_1acadb456_Expr> _field_Expr;
	jule::Ptr<_1acadb456_Expr> _field_Index;
	

	inline bool operator==(_1acae3408_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1acae3408_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1acae3a13_SlicingExpr {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Ptr<_2097d15d8_Token> _field_End;
	jule::Ptr<_1acadb456_Expr> _field_Expr;
	jule::Ptr<_1acadb456_Expr> _field_Start;
	jule::Ptr<_1acadb456_Expr> _field_To;
	

	inline bool operator==(_1acae3a13_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_1acae3a13_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1acae3cee_Constraint {
	jule::Slice<jule::Ptr<_1acad72cb_TypeDecl>> _field_Mask;
	


};
struct _1acae4272_GenericDecl {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1acae3cee_Constraint> _field_Constraint;
	

	inline bool operator==(_1acae4272_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_1acae4272_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1acae4629_LabelSt {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Str _field_Ident;
	

	inline bool operator==(_1acae4629_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1acae4629_LabelSt _other) { return !this->operator==(_other); }


};
struct _1acae49d1_GotoSt {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Ptr<_2097d15d8_Token> _field_Label;
	

	inline bool operator==(_1acae49d1_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1acae49d1_GotoSt _other) { return !this->operator==(_other); }


};
struct _1acae4cbc_FallSt {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	

	inline bool operator==(_1acae4cbc_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_1acae4cbc_FallSt _other) { return !this->operator==(_other); }


};
struct _1acae53c7_AssignLeft {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Str _field_Ident;
	jule::Ptr<_1acadb456_Expr> _field_Expr;
	

	inline bool operator==(_1acae53c7_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1acae53c7_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1acae5916_AssignSt {
	jule::Bool _field_Declarative = false;
	jule::Ptr<_2097d15d8_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1acae53c7_AssignLeft>> _field_Left;
	jule::Ptr<_1acadb456_Expr> _field_Right;
	


};
struct _1acae6807_Stmt {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_1acae6807_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1acae6807_Stmt _other) { return !this->operator==(_other); }


};
struct _1acae6e12_ScopeTree {
	jule::Ptr<_1acae6e12_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<_1acae6807_Stmt> _field_Stmts;
	jule::Ptr<_2097d15d8_Token> _field_End;
	


};
inline jule::Bool _1acae794b_IsSelf(_1acae75d8_ParamDecl*);
inline jule::Bool _1acae7bb0_IsRef(_1acae75d8_ParamDecl*);
struct _1acae75d8_ParamDecl {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1acad72cb_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_1acae75d8_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1acae75d8_ParamDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1acae8c5a_IsAnon(_1acae8908_FnDecl*);
struct _1acae8908_FnDecl {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1acaa47b5_Directive>> _field_Directives;
	jule::Ptr<_1acae6e12_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1acae4272_GenericDecl>> _field_Generics;
	jule::Ptr<_1acada048_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1acae75d8_ParamDecl>> _field_Params;
	


};
struct _1acae98d7_VarDecl {
	jule::Ptr<_1acae6e12_ScopeTree> _field_Scope;
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Slice<jule::Ptr<_1acaa47b5_Directive>> _field_Directives;
	jule::Ptr<_1acad72cb_TypeDecl> _field_Kind;
	jule::Ptr<_1acadb456_Expr> _field_Expr;
	


};
struct _1acae9c8e_RetSt {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Ptr<_1acadb456_Expr> _field_Expr;
	

	inline bool operator==(_1acae9c8e_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1acae9c8e_RetSt _other) { return !this->operator==(_other); }


};
inline jule::Bool _1acaea751_IsInf(_1acaea3ee_Iter*);
struct _1acaea3ee_Iter {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	jule::Ptr<_1acae6e12_ScopeTree> _field_Scope;
	

	inline bool operator==(_1acaea3ee_Iter _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1acaea3ee_Iter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1acaeb026_IsWhileNext(_1acaeabc4_WhileKind*);
struct _1acaeabc4_WhileKind {
	jule::Ptr<_1acadb456_Expr> _field_Expr;
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_2097d15d8_Token> _field_NextToken;
	

	inline bool operator==(_1acaeabc4_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_1acaeabc4_WhileKind _other) { return !this->operator==(_other); }


};
struct _1acaeb565_RangeKind {
	jule::Ptr<_2097d15d8_Token> _field_InToken;
	jule::Ptr<_1acadb456_Expr> _field_Expr;
	jule::Ptr<_1acae98d7_VarDecl> _field_KeyA;
	jule::Ptr<_1acae98d7_VarDecl> _field_KeyB;
	

	inline bool operator==(_1acaeb565_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1acaeb565_RangeKind _other) { return !this->operator==(_other); }


};
struct _1acaeb91c_BreakSt {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Ptr<_2097d15d8_Token> _field_Label;
	

	inline bool operator==(_1acaeb91c_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1acaeb91c_BreakSt _other) { return !this->operator==(_other); }


};
struct _1acaebcc4_ContSt {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Ptr<_2097d15d8_Token> _field_Label;
	

	inline bool operator==(_1acaebcc4_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1acaebcc4_ContSt _other) { return !this->operator==(_other); }


};
struct _1acaec247_If {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Ptr<_1acadb456_Expr> _field_Expr;
	jule::Ptr<_1acae6e12_ScopeTree> _field_Scope;
	

	inline bool operator==(_1acaec247_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1acaec247_If _other) { return !this->operator==(_other); }


};
struct _1acaec5ee_Else {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Ptr<_1acae6e12_ScopeTree> _field_Scope;
	

	inline bool operator==(_1acaec5ee_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1acaec5ee_Else _other) { return !this->operator==(_other); }


};
struct _1acaeca72_Conditional {
	jule::Ptr<_1acaec247_If> _field_Head;
	jule::Slice<jule::Ptr<_1acaec247_If>> _field_Tail;
	jule::Ptr<_1acaec5ee_Else> _field_Default;
	


};
struct _1acaed248_TypeAliasDecl {
	jule::Ptr<_1acae6e12_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1acad72cb_TypeDecl> _field_Kind;
	

	inline bool operator==(_1acaed248_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_Binded == _other._field_Binded &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1acaed248_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1acaed6bb_Case {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Ptr<_1acae6e12_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1acadb456_Expr>> _field_Exprs;
	


};
struct _1acaedd92_MatchCase {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Ptr<_2097d15d8_Token> _field_End;
	jule::Bool _field_TypeMatch = false;
	jule::Ptr<_1acadb456_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1acaed6bb_Case>> _field_Cases;
	jule::Ptr<_1acaec5ee_Else> _field_Default;
	


};
struct _1acaee634_UseDecl {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full = false;
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _field_Selected;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	


};
inline jule::Bool _1acaeee09_AutoExpr(_1acaeeaa7_EnumItemDecl*);
struct _1acaeeaa7_EnumItemDecl {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1acadb456_Expr> _field_Expr;
	

	inline bool operator==(_1acaeeaa7_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1acaeeaa7_EnumItemDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1acb00932_DefaultTyped(_1acb005d0_EnumDecl*);
struct _1acb005d0_EnumDecl {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1acad72cb_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1acaeeaa7_EnumItemDecl>> _field_Items;
	jule::Ptr<_2097d15d8_Token> _field_End;
	


};
struct _1acb00da5_TypeEnumItemDecl {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1acad72cb_TypeDecl> _field_Kind;
	

	inline bool operator==(_1acb00da5_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1acb00da5_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1acb014b0_TypeEnumDecl {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1acb00da5_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_2097d15d8_Token> _field_End;
	


};
struct _1acb01724_FieldDecl {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1acad72cb_TypeDecl> _field_Kind;
	jule::Ptr<_1acadb456_Expr> _field_Default;
	

	inline bool operator==(_1acb01724_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1acb01724_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1acb02071_StructDecl {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Ptr<_2097d15d8_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1acb01724_FieldDecl>> _field_Fields;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1acaa47b5_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1acae4272_GenericDecl>> _field_Generics;
	


};
struct _1acb02747_TraitDecl {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Ptr<_2097d15d8_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1acad72cb_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_1acae8908_FnDecl>> _field_Methods;
	


};
inline jule::Bool _1acb031b5_IsTraitImpl(_1acb02d52_Impl*);
inline jule::Bool _1acb03429_IsStructImpl(_1acb02d52_Impl*);
struct _1acb02d52_Impl {
	jule::Ptr<_2097d15d8_Token> _field_End;
	jule::Ptr<_1acad72cb_TypeDecl> _field_Base;
	jule::Ptr<_1acad72cb_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1acae8908_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1acae98d7_VarDecl>> _field_Statics;
	


};
inline jule::Ptr<_1acb09342_FieldIns> _1acb047b0_instance(jule::Ptr<_1acb0444c_Field>);
struct _1acb0444c_Field {
	jule::Ptr<_1acb07021_Struct> _field_Owner;
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1accaba55_TypeSymbol> _field_Kind;
	jule::Ptr<_1acadb456_Expr> _field_Default;
	

	inline bool operator==(_1acb0444c_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1acb0444c_Field _other) { return !this->operator==(_other); }


};
struct _1acb0620c_Operators {
	jule::Ptr<_1acb24d85_FnIns> _field_Eq;
	jule::Ptr<_1acb24d85_FnIns> _field_Gt;
	jule::Ptr<_1acb24d85_FnIns> _field_GtEq;
	jule::Ptr<_1acb24d85_FnIns> _field_Lt;
	jule::Ptr<_1acb24d85_FnIns> _field_LtEq;
	jule::Ptr<_1acb24d85_FnIns> _field_Shl;
	jule::Ptr<_1acb24d85_FnIns> _field_Shr;
	jule::Ptr<_1acb24d85_FnIns> _field_Add;
	jule::Ptr<_1acb24d85_FnIns> _field_Sub;
	jule::Ptr<_1acb24d85_FnIns> _field_Div;
	jule::Ptr<_1acb24d85_FnIns> _field_Mul;
	jule::Ptr<_1acb24d85_FnIns> _field_Mod;
	jule::Ptr<_1acb24d85_FnIns> _field_BitAnd;
	jule::Ptr<_1acb24d85_FnIns> _field_BitOr;
	jule::Ptr<_1acb24d85_FnIns> _field_BitXor;
	jule::Ptr<_1acb24d85_FnIns> _field_Neg;
	jule::Ptr<_1acb24d85_FnIns> _field_Pos;
	jule::Ptr<_1acb24d85_FnIns> _field_BitNot;
	jule::Ptr<_1acb24d85_FnIns> _field_AddAssign;
	jule::Ptr<_1acb24d85_FnIns> _field_SubAssign;
	jule::Ptr<_1acb24d85_FnIns> _field_DivAssign;
	jule::Ptr<_1acb24d85_FnIns> _field_MulAssign;
	jule::Ptr<_1acb24d85_FnIns> _field_ModAssign;
	jule::Ptr<_1acb24d85_FnIns> _field_ShlAssign;
	jule::Ptr<_1acb24d85_FnIns> _field_ShrAssign;
	jule::Ptr<_1acb24d85_FnIns> _field_BitOrAssign;
	jule::Ptr<_1acb24d85_FnIns> _field_BitAndAssign;
	jule::Ptr<_1acb24d85_FnIns> _field_BitXorAssign;
	

	inline bool operator==(_1acb0620c_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_1acb0620c_Operators _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1acb09d37_StructIns> _1acb07483_instance(jule::Ptr<_1acb07021_Struct>);
inline jule::Ptr<_1acb09d37_StructIns> _1acb0775d_appendInstance(_1acb07021_Struct*, jule::Ptr<_1acb09d37_StructIns>*);
inline jule::Ptr<_1acb221d4_Fn> _1acb07b15_FindMethod(_1acb07021_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_1abd1497c_Var> _1acb07e23_FindStatic(_1acb07021_Struct*, jule::Str);
inline jule::Ptr<_1acb0444c_Field> _1acb08231_FindField(_1acb07021_Struct*, jule::Str);
inline jule::Bool _1acb0853e_IsImplements(_1acb07021_Struct*, jule::Ptr<_1acb34405_Trait>);
inline jule::Bool _1acb0884c_IsDerives(_1acb07021_Struct*, jule::Str);
inline jule::Bool _1acb08b5a_IsUses(_1acb07021_Struct*, jule::Ptr<_1acb07021_Struct>);
inline jule::Bool _1acb08dbe_HasRefAccessible(_1acb07021_Struct*);
struct _1acb07021_Struct {
	jule::Ptr<_1abce4671_Sema> _field_sema;
	jule::Slice<jule::Ptr<_1acb07021_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1acb07021_Struct>> _field_Uses;
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1acb0444c_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1acb221d4_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1abd1497c_Var>> _field_Statics;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1acaa47b5_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1acae4272_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1acb34405_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1acb09d37_StructIns>> _field_Instances;
	


};
struct _1acb09342_FieldIns {
	jule::Ptr<_1acb0444c_Field> _field_Decl;
	jule::Ptr<_1acca4ba2_TypeKind> _field_Kind;
	jule::Ptr<_1abd5dc4b_Data> _field_Default;
	

	inline bool operator==(_1acb09342_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1acb09342_FieldIns _other) { return !this->operator==(_other); }


};
struct _1acb0dc3c_OperandExprModel {
	jule::Ptr<_1acca4ba2_TypeKind> _field_Kind;
	jule::Any _field_Model = jule::Any(nullptr);
	

	inline bool operator==(_1acb0dc3c_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_1acb0dc3c_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1acb0e204_BinopExprModel {
	jule::Ptr<_1acb0dc3c_OperandExprModel> _field_Left;
	jule::Ptr<_1acb0dc3c_OperandExprModel> _field_Right;
	jule::Ptr<_2097d15d8_Token> _field_Op;
	

	inline bool operator==(_1acb0e204_BinopExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1acb0e204_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _1acb0e5ab_UnaryExprModel {
	jule::Ptr<_1abd5dc4b_Data> _field_Expr;
	jule::Ptr<_2097d15d8_Token> _field_Op;
	

	inline bool operator==(_1acb0e5ab_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1acb0e5ab_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1acb0e9a7_StructArgExprModel {
	jule::Ptr<_1acb09342_FieldIns> _field_Field;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1acb0e9a7_StructArgExprModel _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1acb0e9a7_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1acb0ed5e_StructLitExprModel {
	jule::Ptr<_1acb09d37_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1acb0e9a7_StructArgExprModel>> _field_Args;
	


};
struct _1acb1016c_AllocStructLitExprModel {
	jule::Ptr<_1acb0ed5e_StructLitExprModel> _field_Lit;
	

	inline bool operator==(_1acb1016c_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_1acb1016c_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1acb106bc_CastingExprModel {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1acca4ba2_TypeKind> _field_Kind;
	jule::Ptr<_1acca4ba2_TypeKind> _field_ExprKind;
	

	inline bool operator==(_1acb106bc_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_1acb106bc_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1acb1106e_FnCallExprModel {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Ptr<_1acb24d85_FnIns> _field_Func;
	jule::Bool _field_IsCo = false;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1abcbc935_Scope> _field_Except;
	jule::Bool _field_Assigned = false;
	


};
struct _1acb11426_SliceExprModel {
	jule::Ptr<_1acca4ba2_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _1acb11899_IndexingExprModel {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Ptr<_1abd5dc4b_Data> _field_Expr;
	jule::Ptr<_1abd5dc4b_Data> _field_Index;
	

	inline bool operator==(_1acb11899_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1acb11899_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1acb11c51_AnonFnExprModel {
	jule::Ptr<_1acb24d85_FnIns> _field_Func;
	jule::Bool _field_Global = false;
	

	inline bool operator==(_1acb11c51_AnonFnExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Global == _other._field_Global;
	}

	inline bool operator!=(_1acb11c51_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _1acb12108_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any(nullptr);
	jule::Any _field_Val = jule::Any(nullptr);
	

	inline bool operator==(_1acb12108_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1acb12108_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1acb1257b_MapExprModel {
	jule::Ptr<_1acca4ba2_TypeKind> _field_KeyKind;
	jule::Ptr<_1acca4ba2_TypeKind> _field_ValKind;
	jule::Slice<jule::Ptr<_1acb12108_KeyValPairExprModel>> _field_Entries;
	


};
struct _1acb12aba_SlicingExprModel {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_1acb12aba_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1acb12aba_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1acb13109_TraitSubIdentExprModel {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1acb221d4_Fn> _field_Method;
	jule::Ptr<_1acb34405_Trait> _field_Trt;
	

	inline bool operator==(_1acb13109_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_1acb13109_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1acb138e0_StructSubIdentExprModel {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Ptr<_1abd5dc4b_Data> _field_Expr;
	jule::Ptr<_1acb24d85_FnIns> _field_Method;
	jule::Ptr<_1acb09342_FieldIns> _field_Field;
	jule::Ptr<_1acb09d37_StructIns> _field_Owner;
	

	inline bool operator==(_1acb138e0_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field &&
			this->_field_Owner == _other._field_Owner;
	}

	inline bool operator!=(_1acb138e0_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1acb13c86_StructStaticIdentExprModel {
	jule::Ptr<_1acb09d37_StructIns> _field_Structure;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1acb24d85_FnIns> _field_Method;
	

	inline bool operator==(_1acb13c86_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_1acb13c86_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1acb1414e_ArrayExprModel {
	jule::Ptr<_1accb3760_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _1acb1443a_CommonIdentExprModel {
	jule::Str _field_Ident;
	

	inline bool operator==(_1acb1443a_CommonIdentExprModel _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1acb1443a_CommonIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1acb1499b_CommonSubIdentExprModel {
	jule::Ptr<_1acca4ba2_TypeKind> _field_ExprKind;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Str _field_Ident;
	

	inline bool operator==(_1acb1499b_CommonSubIdentExprModel _other) {
		return 
			this->_field_ExprKind == _other._field_ExprKind &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1acb1499b_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1acb14c98_TupleExprModel {
	jule::Slice<jule::Ptr<_1abd5dc4b_Data>> _field_Datas;
	


};
struct _1acb15172_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_1acb15172_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1acb15172_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1acb1555c_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_1acb1555c_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1acb1555c_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1acb1587b_BuiltinCloneCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1acb1587b_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1acb1587b_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _1acb15c66_BuiltinNewCallExprModel {
	jule::Ptr<_1acca4ba2_TypeKind> _field_Kind;
	jule::Any _field_Init = jule::Any(nullptr);
	

	inline bool operator==(_1acb15c66_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_1acb15c66_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1acb16151_BuiltinPanicCallExprModel {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1acb16151_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1acb16151_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1acb16607_BuiltinAssertCallExprModel {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Log;
	

	inline bool operator==(_1acb16607_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_1acb16607_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1acb16aad_BuiltinMakeCallExprModel {
	jule::Ptr<_1acca4ba2_TypeKind> _field_Kind;
	jule::Any _field_Len = jule::Any(nullptr);
	jule::Any _field_Cap = jule::Any(nullptr);
	

	inline bool operator==(_1acb16aad_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_1acb16aad_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1acb16e98_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Elements = jule::Any(nullptr);
	

	inline bool operator==(_1acb16e98_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_1acb16e98_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1acb172b7_BuiltinLenCallExprModel {
	jule::Ptr<_1abd5dc4b_Data> _field_Expr;
	

	inline bool operator==(_1acb172b7_BuiltinLenCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1acb172b7_BuiltinLenCallExprModel _other) { return !this->operator==(_other); }


};
struct _1acb175d6_BuiltinCapCallExprModel {
	jule::Ptr<_1abd5dc4b_Data> _field_Expr;
	

	inline bool operator==(_1acb175d6_BuiltinCapCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1acb175d6_BuiltinCapCallExprModel _other) { return !this->operator==(_other); }


};
struct _1acb1cb19_BuiltinDeleteCallExprModel {
	jule::Ptr<_1abd5dc4b_Data> _field_Dest;
	jule::Ptr<_1abd5dc4b_Data> _field_Key;
	

	inline bool operator==(_1acb1cb19_BuiltinDeleteCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Key == _other._field_Key;
	}

	inline bool operator!=(_1acb1cb19_BuiltinDeleteCallExprModel _other) { return !this->operator==(_other); }


};
struct _1acb1ce5a_BuiltinCopyCallExprModel {
	jule::Ptr<_1abd5dc4b_Data> _field_Dest;
	jule::Ptr<_1abd5dc4b_Data> _field_Src;
	

	inline bool operator==(_1acb1ce5a_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_1acb1ce5a_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _1acb1d345_BuiltinErrorCallExprModel {
	jule::Ptr<_1acb24d85_FnIns> _field_Func;
	jule::Ptr<_1abd5dc4b_Data> _field_Err;
	

	inline bool operator==(_1acb1d345_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_1acb1d345_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1acb1d642_SizeofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1acb1d642_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1acb1d642_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1acb1d92d_AlignofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1acb1d92d_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1acb1d92d_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1acb1dc19_RuneExprModel {
	jule::I32 _field_Code = 0;
	

	inline bool operator==(_1acb1dc19_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_1acb1dc19_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1acb1e027_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1acb1e027_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1acb1e027_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1acb1e3e0_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	


};
struct _1acb1e6cb_FreeExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1acb1e6cb_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1acb1e6cb_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1acb2018d_RetType {
	jule::Ptr<_1accaba55_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _field_Idents;
	


};
inline jule::Ptr<_1acb23eb6_ParamIns> _1acb20c1b_instance(jule::Ptr<_1acb20897_Param>);
inline jule::Bool _1acb20e80_IsSelf(_1acb20897_Param*);
inline jule::Bool _1acb211e4_IsRef(_1acb20897_Param*);
struct _1acb20897_Param {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1accaba55_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_1acb20897_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1acb20897_Param _other) { return !this->operator==(_other); }


};
inline jule::Bool _1acb22646_IsVoid(_1acb221d4_Fn*);
inline jule::Bool _1acb228aa_IsMethod(_1acb221d4_Fn*);
inline jule::Bool _1acb22b1e_IsEntryPoint(_1acb221d4_Fn*);
inline jule::Bool _1acb22d83_IsInit(_1acb221d4_Fn*);
inline jule::Bool _1acb230e7_IsAnon(_1acb221d4_Fn*);
inline jule::Bool _1acb2335b_AnyVar(_1acb221d4_Fn*);
inline jule::Ptr<_1acb24d85_FnIns> _1acb235c0_instanceForce(jule::Ptr<_1acb221d4_Fn>);
inline jule::Ptr<_1acb24d85_FnIns> _1acb23834_instance(jule::Ptr<_1acb221d4_Fn>);
inline jule::Ptr<_1acb24d85_FnIns> _1acb23b0e_appendInstance(_1acb221d4_Fn*, jule::Ptr<_1acb24d85_FnIns>*);
struct _1acb221d4_Fn {
	jule::Ptr<_1abce4671_Sema> _field_sema;
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1acaa47b5_Directive>> _field_Directives;
	jule::Ptr<_1acae6e12_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1acae4272_GenericDecl>> _field_Generics;
	jule::Ptr<_1acb2018d_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1acb20897_Param>> _field_Params;
	jule::Ptr<_1acb07021_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1acb24d85_FnIns>> _field_Instances;
	


};
inline jule::Str _1acb24318_Str(_1acb23eb6_ParamIns*);
struct _1acb23eb6_ParamIns {
	jule::Ptr<_1acb20897_Param> _field_Decl;
	jule::Ptr<_1acca4ba2_TypeKind> _field_Kind;
	

	inline bool operator==(_1acb23eb6_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1acb23eb6_ParamIns _other) { return !this->operator==(_other); }


};
inline jule::Str _1acb251b5_Str(_1acb24d85_FnIns*);
inline jule::Bool _1acb254c3_Equal(jule::Ptr<_1acb24d85_FnIns>, jule::Ptr<_1acca4ba2_TypeKind>);
inline jule::Bool _1acb25935_EqualFn(jule::Ptr<_1acb24d85_FnIns>, jule::Ptr<_1acb24d85_FnIns>*);
inline jule::Bool _1acb25c43_equalTrait(jule::Ptr<_1acb24d85_FnIns>, jule::Ptr<_1acb24d85_FnIns>*);
inline jule::Slice<jule::Ptr<_1acca4ba2_TypeKind>> _1acb25ea7_Types(_1acb24d85_FnIns*);
inline jule::Bool _1acb2621b_IsBuiltin(_1acb24d85_FnIns*);
inline jule::Bool _1acb26480_IsAnon(_1acb24d85_FnIns*);
inline jule::Bool _1acb2678d_Same(_1acb24d85_FnIns*, jule::Ptr<_1acb24d85_FnIns>);
inline jule::Str _1acb26a9b_GetKindStr(_1acb24d85_FnIns*, jule::Bool);
struct _1acb24d85_FnIns {
	jule::Ptr<_1acb09d37_StructIns> _field_Owner;
	jule::Ptr<_1acb221d4_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1acca3420_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1acb23eb6_ParamIns>> _field_Params;
	jule::Ptr<_1acca4ba2_TypeKind> _field_Result;
	jule::Ptr<_1abcbc935_Scope> _field_Scope;
	jule::Ptr<_1acb27cde_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon = false;
	jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)> _field_caller;
	jule::Bool _field_reloaded = false;
	


};
inline jule::Ptr<_1acb27cde_ReferenceStack> static__1acb27eed_new(void);
inline jule::I64 _1acb283c7_Len(_1acb27cde_ReferenceStack*);
inline jule::Any _1acb286d5_At(_1acb27cde_ReferenceStack*, jule::I64);
inline void _1acb2895a_Push(_1acb27cde_ReferenceStack*, jule::Any);
inline jule::Bool _1a63e78a1_Exist(_1acb27cde_ReferenceStack*, jule::Ptr<_1acb24d85_FnIns>);
inline jule::Bool _1a640ac5a_Exist(_1acb27cde_ReferenceStack*, jule::Ptr<_1abd1497c_Var>);
inline jule::Bool _1a6499d2c_Exist(_1acb27cde_ReferenceStack*, jule::Ptr<_1acb09d37_StructIns>);
inline jule::Bool _1a673841c_Exist(_1acb27cde_ReferenceStack*, jule::Ptr<_1acb34405_Trait>);
struct _1acb27cde_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	


};
struct _1acb29120_Pass {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Str _field_Text;
	

	inline bool operator==(_1acb29120_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_1acb29120_Pass _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1acb2d861_symbolBuilder> _1acb2dce5_getRoot(jule::Ptr<_1acb2d861_symbolBuilder>);
inline void _1acb2e18b_pushErr(_1acb2d861_symbolBuilder*, jule::Ptr<_2097d15d8_Token>*, jule::Str, jule::Slice<jule::Any>);
inline void _1acb2e554_pushErrText(_1acb2d861_symbolBuilder*, jule::Ptr<_2097d15d8_Token>*, jule::Str, jule::Slice<jule::Any>);
inline void _1acb2e873_pushSuggestion(_1acb2d861_symbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1acb2ec2a_checkCppUseDeclPath(_1acb2d861_symbolBuilder*, jule::Ptr<_1acaee634_UseDecl>*, jule::Str);
inline jule::Ptr<_1abcdb39e_ImportInfo> _1acb30005_buildCppHeaderImport(_1acb2d861_symbolBuilder*, jule::Ptr<_1acaee634_UseDecl>*);
inline jule::Ptr<_1abcdb39e_ImportInfo> _1acb30313_buildStdImport(_1acb2d861_symbolBuilder*, jule::Ptr<_1acaee634_UseDecl>*);
inline jule::Ptr<_1abcdb39e_ImportInfo> _1acb30621_buildIdentImport(jule::Ptr<_1acb2d861_symbolBuilder>, jule::Ptr<_1acaee634_UseDecl>*);
inline jule::Ptr<_1abcdb39e_ImportInfo> _1acb3092e_buildImport(jule::Ptr<_1acb2d861_symbolBuilder>, jule::Ptr<_1acaee634_UseDecl>*);
inline jule::Bool _1acb30c3c_checkDuplicateUseDecl(_1acb2d861_symbolBuilder*, jule::Ptr<_1abcdb39e_ImportInfo>*);
inline void _1acb3105b_implImportSelections(_1acb2d861_symbolBuilder*, jule::Ptr<_1abcdb39e_ImportInfo>*, jule::Ptr<_1acaee634_UseDecl>*);
inline jule::Str _1acb31369_getAsLinkPath(jule::Ptr<_1acb2d861_symbolBuilder>, jule::Str);
inline void _1acb31732_pushCycleError(jule::Ptr<_1acb2d861_symbolBuilder>, jule::Ptr<_1acb2d861_symbolBuilder>*, jule::Str, jule::Str*);
inline void _1acb31aea_pushCrossCycleError(jule::Ptr<_1acb2d861_symbolBuilder>, jule::Ptr<_1acb2d861_symbolBuilder>*, jule::Ptr<_1abcdb39e_ImportInfo>*, jule::Ptr<_2097d15d8_Token>*);
inline jule::Bool _1acb31ea2_checkImportCycles(jule::Ptr<_1acb2d861_symbolBuilder>, jule::Ptr<_1abcdb39e_ImportInfo>, jule::Ptr<_1acaee634_UseDecl>*);
inline void _1acb3238c_checkPackageAccessibility(_1acb2d861_symbolBuilder*, jule::Ptr<_1acaee634_UseDecl>*, jule::Str*, jule::Str*);
inline jule::Bool _1acb32755_importPackage(jule::Ptr<_1acb2d861_symbolBuilder>, jule::Ptr<_1abcdb39e_ImportInfo>*, jule::Ptr<_1acaee634_UseDecl>*);
inline jule::Ptr<_1abcdb39e_ImportInfo> _1acb32a63_importUseDecl(jule::Ptr<_1acb2d861_symbolBuilder>, jule::Ptr<_1acaee634_UseDecl>*);
inline void _1acb32c3e_importUseDecls(jule::Ptr<_1acb2d861_symbolBuilder>);
inline void _1acb32eb4_appendNode(_1acb2d861_symbolBuilder*, _1acaa43b9_Node*);
inline void _1acb33190_appendNodes(_1acb2d861_symbolBuilder*);
inline void _1acb33415_pushDirectivePass(_1acb2d861_symbolBuilder*, jule::Ptr<_1acaa47b5_Directive>*);
inline void _1acb335e1_appendTopDirectives(_1acb2d861_symbolBuilder*);
inline void _1acb337bc_build(jule::Ptr<_1acb2d861_symbolBuilder>);
struct _1acb2d861_symbolBuilder {
	jule::Ptr<_1acb2d861_symbolBuilder> _field_owner;
	jule::Trait<_1abcd86ed_Importer> _field_importer;
	jule::Slice<_20943da3c_Log> _field_errors;
	jule::Ptr<_1acaa352d_Ast> _field_ast;
	jule::Ptr<_1abd59241_SymbolTable> _field_table;
	


};
inline jule::Str _1acb347ac_Str(_1acb34405_Trait*);
inline jule::Bool _1acb34aba_Equal(jule::Ptr<_1acb34405_Trait>, jule::Ptr<_1acca4ba2_TypeKind>);
inline jule::Bool _1acb34e94_IsBuiltin(_1acb34405_Trait*);
inline jule::Ptr<_1acb221d4_Fn> _1acb352a2_FindMethod(_1acb34405_Trait*, jule::Str);
inline jule::Bool _1acb355b0_inherits(jule::Ptr<_1acb34405_Trait>, jule::Ptr<_1acb34405_Trait>*);
inline jule::Ptr<_1acb221d4_Fn> _1acb358bd_findMethodInherit(_1acb34405_Trait*, jule::Str*);
struct _1acb34405_Trait {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Slice<jule::Ptr<_1accaba55_TypeSymbol>> _field_Inherits;
	jule::Slice<jule::Ptr<_1acb221d4_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1acb07021_Struct>> _field_Implemented;
	


};
inline jule::Bool _1acb36539_AutoExpr(_1acb36193_EnumItem*);
struct _1acb36193_EnumItem {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1abd5ecc4_Value> _field_Value;
	

	inline bool operator==(_1acb36193_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1acb36193_EnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1acb36eeb_Str(_1acb36b88_Enum*);
inline jule::Bool _1acb37309_Equal(jule::Ptr<_1acb36b88_Enum>, jule::Ptr<_1acca4ba2_TypeKind>);
inline jule::Ptr<_1acb36193_EnumItem> _1acb37705_FindItem(_1acb36b88_Enum*, jule::Str);
struct _1acb36b88_Enum {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1accaba55_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1acb36193_EnumItem>> _field_Items;
	


};
struct _1acb37c00_TypeEnumItem {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1accaba55_TypeSymbol> _field_Kind;
	

	inline bool operator==(_1acb37c00_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1acb37c00_TypeEnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1acb385b3_Str(_1acb38283_TypeEnum*);
inline jule::Bool _1acb388c1_Equal(jule::Ptr<_1acb38283_TypeEnum>, jule::Ptr<_1acca4ba2_TypeKind>);
inline jule::Ptr<_1acb37c00_TypeEnumItem> _1acb38cbc_FindItem(_1acb38283_TypeEnum*, jule::Str);
struct _1acb38283_TypeEnum {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1acb37c00_TypeEnumItem>> _field_Items;
	


};
inline jule::Str _1acb3a791_Str(_1acb3a3d9_comptimeRange*);
inline jule::Bool _1acb3aa9e_Equal(jule::Ptr<_1acb3a3d9_comptimeRange>, jule::Ptr<_1acca4ba2_TypeKind>);
struct _1acb3a3d9_comptimeRange {
	jule::Trait<_1acb3a20d_comptimeRangeKind> _field_kind;
	

	inline bool operator==(_1acb3a3d9_comptimeRange _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1acb3a3d9_comptimeRange _other) { return !this->operator==(_other); }


};
inline jule::Str _1acb3b242_Str(_1acb3adce_comptimeStructField*);
inline jule::Bool _1acb3b550_Equal(jule::Ptr<_1acb3adce_comptimeStructField>, jule::Ptr<_1acca4ba2_TypeKind>);
inline jule::Ptr<_1abd5dc4b_Data> _1acb3ba28__Name(jule::Ptr<_1acb3adce_comptimeStructField>, jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acb3bdd0__Type(jule::Ptr<_1acb3adce_comptimeStructField>, jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acb3c287__Public(jule::Ptr<_1acb3adce_comptimeStructField>, jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acb3c595_subIdent(jule::Ptr<_1acb3adce_comptimeStructField>, jule::Str);
struct _1acb3adce_comptimeStructField {
	jule::Ptr<_1acb09342_FieldIns> _field_field;
	

	inline bool operator==(_1acb3adce_comptimeStructField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1acb3adce_comptimeStructField _other) { return !this->operator==(_other); }


};
inline jule::Str _1acb3cc7c_Str(_1acb3c908_comptimeStructFields*);
inline jule::Bool _1acb3d08a_Equal(jule::Ptr<_1acb3c908_comptimeStructFields>, jule::Ptr<_1acca4ba2_TypeKind>);
inline void _1acb3d4b9_ready(_1acb3c908_comptimeStructFields*, jule::Ptr<_1abd1497c_Var>*, jule::Ptr<_1abd1497c_Var>*);
inline void _1acb3d882_step(_1acb3c908_comptimeStructFields*, jule::I64, jule::Ptr<_1abd1497c_Var>*, jule::Ptr<_1abd1497c_Var>*);
inline jule::I64 _1acb3dae6_len(_1acb3c908_comptimeStructFields*);
struct _1acb3c908_comptimeStructFields {
	jule::Slice<jule::Ptr<_1acb09342_FieldIns>> _field_fields;
	


};
inline jule::Str _1acb3e245_Str(_1acb3ddd2_comptimeStatic*);
inline jule::Bool _1acb3e553_Equal(jule::Ptr<_1acb3ddd2_comptimeStatic>, jule::Ptr<_1acca4ba2_TypeKind>);
inline jule::Ptr<_1abd5dc4b_Data> _1acb3ea2b__Name(jule::Ptr<_1acb3ddd2_comptimeStatic>, jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acb3edd3__Type(jule::Ptr<_1acb3ddd2_comptimeStatic>, jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acb4028a__Public(jule::Ptr<_1acb3ddd2_comptimeStatic>, jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acb40598_subIdent(jule::Ptr<_1acb3ddd2_comptimeStatic>, jule::Str);
struct _1acb3ddd2_comptimeStatic {
	jule::Ptr<_1abd1497c_Var> _field_field;
	

	inline bool operator==(_1acb3ddd2_comptimeStatic _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1acb3ddd2_comptimeStatic _other) { return !this->operator==(_other); }


};
inline jule::Str _1acb40d07_Str(_1acb40994_comptimeStatics*);
inline jule::Bool _1acb41115_Equal(jule::Ptr<_1acb40994_comptimeStatics>, jule::Ptr<_1acca4ba2_TypeKind>);
inline void _1acb414bc_ready(_1acb40994_comptimeStatics*, jule::Ptr<_1abd1497c_Var>*, jule::Ptr<_1abd1497c_Var>*);
inline void _1acb41885_step(_1acb40994_comptimeStatics*, jule::I64, jule::Ptr<_1abd1497c_Var>*, jule::Ptr<_1abd1497c_Var>*);
inline jule::I64 _1acb41ae9_len(_1acb40994_comptimeStatics*);
struct _1acb40994_comptimeStatics {
	jule::Slice<jule::Ptr<_1abd1497c_Var>> _field_fields;
	


};
inline jule::Str _1acb42248_Str(_1acb41dd5_comptimeEnumField*);
inline jule::Bool _1acb42556_Equal(jule::Ptr<_1acb41dd5_comptimeEnumField>, jule::Ptr<_1acca4ba2_TypeKind>);
inline jule::Ptr<_1abd5dc4b_Data> _1acb42a0c__Name(jule::Ptr<_1acb41dd5_comptimeEnumField>, jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acb42d1a_subIdent(jule::Ptr<_1acb41dd5_comptimeEnumField>, jule::Str);
struct _1acb41dd5_comptimeEnumField {
	jule::Ptr<_1acb36193_EnumItem> _field_field;
	

	inline bool operator==(_1acb41dd5_comptimeEnumField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1acb41dd5_comptimeEnumField _other) { return !this->operator==(_other); }


};
inline jule::Str _1acb43579_Str(_1acb43106_comptimeEnumFields*);
inline jule::Bool _1acb43887_Equal(jule::Ptr<_1acb43106_comptimeEnumFields>, jule::Ptr<_1acca4ba2_TypeKind>);
inline void _1acb43c3e_ready(_1acb43106_comptimeEnumFields*, jule::Ptr<_1abd1497c_Var>*, jule::Ptr<_1abd1497c_Var>*);
inline void _1acb44107_step(_1acb43106_comptimeEnumFields*, jule::I64, jule::Ptr<_1abd1497c_Var>*, jule::Ptr<_1abd1497c_Var>*);
inline jule::I64 _1acb4436b_len(_1acb43106_comptimeEnumFields*);
struct _1acb43106_comptimeEnumFields {
	jule::Slice<jule::Ptr<_1acb36193_EnumItem>> _field_fields;
	


};
inline jule::Str _1acb449ba_Str(_1acb44657_comptimeParam*);
inline jule::Bool _1acb44cc8_Equal(jule::Ptr<_1acb44657_comptimeParam>, jule::Ptr<_1acca4ba2_TypeKind>);
inline jule::Ptr<_1abd5dc4b_Data> _1acb452b2__Name(jule::Ptr<_1acb44657_comptimeParam>, jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acb45669__Type(jule::Ptr<_1acb44657_comptimeParam>, jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acb45a21__Variadic(jule::Ptr<_1acb44657_comptimeParam>, jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acb45dc8__Reference(jule::Ptr<_1acb44657_comptimeParam>, jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acb461d6_subIdent(jule::Ptr<_1acb44657_comptimeParam>, jule::Str);
struct _1acb44657_comptimeParam {
	jule::Ptr<_1acb23eb6_ParamIns> _field_param;
	

	inline bool operator==(_1acb44657_comptimeParam _other) {
		return 
			this->_field_param == _other._field_param;
	}

	inline bool operator!=(_1acb44657_comptimeParam _other) { return !this->operator==(_other); }


};
inline jule::Str _1acb46a66_Str(_1acb46703_comptimeParams*);
inline jule::Bool _1acb46d74_Equal(jule::Ptr<_1acb46703_comptimeParams>, jule::Ptr<_1acca4ba2_TypeKind>);
inline void _1acb472a3_ready(_1acb46703_comptimeParams*, jule::Ptr<_1abd1497c_Var>*, jule::Ptr<_1abd1497c_Var>*);
inline void _1acb4766b_step(_1acb46703_comptimeParams*, jule::I64, jule::Ptr<_1abd1497c_Var>*, jule::Ptr<_1abd1497c_Var>*);
inline jule::I64 _1acb478d0_len(_1acb46703_comptimeParams*);
struct _1acb46703_comptimeParams {
	jule::Slice<jule::Ptr<_1acb23eb6_ParamIns>> _field_params;
	


};
inline jule::Str _1acb4802e_Str(_1acb47bbb_comptimeTypeInfos*);
inline jule::Bool _1acb4833c_Equal(jule::Ptr<_1acb47bbb_comptimeTypeInfos>, jule::Ptr<_1acca4ba2_TypeKind>);
inline void _1acb4876b_ready(_1acb47bbb_comptimeTypeInfos*, jule::Ptr<_1abd1497c_Var>*, jule::Ptr<_1abd1497c_Var>*);
inline void _1acb48b34_step(_1acb47bbb_comptimeTypeInfos*, jule::I64, jule::Ptr<_1abd1497c_Var>*, jule::Ptr<_1abd1497c_Var>*);
inline jule::I64 _1acb48d98_len(_1acb47bbb_comptimeTypeInfos*);
struct _1acb47bbb_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_1acb49184_comptimeTypeInfo>> _field_types;
	


};
inline jule::Str _1acb494e7_Str(_1acb49184_comptimeTypeInfo*);
inline jule::Bool _1acb49805_Equal(jule::Ptr<_1acb49184_comptimeTypeInfo>, jule::Ptr<_1acca4ba2_TypeKind>);
inline jule::Ptr<_1abd5dc4b_Data> _1acb49dee__Str(jule::Ptr<_1acb49184_comptimeTypeInfo>, jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acb4a2a6__Kind(jule::Ptr<_1acb49184_comptimeTypeInfo>, jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acb4a65d__Bits(jule::Ptr<_1acb49184_comptimeTypeInfo>, jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acb4aa15__Elem(jule::Ptr<_1acb49184_comptimeTypeInfo>, jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acb4adbc__Size(jule::Ptr<_1acb49184_comptimeTypeInfo>, jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acb4b274__Key(jule::Ptr<_1acb49184_comptimeTypeInfo>, jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acb4b62b__Value(jule::Ptr<_1acb49184_comptimeTypeInfo>, jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acb4b9d3__Fields(jule::Ptr<_1acb49184_comptimeTypeInfo>, jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acb4bd8a__Statics(jule::Ptr<_1acb49184_comptimeTypeInfo>, jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acb4c242__Public(jule::Ptr<_1acb49184_comptimeTypeInfo>, jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acb4c5e9__Binded(jule::Ptr<_1acb49184_comptimeTypeInfo>, jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acb4c9a1__Ordered(jule::Ptr<_1acb49184_comptimeTypeInfo>, jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acb4cd58__Comparable(jule::Ptr<_1acb49184_comptimeTypeInfo>, jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acb4d210__Mutable(jule::Ptr<_1acb49184_comptimeTypeInfo>, jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acb4d5b7__Types(jule::Ptr<_1acb49184_comptimeTypeInfo>, jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acb4d96e__Exceptional(jule::Ptr<_1acb49184_comptimeTypeInfo>, jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acb4dd26__CanNil(jule::Ptr<_1acb49184_comptimeTypeInfo>, jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acb4e1cd__Result(jule::Ptr<_1acb49184_comptimeTypeInfo>, jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acb4e585__Params(jule::Ptr<_1acb49184_comptimeTypeInfo>, jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acb4e893_subIdent(jule::Ptr<_1acb49184_comptimeTypeInfo>, jule::Str);
struct _1acb49184_comptimeTypeInfo {
	jule::Ptr<_1acca4ba2_TypeKind> _field_base;
	

	inline bool operator==(_1acb49184_comptimeTypeInfo _other) {
		return 
			this->_field_base == _other._field_base;
	}

	inline bool operator!=(_1acb49184_comptimeTypeInfo _other) { return !this->operator==(_other); }


};
inline jule::Str _1acb4eee2_Str(_1acb4eb7e_comptimeValue*);
inline jule::Bool _1acb50300_Equal(jule::Ptr<_1acb4eb7e_comptimeValue>, jule::Ptr<_1acca4ba2_TypeKind>);
inline jule::Ptr<_1abd5dc4b_Data> _1acb5080b__Unwrap(jule::Ptr<_1acb4eb7e_comptimeValue>, jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acb50bb3__Type(jule::Ptr<_1acb4eb7e_comptimeValue>, jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acb5106a__Lvalue(jule::Ptr<_1acb4eb7e_comptimeValue>, jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acb51422__Mutable(jule::Ptr<_1acb4eb7e_comptimeValue>, jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acb517c9__Const(jule::Ptr<_1acb4eb7e_comptimeValue>, jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acb51b81__Field(jule::Ptr<_1acb4eb7e_comptimeValue>, jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acb51e8e_subIdent(jule::Ptr<_1acb4eb7e_comptimeValue>, jule::Str);
struct _1acb4eb7e_comptimeValue {
	jule::Ptr<_1abd5dc4b_Data> _field_data;
	

	inline bool operator==(_1acb4eb7e_comptimeValue _other) {
		return 
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1acb4eb7e_comptimeValue _other) { return !this->operator==(_other); }


};
inline jule::Str _1acb525dd_Str(_1acb5227a_comptimeFiles*);
inline jule::Bool _1acb528eb_Equal(jule::Ptr<_1acb5227a_comptimeFiles>, jule::Ptr<_1acca4ba2_TypeKind>);
inline void _1acb52d2a_ready(_1acb5227a_comptimeFiles*, jule::Ptr<_1abd1497c_Var>*, jule::Ptr<_1abd1497c_Var>*);
inline void _1acb531e3_step(_1acb5227a_comptimeFiles*, jule::I64, jule::Ptr<_1abd1497c_Var>*, jule::Ptr<_1abd1497c_Var>*);
inline jule::I64 _1acb53457_len(_1acb5227a_comptimeFiles*);
struct _1acb5227a_comptimeFiles {
	jule::Slice<jule::Ptr<_1abd59241_SymbolTable>> _field_files;
	


};
inline jule::Str _1acb53aa6_Str(_1acb53743_comptimeFile*);
inline jule::Bool _1acb53db4_Equal(jule::Ptr<_1acb53743_comptimeFile>, jule::Ptr<_1acca4ba2_TypeKind>);
inline jule::Ptr<_1abd5dc4b_Data> _1acb5438c__Path(jule::Ptr<_1acb53743_comptimeFile>, jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acb54744__Name(jule::Ptr<_1acb53743_comptimeFile>, jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acb54aeb__Dir(jule::Ptr<_1acb53743_comptimeFile>, jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acb54e09_subIdent(jule::Ptr<_1acb53743_comptimeFile>, jule::Str);
struct _1acb53743_comptimeFile {
	jule::Ptr<_1abd59241_SymbolTable> _field_file;
	

	inline bool operator==(_1acb53743_comptimeFile _other) {
		return 
			this->_field_file == _other._field_file;
	}

	inline bool operator!=(_1acb53743_comptimeFile _other) { return !this->operator==(_other); }


};
inline jule::Fn<jule::Bool(jule::Ptr<_1abce4671_Sema>*,jule::Slice<jule::Ptr<_1acca3e59_TypeAlias>>*)> _1acb57989_readyFn(jule::Ptr<_1acb5759e_constraintChecker>);
inline jule::Bool _1acb57bed_readyFi(jule::Ptr<_1acb5759e_constraintChecker>);
inline jule::Bool _1acb57e62_readySi(jule::Ptr<_1acb5759e_constraintChecker>);
inline jule::Bool _1acb581c6_ready(jule::Ptr<_1acb5759e_constraintChecker>);
inline jule::Bool _1acb5843a_check(jule::Ptr<_1acb5759e_constraintChecker>);
struct _1acb5759e_constraintChecker {
	jule::Ptr<_1abce4671_Sema> _field_s;
	jule::Slice<jule::Ptr<_1acae4272_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1acca3420_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1acca3e59_TypeAlias>> _field_genericsA;
	jule::Ptr<_1acb24d85_FnIns> _field_fi;
	jule::Ptr<_1acb09d37_StructIns> _field_si;
	jule::Ptr<_2097d15d8_Token> _field_et;
	jule::Bool _field_uniq = false;
	


};
inline jule::Bool _1abcb7bd8_IsTraitImpl(_1abcb7831_Impl*);
inline jule::Bool _1abcb7e4c_IsStructImpl(_1abcb7831_Impl*);
struct _1abcb7831_Impl {
	jule::Ptr<_1acad72cb_TypeDecl> _field_Base;
	jule::Ptr<_1acad72cb_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1acb221d4_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1abd1497c_Var>> _field_Statics;
	


};
struct _1abcbc935_Scope {
	jule::Ptr<_1abcbc935_Scope> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<jule::Any> _field_Stmts;
	


};
struct _1abcbcd31_If {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1abcbc935_Scope> _field_Scope;
	

	inline bool operator==(_1abcbcd31_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1abcbcd31_If _other) { return !this->operator==(_other); }


};
struct _1abcbd11c_Else {
	jule::Ptr<_1abcbc935_Scope> _field_Scope;
	

	inline bool operator==(_1abcbd11c_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1abcbd11c_Else _other) { return !this->operator==(_other); }


};
struct _1abcbd491_Conditional {
	jule::Slice<jule::Ptr<_1abcbcd31_If>> _field_Elifs;
	jule::Ptr<_1abcbd11c_Else> _field_Default;
	


};
struct _1abcbd77c_InfIter {
	jule::Ptr<_1abcbc935_Scope> _field_Scope;
	

	inline bool operator==(_1abcbd77c_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1abcbd77c_InfIter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1abcbe052_IsWhileNext(_1abcbdc00_WhileIter*);
struct _1abcbdc00_WhileIter {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1abcbc935_Scope> _field_Scope;
	

	inline bool operator==(_1abcbdc00_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1abcbdc00_WhileIter _other) { return !this->operator==(_other); }


};
struct _1abcbe5d5_RangeIter {
	jule::Ptr<_1abd5dc4b_Data> _field_Expr;
	jule::Ptr<_1abcbc935_Scope> _field_Scope;
	jule::Ptr<_1abd1497c_Var> _field_KeyA;
	jule::Ptr<_1abd1497c_Var> _field_KeyB;
	

	inline bool operator==(_1abcbe5d5_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1abcbe5d5_RangeIter _other) { return !this->operator==(_other); }


};
struct _1abcbe9d1_ContSt {
	jule::Uintptr _field_It = 0;
	

	inline bool operator==(_1abcbe9d1_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_1abcbe9d1_ContSt _other) { return !this->operator==(_other); }


};
struct _1abcbed88_BreakSt {
	jule::Uintptr _field_It = 0;
	jule::Uintptr _field_Mtch = 0;
	

	inline bool operator==(_1abcbed88_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_1abcbed88_BreakSt _other) { return !this->operator==(_other); }


};
struct _1abcc0174_Label {
	jule::Str _field_Ident;
	

	inline bool operator==(_1abcc0174_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1abcc0174_Label _other) { return !this->operator==(_other); }


};
struct _1abcc0460_GotoSt {
	jule::Str _field_Ident;
	

	inline bool operator==(_1abcc0460_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1abcc0460_GotoSt _other) { return !this->operator==(_other); }


};
struct _1abcc0817_Postfix {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Op;
	

	inline bool operator==(_1abcc0817_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1abcc0817_Postfix _other) { return !this->operator==(_other); }


};
struct _1abcc0c8a_Assign {
	jule::Ptr<_1acb0dc3c_OperandExprModel> _field_L;
	jule::Ptr<_1acb0dc3c_OperandExprModel> _field_R;
	jule::Ptr<_2097d15d8_Token> _field_Op;
	

	inline bool operator==(_1abcc0c8a_Assign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1abcc0c8a_Assign _other) { return !this->operator==(_other); }


};
struct _1abcc1142_MultiAssign {
	jule::Slice<jule::Ptr<_1abd5dc4b_Data>> _field_L;
	jule::Any _field_R = jule::Any(nullptr);
	


};
inline jule::Bool _1abcc1c58_IsGenericTypeMatch(_1abcc174c_Match*);
struct _1abcc174c_Match {
	jule::Ptr<_1abd5dc4b_Data> _field_Expr;
	jule::Bool _field_TypeMatch = false;
	jule::Bool _field_Comptime = false;
	jule::Slice<jule::Ptr<_1abcc2297_Case>> _field_Cases;
	jule::Ptr<_1abcc2297_Case> _field_Default;
	


};
inline jule::Bool _1abcc25e9_isDefault(_1abcc2297_Case*);
struct _1abcc2297_Case {
	jule::Ptr<_1abcc174c_Match> _field_Owner;
	jule::Ptr<_1abcbc935_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1abd5dc4b_Data>> _field_Exprs;
	jule::Ptr<_1abcc2297_Case> _field_Next;
	


};
struct _1abcc286e_FallSt {
	jule::Uintptr _field_DestCase = 0;
	

	inline bool operator==(_1abcc286e_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_1abcc286e_FallSt _other) { return !this->operator==(_other); }


};
struct _1abcc2bc1_RetSt {
	jule::Ptr<_1acb24d85_FnIns> _field_Func;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1abcc2bc1_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1abcc2bc1_RetSt _other) { return !this->operator==(_other); }


};
struct _1abcc32cb_scopeLabel {
	jule::Ptr<_2097d15d8_Token> _field_token;
	jule::Ptr<_1abcc0174_Label> _field_label;
	jule::I64 _field_pos = 0;
	jule::Ptr<_1abcc4563_scopeChecker> _field_scope;
	jule::Bool _field_used = false;
	

	inline bool operator==(_1abcc32cb_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1abcc32cb_scopeLabel _other) { return !this->operator==(_other); }


};
struct _1abcc374e_scopeGoto {
	jule::Ptr<_1acae49d1_GotoSt> _field_gt;
	jule::Ptr<_1abcc4563_scopeChecker> _field_scope;
	jule::I64 _field_pos = 0;
	

	inline bool operator==(_1abcc374e_scopeGoto _other) {
		return 
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1abcc374e_scopeGoto _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1abcdb39e_ImportInfo> _1abcc49d6_SelectPackage(_1abcc4563_scopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_1abcdb39e_ImportInfo>)>);
inline jule::Ptr<_1abd1497c_Var> _1abcc4d8d_FindVar(_1abcc4563_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1acca3e59_TypeAlias> _1abcc5245_FindTypeAlias(_1abcc4563_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1acb07021_Struct> _1abcc55ec_FindStruct(_1abcc4563_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1acb221d4_Fn> _1abcc59a4_FindFn(_1abcc4563_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1acb34405_Trait> _1abcc5cb2_FindTrait(_1abcc4563_scopeChecker*, jule::Str);
inline jule::Ptr<_1acb36b88_Enum> _1abcc60c0_FindEnum(_1abcc4563_scopeChecker*, jule::Str);
inline jule::Ptr<_1acb38283_TypeEnum> _1abcc63cd_FindTypeEnum(_1abcc4563_scopeChecker*, jule::Str);
inline jule::Bool _1abcc670d_isUnsafe(jule::Ptr<_1abcc4563_scopeChecker>);
inline jule::Bool _1abcc6972_isRoot(_1abcc4563_scopeChecker*);
inline void _1abcc6b4d_stop(_1abcc4563_scopeChecker*);
inline jule::Bool _1abcc6db2_stopped(_1abcc4563_scopeChecker*);
inline jule::Bool _1abcc7126_isDeferred(jule::Ptr<_1abcc4563_scopeChecker>);
inline jule::Ptr<_1abcc4563_scopeChecker> _1abcc738a_getRoot(jule::Ptr<_1abcc4563_scopeChecker>);
inline jule::Ptr<_1abcc4563_scopeChecker> _1abcc75ee_getHardRoot(jule::Ptr<_1abcc4563_scopeChecker>);
inline jule::Ptr<_1abcc0174_Label> _1abcc790c_findLabel(_1abcc4563_scopeChecker*, jule::Str);
inline jule::Ptr<_1abcc32cb_scopeLabel> _1abcc7c1a_findLabelScope(jule::Ptr<_1abcc4563_scopeChecker>, jule::Str);
inline jule::Ptr<_1abcc32cb_scopeLabel> _1abcc8028_findLabelAll(_1abcc4563_scopeChecker*, jule::Str);
inline jule::Bool _1abcc83d0_isDuplicatedIdent(_1abcc4563_scopeChecker*, jule::Uintptr, jule::Str);
inline void _1abcc8655_checkVarDecl(jule::Ptr<_1abcc4563_scopeChecker>, jule::Ptr<_1acae98d7_VarDecl>);
inline void _1abcc88ca_checkTypeAliasDecl(jule::Ptr<_1abcc4563_scopeChecker>, jule::Ptr<_1acaed248_TypeAliasDecl>);
inline jule::Ptr<_1abcbc935_Scope> _1abcc8b3e_getChild(_1abcc4563_scopeChecker*);
inline void _1abcc9007_checkChildSsc(jule::Ptr<_1abcc4563_scopeChecker>, jule::Ptr<_1acae6e12_ScopeTree>*, jule::Ptr<_1abcbc935_Scope>*, jule::Ptr<_1abcc4563_scopeChecker>*);
inline jule::Ptr<_1abcbc935_Scope> _1abcc93ae_checkChildSc(jule::Ptr<_1abcc4563_scopeChecker>, jule::Ptr<_1acae6e12_ScopeTree>*, jule::Ptr<_1abcc4563_scopeChecker>*);
inline jule::Ptr<_1abcbc935_Scope> _1abcc96bc_checkChild(jule::Ptr<_1abcc4563_scopeChecker>, jule::Ptr<_1acae6e12_ScopeTree>*);
inline void _1abcc9942_checkAnonScope(jule::Ptr<_1abcc4563_scopeChecker>, jule::Ptr<_1acae6e12_ScopeTree>);
inline void _1abcc9c61_processErrorCall(jule::Ptr<_1abcc4563_scopeChecker>, jule::Ptr<_1acb1d345_BuiltinErrorCallExprModel>*, jule::Ptr<_2097d15d8_Token>);
inline void _1abcc9ed6_checkExpr(jule::Ptr<_1abcc4563_scopeChecker>, jule::Ptr<_1acadb456_Expr>);
inline jule::Ptr<_1abcbcd31_If> _1abcca2e4_checkIf(jule::Ptr<_1abcc4563_scopeChecker>, jule::Ptr<_1acaec247_If>);
inline jule::Ptr<_1abcbd11c_Else> _1abcca602_checkElse(jule::Ptr<_1abcc4563_scopeChecker>, jule::Ptr<_1acaec5ee_Else>);
inline void _1abcca877_checkConditional(jule::Ptr<_1abcc4563_scopeChecker>, jule::Ptr<_1acaeca72_Conditional>);
inline void _1abccacd9_checkIterScopeSsc(jule::Ptr<_1abcc4563_scopeChecker>, jule::Uintptr, jule::Ptr<_1acae6e12_ScopeTree>, jule::Ptr<_1abcbc935_Scope>*, jule::Ptr<_1abcc4563_scopeChecker>);
inline jule::Ptr<_1abcbc935_Scope> _1abccb23a_checkIterScopeSc(jule::Ptr<_1abcc4563_scopeChecker>, jule::Uintptr, jule::Ptr<_1acae6e12_ScopeTree>, jule::Ptr<_1abcc4563_scopeChecker>);
inline jule::Ptr<_1abcbc935_Scope> _1abccb5e2_checkIterScope(jule::Ptr<_1abcc4563_scopeChecker>, jule::Uintptr, jule::Ptr<_1acae6e12_ScopeTree>*);
inline void _1abccb867_checkInfIter(jule::Ptr<_1abcc4563_scopeChecker>, jule::Ptr<_1acaea3ee_Iter>*);
inline void _1abccbadc_checkWhileIter(jule::Ptr<_1abcc4563_scopeChecker>, jule::Ptr<_1acaea3ee_Iter>*);
inline void _1abccbea5_checkComptimeRangeIter(jule::Ptr<_1abcc4563_scopeChecker>, jule::Ptr<_1acaea3ee_Iter>*, jule::Ptr<_1abcbe5d5_RangeIter>*, jule::Ptr<_1abd5dc4b_Data>*);
inline void _1abccc22a_checkRangeIter(jule::Ptr<_1abcc4563_scopeChecker>, jule::Ptr<_1acaea3ee_Iter>*);
inline void _1abccc4a0_checkIter(jule::Ptr<_1abcc4563_scopeChecker>, jule::Ptr<_1acaea3ee_Iter>);
inline jule::Bool _1abccc7ad_checkValidContLabel(jule::Ptr<_1abcc4563_scopeChecker>, jule::Uintptr);
inline jule::Bool _1abcccabb_checkValidBreakLabel(jule::Ptr<_1abcc4563_scopeChecker>, jule::Uintptr);
inline jule::Ptr<_1abcbe9d1_ContSt> _1abcccdc9_checkContValidScope(jule::Ptr<_1abcc4563_scopeChecker>, jule::Ptr<_1acaebcc4_ContSt>);
inline void _1abccd14e_checkCont(jule::Ptr<_1abcc4563_scopeChecker>, jule::Ptr<_1acaebcc4_ContSt>);
inline void _1abccd3c4_checkLabel(jule::Ptr<_1abcc4563_scopeChecker>, jule::Ptr<_1acae4629_LabelSt>);
inline void _1abccd649_pushGoto(jule::Ptr<_1abcc4563_scopeChecker>, jule::Ptr<_1acae49d1_GotoSt>);
inline void _1abccd8be_checkPostfix(jule::Ptr<_1abcc4563_scopeChecker>, jule::Ptr<_1acae5916_AssignSt>);
inline jule::Bool _1abccdbcc_isNewAssignIdent(_1abcc4563_scopeChecker*, jule::Str);
inline jule::Bool _1abcce12d_checkStructureAssignOp(jule::Ptr<_1abcc4563_scopeChecker>, jule::Ptr<_1acb09d37_StructIns>*, jule::Ptr<_1acae5916_AssignSt>*, jule::Ptr<_1abd5dc4b_Data>*);
inline void _1abcce3a3_checkSingleAssign(jule::Ptr<_1abcc4563_scopeChecker>, jule::Ptr<_1acae5916_AssignSt>*);
inline void _1abcce8d1_processEndPartOfMultiAssign(_1abcc4563_scopeChecker*, jule::Ptr<_1abcc1142_MultiAssign>*, jule::Ptr<_1acae5916_AssignSt>*, jule::Ptr<_1acae53c7_AssignLeft>*, jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1abd5dc4b_Data>*);
inline void _1abcceb67_checkMultiAssign(jule::Ptr<_1abcc4563_scopeChecker>, jule::Ptr<_1acae5916_AssignSt>*);
inline void _1abcceddc_checkAssignSt(jule::Ptr<_1abcc4563_scopeChecker>, jule::Ptr<_1acae5916_AssignSt>);
inline jule::Ptr<_1abcbc935_Scope> _1abcd0294_checkCaseScope(jule::Ptr<_1abcc4563_scopeChecker>, jule::Ptr<_1abcc2297_Case>*, jule::Ptr<_1acae6e12_ScopeTree>*);
inline jule::Ptr<_1abcc2297_Case> _1abcd078e_checkCase(jule::Ptr<_1abcc4563_scopeChecker>, jule::Ptr<_1abcc174c_Match>, jule::I64, jule::Ptr<_1acaed6bb_Case>, jule::Ptr<_1abd5dc4b_Data>);
inline void _1abcd0b57_checkCases(jule::Ptr<_1abcc4563_scopeChecker>, jule::Ptr<_1acaedd92_MatchCase>*, jule::Ptr<_1abcc174c_Match>, jule::Ptr<_1abd5dc4b_Data>);
inline jule::Ptr<_1abcc2297_Case> _1abcd100e_checkDefault(jule::Ptr<_1abcc4563_scopeChecker>, jule::Ptr<_1abcc174c_Match>, jule::Ptr<_1acaec5ee_Else>);
inline void _1abcd132d_checkComptimePanic(jule::Ptr<_1abcc4563_scopeChecker>, jule::Ptr<_2097d15d8_Token>, jule::Ptr<_1abcbc935_Scope>*);
inline void _1abcd164c_processConstMatch(jule::Ptr<_1abcc4563_scopeChecker>, jule::Ptr<_1abcc174c_Match>*, jule::Ptr<_1acaedd92_MatchCase>*);
inline void _1abcd18c2_checkTypeMatch(jule::Ptr<_1abcc4563_scopeChecker>, jule::Ptr<_1acaedd92_MatchCase>*);
inline void _1abcd1b47_checkCommonMatch(jule::Ptr<_1abcc4563_scopeChecker>, jule::Ptr<_1acaedd92_MatchCase>*);
inline void _1abcd1dbc_checkMatch(jule::Ptr<_1abcc4563_scopeChecker>, jule::Ptr<_1acaedd92_MatchCase>);
inline void _1abcd2142_checkFall(jule::Ptr<_1abcc4563_scopeChecker>, jule::Ptr<_1acae4cbc_FallSt>);
inline jule::Ptr<_1abcbed88_BreakSt> _1abcd2450_checkBreakWithLabel(jule::Ptr<_1abcc4563_scopeChecker>, jule::Ptr<_1acaeb91c_BreakSt>);
inline jule::Ptr<_1abcbed88_BreakSt> _1abcd275d_checkPlainBreak(jule::Ptr<_1abcc4563_scopeChecker>, jule::Ptr<_1acaeb91c_BreakSt>);
inline void _1abcd29d3_checkBreak(jule::Ptr<_1abcc4563_scopeChecker>, jule::Ptr<_1acaeb91c_BreakSt>);
inline void _1abcd2c58_checkRet(jule::Ptr<_1abcc4563_scopeChecker>, jule::Ptr<_1acae9c8e_RetSt>);
inline void _1abcd2ecd_checkUseExpr(jule::Ptr<_1abcc4563_scopeChecker>, jule::Ptr<_1acadbce7_UseExpr>);
inline void _1abcd3253_checkNode(jule::Ptr<_1abcc4563_scopeChecker>, jule::Any*);
inline void _1abcd342e_checkResult(jule::Ptr<_1abcc4563_scopeChecker>);
inline void _1abcd360a_checkTree(jule::Ptr<_1abcc4563_scopeChecker>);
inline void _1abcd3929_checkGoto(_1abcc4563_scopeChecker*, jule::Ptr<_1abcc374e_scopeGoto>*, jule::Ptr<_1abcc32cb_scopeLabel>*);
inline void _1abcd3b05_checkGotos(_1abcc4563_scopeChecker*);
inline void _1abcd3cd1_checkLabels(_1abcc4563_scopeChecker*);
inline void _1abcd3eac_checkVars(_1abcc4563_scopeChecker*);
inline void _1abcd4188_checkAliases(_1abcc4563_scopeChecker*);
inline void _1abcd44a7_check(jule::Ptr<_1abcc4563_scopeChecker>, jule::Ptr<_1acae6e12_ScopeTree>*, jule::Ptr<_1abcbc935_Scope>*);
inline jule::Ptr<_1abcc4563_scopeChecker> _1abcd471b_newChildChecker(jule::Ptr<_1abcc4563_scopeChecker>);
struct _1abcc4563_scopeChecker {
	jule::Ptr<_2097d15d8_Token> _field_calledFrom;
	jule::Ptr<_1abce4671_Sema> _field_s;
	jule::Ptr<_1acb24d85_FnIns> _field_owner;
	jule::Ptr<_1abcc4563_scopeChecker> _field_parent;
	jule::I64 _field_childIndex = 0;
	jule::Ptr<_1abd59241_SymbolTable> _field_table;
	jule::Ptr<_1abcbc935_Scope> _field_scope;
	jule::Ptr<_1acae6e12_ScopeTree> _field_tree;
	jule::Ptr<_1acb24d85_FnIns> _field_result;
	jule::Uintptr _field_it = 0;
	jule::Uintptr _field_cse = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1abcc32cb_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1abcc374e_scopeGoto>>> _field_gotos;
	jule::I64 _field_i = 0;
	

	inline bool operator==(_1abcc4563_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1abcc4563_scopeChecker _other) { return !this->operator==(_other); }


};
inline void _1abcd56b7_checkCdef(_1abcd52bb_directiveChecker*, jule::Ptr<_1acaa47b5_Directive>*);
inline void _1abcd593c_checkTypedef(_1abcd52bb_directiveChecker*, jule::Ptr<_1acaa47b5_Directive>*);
inline void _1abcd5bb2_checkDerive(_1abcd52bb_directiveChecker*, jule::Ptr<_1acaa47b5_Directive>*);
inline void _1abcd5e37_checkNamespace(_1abcd52bb_directiveChecker*, jule::Ptr<_1acaa47b5_Directive>*);
inline void _1abcd61ac_checkDeprecated(_1abcd52bb_directiveChecker*, jule::Ptr<_1acaa47b5_Directive>*);
inline void _1abcd6432_checkTest(_1abcd52bb_directiveChecker*, jule::Ptr<_1acaa47b5_Directive>*);
inline void _1abcd66a7_checkDirective(_1abcd52bb_directiveChecker*, jule::Ptr<_1acaa47b5_Directive>*);
inline void _1abcd6883_check(_1abcd52bb_directiveChecker*);
struct _1abcd52bb_directiveChecker {
	jule::Ptr<_1abce4671_Sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1acaa47b5_Directive>>> _field_d;
	jule::Any _field_o;
	

	inline bool operator==(_1abcd52bb_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1abcd52bb_directiveChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1abcdb39e_ImportInfo> _1abcdb866_SelectPackage(_1abcdb39e_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_1abcdb39e_ImportInfo>)>);
inline jule::Ptr<_1abd1497c_Var> _1abcdbc1d_FindVar(_1abcdb39e_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1acca3e59_TypeAlias> _1abcdc0c5_FindTypeAlias(_1abcdb39e_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1acb07021_Struct> _1abcdc47c_FindStruct(_1abcdb39e_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1acb221d4_Fn> _1abcdc834_FindFn(_1abcdb39e_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1acb34405_Trait> _1abcdcb42_FindTrait(_1abcdb39e_ImportInfo*, jule::Str);
inline jule::Ptr<_1acb36b88_Enum> _1abcdce50_FindEnum(_1abcdb39e_ImportInfo*, jule::Str);
inline jule::Ptr<_1acb38283_TypeEnum> _1abcdd25d_FindTypeEnum(_1abcdb39e_ImportInfo*, jule::Str);
inline jule::Bool _1abcdd648_isLookupable(_1abcdb39e_ImportInfo*, jule::Str);
inline jule::Bool _1abcdd956_existIdent(_1abcdb39e_ImportInfo*, jule::Str);
inline jule::Bool _1abcddbdc_isAccessibleViaSelection(_1abcdb39e_ImportInfo*);
struct _1abcdb39e_ImportInfo {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	jule::Bool _field_ImportAll = false;
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _field_Selected;
	jule::Ptr<_1abcdded9_Package> _field_Package;
	jule::I64 _field_ModId = 0;
	


};
inline jule::Ptr<_1abcdb39e_ImportInfo> _1abcde45c_SelectPackage(_1abcdded9_Package*, jule::Fn<jule::Bool(jule::Ptr<_1abcdb39e_ImportInfo>)>);
inline jule::Ptr<_1abd1497c_Var> _1abcde814_FindVar(_1abcdded9_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1acca3e59_TypeAlias> _1abcdebbb_FindTypeAlias(_1abcdded9_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1acb07021_Struct> _1abce0073_FindStruct(_1abcdded9_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1acb221d4_Fn> _1abce042a_FindFn(_1abcdded9_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1acb34405_Trait> _1abce0738_FindTrait(_1abcdded9_Package*, jule::Str);
inline jule::Ptr<_1acb36b88_Enum> _1abce0a46_FindEnum(_1abcdded9_Package*, jule::Str);
inline jule::Ptr<_1acb38283_TypeEnum> _1abce0d54_FindTypeEnum(_1abcdded9_Package*, jule::Str);
struct _1abcdded9_Package {
	jule::Slice<jule::Ptr<_1abd59241_SymbolTable>> _field_Files;
	


};
inline jule::Ptr<_1acb49184_comptimeTypeInfo> _1abce4099_pushComptimeTypeInfo(_1abce3b59_commonSemaMeta*, jule::Ptr<_1acca4ba2_TypeKind>*);
struct _1abce3b59_commonSemaMeta {
	jule::Slice<jule::Ptr<_1acb49184_comptimeTypeInfo>> _field_comptimeTypeInfos;
	


};
inline jule::Ptr<_1abcdb39e_ImportInfo> _1abce4ae4_SelectPackage(_1abce4671_Sema*, jule::Fn<jule::Bool(jule::Ptr<_1abcdb39e_ImportInfo>)>);
inline jule::Ptr<_1abd1497c_Var> _1abce4e9b_FindVar(_1abce4671_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1acca3e59_TypeAlias> _1abce5353_FindTypeAlias(_1abce4671_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1acb07021_Struct> _1abce570a_FindStruct(_1abce4671_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1acb221d4_Fn> _1abce5ab2_FindFn(_1abce4671_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1acb34405_Trait> _1abce5dc0_FindTrait(_1abce4671_Sema*, jule::Str);
inline jule::Ptr<_1acb36b88_Enum> _1abce61cd_FindEnum(_1abce4671_Sema*, jule::Str);
inline jule::Ptr<_1acb38283_TypeEnum> _1abce64db_FindTypeEnum(_1abce4671_Sema*, jule::Str);
inline jule::Bool _1abce68b5_isFlag(_1abce4671_Sema*, jule::I64);
inline void _1abce6b3a_setCurrentFile(_1abce4671_Sema*, jule::Ptr<_1abd59241_SymbolTable>);
inline void _1abce7003_pushErr(_1abce4671_Sema*, jule::Ptr<_2097d15d8_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1abce7322_pushSuggestion(_1abce4671_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1abce76c9_isAccessibleDefine(_1abce4671_Sema*, jule::Bool, jule::Ptr<_2097d15d8_Token>);
inline jule::Bool _1abce7b2a_isDuplicatedIdent(_1abce4671_Sema*, jule::Uintptr, jule::Str, jule::Bool);
inline void _1abce7e49_checkDirectives(jule::Ptr<_1abce4671_Sema>, jule::Slice<jule::Ptr<_1acaa47b5_Directive>>*, jule::Any);
inline jule::Bool _1abce839a_checkGenericQuantity(_1abce4671_Sema*, jule::I64, jule::I64, jule::Ptr<_2097d15d8_Token>);
inline jule::Bool _1abce8774_isDuplicatedImportSelection(_1abce4671_Sema*, jule::Uintptr, jule::Str);
inline jule::Any _1abce8b3c_getImportDef(_1abce4671_Sema*, jule::Str, jule::Ptr<_1abcdb39e_ImportInfo>*);
inline jule::Bool _1a6080e96_checkImportSelection(_1abce4671_Sema*, jule::Ptr<_2097d15d8_Token>*, jule::Ptr<_1abd1497c_Var>*);
inline jule::Bool _1a6084b04_checkImportSelection(_1abce4671_Sema*, jule::Ptr<_2097d15d8_Token>*, jule::Ptr<_1acca3e59_TypeAlias>*);
inline jule::Bool _1a608870c_checkImportSelection(_1abce4671_Sema*, jule::Ptr<_2097d15d8_Token>*, jule::Ptr<_1acb07021_Struct>*);
inline jule::Bool _1a608c49c_checkImportSelection(_1abce4671_Sema*, jule::Ptr<_2097d15d8_Token>*, jule::Ptr<_1acb34405_Trait>*);
inline jule::Bool _1a60910a5_checkImportSelection(_1abce4671_Sema*, jule::Ptr<_2097d15d8_Token>*, jule::Ptr<_1acb36b88_Enum>*);
inline jule::Bool _1a6094bad_checkImportSelection(_1abce4671_Sema*, jule::Ptr<_2097d15d8_Token>*, jule::Ptr<_1acb38283_TypeEnum>*);
inline jule::Bool _1a60987b6_checkImportSelection(_1abce4671_Sema*, jule::Ptr<_2097d15d8_Token>*, jule::Ptr<_1acb221d4_Fn>*);
inline jule::Bool _1abce9324_checkImportSelectedSelections(_1abce4671_Sema*, jule::Ptr<_1abcdb39e_ImportInfo>*);
inline jule::Bool _1a609c798_checkImportsAllSelectionsFromCollection(_1abce4671_Sema*, jule::Slice<jule::Ptr<_1abd1497c_Var>>*, jule::Ptr<_2097d15d8_Token>*);
inline jule::Bool _1a60a0b31_checkImportsAllSelectionsFromCollection(_1abce4671_Sema*, jule::Slice<jule::Ptr<_1acca3e59_TypeAlias>>*, jule::Ptr<_2097d15d8_Token>*);
inline jule::Bool _1a60a1291_checkImportsAllSelectionsFromCollection(_1abce4671_Sema*, jule::Slice<jule::Ptr<_1acb07021_Struct>>*, jule::Ptr<_2097d15d8_Token>*);
inline jule::Bool _1a60a3d43_checkImportsAllSelectionsFromCollection(_1abce4671_Sema*, jule::Slice<jule::Ptr<_1acb221d4_Fn>>*, jule::Ptr<_2097d15d8_Token>*);
inline jule::Bool _1a60a53b6_checkImportsAllSelectionsFromCollection(_1abce4671_Sema*, jule::Slice<jule::Ptr<_1acb34405_Trait>>*, jule::Ptr<_2097d15d8_Token>*);
inline jule::Bool _1a60a9552_checkImportsAllSelectionsFromCollection(_1abce4671_Sema*, jule::Slice<jule::Ptr<_1acb36b88_Enum>>*, jule::Ptr<_2097d15d8_Token>*);
inline jule::Bool _1a60ac104_checkImportsAllSelectionsFromCollection(_1abce4671_Sema*, jule::Slice<jule::Ptr<_1acb38283_TypeEnum>>*, jule::Ptr<_2097d15d8_Token>*);
inline jule::Bool _1abce9a50_checkImportAllSelections(_1abce4671_Sema*, jule::Ptr<_1abcdb39e_ImportInfo>*);
inline jule::Bool _1abce9d6e_checkImportSelections(_1abce4671_Sema*, jule::Ptr<_1abcdb39e_ImportInfo>*);
inline jule::Bool _1abcea17c_isUseAliasDuplication(_1abce4671_Sema*, jule::Ptr<_1abcdb39e_ImportInfo>*);
inline jule::Bool _1abcea48a_checkImport(_1abce4671_Sema*, jule::Ptr<_1abcdb39e_ImportInfo>*);
inline void _1abcea666_checkImports(_1abce4671_Sema*);
inline void _1abcea842_implFileImpls(jule::Ptr<_1abce4671_Sema>);
inline void _1abceaa1d_implImpls(jule::Ptr<_1abce4671_Sema>);
inline void _1abceabe9_checkEnums(jule::Ptr<_1abce4671_Sema>);
inline void _1abceadc5_checkFileInherits(jule::Ptr<_1abce4671_Sema>);
inline void _1abceb0a1_checkInherits(jule::Ptr<_1abce4671_Sema>);
inline _1accb5ee3_typeChecker _1abceb502_typeChecker(jule::Ptr<_1abce4671_Sema>, jule::Trait<_1accc2ecd_Lookup>, jule::Slice<jule::Ptr<_1acca3e59_TypeAlias>>, jule::Ptr<_1accb5113_referencer>);
inline jule::Ptr<_1acca4ba2_TypeKind> _1abceb9ec_buildTypeWithRefers(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acad72cb_TypeDecl>*, jule::Trait<_1accc2ecd_Lookup>, jule::Slice<jule::Ptr<_1acca3e59_TypeAlias>>, jule::Ptr<_1accb5113_referencer>);
inline jule::Bool _1abcebee7_checkTypeWithRefers(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1accaba55_TypeSymbol>*, jule::Trait<_1accc2ecd_Lookup>, jule::Slice<jule::Ptr<_1acca3e59_TypeAlias>>, jule::Ptr<_1accb5113_referencer>);
inline jule::Ptr<_1acb5759e_constraintChecker> _1abcec25b_constraintChecker(jule::Ptr<_1abce4671_Sema>);
inline jule::Bool _1abcec613_checkType(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1accaba55_TypeSymbol>*, jule::Trait<_1accc2ecd_Lookup>);
inline jule::Ptr<_1acca4ba2_TypeKind> _1abceca64_buildTypeWithGenerics(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acad72cb_TypeDecl>*, jule::Slice<jule::Ptr<_1acca3e59_TypeAlias>>, jule::Ptr<_1acb27cde_ReferenceStack>);
inline jule::Ptr<_1acca4ba2_TypeKind> _1abcecd72_buildType(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acad72cb_TypeDecl>*);
inline jule::Ptr<_1acca4ba2_TypeKind> _1abced180_selectType(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acad72cb_TypeDecl>*);
inline jule::Ptr<_1acc78e73_Eval> _1abced5d1_evalpd(jule::Ptr<_1abce4671_Sema>, jule::Trait<_1accc2ecd_Lookup>, jule::Ptr<_1acca4ba2_TypeKind>, jule::Ptr<_1abd1497c_Var>);
inline jule::Ptr<_1acc78e73_Eval> _1abced988_evalp(jule::Ptr<_1abce4671_Sema>, jule::Trait<_1accc2ecd_Lookup>, jule::Ptr<_1acca4ba2_TypeKind>);
inline jule::Ptr<_1acc78e73_Eval> _1abcedc96_eval(jule::Ptr<_1abce4671_Sema>, jule::Trait<_1accc2ecd_Lookup>);
inline jule::Bool _1abcee291_checkAssignType(jule::Ptr<_1abce4671_Sema>, jule::Bool, jule::Ptr<_1acca4ba2_TypeKind>*, jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_2097d15d8_Token>);
inline jule::Bool _1abcee6e2_checkTypeCompatibility(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acca4ba2_TypeKind>*, jule::Ptr<_1acca4ba2_TypeKind>*, jule::Ptr<_2097d15d8_Token>*);
inline jule::Ptr<_1acca4ba2_TypeKind> _1abceeb65_buildNonGenericTypeKind(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acad72cb_TypeDecl>*, jule::Slice<jule::Ptr<_1acae4272_GenericDecl>>*, jule::Slice<jule::Ptr<_1acca4ba2_TypeKind>>*);
inline jule::Bool _1abd00050_buildFnNonGenericTypeKinds(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acb24d85_FnIns>*, jule::Slice<jule::Ptr<_1acca4ba2_TypeKind>>*);
inline jule::Ptr<_1acb24d85_FnIns> _1abd0036e_getTraitCheckFnKind(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acb221d4_Fn>*);
inline jule::Bool _1abd007c0_checkConstraintsFn(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acb24d85_FnIns>*, jule::Ptr<_2097d15d8_Token>*, jule::Ptr<_1acb24d85_FnIns>);
inline jule::Bool _1abd00c21_checkConstraintsStruct(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acb09d37_StructIns>*, jule::Ptr<_2097d15d8_Token>*, jule::Ptr<_1acb09d37_StructIns>);
inline jule::Bool _1abd010c8_fnEnvironment(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acb24d85_FnIns>*, jule::Fn<jule::Bool(jule::Ptr<_1abce4671_Sema>*,jule::Slice<jule::Ptr<_1acca3e59_TypeAlias>>*)>);
inline void _1abd0134d_checkFnParamKind(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acb23eb6_ParamIns>*);
inline jule::Bool _1abd0165b_reloadFnInsTypes(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acb24d85_FnIns>);
inline jule::Bool _1abd01ace_checkRefValidityForInitExpr(jule::Ptr<_1abce4671_Sema>, jule::Bool, jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_2097d15d8_Token>*);
inline jule::Bool _1abd021a6_checkValidityForInitExpr(jule::Ptr<_1abce4671_Sema>, jule::Bool, jule::Bool, jule::Ptr<_1acca4ba2_TypeKind>*, jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_2097d15d8_Token>*);
inline jule::Bool _1abd0256e_checkTypeAliasDeclKind(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acca3e59_TypeAlias>*, jule::Trait<_1accc2ecd_Lookup>);
inline void _1abd0288d_checkTypeAliasDecl(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acca3e59_TypeAlias>*, jule::Trait<_1accc2ecd_Lookup>);
inline void _1abd02b13_checkTypeAliasDeclDup(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acca3e59_TypeAlias>*);
inline jule::Bool _1abd02d77_checkTypeAliasDecls(jule::Ptr<_1abce4671_Sema>);
inline void _1a613959e_checkEnumItemsDup(_1abce4671_Sema*, jule::Slice<jule::Ptr<_1acb36193_EnumItem>>);
inline void _1a61439b5_checkEnumItemsDup(_1abce4671_Sema*, jule::Slice<jule::Ptr<_1acb37c00_TypeEnumItem>>);
inline void _1abd03372_checkEnumItemsStr(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acb36b88_Enum>*);
inline void _1a6120b3a_checkEnumItemInt(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acb36b88_Enum>*, jule::Ptr<_1accac407_Prim>*, jule::Ptr<_1acb36193_EnumItem>*, jule::U64*);
inline void _1a612d373_checkEnumItemInt(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acb36b88_Enum>*, jule::Ptr<_1accac407_Prim>*, jule::Ptr<_1acb36193_EnumItem>*, jule::I64*);
inline void _1a611c2da_checkEnumItemsInt1(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1accac407_Prim>*, jule::Ptr<_1acb36b88_Enum>*);
inline void _1a611bb25_checkEnumItemsInt1(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1accac407_Prim>*, jule::Ptr<_1acb36b88_Enum>*);
inline void _1abd03e22_checkEnumItemsInt(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acb36b88_Enum>*);
inline void _1abd04197_checkEnumDecl(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acb36b88_Enum>*);
inline void _1abd0441c_checkTypeEnumDecl(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acb38283_TypeEnum>*);
inline jule::Bool _1abd04681_checkEnumDecls(jule::Ptr<_1abce4671_Sema>);
inline jule::Bool _1abd048e5_checkTypeEnumDecls(jule::Ptr<_1abce4671_Sema>);
inline jule::Bool _1abd04c03_checkDeclGenerics(_1abce4671_Sema*, jule::Slice<jule::Ptr<_1acae4272_GenericDecl>>*);
inline jule::Bool _1abd05011_checkFnDeclParamsDup(_1abce4671_Sema*, jule::Ptr<_1acb221d4_Fn>*);
inline jule::Bool _1abd0531e_checkFnDeclResultDup(_1abce4671_Sema*, jule::Ptr<_1acb221d4_Fn>*);
inline jule::Bool _1abd0562c_checkFnVariadicParam(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acb221d4_Fn>*);
inline void _1abd058a2_checkFnDeclPrototype(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acb221d4_Fn>*);
inline jule::Bool _1abd05d03_catchTraitInheritCycle(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acb34405_Trait>, jule::Ptr<_1acb34405_Trait>, jule::Str*);
inline jule::Bool _1abd06133__checkTraitDeclInherits(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acb34405_Trait>*);
inline void _1abd063b9_checkTraitDeclInherits(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acb34405_Trait>*);
inline void _1abd0663e_checkTraitDeclMethod(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acb221d4_Fn>*);
inline void _1abd068b4_checkTraitDeclMethods(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acb34405_Trait>*);
inline void _1abd06b39_checkTraitDecl(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acb34405_Trait>*);
inline jule::Bool _1abd06d9d_checkTraitDecls(jule::Ptr<_1abce4671_Sema>);
inline jule::Bool _1abd07255_checkTraitImplMethods(_1abce4671_Sema*, jule::Ptr<_1acb34405_Trait>*, jule::Ptr<_1abcb7831_Impl>*);
inline jule::Bool _1abd0760c_implToStruct(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acb07021_Struct>*, jule::Ptr<_1abcb7831_Impl>*);
inline void _1abd07882_implTrait(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1abcb7831_Impl>*);
inline void _1abd07b07_implStruct(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1abcb7831_Impl>*);
inline void _1abd07d7c_implImpl(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1abcb7831_Impl>*);
inline void _1abd0819b_checkVarDecl(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1abd1497c_Var>*, jule::Trait<_1accc2ecd_Lookup>);
inline void _1abd08421_checkGlobalVarDecl(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1abd1497c_Var>*);
inline jule::Bool _1abd08685_checkGlobalDecls(jule::Ptr<_1abce4671_Sema>);
inline jule::Bool _1abd08a3c_checkStructTraitImpl(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acb07021_Struct>*, jule::Ptr<_1acb34405_Trait>*);
inline jule::Bool _1abd08d4a_checkStructImpls(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acb07021_Struct>*);
inline jule::Bool _1abd09158_checkStructFields(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acb07021_Struct>*);
inline void _1abd093cd_checkStructDecl(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acb07021_Struct>*);
inline jule::Bool _1abd09642_checkStructDecls(jule::Ptr<_1abce4671_Sema>);
inline void _1abd098b7_checkAnonFnDecl(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acb221d4_Fn>*);
inline void _1abd09b3c_checkFnDecl(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acb221d4_Fn>*);
inline jule::Bool _1abd09e4a_checkFuncDecls(jule::Ptr<_1abce4671_Sema>, jule::Slice<jule::Ptr<_1acb221d4_Fn>>*);
inline jule::Bool _1abd0a1ae_checkFnDecls(jule::Ptr<_1abce4671_Sema>);
inline void _1abd0a577_pushCycleError(_1abce4671_Sema*, jule::Str*, jule::Str*, jule::Str*);
inline jule::Bool _1abd0a9c8_checkCrossCycle(_1abce4671_Sema*, jule::Ptr<_1acb07021_Struct>*, jule::Ptr<_1acb07021_Struct>*, jule::Str*);
inline jule::Bool _1abd0ae4b_checkStructDeriveIllegalCycles(_1abce4671_Sema*, jule::Str, jule::Ptr<_1acb07021_Struct>*, jule::Ptr<_1acca4ba2_TypeKind>*);
inline jule::Bool _1abd0b28c_checkStructInsDeriveClone(_1abce4671_Sema*, jule::Ptr<_1acb09d37_StructIns>);
inline void _1abd0b479_checkPackageDecls(jule::Ptr<_1abce4671_Sema>);
inline void _1abd0b7ba_checkDataForTypeInference(_1abce4671_Sema*, jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_2097d15d8_Token>*);
inline void _1abd0ba51_checkVar(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1abd1497c_Var>*);
inline void _1abd0bd70_checkTypeVar(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1abd1497c_Var>*, jule::Trait<_1accc2ecd_Lookup>);
inline void _1abd0c04b_checkGlobalTypes(jule::Ptr<_1abce4671_Sema>);
inline jule::Ptr<_1acb24d85_FnIns> _1abd0c403_readyToCheckFn(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acb09d37_StructIns>*, jule::Ptr<_1acb221d4_Fn>*);
inline void _1abd0c722_checkTypeMethod(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acb09d37_StructIns>*, jule::Ptr<_1acb221d4_Fn>*);
inline jule::Ptr<_1acb24d85_FnIns> _1abd0cb73_checkStructInsOp(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acb09d37_StructIns>*, jule::Ptr<_1acb221d4_Fn>*, jule::Fn<jule::Bool(jule::Ptr<_1acb221d4_Fn>)>);
inline jule::Bool _1abd0d02a_checkStructEnv(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acb09d37_StructIns>*, jule::Ptr<_2097d15d8_Token>);
inline jule::Bool _1abd0d3d2_precheckStructIns(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acb09d37_StructIns>*, jule::Ptr<_2097d15d8_Token>);
inline void _1abd0d657_checkStructIns(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acb09d37_StructIns>*);
inline void _1abd0d8cc_checkTypeStruct(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acb07021_Struct>*);
inline void _1abd0daa8_checkStructTypes(jule::Ptr<_1abce4671_Sema>);
inline void _1abd0dd50_checkStructInsOperators(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acb09d37_StructIns>);
inline void _1abd0e0d6_precheckStructType(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acb07021_Struct>*);
inline void _1abd0e2b2_precheckStructTypes(jule::Ptr<_1abce4671_Sema>);
inline void _1abd0e537_checkRets(_1abce4671_Sema*, jule::Ptr<_1acb24d85_FnIns>*);
inline void _1abd0e856_checkFnInsSc(_1abce4671_Sema*, jule::Ptr<_1acb24d85_FnIns>*, jule::Ptr<_1abcc4563_scopeChecker>*);
inline void _1abd0eb75_checkFnInsCaller(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acb24d85_FnIns>*, jule::Ptr<_2097d15d8_Token>);
inline void _1abd0edea_checkFnIns(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acb24d85_FnIns>*);
inline void _1abd10170_checkTypeFn(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acb221d4_Fn>*);
inline void _1abd103e5_checkTestFn(_1abce4671_Sema*, jule::Ptr<_1acb24d85_FnIns>*);
inline void _1abd1066a_precheckTypeFn(jule::Ptr<_1abce4671_Sema>, jule::Ptr<_1acb221d4_Fn>*);
inline void _1abd10846_precheckFnTypes(jule::Ptr<_1abce4671_Sema>);
inline void _1abd10a22_checkFnTypes(jule::Ptr<_1abce4671_Sema>);
inline void _1abd10bed_checkPackageTypes(jule::Ptr<_1abce4671_Sema>);
inline void _1abd10dc9_setFileSemaFields(jule::Ptr<_1abce4671_Sema>);
inline void _1abd110a5_setSemaFields(jule::Ptr<_1abce4671_Sema>);
inline void _1abd1132a_check(jule::Ptr<_1abce4671_Sema>, jule::Slice<jule::Ptr<_1abd59241_SymbolTable>>*);
struct _1abce4671_Sema {
	jule::Slice<_20943da3c_Log> _field_errors;
	jule::Slice<jule::Ptr<_1abd59241_SymbolTable>> _field_files;
	jule::Ptr<_1abd59241_SymbolTable> _field_file;
	jule::I64 _field_flags = 0LL;
	jule::Ptr<_1abce3b59_commonSemaMeta> _field_meta;
	


};
inline _1abd11726_missingRetChecker static__1abd11ade_new(void);
inline jule::Bool _1abd11db9_checkConditional(_1abd11726_missingRetChecker*, jule::Ptr<_1abcbd491_Conditional>);
inline jule::Bool _1abd121c7_checkMatch(_1abd11726_missingRetChecker*, jule::Ptr<_1abcc174c_Match>);
inline jule::Bool _1abd124d5_checkInfIter(_1abd11726_missingRetChecker*, jule::Ptr<_1abcbd77c_InfIter>);
inline jule::Bool _1abd127e3_checkScope(_1abd11726_missingRetChecker*, jule::Ptr<_1abcbc935_Scope>);
inline jule::Bool _1abd12b01_check(_1abd11726_missingRetChecker*, jule::Ptr<_1abcbc935_Scope>);
struct _1abd11726_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled = false;
	


};
struct _1abd13937_IterRelation {
	jule::Ptr<_1abd1497c_Var> _field_Range;
	

	inline bool operator==(_1abd13937_IterRelation _other) {
		return 
			this->_field_Range == _other._field_Range;
	}

	inline bool operator!=(_1abd13937_IterRelation _other) { return !this->operator==(_other); }


};
inline jule::Bool _1abd14d01_IsInitialized(_1abd1497c_Var*);
inline jule::Bool _1abd15065_IsTypeInferred(_1abd1497c_Var*);
inline jule::Bool _1abd152c9_untypedConstant(_1abd1497c_Var*);
struct _1abd1497c_Var {
	jule::Ptr<_1abcbc935_Scope> _field_Scope;
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1accaba55_TypeSymbol> _field_Kind;
	jule::Ptr<_1abd5ecc4_Value> _field_Value;
	jule::Ptr<_1acb27cde_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1acaa47b5_Directive>> _field_Directives;
	jule::Ptr<_1abd13937_IterRelation> _field_IterRelation;
	jule::I64 _field_RetOrder = -2LL;
	jule::Slice<jule::Ptr<_1abd1497c_Var>> _field_Depends;
	


};
inline jule::Bool static__1abd15d57_Dispose(jule::Ptr<_1acb221d4_Fn>);
inline jule::Bool static__1abd160ee_Str(jule::Ptr<_1acb221d4_Fn>);
inline jule::Bool static__1abd16440_logical(jule::Ptr<_1acb221d4_Fn>*, jule::Str);
inline jule::Bool static__1abd166d7_Eq(jule::Ptr<_1acb221d4_Fn>);
inline jule::Bool static__1abd1697e_Gt(jule::Ptr<_1acb221d4_Fn>);
inline jule::Bool static__1abd16c26_GtEq(jule::Ptr<_1acb221d4_Fn>);
inline jule::Bool static__1abd16ebd_Lt(jule::Ptr<_1acb221d4_Fn>);
inline jule::Bool static__1abd17265_LtEq(jule::Ptr<_1acb221d4_Fn>);
inline jule::Bool static__1abd175a6_result(jule::Ptr<_1acb221d4_Fn>*, jule::Str);
inline jule::Bool static__1abd1784d_Shl(jule::Ptr<_1acb221d4_Fn>);
inline jule::Bool static__1abd17ae5_Shr(jule::Ptr<_1acb221d4_Fn>);
inline jule::Bool static__1abd17d8c_Add(jule::Ptr<_1acb221d4_Fn>);
inline jule::Bool static__1abd18134_Sub(jule::Ptr<_1acb221d4_Fn>);
inline jule::Bool static__1abd183cb_Div(jule::Ptr<_1acb221d4_Fn>);
inline jule::Bool static__1abd18673_Mul(jule::Ptr<_1acb221d4_Fn>);
inline jule::Bool static__1abd1891a_Mod(jule::Ptr<_1acb221d4_Fn>);
inline jule::Bool static__1abd18bb2_BitAnd(jule::Ptr<_1acb221d4_Fn>);
inline jule::Bool static__1abd18e59_BitOr(jule::Ptr<_1acb221d4_Fn>);
inline jule::Bool static__1abd19201_BitXor(jule::Ptr<_1acb221d4_Fn>);
inline jule::Bool static__1abd19542_unary(jule::Ptr<_1acb221d4_Fn>*, jule::Str);
inline jule::Bool static__1abd197d9_Neg(jule::Ptr<_1acb221d4_Fn>);
inline jule::Bool static__1abd19a81_Pos(jule::Ptr<_1acb221d4_Fn>);
inline jule::Bool static__1abd19d28_BitNot(jule::Ptr<_1acb221d4_Fn>);
inline jule::Bool static__1abd1a169_assign(jule::Ptr<_1acb221d4_Fn>*, jule::Str);
inline jule::Bool static__1abd1a411_AddAssign(jule::Ptr<_1acb221d4_Fn>);
inline jule::Bool static__1abd1a6a8_SubAssign(jule::Ptr<_1acb221d4_Fn>);
inline jule::Bool static__1abd1a950_DivAssign(jule::Ptr<_1acb221d4_Fn>);
inline jule::Bool static__1abd1abe7_MulAssign(jule::Ptr<_1acb221d4_Fn>);
inline jule::Bool static__1abd1ae8e_ModAssign(jule::Ptr<_1acb221d4_Fn>);
inline jule::Bool static__1abd1b236_ShlAssign(jule::Ptr<_1acb221d4_Fn>);
inline jule::Bool static__1abd1b4cd_ShrAssign(jule::Ptr<_1acb221d4_Fn>);
inline jule::Bool static__1abd1b775_BitOrAssign(jule::Ptr<_1acb221d4_Fn>);
inline jule::Bool static__1abd1ba1c_BitAndAssign(jule::Ptr<_1acb221d4_Fn>);
inline jule::Bool static__1abd1bcb4_BitXorAssign(jule::Ptr<_1acb221d4_Fn>);
struct _1abd1572a_FuncPattern {
	


};
inline void _1abd47b8b_pushErr(_1abd476b3_typeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1abd47e00_checkTrait(_1abd476b3_typeCompatibilityChecker*);
inline jule::Bool _1abd48164_checkPtr(_1abd476b3_typeCompatibilityChecker*);
inline jule::Bool _1abd483c8_checkPrim(_1abd476b3_typeCompatibilityChecker*);
inline jule::Bool _1abd48780_typeEnum(_1abd476b3_typeCompatibilityChecker*, jule::Ptr<_1acb38283_TypeEnum>*, jule::Ptr<_1acca4ba2_TypeKind>*);
inline jule::Bool _1abd489e4_checkTypeEnum(_1abd476b3_typeCompatibilityChecker*);
inline jule::Bool _1abd48c58_check(_1abd476b3_typeCompatibilityChecker*);
struct _1abd476b3_typeCompatibilityChecker {
	jule::Ptr<_1abce4671_Sema> _field_s;
	jule::Ptr<_1acca4ba2_TypeKind> _field_dest;
	jule::Ptr<_1acca4ba2_TypeKind> _field_src;
	jule::Ptr<_2097d15d8_Token> _field_errorToken;
	

	inline bool operator==(_1abd476b3_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1abd476b3_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
inline void _1abd4974d_pushErr(_1abd492db_assignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1abd499b2_checkValidity(_1abd492db_assignTypeChecker*);
inline jule::Bool _1abd49c26_checkConst(_1abd492db_assignTypeChecker*);
inline jule::Bool _1abd49e8a_isPrim(_1abd492db_assignTypeChecker*);
inline jule::Bool _1abd4a1ee_checkCompatibility(_1abd492db_assignTypeChecker*);
inline jule::Bool _1abd4a463_check(_1abd492db_assignTypeChecker*);
struct _1abd492db_assignTypeChecker {
	jule::Ptr<_1abce4671_Sema> _field_s;
	jule::Ptr<_1acca4ba2_TypeKind> _field_dest;
	jule::Ptr<_1abd5dc4b_Data> _field_d;
	jule::Ptr<_2097d15d8_Token> _field_errorToken;
	

	inline bool operator==(_1abd492db_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1abd492db_assignTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a62b63eb_annotateConstraintElem(_1abd4acc1_dynamicTypeAnnotation*, jule::Ptr<_1acca4ba2_TypeKind>*);
inline jule::Bool _1a62b672b_annotateConstraintElem(_1abd4acc1_dynamicTypeAnnotation*, jule::Ptr<_1acca4ba2_TypeKind>*);
inline jule::Bool _1a62b5c14_annotateConstraintElem(_1abd4acc1_dynamicTypeAnnotation*, jule::Ptr<_1acca4ba2_TypeKind>*);
inline jule::Bool _1a62bdc72_annotateConstraintElem(_1abd4acc1_dynamicTypeAnnotation*, jule::Ptr<_1acca4ba2_TypeKind>*);
inline jule::Bool _1abd4b662_annotateConstraintMap(_1abd4acc1_dynamicTypeAnnotation*, jule::Ptr<_1acca4ba2_TypeKind>*);
inline jule::Bool _1abd4b970_annotateConstraintTup(_1abd4acc1_dynamicTypeAnnotation*, jule::Ptr<_1acca4ba2_TypeKind>*);
inline jule::Bool _1abd4bc7d_annotateConstraintFn(_1abd4acc1_dynamicTypeAnnotation*, jule::Ptr<_1acca4ba2_TypeKind>*);
inline jule::Bool _1abd4c0ad_annotateConstraintIdent(_1abd4acc1_dynamicTypeAnnotation*, jule::Ptr<_1acca4ba2_TypeKind>*);
inline jule::Bool _1abd4c3cc_annotateConstraint(_1abd4acc1_dynamicTypeAnnotation*, jule::Ptr<_1acca4ba2_TypeKind>*);
inline void _1abd4c6eb_pushGeneric(_1abd4acc1_dynamicTypeAnnotation*, jule::Ptr<_1acca4ba2_TypeKind>*, jule::I64);
inline jule::Bool _1abd4ca09_annotatePrim(_1abd4acc1_dynamicTypeAnnotation*, jule::Ptr<_1acca4ba2_TypeKind>*);
inline jule::Bool _1abd4cd17_annotateArr(_1abd4acc1_dynamicTypeAnnotation*, jule::Ptr<_1acca4ba2_TypeKind>*);
inline jule::Bool _1abd4d125_annotateSlc(_1abd4acc1_dynamicTypeAnnotation*, jule::Ptr<_1acca4ba2_TypeKind>*);
inline jule::Bool _1abd4d4cc_checkMapKey(_1abd4acc1_dynamicTypeAnnotation*, jule::Ptr<_1acca4ba2_TypeKind>*, jule::Ptr<_1acca4ba2_TypeKind>*);
inline jule::Bool _1abd4d7da_annotateMap(_1abd4acc1_dynamicTypeAnnotation*, jule::Ptr<_1acca4ba2_TypeKind>*);
inline jule::Bool _1abd4dae8_annotateFn(_1abd4acc1_dynamicTypeAnnotation*, jule::Ptr<_1acca4ba2_TypeKind>*);
inline jule::Bool _1abd4de06_annotatePtr(_1abd4acc1_dynamicTypeAnnotation*, jule::Ptr<_1acca4ba2_TypeKind>*);
inline jule::Bool _1abd4e214_annotateSptr(_1abd4acc1_dynamicTypeAnnotation*, jule::Ptr<_1acca4ba2_TypeKind>*);
inline jule::Bool _1abd4e522_annotateStruct(_1abd4acc1_dynamicTypeAnnotation*, jule::Ptr<_1acca4ba2_TypeKind>*);
inline jule::Bool _1abd4e830_annotateAny(_1abd4acc1_dynamicTypeAnnotation*, jule::Ptr<_1acca4ba2_TypeKind>*);
inline jule::Bool _1abd4eb3d_annotateKind(_1abd4acc1_dynamicTypeAnnotation*, jule::Ptr<_1acca4ba2_TypeKind>*);
inline jule::Bool _1abd4eda2_annotate(_1abd4acc1_dynamicTypeAnnotation*);
struct _1abd4acc1_dynamicTypeAnnotation {
	jule::Ptr<_1acc78e73_Eval> _field_e;
	jule::Ptr<_1acb24d85_FnIns> _field_f;
	jule::Ptr<_1acb23eb6_ParamIns> _field_p;
	jule::Ptr<_1abd5dc4b_Data> _field_a;
	jule::Ptr<_2097d15d8_Token> _field_errorToken;
	jule::Ptr<_1acca4ba2_TypeKind>* _field_k = nullptr;
	jule::Ptr<_1acad72cb_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1acca4ba2_TypeKind>> _field_ignored;
	


};
inline void _1abd50c1b_pushErrToken(_1abd506bb_fnCallArgChecker*, jule::Ptr<_2097d15d8_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1abd5103a_pushErr(_1abd506bb_fnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1acb23eb6_ParamIns>> _1abd5129e_getParams(_1abd506bb_fnCallArgChecker*);
inline jule::Bool _1abd51579_checkCounts(_1abd506bb_fnCallArgChecker*, jule::Slice<jule::Ptr<_1acb23eb6_ParamIns>>*);
inline jule::Bool _1abd519ca_checkArg(_1abd506bb_fnCallArgChecker*, jule::Ptr<_1acb23eb6_ParamIns>*, jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_2097d15d8_Token>*);
inline jule::Bool _1abd51d82_push(_1abd506bb_fnCallArgChecker*, jule::Ptr<_1acb23eb6_ParamIns>*, jule::Ptr<_1acadb456_Expr>);
inline jule::Bool _1abd52239_pushVariadic(_1abd506bb_fnCallArgChecker*, jule::Ptr<_1acb23eb6_ParamIns>*, jule::I64);
inline jule::Bool _1abd52547_checkArgs(_1abd506bb_fnCallArgChecker*, jule::Slice<jule::Ptr<_1acb23eb6_ParamIns>>*);
inline jule::Bool _1abd527cd_checkDynamicTypeAnnotation(_1abd506bb_fnCallArgChecker*);
inline jule::Bool _1abd52a53_check(_1abd506bb_fnCallArgChecker*);
struct _1abd506bb_fnCallArgChecker {
	jule::Ptr<_1acc78e73_Eval> _field_e;
	jule::Slice<jule::Ptr<_1acadb456_Expr>> _field_args;
	jule::Ptr<_2097d15d8_Token> _field_errorToken;
	jule::Ptr<_1acb24d85_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation = false;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1acca4ba2_TypeKind>> _field_ignored;
	


};
inline void _1abd5359d_pushErr(_1abd53092_structLitChecker*, jule::Ptr<_2097d15d8_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1abd538bc_pushSuggestion(_1abd53092_structLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _1abd53c85_pushMatch(_1abd53092_structLitChecker*, jule::Ptr<_1acb09342_FieldIns>*, jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_2097d15d8_Token>*);
inline void _1abd540a4_checkPair(_1abd53092_structLitChecker*, jule::Ptr<_1acae0ceb_FieldExprPair>*, jule::Slice<jule::Ptr<_1acadb456_Expr>>*);
inline jule::Bool _1abd543b2_readyExprs(_1abd53092_structLitChecker*, jule::Slice<jule::Ptr<_1acadb456_Expr>>*);
inline void _1abd54637_check(_1abd53092_structLitChecker*, jule::Slice<jule::Ptr<_1acadb456_Expr>>*);
struct _1abd53092_structLitChecker {
	jule::Ptr<_1acc78e73_Eval> _field_e;
	jule::Ptr<_2097d15d8_Token> _field_errorToken;
	jule::Ptr<_1acb09d37_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1acb0e9a7_StructArgExprModel>> _field_args;
	


};
inline jule::Ptr<_1abd1497c_Var> _1abd5513d_buildVar(_1abd54b76_rangeChecker*, jule::Ptr<_1acae98d7_VarDecl>*);
inline void _1abd55319_setSizeKey(_1abd54b76_rangeChecker*);
inline void _1abd556d2_checkRangeExprValidity(_1abd54b76_rangeChecker*, jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1abd1497c_Var>*, jule::Ptr<_1acca4ba2_TypeKind>*);
inline void _1abd558ad_checkSlice(_1abd54b76_rangeChecker*);
inline void _1abd55a89_checkArray(_1abd54b76_rangeChecker*);
inline void _1abd55c65_checkMapKeyA(_1abd54b76_rangeChecker*);
inline void _1abd55e41_checkMapKeyB(_1abd54b76_rangeChecker*);
inline void _1abd5611c_checkMap(_1abd54b76_rangeChecker*);
inline void _1abd562e8_checkStr(_1abd54b76_rangeChecker*);
inline void _1abd564c4_checkComptime(_1abd54b76_rangeChecker*);
inline jule::Bool _1abd56738_checkComptimeRange(_1abd54b76_rangeChecker*);
inline jule::Bool _1abd5699c_check(_1abd54b76_rangeChecker*);
struct _1abd54b76_rangeChecker {
	jule::Ptr<_1abcc4563_scopeChecker> _field_sc;
	jule::Ptr<_1acaeb565_RangeKind> _field_rang;
	jule::Ptr<_1abcbe5d5_RangeIter> _field_Kind;
	jule::Ptr<_1abd5dc4b_Data> _field_d;
	

	inline bool operator==(_1abd54b76_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1abd54b76_rangeChecker _other) { return !this->operator==(_other); }


};
inline void _1abd57580_prepareTypes(_1abd57173_retTypeChecker*);
inline void _1abd57805_prepareExprs(_1abd57173_retTypeChecker*, jule::Ptr<_1acadb456_Expr>*);
inline void _1abd579d1_checkExprs(_1abd57173_retTypeChecker*);
inline jule::Bool _1abd57cde_check(_1abd57173_retTypeChecker*, jule::Ptr<_1acadb456_Expr>*);
struct _1abd57173_retTypeChecker {
	jule::Ptr<_1abcc4563_scopeChecker> _field_sc;
	jule::Ptr<_1acb24d85_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1acca4ba2_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_1acadb456_Expr>> _field_exprs;
	jule::Ptr<_2097d15d8_Token> _field_errorToken;
	jule::Any _field_model = jule::Any(nullptr);
	


};
inline jule::Ptr<_1abcdb39e_ImportInfo> _1abd59708_SelectPackage(_1abd59241_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_1abcdb39e_ImportInfo>)>);
inline jule::Ptr<_1abd1497c_Var> _1abd59ab0_FindVar(_1abd59241_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1acca3e59_TypeAlias> _1abd59e67_FindTypeAlias(_1abd59241_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1acb07021_Struct> _1abd5a31e_FindStruct(_1abd59241_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1acb221d4_Fn> _1abd5a6c6_FindFn(_1abd59241_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1acb34405_Trait> _1abd5a9d4_FindTrait(_1abd59241_SymbolTable*, jule::Str);
inline jule::Ptr<_1acb36b88_Enum> _1abd5ace2_FindEnum(_1abd59241_SymbolTable*, jule::Str);
inline jule::Ptr<_1acb38283_TypeEnum> _1abd5b100_FindTypeEnum(_1abd59241_SymbolTable*, jule::Str);
inline jule::Ptr<_1abd1497c_Var> _1abd5b6b6_findVar(_1abd59241_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Ptr<_1acca3e59_TypeAlias> _1abd5bb17_findTypeAlias(_1abd59241_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Any _1abd5bebe_defByIdent(_1abd59241_SymbolTable*, jule::Str, jule::Bool);
inline jule::Bool _1abd5c420_isDuplicatedIdent(_1abd59241_SymbolTable*, jule::Uintptr, jule::Str, jule::Bool);
struct _1abd59241_SymbolTable {
	jule::Ptr<_2097d6973_File> _field_File;
	jule::Slice<_1acb29120_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1abcdb39e_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1abd1497c_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1acca3e59_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1acb07021_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1acb221d4_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1acb34405_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1acb36b88_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1acb38283_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1abcb7831_Impl>> _field_Impls;
	


};
inline jule::Bool _1abd5e0e2_IsNil(_1abd5dc4b_Data*);
inline jule::Bool _1abd5e356_IsVoid(_1abd5dc4b_Data*);
inline jule::Bool _1abd5e5ba_IsConst(_1abd5dc4b_Data*);
inline jule::Bool _1abd5e8c8_GoodOperand(_1abd5dc4b_Data*, jule::Ptr<_1abd5dc4b_Data>*);
struct _1abd5dc4b_Data {
	jule::Bool _field_untyped = false;
	jule::Ptr<_1acca4ba2_TypeKind> _field_Kind;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Bool _field_Lvalue = false;
	jule::Bool _field_IsRune = false;
	jule::Any _field_Model = jule::Any(nullptr);
	jule::Bool _field_Decl = false;
	jule::Ptr<_1ddeb4b1c_Const> _field_Constant;
	

	inline bool operator==(_1abd5dc4b_Data _other) {
		return 
			this->_field_untyped == _other._field_untyped &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_1abd5dc4b_Data _other) { return !this->operator==(_other); }


};
struct _1abd5ecc4_Value {
	jule::Ptr<_1acadb456_Expr> _field_Expr;
	jule::Ptr<_1abd5dc4b_Data> _field_Data;
	

	inline bool operator==(_1abd5ecc4_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1abd5ecc4_Value _other) { return !this->operator==(_other); }


};
inline void _1acc79490_pushErr(_1acc78e73_Eval*, jule::Ptr<_2097d15d8_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1acc797ae_pushSuggestion(_1acc78e73_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _1acc7998a_allowBuiltin(_1acc78e73_Eval*);
inline void _1acc79b66_disallowBuiltin(_1acc78e73_Eval*);
inline jule::Bool _1acc79dca_isUnsafe(_1acc78e73_Eval*);
inline jule::Bool _1acc7a13e_isGlobal(_1acc78e73_Eval*);
inline jule::Bool _1acc7a44c_applyNumericPrefix(_1acc78e73_Eval*, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acc7a6b1_litNil(_1acc78e73_Eval*);
inline jule::Ptr<_1abd5dc4b_Data> _1acc7a9be_litStr(_1acc78e73_Eval*, jule::Ptr<_1acadc48a_LitExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acc7accc_litBool(_1acc78e73_Eval*, jule::Ptr<_1acadc48a_LitExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acc7b0da_litRune(_1acc78e73_Eval*, jule::Ptr<_1acadc48a_LitExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acc7b3e8_litFloat(_1acc78e73_Eval*, jule::Ptr<_1acadc48a_LitExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acc7b706_litInt(_1acc78e73_Eval*, jule::Ptr<_1acadc48a_LitExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acc7ba14_litNum(_1acc78e73_Eval*, jule::Ptr<_1acadc48a_LitExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acc7bd22_evalLit(_1acc78e73_Eval*, jule::Ptr<_1acadc48a_LitExpr>);
inline jule::Any _1acc7c130_findBuiltins(_1acc78e73_Eval*, jule::Str);
inline jule::Any _1acc7c4d7_getDef(_1acc78e73_Eval*, jule::Str, jule::Bool);
inline void _1a63e4e64_pushReference(_1acc78e73_Eval*, jule::Ptr<_1acb24d85_FnIns>*);
inline void _1a6408362_pushReference(_1acc78e73_Eval*, jule::Ptr<_1abd1497c_Var>*);
inline void _1a64973bd_pushReference(_1acc78e73_Eval*, jule::Ptr<_1acb09d37_StructIns>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acc7ca6a__evalEnum(_1acc78e73_Eval*, jule::Ptr<_1acb36b88_Enum>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc7ce22_evalEnum(_1acc78e73_Eval*, jule::Ptr<_1acb36b88_Enum>, jule::Ptr<_2097d15d8_Token>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc7d230__evalTypeEnum(_1acc78e73_Eval*, jule::Ptr<_1acb38283_TypeEnum>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc7d5d7_evalTypeEnum(_1acc78e73_Eval*, jule::Ptr<_1acb38283_TypeEnum>, jule::Ptr<_2097d15d8_Token>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc7d8e5__evalStruct(_1acc78e73_Eval*, jule::Ptr<_1acb09d37_StructIns>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc7dc9c_evalStruct(_1acc78e73_Eval*, jule::Ptr<_1acb09d37_StructIns>, jule::Ptr<_2097d15d8_Token>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc7e0aa_evalFnIns(_1acc78e73_Eval*, jule::Ptr<_1acb24d85_FnIns>);
inline void _1acc7e3c9_checkDeprecated(_1acc78e73_Eval*, jule::Slice<jule::Ptr<_1acaa47b5_Directive>>*, jule::Ptr<_2097d15d8_Token>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc7e781_evalFn(_1acc78e73_Eval*, jule::Ptr<_1acb221d4_Fn>, jule::Ptr<_2097d15d8_Token>);
inline void _1acc7eb49_pushIllegalCycleError(_1acc78e73_Eval*, jule::Ptr<_1abd1497c_Var>*, jule::Ptr<_1abd1497c_Var>*, jule::Str*);
inline jule::Bool _1acc80001_checkCrossCycle(_1acc78e73_Eval*, jule::Ptr<_1abd1497c_Var>*, jule::Str*);
inline jule::Bool _1acc803a8_checkIllegalCycles(_1acc78e73_Eval*, jule::Ptr<_1abd1497c_Var>*, jule::Ptr<_2097d15d8_Token>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc80760_evalVar(_1acc78e73_Eval*, jule::Ptr<_1abd1497c_Var>, jule::Ptr<_2097d15d8_Token>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc80b17_evalTypeAlias(_1acc78e73_Eval*, jule::Ptr<_1acca3e59_TypeAlias>, jule::Ptr<_2097d15d8_Token>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc80ebe_evalDef(_1acc78e73_Eval*, jule::Any, jule::Ptr<_2097d15d8_Token>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc812cc_evalIdent(_1acc78e73_Eval*, jule::Ptr<_1acadd04b_IdentExpr>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc815da_evalUnary(jule::Ptr<_1acc78e73_Eval>, jule::Ptr<_1acadd755_UnaryExpr>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc818e8_evalVariadic(jule::Ptr<_1acc78e73_Eval>, jule::Ptr<_1acaddb0c_VariadicExpr>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc81c06_evalUnsafe(jule::Ptr<_1acc78e73_Eval>, jule::Ptr<_1acadcac8_UnsafeExpr>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc82014_evalArr(jule::Ptr<_1acc78e73_Eval>, jule::Ptr<_1acae2a9a_SliceExpr>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc82465_evalExpSlc(jule::Ptr<_1acc78e73_Eval>, jule::Ptr<_1acae2a9a_SliceExpr>, jule::Ptr<_1acca4ba2_TypeKind>, jule::Any);
inline jule::Ptr<_1abd5dc4b_Data> _1acc82773_evalSliceExpr(jule::Ptr<_1acc78e73_Eval>, jule::Ptr<_1acae2a9a_SliceExpr>);
inline void _1acc82ab4_checkIntegerIndexingByData(_1acc78e73_Eval*, jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_2097d15d8_Token>);
inline void _1acc82e8d_indexingPtr(_1acc78e73_Eval*, jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1acae3408_IndexingExpr>*);
inline void _1acc83356_indexingArr(_1acc78e73_Eval*, jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1acae3408_IndexingExpr>*);
inline void _1acc8371e_indexingSlc(_1acc78e73_Eval*, jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1acae3408_IndexingExpr>*);
inline void _1acc83ad7_indexingMap(_1acc78e73_Eval*, jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1acae3408_IndexingExpr>*);
inline void _1acc83ea0_indexingStr(_1acc78e73_Eval*, jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1acae3408_IndexingExpr>*);
inline void _1acc84368_toIndexing(_1acc78e73_Eval*, jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1acae3408_IndexingExpr>*);
inline jule::Bool _1acc847db_pushGenericsFromExprSubIdent(jule::Ptr<_1acc78e73_Eval>, jule::Ptr<_1acade7de_SubIdentExpr>*, jule::Slice<jule::Ptr<_1acad72cb_TypeDecl>>*, jule::Ptr<_1acadb456_Expr>*);
inline jule::Bool _1acc84ba4_pushGenericsFromData(jule::Ptr<_1acc78e73_Eval>, jule::Slice<jule::Ptr<_1acad72cb_TypeDecl>>*, jule::Ptr<_1acadb456_Expr>*);
inline void _1acc84ee5_evalIdentDeclFromIndexing(jule::Ptr<_1acc78e73_Eval>, jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1acae3408_IndexingExpr>*);
inline jule::Bool _1acc85457_checkGenericFn(jule::Ptr<_1acc78e73_Eval>, jule::Ptr<_1acb24d85_FnIns>*, jule::Ptr<_2097d15d8_Token>*, jule::Any*);
inline void _1acc85798_evalFnGenericFromIndexing(jule::Ptr<_1acc78e73_Eval>, jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1acae3408_IndexingExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acc85ab7_evalIndexing(jule::Ptr<_1acc78e73_Eval>, jule::Ptr<_1acae3408_IndexingExpr>);
inline __jule_tuple_x_1abd5dc4b_Data__jule_tuple_x_1abd5dc4b_Data _1acc85dc5_evalSlicingExprs(jule::Ptr<_1acc78e73_Eval>, jule::Ptr<_1acae3a13_SlicingExpr>*);
inline void _1acc8614a_slicingArr(_1acc78e73_Eval*, jule::Ptr<_1abd5dc4b_Data>*);
inline void _1acc86513_slicingStr(_1acc78e73_Eval*, jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1abd5dc4b_Data>*);
inline void _1acc86975_checkSlicing(_1acc78e73_Eval*, jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1acae3a13_SlicingExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acc86c83_evalSlicing(jule::Ptr<_1acc78e73_Eval>, jule::Ptr<_1acae3a13_SlicingExpr>);
inline void _1acc8714b_castPtr(_1acc78e73_Eval*, jule::Ptr<_1acca4ba2_TypeKind>, jule::Ptr<_1abd5dc4b_Data>, jule::Ptr<_2097d15d8_Token>);
inline void _1acc87514_castStruct(_1acc78e73_Eval*, jule::Ptr<_1acca4ba2_TypeKind>, jule::Ptr<_1abd5dc4b_Data>, jule::Ptr<_2097d15d8_Token>);
inline void _1acc878cc_castRef(_1acc78e73_Eval*, jule::Ptr<_1acca4ba2_TypeKind>, jule::Ptr<_1abd5dc4b_Data>, jule::Ptr<_2097d15d8_Token>);
inline void _1acc87c95_castSlc(_1acc78e73_Eval*, jule::Ptr<_1acca4ba2_TypeKind>, jule::Ptr<_1abd5dc4b_Data>, jule::Ptr<_2097d15d8_Token>);
inline void _1acc880b4_castStr(_1acc78e73_Eval*, jule::Ptr<_1abd5dc4b_Data>, jule::Ptr<_2097d15d8_Token>);
inline void _1acc8847c_castInt(_1acc78e73_Eval*, jule::Ptr<_1acca4ba2_TypeKind>, jule::Ptr<_1abd5dc4b_Data>, jule::Ptr<_2097d15d8_Token>);
inline void _1acc88845_castNum(_1acc78e73_Eval*, jule::Ptr<_1acca4ba2_TypeKind>, jule::Ptr<_1abd5dc4b_Data>, jule::Ptr<_2097d15d8_Token>);
inline void _1acc88c0d_castPrim(_1acc78e73_Eval*, jule::Ptr<_1acca4ba2_TypeKind>, jule::Ptr<_1abd5dc4b_Data>, jule::Ptr<_2097d15d8_Token>);
inline void _1acc8902c_castConstant(_1acc78e73_Eval*, jule::Ptr<_1acca4ba2_TypeKind>*, jule::Ptr<_1abd5dc4b_Data>*);
inline void _1acc893e5_castTypeEnum(_1acc78e73_Eval*, jule::Ptr<_1acca4ba2_TypeKind>*, jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_2097d15d8_Token>*);
inline void _1acc897ad_castTypeEnumT(_1acc78e73_Eval*, jule::Ptr<_1acca4ba2_TypeKind>*, jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_2097d15d8_Token>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acc89c0e_evalCastByTypeNData(_1acc78e73_Eval*, jule::Ptr<_1acca4ba2_TypeKind>, jule::Ptr<_1abd5dc4b_Data>, jule::Ptr<_2097d15d8_Token>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc8a160_evalCastT(jule::Ptr<_1acc78e73_Eval>, jule::Ptr<_1acca4ba2_TypeKind>*, jule::Ptr<_1acadb456_Expr>*, jule::Ptr<_2097d15d8_Token>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acc8a46d_evalCast(jule::Ptr<_1acc78e73_Eval>, jule::Ptr<_1acaddeb4_CastExpr>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc8a77b_evalNsSelection(_1acc78e73_Eval*, jule::Ptr<_1acade36b_NsSelectionExpr>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc8abcc_evalStructLitExplicit(jule::Ptr<_1acc78e73_Eval>, jule::Ptr<_1acb09d37_StructIns>, jule::Slice<jule::Ptr<_1acadb456_Expr>>, jule::Ptr<_2097d15d8_Token>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc8aeda_evalStructLit(jule::Ptr<_1acc78e73_Eval>, jule::Ptr<_1acae15c1_StructLit>);
inline _1accb5ee3_typeChecker _1acc8b24e_typeChecker(_1acc78e73_Eval*);
inline jule::Ptr<_1abd5dc4b_Data> _1acc8b55c_evalType(_1acc78e73_Eval*, jule::Ptr<_1acad72cb_TypeDecl>);
inline void _1acc8b87b_callTypeFn(jule::Ptr<_1acc78e73_Eval>, jule::Ptr<_1acae036c_FnCallExpr>*, jule::Ptr<_1abd5dc4b_Data>*);
inline void _1acc8bb9a_callBuiltinFn(jule::Ptr<_1acc78e73_Eval>, jule::Ptr<_1acae036c_FnCallExpr>*, jule::Ptr<_1abd5dc4b_Data>*);
inline void _1acc8bedb_checkFnOfConcurrentCall(_1acc78e73_Eval*, jule::Ptr<_1acb24d85_FnIns>*, jule::Ptr<_2097d15d8_Token>);
inline void _1acc8c3d7_processExceptionalHandler(_1acc78e73_Eval*, jule::Ptr<_1acb24d85_FnIns>*, jule::Ptr<_1acae036c_FnCallExpr>*, jule::Ptr<_1abd5dc4b_Data>*);
inline void _1acc8c717_callFn(jule::Ptr<_1acc78e73_Eval>, jule::Ptr<_1acae036c_FnCallExpr>*, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acc8ca25_evalFnCall(jule::Ptr<_1acc78e73_Eval>, jule::Ptr<_1acae036c_FnCallExpr>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc8cdcc_evalEnumStatic(_1acc78e73_Eval*, jule::Ptr<_1acb36b88_Enum>, jule::Ptr<_2097d15d8_Token>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc8d284_evalTypeEnumStatic(_1acc78e73_Eval*, jule::Ptr<_1acb38283_TypeEnum>, jule::Ptr<_2097d15d8_Token>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc8d63b_evalStructStatic(_1acc78e73_Eval*, jule::Ptr<_1acb09d37_StructIns>, jule::Ptr<_2097d15d8_Token>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc8da8c_evalTraitSubIdent(_1acc78e73_Eval*, jule::Ptr<_1abd5dc4b_Data>, jule::Ptr<_1acb34405_Trait>, jule::Ptr<_2097d15d8_Token>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc8e0a9_evalStructSubIdentField(_1acc78e73_Eval*, jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1acb09d37_StructIns>*, jule::Ptr<_2097d15d8_Token>*, jule::Ptr<_1acb09342_FieldIns>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acc8e5b5_evalStructSubIdent(_1acc78e73_Eval*, jule::Ptr<_1abd5dc4b_Data>, jule::Ptr<_1acb09d37_StructIns>, jule::Ptr<_1acade7de_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_1abd5dc4b_Data> _1acc8e96c_evalSliceSubIdent(_1acc78e73_Eval*, jule::Ptr<_1abd5dc4b_Data>, jule::Ptr<_2097d15d8_Token>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc8ed24_evalArraySubIdent(_1acc78e73_Eval*, jule::Ptr<_1abd5dc4b_Data>, jule::Ptr<_2097d15d8_Token>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc90132_evalIntTypeStatic(_1acc78e73_Eval*, jule::Ptr<_2097d15d8_Token>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc90440_evalUintTypeStatic(_1acc78e73_Eval*, jule::Ptr<_2097d15d8_Token>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc9074d_evalI8TypeStatic(_1acc78e73_Eval*, jule::Ptr<_2097d15d8_Token>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc90a5b_evalI16TypeStatic(_1acc78e73_Eval*, jule::Ptr<_2097d15d8_Token>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc90d69_evalI32TypeStatic(_1acc78e73_Eval*, jule::Ptr<_2097d15d8_Token>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc91177_evalI64TypeStatic(_1acc78e73_Eval*, jule::Ptr<_2097d15d8_Token>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc91485_evalU8TypeStatic(_1acc78e73_Eval*, jule::Ptr<_2097d15d8_Token>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc91793_evalU16TypeStatic(_1acc78e73_Eval*, jule::Ptr<_2097d15d8_Token>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc91aa1_evalU32TypeStatic(_1acc78e73_Eval*, jule::Ptr<_2097d15d8_Token>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc91dae_evalU64TypeStatic(_1acc78e73_Eval*, jule::Ptr<_2097d15d8_Token>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc921bc_evalF32TypeStatic(_1acc78e73_Eval*, jule::Ptr<_2097d15d8_Token>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc924ca_evalF64TypeStatic(_1acc78e73_Eval*, jule::Ptr<_2097d15d8_Token>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc92882_evalPrimStatic(_1acc78e73_Eval*, jule::Str, jule::Ptr<_2097d15d8_Token>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc92c39_evalTypeStatic(_1acc78e73_Eval*, jule::Ptr<_1abd5dc4b_Data>, jule::Ptr<_1acade7de_SubIdentExpr>);
inline jule::Ptr<_1abd5dc4b_Data> _1a6587d60_comptimeObjSubIdent(_1acc78e73_Eval*, jule::Ptr<_1acb49184_comptimeTypeInfo>*, jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1acade7de_SubIdentExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1a658b528_comptimeObjSubIdent(_1acc78e73_Eval*, jule::Ptr<_1acb3adce_comptimeStructField>*, jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1acade7de_SubIdentExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1a658eb9c_comptimeObjSubIdent(_1acc78e73_Eval*, jule::Ptr<_1acb41dd5_comptimeEnumField>*, jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1acade7de_SubIdentExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1a6593442_comptimeObjSubIdent(_1acc78e73_Eval*, jule::Ptr<_1acb44657_comptimeParam>*, jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1acade7de_SubIdentExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1a6596b2c_comptimeObjSubIdent(_1acc78e73_Eval*, jule::Ptr<_1acb3ddd2_comptimeStatic>*, jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1acade7de_SubIdentExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1a659a2a1_comptimeObjSubIdent(_1acc78e73_Eval*, jule::Ptr<_1acb4eb7e_comptimeValue>*, jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1acade7de_SubIdentExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1a659d925_comptimeObjSubIdent(_1acc78e73_Eval*, jule::Ptr<_1acb53743_comptimeFile>*, jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1acade7de_SubIdentExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acc93542_evalObjSubIdent(_1acc78e73_Eval*, jule::Ptr<_1abd5dc4b_Data>, jule::Ptr<_1acade7de_SubIdentExpr>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc93850_evalSubIdent(jule::Ptr<_1acc78e73_Eval>, jule::Ptr<_1acade7de_SubIdentExpr>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc93b5d_evalTuple(jule::Ptr<_1acc78e73_Eval>, jule::Ptr<_1acadc0d3_TupleExpr>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc94015_evalMap(jule::Ptr<_1acc78e73_Eval>, jule::Ptr<_1accb2b6b_Map>, jule::Ptr<_1acae1a44_BraceLit>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc94323_evalBraceLit(jule::Ptr<_1acc78e73_Eval>, jule::Ptr<_1acae1a44_BraceLit>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc94631_evalAnonFn(jule::Ptr<_1acc78e73_Eval>, jule::Ptr<_1acae8908_FnDecl>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc9493e_evalBinop(jule::Ptr<_1acc78e73_Eval>, jule::Ptr<_1acadec62_BinopExpr>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc94c4c_evalExprKind(jule::Ptr<_1acc78e73_Eval>, jule::Any);
inline jule::Ptr<_1abd5dc4b_Data> _1acc9505a_eval1(jule::Ptr<_1acc78e73_Eval>, jule::Ptr<_1acadb456_Expr>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc95368_eval(jule::Ptr<_1acc78e73_Eval>, jule::Ptr<_1acadb456_Expr>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc95676_evalExpr1(jule::Ptr<_1acc78e73_Eval>, jule::Ptr<_1acadb456_Expr>);
inline jule::Ptr<_1abd5dc4b_Data> _1acc95984_evalExpr(jule::Ptr<_1acc78e73_Eval>, jule::Ptr<_1acadb456_Expr>);
struct _1acc78e73_Eval {
	jule::Ptr<_1abce4671_Sema> _field_s;
	jule::Trait<_1accc2ecd_Lookup> _field_lookup;
	jule::Ptr<_1acca4ba2_TypeKind> _field_prefix;
	jule::Bool _field_unsafety = false;
	jule::Bool _field_immutable = false;
	jule::Bool _field_ignored = false;
	jule::Bool _field_disBuiltin = false;
	jule::Ptr<_1abd1497c_Var> _field_owner;
	jule::Ptr<_1acb09342_FieldIns> _field_field;
	jule::Bool _field_arg = false;
	

	inline bool operator==(_1acc78e73_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1acc78e73_Eval _other) { return !this->operator==(_other); }


};
inline _1acc95e07_unaryEval static__1acc96336_new(jule::Ptr<_1acc78e73_Eval>);
inline void _1acc96512_minus(_1acc95e07_unaryEval*);
inline void _1acc966dd_plus(_1acc95e07_unaryEval*);
inline void _1acc968b9_caret(_1acc95e07_unaryEval*);
inline void _1acc96a95_excl(_1acc95e07_unaryEval*);
inline void _1acc96c71_star(_1acc95e07_unaryEval*);
inline void _1acc96e4c_amper(_1acc95e07_unaryEval*);
inline void _1acc97128_typeDecl(_1acc95e07_unaryEval*);
inline void _1acc97304_evalData(_1acc95e07_unaryEval*);
inline jule::Ptr<_1abd5dc4b_Data> _1acc97612_eval(_1acc95e07_unaryEval*, jule::Ptr<_1acadd755_UnaryExpr>);
struct _1acc95e07_unaryEval {
	jule::Ptr<_1acc78e73_Eval> _field_e;
	jule::Ptr<_1abd5dc4b_Data> _field_d;
	jule::Ptr<_1acadd755_UnaryExpr> _field_u;
	

	inline bool operator==(_1acc95e07_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1acc95e07_unaryEval _other) { return !this->operator==(_other); }


};
inline _1acc97bd9_binaryEval static__1acc982b1_newPlain(jule::Ptr<_1acc78e73_Eval>);
inline _1acc97bd9_binaryEval static__1acc98602_new(jule::Ptr<_1acc78e73_Eval>, jule::Ptr<_2097d15d8_Token>);
inline jule::Bool _1acc98866_checkTypeCompatibility(_1acc97bd9_binaryEval*);
inline jule::Bool _1acc98b0d_checkStructCommonOperatorCompatibility(_1acc97bd9_binaryEval*);
inline jule::Ptr<_1abd5dc4b_Data> _1acc98da5_evalComptimeTypeInfo(_1acc97bd9_binaryEval*);
inline jule::Ptr<_1abd5dc4b_Data> _1acc99119_evalNil(_1acc97bd9_binaryEval*);
inline jule::Ptr<_1abd5dc4b_Data> _1acc9937d_evalEnum(_1acc97bd9_binaryEval*);
inline jule::Ptr<_1abd5dc4b_Data> _1acc995e2_evalTypeEnum(_1acc97bd9_binaryEval*);
inline jule::Ptr<_1abd5dc4b_Data> _1acc99856_evalSptr(_1acc97bd9_binaryEval*);
inline jule::Ptr<_1abd5dc4b_Data> _1acc99aba_evalPtr(_1acc97bd9_binaryEval*);
inline jule::Ptr<_1abd5dc4b_Data> _1acc99d2e_evalArr(_1acc97bd9_binaryEval*);
inline jule::Ptr<_1abd5dc4b_Data> _1acc9a093_evalSlc(_1acc97bd9_binaryEval*);
inline jule::Ptr<_1abd5dc4b_Data> _1acc9a307_evalStruct(_1acc97bd9_binaryEval*);
inline jule::Ptr<_1abd5dc4b_Data> _1acc9a56b_evalTrait(_1acc97bd9_binaryEval*);
inline jule::Ptr<_1abd5dc4b_Data> _1acc9a7d0_evalAny(_1acc97bd9_binaryEval*);
inline jule::Ptr<_1abd5dc4b_Data> _1acc9aa44_evalBool(_1acc97bd9_binaryEval*);
inline jule::Ptr<_1abd5dc4b_Data> _1acc9aca8_evalStr(_1acc97bd9_binaryEval*);
inline void _1acc9ae84_setTypeToGreater(_1acc97bd9_binaryEval*);
inline void _1acc9b1c6_checkModData(_1acc97bd9_binaryEval*, jule::Ptr<_1abd5dc4b_Data>*);
inline void _1acc9b3a2_mod(_1acc97bd9_binaryEval*);
inline jule::Bool _1acc9b759_numbersAreCompatibile(_1acc97bd9_binaryEval*, jule::Str*, jule::Str*);
inline jule::Ptr<_1abd5dc4b_Data> _1acc9b9bd_evalFloat(_1acc97bd9_binaryEval*);
inline jule::Ptr<_1abd5dc4b_Data> _1acc9bc32_evalInt(_1acc97bd9_binaryEval*);
inline jule::Ptr<_1abd5dc4b_Data> _1acc9be96_evalPrim(_1acc97bd9_binaryEval*);
inline void _1acc9c172_checkSpecialCases(_1acc97bd9_binaryEval*);
inline jule::Ptr<_1abd5dc4b_Data> _1acc9c3d6_evalOp(_1acc97bd9_binaryEval*);
inline void _1acc9c65b_evalConst(_1acc97bd9_binaryEval*, jule::Ptr<_1abd5dc4b_Data>*);
inline void _1acc9c8d1_checkData(_1acc97bd9_binaryEval*, jule::Ptr<_1abd5dc4b_Data>*);
inline void _1acc9caac_checkDatas(_1acc97bd9_binaryEval*);
inline void _1acc9cd32_setModel(_1acc97bd9_binaryEval*, jule::Ptr<_1abd5dc4b_Data>*);
inline void _1acc9d0a7_postEval(_1acc97bd9_binaryEval*, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acc9d45e_solveExplicit(_1acc97bd9_binaryEval*, jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acc9d76c_eval(_1acc97bd9_binaryEval*, jule::Ptr<_1acadec62_BinopExpr>*);
struct _1acc97bd9_binaryEval {
	jule::Ptr<_1acc78e73_Eval> _field_e;
	jule::Ptr<_1abd5dc4b_Data> _field_l;
	jule::Ptr<_1abd5dc4b_Data> _field_r;
	jule::Ptr<_2097d15d8_Token> _field_op;
	

	inline bool operator==(_1acc97bd9_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1acc97bd9_binaryEval _other) { return !this->operator==(_other); }


};
struct _1acca3420_InsGeneric {
	jule::Ptr<_1acca4ba2_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_1acca4ba2_TypeKind>> _field_Constraint;
	


};
struct _1acca3e59_TypeAlias {
	jule::Ptr<_1acae6e12_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Generic = false;
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1accaba55_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1acca3e59_TypeAlias>> _field_Generics;
	


};
inline jule::Str _1acca5059_Str(_1acca4ba2_TypeKind*);
inline jule::Bool _1acca5367_Equal(jule::Ptr<_1acca4ba2_TypeKind>, jule::Ptr<_1acca4ba2_TypeKind>);
inline jule::Bool _1acca5994_Binded(_1acca4ba2_TypeKind*);
inline jule::Bool _1acca5c08_IsNil(_1acca4ba2_TypeKind*);
inline jule::Bool _1acca5e6c_Void(_1acca4ba2_TypeKind*);
inline jule::Bool _1acca61d1_Comparable(_1acca4ba2_TypeKind*);
inline jule::Bool _1acca6445_Mutable(_1acca4ba2_TypeKind*);
inline jule::Bool _1acca66a9_Ordered(_1acca4ba2_TypeKind*);
inline jule::Bool _1acca691d_NilCompatible(_1acca4ba2_TypeKind*);
inline jule::Bool _1acca6b82_PerformsRC(_1acca4ba2_TypeKind*);
inline jule::Bool _1acca6de6_SupportsCloning(_1acca4ba2_TypeKind*);
inline jule::Bool _1acca715a_Variadicable(_1acca4ba2_TypeKind*);
inline jule::Ptr<_1accac407_Prim> _1acca73be_Prim(_1acca4ba2_TypeKind*);
inline jule::Ptr<_1accb0b58_Sptr> _1acca7633_Sptr(_1acca4ba2_TypeKind*);
inline jule::Ptr<_1accb41bc_Ptr> _1acca7897_Ptr(_1acca4ba2_TypeKind*);
inline jule::Ptr<_1acb36b88_Enum> _1acca7b0b_Enum(_1acca4ba2_TypeKind*);
inline jule::Ptr<_1acb38283_TypeEnum> _1acca7d70_TypeEnum(_1acca4ba2_TypeKind*);
inline jule::Ptr<_1accb3760_Arr> _1acca80d4_Arr(_1acca4ba2_TypeKind*);
inline jule::Ptr<_1accb15b5_Slc> _1acca8348_Slc(_1acca4ba2_TypeKind*);
inline jule::Ptr<_1acb24d85_FnIns> _1acca85ac_Fn(_1acca4ba2_TypeKind*);
inline jule::Ptr<_1acb09d37_StructIns> _1acca8821_Struct(_1acca4ba2_TypeKind*);
inline jule::Ptr<_1acb34405_Trait> _1acca8a85_Trait(_1acca4ba2_TypeKind*);
inline jule::Ptr<_1accb2b6b_Map> _1acca8ce9_Map(_1acca4ba2_TypeKind*);
inline jule::Ptr<_1accb21ba_Tuple> _1acca905d_Tup(_1acca4ba2_TypeKind*);
inline jule::Bool _1acca92c2_comptime(_1acca4ba2_TypeKind*);
inline jule::Ptr<_1acb3c908_comptimeStructFields> _1acca9536_comptimeStructFields(_1acca4ba2_TypeKind*);
inline jule::Ptr<_1acb3adce_comptimeStructField> _1acca979a_comptimeStructField(_1acca4ba2_TypeKind*);
inline jule::Ptr<_1acb43106_comptimeEnumFields> _1acca9a0e_comptimeEnumFields(_1acca4ba2_TypeKind*);
inline jule::Ptr<_1acb41dd5_comptimeEnumField> _1acca9c73_comptimeEnumField(_1acca4ba2_TypeKind*);
inline jule::Ptr<_1acb46703_comptimeParams> _1acca9ed7_comptimeParams(_1acca4ba2_TypeKind*);
inline jule::Ptr<_1acb44657_comptimeParam> _1accaa24b_comptimeParam(_1acca4ba2_TypeKind*);
inline jule::Ptr<_1acb3a3d9_comptimeRange> _1accaa4b0_comptimeRange(_1acca4ba2_TypeKind*);
inline jule::Ptr<_1acb47bbb_comptimeTypeInfos> _1accaa724_comptimeTypeInfos(_1acca4ba2_TypeKind*);
inline jule::Ptr<_1acb49184_comptimeTypeInfo> _1accaa988_comptimeTypeInfo(_1acca4ba2_TypeKind*);
inline jule::Ptr<_1acb40994_comptimeStatics> _1accaabec_comptimeStatics(_1acca4ba2_TypeKind*);
inline jule::Ptr<_1acb3ddd2_comptimeStatic> _1accaae61_comptimeStatic(_1acca4ba2_TypeKind*);
inline jule::Ptr<_1acb4eb7e_comptimeValue> _1accab1c5_comptimeValue(_1acca4ba2_TypeKind*);
inline jule::Ptr<_1acb53743_comptimeFile> _1accab439_comptimeFile(_1acca4ba2_TypeKind*);
inline jule::Ptr<_1acb5227a_comptimeFiles> _1accab69d_comptimeFiles(_1acca4ba2_TypeKind*);
struct _1acca4ba2_TypeKind {
	jule::Str _field_BindIdent;
	jule::Bool _field_Generic = false;
	jule::Bool _field_Variadic = false;
	jule::Trait<_1acca4740_Kind> _field_Kind;
	

	inline bool operator==(_1acca4ba2_TypeKind _other) {
		return 
			this->_field_BindIdent == _other._field_BindIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1acca4ba2_TypeKind _other) { return !this->operator==(_other); }


};
inline jule::Bool _1accabdb8_checked(_1accaba55_TypeSymbol*);
inline void _1accac094_removeKind(_1accaba55_TypeSymbol*);
struct _1accaba55_TypeSymbol {
	jule::Ptr<_1acad72cb_TypeDecl> _field_Decl;
	jule::Ptr<_1acca4ba2_TypeKind> _field_Kind;
	

	inline bool operator==(_1accaba55_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1accaba55_TypeSymbol _other) { return !this->operator==(_other); }


};
inline jule::Str _1accac737_Str(_1accac407_Prim*);
inline jule::Bool _1accaca45_Equal(jule::Ptr<_1accac407_Prim>, jule::Ptr<_1acca4ba2_TypeKind>);
inline jule::Bool _1accaceb8_IsConstraint(_1accac407_Prim*);
inline jule::Bool _1accad22c_IsI8(_1accac407_Prim*);
inline jule::Bool _1accad491_IsI16(_1accac407_Prim*);
inline jule::Bool _1accad705_IsI32(_1accac407_Prim*);
inline jule::Bool _1accad969_IsI64(_1accac407_Prim*);
inline jule::Bool _1accadbcd_IsU8(_1accac407_Prim*);
inline jule::Bool _1accade42_IsU16(_1accac407_Prim*);
inline jule::Bool _1accae1a6_IsU32(_1accac407_Prim*);
inline jule::Bool _1accae41a_IsU64(_1accac407_Prim*);
inline jule::Bool _1accae67e_IsF32(_1accac407_Prim*);
inline jule::Bool _1accae8e3_IsF64(_1accac407_Prim*);
inline jule::Bool _1accaeb57_IsInt(_1accac407_Prim*);
inline jule::Bool _1accaedbb_IsUint(_1accac407_Prim*);
inline jule::Bool _1accb0130_IsUintptr(_1accac407_Prim*);
inline jule::Bool _1accb0394_IsBool(_1accac407_Prim*);
inline jule::Bool _1accb0608_IsStr(_1accac407_Prim*);
inline jule::Bool _1accb086c_IsAny(_1accac407_Prim*);
struct _1accac407_Prim {
	jule::Str _field_Kind;
	

	inline bool operator==(_1accac407_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1accac407_Prim _other) { return !this->operator==(_other); }


};
inline jule::Str _1accb0ebb_Str(_1accb0b58_Sptr*);
inline jule::Bool _1accb12c9_Equal(jule::Ptr<_1accb0b58_Sptr>, jule::Ptr<_1acca4ba2_TypeKind>);
struct _1accb0b58_Sptr {
	jule::Ptr<_1acca4ba2_TypeKind> _field_Elem;
	

	inline bool operator==(_1accb0b58_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1accb0b58_Sptr _other) { return !this->operator==(_other); }


};
inline jule::Str _1accb1a38_Str(_1accb15b5_Slc*);
inline jule::Bool _1accb1d46_Equal(jule::Ptr<_1accb15b5_Slc>, jule::Ptr<_1acca4ba2_TypeKind>);
struct _1accb15b5_Slc {
	jule::Ptr<_1acca4ba2_TypeKind> _field_Elem;
	

	inline bool operator==(_1accb15b5_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1accb15b5_Slc _other) { return !this->operator==(_other); }


};
inline jule::Str _1accb252d_Str(_1accb21ba_Tuple*);
inline jule::Bool _1accb283b_Equal(jule::Ptr<_1accb21ba_Tuple>, jule::Ptr<_1acca4ba2_TypeKind>);
struct _1accb21ba_Tuple {
	jule::Slice<jule::Ptr<_1acca4ba2_TypeKind>> _field_Types;
	


};
inline jule::Str _1accb2ece_Str(_1accb2b6b_Map*);
inline jule::Bool _1accb32dc_Equal(jule::Ptr<_1accb2b6b_Map>, jule::Ptr<_1acca4ba2_TypeKind>);
struct _1accb2b6b_Map {
	jule::Ptr<_1acca4ba2_TypeKind> _field_Key;
	jule::Ptr<_1acca4ba2_TypeKind> _field_Val;
	

	inline bool operator==(_1accb2b6b_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1accb2b6b_Map _other) { return !this->operator==(_other); }


};
inline jule::Str _1accb3ac3_Str(_1accb3760_Arr*);
inline jule::Bool _1accb3dd1_Equal(jule::Ptr<_1accb3760_Arr>, jule::Ptr<_1acca4ba2_TypeKind>);
struct _1accb3760_Arr {
	jule::Bool _field_Auto = false;
	jule::I64 _field_N = 0;
	jule::Ptr<_1acca4ba2_TypeKind> _field_Elem;
	

	inline bool operator==(_1accb3760_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1accb3760_Arr _other) { return !this->operator==(_other); }


};
inline jule::Str _1accb4530_Str(_1accb41bc_Ptr*);
inline jule::Bool _1accb483d_Equal(jule::Ptr<_1accb41bc_Ptr>, jule::Ptr<_1acca4ba2_TypeKind>);
inline jule::Bool _1accb4b90_IsUnsafe(_1accb41bc_Ptr*);
struct _1accb41bc_Ptr {
	jule::Ptr<_1acca4ba2_TypeKind> _field_Elem;
	

	inline bool operator==(_1accb41bc_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1accb41bc_Ptr _other) { return !this->operator==(_other); }


};
struct _1accb5113_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	inline bool operator==(_1accb5113_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1accb5113_referencer _other) { return !this->operator==(_other); }


};
inline void _1accb66db_pushErr(_1accb5ee3_typeChecker*, jule::Ptr<_2097d15d8_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1accb68b7_allowBuiltin(_1accb5ee3_typeChecker*);
inline void _1accb6a93_disallowBuiltin(_1accb5ee3_typeChecker*);
inline void _1a672dd4c_pushReference(_1accb5ee3_typeChecker*, jule::Ptr<_1acb09d37_StructIns>*);
inline void _1a67367d3_pushReference(_1accb5ee3_typeChecker*, jule::Ptr<_1acb34405_Trait>*);
inline void _1accb708d_pushReferenceByKind(_1accb5ee3_typeChecker*, jule::Ptr<_1acca4ba2_TypeKind>*);
inline void _1accb7456_pushCycleError(_1accb5ee3_typeChecker*, jule::Any, jule::Any, jule::Str*);
inline jule::Bool _1accb780d_checkCrossCycle(_1accb5ee3_typeChecker*, jule::Any, jule::Str*);
inline jule::Bool _1accb7bb5_checkIllegalCycles(_1accb5ee3_typeChecker*, jule::Ptr<_1acad7892_IdentTypeDecl>*, jule::Any);
inline jule::Trait<_1acca4740_Kind> _1accb806c_fromTypeAlias(_1accb5ee3_typeChecker*, jule::Ptr<_1acad7892_IdentTypeDecl>*, jule::Ptr<_1acca3e59_TypeAlias>*);
inline jule::Ptr<_1acb36b88_Enum> _1accb8424_fromEnum(_1accb5ee3_typeChecker*, jule::Ptr<_1acad7892_IdentTypeDecl>*, jule::Ptr<_1acb36b88_Enum>*);
inline jule::Ptr<_1acb38283_TypeEnum> _1accb87cb_fromTypeEnum(_1accb5ee3_typeChecker*, jule::Ptr<_1acad7892_IdentTypeDecl>*, jule::Ptr<_1acb38283_TypeEnum>*);
inline jule::Ptr<_1acb34405_Trait> _1accb8b83_fromTrait(_1accb5ee3_typeChecker*, jule::Ptr<_1acad7892_IdentTypeDecl>*, jule::Ptr<_1acb34405_Trait>*);
inline jule::Bool _1accb903a_checkStructIns(_1accb5ee3_typeChecker*, jule::Ptr<_1acb09d37_StructIns>*, jule::Ptr<_2097d15d8_Token>*);
inline void _1accb92d2_appendUsedStructReference(_1accb5ee3_typeChecker*, jule::Ptr<_1acb07021_Struct>*);
inline jule::Ptr<_1acb09d37_StructIns> _1accb969a_buildStructInstance(_1accb5ee3_typeChecker*, jule::Ptr<_1acad7892_IdentTypeDecl>*, jule::Ptr<_1acb07021_Struct>*);
inline jule::Ptr<_1acb09d37_StructIns> _1accb9a52_fromStruct(_1accb5ee3_typeChecker*, jule::Ptr<_1acad7892_IdentTypeDecl>*, jule::Ptr<_1acb07021_Struct>*);
inline jule::Trait<_1acca4740_Kind> _1accb9d60_getDef(_1accb5ee3_typeChecker*, jule::Ptr<_1acad7892_IdentTypeDecl>*);
inline jule::Trait<_1acca4740_Kind> _1accba16d_buildIdent(_1accb5ee3_typeChecker*, jule::Ptr<_1acad7892_IdentTypeDecl>);
inline jule::Trait<_1acca4740_Kind> _1accba47b_buildSubIdent(_1accb5ee3_typeChecker*, jule::Ptr<_1acad7b7d_SubIdentTypeDecl>);
inline jule::Ptr<_1accb0b58_Sptr> _1accba789_buildSptrFromType(_1accb5ee3_typeChecker*, jule::Ptr<_1acca4ba2_TypeKind>*);
inline jule::Ptr<_1accb0b58_Sptr> _1accbaa97_buildSptr(_1accb5ee3_typeChecker*, jule::Ptr<_1acad82dd_SptrTypeDecl>);
inline jule::Ptr<_1accb41bc_Ptr> _1accbada5_buildPtrFromType(_1accb5ee3_typeChecker*, jule::Ptr<_1acca4ba2_TypeKind>*);
inline jule::Ptr<_1accb41bc_Ptr> _1accbb1b3_buildPtr(_1accb5ee3_typeChecker*, jule::Ptr<_1acad8cb1_PtrTypeDecl>);
inline jule::Ptr<_1accb15b5_Slc> _1accbb4c1_buildSlc(_1accb5ee3_typeChecker*, jule::Ptr<_1acad86d9_SlcTypeDecl>);
inline jule::Ptr<_1accb3760_Arr> _1accbb7ce_buildArr(_1accb5ee3_typeChecker*, jule::Ptr<_1acad9487_ArrTypeDecl>);
inline jule::Ptr<_1accb2b6b_Map> _1accbbadc_buildMap(_1accb5ee3_typeChecker*, jule::Ptr<_1acad9b91_MapTypeDecl>);
inline jule::Ptr<_1accb21ba_Tuple> _1accbbdea_buildTuple(_1accb5ee3_typeChecker*, jule::Ptr<_1acad89c5_TupleTypeDecl>);
inline jule::Bool _1accbc208_checkFnTypes(_1accb5ee3_typeChecker*, jule::Ptr<_1acb24d85_FnIns>*);
inline jule::Ptr<_1acb24d85_FnIns> _1accbc516_buildFn(_1accb5ee3_typeChecker*, jule::Ptr<_1acae8908_FnDecl>);
inline jule::Trait<_1acca4740_Kind> _1accbc824_buildByNamespace(_1accb5ee3_typeChecker*, jule::Ptr<_1acad8002_NamespaceTypeDecl>);
inline jule::Ptr<_1acca4ba2_TypeKind> _1accbcb32_build(_1accb5ee3_typeChecker*, jule::Any*);
inline jule::Ptr<_1acca4ba2_TypeKind> _1accbce40_checkDecl(_1accb5ee3_typeChecker*, jule::Ptr<_1acad72cb_TypeDecl>*);
inline void _1accbd1b5_check(_1accb5ee3_typeChecker*, jule::Ptr<_1accaba55_TypeSymbol>*);
struct _1accb5ee3_typeChecker {
	jule::Ptr<_1abce4671_Sema> _field_s;
	jule::Trait<_1accc2ecd_Lookup> _field_rootLookup;
	jule::Trait<_1accc2ecd_Lookup> _field_lookup;
	jule::Ptr<_1accb5113_referencer> _field_referencer;
	jule::Ptr<_1acb27cde_ReferenceStack> _field_refers;
	jule::Ptr<_2097d15d8_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1acae4272_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1acca4ba2_TypeKind>>* _field_ignoredGenerics = nullptr;
	jule::Slice<jule::Ptr<_1acca3e59_TypeAlias>> _field_useGenerics;
	jule::Bool _field_notPlain = false;
	jule::Bool _field_disBuiltin = false;
	jule::Bool _field_selection = false;
	jule::Ptr<_1acca3e59_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1acca3e59_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch = false;
	


};
inline jule::Bool static__1accbd825_prim(jule::Str*, jule::Ptr<_1accac407_Prim>);
inline jule::Bool static__1accbdb66_exist(jule::Str*, jule::Ptr<_1acca4ba2_TypeKind>*);
struct _1accbd3d5_identTypeLookup {
	

	inline bool operator==(_1accbd3d5_identTypeLookup _other) { return true; }

	inline bool operator!=(_1accbd3d5_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _1a3d9ceb3_FileInfo {
	jule::Ptr<_1acaa352d_Ast> _field_Ast;
	jule::Slice<_20943da3c_Log> _field_Errors;
	


};
struct _1a3de5538_stmt {
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _field_tokens;
	jule::Bool _field_terminated = false;
	


};
inline void _1a3de64a1_stop(_1a3de5d63_scopeParser*);
inline jule::Bool _1a3de6715_stopped(_1a3de5d63_scopeParser*);
inline jule::Bool _1a3de6979_finished(_1a3de5d63_scopeParser*);
inline jule::Bool _1a3de6bdd_isLastSt(_1a3de5d63_scopeParser*);
inline void _1a3de700c_pushErr(_1a3de5d63_scopeParser*, jule::Ptr<_2097d15d8_Token>, jule::Str);
inline void _1a3de732b_pushSuggestion(_1a3de5d63_scopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _1a3de75a1_insertAsNext(_1a3de5d63_scopeParser*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Ptr<_1a3de5538_stmt> _1a3de7815_next(_1a3de5d63_scopeParser*);
inline jule::Ptr<_1acae6e12_ScopeTree> _1a3de7bbc_buildScope(_1a3de5d63_scopeParser*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*, jule::Ptr<_2097d15d8_Token>);
inline jule::Ptr<_1acae98d7_VarDecl> _1a3de7eca_buildVarSt(_1a3de5d63_scopeParser*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Ptr<_1acae9c8e_RetSt> _1a3de82d8_buildRetSt(_1a3de5d63_scopeParser*, jule::Slice<jule::Ptr<_2097d15d8_Token>>);
inline jule::Ptr<_1acaea3ee_Iter> _1a3de85e6_buildWhileNextIter(_1a3de5d63_scopeParser*, jule::Ptr<_1a3de5538_stmt>*);
inline jule::Ptr<_1acaeabc4_WhileKind> _1a3de8904_buildWhileIterKind(_1a3de5d63_scopeParser*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>> _1a3de8c12_getRangeKindKeysTokens(_1a3de5d63_scopeParser*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Ptr<_1acae98d7_VarDecl> _1a3de9020_buildRangeKindKey(_1a3de5d63_scopeParser*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Slice<jule::Ptr<_1acae98d7_VarDecl>> _1a3de932d_buildRangeKindKeys(_1a3de5d63_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>>*);
inline void _1a3de966e_setupRangeKindKeysPlain(_1a3de5d63_scopeParser*, jule::Ptr<_1acaeb565_RangeKind>*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline void _1a3de99c1_setupRangeKindKeysExplicit(_1a3de5d63_scopeParser*, jule::Ptr<_1acaeb565_RangeKind>*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline void _1a3de9d01_setupRangeKindKeys(_1a3de5d63_scopeParser*, jule::Ptr<_1acaeb565_RangeKind>*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Ptr<_1acaeb565_RangeKind> _1a3dea252_buildRangeIterKind(_1a3de5d63_scopeParser*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*, jule::Ptr<_2097d15d8_Token>*);
inline jule::Any _1a3dea609_buildCommonIterKind(_1a3de5d63_scopeParser*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*, jule::Ptr<_2097d15d8_Token>*);
inline jule::Ptr<_1acaea3ee_Iter> _1a3dea917_buildCommonIter(_1a3de5d63_scopeParser*, jule::Slice<jule::Ptr<_2097d15d8_Token>>);
inline jule::Ptr<_1acaea3ee_Iter> _1a3deac25_buildIterSt(_1a3de5d63_scopeParser*, jule::Ptr<_1a3de5538_stmt>*);
inline jule::Ptr<_1acaeb91c_BreakSt> _1a3deb033_buildBreakSt(_1a3de5d63_scopeParser*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Ptr<_1acaebcc4_ContSt> _1a3deb341_buildContSt(_1a3de5d63_scopeParser*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Ptr<_1acaec247_If> _1a3deb64e_buildIf(_1a3de5d63_scopeParser*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Ptr<_1acaec5ee_Else> _1a3deb95c_buildElse(_1a3de5d63_scopeParser*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Ptr<_1acaeca72_Conditional> _1a3debc6a_buildIfElseChain(_1a3de5d63_scopeParser*, jule::Slice<jule::Ptr<_2097d15d8_Token>>);
inline jule::Ptr<_1acadb456_Expr> _1a3dec078_buildCoCallSt(_1a3de5d63_scopeParser*, jule::Slice<jule::Ptr<_2097d15d8_Token>>);
inline jule::Ptr<_1acae49d1_GotoSt> _1a3dec386_buildGotoSt(_1a3de5d63_scopeParser*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Ptr<_1acae4cbc_FallSt> _1a3dec694_buildFallSt(_1a3de5d63_scopeParser*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Ptr<_1acaed248_TypeAliasDecl> _1a3dec9a2_buildTypeAliasSt(_1a3de5d63_scopeParser*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline void _1a3dece14_pushCaseExpr(_1a3de5d63_scopeParser*, jule::Slice<jule::Ptr<_2097d15d8_Token>>, jule::Ptr<_2097d15d8_Token>, jule::Bool, jule::Slice<jule::Ptr<_1acadb456_Expr>>*);
inline jule::Slice<jule::Ptr<_1acadb456_Expr>> _1a3ded365_buildCaseExprs(_1a3de5d63_scopeParser*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*, jule::Ptr<_2097d15d8_Token>*, jule::Bool);
inline jule::Ptr<_1acae6e12_ScopeTree> _1a3ded673_buildCaseScope(_1a3de5d63_scopeParser*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline __jule_tuple_x_1acaed6bb_Case__jule_tuple_bool _1a3deda2a_buildCase(_1a3de5d63_scopeParser*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*, jule::Bool);
inline __jule_tuple_sx_1acaed6bb_Case__jule_tuple_x_1acaec5ee_Else _1a3deddd2_buildCases(_1a3de5d63_scopeParser*, jule::Slice<jule::Ptr<_2097d15d8_Token>>, jule::Bool);
inline jule::Ptr<_1acaedd92_MatchCase> _1a3dee1e0_buildMatchCase(_1a3de5d63_scopeParser*, jule::Slice<jule::Ptr<_2097d15d8_Token>>);
inline jule::Ptr<_1acae6e12_ScopeTree> _1a3dee4ed_buildScopeSt(_1a3de5d63_scopeParser*, jule::Slice<jule::Ptr<_2097d15d8_Token>>);
inline jule::Ptr<_1acae4629_LabelSt> _1a3dee80b_buildLabelSt(_1a3de5d63_scopeParser*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline __jule_tuple__1acae65c6_StmtData__jule_tuple_bool _1a3deeb19_buildIdSt(_1a3de5d63_scopeParser*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Ptr<_1a3e0db7d_assignInfo> _1a3deee27_buildAssignInfo(_1a3de5d63_scopeParser*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Ptr<_1acae53c7_AssignLeft> _1a3e00235_buildAssignL(_1a3de5d63_scopeParser*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Slice<jule::Ptr<_1acae53c7_AssignLeft>> _1a3e00543_buildAssignLs(_1a3de5d63_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>>*);
inline __jule_tuple_x_1acae5916_AssignSt__jule_tuple_bool _1a3e00851_buildPlainAssign(_1a3de5d63_scopeParser*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline __jule_tuple_x_1acae5916_AssignSt__jule_tuple_bool _1a3e00b5e_buildDeclAssign(_1a3de5d63_scopeParser*, jule::Slice<jule::Ptr<_2097d15d8_Token>>);
inline __jule_tuple_x_1acae5916_AssignSt__jule_tuple_bool _1a3e00e6c_buildAssignSt(_1a3de5d63_scopeParser*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Ptr<_1acadbce7_UseExpr> _1a3e0127a_buildUseExpr(_1a3de5d63_scopeParser*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Any _1a3e01588_buildSt(_1a3de5d63_scopeParser*, jule::Ptr<_1a3de5538_stmt>*);
inline void _1a3e018a7_build(_1a3de5d63_scopeParser*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*, jule::Ptr<_1acae6e12_ScopeTree>*);
struct _1a3de5d63_scopeParser {
	jule::Ptr<_1a3e12577_parser> _field_p;
	jule::Ptr<_1acae6e12_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1a3de5538_stmt>> _field_stmts;
	jule::I64 _field_pos = 0;
	


};
inline void _1a3e02ac8_pushErr(_1a3e02347_exprBuilder*, jule::Ptr<_2097d15d8_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a3e02de7_pushSuggestion(_1a3e02347_exprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1acadc0d3_TupleExpr> _1a3e03205_buildTuple(_1a3e02347_exprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>>*);
inline jule::Ptr<_1acadc48a_LitExpr> _1a3e03513_buildLit(_1a3e02347_exprBuilder*, jule::Ptr<_2097d15d8_Token>);
inline jule::Ptr<_1acad72cb_TypeDecl> _1a3e03821_buildPrimitiveType(_1a3e02347_exprBuilder*, jule::Ptr<_2097d15d8_Token>*);
inline jule::Any _1a3e03b2e_buildSingle(_1a3e02347_exprBuilder*, jule::Ptr<_2097d15d8_Token>);
inline jule::Ptr<_1acadd04b_IdentExpr> _1a3e03e3c_buildBindIdent(_1a3e02347_exprBuilder*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Ptr<_1acadd755_UnaryExpr> _1a3e0424a_buildUnary(_1a3e02347_exprBuilder*, jule::Slice<jule::Ptr<_2097d15d8_Token>>);
inline jule::Ptr<_1acade7de_SubIdentExpr> _1a3e04558_buildObjSubIdent(_1a3e02347_exprBuilder*, jule::Slice<jule::Ptr<_2097d15d8_Token>>);
inline jule::Ptr<_1acade36b_NsSelectionExpr> _1a3e04866_buildNsSubIdent(_1a3e02347_exprBuilder*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Ptr<_1acad72cb_TypeDecl> _1a3e04b74_buildType(_1a3e02347_exprBuilder*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Any _1a3e04e82_buildSubIdent(_1a3e02347_exprBuilder*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Ptr<_1acaddb0c_VariadicExpr> _1a3e05290_buildVariadic(_1a3e02347_exprBuilder*, jule::Slice<jule::Ptr<_2097d15d8_Token>>);
inline jule::Any _1a3e0559d_buildOpRight(_1a3e02347_exprBuilder*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Ptr<_1acadb742_RangeExpr> _1a3e058cd_buildBetweenParentheses(_1a3e02347_exprBuilder*, jule::Slice<jule::Ptr<_2097d15d8_Token>>);
inline jule::Ptr<_1acaddeb4_CastExpr> _1a3e05bec_tryBuildCast(_1a3e02347_exprBuilder*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline void _1a3e060b5_pushArg(_1a3e02347_exprBuilder*, jule::Slice<jule::Ptr<_1acadb456_Expr>>*, jule::Slice<jule::Ptr<_2097d15d8_Token>>, jule::Ptr<_2097d15d8_Token>);
inline jule::Slice<jule::Ptr<_1acadb456_Expr>> _1a3e063c3_buildArgs(_1a3e02347_exprBuilder*, jule::Slice<jule::Ptr<_2097d15d8_Token>>);
inline jule::Slice<jule::Ptr<_1acad72cb_TypeDecl>> _1a3e066d1_buildCallGenerics(_1a3e02347_exprBuilder*, jule::Slice<jule::Ptr<_2097d15d8_Token>>);
inline jule::Ptr<_1acae036c_FnCallExpr> _1a3e06b32_buildFnCall(_1a3e02347_exprBuilder*, jule::Ptr<_2097d15d8_Token>*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Any _1a3e06e40_buildParenthesesRange(_1a3e02347_exprBuilder*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Ptr<_1acadcac8_UnsafeExpr> _1a3e0724d_buildUnsafeExpr(_1a3e02347_exprBuilder*, jule::Slice<jule::Ptr<_2097d15d8_Token>>);
inline jule::Ptr<_1acae8908_FnDecl> _1a3e0755b_buildAnonFn(_1a3e02347_exprBuilder*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Any _1a3e07869_buildUnsafe(_1a3e02347_exprBuilder*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline void _1a3e07c32_pushRangeLitPart(_1a3e02347_exprBuilder*, jule::Slice<jule::Ptr<_2097d15d8_Token>>, jule::Ptr<_2097d15d8_Token>, jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>> _1a3e08062_getBraceRangeLitExprParts(_1a3e02347_exprBuilder*, jule::Slice<jule::Ptr<_2097d15d8_Token>>);
inline jule::Ptr<_1acae0ceb_FieldExprPair> _1a3e08381_buildFieldExprPair(_1a3e02347_exprBuilder*, jule::Slice<jule::Ptr<_2097d15d8_Token>>);
inline jule::Ptr<_1acadb456_Expr> _1a3e0868e_buildStructLitExpr(_1a3e02347_exprBuilder*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Slice<jule::Ptr<_1acadb456_Expr>> _1a3e0899c_buildStructLitExprs(_1a3e02347_exprBuilder*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Ptr<_1acae15c1_StructLit> _1a3e08ccc_buildTypedStructLiteral(_1a3e02347_exprBuilder*, jule::Slice<jule::Ptr<_2097d15d8_Token>>);
inline jule::Ptr<_1acadb456_Expr> _1a3e090eb_buildBraceLitPart(_1a3e02347_exprBuilder*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Ptr<_1acae1a44_BraceLit> _1a3e09409_buildBraceLit(_1a3e02347_exprBuilder*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Any _1a3e09717_buildBraceRange(_1a3e02347_exprBuilder*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>> _1a3e09a25_getEnumerableParts(_1a3e02347_exprBuilder*, jule::Slice<jule::Ptr<_2097d15d8_Token>>);
inline jule::Ptr<_1acae2a9a_SliceExpr> _1a3e09d33_buildSlice(_1a3e02347_exprBuilder*, jule::Slice<jule::Ptr<_2097d15d8_Token>>);
inline jule::Ptr<_1acae3408_IndexingExpr> _1a3e0a284_buildIndexing(_1a3e02347_exprBuilder*, jule::Slice<jule::Ptr<_2097d15d8_Token>>, jule::Slice<jule::Ptr<_2097d15d8_Token>>, jule::Ptr<_2097d15d8_Token>);
inline jule::Ptr<_1acae3a13_SlicingExpr> _1a3e0a828_buildSlicing(_1a3e02347_exprBuilder*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*, jule::Ptr<_2097d15d8_Token>*, jule::Ptr<_2097d15d8_Token>);
inline jule::Any _1a3e0ab36_buildBracketRange(_1a3e02347_exprBuilder*, jule::Slice<jule::Ptr<_2097d15d8_Token>>);
inline jule::Any _1a3e0ae44_buildData(_1a3e02347_exprBuilder*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Any _1a3e0b2eb_buildBinop(_1a3e02347_exprBuilder*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*, jule::I64);
inline jule::Any _1a3e0b609_build(_1a3e02347_exprBuilder*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Any _1a3e0b917_buildKind(_1a3e02347_exprBuilder*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Ptr<_1acadb456_Expr> _1a3e0bc25_buildFromTokens(_1a3e02347_exprBuilder*, jule::Slice<jule::Ptr<_2097d15d8_Token>>);
struct _1a3e02347_exprBuilder {
	jule::Ptr<_1a3e12577_parser> _field_p;
	

	inline bool operator==(_1a3e02347_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1a3e02347_exprBuilder _other) { return !this->operator==(_other); }


};
struct _1a3e0db7d_assignInfo {
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _field_l;
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _field_r;
	jule::Ptr<_2097d15d8_Token> _field_setter;
	jule::Bool _field_ok = false;
	


};
inline void _1a3e12863_stop(_1a3e12577_parser*);
inline jule::Bool _1a3e12ac7_stopped(_1a3e12577_parser*);
inline void _1a3e12e90_pushErr(_1a3e12577_parser*, jule::Ptr<_2097d15d8_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a3e132ae_pushSuggestion(_1a3e12577_parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1acadb456_Expr> _1a3e135bc_buildExpr(jule::Ptr<_1a3e12577_parser>, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Ptr<_1acaa47b5_Directive> _1a3e138ca_buildDirective(_1a3e12577_parser*, jule::Slice<jule::Ptr<_2097d15d8_Token>>);
inline void _1a3e13b50_pushDirective(_1a3e12577_parser*, jule::Ptr<_1acaa47b5_Directive>);
inline jule::Ptr<_1acae6e12_ScopeTree> _1a3e14007_buildScope(jule::Ptr<_1a3e12577_parser>, jule::Slice<jule::Ptr<_2097d15d8_Token>>*, jule::Ptr<_2097d15d8_Token>);
inline __jule_tuple_x_1acad72cb_TypeDecl__jule_tuple_bool _1a3e14458__buildType(jule::Ptr<_1a3e12577_parser>, jule::Slice<jule::Ptr<_2097d15d8_Token>>*, jule::I64*, jule::Bool);
inline __jule_tuple_x_1acad72cb_TypeDecl__jule_tuple_bool _1a3e148a9_buildType(jule::Ptr<_1a3e12577_parser>, jule::Slice<jule::Ptr<_2097d15d8_Token>>*, jule::I64*, jule::Bool);
inline jule::Ptr<_1acaed248_TypeAliasDecl> _1a3e14bb7_buildTypeAliasDecl(jule::Ptr<_1a3e12577_parser>, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline void _1a3e14ed6_buildVarTypeAndExpr(jule::Ptr<_1a3e12577_parser>, jule::Ptr<_1acae98d7_VarDecl>*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline void _1a3e15305_buildVarCommon(jule::Ptr<_1a3e12577_parser>, jule::Ptr<_1acae98d7_VarDecl>*, jule::Slice<jule::Ptr<_2097d15d8_Token>>);
inline void _1a3e156bd_buildVarBegin(_1a3e12577_parser*, jule::Ptr<_1acae98d7_VarDecl>*, jule::I64*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Ptr<_1acae98d7_VarDecl> _1a3e159cb_buildVar(jule::Ptr<_1a3e12577_parser>, jule::Slice<jule::Ptr<_2097d15d8_Token>>);
inline jule::Ptr<_1acae4272_GenericDecl> _1a3e15cd9_buildGeneric(jule::Ptr<_1a3e12577_parser>, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Slice<jule::Ptr<_1acae4272_GenericDecl>> _1a3e16191_buildGenerics(jule::Ptr<_1a3e12577_parser>, jule::Slice<jule::Ptr<_2097d15d8_Token>>*, jule::Ptr<_2097d15d8_Token>*);
inline jule::Ptr<_1acae75d8_ParamDecl> _1a3e1649e_buildSelfParam(_1a3e12577_parser*, jule::Slice<jule::Ptr<_2097d15d8_Token>>);
inline void _1a3e16867_paramTypeBegin(_1a3e12577_parser*, jule::Ptr<_1acae75d8_ParamDecl>*, jule::I64*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline void _1a3e16b86_buildParamType(jule::Ptr<_1a3e12577_parser>, jule::Ptr<_1acae75d8_ParamDecl>*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline void _1a3e16ea5_buildParamBody(jule::Ptr<_1a3e12577_parser>, jule::Ptr<_1acae75d8_ParamDecl>*, jule::Slice<jule::Ptr<_2097d15d8_Token>>);
inline jule::Ptr<_1acae75d8_ParamDecl> _1a3e172b3_buildParam(jule::Ptr<_1a3e12577_parser>, jule::Slice<jule::Ptr<_2097d15d8_Token>>);
inline void _1a3e17538_checkParams(_1a3e12577_parser*, jule::Slice<jule::Ptr<_1acae75d8_ParamDecl>>*);
inline jule::Slice<jule::Ptr<_1acae75d8_ParamDecl>> _1a3e178e0_buildParams(jule::Ptr<_1a3e12577_parser>, jule::Slice<jule::Ptr<_2097d15d8_Token>>*, jule::Bool);
inline __jule_tuple_x_1acada048_RetTypeDecl__jule_tuple_bool _1a3e17c97_buildMultiRetType(jule::Ptr<_1a3e12577_parser>, jule::Slice<jule::Ptr<_2097d15d8_Token>>*, jule::I64*);
inline __jule_tuple_x_1acada048_RetTypeDecl__jule_tuple_bool _1a3e1814e_buildRetType(jule::Ptr<_1a3e12577_parser>, jule::Slice<jule::Ptr<_2097d15d8_Token>>*, jule::I64*);
inline jule::Ptr<_1acae8908_FnDecl> _1a3e185a0_buildFnPrototype(jule::Ptr<_1a3e12577_parser>, jule::Slice<jule::Ptr<_2097d15d8_Token>>*, jule::I64*, jule::Bool);
inline jule::Ptr<_1acae8908_FnDecl> _1a3e18a01_buildFn(jule::Ptr<_1a3e12577_parser>, jule::Slice<jule::Ptr<_2097d15d8_Token>>*, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_2097d15d8_Token>> _1a3e18d0e_getUseDeclSelectors(_1a3e12577_parser*, jule::Slice<jule::Ptr<_2097d15d8_Token>>);
inline void _1a3e1912d_buildBindUseDecl(_1a3e12577_parser*, jule::Ptr<_1acaee634_UseDecl>*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline void _1a3e1944c_buildStdUseDecl(_1a3e12577_parser*, jule::Ptr<_1acaee634_UseDecl>*, jule::Slice<jule::Ptr<_2097d15d8_Token>>);
inline void _1a3e1976b_buildIdentUseDecl(_1a3e12577_parser*, jule::Ptr<_1acaee634_UseDecl>*, jule::Slice<jule::Ptr<_2097d15d8_Token>>);
inline void _1a3e19a8a_parseUseDecl(_1a3e12577_parser*, jule::Ptr<_1acaee634_UseDecl>*, jule::Slice<jule::Ptr<_2097d15d8_Token>>);
inline jule::Ptr<_1acaee634_UseDecl> _1a3e19e42_buildUseDecl(_1a3e12577_parser*, jule::Slice<jule::Ptr<_2097d15d8_Token>>, jule::Bool);
inline jule::Ptr<_1acad72cb_TypeDecl> _1a3e1a2e9_buildTypeEnumItemKind(jule::Ptr<_1a3e12577_parser>, jule::I64*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Slice<jule::Ptr<_1acb00da5_TypeEnumItemDecl>> _1a3e1a607_buildTypeEnumItems(jule::Ptr<_1a3e12577_parser>, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Ptr<_1acb014b0_TypeEnumDecl> _1a3e1a915_buildTypeEnumDecl(jule::Ptr<_1a3e12577_parser>, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Ptr<_1acadb456_Expr> _1a3e1acbc_buildEnumItemExpr(jule::Ptr<_1a3e12577_parser>, jule::I64*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Slice<jule::Ptr<_1acaeeaa7_EnumItemDecl>> _1a3e1b0ca_buildEnumItems(jule::Ptr<_1a3e12577_parser>, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Ptr<_1acb005d0_EnumDecl> _1a3e1b3d8_buildEnumDecl(jule::Ptr<_1a3e12577_parser>, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Any _1a3e1b6e6_buildNodeEnumDecl(jule::Ptr<_1a3e12577_parser>, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Ptr<_1acb01724_FieldDecl> _1a3e1ba04_buildField(jule::Ptr<_1a3e12577_parser>, jule::Slice<jule::Ptr<_2097d15d8_Token>>);
inline jule::Slice<jule::Ptr<_1acb01724_FieldDecl>> _1a3e1bd12_buildStructDeclFields(jule::Ptr<_1a3e12577_parser>, jule::Slice<jule::Ptr<_2097d15d8_Token>>);
inline jule::Ptr<_1acb02071_StructDecl> _1a3e1c120_buildStructDecl(jule::Ptr<_1a3e12577_parser>, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline void _1a3e1c395_checkMethodReceiver(_1a3e12577_parser*, jule::Ptr<_1acae8908_FnDecl>*);
inline void _1a3e1c6b4_buildTraitBody(jule::Ptr<_1a3e12577_parser>, jule::Ptr<_1acb02747_TraitDecl>*, jule::Slice<jule::Ptr<_2097d15d8_Token>>);
inline jule::Ptr<_1acb02747_TraitDecl> _1a3e1c9c2_buildTraitDecl(jule::Ptr<_1a3e12577_parser>, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Ptr<_1acae8908_FnDecl> _1a3e1ccd0_buildBindFn(jule::Ptr<_1a3e12577_parser>, jule::Slice<jule::Ptr<_2097d15d8_Token>>);
inline jule::Ptr<_1acae98d7_VarDecl> _1a3e1d0dd_buildBindVar(jule::Ptr<_1a3e12577_parser>, jule::Slice<jule::Ptr<_2097d15d8_Token>>);
inline jule::Ptr<_1acb02071_StructDecl> _1a3e1d3eb_buildBindStruct(jule::Ptr<_1a3e12577_parser>, jule::Slice<jule::Ptr<_2097d15d8_Token>>);
inline jule::Ptr<_1acaed248_TypeAliasDecl> _1a3e1d709_buildBindTypeAlias(jule::Ptr<_1a3e12577_parser>, jule::Slice<jule::Ptr<_2097d15d8_Token>>);
inline jule::Ptr<_1acaee634_UseDecl> _1a3e1da17_buildBindUse(jule::Ptr<_1a3e12577_parser>, jule::Slice<jule::Ptr<_2097d15d8_Token>>);
inline jule::Any _1a3e1dd25_buildBind(jule::Ptr<_1a3e12577_parser>, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Ptr<_1acae8908_FnDecl> _1a3e1e133_getMethod(jule::Ptr<_1a3e12577_parser>, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline void _1a3e1e452_parseImplBody(jule::Ptr<_1a3e12577_parser>, jule::Ptr<_1acb02d52_Impl>*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Ptr<_1acb02d52_Impl> _1a3e1e760_buildImpl(jule::Ptr<_1a3e12577_parser>, jule::Slice<jule::Ptr<_2097d15d8_Token>>);
inline jule::Any _1a3e1ea6d_buildNodeData(jule::Ptr<_1a3e12577_parser>, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline void _1a3e1ece3_applyFnMeta(_1a3e12577_parser*, jule::Ptr<_1acae8908_FnDecl>*);
inline void _1a3e20068_applyMeta(_1a3e12577_parser*, _1acaa43b9_Node*);
inline void _1a3e202dd_pushUseDecl(jule::Ptr<_1a3e12577_parser>, jule::Ptr<_1acaee634_UseDecl>*);
inline jule::Bool _1a3e205eb_pushMetaNodes(jule::Ptr<_1a3e12577_parser>, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline _1acaa43b9_Node _1a3e20909_parseNode(jule::Ptr<_1a3e12577_parser>, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline void _1a3e20b7e_appendNode(jule::Ptr<_1a3e12577_parser>, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline void _1a3e210e1_removeRange(_1a3e12577_parser*, jule::I64, jule::Str, jule::Slice<jule::Ptr<_2097d15d8_Token>>*, jule::Slice<jule::I64>*);
inline void _1a3e214a9_pushWrongOrderCloseErr(_1a3e12577_parser*, jule::Ptr<_2097d15d8_Token>*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*, jule::Slice<jule::I64>*);
inline void _1a3e2191b_pushRangeClose(_1a3e12577_parser*, jule::Ptr<_2097d15d8_Token>, jule::Str, jule::Slice<jule::Ptr<_2097d15d8_Token>>*, jule::Slice<jule::I64>*);
inline void _1a3e21b91_checkRanges(_1a3e12577_parser*, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline void _1a3e21e16_parse(jule::Ptr<_1a3e12577_parser>, jule::Ptr<_2097d6973_File>*);
struct _1a3e12577_parser {
	jule::Ptr<_1acaa352d_Ast> _field_ast;
	jule::Slice<jule::Ptr<_1acaa47b5_Directive>> _field_directives;
	jule::Slice<_20943da3c_Log> _field_errors;
	jule::Ptr<_1a3e02347_exprBuilder> _field_ep;
	


};
inline void _1a3e2381e_pushErr(_1a3e2329c_typeBuilder*, jule::Ptr<_2097d15d8_Token>, jule::Str);
inline void _1a3e23b3d_pushSuggestion(_1a3e2329c_typeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1acad72cb_TypeDecl> _1a3e23da2_buildNamespace(_1a3e2329c_typeBuilder*);
inline jule::Slice<jule::Ptr<_1acad72cb_TypeDecl>> _1a3e24116_buildGenerics(_1a3e2329c_typeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>> _1a3e2437a_identGenerics(_1a3e2329c_typeBuilder*);
inline jule::Ptr<_1acad72cb_TypeDecl> _1a3e245de_buildIdent(_1a3e2329c_typeBuilder*);
inline jule::Ptr<_1acad72cb_TypeDecl> _1a3e24853_buildCppLink(_1a3e2329c_typeBuilder*);
inline jule::Ptr<_1acad72cb_TypeDecl> _1a3e24ab7_buildFn(_1a3e2329c_typeBuilder*);
inline jule::Ptr<_1acad72cb_TypeDecl> _1a3e24d2b_buildPtr(_1a3e2329c_typeBuilder*);
inline jule::Ptr<_1acad72cb_TypeDecl> _1a3e25090_buildSptr(_1a3e2329c_typeBuilder*);
inline jule::Ptr<_1acad72cb_TypeDecl> _1a3e25304_buildOp(_1a3e2329c_typeBuilder*);
inline jule::Ptr<_1acad72cb_TypeDecl> _1a3e25568_buildSlc(_1a3e2329c_typeBuilder*);
inline jule::Ptr<_1acad72cb_TypeDecl> _1a3e257cc_buildArr(_1a3e2329c_typeBuilder*);
inline jule::Ptr<_1acad72cb_TypeDecl> _1a3e25a41_buildMap(_1a3e2329c_typeBuilder*);
inline jule::Ptr<_1acad72cb_TypeDecl> _1a3e25ca5_buildEnumerable(_1a3e2329c_typeBuilder*);
inline jule::Ptr<_1acad72cb_TypeDecl> _1a3e26019_step(_1a3e2329c_typeBuilder*);
inline __jule_tuple_x_1acad72cb_TypeDecl__jule_tuple_bool _1a3e2627d_build(_1a3e2329c_typeBuilder*);
struct _1a3e2329c_typeBuilder {
	jule::Ptr<_1a3e12577_parser> _field_p;
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _field_tokens;
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = false;
	


};
struct _1ace622c1_CompileInfo {
	jule::Bool _field_Prod = false;
	jule::Bool _field_Test = false;
	jule::Str _field_Compiler = jule::Str("clang", 5);
	jule::Str _field_CppStd = jule::Str("cpp14", 5);
	

	inline bool operator==(_1ace622c1_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_1ace622c1_CompileInfo _other) { return !this->operator==(_other); }


};
inline void _1ace63b30_pushErr(_1ace63624_directiveEval*, jule::Ptr<_2097d15d8_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>> _1ace63ed7_splitOperans(_1ace63624_directiveEval*, jule::Str, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Bool _1ace642e5_evalDirectiveIdent(_1ace63624_directiveEval*, jule::Str);
inline jule::Bool _1ace64603_evalDirectivePart(_1ace63624_directiveEval*, jule::Slice<jule::Ptr<_2097d15d8_Token>>);
inline jule::Bool _1ace64867_eval(_1ace63624_directiveEval*);
struct _1ace63624_directiveEval {
	jule::Slice<_20943da3c_Log> _field_logs;
	jule::Ptr<_1acaa47b5_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	


};
inline jule::Ptr<_1a3e27290_JuleImporter> static__1a3e2767a_New(_1ace622c1_CompileInfo);
inline jule::Slice<jule::Ptr<_1abcdb39e_ImportInfo>> _1a3e278de_AllPackages(_1a3e27290_JuleImporter*);
inline void _1a3e27ceb_SetModPath(_1a3e27290_JuleImporter*, jule::Str);
inline jule::Str _1a3e28060_GetModPath(_1a3e27290_JuleImporter*);
inline jule::Str _1a3e2836d_ModById(_1a3e27290_JuleImporter*, jule::I64);
inline jule::Ptr<_1abcdb39e_ImportInfo> _1a3e2867b_GetImport(_1a3e27290_JuleImporter*, jule::Str);
inline __jule_tuple_sx_1acaa352d_Ast__jule_tuple_s_20943da3c_Log _1a3e28a33_ImportPackage(_1a3e27290_JuleImporter*, jule::Str, jule::Bool);
inline void _1a3e28ca8_Imported(_1a3e27290_JuleImporter*, jule::Ptr<_1abcdb39e_ImportInfo>);
inline __jule_tuple_bool__jule_tuple_s_20943da3c_Log _1a3e291a4_isPassBuildDirectives(_1a3e27290_JuleImporter*, jule::Ptr<_1acaa352d_Ast>*);
struct _1a3e27290_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1abcdb39e_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _1a3e2c042_OrderedDefines {
	jule::Slice<jule::Ptr<_1acb07021_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1abd1497c_Var>> _field_Globals;
	


};
inline jule::Bool _1a6c9665b_isCommonOrdered(jule::Slice<jule::Ptr<_1acb07021_Struct>>, jule::Ptr<_1acb07021_Struct>);
inline jule::Bool _1a6c9b056_isCommonOrdered(jule::Slice<jule::Ptr<_1abd1497c_Var>>, jule::Ptr<_1abd1497c_Var>);
inline void _1a6c9327e_orderCommon(jule::Slice<jule::Ptr<_1acb07021_Struct>>*);
inline void _1a6c93aba_orderCommon(jule::Slice<jule::Ptr<_1abd1497c_Var>>*);
inline void static__1a3e2cb36_orderStructures(jule::Slice<jule::Ptr<_1acb07021_Struct>>*);
inline void static__1a3e2cd45_orderVars(jule::Slice<jule::Ptr<_1abd1497c_Var>>*);
struct _1a3e2c2a6_defineOrderer {
	

	inline bool operator==(_1a3e2c2a6_defineOrderer _other) { return true; }

	inline bool operator!=(_1a3e2c2a6_defineOrderer _other) { return !this->operator==(_other); }


};
struct _1a4024b95_liveTable {
	jule::Slice<jule::Ptr<_1abd1497c_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1acb24d85_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1acb09d37_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1acb34405_Trait>> _field_traits;
	


};
inline void _1a405adb8_optimizeChild(jule::Ptr<_1a405a934_scopeDeadCode>, jule::Ptr<_1abcbc935_Scope>*);
inline void _1a405b160_optimizeBodyChildExceptional(jule::Ptr<_1a405a934_scopeDeadCode>, jule::Ptr<_1abcbc935_Scope>*);
inline void _1a405b3e6_optimizeBodyChild(jule::Ptr<_1a405a934_scopeDeadCode>, jule::Ptr<_1abcbc935_Scope>*);
inline void _1a405b66b_optimizeExprModel(jule::Ptr<_1a405a934_scopeDeadCode>, jule::Any*);
inline void _1a405b847_eliminateFollowed(_1a405a934_scopeDeadCode*);
inline void _1a405babc_pushGoto(jule::Ptr<_1a405a934_scopeDeadCode>, jule::Ptr<_1abcc0460_GotoSt>);
inline void _1a405bd42_pushLabel(jule::Ptr<_1a405a934_scopeDeadCode>, jule::Ptr<_1abcc0174_Label>);
inline void _1a405c0b7_optimizeRangeIter(jule::Ptr<_1a405a934_scopeDeadCode>, jule::Ptr<_1abcbe5d5_RangeIter>);
inline void _1a405c33c_optimizeWhileIter(jule::Ptr<_1a405a934_scopeDeadCode>, jule::Ptr<_1abcbdc00_WhileIter>);
inline void _1a405c5b2_optimizeInfIter(jule::Ptr<_1a405a934_scopeDeadCode>, jule::Ptr<_1abcbd77c_InfIter>);
inline void _1a405c837_optimizeConditional(jule::Ptr<_1a405a934_scopeDeadCode>, jule::Ptr<_1abcbd491_Conditional>);
inline void _1a405caac_optimizeMatch(jule::Ptr<_1a405a934_scopeDeadCode>, jule::Ptr<_1abcc174c_Match>);
inline void _1a405cd32_optimizeAssign(jule::Ptr<_1a405a934_scopeDeadCode>, jule::Ptr<_1abcc0c8a_Assign>);
inline void _1a405d0a7_optimizeMultiAssign(jule::Ptr<_1a405a934_scopeDeadCode>, jule::Ptr<_1abcc1142_MultiAssign>);
inline void _1a405d32c_optimizeStmt(jule::Ptr<_1a405a934_scopeDeadCode>, jule::Any);
inline void _1a405d508_optimizeStmts(jule::Ptr<_1a405a934_scopeDeadCode>);
struct _1a405a934_scopeDeadCode {
	jule::Ptr<_1a405a934_scopeDeadCode> _field_parent;
	jule::Ptr<_1abcbc935_Scope> _field_s;
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1abcc0174_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1abcc0460_GotoSt>>> _field_gotos;
	jule::Bool _field_except = false;
	

	inline bool operator==(_1a405a934_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_1a405a934_scopeDeadCode _other) { return !this->operator==(_other); }


};
inline _1a405e88e_exprDeadCode static__1a405ee77_new(jule::Ptr<_1a405a934_scopeDeadCode>*);
inline void _1a40601ec_binary(_1a405e88e_exprDeadCode*, jule::Ptr<_1acb0e204_BinopExprModel>);
inline void _1a4060472_unary(_1a405e88e_exprDeadCode*, jule::Ptr<_1acb0e5ab_UnaryExprModel>);
inline void _1a40606e7_structureLit(_1a405e88e_exprDeadCode*, jule::Ptr<_1acb0ed5e_StructLitExprModel>);
inline void _1a406096c_allocStructure(_1a405e88e_exprDeadCode*, jule::Ptr<_1acb1016c_AllocStructLitExprModel>);
inline void _1a4060be2_casting(_1a405e88e_exprDeadCode*, jule::Ptr<_1acb106bc_CastingExprModel>);
inline void _1a4060e67_args(_1a405e88e_exprDeadCode*, jule::Slice<jule::Any>*);
inline void _1a40611dc_funcCall(_1a405e88e_exprDeadCode*, jule::Ptr<_1acb1106e_FnCallExprModel>);
inline void _1a4061462_slice(_1a405e88e_exprDeadCode*, jule::Ptr<_1acb11426_SliceExprModel>);
inline void _1a40616d7_array(_1a405e88e_exprDeadCode*, jule::Ptr<_1acb1414e_ArrayExprModel>);
inline void _1a406195c_indexing(_1a405e88e_exprDeadCode*, jule::Ptr<_1acb11899_IndexingExprModel>);
inline void _1a4061bd2_anonFunc(_1a405e88e_exprDeadCode*, jule::Ptr<_1acb11c51_AnonFnExprModel>);
inline void _1a4061e57_mapExpr(_1a405e88e_exprDeadCode*, jule::Ptr<_1acb1257b_MapExprModel>);
inline void _1a40621cc_slicing(_1a405e88e_exprDeadCode*, jule::Ptr<_1acb12aba_SlicingExprModel>);
inline void _1a4062452_traitSub(_1a405e88e_exprDeadCode*, jule::Ptr<_1acb13109_TraitSubIdentExprModel>);
inline void _1a40626c7_structureSub(_1a405e88e_exprDeadCode*, jule::Ptr<_1acb138e0_StructSubIdentExprModel>);
inline void _1a406294c_commonSub(_1a405e88e_exprDeadCode*, jule::Ptr<_1acb1499b_CommonSubIdentExprModel>);
inline void _1a4062bc2_tuple(_1a405e88e_exprDeadCode*, jule::Ptr<_1acb14c98_TupleExprModel>);
inline void _1a4062e47_newCall(_1a405e88e_exprDeadCode*, jule::Ptr<_1acb15c66_BuiltinNewCallExprModel>);
inline void _1a40631bc_outCall(_1a405e88e_exprDeadCode*, jule::Ptr<_1acb15172_BuiltinOutCallExprModel>);
inline void _1a4063442_outlnCall(_1a405e88e_exprDeadCode*, jule::Ptr<_1acb1555c_BuiltinOutlnCallExprModel>);
inline void _1a40636b7_panicCall(_1a405e88e_exprDeadCode*, jule::Ptr<_1acb16151_BuiltinPanicCallExprModel>);
inline void _1a406393c_assertCall(_1a405e88e_exprDeadCode*, jule::Ptr<_1acb16607_BuiltinAssertCallExprModel>);
inline void _1a4063bb2_errorCall(_1a405e88e_exprDeadCode*, jule::Ptr<_1acb1d345_BuiltinErrorCallExprModel>);
inline void _1a4063e37_makeCall(_1a405e88e_exprDeadCode*, jule::Ptr<_1acb16aad_BuiltinMakeCallExprModel>);
inline void _1a40641ac_appendCall(_1a405e88e_exprDeadCode*, jule::Ptr<_1acb16e98_BuiltinAppendCallExprModel>);
inline void _1a4064432_lenCall(_1a405e88e_exprDeadCode*, jule::Ptr<_1acb172b7_BuiltinLenCallExprModel>);
inline void _1a40646a7_capCall(_1a405e88e_exprDeadCode*, jule::Ptr<_1acb175d6_BuiltinCapCallExprModel>);
inline void _1a406492c_cloneCall(_1a405e88e_exprDeadCode*, jule::Ptr<_1acb1587b_BuiltinCloneCallExprModel>);
inline void _1a4064ba2_deleteCall(_1a405e88e_exprDeadCode*, jule::Ptr<_1acb1cb19_BuiltinDeleteCallExprModel>);
inline void _1a4064e27_sizeof(_1a405e88e_exprDeadCode*, jule::Ptr<_1acb1d642_SizeofExprModel>);
inline void _1a406519c_alignof(_1a405e88e_exprDeadCode*, jule::Ptr<_1acb1d92d_AlignofExprModel>);
inline void _1a4065422_integratedToStr(_1a405e88e_exprDeadCode*, jule::Ptr<_1acb1e027_IntegratedToStrExprModel>);
inline void _1a4065697_free(_1a405e88e_exprDeadCode*, jule::Ptr<_1acb1e6cb_FreeExprModel>);
inline void _1a406591c_backendEmit(_1a405e88e_exprDeadCode*, jule::Ptr<_1acb1e3e0_BackendEmitExprModel>);
inline void _1a4065b92_optimize(_1a405e88e_exprDeadCode*, jule::Any*);
struct _1a405e88e_exprDeadCode {
	jule::Ptr<_1a405a934_scopeDeadCode> _field_s;
	

	inline bool operator==(_1a405e88e_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1a405e88e_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _1acd78e1e_StrCompExprModel {
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Ptr<_1ddeb4b1c_Const> _field_Right;
	jule::Bool _field_NotEq = false;
	

	inline bool operator==(_1acd78e1e_StrCompExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_NotEq == _other._field_NotEq;
	}

	inline bool operator!=(_1acd78e1e_StrCompExprModel _other) { return !this->operator==(_other); }


};
struct _1acd792d7_StrAppendExprModel {
	jule::Any _field_Str = jule::Any(nullptr);
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1acd792d7_StrAppendExprModel _other) {
		return 
			this->_field_Str == _other._field_Str &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1acd792d7_StrAppendExprModel _other) { return !this->operator==(_other); }


};
struct _1acd795c3_UnsafeBinopExprModel {
	jule::Ptr<_1acb0e204_BinopExprModel> _field_Node;
	

	inline bool operator==(_1acd795c3_UnsafeBinopExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1acd795c3_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _1acd79958_UnsafeIndexingExprModel {
	jule::Ptr<_1acb11899_IndexingExprModel> _field_Node;
	

	inline bool operator==(_1acd79958_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1acd79958_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1acd79cdd_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Ptr<_1acb11426_SliceExprModel> _field_Elems;
	

	inline bool operator==(_1acd79cdd_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1acd79cdd_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1acd7a195_AppendToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Slice = jule::Any(nullptr);
	

	inline bool operator==(_1acd7a195_AppendToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Slice == _other._field_Slice;
	}

	inline bool operator!=(_1acd7a195_AppendToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1acd7a6d4_MutSlicingExprModel {
	jule::Ptr<_2097d15d8_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_1acd7a6d4_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1acd7a6d4_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1acd7abbd_StrInsertBeginExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1acd7abbd_StrInsertBeginExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1acd7abbd_StrInsertBeginExprModel _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1acd7bcbd_scopeOptimizer> static__1acd7c2da_new(jule::Ptr<_1abcbc935_Scope>);
inline void _1acd7c560_setCurrentStmt(_1acd7bcbd_scopeOptimizer*, jule::Any);
inline void _1acd7c7d5_optimizeData(_1acd7bcbd_scopeOptimizer*, jule::Ptr<_1abd5dc4b_Data>);
inline void _1acd7ca5a_optimizeVar(_1acd7bcbd_scopeOptimizer*, jule::Ptr<_1abd1497c_Var>);
inline void _1acd7ccd0_optimizeConditional(_1acd7bcbd_scopeOptimizer*, jule::Ptr<_1abcbd491_Conditional>);
inline void _1acd7d1ba_buildDefaultConstantTrueCase(_1acd7bcbd_scopeOptimizer*, jule::Ptr<_1abcc2297_Case>, jule::I64*, jule::Ptr<_1abcc174c_Match>*);
inline void _1acd7d3c9_optimizeMatch(_1acd7bcbd_scopeOptimizer*, jule::Ptr<_1abcc174c_Match>);
inline void _1acd7d64e_optimizeRangeIter(_1acd7bcbd_scopeOptimizer*, jule::Ptr<_1abcbe5d5_RangeIter>);
inline void _1acd7d8c4_optimizeWhileIter(_1acd7bcbd_scopeOptimizer*, jule::Ptr<_1abcbdc00_WhileIter>);
inline jule::Bool _1acd7dbd2_substr(_1acd7bcbd_scopeOptimizer*, jule::Ptr<_1abcc0c8a_Assign>);
inline jule::Bool _1acd7dee0_strInsert(_1acd7bcbd_scopeOptimizer*, jule::Ptr<_1abcc0c8a_Assign>);
inline jule::Bool _1acd7e2ed_strAppend(_1acd7bcbd_scopeOptimizer*, jule::Ptr<_1abcc0c8a_Assign>);
inline jule::Bool _1acd7e60b_strAssign(_1acd7bcbd_scopeOptimizer*, jule::Ptr<_1abcc0c8a_Assign>);
inline void _1acd7e881_optimizeAssign(_1acd7bcbd_scopeOptimizer*, jule::Ptr<_1abcc0c8a_Assign>);
inline void _1acd7eb06_optimizeMultiAssign(_1acd7bcbd_scopeOptimizer*, jule::Ptr<_1abcc1142_MultiAssign>);
inline void _1acd7ed7b_optimizeRet(_1acd7bcbd_scopeOptimizer*, jule::Ptr<_1abcc2bc1_RetSt>);
inline void _1acd80101_optimizeStmt(_1acd7bcbd_scopeOptimizer*, jule::Any);
inline void _1acd80376_optimizeChild(_1acd7bcbd_scopeOptimizer*, jule::Ptr<_1abcbc935_Scope>);
inline void _1acd80552_optimize(_1acd7bcbd_scopeOptimizer*);
struct _1acd7bcbd_scopeOptimizer {
	jule::I64 _field_i = 0;
	jule::Ptr<_1abcbc935_Scope> _field_scope;
	

	inline bool operator==(_1acd7bcbd_scopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1acd7bcbd_scopeOptimizer _other) { return !this->operator==(_other); }


};
inline void static__1acd82bb4_optimize(jule::Any*);
inline jule::Bool _1acd82eb1_strCond(_1acd826b9_exprOptimizer*, jule::Ptr<_1acb0e204_BinopExprModel>);
inline void _1acd83236_binary(_1acd826b9_exprOptimizer*, jule::Ptr<_1acb0e204_BinopExprModel>);
inline void _1acd834ab_unary(_1acd826b9_exprOptimizer*, jule::Ptr<_1acb0e5ab_UnaryExprModel>);
inline void _1acd83731_structureLit(_1acd826b9_exprOptimizer*, jule::Ptr<_1acb0ed5e_StructLitExprModel>);
inline void _1acd839a6_allocStructure(_1acd826b9_exprOptimizer*, jule::Ptr<_1acb1016c_AllocStructLitExprModel>);
inline void _1acd83c2b_casting(_1acd826b9_exprOptimizer*, jule::Ptr<_1acb106bc_CastingExprModel>);
inline void _1acd83ea1_args(_1acd826b9_exprOptimizer*, jule::Slice<jule::Any>*);
inline void _1acd84226_scope(_1acd826b9_exprOptimizer*, jule::Ptr<_1abcbc935_Scope>*);
inline void _1acd8449b_funcCall(_1acd826b9_exprOptimizer*, jule::Ptr<_1acb1106e_FnCallExprModel>);
inline void _1acd84721_slice(_1acd826b9_exprOptimizer*, jule::Ptr<_1acb11426_SliceExprModel>);
inline void _1acd84996_array(_1acd826b9_exprOptimizer*, jule::Ptr<_1acb1414e_ArrayExprModel>);
inline void _1acd84c1b_indexing(_1acd826b9_exprOptimizer*, jule::Ptr<_1acb11899_IndexingExprModel>);
inline void _1acd84e91_anonFunc(_1acd826b9_exprOptimizer*, jule::Ptr<_1acb11c51_AnonFnExprModel>);
inline void _1acd85216_mapExpr(_1acd826b9_exprOptimizer*, jule::Ptr<_1acb1257b_MapExprModel>);
inline void _1acd8548b_slicing(_1acd826b9_exprOptimizer*, jule::Ptr<_1acb12aba_SlicingExprModel>);
inline void _1acd85711_traitSub(_1acd826b9_exprOptimizer*, jule::Ptr<_1acb13109_TraitSubIdentExprModel>);
inline void _1acd85986_structureSub(_1acd826b9_exprOptimizer*, jule::Ptr<_1acb138e0_StructSubIdentExprModel>);
inline void _1acd85c0b_commonSub(_1acd826b9_exprOptimizer*, jule::Ptr<_1acb1499b_CommonSubIdentExprModel>);
inline void _1acd85e81_tuple(_1acd826b9_exprOptimizer*, jule::Ptr<_1acb14c98_TupleExprModel>);
inline void _1acd86206_newCall(_1acd826b9_exprOptimizer*, jule::Ptr<_1acb15c66_BuiltinNewCallExprModel>);
inline void _1acd8647b_outCall(_1acd826b9_exprOptimizer*, jule::Ptr<_1acb15172_BuiltinOutCallExprModel>);
inline void _1acd86701_outlnCall(_1acd826b9_exprOptimizer*, jule::Ptr<_1acb1555c_BuiltinOutlnCallExprModel>);
inline void _1acd86976_panicCall(_1acd826b9_exprOptimizer*, jule::Ptr<_1acb16151_BuiltinPanicCallExprModel>);
inline void _1acd86beb_assertCall(_1acd826b9_exprOptimizer*, jule::Ptr<_1acb16607_BuiltinAssertCallExprModel>);
inline void _1acd86e71_errorCall(_1acd826b9_exprOptimizer*, jule::Ptr<_1acb1d345_BuiltinErrorCallExprModel>);
inline void _1acd871e6_makeCall(_1acd826b9_exprOptimizer*, jule::Ptr<_1acb16aad_BuiltinMakeCallExprModel>);
inline void _1acd8746b_appendCall(_1acd826b9_exprOptimizer*, jule::Ptr<_1acb16e98_BuiltinAppendCallExprModel>);
inline void _1acd876e1_lenCall(_1acd826b9_exprOptimizer*, jule::Ptr<_1acb172b7_BuiltinLenCallExprModel>);
inline void _1acd87966_capCall(_1acd826b9_exprOptimizer*, jule::Ptr<_1acb175d6_BuiltinCapCallExprModel>);
inline void _1acd87bdb_cloneCall(_1acd826b9_exprOptimizer*, jule::Ptr<_1acb1587b_BuiltinCloneCallExprModel>);
inline void _1acd87e61_deleteCall(_1acd826b9_exprOptimizer*, jule::Ptr<_1acb1cb19_BuiltinDeleteCallExprModel>);
inline void _1acd881d6_sizeof(_1acd826b9_exprOptimizer*, jule::Ptr<_1acb1d642_SizeofExprModel>);
inline void _1acd8845b_alignof(_1acd826b9_exprOptimizer*, jule::Ptr<_1acb1d92d_AlignofExprModel>);
inline void _1acd886d1_integratedToStr(_1acd826b9_exprOptimizer*, jule::Ptr<_1acb1e027_IntegratedToStrExprModel>);
inline void _1acd88956_free(_1acd826b9_exprOptimizer*, jule::Ptr<_1acb1e6cb_FreeExprModel>);
inline void _1acd88bcb_backendEmit(_1acd826b9_exprOptimizer*, jule::Ptr<_1acb1e3e0_BackendEmitExprModel>);
inline void _1acd88da7_do(_1acd826b9_exprOptimizer*);
struct _1acd826b9_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	

	inline bool operator==(_1acd826b9_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1acd826b9_exprOptimizer _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a4066654_Optimizer> static__1a4066ab6_New(jule::Ptr<_1a3e29a01_IR>*);
inline void _1a4066d3b_optimizeGlobal(_1a4066654_Optimizer*, jule::Ptr<_1abd1497c_Var>*);
inline void _1a40670b1_optimizeFunction(_1a4066654_Optimizer*, jule::Ptr<_1acb221d4_Fn>*);
inline void _1a4067336_optimizeStruct(_1a4066654_Optimizer*, jule::Ptr<_1acb07021_Struct>*);
inline void _1a40675ab_optimizeGlobals(_1a4066654_Optimizer*, jule::Ptr<_1abcdded9_Package>*);
inline void _1a4067831_optimizeFunctions(_1a4066654_Optimizer*, jule::Ptr<_1abcdded9_Package>*);
inline void _1a4067aa6_optimizeStructs(_1a4066654_Optimizer*, jule::Ptr<_1abcdded9_Package>*);
inline void _1a4067d2b_optimizePackage(_1a4066654_Optimizer*, jule::Ptr<_1abcdded9_Package>*);
inline void _1a4068007_Optimize(_1a4066654_Optimizer*);
struct _1a4066654_Optimizer {
	jule::Ptr<_1a3e29a01_IR> _field_ir;
	

	inline bool operator==(_1a4066654_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1a4066654_Optimizer _other) { return !this->operator==(_other); }


};
inline void static__1a4068898_Reset(void);
inline void static__1a4087a3d_Print(jule::Str, jule::Str);
struct _1a4088ac7_AnsiEscape {
	

	inline bool operator==(_1a4088ac7_AnsiEscape _other) { return true; }

	inline bool operator!=(_1a4088ac7_AnsiEscape _other) { return !this->operator==(_other); }


};
inline void static__1a408a39d_LogFlat(_20943da3c_Log*);
inline void static__1a408a5ac_LogError(_20943da3c_Log*);
inline void static__1a408a7bb_Log(_20943da3c_Log*);
inline void static__1a408a9ca_PrintLogs(jule::Slice<_20943da3c_Log>*);
struct _1a408a15b_Logger {
	

	inline bool operator==(_1a408a15b_Logger _other) { return true; }

	inline bool operator!=(_1a408a15b_Logger _other) { return !this->operator==(_other); }


};
inline jule::U64 _1a48ca88b_Unix(_1a48ca528_AbsTime*);
struct _1a48ca528_AbsTime {
	jule::U64 _field_Day = 0;
	jule::U64 _field_WeekDay = 0;
	jule::U64 _field_YearDay = 0;
	jule::U64 _field_Month = 0;
	jule::U64 _field_Year = 0;
	jule::U64 _field_Second = 0;
	jule::U64 _field_Minute = 0;
	jule::U64 _field_Hour = 0;
	

	inline bool operator==(_1a48ca528_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_1a48ca528_AbsTime _other) { return !this->operator==(_other); }


};
inline _1a48cabbb_Time static__1a48cb062_Unix(jule::U64);
inline _1a48cabbb_Time static__1a48cb260_Now(void);
inline jule::U64 _1a48cb639_Unix(_1a48cabbb_Time*);
inline jule::U64 _1a48cb89d_Day(_1a48cabbb_Time*);
inline jule::U64 _1a48cbb12_Month(_1a48cabbb_Time*);
inline jule::U64 _1a48cbd76_Year(_1a48cabbb_Time*);
inline jule::U64 _1a48cc0da_Second(_1a48cabbb_Time*);
inline jule::U64 _1a48cc34e_Minute(_1a48cabbb_Time*);
inline jule::U64 _1a48cc5b3_Hour(_1a48cabbb_Time*);
inline _1a48ca528_AbsTime _1a48cc827_Abs(_1a48cabbb_Time*);
struct _1a48cabbb_Time {
	jule::U64 _field_sec = 0;
	

	inline bool operator==(_1a48cabbb_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1a48cabbb_Time _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a482044b_scopeCoder> static__1a4820a45_new(jule::Ptr<_1a48d4c4c_ObjectCoder>*);
inline void _1a700deab_iterHead(jule::Ptr<_1a482044b_scopeCoder>, jule::Ptr<_1abcbe5d5_RangeIter>*, jule::Bool*, jule::Str*);
inline void _1a4821183_rangeIndexIter(jule::Ptr<_1a482044b_scopeCoder>, jule::Ptr<_1abcbe5d5_RangeIter>*);
inline void _1a4821408_rangeHashmapIter(jule::Ptr<_1a482044b_scopeCoder>, jule::Ptr<_1abcbe5d5_RangeIter>*);
inline void _1a482167d_ifCase(jule::Ptr<_1a482044b_scopeCoder>, jule::Ptr<_1abcbcd31_If>);
inline void _1a4821903_conditional(jule::Ptr<_1a482044b_scopeCoder>, jule::Ptr<_1abcbd491_Conditional>);
inline void _1a4821b78_infIter(jule::Ptr<_1a482044b_scopeCoder>, jule::Ptr<_1abcbd77c_InfIter>);
inline void _1a4821ded_whileIter(jule::Ptr<_1a482044b_scopeCoder>, jule::Ptr<_1abcbdc00_WhileIter>);
inline void _1a4822173_rangeIter(jule::Ptr<_1a482044b_scopeCoder>, jule::Ptr<_1abcbe5d5_RangeIter>);
inline void _1a48223e8_cont(jule::Ptr<_1a482044b_scopeCoder>, jule::Ptr<_1abcbe9d1_ContSt>);
inline void _1a482266d_label(jule::Ptr<_1a482044b_scopeCoder>, jule::Ptr<_1abcc0174_Label>);
inline void _1a48228e3_gotoSt(jule::Ptr<_1a482044b_scopeCoder>, jule::Ptr<_1abcc0460_GotoSt>);
inline void _1a4822b68_postfix(jule::Ptr<_1a482044b_scopeCoder>, jule::Ptr<_1abcc0817_Postfix>);
inline void _1a4822ddd_assign(jule::Ptr<_1a482044b_scopeCoder>, jule::Ptr<_1abcc0c8a_Assign>);
inline void _1a4823163_mapLookupAssign(jule::Ptr<_1a482044b_scopeCoder>, jule::Ptr<_1abcc1142_MultiAssign>*);
inline void _1a48233d8_multiAssignTup(jule::Ptr<_1a482044b_scopeCoder>, jule::Ptr<_1abcc1142_MultiAssign>*);
inline void _1a482365d_multiAssignFn(jule::Ptr<_1a482044b_scopeCoder>, jule::Ptr<_1abcc1142_MultiAssign>*);
inline void _1a48238d3_multiAssign(jule::Ptr<_1a482044b_scopeCoder>, jule::Ptr<_1abcc1142_MultiAssign>);
inline jule::Fn<void(void)> _1a4823be1_matchExpr(jule::Ptr<_1a482044b_scopeCoder>, jule::Ptr<_1abcc174c_Match>);
inline void _1a4824010_case(jule::Ptr<_1a482044b_scopeCoder>, jule::Ptr<_1abcc174c_Match>, jule::Ptr<_1abcc2297_Case>);
inline void _1a4824285_matchSt(jule::Ptr<_1a482044b_scopeCoder>, jule::Ptr<_1abcc174c_Match>);
inline void _1a482450a_fallSt(jule::Ptr<_1a482044b_scopeCoder>, jule::Ptr<_1abcc286e_FallSt>);
inline void _1a4824780_breakSt(jule::Ptr<_1a482044b_scopeCoder>, jule::Ptr<_1abcbed88_BreakSt>);
inline void _1a4824a05_setResult(jule::Ptr<_1a482044b_scopeCoder>, jule::Ptr<_1abcc2bc1_RetSt>);
inline void _1a4824c7a_retSt(jule::Ptr<_1a482044b_scopeCoder>, jule::Ptr<_1abcc2bc1_RetSt>);
inline void _1a4825000_var(jule::Ptr<_1a482044b_scopeCoder>, jule::Ptr<_1abd1497c_Var>);
inline void _1a4825275_strAppend(jule::Ptr<_1a482044b_scopeCoder>, jule::Ptr<_1acd792d7_StrAppendExprModel>);
inline void _1a48254ea_st(jule::Ptr<_1a482044b_scopeCoder>, jule::Any);
inline void _1a4825770_scopeStmts(jule::Ptr<_1a482044b_scopeCoder>, jule::Ptr<_1abcbc935_Scope>*);
inline void _1a48259e5_scope(jule::Ptr<_1a482044b_scopeCoder>, jule::Ptr<_1abcbc935_Scope>);
inline void _1a4825c6a_funcScope(jule::Ptr<_1a482044b_scopeCoder>, jule::Ptr<_1acb24d85_FnIns>);
struct _1a482044b_scopeCoder {
	jule::Ptr<_1a48d4c4c_ObjectCoder> _field_oc;
	

	inline bool operator==(_1a482044b_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1a482044b_scopeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a4828894_exprCoder> static__1a4828c4b_new(jule::Ptr<_1a48d4c4c_ObjectCoder>*);
inline void _1a4828ec1_string(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1ddeb4b1c_Const>*);
inline void _1a4829246_boolean(jule::Ptr<_1a4828894_exprCoder>, jule::Bool);
inline void _1a4829422_nilLit(jule::Ptr<_1a4828894_exprCoder>);
inline jule::Bool _1a4829730_ftoaSpecialCases(jule::Ptr<_1a4828894_exprCoder>, jule::F64*);
inline void _1a48299a5_float32(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1ddeb4b1c_Const>*);
inline void _1a4829c2a_float64(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1ddeb4b1c_Const>*);
inline void _1a4829ea0_constant(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1ddeb4b1c_Const>);
inline void _1a482a368_divByZeroBinary(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_2097d15d8_Token>*, jule::Ptr<_1acb0dc3c_OperandExprModel>*, jule::Ptr<_1acb0dc3c_OperandExprModel>*);
inline void _1a482a5dd_unsafeBinary(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb0e204_BinopExprModel>);
inline void _1a482a863_binary(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb0e204_BinopExprModel>);
inline void _1a482aad8_var(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1abd1497c_Var>);
inline void _1a482ad5d_structureIns(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb09d37_StructIns>);
inline void _1a482b0d3_unary(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb0e5ab_UnaryExprModel>);
inline void _1a482b358_structureLit(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb0ed5e_StructLitExprModel>);
inline void _1a482b5cd_allocStructure(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb1016c_AllocStructLitExprModel>);
inline void _1a482b853_possibleRefExpr(jule::Ptr<_1a4828894_exprCoder>, jule::Any);
inline void _1a482bc1b_castTraitFromTrait(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb106bc_CastingExprModel>*, jule::Ptr<_1acb34405_Trait>, jule::Ptr<_1acb34405_Trait>);
inline void _1a482be91_casting(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb106bc_CastingExprModel>);
inline void _1a482c216_models(jule::Ptr<_1a4828894_exprCoder>, jule::Slice<jule::Any>);
inline void _1a482c48b_args(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb1106e_FnCallExprModel>*);
inline void _1a482c711_modelForCall(jule::Ptr<_1a4828894_exprCoder>, jule::Any);
inline void _1a482c986_pushCallInf(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb1106e_FnCallExprModel>*);
inline jule::Bool _1a482cc94_isWrapped(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb1106e_FnCallExprModel>*);
inline void _1a482d019_pureFuncCall(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb1106e_FnCallExprModel>*);
inline void _1a482d28e_coFuncCall(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb1106e_FnCallExprModel>*);
inline void _1a482d5ad_writeUseExpr(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb24d85_FnIns>*, jule::Ptr<_1abd5dc4b_Data>);
inline void _1a482d833_funcCall(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb1106e_FnCallExprModel>);
inline void _1a482daa8_slice(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb11426_SliceExprModel>);
inline void _1a482dd2d_indexing(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb11899_IndexingExprModel>);
inline void _1a482e0a3_unsafeIndexing(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acd79958_UnsafeIndexingExprModel>);
inline void _1a482e328_anonFunc(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb11c51_AnonFnExprModel>);
inline void _1a482e59d_mapExpr(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb1257b_MapExprModel>);
inline void _1a482e823_slicing(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb12aba_SlicingExprModel>);
inline void _1a482ea98_traitSub(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb13109_TraitSubIdentExprModel>);
inline void _1a482ed1d_structureSub(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb138e0_StructSubIdentExprModel>);
inline void _1a4830093_commonIdent(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb1443a_CommonIdentExprModel>);
inline void _1a4830318_commonSub(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb1499b_CommonSubIdentExprModel>);
inline void _1a483058d_array(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb1414e_ArrayExprModel>);
inline void _1a4830813_funcInsCommon(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb24d85_FnIns>);
inline void _1a4830a88_funcIns(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb24d85_FnIns>);
inline void _1a4830d0d_tuple(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb14c98_TupleExprModel>);
inline void _1a4831083_newCall(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb15c66_BuiltinNewCallExprModel>);
inline void _1a4831308_outCall(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb15172_BuiltinOutCallExprModel>);
inline void _1a483157d_outlnCall(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb1555c_BuiltinOutlnCallExprModel>);
inline void _1a4836660_panicCall(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb16151_BuiltinPanicCallExprModel>);
inline void _1a48368d5_assertCall(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb16607_BuiltinAssertCallExprModel>);
inline void _1a4836b5a_errorCall(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb1d345_BuiltinErrorCallExprModel>);
inline void _1a4836dd0_copyCall(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb1ce5a_BuiltinCopyCallExprModel>);
inline void _1a4837155_lenCall(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb172b7_BuiltinLenCallExprModel>);
inline void _1a48373ca_capCall(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb175d6_BuiltinCapCallExprModel>);
inline void _1a4837650_deleteCall(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb1cb19_BuiltinDeleteCallExprModel>);
inline void _1a48378c5_makeCallSlice(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb16aad_BuiltinMakeCallExprModel>*);
inline void _1a4837b4a_makeCallStr(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb16aad_BuiltinMakeCallExprModel>*);
inline void _1a4837dc0_makeCall(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb16aad_BuiltinMakeCallExprModel>);
inline void _1a4838145_pushToSlice(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acd79cdd_PushToSliceExprModel>);
inline void _1a48383ba_appendToSlice(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acd7a195_AppendToSliceExprModel>);
inline void _1a4838640_appendCall(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb16e98_BuiltinAppendCallExprModel>);
inline void _1a48388b5_cloneCall(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb1587b_BuiltinCloneCallExprModel>);
inline void _1a4838b3a_sizeof(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb1d642_SizeofExprModel>);
inline void _1a4838db0_alignof(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb1d92d_AlignofExprModel>);
inline jule::Str _1a48391bd_runeLit(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb1dc19_RuneExprModel>);
inline void _1a4839443_structureStatic(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb13c86_StructStaticIdentExprModel>);
inline void _1a48396b8_integratedToStr(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb1e027_IntegratedToStrExprModel>);
inline void _1a483993d_backendEmit(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb1e3e0_BackendEmitExprModel>);
inline void _1a4839bb3_free(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acb1e6cb_FreeExprModel>);
inline void _1a4839e38_mutSlicing(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acd7a6d4_MutSlicingExprModel>);
inline void _1a483a1ad_strInsertBegin(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acd7abbd_StrInsertBeginExprModel>);
inline void _1a483a433_strComp(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acd78e1e_StrCompExprModel>);
inline void _1a483a6a8_model(jule::Ptr<_1a4828894_exprCoder>, jule::Any);
inline void _1a483a92d_initExpr(jule::Ptr<_1a4828894_exprCoder>, jule::Ptr<_1acca4ba2_TypeKind>);
struct _1a4828894_exprCoder {
	jule::Ptr<_1a48d4c4c_ObjectCoder> _field_oc;
	

	inline bool operator==(_1a4828894_exprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1a4828894_exprCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a483d216_deriveCoder> static__1a483d5ac_new(jule::Ptr<_1a48d4c4c_ObjectCoder>);
inline jule::Str _1a483d8ba_cloneFuncDecl(_1a483d216_deriveCoder*, jule::Ptr<_1acb07021_Struct>*);
inline jule::Str _1a483dbc8_cloneFuncDef(_1a483d216_deriveCoder*, jule::Ptr<_1acb07021_Struct>*);
struct _1a483d216_deriveCoder {
	jule::Ptr<_1a48d4c4c_ObjectCoder> _field_oc;
	

	inline bool operator==(_1a483d216_deriveCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1a483d216_deriveCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a483eaec_TestCoder> static__1a484002b_New(jule::Ptr<_1a48d4c4c_ObjectCoder>*);
inline jule::Ptr<_1abcdb39e_ImportInfo> _1a4840290_findTestingPackage(jule::Ptr<_1a483eaec_TestCoder>);
inline void _1a4840515_appendTest(jule::Ptr<_1a483eaec_TestCoder>, jule::Ptr<_1acb24d85_FnIns>);
inline void _1a484078a_appendPackageTests(jule::Ptr<_1a483eaec_TestCoder>, jule::Ptr<_1abcdded9_Package>*);
inline jule::Bool _1a48409ee_readyTestingPackage(jule::Ptr<_1a483eaec_TestCoder>);
inline void _1a4840bca_callTmReset(jule::Ptr<_1a483eaec_TestCoder>);
inline void _1a4840da6_callTmFailed(jule::Ptr<_1a483eaec_TestCoder>);
inline void _1a4841082_callTmSkipped(jule::Ptr<_1a483eaec_TestCoder>);
inline void _1a484125d_Serialize(jule::Ptr<_1a483eaec_TestCoder>);
struct _1a483eaec_TestCoder {
	jule::Ptr<_1acb09d37_StructIns> _field_t;
	jule::Ptr<_1acb221d4_Fn> _field_tmReset;
	jule::Ptr<_1acb221d4_Fn> _field_tmFailed;
	jule::Ptr<_1acb221d4_Fn> _field_tmSkipped;
	jule::Ptr<_1a48d4c4c_ObjectCoder> _field_oc;
	

	inline bool operator==(_1a483eaec_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1a483eaec_TestCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1a48426c1_toOut(jule::Str*, jule::Uintptr);
inline jule::Str static__1a4842aab_toLocal(jule::I64, jule::I64, jule::Str*);
inline jule::Str static__1a4842d53_func(jule::Ptr<_1acb221d4_Fn>*);
inline jule::Str static__1a48430ea_funcIns(jule::Ptr<_1acb24d85_FnIns>*);
inline jule::Str static__1a4843392_traitDecl(jule::Ptr<_1acb34405_Trait>);
inline jule::Str static__1a4843639_param(jule::Ptr<_1acb20897_Param>*);
inline jule::Str static__1a48438d1_structure(jule::Ptr<_1acb07021_Struct>*);
inline jule::Str static__1a4843b78_structureIns(jule::Ptr<_1acb09d37_StructIns>*);
inline jule::Str static__1a4843e20_field(jule::Ptr<_1acb0444c_Field>*);
inline jule::Str static__1a48441b7_var(jule::Ptr<_1abd1497c_Var>);
inline jule::Str static__1a484445e_iterBegin(jule::Uintptr);
inline jule::Str static__1a4844706_iterEnd(jule::Uintptr);
inline jule::Str static__1a484499d_iterNext(jule::Uintptr);
inline jule::Str static__1a4844c45_label(jule::Str*);
inline jule::Str static__1a4844edc_matchEnd(jule::Uintptr);
inline jule::Str static__1a4845284_caseBegin(jule::Uintptr);
struct _1a484213d_identCoder {
	

	inline bool operator==(_1a484213d_identCoder _other) { return true; }

	inline bool operator!=(_1a484213d_identCoder _other) { return !this->operator==(_other); }


};
struct _1a48d33aa_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

	inline bool operator==(_1a48d33aa_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_1a48d33aa_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1a48d3872_traitHash {
	jule::Ptr<_1acb34405_Trait> _field_t;
	jule::Ptr<_1acb09d37_StructIns> _field_s;
	jule::I64 _field_i = 0;
	

	inline bool operator==(_1a48d3872_traitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1a48d3872_traitHash _other) { return !this->operator==(_other); }


};
struct _1a48d3c29_traitCast {
	jule::Ptr<_1acb34405_Trait> _field_t1;
	jule::Ptr<_1acb34405_Trait> _field_t2;
	

	inline bool operator==(_1a48d3c29_traitCast _other) {
		return 
			this->_field_t1 == _other._field_t1 &&
			this->_field_t2 == _other._field_t2;
	}

	inline bool operator!=(_1a48d3c29_traitCast _other) { return !this->operator==(_other); }


};
inline jule::Str _1a48e3068_Str(_1a48e2d04_customType*);
inline jule::Bool _1a48e3376_Equal(jule::Ptr<_1a48e2d04_customType>, jule::Ptr<_1acca4ba2_TypeKind>);
struct _1a48e2d04_customType {
	jule::Str _field_kind;
	

	inline bool operator==(_1a48e2d04_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a48e2d04_customType _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a48e3772_typeCoder> static__1a48e3cb1_new(jule::Ptr<_1a48d4c4c_ObjectCoder>*);
inline jule::Str _1a48e40be_toType(_1a48e3772_typeCoder*, jule::Str);
inline jule::Str _1a48e43cc_prim(_1a48e3772_typeCoder*, jule::Ptr<_1accac407_Prim>);
inline jule::Str _1a48e46da_tuple(_1a48e3772_typeCoder*, jule::Ptr<_1accb21ba_Tuple>);
inline jule::Str _1a48e49e8_asSptr(_1a48e3772_typeCoder*, jule::Str);
inline jule::Str _1a48e4d06_asPtr(_1a48e3772_typeCoder*, jule::Str);
inline jule::Str _1a48e5114_sptr(_1a48e3772_typeCoder*, jule::Ptr<_1accb0b58_Sptr>);
inline jule::Str _1a48e5422_ptr(_1a48e3772_typeCoder*, jule::Ptr<_1accb41bc_Ptr>);
inline jule::Str _1a48e5730_enumDecl(_1a48e3772_typeCoder*, jule::Ptr<_1acb36b88_Enum>);
inline jule::Str _1a48e5a3d_typeEnumDecl(_1a48e3772_typeCoder*, jule::Ptr<_1acb38283_TypeEnum>);
inline jule::Str _1a48e5d4b_asSlice(_1a48e3772_typeCoder*, jule::Ptr<_1acca4ba2_TypeKind>);
inline jule::Str _1a48e6159_slice(_1a48e3772_typeCoder*, jule::Ptr<_1accb15b5_Slc>);
inline jule::Str _1a48e6467_mapType(_1a48e3772_typeCoder*, jule::Ptr<_1accb2b6b_Map>);
inline jule::Str _1a48e6775_traitIdent(_1a48e3772_typeCoder*, jule::Str);
inline jule::Str _1a48e6a83_traitDecl(_1a48e3772_typeCoder*, jule::Ptr<_1acb34405_Trait>);
inline jule::Str _1a48e6d91_structure(_1a48e3772_typeCoder*, jule::Ptr<_1acb07021_Struct>);
inline jule::Str _1a48e719e_structureIns(_1a48e3772_typeCoder*, jule::Ptr<_1acb09d37_StructIns>);
inline jule::Str _1a48e74ac_array(_1a48e3772_typeCoder*, jule::Ptr<_1accb3760_Arr>);
inline jule::Str _1a48e7ac8_paramIns(_1a48e3772_typeCoder*, jule::Ptr<_1acb23eb6_ParamIns>*);
inline void _1a48e8205_funcInsResult(_1a48e3772_typeCoder*, jule::Str*, jule::Ptr<_1acb24d85_FnIns>*);
inline jule::Str _1a48e8513_anonFunc(_1a48e3772_typeCoder*, jule::Ptr<_1acb24d85_FnIns>);
inline jule::Str _1a48e8821_func(_1a48e3772_typeCoder*, jule::Ptr<_1acb24d85_FnIns>);
inline jule::Str _1a48e8b2e_kind(_1a48e3772_typeCoder*, jule::Ptr<_1acca4ba2_TypeKind>);
struct _1a48e3772_typeCoder {
	jule::Ptr<_1a48d4c4c_ObjectCoder> _field_oc;
	jule::Ptr<_1a48eb33a_resultCoder> _field_rc;
	

	inline bool operator==(_1a48e3772_typeCoder _other) {
		return 
			this->_field_oc == _other._field_oc &&
			this->_field_rc == _other._field_rc;
	}

	inline bool operator!=(_1a48e3772_typeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a48eb33a_resultCoder> static__1a48eb802_new(jule::Ptr<_1a48e3772_typeCoder>*);
inline void _1a48ebb21_ptr(_1a48eb33a_resultCoder*, jule::Str*, jule::Ptr<_1accb41bc_Ptr>);
inline void _1a48ebe40_sptr(_1a48eb33a_resultCoder*, jule::Str*, jule::Ptr<_1accb0b58_Sptr>);
inline void _1a48ec25e_mapType(_1a48eb33a_resultCoder*, jule::Str*, jule::Ptr<_1accb2b6b_Map>);
inline void _1a48ec57d_slice(_1a48eb33a_resultCoder*, jule::Str*, jule::Ptr<_1accb15b5_Slc>);
inline void _1a48ec89c_arr(_1a48eb33a_resultCoder*, jule::Str*, jule::Ptr<_1accb3760_Arr>);
inline void _1a48ecbbb_func(_1a48eb33a_resultCoder*, jule::Str*, jule::Ptr<_1acb24d85_FnIns>);
inline void _1a48eceda_tup(_1a48eb33a_resultCoder*, jule::Str*, jule::Ptr<_1accb21ba_Tuple>);
inline void _1a48ed309_codeMut(_1a48eb33a_resultCoder*, jule::Str*, jule::Ptr<_1acca4ba2_TypeKind>*);
inline void _1a48ed628_codeMut1(_1a48eb33a_resultCoder*, jule::Str*, jule::Ptr<_1acca4ba2_TypeKind>*);
inline jule::Str _1a48ed903_code(_1a48eb33a_resultCoder*, jule::Ptr<_1acca4ba2_TypeKind>*);
struct _1a48eb33a_resultCoder {
	jule::Ptr<_1a48e3772_typeCoder> _field_tc;
	

	inline bool operator==(_1a48eb33a_resultCoder _other) {
		return 
			this->_field_tc == _other._field_tc;
	}

	inline bool operator!=(_1a48eb33a_resultCoder _other) { return !this->operator==(_other); }


};
inline jule::Str _1a736ea8b_Name(_1a736e7a0_Flag*);
inline jule::Str _1a736ebbd_What(_1a736e7a0_Flag*);
inline void _1a736ed00_Reset(_1a736e7a0_Flag*);
inline jule::I32 _1a736ee32_Short(_1a736e7a0_Flag*);
struct _1a736e7a0_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::I64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

	inline bool operator==(_1a736e7a0_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1a736e7a0_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1a7372cae_Name(_1a7373232_Flag*);
inline jule::Str _1a737351d_What(_1a7373232_Flag*);
inline void _1a7373650_Reset(_1a7373232_Flag*);
inline jule::I32 _1a7373782_Short(_1a7373232_Flag*);
struct _1a7373232_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::U64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

	inline bool operator==(_1a7373232_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1a7373232_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1a7376466_Name(_1a73768d9_Flag*);
inline jule::Str _1a7376bc5_What(_1a73768d9_Flag*);
inline void _1a7376d07_Reset(_1a73768d9_Flag*);
inline jule::I32 _1a7376e39_Short(_1a73768d9_Flag*);
struct _1a73768d9_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::F64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

	inline bool operator==(_1a73768d9_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1a73768d9_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1a7379b62_Name(_1a737a0d5_Flag*);
inline jule::Str _1a737a3c1_What(_1a737a0d5_Flag*);
inline void _1a737a503_Reset(_1a737a0d5_Flag*);
inline jule::I32 _1a737a635_Short(_1a737a0d5_Flag*);
struct _1a737a0d5_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Bool _field_default = false;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

	inline bool operator==(_1a737a0d5_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1a737a0d5_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1a737d319_Name(_1a737d78c_Flag*);
inline jule::Str _1a737da78_What(_1a737d78c_Flag*);
inline void _1a737dbaa_Reset(_1a737d78c_Flag*);
inline jule::I32 _1a737dcdc_Short(_1a737d78c_Flag*);
struct _1a737d78c_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

	inline bool operator==(_1a737d78c_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1a737d78c_Flag _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a495783b_FlagSet> static__1a4957b27_New(void);
inline jule::Trait<_1a4955dcd_CommonFlag> _1a4958067_FindFlag(_1a495783b_FlagSet*, jule::Str);
inline jule::Trait<_1a4955dcd_CommonFlag> _1a4958375_FindFlagShort(_1a495783b_FlagSet*, jule::I32);
inline jule::Slice<jule::Trait<_1a4955dcd_CommonFlag>> _1a49585d9_Flags(_1a495783b_FlagSet*);
inline jule::Exceptional<jule::Slice<jule::Str>> _1a49588e7_Parse(_1a495783b_FlagSet*, jule::Slice<jule::Str>);
inline void _1a4958ac3_Reset(_1a495783b_FlagSet*);
inline jule::Ptr<_1a737d78c_Flag> _1a73e3b21_addFlagCommon(_1a495783b_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_1a737a0d5_Flag> _1a73eb95e_addFlagCommon(_1a495783b_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _1a73e1a53_AddVar(_1a495783b_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _1a73e9907_AddVar(_1a495783b_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
struct _1a495783b_FlagSet {
	jule::Slice<jule::Trait<_1a4955dcd_CommonFlag>> _field_flags;
	


};
inline __jule_tuple_i64__jule_tuple_bool _1a73910a7_parseInteger(_1a495a047_argParser*, jule::Str*, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>);
inline __jule_tuple_u64__jule_tuple_bool _1a739860e_parseInteger(_1a495a047_argParser*, jule::Str*, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>);
inline jule::Str _1a495a80b_getData(_1a495a047_argParser*);
inline jule::VoidExceptional _1a495aa4d_processFlag(_1a495a047_argParser*, jule::Trait<_1a4955dcd_CommonFlag>*);
inline jule::VoidExceptional _1a495acc3_singleDash(_1a495a047_argParser*, jule::Str*);
inline jule::VoidExceptional _1a495b048_doubleDash(_1a495a047_argParser*, jule::Str*);
inline jule::VoidExceptional _1a495b224_tryArg(_1a495a047_argParser*);
inline jule::VoidExceptional _1a495b400_parse(_1a495a047_argParser*);
struct _1a495a047_argParser {
	_1a495783b_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I64 _field_i = 0;
	


};
inline jule::Ptr<_1a48d4c4c_ObjectCoder> static__1a48d5126_New(jule::Ptr<_1a3e29a01_IR>*, _1a48d33aa_SerializationInfo);
inline void _1a48d539b_write(jule::Ptr<_1a48d4c4c_ObjectCoder>, jule::Str);
inline void _1a48d5621_writeR(jule::Ptr<_1a48d4c4c_ObjectCoder>, jule::Str*);
inline void _1a48d57ec_addIndent(jule::Ptr<_1a48d4c4c_ObjectCoder>);
inline void _1a48d59c8_doneIndent(jule::Ptr<_1a48d4c4c_ObjectCoder>);
inline void _1a48d5ba4_indent(jule::Ptr<_1a48d4c4c_ObjectCoder>);
inline jule::I64 _1a48d5eb2_findAnyType(jule::Ptr<_1a48d4c4c_ObjectCoder>, jule::Ptr<_1acca4ba2_TypeKind>*);
inline jule::I64 _1a48d62c0_pushAnyType(jule::Ptr<_1a48d4c4c_ObjectCoder>, jule::Ptr<_1acca4ba2_TypeKind>);
inline void _1a48d6545_pushResultIns(jule::Ptr<_1a48d4c4c_ObjectCoder>, jule::Ptr<_1acb24d85_FnIns>*);
inline void _1a48d67ba_pushResult(jule::Ptr<_1a48d4c4c_ObjectCoder>, jule::Ptr<_1acb221d4_Fn>*);
inline jule::I64 _1a48d6b72_findTypeOffsetS(_1a48d4c4c_ObjectCoder*, jule::Ptr<_1acb34405_Trait>, jule::Ptr<_1acb09d37_StructIns>);
inline jule::I64 _1a48d7029_findTypeOffset(_1a48d4c4c_ObjectCoder*, jule::Ptr<_1acb34405_Trait>, jule::Ptr<_1acca4ba2_TypeKind>);
inline void _1a48d7348_pushAndWriteMaskMapper(jule::Ptr<_1a48d4c4c_ObjectCoder>, jule::Ptr<_1acb34405_Trait>, jule::Ptr<_1acb34405_Trait>);
inline void _1a48d75bd_locInfo(jule::Ptr<_1a48d4c4c_ObjectCoder>, jule::Ptr<_2097d15d8_Token>*);
inline void _1a48d7799_head(jule::Ptr<_1a48d4c4c_ObjectCoder>);
inline void _1a48d7975_links(jule::Ptr<_1a48d4c4c_ObjectCoder>);
inline void _1a48d7bea_prepareStructure(_1a48d4c4c_ObjectCoder*, jule::Ptr<_1acb07021_Struct>*);
inline void _1a48d7dc6_prepareStructures(jule::Ptr<_1a48d4c4c_ObjectCoder>);
inline void _1a48d814b_iterPackages(jule::Ptr<_1a48d4c4c_ObjectCoder>, jule::Fn<void(jule::Ptr<_1abcdded9_Package>*)>);
inline void _1a48d8327_buildTraitMap(jule::Ptr<_1a48d4c4c_ObjectCoder>);
inline void _1a48d8503_traitDecls(jule::Ptr<_1a48d4c4c_ObjectCoder>);
inline void _1a48d8778_structurePlainDecl(jule::Ptr<_1a48d4c4c_ObjectCoder>, jule::Ptr<_1acb07021_Struct>*);
inline void _1a48d8954_structurePlainDecls(jule::Ptr<_1a48d4c4c_ObjectCoder>);
inline void _1a48d8bc9_fieldDecl(jule::Ptr<_1a48d4c4c_ObjectCoder>, jule::Ptr<_1acb09342_FieldIns>*);
inline void _1a48d8e4e_structureDestructor(jule::Ptr<_1a48d4c4c_ObjectCoder>, jule::Ptr<_1acb09d37_StructIns>*);
inline void _1a48d91e6_structureDeriveDefsDecls(jule::Ptr<_1a48d4c4c_ObjectCoder>, jule::Ptr<_1acb09d37_StructIns>*);
inline void _1a48d9526_structureOperatorEq(jule::Ptr<_1a48d4c4c_ObjectCoder>, jule::Str*, jule::Ptr<_1acb09d37_StructIns>*);
inline void _1a48d9845_structureOperatorNotEq(jule::Ptr<_1a48d4c4c_ObjectCoder>, jule::Str*, jule::Ptr<_1acb09d37_StructIns>*);
inline void _1a48d9c0d_structureOperator(jule::Ptr<_1a48d4c4c_ObjectCoder>, jule::Str*, jule::Ptr<_1acb24d85_FnIns>*, jule::Str);
inline void _1a48d9e83_structureOperators(jule::Ptr<_1a48d4c4c_ObjectCoder>, jule::Ptr<_1acb09d37_StructIns>*);
inline void _1a48da208_structureInsDecl(jule::Ptr<_1a48d4c4c_ObjectCoder>, jule::Ptr<_1acb09d37_StructIns>*);
inline void _1a48da47d_structureDecl(jule::Ptr<_1a48d4c4c_ObjectCoder>, jule::Ptr<_1acb07021_Struct>*);
inline void _1a48da659_structureDecls(jule::Ptr<_1a48d4c4c_ObjectCoder>);
inline void _1a48da8ce_paramsDecls(jule::Ptr<_1a48d4c4c_ObjectCoder>, jule::Slice<jule::Ptr<_1acb23eb6_ParamIns>>*);
inline void _1a48dabed_funcHead(jule::Ptr<_1a48d4c4c_ObjectCoder>, jule::Ptr<_1acb24d85_FnIns>*, jule::Bool);
inline void _1a48db01c_funcDeclIns(jule::Ptr<_1a48d4c4c_ObjectCoder>, jule::Ptr<_1acb24d85_FnIns>*, jule::Bool);
inline void _1a48db33b_funcDecl(jule::Ptr<_1a48d4c4c_ObjectCoder>, jule::Ptr<_1acb221d4_Fn>*, jule::Bool);
inline void _1a48db704_funcDeclTrait(jule::Ptr<_1a48d4c4c_ObjectCoder>, jule::Ptr<_1acb34405_Trait>*, jule::Ptr<_1acb221d4_Fn>*, jule::Bool);
inline void _1a48db8d0_funcDecls(jule::Ptr<_1a48d4c4c_ObjectCoder>);
inline void _1a48dbbee_traitDataTypeMethods(jule::Ptr<_1a48d4c4c_ObjectCoder>, jule::Ptr<_1acb34405_Trait>*, jule::Ptr<_1acb34405_Trait>*);
inline void _1a48dbdca_traitDataTypes(jule::Ptr<_1a48d4c4c_ObjectCoder>);
inline void _1a48dc150_paramIns(jule::Ptr<_1a48d4c4c_ObjectCoder>, jule::Ptr<_1acb23eb6_ParamIns>*);
inline void _1a48dc3c5_paramsIns(jule::Ptr<_1a48d4c4c_ObjectCoder>, jule::Slice<jule::Ptr<_1acb23eb6_ParamIns>>*);
inline void _1a48dc6e4_varInitExpr(jule::Ptr<_1a48d4c4c_ObjectCoder>, jule::Ptr<_1abd1497c_Var>*, jule::Fn<void(void)>);
inline void _1a48dc969_var(jule::Ptr<_1a48d4c4c_ObjectCoder>, jule::Ptr<_1abd1497c_Var>);
inline void _1a48dcbde_funcIns(jule::Ptr<_1a48d4c4c_ObjectCoder>, jule::Ptr<_1acb24d85_FnIns>*);
inline void _1a48dce64_func(jule::Ptr<_1a48d4c4c_ObjectCoder>, jule::Ptr<_1acb221d4_Fn>*);
inline void _1a48dd283_funcTrait(jule::Ptr<_1a48d4c4c_ObjectCoder>, jule::Ptr<_1a48d3872_traitHash>*, jule::Ptr<_1acb221d4_Fn>*);
inline void _1a48dd5a2_traitWrapper(jule::Ptr<_1a48d4c4c_ObjectCoder>, jule::Ptr<_1acb221d4_Fn>*, jule::Ptr<_1a48d3872_traitHash>*);
inline void _1a48dd77d_traitWrappers(jule::Ptr<_1a48d4c4c_ObjectCoder>);
inline void _1a48dda9c_traitDataMethods(jule::Ptr<_1a48d4c4c_ObjectCoder>, jule::Ptr<_1acb34405_Trait>*, jule::Ptr<_1a48d3872_traitHash>*);
inline void _1a48dddbb_traitData(jule::Ptr<_1a48d4c4c_ObjectCoder>, jule::Ptr<_1a48d3872_traitHash>*, jule::Ptr<_1acb34405_Trait>*);
inline void _1a48de097_traitDatas(jule::Ptr<_1a48d4c4c_ObjectCoder>);
inline void _1a48de273_globals(jule::Ptr<_1a48d4c4c_ObjectCoder>);
inline void _1a48de44e_decls(jule::Ptr<_1a48d4c4c_ObjectCoder>);
inline void _1a48de6c4_structureMethods(jule::Ptr<_1a48d4c4c_ObjectCoder>, jule::Ptr<_1acb09d37_StructIns>*);
inline void _1a48de949_structureDeriveDefs(jule::Ptr<_1a48d4c4c_ObjectCoder>, jule::Ptr<_1acb09d37_StructIns>*);
inline void _1a48debbe_structureOstream(jule::Ptr<_1a48d4c4c_ObjectCoder>, jule::Ptr<_1acb09d37_StructIns>*);
inline void _1a48dee44_structureIns(jule::Ptr<_1a48d4c4c_ObjectCoder>, jule::Ptr<_1acb09d37_StructIns>*);
inline void _1a48e01b9_structure(jule::Ptr<_1a48d4c4c_ObjectCoder>, jule::Ptr<_1acb07021_Struct>*);
inline void _1a48e0395_structures(jule::Ptr<_1a48d4c4c_ObjectCoder>);
inline void _1a48e0571_funcs(jule::Ptr<_1a48d4c4c_ObjectCoder>);
inline void _1a48e07e6_pushInit(jule::Ptr<_1a48d4c4c_ObjectCoder>, jule::Ptr<_1abcdded9_Package>*);
inline void _1a48e09c2_initCaller(jule::Ptr<_1a48d4c4c_ObjectCoder>);
inline void _1a48e0b9d_end(jule::Ptr<_1a48d4c4c_ObjectCoder>);
inline void _1a48e0d79_serializeHead(jule::Ptr<_1a48d4c4c_ObjectCoder>);
inline void _1a48e1055_Serialize(jule::Ptr<_1a48d4c4c_ObjectCoder>);
struct _1a48d4c4c_ObjectCoder {
	jule::Str _field_Obj;
	jule::Slice<jule::Str> _field_resultDecls;
	jule::Str _field_anyObj;
	jule::Ptr<_1a3e29a01_IR> _field_ir;
	_1a48d33aa_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1a48d3872_traitHash>> _field_tmap;
	jule::Str _field_indentBuffer;
	jule::Map<jule::Str,jule::Bool> _field_resultMap;
	jule::Slice<jule::Ptr<_1acca4ba2_TypeKind>> _field_anyTypeMap;
	jule::Slice<_1a48d3c29_traitCast> _field_traitCastMap;
	jule::Ptr<_1a4828894_exprCoder> _field_ec;
	jule::Ptr<_1a482044b_scopeCoder> _field_sc;
	jule::Ptr<_1a48e3772_typeCoder> _field_tc;
	jule::Ptr<_1a483d216_deriveCoder> _field_dc;
	jule::I64 _field_headPos = 0;
	jule::I64 _field_declPos = 0;
	


};
inline jule::Ptr<_1a402505d_ObjectDeadCode> static__1a40254e2_new(jule::Ptr<_1a3e29a01_IR>*);
inline jule::Bool _1a6cc71d6_isLive(jule::Ptr<_1a402505d_ObjectDeadCode>, jule::Ptr<_1acb34405_Trait>*);
inline jule::Bool _1a6ccbd45_isLive(jule::Ptr<_1a402505d_ObjectDeadCode>, jule::Ptr<_1acb24d85_FnIns>*);
inline jule::Bool _1a6cd6239_isLive(jule::Ptr<_1a402505d_ObjectDeadCode>, jule::Ptr<_1acb09d37_StructIns>*);
inline jule::Bool _1a6cd9b33_isLive(jule::Ptr<_1a402505d_ObjectDeadCode>, jule::Ptr<_1abd1497c_Var>*);
inline void _1a6cc7538_pushLive(jule::Ptr<_1a402505d_ObjectDeadCode>, jule::Ptr<_1acb34405_Trait>);
inline void _1a6ccc85c_pushLive(jule::Ptr<_1a402505d_ObjectDeadCode>, jule::Ptr<_1acb24d85_FnIns>);
inline void _1a6cd3874_pushLive(jule::Ptr<_1a402505d_ObjectDeadCode>, jule::Ptr<_1acb09d37_StructIns>);
inline void _1a6cd9e85_pushLive(jule::Ptr<_1a402505d_ObjectDeadCode>, jule::Ptr<_1abd1497c_Var>);
inline void _1a4057689_setReferencesAsLive(jule::Ptr<_1a402505d_ObjectDeadCode>, jule::Ptr<_1acb27cde_ReferenceStack>*);
inline void _1a405790e_inits(jule::Ptr<_1a402505d_ObjectDeadCode>, jule::Ptr<_1abcdded9_Package>*);
inline void _1a4057b84_collectLivePackage(jule::Ptr<_1a402505d_ObjectDeadCode>, jule::Ptr<_1abcdded9_Package>*);
inline void _1a4057d60_collectLive(jule::Ptr<_1a402505d_ObjectDeadCode>);
inline void _1a40580d5_removeDeadGlobals(jule::Ptr<_1a402505d_ObjectDeadCode>, jule::Slice<jule::Ptr<_1abd1497c_Var>>*);
inline void _1a405835a_removeDeadFns(jule::Ptr<_1a402505d_ObjectDeadCode>, jule::Slice<jule::Ptr<_1acb221d4_Fn>>*);
inline void _1a40585d0_removeDeadStructs(jule::Ptr<_1a402505d_ObjectDeadCode>, jule::Slice<jule::Ptr<_1acb07021_Struct>>*);
inline void _1a4058855_removeDeadTraits(jule::Ptr<_1a402505d_ObjectDeadCode>, jule::Slice<jule::Ptr<_1acb34405_Trait>>*);
inline void _1a4058aca_removeDeadsFile(jule::Ptr<_1a402505d_ObjectDeadCode>, jule::Ptr<_1abd59241_SymbolTable>*);
inline void _1a4058d50_removeDeadsPackage(jule::Ptr<_1a402505d_ObjectDeadCode>, jule::Ptr<_1abcdded9_Package>*);
inline void _1a405902b_removeDeads(jule::Ptr<_1a402505d_ObjectDeadCode>);
inline void _1a4059207_elimanate(jule::Ptr<_1a402505d_ObjectDeadCode>);
struct _1a402505d_ObjectDeadCode {
	_1a4024b95_liveTable _field_live;
	jule::Ptr<_1a3e29a01_IR> _field_ir;
	


};
inline __jule_tuple_x_1a3e29a01_IR__jule_tuple_s_20943da3c_Log static__1a3e29e41_Build(jule::Str, jule::I64);
inline void _1a3e2a3d6_appendStructs(_1a3e29a01_IR*, jule::Ptr<_1abcdded9_Package>*, jule::Slice<jule::Ptr<_1acb07021_Struct>>*);
inline jule::Slice<jule::Ptr<_1acb07021_Struct>> _1a3e2a64a_GetAllStructures(_1a3e29a01_IR*);
inline void _1a3e2a969_appendGlobals(_1a3e29a01_IR*, jule::Ptr<_1abcdded9_Package>*, jule::Slice<jule::Ptr<_1abd1497c_Var>>*);
inline jule::Slice<jule::Ptr<_1abd1497c_Var>> _1a3e2abcd_GetAllGlobals(_1a3e29a01_IR*);
inline void _1a3e2ada9_Order(_1a3e29a01_IR*);
struct _1a3e29a01_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1abcdded9_Package> _field_Main;
	jule::Slice<jule::Ptr<_1abcdb39e_ImportInfo>> _field_Used;
	_1a3e2c042_OrderedDefines _field_Ordered;
	


};
inline jule::Str _1acb0a19a_Str(_1acb09d37_StructIns*);
inline jule::Bool _1acb0a4a8_Equal(jule::Ptr<_1acb09d37_StructIns>, jule::Ptr<_1acca4ba2_TypeKind>);
inline jule::Bool _1acb0a92b_Same(_1acb09d37_StructIns*, jule::Ptr<_1acb09d37_StructIns>);
inline jule::Ptr<_1acb221d4_Fn> _1acb0acd3_FindMethod(_1acb09d37_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_1acb09342_FieldIns> _1acb0b0e1_FindField(_1acb09d37_StructIns*, jule::Str);
inline jule::Ptr<_1abd1497c_Var> _1acb0b3ee_FindStatic(_1acb09d37_StructIns*, jule::Str);
struct _1acb09d37_StructIns {
	jule::Bool _field_Checked = false;
	jule::Ptr<_1acb07021_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1acca3420_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1acb09342_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1abd1497c_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1acb221d4_Fn>> _field_Methods;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Comparable = false;
	jule::Ptr<_1acb27cde_ReferenceStack> _field_Refers;
	_1acb0620c_Operators _field_Operators;
	


};
inline jule::Ptr<_2094cac94_Cmd> static__2094cb1a1_New(jule::Str);
inline jule::VoidExceptional _2094cb37c_Spawn(_2094cac94_Cmd*);
inline jule::VoidExceptional _2094cb558_Kill(_2094cac94_Cmd*);
inline jule::Exceptional<jule::I64> _2094cb7bc_Wait(_2094cac94_Cmd*);
inline jule::VoidExceptional _2094ceddb_spawn(_2094cac94_Cmd*);
inline jule::VoidExceptional _2094d00b7_kill(_2094cac94_Cmd*);
inline jule::Exceptional<jule::I64> _2094d032b_wait(_2094cac94_Cmd*);
struct _2094cac94_Cmd {
	_2094cea78_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	


};
inline jule::I32 _2082639d9_DecodeRune(jule::I32, jule::I32);
inline __jule_tuple_i32__jule_tuple_i32 _208263c81_EncodeRune(jule::I32);
inline jule::Slice<jule::U16> _2082640a0_Encode(jule::Slice<jule::I32>);
inline jule::Slice<jule::I32> _208264347_Decode(jule::Slice<jule::U16>);
inline jule::Slice<jule::U16> _208264655_AppendRune(jule::Slice<jule::U16>, jule::I32);
inline jule::Slice<jule::U16> _208264886_Utf16FromStr(jule::Str);
inline jule::Str _208264b3e_Utf16ToStr(jule::Slice<jule::U16>);
inline jule::Str _208264dd6_U16PtrToStr(jule::U16*);
inline jule::I64 _20739d938_GetLastErrno(void);
inline jule::Uintptr _2082924a7_GetStdHandle(jule::Uintptr);
inline jule::Bool _20829274e_CloseHandle(jule::Uintptr);
inline jule::I64 _208292a90_Wstat(jule::U16*, struct _stat*);
inline jule::I64 _208292e7a_Wopen(jule::U16*, jule::I64, jule::I64);
inline jule::U32 _208293178_GetLastError(void);
inline jule::U32 _2082934b9_GetCurrentDirectory(jule::U32, jule::U16*);
inline jule::Bool _208293a08_DeleteFile(jule::U16*);
inline jule::Bool _208293ca0_CreateDirectory(jule::U16*);
inline jule::Bool _208294047_RemoveDirectory(jule::U16*);
inline jule::U32 _2082944cb_GetFullPathName(jule::U16*, jule::U32, jule::U16*, jule::U16**);
inline jule::Bool _20829481c_GetConsoleMode(jule::Uintptr, jule::I64*);
inline jule::Bool _208294dd3_SetConsoleMode(jule::Uintptr, jule::I64);
inline jule::Bool _2082953cd_WriteConsole(jule::Uintptr, jule::U16*, jule::I64, jule::I64*, void*);
inline jule::Bool _208295862_ReadConsole(jule::Uintptr, jule::U16*, jule::I64, jule::I64*);
inline jule::Uintptr _208295da1_FindFirstFile(jule::U16*, WIN32_FIND_DATAW*);
inline jule::I64 _2082961e2_FindNextFile(jule::Uintptr, WIN32_FIND_DATAW*);
inline jule::I64 _208296489_FindClose(jule::Uintptr);
inline jule::I64 _208297eb3_Seek(jule::I64, jule::I64, jule::I64);
inline jule::I64 _20829839d_Read(jule::I64, void*, jule::U64);
inline jule::I64 _208298722_Close(jule::I64);
inline jule::I64 _208298b0c_Write(jule::I64, void*, jule::U64);
inline void _208298d1b_Exit(jule::I64);
inline jule::Slice<jule::U8> _2082b4b06_Stobs(jule::Str*);
inline void _2082b52aa_PushToStrBuffer(jule::Str*, jule::Slice<jule::U8>);
inline __jule_tuple_i32__jule_tuple_int _2083969b8_DecodeRune(jule::Slice<jule::U8>);
inline __jule_tuple_i32__jule_tuple_int _208396cd7_DecodeRuneStr(jule::Str);
inline __jule_tuple_i32__jule_tuple_int _20839707e_DecodeLastRune(jule::Slice<jule::U8>);
inline jule::I64 _2083975bd_RuneLen(jule::I32);
inline jule::I64 _2083979db_EncodeRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _208397d2c_AppendRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _20839816d_appendRuneNonASCII(jule::Slice<jule::U8>, jule::I32);
inline jule::I64 _2083986ac_RuneCountStr(jule::Str);
inline jule::Bool _208398954_RuneStart(jule::U8);
inline jule::I64 _20845028b_getLastOsErrorWindows(void);
inline jule::Slice<jule::Str> _2084512ae_Args(void);
inline jule::Exceptional<jule::Str> _208451732_WorkingDir(void);
inline jule::Exceptional<jule::Str> _2084520e5_getwd(void);
inline jule::Bool _2092ee8a9_IsLetter(jule::I32);
inline jule::Bool _20936737d_is16(jule::Slice<_2093657bb_Range16>, jule::U16);
inline jule::Bool _2093676be_is32(jule::Slice<_209365c3e_Range32>, jule::U32);
inline jule::Bool _209367e61_isExcludingLatin(jule::Ptr<_2093661b2_RangeTable>, jule::I32);
inline jule::Bool _209368208_IsUpper(jule::I32);
inline jule::I64 _209389856_FindByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I64 _20939bb76_FindLastByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I64 _20939be40_FindByteStr(jule::Str*, jule::U8);
inline jule::I64 _20939c281_FindLastByteStr(jule::Str*, jule::U8);
inline jule::Str _20939c649_Repeat(jule::Str, jule::I64);
inline jule::Bool _20939ca78_hasPrefix(jule::Str*, jule::Str*, jule::I64);
inline jule::Bool _20939cdb9_HasPrefix(jule::Str, jule::Str);
inline jule::Bool _20939d32b_hasSuffix(jule::Str*, jule::Str*, jule::I64);
inline jule::Bool _20939d639_HasSuffix(jule::Str, jule::Str);
inline jule::I64 _20939da24_FindAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _20939e360_FindLastAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _20939e6a1_FindLast(jule::Str, jule::Str);
inline jule::I64 _2093a0949_findRune(jule::Slice<jule::U8>*, jule::I32);
inline jule::I64 _2093a1285_FindLastByte(jule::Str, jule::U8);
inline jule::I64 _2093a2099_FindAny(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _2093a27c5_Split(jule::Str, jule::Str, jule::I64);
inline jule::Bool _2093a2b16_Contains(jule::Str, jule::Str);
inline jule::Bool _2093a35d9_ContainsAny(jule::Str, jule::Str);
inline jule::I64 _2093a392a_Count(jule::Str, jule::Str);
inline jule::Str _2093a3dae_Replace(jule::Str, jule::Str, jule::Str, jule::I64);
inline void _2093a0e22_trimLeft(jule::Slice<jule::U8>*, jule::Slice<jule::U8>*);
inline jule::Str _2093a4e6a_TrimLeft(jule::Str, jule::Str);
inline void _2093a5223_trimRight(jule::Slice<jule::U8>*, jule::Slice<jule::U8>*);
inline jule::Str _2093a58a5_Trim(jule::Str, jule::Str);
inline jule::Bool _20842b003_IsPathSep(jule::U8);
inline jule::Bool _20842b1bd_isSlash(jule::U8);
inline jule::U8 _20842b465_toUpper(jule::U8);
inline jule::I64 _20842ba2b_volumeNameLen(jule::Str);
inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _20842bcc3_cutPath(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _20842c06a_fullPath(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _20842c3de_abs(jule::Str);
inline jule::Str _20842c686_join(jule::Slice<jule::Str>);
inline jule::Str _2093a728b_Clean(jule::Str);
inline jule::Str _2093a781e_FromSlash(jule::Str);
inline jule::Str _2093a7b3d_Join(jule::Slice<jule::Str>);
inline jule::Str _2093a7dd5_Ext(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _2093a817c_Abs(jule::Str);
inline jule::Str _2093a8424_Base(jule::Str);
inline jule::Str _2093a8798_Dir(jule::Str);
inline jule::Str _2093a8a40_VolumeName(jule::Str);
inline jule::I64 _2082a8e3b_getLastFsError(void);
inline jule::Bool _20839a68c_isConsoleHandle(jule::Uintptr);
inline void _2094d06a0_appendEscapeArg(jule::Str*, jule::Str);
inline jule::Str _2094d0947_makeCmdLine(jule::Slice<jule::Str>);
inline jule::Exceptional<jule::Slice<jule::U16>> _2094d0cee_createEnvBlock(jule::Slice<jule::Str>);
inline jule::I64 _2094d1ccd_processErrorFromCode(jule::I64);
inline jule::I64 _2094d1edc_getLastProcessError(void);
inline void _2094d2790_Exit(jule::I64);
inline jule::Str _2094d298d_Executable(void);
inline jule::Bool _209431018_IsStdHeaderPath(jule::Str);
inline jule::Bool _2094312c1_IsValidHeaderExt(jule::Str);
inline jule::Bool _209431568_IsValidCppExt(jule::Str);
inline jule::Str _20943de7c_Logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _20943e268_argToStr(jule::Any);
inline jule::I64 _20943e510_findNextFmt(jule::Str);
inline jule::Str _20943e895_applyFmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _20944091d_IsTopDirective(jule::Str);
inline jule::Bool _209441d4d_IsWindows(jule::Str);
inline jule::Bool _209442106_IsDarwin(jule::Str);
inline jule::Bool _20944239d_IsLinux(jule::Str);
inline jule::Bool _2094426bc_IsI386(jule::Str);
inline jule::Bool _209442964_IsAmd64(jule::Str);
inline jule::Bool _209442c0b_IsArm64(jule::Str);
inline jule::Bool _209442ea3_IsUnix(jule::Str);
inline jule::Bool _209443327_Is32Bit(jule::Str);
inline jule::Bool _2094435be_Is64Bit(jule::Str);
inline void _2094d3c25_init(void);
inline jule::Bool _2097d1ce2_IsUnaryOp(jule::Str);
inline jule::Bool _2097d20cd_IsBinOp(jule::Str);
inline jule::Bool _2097d2694_IsStr(jule::Str);
inline jule::Bool _2097d293b_IsRawStr(jule::Str);
inline jule::Bool _2097d2bd3_IsRune(jule::Str);
inline jule::Bool _2097d32ee_IsBool(jule::Str);
inline jule::Bool _2097d3596_IsFloat(jule::Str);
inline jule::Bool _2097d383d_IsNum(jule::Str);
inline jule::Bool _2097d3d7c_IsIgnoreIdent(jule::Str);
inline jule::Bool _2097d4124_IsAnonIdent(jule::Str);
inline jule::Bool _2097d4663_IsSpace(jule::I32);
inline jule::Bool _2097d4ab4_IsLetter(jule::I32);
inline jule::Bool _2097d5103_IsDecimal(jule::U8);
inline jule::Bool _2097d539a_IsBinary(jule::U8);
inline jule::Bool _2097d5642_IsOctal(jule::U8);
inline jule::Bool _2097d58d9_IsHex(jule::U8);
inline jule::Bool _2097d5b81_IsAssign(jule::U64);
inline jule::Bool _2097d5e28_IsPostfixOp(jule::Str);
inline jule::Bool _2097d61c0_IsAssignOp(jule::Str);
inline jule::Ptr<_2097d6973_File> _2097d7c2c_NewFileSet(jule::Str);
inline _20943da3c_Log _2097d94c0_makeErr(jule::I64, jule::I64, jule::Ptr<_2097d6973_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _2097d9855_bytesHasPrefix(jule::Slice<jule::U8>*, jule::Str);
inline jule::Str _2097d9b96_floatFmtE(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _2097da02b_floatFmtP(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _2097da36c_floatFmtDotnp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _2097da6ad_floatFmtDotfp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _2097da9ee_floatFmtDotp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _2097dae50_floatNum(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _2097db1e7_commonNum(jule::Slice<jule::U8>*);
inline jule::Str _2097db48e_binaryNum(jule::Slice<jule::U8>*);
inline jule::Bool _2097db7d0_isFloatFmtE(jule::U8, jule::I64);
inline jule::Bool _2097dbb21_isFloatFmtP(jule::U8, jule::I64);
inline jule::Bool _2097dbe62_isFloatFmtDotnp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Bool _2097dc2a3_isFloatFmtDotp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Bool _2097dc5e4_isFloatFmtDotfp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _2097dca45_octalNum(jule::Slice<jule::U8>*);
inline jule::Str _2097dccdc_hexNum(jule::Slice<jule::U8>*);
inline jule::Str _2097dd12d_hexEscape(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _2097dd3c5_bigUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _2097dd68e_littleUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _2097dd848_hexByteEscape(jule::Slice<jule::U8>*);
inline jule::Str _2097ddace_byteEscape(jule::Slice<jule::U8>*);
inline jule::Slice<_20943da3c_Log> _2097e35c8_Lex(jule::Ptr<_2097d6973_File>, jule::I64);
inline jule::I64 _1dde492ee_LeadingZeros64(jule::U64);
inline jule::I64 _1dde4a234_TrailingZeros(jule::U64);
inline jule::I64 _1dde4ab2a_TrailingZeros32(jule::U32);
inline jule::I64 _1dde4adc2_TrailingZeros64(jule::U64);
inline jule::I64 _1dde514d2_Len32(jule::U32);
inline jule::I64 _1dde51779_Len64(jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _1dde52439_Add64(jule::U64, jule::U64, jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _1dde53abc_Mul64(jule::U64, jule::U64);
inline jule::U32 _1ddd747ce_F32Bits(jule::F32);
inline jule::F32 _1ddd74aba_F32FromBits(jule::U32);
inline jule::U64 _1ddd74d62_F64Bits(jule::F64);
inline jule::F64 _1ddd75181_F64FromBits(jule::U64);
inline __jule_tuple_f64__jule_tuple_int _1ddd7766c_Frexp(jule::F64);
inline jule::F64 _1dde5aaa2_NaN(void);
inline jule::Bool _1dde5ad8d_IsNaN(jule::F64);
inline jule::F64 _1dde5b135_Inf(jule::I64);
inline jule::Bool _1dde5b443_IsInf(jule::F64, jule::I64);
inline __jule_tuple_f64__jule_tuple_int _1dde5b6da_normalize(jule::F64);
inline jule::F64 _1dde5d0c1_Log(jule::F64);
inline jule::F64 _1dde5d962_Abs(jule::F64);
inline __jule_tuple_f64__jule_tuple_f64 _1dde653a3_Modf(jule::F64);
inline jule::F64 _1dde65b67_Log2(jule::F64);
inline jule::Str _1dde8e4cb_FmtFloat(jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1dde8ea4d_genericFtoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1dde901be_bigFtoa(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1dde8d4ec_floatInfo*);
inline jule::Slice<jule::U8> _1dde9081d_fmtDigits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _1dde8de8c_decimalSlice, jule::I64, jule::U8);
inline void _1dde90c19_roundShortest(_1ddea0c90_decimal*, jule::U64, jule::I64, _1dde8d4ec_floatInfo*);
inline jule::Slice<jule::U8> _1dde91247_fmtE(jule::Slice<jule::U8>, jule::Bool, _1dde8de8c_decimalSlice, jule::I64, jule::U8);
inline jule::Slice<jule::U8> _1dde916cb_fmtF(jule::Slice<jule::U8>, jule::Bool, _1dde8de8c_decimalSlice, jule::I64);
inline jule::Slice<jule::U8> _1dde91cd6_fmtB(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I64, _1dde8d4ec_floatInfo*);
inline jule::Slice<jule::U8> _1dde92457_fmtX(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1dde8d4ec_floatInfo*);
inline jule::I64 _1dde92798_min(jule::I64, jule::I64);
inline jule::I64 _1dde92ad9_max(jule::I64, jule::I64);
inline jule::U8 _1dde93612_lower(jule::U8);
inline __jule_tuple_u64__jule_tuple__216a5d88b_ConvError _1dde93a41_parseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::U64> _1dde93e2b_ParseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _1dde9438d_ParseInt(jule::Str, jule::I64, jule::I64);
inline __jule_tuple_f64__jule_tuple_bool _1dde94ea4_eiselLemire64(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _1dde953a0_eiselLemire32(jule::U64, jule::I64, jule::Bool);
inline jule::I64 _1dde970b6_commonPrefixLenIgnoreCase(jule::Str, jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1dde973b3_special(jule::Str);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1dde9765a_readFloat(jule::Str);
inline __jule_tuple_f64__jule_tuple_bool _1dde990da_atof64exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _1dde994c5_atof32exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f64__jule_tuple__216a5d88b_ConvError _1dde99a9c_atofHex(jule::Str, _1dde8d4ec_floatInfo*, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__216a5d88b_ConvError _1dde99e54_atof32(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__216a5d88b_ConvError _1dde9a1eb_atof64(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__216a5d88b_ConvError _1dde9a53c_parseFloatPrefix(jule::Str, jule::I64);
inline jule::Exceptional<jule::F64> _1dde9a87d_ParseFloat(jule::Str, jule::I64);
inline void _1dde9b0ed_ryuFtoaFixed32(_1dde8de8c_decimalSlice*, jule::U32, jule::I64, jule::I64);
inline void _1dde9b53d_ryuFtoaFixed64(_1dde8de8c_decimalSlice*, jule::U64, jule::I64, jule::I64);
inline void _1dde9bd24_formatDecimal(_1dde8de8c_decimalSlice*, jule::U64, jule::Bool, jule::Bool, jule::I64);
inline void _1dde9c297_ryuFtoaShortest(_1dde8de8c_decimalSlice*, jule::U64, jule::I64, _1dde8d4ec_floatInfo*);
inline jule::I64 _1dde9c53e_mulByLog2Log10(jule::I64);
inline jule::I64 _1dde9c7d6_mulByLog10Log2(jule::I64);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1dde9cbc1_computeBounds(jule::U64, jule::I64, _1dde8d4ec_floatInfo*);
inline void _1dde9d265_ryuDigits(_1dde8de8c_decimalSlice*, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _1dde9d84d_ryuDigits32(_1dde8de8c_decimalSlice*, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I64);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1dde9dc38_mult64bitPow10(jule::U32, jule::I64, jule::I64);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1dde9e123_mult128bitPow10(jule::U64, jule::I64, jule::I64);
inline jule::Bool _1dde9e464_divisibleByPow5(jule::U64, jule::I64);
inline __jule_tuple_u32__jule_tuple_u32 _1dde9e70b_divmod1e9(jule::U64);
inline void _1ddea2478_trim(_1ddea0c90_decimal*);
inline void _1ddea2731_rightShift(_1ddea0c90_decimal*, jule::U64);
inline jule::Bool _1ddea2b93_prefixIsLessThan(jule::Array<jule::U8,800>, jule::I64, jule::Str);
inline void _1ddea2e18_leftShift(_1ddea0c90_decimal*, jule::U64);
inline jule::Bool _1ddea3259_shouldRoundUp(_1ddea0c90_decimal*, jule::I64);
inline jule::Str _1ddea4876_FmtUint(jule::U64, jule::I64);
inline jule::Str _1ddea4c0b_FmtInt(jule::I64, jule::I64);
inline jule::Str _1ddea4ea3_Itoa(jule::I64);
inline jule::Str _1ddea52c2_small(jule::I64);
inline jule::Bool _1ddea5569_isPowerOfTwo(jule::I64);
inline __jule_tuple_su8__jule_tuple_str _1ddea5a97_fmtBits(jule::Slice<jule::U8>, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline jule::Str _1ddea6ea5_RealKindOf(jule::Str);
inline jule::I64 _1ddea724c_BitsizeOf(jule::Str);
inline jule::Str _1ddea756b_IntFromBits(jule::I64);
inline jule::Str _1ddea7813_UintFromBits(jule::I64);
inline jule::Str _1ddea7aaa_FloatFromBits(jule::I64);
inline jule::Bool _1ddea865a_CheckBitFloat(jule::Str, jule::I64);
inline jule::I64 _1ddea8902_BitsizeOfFloat(jule::F64);
inline jule::I64 _1ddea8b99_BitsizeOfInt(jule::I64);
inline jule::I64 _1ddea8e41_BitsizeOfUint(jule::U64);
inline void _1ddea90a6_UpdateTarget(void);
inline void _1ddea921b_init(void);
inline jule::I64 _1ddead055_MinI(jule::Str);
inline jule::I64 _1ddead341_MaxI(jule::Str);
inline jule::U64 _1ddead5d8_MaxU(jule::Str);
inline jule::F64 _1ddead7e7_Min(jule::Str);
inline jule::F64 _1ddeada8e_Max(jule::Str);
inline jule::Bool _1ddeadee0_IsI8Compatible(jule::Str);
inline jule::Bool _1ddeae2cb_IsI16Compatible(jule::Str);
inline jule::Bool _1ddeae573_IsI32Compatible(jule::Str);
inline jule::Bool _1ddeae892_IsI64Compatible(jule::Str);
inline jule::Bool _1ddeaeb39_IsU8Compatible(jule::Str);
inline jule::Bool _1ddeaedd1_IsU16Compatible(jule::Str);
inline jule::Bool _1ddeb0178_IsU32Compatible(jule::Str);
inline jule::Bool _1ddeb04ec_IsU64Compatible(jule::Str);
inline jule::Bool _1ddeb0794_IsF32Compatible(jule::Str);
inline jule::Bool _1ddeb0a3b_IsF64Compatible(jule::Str);
inline jule::Bool _1ddeb0d7c_TypesAreCompatible(jule::Str, jule::Str);
inline jule::Bool _1ddeb1124_IsI16Greater(jule::Str);
inline jule::Bool _1ddeb13bb_IsI32Greater(jule::Str);
inline jule::Bool _1ddeb1663_IsI64Greater(jule::Str);
inline jule::Bool _1ddeb190a_IsU16Greater(jule::Str);
inline jule::Bool _1ddeb1d5b_IsU32Greater(jule::Str);
inline jule::Bool _1ddeb2103_IsU64Greater(jule::Str);
inline jule::Bool _1ddeb239a_IsF32Greater(jule::Str);
inline jule::Bool _1ddeb2642_IsF64Greater(jule::Str);
inline jule::Bool _1ddeb2983_IsGreater(jule::Str, jule::Str);
inline jule::Bool _1ddeb39b7_IsSigInt(jule::Str);
inline jule::Bool _1ddeb3ca3_IsUnsigInt(jule::Str);
inline jule::Bool _1ddeb404a_IsInt(jule::Str);
inline jule::Bool _1ddeb4369_IsFloat(jule::Str);
inline jule::Bool _1ddeb4611_IsNum(jule::Str);
inline jule::Bool _1ddeb48a8_IsSigNum(jule::Str);
inline void _1ddebd340_lshiftUnsig(_1ddeb4b1c_Const*, _1ddeb4b1c_Const*);
inline void _1ddebd63c_rshiftUnsig(_1ddeb4b1c_Const*, _1ddeb4b1c_Const*);
inline jule::Bool _1abd2d325_IsAscii(jule::I32);
inline jule::I32 _1abd2d457_ToRune(jule::Slice<jule::U8>);
inline jule::Str _1abd450d9_ToRawStr(jule::Slice<jule::U8>);
inline jule::Str _1abd45408_ToStr(jule::Slice<jule::U8>);
inline __jule_tuple_u8__jule_tuple_bool _1abd456a0_tryBtoaCommonEsq(jule::Slice<jule::U8>);
inline jule::I32 _1abd459ad_runeFromEsqSeq(jule::Slice<jule::U8>, jule::I64*);
inline jule::Slice<jule::U8> _1abd45cee_strEsqSeq(jule::Slice<jule::U8>, jule::I64*);
inline jule::I64 _1acd5e5ec_findFormatPrefix(jule::Slice<jule::U8>*, jule::I64*);
inline jule::Slice<jule::U8> _1acd651a2_getFormatRange(jule::I64*, jule::Slice<jule::U8>*);
inline void _1acd6545a_FmtByDefault(jule::Str*, jule::Any*);
inline void _1acd65834_applyFmtByDefault(jule::Str*, jule::I64*, jule::Slice<jule::Any>);
inline void _1acd65c30_applyFmt(jule::Slice<jule::U8>*, jule::Str*, jule::I64*, jule::Slice<jule::Any>);
inline jule::Str _1acd6603d_Format(jule::Str*, jule::Slice<jule::Any>);
inline jule::Str _1acd67c21_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1acb26e97_parameterUsesGenerics(jule::Ptr<_1acb23eb6_ParamIns>*, jule::Slice<jule::Ptr<_1acae4272_GenericDecl>>*);
inline jule::Ptr<_1accaba55_TypeSymbol> _1acb29472_buildType(jule::Ptr<_1acad72cb_TypeDecl>);
inline jule::Ptr<_1abd5ecc4_Value> _1acb2975d_buildExpr(jule::Ptr<_1acadb456_Expr>);
inline jule::Ptr<_1acca3e59_TypeAlias> _1acb29a05_buildTypeAlias(jule::Ptr<_1acaed248_TypeAliasDecl>);
inline jule::Ptr<_1acb0444c_Field> _1acb29d24_buildField(jule::Ptr<_1acb01724_FieldDecl>);
inline jule::Slice<jule::Ptr<_1acb0444c_Field>> _1acb2a0bb_buildFields(jule::Slice<jule::Ptr<_1acb01724_FieldDecl>>*);
inline jule::Ptr<_1acb07021_Struct> _1acb2a363_buildStruct(jule::Ptr<_1acb02071_StructDecl>);
inline jule::Ptr<_1acb20897_Param> _1acb2a60a_buildParam(jule::Ptr<_1acae75d8_ParamDecl>);
inline jule::Slice<jule::Ptr<_1acb20897_Param>> _1acb2a97e_buildParams(jule::Slice<jule::Ptr<_1acae75d8_ParamDecl>>*);
inline jule::Ptr<_1acb2018d_RetType> _1acb2ac26_buildRetType(jule::Ptr<_1acada048_RetTypeDecl>);
inline jule::Ptr<_1acb221d4_Fn> _1acb2aebd_buildFn(jule::Ptr<_1acae8908_FnDecl>);
inline jule::Slice<jule::Ptr<_1acb221d4_Fn>> _1acb2b265_buildMethods(jule::Slice<jule::Ptr<_1acae8908_FnDecl>>*);
inline jule::Slice<jule::Ptr<_1accaba55_TypeSymbol>> _1acb2b50c_buildTraitInherits(jule::Slice<jule::Ptr<_1acad72cb_TypeDecl>>*);
inline jule::Ptr<_1acb34405_Trait> _1acb2b7a4_buildTrait(jule::Ptr<_1acb02747_TraitDecl>);
inline jule::Ptr<_1acb36193_EnumItem> _1acb2ba4b_buildEnumItem(jule::Ptr<_1acaeeaa7_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1acb36193_EnumItem>> _1acb2bce3_buildEnumItems(jule::Slice<jule::Ptr<_1acaeeaa7_EnumItemDecl>>*);
inline jule::Ptr<_1acb36b88_Enum> _1acb2c244_buildEnum(jule::Ptr<_1acb005d0_EnumDecl>);
inline jule::Ptr<_1acb37c00_TypeEnumItem> _1acb2c4db_buildTypeEnumItem(jule::Ptr<_1acb00da5_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_1acb37c00_TypeEnumItem>> _1acb2c783_buildTypeEnumItems(jule::Slice<jule::Ptr<_1acb00da5_TypeEnumItemDecl>>*);
inline jule::Ptr<_1acb38283_TypeEnum> _1acb2ca2a_buildTypeEnum(jule::Ptr<_1acb014b0_TypeEnumDecl>);
inline jule::Ptr<_1abd1497c_Var> _1acb2ccc2_buildVar(jule::Ptr<_1acae98d7_VarDecl>);
inline jule::Slice<jule::Ptr<_1abd1497c_Var>> _1acb2d069_buildVars(jule::Slice<jule::Ptr<_1acae98d7_VarDecl>>);
inline jule::Ptr<_1abcb7831_Impl> _1acb2d311_buildImpl(jule::Ptr<_1acb02d52_Impl>);
inline jule::Ptr<_1abd5dc4b_Data> _1acb5527d_buildAsComptimeMethodData(jule::Ptr<_1acb24d85_FnIns>*);
inline jule::Ptr<_1abcdb39e_ImportInfo> _1acb5546a_findComptimePackage(jule::Ptr<_1abce4671_Sema>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acb557cd_buildComptimeTypeInfoData(jule::Ptr<_1abce4671_Sema>*, jule::Ptr<_1acca4ba2_TypeKind>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acb55b0d_buildComptimeValue(jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Bool _1acb5887a_matchConstraint(jule::Str*, jule::Ptr<_1acca4ba2_TypeKind>*);
inline jule::Bool _1acb58b66_isBuiltinConstraint(jule::Str*);
inline jule::Ptr<_1abcc4563_scopeChecker> _1abcb9965_newScopeCheckerBase(jule::Ptr<_1abce4671_Sema>*, jule::Ptr<_1acb24d85_FnIns>);
inline jule::Ptr<_1abcc4563_scopeChecker> _1abcb9cea_newScopeChecker(jule::Ptr<_1abce4671_Sema>*, jule::Ptr<_1acb24d85_FnIns>);
inline jule::Ptr<_1abcc32cb_scopeLabel> _1abcba13b_findLabelParent(jule::Str, jule::Ptr<_1abcc4563_scopeChecker>);
inline jule::Bool _1abcba4c1_modelIsGotoScope(jule::Any, jule::Ptr<_1abcbc935_Scope>*);
inline jule::Bool _1abcba812_stmtIsGotoScope(jule::Any*, jule::Ptr<_1abcbc935_Scope>*);
inline jule::I64 _1abcbab53_countMatchType(jule::Ptr<_1abcc174c_Match>*, jule::Ptr<_1acca4ba2_TypeKind>*);
inline jule::Slice<jule::Ptr<_1abd5dc4b_Data>> _1abcbadea_getDatasFromTupleData(jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Bool _1abcbb736_checkMut(jule::Ptr<_1abce4671_Sema>*, jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1abd5dc4b_Data>, jule::Ptr<_2097d15d8_Token>);
inline jule::Bool _1abcbbbba_checkAssign(jule::Ptr<_1abce4671_Sema>*, jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1abd5dc4b_Data>, jule::Ptr<_2097d15d8_Token>);
inline jule::Bool _1abcbbe62_isValidAstStForNextSt(jule::Any*);
inline jule::Bool _1abcbc209_isValidStForNextSt(jule::Any*);
inline jule::Bool _1abcbc4a1_stmtIsDef(jule::Any*);
inline jule::Ptr<_1abd1497c_Var> _1abcd8ab6_findVarInPackage(jule::Slice<jule::Ptr<_1abd59241_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_1acca3e59_TypeAlias> _1abcd8ee5_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1abd59241_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_1acb07021_Struct> _1abcd93d0_findStructInPackage(jule::Slice<jule::Ptr<_1abd59241_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_1acb221d4_Fn> _1abcd9842_findFnInPackage(jule::Slice<jule::Ptr<_1abd59241_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_1acb34405_Trait> _1abcd9b50_findTraitInPackage(jule::Slice<jule::Ptr<_1abd59241_SymbolTable>>*, jule::Str);
inline jule::Ptr<_1acb36b88_Enum> _1abcd9e91_findEnumInPackage(jule::Slice<jule::Ptr<_1abd59241_SymbolTable>>*, jule::Str);
inline jule::Ptr<_1acb38283_TypeEnum> _1abcda2d2_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1abd59241_SymbolTable>>*, jule::Str);
inline jule::Any _1abcda7cc_defByIdentPackage(jule::Slice<jule::Ptr<_1abd59241_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Bool _1abce1294_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _1abce1eed_isValidModelForRef(jule::Any*);
inline _20943da3c_Log _1abce2493_compilerErr(jule::Ptr<_2097d15d8_Token>*, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1abce27d4_impIsLookupable(jule::Ptr<_1abcdb39e_ImportInfo>*, jule::Str);
inline void _1abce2ad1_appendRetVars(jule::Slice<jule::Ptr<_1abd1497c_Var>>*, jule::Ptr<_1acb24d85_FnIns>*);
inline void _1abce2d89_appendParamVars(jule::Slice<jule::Ptr<_1abd1497c_Var>>*, jule::Ptr<_1acb24d85_FnIns>*);
inline void _1abce3164_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1acca3e59_TypeAlias>>*, jule::Ptr<_1acb24d85_FnIns>*);
inline jule::Ptr<_1abd59241_SymbolTable> _1abce34b6_findFile(jule::Slice<jule::Ptr<_1abd59241_SymbolTable>>*, jule::Ptr<_2097d6973_File>*);
inline void _1abce3928_pushSuggestion(_20943da3c_Log*, jule::Str, jule::Slice<jule::Any>);
inline void _1abd12e64_pushImplemented(jule::Ptr<_1acb34405_Trait>, jule::Ptr<_1acb07021_Struct>*);
inline void _1abd1321c_pushImplements(jule::Ptr<_1acb07021_Struct>*, jule::Ptr<_1acb34405_Trait>);
inline jule::Bool _1abd4641a_traitHasReferenceReceiver(jule::Ptr<_1acb34405_Trait>*);
inline jule::Bool _1abd466e5_floatAssignable(jule::Str, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Bool _1abd46a36_sigAssignable(jule::Str, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Bool _1abd46dbb_unsigAssignable(jule::Str, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Bool _1abd4720c_intAssignable(jule::Str, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Ptr<_1acca4ba2_TypeKind> _1abd58130_lenKind(void);
inline jule::Bool _1abd583c7_isGoodValueToInfer(jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Ptr<_1acaa47b5_Directive> _1acc9db68_findDirective(jule::Slice<jule::Ptr<_1acaa47b5_Directive>>*, jule::Str);
inline jule::Any _1acc9deed_findBuiltinsImport(jule::Str, jule::Ptr<_1abcdb39e_ImportInfo>);
inline void _1acc9e20c_fitBitsize(jule::Ptr<_1abd5dc4b_Data>*);
inline void _1acc9e509_makeStructLitAlloc(jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1acb0ed5e_StructLitExprModel>*);
inline jule::Ptr<_1abd1497c_Var> _1acc9e84a_buildErrorVar(jule::Ptr<_1abcbc935_Scope>*, jule::Ptr<_1acae036c_FnCallExpr>*);
inline jule::Any _1acc9eb8b_findBuiltinsSema(jule::Str, jule::Ptr<_1abce4671_Sema>);
inline jule::Bool _1acc9ee33_isOkForShifting(jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Bool _1acca02da_isInstancedStruct(jule::Ptr<_1acb09d37_StructIns>);
inline jule::Bool _1acca064d_isPtrArithmeticCompatible(jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1abd5dc4b_Data>*);
inline void _1acca0890_applyCastKindModel(jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1acca4ba2_TypeKind>*);
inline void _1acca0b48_applyCastKind(jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1acca4ba2_TypeKind>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acca0d46_buildVoidData(void);
inline jule::Str _1acca1110_checkDataForIntegerIndexing(jule::Ptr<_1abd5dc4b_Data>*);
inline void _1acca13c9_applyCastModelByEnum(jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1acb36b88_Enum>);
inline void _1acca1682_castConstByType(jule::Str*, jule::Ptr<_1abd5dc4b_Data>*);
inline void _1acca1b8d_updateModelToGenericIns(jule::Any*, jule::Ptr<_1acb24d85_FnIns>*);
inline jule::Bool _1acca1dd0_pushSubIdentFromExpr(jule::Any, jule::Ptr<_1acad7b7d_SubIdentTypeDecl>*);
inline jule::Str _1acca2177_constoa(jule::Ptr<_1ddeb4b1c_Const>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acca24b8_evalEnumStatic(jule::Ptr<_1acb36b88_Enum>*, jule::Ptr<_1acb36193_EnumItem>*);
inline jule::Bool _1accbe062_kindUsesGenerics(jule::Ptr<_1acca4ba2_TypeKind>*, jule::Slice<jule::Ptr<_1acae4272_GenericDecl>>*);
inline jule::Bool _1accbe3e7_hasDirective(jule::Slice<jule::Ptr<_1acaa47b5_Directive>>*, jule::Str);
inline jule::Bool _1accbe68e_canGetPtr(jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Bool _1accbe9ad_isValidForSptrType(jule::Ptr<_1acca4ba2_TypeKind>*);
inline jule::Bool _1accbec55_isValidForRef(jule::Ptr<_1acca4ba2_TypeKind>*);
inline jule::Bool _1accc001e_isBuiltinStrConvertable(jule::Ptr<_1acca4ba2_TypeKind>*);
inline jule::Str _1accc0294_buildLinkPathByTokens(jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Ptr<_1accac407_Prim> _1accc064b_buildPrimType(jule::Str);
inline jule::Ptr<_1acb07021_Struct> _1accc08e3_getStructFromKind(jule::Ptr<_1acca4ba2_TypeKind>);
inline void _1accc0b9b_applyImplicitCast(jule::Ptr<_1acca4ba2_TypeKind>*, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Bool _1accc0e43_validTypeForXof(jule::Ptr<_1acca4ba2_TypeKind>*);
inline __jule_tuple_x_1abd59241_SymbolTable__jule_tuple_s_20943da3c_Log _1accc3be3_buildSymbols(jule::Ptr<_1acaa352d_Ast>*, jule::Trait<_1abcd86ed_Importer>*, jule::Ptr<_1acb2d861_symbolBuilder>);
inline __jule_tuple_x_1abcdded9_Package__jule_tuple_s_20943da3c_Log _1accc4122_analyzePackage(jule::Slice<jule::Ptr<_1acaa352d_Ast>>*, jule::Trait<_1abcd86ed_Importer>*, jule::I64*);
inline __jule_tuple_x_1abcdded9_Package__jule_tuple_s_20943da3c_Log _1accc450c_AnalyzePackage(jule::Slice<jule::Ptr<_1acaa352d_Ast>>, jule::Trait<_1abcd86ed_Importer>, jule::I64);
inline jule::Ptr<_1acb24d85_FnIns> _1acd684d5_findBuiltinFn(jule::Str);
inline jule::Ptr<_1acca3e59_TypeAlias> _1acd68716_primTypeAlias(jule::Ptr<_1acca4ba2_TypeKind>*);
inline jule::Ptr<_1acca3e59_TypeAlias> _1acd6c033_findBuiltinTypeAlias(jule::Str);
inline jule::Any _1acd6c242_findBuiltinDef(jule::Str);
inline jule::Any _1acd6c4d9_findBuiltinDefStdDebug(jule::Str);
inline jule::Any _1acd6c781_findBuiltinDefStdMem(jule::Str);
inline jule::Any _1acd6ca4a_findBuiltinDefStdComptime(jule::Str);
inline jule::Any _1acd6ce02_findBuiltinDefStdJuleIntegrated(jule::Str);
inline jule::Any _1acd6d1cc_findPackageBuiltinDef(jule::Str, jule::Str);
inline jule::Ptr<_1abd5dc4b_Data> _1acd6d5d9_builtinCallerCommonPlain(jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acd6d9d5_builtinCallerCommon(jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acd6ddc0_builtinCallerCommonMut(jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acd6e211_builtinCallerError(jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acd6e5eb_builtinCallerOut(jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acd6e9d6_builtinCallerOutln(jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acd70102_builtinCallerNew(jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acd704dc_builtinCallerPanic(jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acd708c7_builtinCallerMake(jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acd70cb2_builtinCallerAppend(jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acd71246_callerCopySlice(jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acd716ca_callerCopyStr(jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acd71ab5_builtinCallerCopy(jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acd71e06_callerLenSlice(jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acd72247_callerLenMap(jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acd72588_callerLenArr(jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acd728c9_callerLenStr(jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acd72c1a_callerLenComptime(jule::Ptr<_1abd5dc4b_Data>*, jule::I64);
inline jule::Ptr<_1abd5dc4b_Data> _1acd73105_builtinCallerLen(jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acd73446_callerCapSlice(jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acd73787_callerCapStr(jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acd73b72_builtinCallerCap(jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acd74238_callerDeleteMap(jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*, jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acd74623_builtinCallerDelete(jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acd74a0d_builtinCallerClone(jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acd74de8_builtinCallerAssert(jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acd75305_builtinCallerStdComptimeTypeOf(jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acd75723_builtinCallerStdComptimeValueOf(jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acd759cb_rangeData(jule::Trait<_1acb3a20d_comptimeRangeKind>);
inline jule::Ptr<_1abd5dc4b_Data> _1acd75dd8_builtinCallerStdComptimeRange(jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acd76306_builtinCallerStdComptimeLine(jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acd76724_builtinCallerStdComptimeFile(jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acd76b42_builtinCallerStdComptimeFiles(jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acd77060_builtinCallerStdMemSizeOf(jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acd7747d_builtinCallerStdMemAlignOf(jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acd7789b_builtinCallerStdMemFree(jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acd77cca_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acd781e8_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acd78638_builtinCallerStdDebugOut(jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Ptr<_1abd5dc4b_Data> _1acd78a23_builtinCallerStdDebugOutln(jule::Ptr<_1acc78e73_Eval>*, jule::Ptr<_1acae036c_FnCallExpr>*, jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Bool _1ace73700_FindModuleFile(jule::Slice<jule::Ptr<_2082a94ad_DirEntry>>*);
inline jule::Str _1ace73832_FindModuleFileDeep(jule::Str);
inline jule::Slice<_20943da3c_Log> _1ace73a30_CheckModuleFile(jule::Str);
inline jule::Ptr<_1a3d9ceb3_FileInfo> _1a3de347b_ParseFile(jule::Ptr<_2097d6973_File>);
inline __jule_tuple_x_1acaa352d_Ast__jule_tuple_s_20943da3c_Log _1a3de3a0e_parseFileset(jule::Ptr<_2097d6973_File>);
inline jule::Ptr<_1acae6e12_ScopeTree> _1a3de4438_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1a3de4724_isSt(jule::Ptr<_2097d15d8_Token>, jule::Ptr<_2097d15d8_Token>);
inline jule::Bool _1a3de4a65_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_2097d15d8_Token>>*, jule::I64*);
inline __jule_tuple_int__jule_tuple_bool _1a3de4dea_nextStPos(jule::Slice<jule::Ptr<_2097d15d8_Token>>*, jule::I64);
inline __jule_tuple_sx_2097d15d8_Token__jule_tuple_bool _1a3de523b_skipSt(jule::I64*, jule::Slice<jule::Ptr<_2097d15d8_Token>>);
inline jule::Slice<jule::Ptr<_1a3de5538_stmt>> _1a3de58ce_splitStmts(jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Bool _1a3e0c0bb_isTypeOp(jule::Str*);
inline jule::Bool _1a3e0c3a7_isTypeRange(jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Slice<jule::Ptr<_2097d15d8_Token>> _1a3e0c64e_getBlockExpr(jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline __jule_tuple_sx_2097d15d8_Token__jule_tuple_sx_2097d15d8_Token _1a3e0c9d4_splitDelim(jule::Slice<jule::Ptr<_2097d15d8_Token>>*, jule::U64);
inline jule::I64 _1a3e0cc7b_findLowestPrecOp(jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Ptr<_1acadd04b_IdentExpr> _1a3e0d023_buildIdentExpr(jule::Ptr<_2097d15d8_Token>*);
inline __jule_tuple_sx_2097d15d8_Token__jule_tuple_int _1a3e0d2ba_getRangeExprTokens(jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Bool _1a3e0e024_checkAssignTokens(jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline _20943da3c_Log _1a3e10245_makeErr(jule::I64, jule::I64, jule::Ptr<_2097d6973_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_2097d15d8_Token>> _1a3e1071d_range(jule::I64*, jule::Str, jule::Str, jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline __jule_tuple_sx_2097d15d8_Token__jule_tuple_sx_2097d15d8_Token _1a3e109b5_rangeLast(jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline __jule_tuple_ssx_2097d15d8_Token__jule_tuple_s_20943da3c_Log _1a3e10da0_partsKind(jule::Slice<jule::Ptr<_2097d15d8_Token>>*, jule::Str, jule::Bool);
inline __jule_tuple_ssx_2097d15d8_Token__jule_tuple_s_20943da3c_Log _1a3e1128a_parts(jule::Slice<jule::Ptr<_2097d15d8_Token>>*, jule::U64, jule::Bool);
inline jule::Str _1a3e11532_getCloseKindOfBrace(jule::Str);
inline _20943da3c_Log _1a3e1191c_compilerErr(jule::Ptr<_2097d15d8_Token>*, jule::Str*, jule::Slice<jule::Any>);
inline void _1a3e11d4b_pushSuggestion(_20943da3c_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1a3e120e3_tokstoa(jule::Slice<jule::Ptr<_2097d15d8_Token>>*);
inline jule::Bool _1a3e22235_isPub(jule::Str*);
inline jule::Ptr<_1acad72cb_TypeDecl> _1a3e22ac6_buildVoidType(void);
inline jule::Ptr<_1acad72cb_TypeDecl> _1a3e22d18_buildPrimType(jule::Ptr<_2097d15d8_Token>);
inline __jule_tuple_bool__jule_tuple_bool _1ace4c71d_checkOs(jule::Str);
inline __jule_tuple_bool__jule_tuple_bool _1ace477d4_checkArch(jule::Str);
inline jule::Bool _1ace479e3_isPassFileAnnotation(jule::Str);
inline void _1ace625ce_setOsVars(jule::Slice<jule::Str>*);
inline void _1ace62832_setArchVars(jule::Slice<jule::Str>*);
inline void _1ace62ada_initVars(jule::Slice<jule::Str>*, _1ace622c1_CompileInfo*);
inline jule::Slice<jule::U8> _1a3e26a53_readBuff(jule::Str);
inline _20943da3c_Log _1a3e26d0b_flatCompilerErr(jule::Str);
inline void _1a3e2b21c_pushPasses(jule::Ptr<_1abcdded9_Package>*, jule::Slice<jule::Str>*);
inline jule::Slice<jule::Str> _1a3e2b5a2_getAllUniquePasses(jule::Ptr<_1abcdded9_Package>*, jule::Slice<jule::Ptr<_1abcdb39e_ImportInfo>>);
inline _1ace622c1_CompileInfo _1a3e2b7a0_buildCompileInfo(void);
inline void _1a4059515_EliminateDefines(jule::Ptr<_1a3e29a01_IR>*);
inline jule::Ptr<_1acaa47b5_Directive> _1a405989a_findDirective(jule::Slice<jule::Ptr<_1acaa47b5_Directive>>*, jule::Str);
inline jule::Bool _1a4059bdb_hasDirective(jule::Slice<jule::Ptr<_1acaa47b5_Directive>>*, jule::Str);
inline void _1a405d838_eliminateDeadCodeOfScope(jule::Ptr<_1abcbc935_Scope>);
inline void _1a405dabe_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1acb221d4_Fn>>*);
inline void _1a405dd11_eliminateFunctionsScopePackage(jule::Ptr<_1abcdded9_Package>*);
inline void _1a405e0a8_eliminateScopePackage(jule::Ptr<_1abcdded9_Package>*);
inline void _1a405e2b7_EliminateScopes(jule::Ptr<_1a3e29a01_IR>*);
inline jule::Bool _1acd80992_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _1acd80ca0_isConstantValidConditionalCase(jule::Ptr<_1abcbcd31_If>*);
inline jule::Bool _1acd81058_isUnreachableExpr(jule::Any*);
inline jule::Bool _1acd81399_isConstantValidMatchCase(jule::Ptr<_1abcc2297_Case>*);
inline jule::Bool _1acd81641_isUnreachableConditionalCase(jule::Ptr<_1abcbcd31_If>*);
inline jule::Bool _1acd818e9_isUnreachableMatchCase(jule::Ptr<_1abcc2297_Case>*);
inline __jule_tuple_bool__jule_tuple_u64 _1acd892e7_checkForBitShiftOpt(jule::Ptr<_1acb0dc3c_OperandExprModel>*, jule::Ptr<_1acb0dc3c_OperandExprModel>*);
inline jule::Bool _1acd8967c_areSameLvalueExprModel(jule::Any*, jule::Any*);
inline void _1acd8b937_PushOptLevel(jule::I64);
inline void _1a406826b_detectEnabled(void);
inline void _1a408b448_Throw(jule::Str);
inline jule::U64 _1a48ccb57_unix(void);
inline jule::U64 _1a48cce65_unixYearToSeconds(jule::U64, jule::Bool*);
inline jule::U64 _1a48cd2ea_unixMonthToSeconds(jule::U64, jule::Bool);
inline jule::Bool _1a4826111_isCopyOptimizable(jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Bool _1a4826496_isIterCopyOptimizable(jule::Ptr<_1abd5dc4b_Data>*, jule::Ptr<_1abd1497c_Var>*);
inline jule::Str _1a483acc4_decomposeCommonEsq(jule::U8);
inline jule::Str _1a483b0b0_sbtoa(jule::U8);
inline jule::Str _1a483b357_cstrBytes(jule::Slice<jule::U8>);
inline jule::Str _1a483b676_cstrLit(jule::Slice<jule::U8>);
inline jule::Str _1a483b984_ftoa(jule::F64, jule::I64);
inline jule::Str _1a483bc2b_itoa(jule::I64);
inline jule::Str _1a483bec3_utoa(jule::U64);
inline jule::Bool _1a483c37a_isForwarded(jule::Ptr<_1abcbc935_Scope>*);
inline jule::Bool _1a483c644_isBuiltinCallHasDebuginf(jule::Ptr<_1acb1106e_FnCallExprModel>*);
inline jule::Bool _1a483c875_isExprComesFromBind(jule::Ptr<_1abd5dc4b_Data>*);
inline jule::Bool _1a483cb1c_isAny(jule::Ptr<_1acca4ba2_TypeKind>*);
inline void _1a48e140c_iterFiles(jule::Ptr<_1abcdded9_Package>*, jule::Fn<void(jule::Ptr<_1abd59241_SymbolTable>*)>);
inline jule::Str _1a48e16e8_concatAllParts(jule::Slice<jule::Ptr<_2097d15d8_Token>>);
inline jule::Bool _1a48e1a39_containsTraitMethod(jule::Ptr<_1acb34405_Trait>*, jule::Str*);
inline void _1a48e1d36_pushMethodsFromInherit(jule::Ptr<_1acb34405_Trait>*, jule::Ptr<_1acb34405_Trait>*);
inline void _1a48e2111_pushMethodsFromInherits(jule::Ptr<_1acb34405_Trait>*, jule::Ptr<_1acb34405_Trait>*);
inline jule::Ptr<_1acaa47b5_Directive> _1a490032d_findDirective(jule::Slice<jule::Ptr<_1acaa47b5_Directive>>*, jule::Str);
inline jule::Bool _1a49006b3_hasDirective(jule::Slice<jule::Ptr<_1acaa47b5_Directive>>*, jule::Str);
inline jule::Bool _1a490095a_shouldInitialized(jule::Ptr<_1acca4ba2_TypeKind>*);
inline void _2094d6b18_printErrorMessage(jule::Str);
inline void _2094d6d6b_help(jule::Slice<jule::Str>*);
inline void _2094d707a_version(jule::Slice<jule::Str>*);
inline void _2094d7267_toolDistos(void);
inline void _2094d73cc_toolDistarch(void);
inline void _2094d75db_tool(jule::Slice<jule::Str>*);
inline void _2094d77ea_julenv(jule::Slice<jule::Str>*);
inline void _2094d7ad6_mod(jule::Slice<jule::Str>*);
inline jule::Bool _2094d7d7d_processCommand(jule::Slice<jule::Str>*);
inline void _2094d7ee3_showInfo(void);
void entry_point(void);
inline void _2094d890b_enableVtp(void);
inline void _2094d8ab5_init(void);
inline void _1a495c9c8_init(void);
inline jule::Ptr<_2082b61e0_File> _1a495cc81_openOutput(jule::Str*);
inline void _1a495cde6_clearObjects(void);
inline void _1a495d1e3_compileIr(jule::Str, jule::Str);
inline jule::Bool _1a495d48a_isCppSourceFile(jule::Str);
inline void _1a495d699_pushCompCmdClang(jule::Str*);
inline void _1a495d8a8_pushCompCmdGcc(jule::Str*);
inline __jule_tuple_str__jule_tuple_str _1a495dd09_genCompileCmd(jule::Str, jule::Ptr<_1a3e29a01_IR>*);
inline jule::Str _1a495e007_getCompilePath(void);
inline void _1a495e249_applyTargetIndependentOptimizations(jule::Ptr<_1a3e29a01_IR>*);
inline void _1a495e3ae_checkCompilerFlag(void);
inline void _1a495e579_checkTargetArch(jule::Str);
inline void _1a495e788_checkTargetOs(jule::Str);
inline void _1a495e997_checkTargetFlag(jule::Str*);
inline void _1a495eba6_checkOptFlag(jule::Str*);
inline void _1a496002a_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1a49602b1_checkFlags(jule::Slice<jule::Str>*);
inline void _1a49604c0_setupSemaFlags(jule::I64*);
inline jule::Ptr<_1a3e29a01_IR> _1a4960767_buildIr(jule::Slice<jule::Str>*);
inline void _1a4960976_compileCommand(jule::Slice<jule::Str>*);


struct _1acb3a20d_comptimeRangeKindMptrData {
	void(*_1acb3998d_ready)(jule::Trait<_1acb3a20d_comptimeRangeKind>, jule::Ptr<_1abd1497c_Var>*, jule::Ptr<_1abd1497c_Var>*);
	void(*_1acb39d56_step)(jule::Trait<_1acb3a20d_comptimeRangeKind>, jule::I64, jule::Ptr<_1abd1497c_Var>*, jule::Ptr<_1abd1497c_Var>*);
	jule::I64(*_1acb3a0ba_len)(jule::Trait<_1acb3a20d_comptimeRangeKind>);
};

struct _1abcd86ed_ImporterMptrData {
	void(*_1abcd7620_SetModPath)(jule::Trait<_1abcd86ed_Importer>, jule::Str);
	jule::Str(*_1abcd7862_GetModPath)(jule::Trait<_1abcd86ed_Importer>);
	jule::Str(*_1abcd7b70_ModById)(jule::Trait<_1abcd86ed_Importer>, jule::I64);
	jule::Ptr<_1abcdb39e_ImportInfo>(*_1abcd7e7d_GetImport)(jule::Trait<_1abcd86ed_Importer>, jule::Str);
	__jule_tuple_sx_1acaa352d_Ast__jule_tuple_s_20943da3c_Log(*_1abcd8335_ImportPackage)(jule::Trait<_1abcd86ed_Importer>, jule::Str, jule::Bool);
	void(*_1abcd85aa_Imported)(jule::Trait<_1abcd86ed_Importer>, jule::Ptr<_1abcdb39e_ImportInfo>);
};

struct _1acca4740_KindMptrData {
	jule::Str(*_1acca42de_Str)(jule::Trait<_1acca4740_Kind>);
	jule::Bool(*_1acca45ec_Equal)(jule::Trait<_1acca4740_Kind>, jule::Ptr<_1acca4ba2_TypeKind>);
};

struct _1accc2ecd_LookupMptrData {
	jule::Ptr<_1abcdb39e_ImportInfo>(*_1accc1493_SelectPackage)(jule::Trait<_1accc2ecd_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_1abcdb39e_ImportInfo>)>);
	jule::Ptr<_1abd1497c_Var>(*_1accc184a_FindVar)(jule::Trait<_1accc2ecd_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1acca3e59_TypeAlias>(*_1accc1c02_FindTypeAlias)(jule::Trait<_1accc2ecd_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1acb07021_Struct>(*_1accc20a9_FindStruct)(jule::Trait<_1accc2ecd_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1acb221d4_Fn>(*_1accc2461_FindFn)(jule::Trait<_1accc2ecd_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1acb34405_Trait>(*_1accc276e_FindTrait)(jule::Trait<_1accc2ecd_Lookup>, jule::Str);
	jule::Ptr<_1acb36b88_Enum>(*_1accc2a7c_FindEnum)(jule::Trait<_1accc2ecd_Lookup>, jule::Str);
	jule::Ptr<_1acb38283_TypeEnum>(*_1accc2d8a_FindTypeEnum)(jule::Trait<_1accc2ecd_Lookup>, jule::Str);
};

struct _1a4955dcd_CommonFlagMptrData {
	jule::Str(*_1a49262dd_Name)(jule::Trait<_1a4955dcd_CommonFlag>);
	jule::I32(*_1a4926420_Short)(jule::Trait<_1a4955dcd_CommonFlag>);
	jule::Str(*_1a49265c9_What)(jule::Trait<_1a4955dcd_CommonFlag>);
	void(*_1a4955c9b_Reset)(jule::Trait<_1a4955dcd_CommonFlag>);
};



inline void _1acb3998d_ready_comptimeRangeKind_0(jule::Trait<_1acb3a20d_comptimeRangeKind> _self_, jule::Ptr<_1abd1497c_Var>* _1329_keyA, jule::Ptr<_1abd1497c_Var>* _1346_keyB) {
	_1acb3d4b9_ready(_self_.safe_ptr<_1acb3c908_comptimeStructFields>(), _1329_keyA, _1346_keyB);
}
inline void _1acb39d56_step_comptimeRangeKind_0(jule::Trait<_1acb3a20d_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1abd1497c_Var>* _1436_keyA, jule::Ptr<_1abd1497c_Var>* _1453_keyB) {
	_1acb3d882_step(_self_.safe_ptr<_1acb3c908_comptimeStructFields>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1acb3a0ba_len_comptimeRangeKind_0(jule::Trait<_1acb3a20d_comptimeRangeKind> _self_) {
	return _1acb3dae6_len(_self_.safe_ptr<_1acb3c908_comptimeStructFields>());
}
inline void _1acb3998d_ready_comptimeRangeKind_1(jule::Trait<_1acb3a20d_comptimeRangeKind> _self_, jule::Ptr<_1abd1497c_Var>* _1329_keyA, jule::Ptr<_1abd1497c_Var>* _1346_keyB) {
	_1acb414bc_ready(_self_.safe_ptr<_1acb40994_comptimeStatics>(), _1329_keyA, _1346_keyB);
}
inline void _1acb39d56_step_comptimeRangeKind_1(jule::Trait<_1acb3a20d_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1abd1497c_Var>* _1436_keyA, jule::Ptr<_1abd1497c_Var>* _1453_keyB) {
	_1acb41885_step(_self_.safe_ptr<_1acb40994_comptimeStatics>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1acb3a0ba_len_comptimeRangeKind_1(jule::Trait<_1acb3a20d_comptimeRangeKind> _self_) {
	return _1acb41ae9_len(_self_.safe_ptr<_1acb40994_comptimeStatics>());
}
inline void _1acb3998d_ready_comptimeRangeKind_2(jule::Trait<_1acb3a20d_comptimeRangeKind> _self_, jule::Ptr<_1abd1497c_Var>* _1329_keyA, jule::Ptr<_1abd1497c_Var>* _1346_keyB) {
	_1acb43c3e_ready(_self_.safe_ptr<_1acb43106_comptimeEnumFields>(), _1329_keyA, _1346_keyB);
}
inline void _1acb39d56_step_comptimeRangeKind_2(jule::Trait<_1acb3a20d_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1abd1497c_Var>* _1436_keyA, jule::Ptr<_1abd1497c_Var>* _1453_keyB) {
	_1acb44107_step(_self_.safe_ptr<_1acb43106_comptimeEnumFields>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1acb3a0ba_len_comptimeRangeKind_2(jule::Trait<_1acb3a20d_comptimeRangeKind> _self_) {
	return _1acb4436b_len(_self_.safe_ptr<_1acb43106_comptimeEnumFields>());
}
inline void _1acb3998d_ready_comptimeRangeKind_3(jule::Trait<_1acb3a20d_comptimeRangeKind> _self_, jule::Ptr<_1abd1497c_Var>* _1329_keyA, jule::Ptr<_1abd1497c_Var>* _1346_keyB) {
	_1acb472a3_ready(_self_.safe_ptr<_1acb46703_comptimeParams>(), _1329_keyA, _1346_keyB);
}
inline void _1acb39d56_step_comptimeRangeKind_3(jule::Trait<_1acb3a20d_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1abd1497c_Var>* _1436_keyA, jule::Ptr<_1abd1497c_Var>* _1453_keyB) {
	_1acb4766b_step(_self_.safe_ptr<_1acb46703_comptimeParams>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1acb3a0ba_len_comptimeRangeKind_3(jule::Trait<_1acb3a20d_comptimeRangeKind> _self_) {
	return _1acb478d0_len(_self_.safe_ptr<_1acb46703_comptimeParams>());
}
inline void _1acb3998d_ready_comptimeRangeKind_4(jule::Trait<_1acb3a20d_comptimeRangeKind> _self_, jule::Ptr<_1abd1497c_Var>* _1329_keyA, jule::Ptr<_1abd1497c_Var>* _1346_keyB) {
	_1acb4876b_ready(_self_.safe_ptr<_1acb47bbb_comptimeTypeInfos>(), _1329_keyA, _1346_keyB);
}
inline void _1acb39d56_step_comptimeRangeKind_4(jule::Trait<_1acb3a20d_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1abd1497c_Var>* _1436_keyA, jule::Ptr<_1abd1497c_Var>* _1453_keyB) {
	_1acb48b34_step(_self_.safe_ptr<_1acb47bbb_comptimeTypeInfos>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1acb3a0ba_len_comptimeRangeKind_4(jule::Trait<_1acb3a20d_comptimeRangeKind> _self_) {
	return _1acb48d98_len(_self_.safe_ptr<_1acb47bbb_comptimeTypeInfos>());
}
inline void _1acb3998d_ready_comptimeRangeKind_5(jule::Trait<_1acb3a20d_comptimeRangeKind> _self_, jule::Ptr<_1abd1497c_Var>* _1329_keyA, jule::Ptr<_1abd1497c_Var>* _1346_keyB) {
	_1acb52d2a_ready(_self_.safe_ptr<_1acb5227a_comptimeFiles>(), _1329_keyA, _1346_keyB);
}
inline void _1acb39d56_step_comptimeRangeKind_5(jule::Trait<_1acb3a20d_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1abd1497c_Var>* _1436_keyA, jule::Ptr<_1abd1497c_Var>* _1453_keyB) {
	_1acb531e3_step(_self_.safe_ptr<_1acb5227a_comptimeFiles>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1acb3a0ba_len_comptimeRangeKind_5(jule::Trait<_1acb3a20d_comptimeRangeKind> _self_) {
	return _1acb53457_len(_self_.safe_ptr<_1acb5227a_comptimeFiles>());
}
inline void _1abcd7620_SetModPath_Importer_0(jule::Trait<_1abcd86ed_Importer> _self_, jule::Str _1729_path) {
	_1a3e27ceb_SetModPath(_self_.safe_ptr<_1a3e27290_JuleImporter>(), _1729_path);
}
inline jule::Str _1abcd7862_GetModPath_Importer_0(jule::Trait<_1abcd86ed_Importer> _self_) {
	return _1a3e28060_GetModPath(_self_.safe_ptr<_1a3e27290_JuleImporter>());
}
inline jule::Str _1abcd7b70_ModById_Importer_0(jule::Trait<_1abcd86ed_Importer> _self_, jule::I64 _2522_id) {
	return _1a3e2836d_ModById(_self_.safe_ptr<_1a3e27290_JuleImporter>(), _2522_id);
}
inline jule::Ptr<_1abcdb39e_ImportInfo> _1abcd7e7d_GetImport_Importer_0(jule::Trait<_1abcd86ed_Importer> _self_, jule::Str _3128_path) {
	return _1a3e2867b_GetImport(_self_.safe_ptr<_1a3e27290_JuleImporter>(), _3128_path);
}
inline __jule_tuple_sx_1acaa352d_Ast__jule_tuple_s_20943da3c_Log _1abcd8335_ImportPackage_Importer_0(jule::Trait<_1abcd86ed_Importer> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod) {
	return _1a3e28a33_ImportPackage(_self_.safe_ptr<_1a3e27290_JuleImporter>(), _3732_path, _3743_update_mod);
}
inline void _1abcd85aa_Imported_Importer_0(jule::Trait<_1abcd86ed_Importer> _self_, jule::Ptr<_1abcdb39e_ImportInfo> _4131__0) {
	_1a3e28ca8_Imported(_self_.safe_ptr<_1a3e27290_JuleImporter>(), _4131__0);
}
inline jule::Str _1acca42de_Str_Kind_0(jule::Trait<_1acca4740_Kind> _self_) {
	return _1acb0a19a_Str(_self_.safe_ptr<_1acb09d37_StructIns>());
}
inline jule::Bool _1acca45ec_Equal_Kind_0(jule::Trait<_1acca4740_Kind> _self_, jule::Ptr<_1acca4ba2_TypeKind> _5621_other) {
	return _1acb0a4a8_Equal(_self_.data.as<_1acb09d37_StructIns>(), _5621_other);
}
inline jule::Str _1acca42de_Str_Kind_1(jule::Trait<_1acca4740_Kind> _self_) {
	return _1acb251b5_Str(_self_.safe_ptr<_1acb24d85_FnIns>());
}
inline jule::Bool _1acca45ec_Equal_Kind_1(jule::Trait<_1acca4740_Kind> _self_, jule::Ptr<_1acca4ba2_TypeKind> _5621_other) {
	return _1acb254c3_Equal(_self_.data.as<_1acb24d85_FnIns>(), _5621_other);
}
inline jule::Str _1acca42de_Str_Kind_2(jule::Trait<_1acca4740_Kind> _self_) {
	return _1acb347ac_Str(_self_.safe_ptr<_1acb34405_Trait>());
}
inline jule::Bool _1acca45ec_Equal_Kind_2(jule::Trait<_1acca4740_Kind> _self_, jule::Ptr<_1acca4ba2_TypeKind> _5621_other) {
	return _1acb34aba_Equal(_self_.data.as<_1acb34405_Trait>(), _5621_other);
}
inline jule::Str _1acca42de_Str_Kind_3(jule::Trait<_1acca4740_Kind> _self_) {
	return _1acb36eeb_Str(_self_.safe_ptr<_1acb36b88_Enum>());
}
inline jule::Bool _1acca45ec_Equal_Kind_3(jule::Trait<_1acca4740_Kind> _self_, jule::Ptr<_1acca4ba2_TypeKind> _5621_other) {
	return _1acb37309_Equal(_self_.data.as<_1acb36b88_Enum>(), _5621_other);
}
inline jule::Str _1acca42de_Str_Kind_4(jule::Trait<_1acca4740_Kind> _self_) {
	return _1acb385b3_Str(_self_.safe_ptr<_1acb38283_TypeEnum>());
}
inline jule::Bool _1acca45ec_Equal_Kind_4(jule::Trait<_1acca4740_Kind> _self_, jule::Ptr<_1acca4ba2_TypeKind> _5621_other) {
	return _1acb388c1_Equal(_self_.data.as<_1acb38283_TypeEnum>(), _5621_other);
}
inline jule::Str _1acca42de_Str_Kind_5(jule::Trait<_1acca4740_Kind> _self_) {
	return _1acb3a791_Str(_self_.safe_ptr<_1acb3a3d9_comptimeRange>());
}
inline jule::Bool _1acca45ec_Equal_Kind_5(jule::Trait<_1acca4740_Kind> _self_, jule::Ptr<_1acca4ba2_TypeKind> _5621_other) {
	return _1acb3aa9e_Equal(_self_.data.as<_1acb3a3d9_comptimeRange>(), _5621_other);
}
inline jule::Str _1acca42de_Str_Kind_6(jule::Trait<_1acca4740_Kind> _self_) {
	return _1acb3b242_Str(_self_.safe_ptr<_1acb3adce_comptimeStructField>());
}
inline jule::Bool _1acca45ec_Equal_Kind_6(jule::Trait<_1acca4740_Kind> _self_, jule::Ptr<_1acca4ba2_TypeKind> _5621_other) {
	return _1acb3b550_Equal(_self_.data.as<_1acb3adce_comptimeStructField>(), _5621_other);
}
inline jule::Str _1acca42de_Str_Kind_7(jule::Trait<_1acca4740_Kind> _self_) {
	return _1acb3cc7c_Str(_self_.safe_ptr<_1acb3c908_comptimeStructFields>());
}
inline jule::Bool _1acca45ec_Equal_Kind_7(jule::Trait<_1acca4740_Kind> _self_, jule::Ptr<_1acca4ba2_TypeKind> _5621_other) {
	return _1acb3d08a_Equal(_self_.data.as<_1acb3c908_comptimeStructFields>(), _5621_other);
}
inline jule::Str _1acca42de_Str_Kind_8(jule::Trait<_1acca4740_Kind> _self_) {
	return _1acb3e245_Str(_self_.safe_ptr<_1acb3ddd2_comptimeStatic>());
}
inline jule::Bool _1acca45ec_Equal_Kind_8(jule::Trait<_1acca4740_Kind> _self_, jule::Ptr<_1acca4ba2_TypeKind> _5621_other) {
	return _1acb3e553_Equal(_self_.data.as<_1acb3ddd2_comptimeStatic>(), _5621_other);
}
inline jule::Str _1acca42de_Str_Kind_9(jule::Trait<_1acca4740_Kind> _self_) {
	return _1acb40d07_Str(_self_.safe_ptr<_1acb40994_comptimeStatics>());
}
inline jule::Bool _1acca45ec_Equal_Kind_9(jule::Trait<_1acca4740_Kind> _self_, jule::Ptr<_1acca4ba2_TypeKind> _5621_other) {
	return _1acb41115_Equal(_self_.data.as<_1acb40994_comptimeStatics>(), _5621_other);
}
inline jule::Str _1acca42de_Str_Kind_10(jule::Trait<_1acca4740_Kind> _self_) {
	return _1acb42248_Str(_self_.safe_ptr<_1acb41dd5_comptimeEnumField>());
}
inline jule::Bool _1acca45ec_Equal_Kind_10(jule::Trait<_1acca4740_Kind> _self_, jule::Ptr<_1acca4ba2_TypeKind> _5621_other) {
	return _1acb42556_Equal(_self_.data.as<_1acb41dd5_comptimeEnumField>(), _5621_other);
}
inline jule::Str _1acca42de_Str_Kind_11(jule::Trait<_1acca4740_Kind> _self_) {
	return _1acb43579_Str(_self_.safe_ptr<_1acb43106_comptimeEnumFields>());
}
inline jule::Bool _1acca45ec_Equal_Kind_11(jule::Trait<_1acca4740_Kind> _self_, jule::Ptr<_1acca4ba2_TypeKind> _5621_other) {
	return _1acb43887_Equal(_self_.data.as<_1acb43106_comptimeEnumFields>(), _5621_other);
}
inline jule::Str _1acca42de_Str_Kind_12(jule::Trait<_1acca4740_Kind> _self_) {
	return _1acb449ba_Str(_self_.safe_ptr<_1acb44657_comptimeParam>());
}
inline jule::Bool _1acca45ec_Equal_Kind_12(jule::Trait<_1acca4740_Kind> _self_, jule::Ptr<_1acca4ba2_TypeKind> _5621_other) {
	return _1acb44cc8_Equal(_self_.data.as<_1acb44657_comptimeParam>(), _5621_other);
}
inline jule::Str _1acca42de_Str_Kind_13(jule::Trait<_1acca4740_Kind> _self_) {
	return _1acb46a66_Str(_self_.safe_ptr<_1acb46703_comptimeParams>());
}
inline jule::Bool _1acca45ec_Equal_Kind_13(jule::Trait<_1acca4740_Kind> _self_, jule::Ptr<_1acca4ba2_TypeKind> _5621_other) {
	return _1acb46d74_Equal(_self_.data.as<_1acb46703_comptimeParams>(), _5621_other);
}
inline jule::Str _1acca42de_Str_Kind_14(jule::Trait<_1acca4740_Kind> _self_) {
	return _1acb4802e_Str(_self_.safe_ptr<_1acb47bbb_comptimeTypeInfos>());
}
inline jule::Bool _1acca45ec_Equal_Kind_14(jule::Trait<_1acca4740_Kind> _self_, jule::Ptr<_1acca4ba2_TypeKind> _5621_other) {
	return _1acb4833c_Equal(_self_.data.as<_1acb47bbb_comptimeTypeInfos>(), _5621_other);
}
inline jule::Str _1acca42de_Str_Kind_15(jule::Trait<_1acca4740_Kind> _self_) {
	return _1acb494e7_Str(_self_.safe_ptr<_1acb49184_comptimeTypeInfo>());
}
inline jule::Bool _1acca45ec_Equal_Kind_15(jule::Trait<_1acca4740_Kind> _self_, jule::Ptr<_1acca4ba2_TypeKind> _5621_other) {
	return _1acb49805_Equal(_self_.data.as<_1acb49184_comptimeTypeInfo>(), _5621_other);
}
inline jule::Str _1acca42de_Str_Kind_16(jule::Trait<_1acca4740_Kind> _self_) {
	return _1acb4eee2_Str(_self_.safe_ptr<_1acb4eb7e_comptimeValue>());
}
inline jule::Bool _1acca45ec_Equal_Kind_16(jule::Trait<_1acca4740_Kind> _self_, jule::Ptr<_1acca4ba2_TypeKind> _5621_other) {
	return _1acb50300_Equal(_self_.data.as<_1acb4eb7e_comptimeValue>(), _5621_other);
}
inline jule::Str _1acca42de_Str_Kind_17(jule::Trait<_1acca4740_Kind> _self_) {
	return _1acb525dd_Str(_self_.safe_ptr<_1acb5227a_comptimeFiles>());
}
inline jule::Bool _1acca45ec_Equal_Kind_17(jule::Trait<_1acca4740_Kind> _self_, jule::Ptr<_1acca4ba2_TypeKind> _5621_other) {
	return _1acb528eb_Equal(_self_.data.as<_1acb5227a_comptimeFiles>(), _5621_other);
}
inline jule::Str _1acca42de_Str_Kind_18(jule::Trait<_1acca4740_Kind> _self_) {
	return _1acb53aa6_Str(_self_.safe_ptr<_1acb53743_comptimeFile>());
}
inline jule::Bool _1acca45ec_Equal_Kind_18(jule::Trait<_1acca4740_Kind> _self_, jule::Ptr<_1acca4ba2_TypeKind> _5621_other) {
	return _1acb53db4_Equal(_self_.data.as<_1acb53743_comptimeFile>(), _5621_other);
}
inline jule::Str _1acca42de_Str_Kind_19(jule::Trait<_1acca4740_Kind> _self_) {
	return _1acca5059_Str(_self_.safe_ptr<_1acca4ba2_TypeKind>());
}
inline jule::Bool _1acca45ec_Equal_Kind_19(jule::Trait<_1acca4740_Kind> _self_, jule::Ptr<_1acca4ba2_TypeKind> _5621_other) {
	return _1acca5367_Equal(_self_.data.as<_1acca4ba2_TypeKind>(), _5621_other);
}
inline jule::Str _1acca42de_Str_Kind_20(jule::Trait<_1acca4740_Kind> _self_) {
	return _1accac737_Str(_self_.safe_ptr<_1accac407_Prim>());
}
inline jule::Bool _1acca45ec_Equal_Kind_20(jule::Trait<_1acca4740_Kind> _self_, jule::Ptr<_1acca4ba2_TypeKind> _5621_other) {
	return _1accaca45_Equal(_self_.data.as<_1accac407_Prim>(), _5621_other);
}
inline jule::Str _1acca42de_Str_Kind_21(jule::Trait<_1acca4740_Kind> _self_) {
	return _1accb0ebb_Str(_self_.safe_ptr<_1accb0b58_Sptr>());
}
inline jule::Bool _1acca45ec_Equal_Kind_21(jule::Trait<_1acca4740_Kind> _self_, jule::Ptr<_1acca4ba2_TypeKind> _5621_other) {
	return _1accb12c9_Equal(_self_.data.as<_1accb0b58_Sptr>(), _5621_other);
}
inline jule::Str _1acca42de_Str_Kind_22(jule::Trait<_1acca4740_Kind> _self_) {
	return _1accb1a38_Str(_self_.safe_ptr<_1accb15b5_Slc>());
}
inline jule::Bool _1acca45ec_Equal_Kind_22(jule::Trait<_1acca4740_Kind> _self_, jule::Ptr<_1acca4ba2_TypeKind> _5621_other) {
	return _1accb1d46_Equal(_self_.data.as<_1accb15b5_Slc>(), _5621_other);
}
inline jule::Str _1acca42de_Str_Kind_23(jule::Trait<_1acca4740_Kind> _self_) {
	return _1accb252d_Str(_self_.safe_ptr<_1accb21ba_Tuple>());
}
inline jule::Bool _1acca45ec_Equal_Kind_23(jule::Trait<_1acca4740_Kind> _self_, jule::Ptr<_1acca4ba2_TypeKind> _5621_other) {
	return _1accb283b_Equal(_self_.data.as<_1accb21ba_Tuple>(), _5621_other);
}
inline jule::Str _1acca42de_Str_Kind_24(jule::Trait<_1acca4740_Kind> _self_) {
	return _1accb2ece_Str(_self_.safe_ptr<_1accb2b6b_Map>());
}
inline jule::Bool _1acca45ec_Equal_Kind_24(jule::Trait<_1acca4740_Kind> _self_, jule::Ptr<_1acca4ba2_TypeKind> _5621_other) {
	return _1accb32dc_Equal(_self_.data.as<_1accb2b6b_Map>(), _5621_other);
}
inline jule::Str _1acca42de_Str_Kind_25(jule::Trait<_1acca4740_Kind> _self_) {
	return _1accb3ac3_Str(_self_.safe_ptr<_1accb3760_Arr>());
}
inline jule::Bool _1acca45ec_Equal_Kind_25(jule::Trait<_1acca4740_Kind> _self_, jule::Ptr<_1acca4ba2_TypeKind> _5621_other) {
	return _1accb3dd1_Equal(_self_.data.as<_1accb3760_Arr>(), _5621_other);
}
inline jule::Str _1acca42de_Str_Kind_26(jule::Trait<_1acca4740_Kind> _self_) {
	return _1accb4530_Str(_self_.safe_ptr<_1accb41bc_Ptr>());
}
inline jule::Bool _1acca45ec_Equal_Kind_26(jule::Trait<_1acca4740_Kind> _self_, jule::Ptr<_1acca4ba2_TypeKind> _5621_other) {
	return _1accb483d_Equal(_self_.data.as<_1accb41bc_Ptr>(), _5621_other);
}
inline jule::Str _1acca42de_Str_Kind_27(jule::Trait<_1acca4740_Kind> _self_) {
	return _1a48e3068_Str(_self_.safe_ptr<_1a48e2d04_customType>());
}
inline jule::Bool _1acca45ec_Equal_Kind_27(jule::Trait<_1acca4740_Kind> _self_, jule::Ptr<_1acca4ba2_TypeKind> _5621_other) {
	return _1a48e3376_Equal(_self_.data.as<_1a48e2d04_customType>(), _5621_other);
}
inline jule::Ptr<_1abcdb39e_ImportInfo> _1accc1493_SelectPackage_Lookup_0(jule::Trait<_1accc2ecd_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1abcdb39e_ImportInfo>)> _932_selector) {
	return _1abcc49d6_SelectPackage(_self_.safe_ptr<_1abcc4563_scopeChecker>(), _932_selector);
}
inline jule::Ptr<_1abd1497c_Var> _1accc184a_FindVar_Lookup_0(jule::Trait<_1accc2ecd_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1abcc4d8d_FindVar(_self_.safe_ptr<_1abcc4563_scopeChecker>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1acca3e59_TypeAlias> _1accc1c02_FindTypeAlias_Lookup_0(jule::Trait<_1accc2ecd_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1abcc5245_FindTypeAlias(_self_.safe_ptr<_1abcc4563_scopeChecker>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1acb07021_Struct> _1accc20a9_FindStruct_Lookup_0(jule::Trait<_1accc2ecd_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1abcc55ec_FindStruct(_self_.safe_ptr<_1abcc4563_scopeChecker>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1acb221d4_Fn> _1accc2461_FindFn_Lookup_0(jule::Trait<_1accc2ecd_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1abcc59a4_FindFn(_self_.safe_ptr<_1abcc4563_scopeChecker>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1acb34405_Trait> _1accc276e_FindTrait_Lookup_0(jule::Trait<_1accc2ecd_Lookup> _self_, jule::Str _2928_ident) {
	return _1abcc5cb2_FindTrait(_self_.safe_ptr<_1abcc4563_scopeChecker>(), _2928_ident);
}
inline jule::Ptr<_1acb36b88_Enum> _1accc2a7c_FindEnum_Lookup_0(jule::Trait<_1accc2ecd_Lookup> _self_, jule::Str _3327_ident) {
	return _1abcc60c0_FindEnum(_self_.safe_ptr<_1abcc4563_scopeChecker>(), _3327_ident);
}
inline jule::Ptr<_1acb38283_TypeEnum> _1accc2d8a_FindTypeEnum_Lookup_0(jule::Trait<_1accc2ecd_Lookup> _self_, jule::Str _3731_ident) {
	return _1abcc63cd_FindTypeEnum(_self_.safe_ptr<_1abcc4563_scopeChecker>(), _3731_ident);
}
inline jule::Ptr<_1abcdb39e_ImportInfo> _1accc1493_SelectPackage_Lookup_1(jule::Trait<_1accc2ecd_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1abcdb39e_ImportInfo>)> _932_selector) {
	return _1abcdb866_SelectPackage(_self_.safe_ptr<_1abcdb39e_ImportInfo>(), _932_selector);
}
inline jule::Ptr<_1abd1497c_Var> _1accc184a_FindVar_Lookup_1(jule::Trait<_1accc2ecd_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1abcdbc1d_FindVar(_self_.safe_ptr<_1abcdb39e_ImportInfo>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1acca3e59_TypeAlias> _1accc1c02_FindTypeAlias_Lookup_1(jule::Trait<_1accc2ecd_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1abcdc0c5_FindTypeAlias(_self_.safe_ptr<_1abcdb39e_ImportInfo>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1acb07021_Struct> _1accc20a9_FindStruct_Lookup_1(jule::Trait<_1accc2ecd_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1abcdc47c_FindStruct(_self_.safe_ptr<_1abcdb39e_ImportInfo>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1acb221d4_Fn> _1accc2461_FindFn_Lookup_1(jule::Trait<_1accc2ecd_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1abcdc834_FindFn(_self_.safe_ptr<_1abcdb39e_ImportInfo>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1acb34405_Trait> _1accc276e_FindTrait_Lookup_1(jule::Trait<_1accc2ecd_Lookup> _self_, jule::Str _2928_ident) {
	return _1abcdcb42_FindTrait(_self_.safe_ptr<_1abcdb39e_ImportInfo>(), _2928_ident);
}
inline jule::Ptr<_1acb36b88_Enum> _1accc2a7c_FindEnum_Lookup_1(jule::Trait<_1accc2ecd_Lookup> _self_, jule::Str _3327_ident) {
	return _1abcdce50_FindEnum(_self_.safe_ptr<_1abcdb39e_ImportInfo>(), _3327_ident);
}
inline jule::Ptr<_1acb38283_TypeEnum> _1accc2d8a_FindTypeEnum_Lookup_1(jule::Trait<_1accc2ecd_Lookup> _self_, jule::Str _3731_ident) {
	return _1abcdd25d_FindTypeEnum(_self_.safe_ptr<_1abcdb39e_ImportInfo>(), _3731_ident);
}
inline jule::Ptr<_1abcdb39e_ImportInfo> _1accc1493_SelectPackage_Lookup_2(jule::Trait<_1accc2ecd_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1abcdb39e_ImportInfo>)> _932_selector) {
	return _1abcde45c_SelectPackage(_self_.safe_ptr<_1abcdded9_Package>(), _932_selector);
}
inline jule::Ptr<_1abd1497c_Var> _1accc184a_FindVar_Lookup_2(jule::Trait<_1accc2ecd_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1abcde814_FindVar(_self_.safe_ptr<_1abcdded9_Package>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1acca3e59_TypeAlias> _1accc1c02_FindTypeAlias_Lookup_2(jule::Trait<_1accc2ecd_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1abcdebbb_FindTypeAlias(_self_.safe_ptr<_1abcdded9_Package>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1acb07021_Struct> _1accc20a9_FindStruct_Lookup_2(jule::Trait<_1accc2ecd_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1abce0073_FindStruct(_self_.safe_ptr<_1abcdded9_Package>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1acb221d4_Fn> _1accc2461_FindFn_Lookup_2(jule::Trait<_1accc2ecd_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1abce042a_FindFn(_self_.safe_ptr<_1abcdded9_Package>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1acb34405_Trait> _1accc276e_FindTrait_Lookup_2(jule::Trait<_1accc2ecd_Lookup> _self_, jule::Str _2928_ident) {
	return _1abce0738_FindTrait(_self_.safe_ptr<_1abcdded9_Package>(), _2928_ident);
}
inline jule::Ptr<_1acb36b88_Enum> _1accc2a7c_FindEnum_Lookup_2(jule::Trait<_1accc2ecd_Lookup> _self_, jule::Str _3327_ident) {
	return _1abce0a46_FindEnum(_self_.safe_ptr<_1abcdded9_Package>(), _3327_ident);
}
inline jule::Ptr<_1acb38283_TypeEnum> _1accc2d8a_FindTypeEnum_Lookup_2(jule::Trait<_1accc2ecd_Lookup> _self_, jule::Str _3731_ident) {
	return _1abce0d54_FindTypeEnum(_self_.safe_ptr<_1abcdded9_Package>(), _3731_ident);
}
inline jule::Ptr<_1abcdb39e_ImportInfo> _1accc1493_SelectPackage_Lookup_3(jule::Trait<_1accc2ecd_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1abcdb39e_ImportInfo>)> _932_selector) {
	return _1abce4ae4_SelectPackage(_self_.safe_ptr<_1abce4671_Sema>(), _932_selector);
}
inline jule::Ptr<_1abd1497c_Var> _1accc184a_FindVar_Lookup_3(jule::Trait<_1accc2ecd_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1abce4e9b_FindVar(_self_.safe_ptr<_1abce4671_Sema>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1acca3e59_TypeAlias> _1accc1c02_FindTypeAlias_Lookup_3(jule::Trait<_1accc2ecd_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1abce5353_FindTypeAlias(_self_.safe_ptr<_1abce4671_Sema>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1acb07021_Struct> _1accc20a9_FindStruct_Lookup_3(jule::Trait<_1accc2ecd_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1abce570a_FindStruct(_self_.safe_ptr<_1abce4671_Sema>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1acb221d4_Fn> _1accc2461_FindFn_Lookup_3(jule::Trait<_1accc2ecd_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1abce5ab2_FindFn(_self_.safe_ptr<_1abce4671_Sema>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1acb34405_Trait> _1accc276e_FindTrait_Lookup_3(jule::Trait<_1accc2ecd_Lookup> _self_, jule::Str _2928_ident) {
	return _1abce5dc0_FindTrait(_self_.safe_ptr<_1abce4671_Sema>(), _2928_ident);
}
inline jule::Ptr<_1acb36b88_Enum> _1accc2a7c_FindEnum_Lookup_3(jule::Trait<_1accc2ecd_Lookup> _self_, jule::Str _3327_ident) {
	return _1abce61cd_FindEnum(_self_.safe_ptr<_1abce4671_Sema>(), _3327_ident);
}
inline jule::Ptr<_1acb38283_TypeEnum> _1accc2d8a_FindTypeEnum_Lookup_3(jule::Trait<_1accc2ecd_Lookup> _self_, jule::Str _3731_ident) {
	return _1abce64db_FindTypeEnum(_self_.safe_ptr<_1abce4671_Sema>(), _3731_ident);
}
inline jule::Ptr<_1abcdb39e_ImportInfo> _1accc1493_SelectPackage_Lookup_4(jule::Trait<_1accc2ecd_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1abcdb39e_ImportInfo>)> _932_selector) {
	return _1abd59708_SelectPackage(_self_.safe_ptr<_1abd59241_SymbolTable>(), _932_selector);
}
inline jule::Ptr<_1abd1497c_Var> _1accc184a_FindVar_Lookup_4(jule::Trait<_1accc2ecd_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1abd59ab0_FindVar(_self_.safe_ptr<_1abd59241_SymbolTable>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1acca3e59_TypeAlias> _1accc1c02_FindTypeAlias_Lookup_4(jule::Trait<_1accc2ecd_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1abd59e67_FindTypeAlias(_self_.safe_ptr<_1abd59241_SymbolTable>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1acb07021_Struct> _1accc20a9_FindStruct_Lookup_4(jule::Trait<_1accc2ecd_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1abd5a31e_FindStruct(_self_.safe_ptr<_1abd59241_SymbolTable>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1acb221d4_Fn> _1accc2461_FindFn_Lookup_4(jule::Trait<_1accc2ecd_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1abd5a6c6_FindFn(_self_.safe_ptr<_1abd59241_SymbolTable>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1acb34405_Trait> _1accc276e_FindTrait_Lookup_4(jule::Trait<_1accc2ecd_Lookup> _self_, jule::Str _2928_ident) {
	return _1abd5a9d4_FindTrait(_self_.safe_ptr<_1abd59241_SymbolTable>(), _2928_ident);
}
inline jule::Ptr<_1acb36b88_Enum> _1accc2a7c_FindEnum_Lookup_4(jule::Trait<_1accc2ecd_Lookup> _self_, jule::Str _3327_ident) {
	return _1abd5ace2_FindEnum(_self_.safe_ptr<_1abd59241_SymbolTable>(), _3327_ident);
}
inline jule::Ptr<_1acb38283_TypeEnum> _1accc2d8a_FindTypeEnum_Lookup_4(jule::Trait<_1accc2ecd_Lookup> _self_, jule::Str _3731_ident) {
	return _1abd5b100_FindTypeEnum(_self_.safe_ptr<_1abd59241_SymbolTable>(), _3731_ident);
}
inline jule::Str _1a49262dd_Name_CommonFlag_0(jule::Trait<_1a4955dcd_CommonFlag> _self_) {
	return _1a736ea8b_Name(_self_.safe_ptr<_1a736e7a0_Flag>());
}
inline jule::I32 _1a4926420_Short_CommonFlag_0(jule::Trait<_1a4955dcd_CommonFlag> _self_) {
	return _1a736ee32_Short(_self_.safe_ptr<_1a736e7a0_Flag>());
}
inline jule::Str _1a49265c9_What_CommonFlag_0(jule::Trait<_1a4955dcd_CommonFlag> _self_) {
	return _1a736ebbd_What(_self_.safe_ptr<_1a736e7a0_Flag>());
}
inline void _1a4955c9b_Reset_CommonFlag_0(jule::Trait<_1a4955dcd_CommonFlag> _self_) {
	_1a736ed00_Reset(_self_.safe_ptr<_1a736e7a0_Flag>());
}
inline jule::Str _1a49262dd_Name_CommonFlag_1(jule::Trait<_1a4955dcd_CommonFlag> _self_) {
	return _1a7372cae_Name(_self_.safe_ptr<_1a7373232_Flag>());
}
inline jule::I32 _1a4926420_Short_CommonFlag_1(jule::Trait<_1a4955dcd_CommonFlag> _self_) {
	return _1a7373782_Short(_self_.safe_ptr<_1a7373232_Flag>());
}
inline jule::Str _1a49265c9_What_CommonFlag_1(jule::Trait<_1a4955dcd_CommonFlag> _self_) {
	return _1a737351d_What(_self_.safe_ptr<_1a7373232_Flag>());
}
inline void _1a4955c9b_Reset_CommonFlag_1(jule::Trait<_1a4955dcd_CommonFlag> _self_) {
	_1a7373650_Reset(_self_.safe_ptr<_1a7373232_Flag>());
}
inline jule::Str _1a49262dd_Name_CommonFlag_2(jule::Trait<_1a4955dcd_CommonFlag> _self_) {
	return _1a7376466_Name(_self_.safe_ptr<_1a73768d9_Flag>());
}
inline jule::I32 _1a4926420_Short_CommonFlag_2(jule::Trait<_1a4955dcd_CommonFlag> _self_) {
	return _1a7376e39_Short(_self_.safe_ptr<_1a73768d9_Flag>());
}
inline jule::Str _1a49265c9_What_CommonFlag_2(jule::Trait<_1a4955dcd_CommonFlag> _self_) {
	return _1a7376bc5_What(_self_.safe_ptr<_1a73768d9_Flag>());
}
inline void _1a4955c9b_Reset_CommonFlag_2(jule::Trait<_1a4955dcd_CommonFlag> _self_) {
	_1a7376d07_Reset(_self_.safe_ptr<_1a73768d9_Flag>());
}
inline jule::Str _1a49262dd_Name_CommonFlag_3(jule::Trait<_1a4955dcd_CommonFlag> _self_) {
	return _1a7379b62_Name(_self_.safe_ptr<_1a737a0d5_Flag>());
}
inline jule::I32 _1a4926420_Short_CommonFlag_3(jule::Trait<_1a4955dcd_CommonFlag> _self_) {
	return _1a737a635_Short(_self_.safe_ptr<_1a737a0d5_Flag>());
}
inline jule::Str _1a49265c9_What_CommonFlag_3(jule::Trait<_1a4955dcd_CommonFlag> _self_) {
	return _1a737a3c1_What(_self_.safe_ptr<_1a737a0d5_Flag>());
}
inline void _1a4955c9b_Reset_CommonFlag_3(jule::Trait<_1a4955dcd_CommonFlag> _self_) {
	_1a737a503_Reset(_self_.safe_ptr<_1a737a0d5_Flag>());
}
inline jule::Str _1a49262dd_Name_CommonFlag_4(jule::Trait<_1a4955dcd_CommonFlag> _self_) {
	return _1a737d319_Name(_self_.safe_ptr<_1a737d78c_Flag>());
}
inline jule::I32 _1a4926420_Short_CommonFlag_4(jule::Trait<_1a4955dcd_CommonFlag> _self_) {
	return _1a737dcdc_Short(_self_.safe_ptr<_1a737d78c_Flag>());
}
inline jule::Str _1a49265c9_What_CommonFlag_4(jule::Trait<_1a4955dcd_CommonFlag> _self_) {
	return _1a737da78_What(_self_.safe_ptr<_1a737d78c_Flag>());
}
inline void _1a4955c9b_Reset_CommonFlag_4(jule::Trait<_1a4955dcd_CommonFlag> _self_) {
	_1a737dbaa_Reset(_self_.safe_ptr<_1a737d78c_Flag>());
}


static _1acb3a20d_comptimeRangeKindMptrData _1acb3a20d_comptimeRangeKind_mptr_data[] = {
	{
		._1acb3998d_ready=_1acb3998d_ready_comptimeRangeKind_0,
		._1acb39d56_step=_1acb39d56_step_comptimeRangeKind_0,
		._1acb3a0ba_len=_1acb3a0ba_len_comptimeRangeKind_0,
	},
	{
		._1acb3998d_ready=_1acb3998d_ready_comptimeRangeKind_1,
		._1acb39d56_step=_1acb39d56_step_comptimeRangeKind_1,
		._1acb3a0ba_len=_1acb3a0ba_len_comptimeRangeKind_1,
	},
	{
		._1acb3998d_ready=_1acb3998d_ready_comptimeRangeKind_2,
		._1acb39d56_step=_1acb39d56_step_comptimeRangeKind_2,
		._1acb3a0ba_len=_1acb3a0ba_len_comptimeRangeKind_2,
	},
	{
		._1acb3998d_ready=_1acb3998d_ready_comptimeRangeKind_3,
		._1acb39d56_step=_1acb39d56_step_comptimeRangeKind_3,
		._1acb3a0ba_len=_1acb3a0ba_len_comptimeRangeKind_3,
	},
	{
		._1acb3998d_ready=_1acb3998d_ready_comptimeRangeKind_4,
		._1acb39d56_step=_1acb39d56_step_comptimeRangeKind_4,
		._1acb3a0ba_len=_1acb3a0ba_len_comptimeRangeKind_4,
	},
	{
		._1acb3998d_ready=_1acb3998d_ready_comptimeRangeKind_5,
		._1acb39d56_step=_1acb39d56_step_comptimeRangeKind_5,
		._1acb3a0ba_len=_1acb3a0ba_len_comptimeRangeKind_5,
	},
};
static _1abcd86ed_ImporterMptrData _1abcd86ed_Importer_mptr_data[] = {
	{
		._1abcd7620_SetModPath=_1abcd7620_SetModPath_Importer_0,
		._1abcd7862_GetModPath=_1abcd7862_GetModPath_Importer_0,
		._1abcd7b70_ModById=_1abcd7b70_ModById_Importer_0,
		._1abcd7e7d_GetImport=_1abcd7e7d_GetImport_Importer_0,
		._1abcd8335_ImportPackage=_1abcd8335_ImportPackage_Importer_0,
		._1abcd85aa_Imported=_1abcd85aa_Imported_Importer_0,
	},
};
static _1acca4740_KindMptrData _1acca4740_Kind_mptr_data[] = {
	{
		._1acca42de_Str=_1acca42de_Str_Kind_0,
		._1acca45ec_Equal=_1acca45ec_Equal_Kind_0,
	},
	{
		._1acca42de_Str=_1acca42de_Str_Kind_1,
		._1acca45ec_Equal=_1acca45ec_Equal_Kind_1,
	},
	{
		._1acca42de_Str=_1acca42de_Str_Kind_2,
		._1acca45ec_Equal=_1acca45ec_Equal_Kind_2,
	},
	{
		._1acca42de_Str=_1acca42de_Str_Kind_3,
		._1acca45ec_Equal=_1acca45ec_Equal_Kind_3,
	},
	{
		._1acca42de_Str=_1acca42de_Str_Kind_4,
		._1acca45ec_Equal=_1acca45ec_Equal_Kind_4,
	},
	{
		._1acca42de_Str=_1acca42de_Str_Kind_5,
		._1acca45ec_Equal=_1acca45ec_Equal_Kind_5,
	},
	{
		._1acca42de_Str=_1acca42de_Str_Kind_6,
		._1acca45ec_Equal=_1acca45ec_Equal_Kind_6,
	},
	{
		._1acca42de_Str=_1acca42de_Str_Kind_7,
		._1acca45ec_Equal=_1acca45ec_Equal_Kind_7,
	},
	{
		._1acca42de_Str=_1acca42de_Str_Kind_8,
		._1acca45ec_Equal=_1acca45ec_Equal_Kind_8,
	},
	{
		._1acca42de_Str=_1acca42de_Str_Kind_9,
		._1acca45ec_Equal=_1acca45ec_Equal_Kind_9,
	},
	{
		._1acca42de_Str=_1acca42de_Str_Kind_10,
		._1acca45ec_Equal=_1acca45ec_Equal_Kind_10,
	},
	{
		._1acca42de_Str=_1acca42de_Str_Kind_11,
		._1acca45ec_Equal=_1acca45ec_Equal_Kind_11,
	},
	{
		._1acca42de_Str=_1acca42de_Str_Kind_12,
		._1acca45ec_Equal=_1acca45ec_Equal_Kind_12,
	},
	{
		._1acca42de_Str=_1acca42de_Str_Kind_13,
		._1acca45ec_Equal=_1acca45ec_Equal_Kind_13,
	},
	{
		._1acca42de_Str=_1acca42de_Str_Kind_14,
		._1acca45ec_Equal=_1acca45ec_Equal_Kind_14,
	},
	{
		._1acca42de_Str=_1acca42de_Str_Kind_15,
		._1acca45ec_Equal=_1acca45ec_Equal_Kind_15,
	},
	{
		._1acca42de_Str=_1acca42de_Str_Kind_16,
		._1acca45ec_Equal=_1acca45ec_Equal_Kind_16,
	},
	{
		._1acca42de_Str=_1acca42de_Str_Kind_17,
		._1acca45ec_Equal=_1acca45ec_Equal_Kind_17,
	},
	{
		._1acca42de_Str=_1acca42de_Str_Kind_18,
		._1acca45ec_Equal=_1acca45ec_Equal_Kind_18,
	},
	{
		._1acca42de_Str=_1acca42de_Str_Kind_19,
		._1acca45ec_Equal=_1acca45ec_Equal_Kind_19,
	},
	{
		._1acca42de_Str=_1acca42de_Str_Kind_20,
		._1acca45ec_Equal=_1acca45ec_Equal_Kind_20,
	},
	{
		._1acca42de_Str=_1acca42de_Str_Kind_21,
		._1acca45ec_Equal=_1acca45ec_Equal_Kind_21,
	},
	{
		._1acca42de_Str=_1acca42de_Str_Kind_22,
		._1acca45ec_Equal=_1acca45ec_Equal_Kind_22,
	},
	{
		._1acca42de_Str=_1acca42de_Str_Kind_23,
		._1acca45ec_Equal=_1acca45ec_Equal_Kind_23,
	},
	{
		._1acca42de_Str=_1acca42de_Str_Kind_24,
		._1acca45ec_Equal=_1acca45ec_Equal_Kind_24,
	},
	{
		._1acca42de_Str=_1acca42de_Str_Kind_25,
		._1acca45ec_Equal=_1acca45ec_Equal_Kind_25,
	},
	{
		._1acca42de_Str=_1acca42de_Str_Kind_26,
		._1acca45ec_Equal=_1acca45ec_Equal_Kind_26,
	},
	{
		._1acca42de_Str=_1acca42de_Str_Kind_27,
		._1acca45ec_Equal=_1acca45ec_Equal_Kind_27,
	},
};
static _1accc2ecd_LookupMptrData _1accc2ecd_Lookup_mptr_data[] = {
	{
		._1accc1493_SelectPackage=_1accc1493_SelectPackage_Lookup_0,
		._1accc184a_FindVar=_1accc184a_FindVar_Lookup_0,
		._1accc1c02_FindTypeAlias=_1accc1c02_FindTypeAlias_Lookup_0,
		._1accc20a9_FindStruct=_1accc20a9_FindStruct_Lookup_0,
		._1accc2461_FindFn=_1accc2461_FindFn_Lookup_0,
		._1accc276e_FindTrait=_1accc276e_FindTrait_Lookup_0,
		._1accc2a7c_FindEnum=_1accc2a7c_FindEnum_Lookup_0,
		._1accc2d8a_FindTypeEnum=_1accc2d8a_FindTypeEnum_Lookup_0,
	},
	{
		._1accc1493_SelectPackage=_1accc1493_SelectPackage_Lookup_1,
		._1accc184a_FindVar=_1accc184a_FindVar_Lookup_1,
		._1accc1c02_FindTypeAlias=_1accc1c02_FindTypeAlias_Lookup_1,
		._1accc20a9_FindStruct=_1accc20a9_FindStruct_Lookup_1,
		._1accc2461_FindFn=_1accc2461_FindFn_Lookup_1,
		._1accc276e_FindTrait=_1accc276e_FindTrait_Lookup_1,
		._1accc2a7c_FindEnum=_1accc2a7c_FindEnum_Lookup_1,
		._1accc2d8a_FindTypeEnum=_1accc2d8a_FindTypeEnum_Lookup_1,
	},
	{
		._1accc1493_SelectPackage=_1accc1493_SelectPackage_Lookup_2,
		._1accc184a_FindVar=_1accc184a_FindVar_Lookup_2,
		._1accc1c02_FindTypeAlias=_1accc1c02_FindTypeAlias_Lookup_2,
		._1accc20a9_FindStruct=_1accc20a9_FindStruct_Lookup_2,
		._1accc2461_FindFn=_1accc2461_FindFn_Lookup_2,
		._1accc276e_FindTrait=_1accc276e_FindTrait_Lookup_2,
		._1accc2a7c_FindEnum=_1accc2a7c_FindEnum_Lookup_2,
		._1accc2d8a_FindTypeEnum=_1accc2d8a_FindTypeEnum_Lookup_2,
	},
	{
		._1accc1493_SelectPackage=_1accc1493_SelectPackage_Lookup_3,
		._1accc184a_FindVar=_1accc184a_FindVar_Lookup_3,
		._1accc1c02_FindTypeAlias=_1accc1c02_FindTypeAlias_Lookup_3,
		._1accc20a9_FindStruct=_1accc20a9_FindStruct_Lookup_3,
		._1accc2461_FindFn=_1accc2461_FindFn_Lookup_3,
		._1accc276e_FindTrait=_1accc276e_FindTrait_Lookup_3,
		._1accc2a7c_FindEnum=_1accc2a7c_FindEnum_Lookup_3,
		._1accc2d8a_FindTypeEnum=_1accc2d8a_FindTypeEnum_Lookup_3,
	},
	{
		._1accc1493_SelectPackage=_1accc1493_SelectPackage_Lookup_4,
		._1accc184a_FindVar=_1accc184a_FindVar_Lookup_4,
		._1accc1c02_FindTypeAlias=_1accc1c02_FindTypeAlias_Lookup_4,
		._1accc20a9_FindStruct=_1accc20a9_FindStruct_Lookup_4,
		._1accc2461_FindFn=_1accc2461_FindFn_Lookup_4,
		._1accc276e_FindTrait=_1accc276e_FindTrait_Lookup_4,
		._1accc2a7c_FindEnum=_1accc2a7c_FindEnum_Lookup_4,
		._1accc2d8a_FindTypeEnum=_1accc2d8a_FindTypeEnum_Lookup_4,
	},
};
static _1a4955dcd_CommonFlagMptrData _1a4955dcd_CommonFlag_mptr_data[] = {
	{
		._1a49262dd_Name=_1a49262dd_Name_CommonFlag_0,
		._1a4926420_Short=_1a4926420_Short_CommonFlag_0,
		._1a49265c9_What=_1a49265c9_What_CommonFlag_0,
		._1a4955c9b_Reset=_1a4955c9b_Reset_CommonFlag_0,
	},
	{
		._1a49262dd_Name=_1a49262dd_Name_CommonFlag_1,
		._1a4926420_Short=_1a4926420_Short_CommonFlag_1,
		._1a49265c9_What=_1a49265c9_What_CommonFlag_1,
		._1a4955c9b_Reset=_1a4955c9b_Reset_CommonFlag_1,
	},
	{
		._1a49262dd_Name=_1a49262dd_Name_CommonFlag_2,
		._1a4926420_Short=_1a4926420_Short_CommonFlag_2,
		._1a49265c9_What=_1a49265c9_What_CommonFlag_2,
		._1a4955c9b_Reset=_1a4955c9b_Reset_CommonFlag_2,
	},
	{
		._1a49262dd_Name=_1a49262dd_Name_CommonFlag_3,
		._1a4926420_Short=_1a4926420_Short_CommonFlag_3,
		._1a49265c9_What=_1a49265c9_What_CommonFlag_3,
		._1a4955c9b_Reset=_1a4955c9b_Reset_CommonFlag_3,
	},
	{
		._1a49262dd_Name=_1a49262dd_Name_CommonFlag_4,
		._1a4926420_Short=_1a4926420_Short_CommonFlag_4,
		._1a49265c9_What=_1a49265c9_What_CommonFlag_4,
		._1a4955c9b_Reset=_1a4955c9b_Reset_CommonFlag_4,
	},
};


void __jule_any_type0_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type0_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_any_type0_dealloc, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type0_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type0 && __jule_any_type0_eq(any.data.alloc, (void*)&other); }
void __jule_any_type1_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type1_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_any_type1_dealloc, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type1_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type1 && __jule_any_type1_eq(any.data.alloc, (void*)&other); }
void __jule_any_type2_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type2_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_any_type2_dealloc, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type2_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type2 && __jule_any_type2_eq(any.data.alloc, (void*)&other); }
void __jule_any_type3_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other); }
jule::Str __jule_any_type3_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_any_type3_dealloc, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type3_compare(const jule::Any &any, const jule::U64 &other) { return any.type == &__jule_any_type3 && __jule_any_type3_eq(any.data.alloc, (void*)&other); }
void __jule_any_type4_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other); }
jule::Str __jule_any_type4_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_any_type4_dealloc, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type4_compare(const jule::Any &any, const jule::Bool &other) { return any.type == &__jule_any_type4 && __jule_any_type4_eq(any.data.alloc, (void*)&other); }
void __jule_any_type5_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other); }
jule::Str __jule_any_type5_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_any_type5_dealloc, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type5_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type5 && __jule_any_type5_eq(any.data.alloc, (void*)&other); }
void __jule_any_type6_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other); }
jule::Str __jule_any_type6_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_any_type6_dealloc, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
jule::Bool __jule_any_type6_compare(const jule::Any &any, const jule::F64 &other) { return any.type == &__jule_any_type6 && __jule_any_type6_eq(any.data.alloc, (void*)&other); }
void __jule_any_type7_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb24d85_FnIns>().dealloc(); }
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_any_type7_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_1acb24d85_FnIns> &other) { return any.type == &__jule_any_type7 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type8_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd1497c_Var>().dealloc(); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_any_type8_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_1abd1497c_Var> &other) { return any.type == &__jule_any_type8 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type9_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb09d37_StructIns>().dealloc(); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_any_type9_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1acb09d37_StructIns> &other) { return any.type == &__jule_any_type9 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type10_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb34405_Trait>().dealloc(); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_any_type10_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1acb34405_Trait> &other) { return any.type == &__jule_any_type10 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type11_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb02d52_Impl>().dealloc(); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_any_type11_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1acb02d52_Impl> &other) { return any.type == &__jule_any_type11 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type12_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acaed248_TypeAliasDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_any_type12_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1acaed248_TypeAliasDecl> &other) { return any.type == &__jule_any_type12 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type13_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb02071_StructDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_any_type13_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1acb02071_StructDecl> &other) { return any.type == &__jule_any_type13 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type14_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acae8908_FnDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_any_type14_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1acae8908_FnDecl> &other) { return any.type == &__jule_any_type14 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type15_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb02747_TraitDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_any_type15_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1acb02747_TraitDecl> &other) { return any.type == &__jule_any_type15 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type16_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acae98d7_VarDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_any_type16_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1acae98d7_VarDecl> &other) { return any.type == &__jule_any_type16 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type17_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb005d0_EnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_any_type17_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1acb005d0_EnumDecl> &other) { return any.type == &__jule_any_type17 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type18_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb014b0_TypeEnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_any_type18_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_1acb014b0_TypeEnumDecl> &other) { return any.type == &__jule_any_type18 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type19_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ddeb4b1c_Const>().dealloc(); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_any_type19_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_1ddeb4b1c_Const> &other) { return any.type == &__jule_any_type19 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type20_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acad7892_IdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_any_type20_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1acad7892_IdentTypeDecl> &other) { return any.type == &__jule_any_type20 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type21_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abcc0174_Label>().dealloc(); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_any_type21_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1abcc0174_Label> &other) { return any.type == &__jule_any_type21 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type22_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abcbc935_Scope>().dealloc(); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_any_type22_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1abcbc935_Scope> &other) { return any.type == &__jule_any_type22 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type23_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb1d345_BuiltinErrorCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_any_type23_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1acb1d345_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type23 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type24_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd5dc4b_Data>().dealloc(); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_any_type24_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1abd5dc4b_Data> &other) { return any.type == &__jule_any_type24 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type25_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb1e3e0_BackendEmitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_any_type25_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1acb1e3e0_BackendEmitExprModel> &other) { return any.type == &__jule_any_type25 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type26_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb16e98_BuiltinAppendCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_any_type26_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1acb16e98_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type26 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type27_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb1587b_BuiltinCloneCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_any_type27_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1acb1587b_BuiltinCloneCallExprModel> &other) { return any.type == &__jule_any_type27 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type28_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb15172_BuiltinOutCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_any_type28_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1acb15172_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type28 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type29_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb1555c_BuiltinOutlnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_any_type29_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1acb1555c_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type29 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type30_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb16151_BuiltinPanicCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_any_type30_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1acb16151_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type30 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type31_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb16607_BuiltinAssertCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_any_type31_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1acb16607_BuiltinAssertCallExprModel> &other) { return any.type == &__jule_any_type31 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type32_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb1ce5a_BuiltinCopyCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_any_type32_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1acb1ce5a_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type32 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type33_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb1cb19_BuiltinDeleteCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_any_type33_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1acb1cb19_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type33 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type34_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb1e6cb_FreeExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_any_type34_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1acb1e6cb_FreeExprModel> &other) { return any.type == &__jule_any_type34 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type35_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb1106e_FnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_any_type35_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1acb1106e_FnCallExprModel> &other) { return any.type == &__jule_any_type35 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type36_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abcbd491_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_any_type36_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1abcbd491_Conditional> &other) { return any.type == &__jule_any_type36 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type37_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abcbd77c_InfIter>().dealloc(); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_any_type37_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1abcbd77c_InfIter> &other) { return any.type == &__jule_any_type37 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type38_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acaeabc4_WhileKind>().dealloc(); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_any_type38_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1acaeabc4_WhileKind> &other) { return any.type == &__jule_any_type38 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type39_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abcbdc00_WhileIter>().dealloc(); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_any_type39_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1abcbdc00_WhileIter> &other) { return any.type == &__jule_any_type39 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type40_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acaeb565_RangeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_any_type40_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1acaeb565_RangeKind> &other) { return any.type == &__jule_any_type40 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type41_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abcbe5d5_RangeIter>().dealloc(); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_any_type41_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1abcbe5d5_RangeIter> &other) { return any.type == &__jule_any_type41 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type42_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abcbe9d1_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_any_type42_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1abcbe9d1_ContSt> &other) { return any.type == &__jule_any_type42 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type43_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abcc0460_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_any_type43_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1abcc0460_GotoSt> &other) { return any.type == &__jule_any_type43 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type44_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abcc0817_Postfix>().dealloc(); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_any_type44_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1abcc0817_Postfix> &other) { return any.type == &__jule_any_type44 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type45_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abcc0c8a_Assign>().dealloc(); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_any_type45_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1abcc0c8a_Assign> &other) { return any.type == &__jule_any_type45 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type46_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb11899_IndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_any_type46_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1acb11899_IndexingExprModel> &other) { return any.type == &__jule_any_type46 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type47_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abcc1142_MultiAssign>().dealloc(); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_any_type47_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1abcc1142_MultiAssign> &other) { return any.type == &__jule_any_type47 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type48_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abcc174c_Match>().dealloc(); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_any_type48_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1abcc174c_Match> &other) { return any.type == &__jule_any_type48 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type49_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abcc286e_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_any_type49_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1abcc286e_FallSt> &other) { return any.type == &__jule_any_type49 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type50_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abcbed88_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_any_type50_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1abcbed88_BreakSt> &other) { return any.type == &__jule_any_type50 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type51_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abcc2bc1_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_any_type51_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1abcc2bc1_RetSt> &other) { return any.type == &__jule_any_type51 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type52_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acae6e12_ScopeTree>().dealloc(); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_any_type52_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1acae6e12_ScopeTree> &other) { return any.type == &__jule_any_type52 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type53_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acadb456_Expr>().dealloc(); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_any_type53_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1acadb456_Expr> &other) { return any.type == &__jule_any_type53 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type54_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acaeca72_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_any_type54_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1acaeca72_Conditional> &other) { return any.type == &__jule_any_type54 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type55_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acaea3ee_Iter>().dealloc(); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_any_type55_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1acaea3ee_Iter> &other) { return any.type == &__jule_any_type55 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type56_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acaebcc4_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_any_type56_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1acaebcc4_ContSt> &other) { return any.type == &__jule_any_type56 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type57_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acae4629_LabelSt>().dealloc(); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_any_type57_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1acae4629_LabelSt> &other) { return any.type == &__jule_any_type57 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type58_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acae49d1_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_any_type58_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1acae49d1_GotoSt> &other) { return any.type == &__jule_any_type58 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type59_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acae5916_AssignSt>().dealloc(); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_any_type59_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1acae5916_AssignSt> &other) { return any.type == &__jule_any_type59 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type60_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acaedd92_MatchCase>().dealloc(); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_any_type60_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1acaedd92_MatchCase> &other) { return any.type == &__jule_any_type60 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type61_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acae4cbc_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_any_type61_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1acae4cbc_FallSt> &other) { return any.type == &__jule_any_type61 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type62_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acaeb91c_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_any_type62_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1acaeb91c_BreakSt> &other) { return any.type == &__jule_any_type62 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type63_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acae9c8e_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_any_type63_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1acae9c8e_RetSt> &other) { return any.type == &__jule_any_type63 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type64_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acadbce7_UseExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_any_type64_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1acadbce7_UseExpr> &other) { return any.type == &__jule_any_type64 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type65_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb221d4_Fn>().dealloc(); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_any_type65_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1acb221d4_Fn> &other) { return any.type == &__jule_any_type65 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type66_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb07021_Struct>().dealloc(); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_any_type66_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1acb07021_Struct> &other) { return any.type == &__jule_any_type66 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type67_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acca3e59_TypeAlias>().dealloc(); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_any_type67_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1acca3e59_TypeAlias> &other) { return any.type == &__jule_any_type67 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type68_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb36b88_Enum>().dealloc(); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_any_type68_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1acb36b88_Enum> &other) { return any.type == &__jule_any_type68 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type69_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb38283_TypeEnum>().dealloc(); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_any_type69_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1acb38283_TypeEnum> &other) { return any.type == &__jule_any_type69 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type70_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb13109_TraitSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_any_type70_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1acb13109_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type70 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type71_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb138e0_StructSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_any_type71_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1acb138e0_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type71 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type72_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb1443a_CommonIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_any_type72_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1acb1443a_CommonIdentExprModel> &other) { return any.type == &__jule_any_type72 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type73_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb1499b_CommonSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_any_type73_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1acb1499b_CommonSubIdentExprModel> &other) { return any.type == &__jule_any_type73 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type74_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb0e5ab_UnaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_any_type74_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1acb0e5ab_UnaryExprModel> &other) { return any.type == &__jule_any_type74 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type75_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acad9487_ArrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_any_type75_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_1acad9487_ArrTypeDecl> &other) { return any.type == &__jule_any_type75 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type76_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acad86d9_SlcTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_any_type76_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1acad86d9_SlcTypeDecl> &other) { return any.type == &__jule_any_type76 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type77_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acad8cb1_PtrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_any_type77_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_1acad8cb1_PtrTypeDecl> &other) { return any.type == &__jule_any_type77 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type78_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acad82dd_SptrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_any_type78_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1acad82dd_SptrTypeDecl> &other) { return any.type == &__jule_any_type78 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type79_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acad9b91_MapTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_any_type79_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1acad9b91_MapTypeDecl> &other) { return any.type == &__jule_any_type79 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type80_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acad89c5_TupleTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_any_type80_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1acad89c5_TupleTypeDecl> &other) { return any.type == &__jule_any_type80 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type81_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acaddb0c_VariadicExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_any_type81_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_1acaddb0c_VariadicExpr> &other) { return any.type == &__jule_any_type81 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type82_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb11426_SliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_any_type82_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1acb11426_SliceExprModel> &other) { return any.type == &__jule_any_type82 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type83_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acae0ceb_FieldExprPair>().dealloc(); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_any_type83_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1acae0ceb_FieldExprPair> &other) { return any.type == &__jule_any_type83 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type84_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acae2429_KeyValPair>().dealloc(); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_any_type84_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1acae2429_KeyValPair> &other) { return any.type == &__jule_any_type84 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type85_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acadd04b_IdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_any_type85_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1acadd04b_IdentExpr> &other) { return any.type == &__jule_any_type85 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type86_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acadc0d3_TupleExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_any_type86_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1acadc0d3_TupleExpr> &other) { return any.type == &__jule_any_type86 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type87_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb14c98_TupleExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_any_type87_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1acb14c98_TupleExprModel> &other) { return any.type == &__jule_any_type87 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type88_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb1dc19_RuneExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_any_type88_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1acb1dc19_RuneExprModel> &other) { return any.type == &__jule_any_type88 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type89_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acca4ba2_TypeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_any_type89_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1acca4ba2_TypeKind> &other) { return any.type == &__jule_any_type89 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type90_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb1414e_ArrayExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_any_type90_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1acb1414e_ArrayExprModel> &other) { return any.type == &__jule_any_type90 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type91_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acade7de_SubIdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_any_type91_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1acade7de_SubIdentExpr> &other) { return any.type == &__jule_any_type91 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type92_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acad7b7d_SubIdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_any_type92_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1acad7b7d_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type92 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type93_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acadd755_UnaryExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_any_type93_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1acadd755_UnaryExpr> &other) { return any.type == &__jule_any_type93 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type94_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acad72cb_TypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_any_type94_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1acad72cb_TypeDecl> &other) { return any.type == &__jule_any_type94 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type95_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acade36b_NsSelectionExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_any_type95_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1acade36b_NsSelectionExpr> &other) { return any.type == &__jule_any_type95 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type96_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acad8002_NamespaceTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_any_type96_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1acad8002_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type96 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type97_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb12aba_SlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_any_type97_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1acb12aba_SlicingExprModel> &other) { return any.type == &__jule_any_type97 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type98_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb106bc_CastingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_any_type98_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1acb106bc_CastingExprModel> &other) { return any.type == &__jule_any_type98 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type99_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acae2a9a_SliceExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_any_type99_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_1acae2a9a_SliceExpr> &other) { return any.type == &__jule_any_type99 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type100_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb0ed5e_StructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_any_type100_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1acb0ed5e_StructLitExprModel> &other) { return any.type == &__jule_any_type100 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type101_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb13c86_StructStaticIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_any_type101_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_1acb13c86_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type101 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type102_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb1257b_MapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_any_type102_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1acb1257b_MapExprModel> &other) { return any.type == &__jule_any_type102 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type103_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb11c51_AnonFnExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_any_type103_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1acb11c51_AnonFnExprModel> &other) { return any.type == &__jule_any_type103 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type104_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acadb742_RangeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_any_type104_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1acadb742_RangeExpr> &other) { return any.type == &__jule_any_type104 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type105_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acadc48a_LitExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_any_type105_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1acadc48a_LitExpr> &other) { return any.type == &__jule_any_type105 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type106_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acadcac8_UnsafeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_any_type106_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1acadcac8_UnsafeExpr> &other) { return any.type == &__jule_any_type106 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type107_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acae3408_IndexingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_any_type107_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1acae3408_IndexingExpr> &other) { return any.type == &__jule_any_type107 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type108_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acae3a13_SlicingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_any_type108_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1acae3a13_SlicingExpr> &other) { return any.type == &__jule_any_type108 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type109_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acaddeb4_CastExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_any_type109_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1acaddeb4_CastExpr> &other) { return any.type == &__jule_any_type109 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type110_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acae15c1_StructLit>().dealloc(); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_any_type110_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1acae15c1_StructLit> &other) { return any.type == &__jule_any_type110 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type111_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acae036c_FnCallExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_any_type111_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1acae036c_FnCallExpr> &other) { return any.type == &__jule_any_type111 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type112_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acae1a44_BraceLit>().dealloc(); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_any_type112_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1acae1a44_BraceLit> &other) { return any.type == &__jule_any_type112 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type113_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acadec62_BinopExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_any_type113_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1acadec62_BinopExpr> &other) { return any.type == &__jule_any_type113 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type114_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb0e204_BinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_any_type114_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1acb0e204_BinopExprModel> &other) { return any.type == &__jule_any_type114 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type115_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb1016c_AllocStructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_any_type115_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1acb1016c_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type115 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type116_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb15c66_BuiltinNewCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_any_type116_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_1acb15c66_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type116 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type117_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb16aad_BuiltinMakeCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_any_type117_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1acb16aad_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type117 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type118_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb172b7_BuiltinLenCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_any_type118_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_1acb172b7_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type118 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type119_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb175d6_BuiltinCapCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_any_type119_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1acb175d6_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type119 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type120_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb1d642_SizeofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_any_type120_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1acb1d642_SizeofExprModel> &other) { return any.type == &__jule_any_type120 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type121_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb1d92d_AlignofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_any_type121_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1acb1d92d_AlignofExprModel> &other) { return any.type == &__jule_any_type121 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type122_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb1e027_IntegratedToStrExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_any_type122_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1acb1e027_IntegratedToStrExprModel> &other) { return any.type == &__jule_any_type122 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type123_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acd7a6d4_MutSlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_any_type123_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1acd7a6d4_MutSlicingExprModel> &other) { return any.type == &__jule_any_type123 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type124_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acd7abbd_StrInsertBeginExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_any_type124_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1acd7abbd_StrInsertBeginExprModel> &other) { return any.type == &__jule_any_type124 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type125_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acd792d7_StrAppendExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_any_type125_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1acd792d7_StrAppendExprModel> &other) { return any.type == &__jule_any_type125 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type126_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acd79cdd_PushToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_any_type126_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_1acd79cdd_PushToSliceExprModel> &other) { return any.type == &__jule_any_type126 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type127_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acd7a195_AppendToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_any_type127_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1acd7a195_AppendToSliceExprModel> &other) { return any.type == &__jule_any_type127 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type128_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acd78e1e_StrCompExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_any_type128_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_1acd78e1e_StrCompExprModel> &other) { return any.type == &__jule_any_type128 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type129_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acd795c3_UnsafeBinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_any_type129_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_1acd795c3_UnsafeBinopExprModel> &other) { return any.type == &__jule_any_type129 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type130_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acd79958_UnsafeIndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_any_type130_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::Ptr<_1acd79958_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type130 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type131_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
jule::Bool __jule_any_type131_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other); }
jule::Str __jule_any_type131_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_any_type131_dealloc, .eq=__jule_any_type131_eq, .to_str=__jule_any_type131_to_str};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::U8 &other) { return any.type == &__jule_any_type131 && __jule_any_type131_eq(any.data.alloc, (void*)&other); }
void __jule_any_type132_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
jule::Bool __jule_any_type132_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other); }
jule::Str __jule_any_type132_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_any_type132_dealloc, .eq=__jule_any_type132_eq, .to_str=__jule_any_type132_to_str};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::F32 &other) { return any.type == &__jule_any_type132 && __jule_any_type132_eq(any.data.alloc, (void*)&other); }
void __jule_any_type133_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
jule::Bool __jule_any_type133_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other); }
jule::Str __jule_any_type133_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_any_type133_dealloc, .eq=__jule_any_type133_eq, .to_str=__jule_any_type133_to_str};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::I8 &other) { return any.type == &__jule_any_type133 && __jule_any_type133_eq(any.data.alloc, (void*)&other); }
void __jule_any_type134_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
jule::Bool __jule_any_type134_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other); }
jule::Str __jule_any_type134_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_any_type134_dealloc, .eq=__jule_any_type134_eq, .to_str=__jule_any_type134_to_str};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::I16 &other) { return any.type == &__jule_any_type134 && __jule_any_type134_eq(any.data.alloc, (void*)&other); }
void __jule_any_type135_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
jule::Bool __jule_any_type135_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other); }
jule::Str __jule_any_type135_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_any_type135_dealloc, .eq=__jule_any_type135_eq, .to_str=__jule_any_type135_to_str};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::U16 &other) { return any.type == &__jule_any_type135 && __jule_any_type135_eq(any.data.alloc, (void*)&other); }
void __jule_any_type136_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
jule::Bool __jule_any_type136_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other); }
jule::Str __jule_any_type136_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type136{.dealloc=__jule_any_type136_dealloc, .eq=__jule_any_type136_eq, .to_str=__jule_any_type136_to_str};
jule::Bool __jule_any_type136_compare(const jule::Any &any, const jule::U32 &other) { return any.type == &__jule_any_type136 && __jule_any_type136_eq(any.data.alloc, (void*)&other); }
jule::Array<jule::Array<jule::Str,2>,5> _2094d693c_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
jule::Str _1a495c2be_OutDir = jule::Str("dist", 4);
jule::Str _1a495c555_OutName = jule::Str("ir.cpp", 6);
jule::Str _1a495c81e_Out = jule::Str();
jule::Str _207303ecb_Compiler = jule::Str();
jule::Str _2073041eb_CompilerPath = jule::Str();
jule::Str _20730441b_CppStd = jule::Str("cpp17", 5);
jule::Bool _20730463b_Shadowing = false;
jule::Bool _20730485b_Transpilation = false;
jule::Bool _207304b03_Test = false;
jule::Bool _207304dbc_RC = true;
jule::Bool _207305296_Safety = true;
jule::Bool _207305560_Production = false;
jule::Uintptr _208291be3_STDIN = _2082924a7_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551606LLU));
jule::Uintptr _208291eac_STDOUT = _2082924a7_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551605LLU));
jule::Uintptr _208292243_STDERR = _2082924a7_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551604LLU));
jule::Array<jule::U8,256> _208395896_first = jule::Array<jule::U8,256>({});
jule::Array<_208395e29_acceptRange,16> _208396237_acceptRanges = jule::Array<_208395e29_acceptRange,16>({_208395e29_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_208395e29_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_208395e29_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_208395e29_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_208395e29_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Ptr<_2093661b2_RangeTable> _209301900__L = jule::new_ptr<_2093661b2_RangeTable>(_2093661b2_RangeTable{._field_R16=jule::Slice<_2093657bb_Range16>::make({_2093657bb_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_2093657bb_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_2093657bb_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_2093657bb_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_2093657bb_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_2093657bb_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_2093657bb_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_2093657bb_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_2093657bb_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_2093657bb_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_2093657bb_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_2093657bb_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_2093657bb_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_2093657bb_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_2093657bb_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_2093657bb_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_2093657bb_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_2093657bb_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_2093657bb_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_2093657bb_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_2093657bb_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_2093657bb_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_2093657bb_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_2093657bb_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_2093657bb_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_2093657bb_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_2093657bb_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_2093657bb_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_2093657bb_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_2093657bb_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_2093657bb_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_2093657bb_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_2093657bb_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_2093657bb_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_2093657bb_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_2093657bb_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_2093657bb_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_2093657bb_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_2093657bb_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_2093657bb_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_2093657bb_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_2093657bb_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_2093657bb_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_2093657bb_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_2093657bb_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_2093657bb_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_2093657bb_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_2093657bb_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_2093657bb_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_2093657bb_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_2093657bb_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_2093657bb_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_2093657bb_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_2093657bb_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_2093657bb_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_2093657bb_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_2093657bb_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_2093657bb_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_2093657bb_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_2093657bb_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_209365c3e_Range32>::make({_209365c3e_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_209365c3e_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_209365c3e_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_209365c3e_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_209365c3e_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_209365c3e_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_209365c3e_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_209365c3e_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_209365c3e_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_209365c3e_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_209365c3e_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_209365c3e_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_209365c3e_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_209365c3e_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_209365c3e_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_209365c3e_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_209365c3e_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_209365c3e_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_209365c3e_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_209365c3e_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_209365c3e_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_209365c3e_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_209365c3e_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_209365c3e_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_209365c3e_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_209365c3e_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_209365c3e_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_209365c3e_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_209365c3e_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_209365c3e_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_209365c3e_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_209365c3e_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_209365c3e_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_209365c3e_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_209365c3e_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_209365c3e_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_209365c3e_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_209365c3e_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_209365c3e_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_209365c3e_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_209365c3e_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_209365c3e_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_209365c3e_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_2093661b2_RangeTable> _2093028e0__LU = jule::new_ptr<_2093661b2_RangeTable>(_2093661b2_RangeTable{._field_R16=jule::Slice<_2093657bb_Range16>::make({_2093657bb_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_2093657bb_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_2093657bb_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_2093657bb_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_2093657bb_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_2093657bb_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_2093657bb_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_2093657bb_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_2093657bb_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_2093657bb_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_2093657bb_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_2093657bb_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_2093657bb_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_2093657bb_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_2093657bb_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_2093657bb_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_2093657bb_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_209365c3e_Range32>::make({_209365c3e_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_209365c3e_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_209365c3e_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_209365c3e_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_209365c3e_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_209365c3e_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_209365c3e_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Array<jule::U8,256> _20935eb28__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::Str,4> _2093aa69b_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
jule::Array<jule::Str,3> _2093ab449_CppExts = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
jule::Array<jule::Str,1> _20942e3ac_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
jule::Str _2094d2c79_PathStdlib = jule::Str();
jule::Str _2094d2e99_PathExec = jule::Str();
jule::Str _2094d3252_PathWd = jule::Str();
jule::Str _2094d3560_PathApi = jule::Str();
jule::Str _2094d3829_Os = jule::Str("windows", 7);
jule::Str _2094d3ae3_Arch = jule::Str("arm64", 5);
jule::Array<jule::I32,5> _20973ab5d_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::Str,6> _20973ad7d_UnaryOps = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
jule::Array<jule::Str,12> _20973b09d_BinOps = jule::Array<jule::Str,12>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("&&", 2),jule::Str("||", 2)});
jule::Array<jule::Str,2> _2097cb56c_PostfixOps = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
jule::Array<jule::Str,11> _2097cb869_AssignOps = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
jule::Array<_2097d8755_kindPair,31> _2097d8b84_keywords = jule::Array<_2097d8755_kindPair,31>({_2097d8755_kindPair{._field_kind=jule::Str("true", 4), ._field_id=static_cast<jule::U64>(5LLU)},_2097d8755_kindPair{._field_kind=jule::Str("false", 5), ._field_id=static_cast<jule::U64>(5LLU)},_2097d8755_kindPair{._field_kind=jule::Str("nil", 3), ._field_id=static_cast<jule::U64>(5LLU)},_2097d8755_kindPair{._field_kind=jule::Str("const", 5), ._field_id=static_cast<jule::U64>(8LLU)},_2097d8755_kindPair{._field_kind=jule::Str("ret", 3), ._field_id=static_cast<jule::U64>(3LLU)},_2097d8755_kindPair{._field_kind=jule::Str("type", 4), ._field_id=static_cast<jule::U64>(9LLU)},_2097d8755_kindPair{._field_kind=jule::Str("for", 3), ._field_id=static_cast<jule::U64>(11LLU)},_2097d8755_kindPair{._field_kind=jule::Str("break", 5), ._field_id=static_cast<jule::U64>(12LLU)},_2097d8755_kindPair{._field_kind=jule::Str("continue", 8), ._field_id=static_cast<jule::U64>(13LLU)},_2097d8755_kindPair{._field_kind=jule::Str("in", 2), ._field_id=static_cast<jule::U64>(14LLU)},_2097d8755_kindPair{._field_kind=jule::Str("if", 2), ._field_id=static_cast<jule::U64>(15LLU)},_2097d8755_kindPair{._field_kind=jule::Str("else", 4), ._field_id=static_cast<jule::U64>(16LLU)},_2097d8755_kindPair{._field_kind=jule::Str("use", 3), ._field_id=static_cast<jule::U64>(18LLU)},_2097d8755_kindPair{._field_kind=jule::Str("goto", 4), ._field_id=static_cast<jule::U64>(20LLU)},_2097d8755_kindPair{._field_kind=jule::Str("enum", 4), ._field_id=static_cast<jule::U64>(22LLU)},_2097d8755_kindPair{._field_kind=jule::Str("struct", 6), ._field_id=static_cast<jule::U64>(23LLU)},_2097d8755_kindPair{._field_kind=jule::Str("co", 2), ._field_id=static_cast<jule::U64>(24LLU)},_2097d8755_kindPair{._field_kind=jule::Str("match", 5), ._field_id=static_cast<jule::U64>(25LLU)},_2097d8755_kindPair{._field_kind=jule::Str("self", 4), ._field_id=static_cast<jule::U64>(26LLU)},_2097d8755_kindPair{._field_kind=jule::Str("trait", 5), ._field_id=static_cast<jule::U64>(27LLU)},_2097d8755_kindPair{._field_kind=jule::Str("impl", 4), ._field_id=static_cast<jule::U64>(28LLU)},_2097d8755_kindPair{._field_kind=jule::Str("cpp", 3), ._field_id=static_cast<jule::U64>(29LLU)},_2097d8755_kindPair{._field_kind=jule::Str("fall", 4), ._field_id=static_cast<jule::U64>(30LLU)},_2097d8755_kindPair{._field_kind=jule::Str("fn", 2), ._field_id=static_cast<jule::U64>(31LLU)},_2097d8755_kindPair{._field_kind=jule::Str("let", 3), ._field_id=static_cast<jule::U64>(32LLU)},_2097d8755_kindPair{._field_kind=jule::Str("unsafe", 6), ._field_id=static_cast<jule::U64>(33LLU)},_2097d8755_kindPair{._field_kind=jule::Str("mut", 3), ._field_id=static_cast<jule::U64>(34LLU)},_2097d8755_kindPair{._field_kind=jule::Str("defer", 5), ._field_id=static_cast<jule::U64>(35LLU)},_2097d8755_kindPair{._field_kind=jule::Str("static", 6), ._field_id=static_cast<jule::U64>(36LLU)},_2097d8755_kindPair{._field_kind=jule::Str("error", 5), ._field_id=static_cast<jule::U64>(38LLU)},_2097d8755_kindPair{._field_kind=jule::Str("map", 3), ._field_id=static_cast<jule::U64>(39LLU)}});
jule::Array<_2097d8755_kindPair,39> _2097d8ec5_basicOps = jule::Array<_2097d8755_kindPair,39>({_2097d8755_kindPair{._field_kind=jule::Str("::", 2), ._field_id=static_cast<jule::U64>(21LLU)},_2097d8755_kindPair{._field_kind=jule::Str(":", 1), ._field_id=static_cast<jule::U64>(10LLU)},_2097d8755_kindPair{._field_kind=jule::Str(";", 1), ._field_id=static_cast<jule::U64>(4LLU)},_2097d8755_kindPair{._field_kind=jule::Str(",", 1), ._field_id=static_cast<jule::U64>(7LLU)},_2097d8755_kindPair{._field_kind=jule::Str("...", 3), ._field_id=static_cast<jule::U64>(6LLU)},_2097d8755_kindPair{._field_kind=jule::Str(".", 1), ._field_id=static_cast<jule::U64>(19LLU)},_2097d8755_kindPair{._field_kind=jule::Str("+=", 2), ._field_id=static_cast<jule::U64>(6LLU)},_2097d8755_kindPair{._field_kind=jule::Str("-=", 2), ._field_id=static_cast<jule::U64>(6LLU)},_2097d8755_kindPair{._field_kind=jule::Str("*=", 2), ._field_id=static_cast<jule::U64>(6LLU)},_2097d8755_kindPair{._field_kind=jule::Str("/=", 2), ._field_id=static_cast<jule::U64>(6LLU)},_2097d8755_kindPair{._field_kind=jule::Str("%=", 2), ._field_id=static_cast<jule::U64>(6LLU)},_2097d8755_kindPair{._field_kind=jule::Str("<<=", 3), ._field_id=static_cast<jule::U64>(6LLU)},_2097d8755_kindPair{._field_kind=jule::Str(">>=", 3), ._field_id=static_cast<jule::U64>(6LLU)},_2097d8755_kindPair{._field_kind=jule::Str("^=", 2), ._field_id=static_cast<jule::U64>(6LLU)},_2097d8755_kindPair{._field_kind=jule::Str("&=", 2), ._field_id=static_cast<jule::U64>(6LLU)},_2097d8755_kindPair{._field_kind=jule::Str("|=", 2), ._field_id=static_cast<jule::U64>(6LLU)},_2097d8755_kindPair{._field_kind=jule::Str("==", 2), ._field_id=static_cast<jule::U64>(6LLU)},_2097d8755_kindPair{._field_kind=jule::Str("!=", 2), ._field_id=static_cast<jule::U64>(6LLU)},_2097d8755_kindPair{._field_kind=jule::Str(">=", 2), ._field_id=static_cast<jule::U64>(6LLU)},_2097d8755_kindPair{._field_kind=jule::Str("<=", 2), ._field_id=static_cast<jule::U64>(6LLU)},_2097d8755_kindPair{._field_kind=jule::Str("&&", 2), ._field_id=static_cast<jule::U64>(6LLU)},_2097d8755_kindPair{._field_kind=jule::Str("||", 2), ._field_id=static_cast<jule::U64>(6LLU)},_2097d8755_kindPair{._field_kind=jule::Str("<<", 2), ._field_id=static_cast<jule::U64>(6LLU)},_2097d8755_kindPair{._field_kind=jule::Str(">>", 2), ._field_id=static_cast<jule::U64>(6LLU)},_2097d8755_kindPair{._field_kind=jule::Str("++", 2), ._field_id=static_cast<jule::U64>(6LLU)},_2097d8755_kindPair{._field_kind=jule::Str("--", 2), ._field_id=static_cast<jule::U64>(6LLU)},_2097d8755_kindPair{._field_kind=jule::Str("+", 1), ._field_id=static_cast<jule::U64>(6LLU)},_2097d8755_kindPair{._field_kind=jule::Str("-", 1), ._field_id=static_cast<jule::U64>(6LLU)},_2097d8755_kindPair{._field_kind=jule::Str("*", 1), ._field_id=static_cast<jule::U64>(6LLU)},_2097d8755_kindPair{._field_kind=jule::Str("/", 1), ._field_id=static_cast<jule::U64>(6LLU)},_2097d8755_kindPair{._field_kind=jule::Str("%", 1), ._field_id=static_cast<jule::U64>(6LLU)},_2097d8755_kindPair{._field_kind=jule::Str("&", 1), ._field_id=static_cast<jule::U64>(6LLU)},_2097d8755_kindPair{._field_kind=jule::Str("|", 1), ._field_id=static_cast<jule::U64>(6LLU)},_2097d8755_kindPair{._field_kind=jule::Str("^", 1), ._field_id=static_cast<jule::U64>(6LLU)},_2097d8755_kindPair{._field_kind=jule::Str("!", 1), ._field_id=static_cast<jule::U64>(6LLU)},_2097d8755_kindPair{._field_kind=jule::Str("<", 1), ._field_id=static_cast<jule::U64>(6LLU)},_2097d8755_kindPair{._field_kind=jule::Str(">", 1), ._field_id=static_cast<jule::U64>(6LLU)},_2097d8755_kindPair{._field_kind=jule::Str("=", 1), ._field_id=static_cast<jule::U64>(6LLU)},_2097d8755_kindPair{._field_kind=jule::Str("#", 1), ._field_id=static_cast<jule::U64>(37LLU)}});
jule::Array<jule::U8,32> _1dde49909__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _1dde49ec0__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_1dde8d4ec_floatInfo _1dde8d72d_f32info = _1dde8d4ec_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_1dde8d4ec_floatInfo _1dde8da3b_f64info = _1dde8d4ec_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _1dde95d1d_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _1dde9799b_powtab = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _1dde98507_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _1dde98848_f32pow10 = jule::Slice<jule::F32>::make({1.0f,10.0f,100.0f,1000.0f,10000.0f,100000.0f,1000000.0f,10000000.0f,100000000.0f,1000000000.0f,10000000000.0f});
jule::Array<jule::U64,20> _1dde9b86d_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_1ddea02bc_leftCheat> _1ddea06eb_leftCheats = jule::Slice<_1ddea02bc_leftCheat>::make({_1ddea02bc_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_1ddea02bc_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("5", 1)},_1ddea02bc_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("25", 2)},_1ddea02bc_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("125", 3)},_1ddea02bc_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("625", 3)},_1ddea02bc_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("3125", 4)},_1ddea02bc_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("15625", 5)},_1ddea02bc_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("78125", 5)},_1ddea02bc_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("390625", 6)},_1ddea02bc_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("1953125", 7)},_1ddea02bc_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("9765625", 7)},_1ddea02bc_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("48828125", 8)},_1ddea02bc_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("244140625", 9)},_1ddea02bc_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("1220703125", 10)},_1ddea02bc_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("6103515625", 10)},_1ddea02bc_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("30517578125", 11)},_1ddea02bc_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("152587890625", 12)},_1ddea02bc_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("762939453125", 12)},_1ddea02bc_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("3814697265625", 13)},_1ddea02bc_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("19073486328125", 14)},_1ddea02bc_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("95367431640625", 14)},_1ddea02bc_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("476837158203125", 15)},_1ddea02bc_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("2384185791015625", 16)},_1ddea02bc_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("11920928955078125", 17)},_1ddea02bc_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("59604644775390625", 17)},_1ddea02bc_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("298023223876953125", 18)},_1ddea02bc_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("1490116119384765625", 19)},_1ddea02bc_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("7450580596923828125", 19)},_1ddea02bc_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("37252902984619140625", 20)},_1ddea02bc_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("186264514923095703125", 21)},_1ddea02bc_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("931322574615478515625", 21)},_1ddea02bc_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("4656612873077392578125", 22)},_1ddea02bc_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("23283064365386962890625", 23)},_1ddea02bc_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("116415321826934814453125", 24)},_1ddea02bc_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("582076609134674072265625", 24)},_1ddea02bc_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("2910383045673370361328125", 25)},_1ddea02bc_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("14551915228366851806640625", 26)},_1ddea02bc_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("72759576141834259033203125", 26)},_1ddea02bc_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("363797880709171295166015625", 27)},_1ddea02bc_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("1818989403545856475830078125", 28)},_1ddea02bc_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("9094947017729282379150390625", 28)},_1ddea02bc_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("45474735088646411895751953125", 29)},_1ddea02bc_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("227373675443232059478759765625", 30)},_1ddea02bc_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("1136868377216160297393798828125", 31)},_1ddea02bc_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("5684341886080801486968994140625", 31)},_1ddea02bc_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("28421709430404007434844970703125", 32)},_1ddea02bc_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("142108547152020037174224853515625", 33)},_1ddea02bc_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("710542735760100185871124267578125", 33)},_1ddea02bc_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("3552713678800500929355621337890625", 34)},_1ddea02bc_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("17763568394002504646778106689453125", 35)},_1ddea02bc_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("88817841970012523233890533447265625", 35)},_1ddea02bc_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("444089209850062616169452667236328125", 36)},_1ddea02bc_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("2220446049250313080847263336181640625", 37)},_1ddea02bc_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("11102230246251565404236316680908203125", 38)},_1ddea02bc_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("55511151231257827021181583404541015625", 38)},_1ddea02bc_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("277555756156289135105907917022705078125", 39)},_1ddea02bc_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("1387778780781445675529539585113525390625", 40)},_1ddea02bc_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("6938893903907228377647697925567626953125", 40)},_1ddea02bc_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("34694469519536141888238489627838134765625", 41)},_1ddea02bc_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("173472347597680709441192448139190673828125", 42)},_1ddea02bc_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str("867361737988403547205962240695953369140625", 42)}});
jule::I64 _1ddea623a_BitSize = 0LL;
jule::Str _1ddea6504_SysInt = jule::Str();
jule::Str _1ddea67bd_SysUint = jule::Str();
jule::Slice<jule::Str> _1acb56cda_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str("signed", 6),jule::Str("unsigned", 8),jule::Str("float", 5),jule::Str("numeric", 7),jule::Str("mutable", 7),jule::Str("immutable", 9),jule::Str("ordered", 7),jule::Str("comparable", 10)});
jule::Ptr<_1acca4ba2_TypeKind> _1acd68a13_primVoid = jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(_1accc064b_buildPrimType(jule::Str("void", 4)), 20)});
jule::Ptr<_1acca4ba2_TypeKind> _1acd68d21_primAny = jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(_1accc064b_buildPrimType(jule::Str("any", 3)), 20)});
jule::Ptr<_1acca4ba2_TypeKind> _1acd690da_primStr = jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(_1accc064b_buildPrimType(jule::Str("str", 3)), 20)});
jule::Ptr<_1acca4ba2_TypeKind> _1acd693e8_primBool = jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(_1accc064b_buildPrimType(jule::Str("bool", 4)), 20)});
jule::Ptr<_1acca4ba2_TypeKind> _1acd696b2_primUintptr = jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(_1accc064b_buildPrimType(jule::Str("uintptr", 7)), 20)});
jule::Ptr<_1acca4ba2_TypeKind> _1acd6997b_primUint = jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(_1accc064b_buildPrimType(jule::Str("uint", 4)), 20)});
jule::Ptr<_1acca4ba2_TypeKind> _1acd69c45_primInt = jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(_1accc064b_buildPrimType(jule::Str("int", 3)), 20)});
jule::Ptr<_1acca4ba2_TypeKind> _1acd6a11e_primI8 = jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(_1accc064b_buildPrimType(jule::Str("i8", 2)), 20)});
jule::Ptr<_1acca4ba2_TypeKind> _1acd6a3d8_primI16 = jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(_1accc064b_buildPrimType(jule::Str("i16", 3)), 20)});
jule::Ptr<_1acca4ba2_TypeKind> _1acd6a6a2_primI32 = jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(_1accc064b_buildPrimType(jule::Str("i32", 3)), 20)});
jule::Ptr<_1acca4ba2_TypeKind> _1acd6a96b_primI64 = jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(_1accc064b_buildPrimType(jule::Str("i64", 3)), 20)});
jule::Ptr<_1acca4ba2_TypeKind> _1acd6ac35_primU8 = jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(_1accc064b_buildPrimType(jule::Str("u8", 2)), 20)});
jule::Ptr<_1acca4ba2_TypeKind> _1acd6aeee_primU16 = jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(_1accc064b_buildPrimType(jule::Str("u16", 3)), 20)});
jule::Ptr<_1acca4ba2_TypeKind> _1acd6b2b8_primU32 = jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(_1accc064b_buildPrimType(jule::Str("u32", 3)), 20)});
jule::Ptr<_1acca4ba2_TypeKind> _1acd6b582_primU64 = jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(_1accc064b_buildPrimType(jule::Str("u64", 3)), 20)});
jule::Ptr<_1acca4ba2_TypeKind> _1acd6ba05_primF32 = jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(_1accc064b_buildPrimType(jule::Str("f32", 3)), 20)});
jule::Ptr<_1acca4ba2_TypeKind> _1acd6bcbe_primF64 = jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(_1accc064b_buildPrimType(jule::Str("f64", 3)), 20)});
jule::Bool _1acd89d86_Copy = false;
jule::Bool _1acd8a194_Deadcode = false;
jule::Bool _1acd8a45d_Append = false;
jule::Bool _1acd8a76b_Math = false;
jule::Bool _1acd8aa35_Access = false;
jule::Bool _1acd8acee_Inline = false;
jule::Bool _1acd8b0b8_Ptr = false;
jule::Bool _1acd8b492_Cond = false;
jule::Bool _1acd8b75b_Str = false;
jule::Bool _1a406628b_exprEnabled = false;
jule::Bool _1a40664ab_scopeEnabled = false;
jule::Array<jule::U64,12> _1a48c9aaa_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Str _1a481ec86_assignArgName = jule::Str("__jule_assign_arg", 17);
jule::Ptr<_2093661b2_RangeTable> _2093100e5_Upper = _2093028e0__LU;
jule::Ptr<_2093661b2_RangeTable> _209308a8e_Letter = _209301900__L;





std::ostream &operator<<(std::ostream &_Stream, _208395e29_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2093657bb_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _209365c3e_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2093661b2_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _2093a690b_index(_2093a64cc_lazyBuff* _self_, jule::I64 _5424_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5424_i];;
	};
	return (*(_self_))._field_path[_5424_i];;
}



inline void _2093a6b81_append(_2093a64cc_lazyBuff* _self_, jule::U8 _6125_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6125_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len(), 0);
		jule::copy(((*(_self_))._field_buff), (static_cast<jule::Slice<jule::U8>>((*(_self_))._field_path.slice(0LL, (*(_self_))._field_w))));
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6125_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _2093a6de5_string(_2093a64cc_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + static_cast<jule::Str>((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}







std::ostream &operator<<(std::ostream &_Stream, _2093a64cc_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2082a94ad_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_2082a94ad_DirEntry>>> static__2093a8e80_Read(jule::Str _1520_path) {
	jule::Slice<jule::Ptr<_2082a94ad_DirEntry>> __jule_func_result;
	jule::Slice<jule::U16> _1613_utf16Path = _208264886_Utf16FromStr(_2093a7b3d_Join(jule::Slice<jule::Str>::make({_1520_path,jule::Str("*", 1)})));;
	WIN32_FIND_DATAW _1717_data = (WIN32_FIND_DATAW){};;
	jule::Uintptr _1813_handle = _208295da1_FindFirstFile((&(_1613_utf16Path[0LL])), (&(_1717_data)));;
	if ((_1813_handle == jule::MAX_U64)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_2082a94ad_DirEntry>>>(jule::Any(), __jule_func_result);;
	};
	for (;;) {
		{
			jule::Ptr<_2082a94ad_DirEntry> _2321_entry = jule::new_ptr<_2082a94ad_DirEntry>(_2082a94ad_DirEntry{._field_Name=_208264dd6_U16PtrToStr(((jule::U16*)(_1717_data.cFileName))), });;
			_2321_entry.get()._field_Stat=({
				auto except = static__2093a9c0b_Of(_2093a7b3d_Join(jule::Slice<jule::Str>::make({_1520_path,_2321_entry.get()._field_Name})));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_2082a94ad_DirEntry>>>(except.error);
				} jule::Ptr<_2082b8830_Status>(nullptr);});
			});
			{ jule::Slice<jule::Ptr<_2082a94ad_DirEntry>> &__jule_push_dest = __jule_func_result; __jule_push_dest.push(_2321_entry); };
			if ((_2082961e2_FindNextFile(_1813_handle, (&(_1717_data))) == 0LL)) {
				goto _iter_end_1a520710c;
			};
		}
	_iter_next_1a520710c:;
	}
	_iter_end_1a520710c:;;
	_208296489_FindClose(_1813_handle);
	return jule::Exceptional<jule::Slice<jule::Ptr<_2082a94ad_DirEntry>>>(jule::Any(), __jule_func_result);;
}



inline jule::VoidExceptional static__2093a918e_Create(jule::Str _3922_path) {
	jule::Slice<jule::U16> _4413_utf16Path = _208264886_Utf16FromStr(_3922_path);;
	if ((!(_208293ca0_CreateDirectory((&(_4413_utf16Path[0LL])))))) {
		return jule::VoidExceptional(jule::Any(_2082a8e3b_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional static__2093a939d_Remove(jule::Str _5322_path) {
	jule::Slice<jule::U16> _5413_utf16Path = _208264886_Utf16FromStr(_5322_path);;
	if ((!(_208294047_RemoveDirectory((&(_5413_utf16Path[0LL])))))) {
		return jule::VoidExceptional(jule::Any(_2082a8e3b_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _2082a9722_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2082b61e0_File> static__2082b660d_New(jule::Uintptr _4619_handle) {
	return jule::new_ptr<_2082b61e0_File>(_2082b61e0_File{._field_handle=_4619_handle});;
}



inline jule::Exceptional<jule::Ptr<_2082b61e0_File>> static__2082b68a5_Create(jule::Str _5622_path) {
	return jule::Exceptional<jule::Ptr<_2082b61e0_File>>(jule::Any(), ({
		auto except = static__2083998bc_Open(_5622_path, static_cast<jule::I64>(770LL), 438LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Ptr<_2082b61e0_File>>(except.error);
		} jule::Ptr<_2082b61e0_File>(nullptr);});
	}));;
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__2082b6b4c_Read(jule::Str _6820_path) {
	jule::Ptr<_2082b8830_Status> _6913_s = ({
		auto except = static__2093a9c0b_Of(_6820_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_2082b8830_Status>(nullptr);});
	});;
	if ((!(_2082b8e5c_IsReg(_6913_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(static_cast<jule::I64>(14LL), &__jule_any_type0));
	};
	if ((_2082b91c1_Size(_6913_s.ptr()) == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), jule::Slice<jule::U8>::alloc(0LL, 0LL, 0));;
	};
	jule::Ptr<_2082b61e0_File> _7917_f = ({
		auto except = static__2083998bc_Open(_6820_path, static_cast<jule::I64>(0LL), 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_2082b61e0_File>(nullptr);});
	});;
	__JULE_DEFER({
		({
			auto except = _2082b7ce6_Close(_7917_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:80:17"));
		});
	});;
	jule::Slice<jule::U8> _8217_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_2082b91c1_Size(_6913_s.ptr())), static_cast<jule::I64>(_2082b91c1_Size(_6913_s.ptr())), 0);;
	jule::I64 _8313_n = ({
		auto except = _20839a33a_Read(_7917_f.ptr(), _8217_buff);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} 0;});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), _8217_buff.slice(0LL, _8313_n));;
}



inline jule::VoidExceptional static__2082b6e9e_Write(jule::Str _9221_path, jule::Slice<jule::U8> _9232_data, jule::I64 _9246_perm) {
	jule::Ptr<_2082b61e0_File> _9317_f = ({
		auto except = static__2083998bc_Open(_9221_path, static_cast<jule::I64>(769LL), _9246_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional(except.error);
		} jule::Ptr<_2082b61e0_File>(nullptr);});
	});;
	({
		auto except = _20839a02c_Write(_9317_f.ptr(), _9232_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _2082b7ce6_Close(_9317_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional static__2082b7301_WriteStr(jule::Str _9924_path, jule::Str* _9936_data, jule::I64 _9947_perm) {
	({
		auto except = static__2082b6e9e_Write(_9924_path, _2082b4b06_Stobs(_9936_data), _9947_perm);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _2082b780c_Seek(_2082b61e0_File* _self_, jule::I64 _11123_offset, jule::I64 _11136_origin) {
	jule::I64 _11213_pos = _208297eb3_Seek(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle)), _11123_offset, static_cast<jule::I64>(_11136_origin));;
	if ((_11213_pos == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_2082a8e3b_getLastFsError(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::I64>(jule::Any(), _11213_pos);;
}



inline jule::Exceptional<jule::I64> _2082b7b1a_WriteStr(_2082b61e0_File* _self_, jule::Str* _12028_data) {
	jule::I64 __jule_func_result = 0;
	__jule_func_result = static_cast<jule::I64>(({
		auto except = _20839a02c_Write(_self_, _2082b4b06_Stobs(_12028_data));
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::I64>(except.error);
		} 0;});
	}));
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::VoidExceptional _2082b7ce6_Close(_2082b61e0_File* _self_) {
	if ((_208298722_Close(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle))) == -1LL)) {
		return jule::VoidExceptional(jule::Any(_2082a8e3b_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::Ptr<_2082b61e0_File>> static__2083998bc_Open(jule::Str _2120_path, jule::I64 _2131_flag, jule::I64 _2144_mode) {
	jule::Slice<jule::U16> _2213_utf16Path = _208264886_Utf16FromStr(_2120_path);;
	jule::I64 _2313_handle = _208292e7a_Wopen((&(_2213_utf16Path[0LL])), static_cast<jule::I64>(_2131_flag), _2144_mode);;
	if ((_2313_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_2082b61e0_File>>(jule::Any(_2082a8e3b_getLastFsError(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::Ptr<_2082b61e0_File>>(jule::Any(), static__2082b660d_New(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_2313_handle))));;
}



inline jule::VoidExceptional static__208399acb_Remove(jule::Str _3422_path) {
	jule::Slice<jule::U16> _3513_utf16Path = _208264886_Utf16FromStr(_3422_path);;
	if ((!(_208293a08_DeleteFile((&(_3513_utf16Path[0LL])))))) {
		return jule::VoidExceptional(jule::Any(_2082a8e3b_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _20839a02c_Write(_2082b61e0_File* _self_, jule::Slice<jule::U8> _4924_buff) {
	jule::I64 __jule_func_result = 0;
	if ((_4924_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	if (_20839a68c_isConsoleHandle((*(_self_))._field_handle)) {
		jule::Slice<jule::U16> _5517_utf16Buff = _208264886_Utf16FromStr(static_cast<jule::Str>(_4924_buff));;
		jule::Bool _5617_ok = _2082953cd_WriteConsole((*(_self_))._field_handle, (&(_5517_utf16Buff[0LL])), static_cast<jule::I64>(_5517_utf16Buff.len()), &(__jule_func_result), nullptr);;
		if ((!(_5617_ok))) {
			return jule::Exceptional<jule::I64>(jule::Any(_2082a8e3b_getLastFsError(), &__jule_any_type0));
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_208298b0c_Write(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle)), (&(_4924_buff[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_4924_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_2082a8e3b_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::Exceptional<jule::I64> _20839a33a_Read(_2082b61e0_File* _self_, jule::Slice<jule::U8> _7927_buff) {
	jule::I64 __jule_func_result = 0;
	if ((_7927_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	if (_20839a68c_isConsoleHandle((*(_self_))._field_handle)) {
		jule::Slice<jule::U16> _8521_codepage = jule::Slice<jule::U16>::alloc(_7927_buff.len(), _7927_buff.len(), 0);;
		jule::Bool _8617_ok = _208295862_ReadConsole((*(_self_))._field_handle, (&(_8521_codepage[0LL])), static_cast<jule::I64>(_7927_buff.len()), &(__jule_func_result));;
		if ((!(_8617_ok))) {
			return jule::Exceptional<jule::I64>(jule::Any(_2082a8e3b_getLastFsError(), &__jule_any_type0));
		};
		jule::Slice<jule::I32> _9117_runes = _208264347_Decode(_8521_codepage.slice(0LL, __jule_func_result));;
		__jule_func_result=0LL;
		{
			auto expr = &(_9117_runes);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a521e432:;
			if (it != expr_end) {
				jule::I32 *_9320_r = it;
				{
					jule::I64 _9421_size = _2083975bd_RuneLen((*(_9320_r)));;
					if (((__jule_func_result + _9421_size) > _7927_buff.len())) {
						goto _iter_end_1a521e432;
					};
					_2083979db_EncodeRune(_7927_buff.slice(__jule_func_result), (*(_9320_r)));
					__jule_func_result+=_9421_size;
				}
				_iter_next_1a521e432:;
				++it;
				goto _iter_begin_1a521e432;
			}
			_iter_end_1a521e432:;
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_20829839d_Read(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle)), (&(_7927_buff[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_7927_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_2082a8e3b_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}







std::ostream &operator<<(std::ostream &_Stream, _2082b61e0_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2082b8be8_IsDir(_2082b8830_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL));;
}



inline jule::Bool _2082b8e5c_IsReg(_2082b8830_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(2LL)) == static_cast<jule::I64>(2LL));;
}



inline jule::U64 _2082b91c1_Size(_2082b8830_Status* _self_) {
	return (*(_self_))._field_size;;
}



inline jule::Exceptional<jule::Ptr<_2082b8830_Status>> static__2093a9c0b_Of(jule::Str _1218_path) {
	if (_1218_path.empty()) {
		return jule::Exceptional<jule::Ptr<_2082b8830_Status>>(jule::Any(static_cast<jule::I64>(4LL), &__jule_any_type0));
	};
	jule::Slice<jule::U16> _1613_utf16Path = _208264886_Utf16FromStr(_1218_path);;
	struct _stat _1717_handle = (struct _stat){};;
	jule::I64 _1813_code = _208292a90_Wstat((&(_1613_utf16Path[0LL])), (&(_1717_handle)));;
	if ((_1813_code == -1LL)) {
		return jule::Exceptional<jule::Ptr<_2082b8830_Status>>(jule::Any(_2082a8e3b_getLastFsError(), &__jule_any_type0));
	};
	jule::Ptr<_2082b8830_Status> _2217_stat = jule::new_ptr<_2082b8830_Status>();;
	_2217_stat.get()._field_size=_1717_handle.st_size;
	if (((_1717_handle.st_mode & 16384LLU) == 16384LLU)) {
		_2217_stat.get()._field_mode|=static_cast<jule::I64>(1LL);
	} else if (((_1717_handle.st_mode & 32768LLU) == 32768LLU)) {
		_2217_stat.get()._field_mode|=static_cast<jule::I64>(2LL);
	};
	return jule::Exceptional<jule::Ptr<_2082b8830_Status>>(jule::Any(), _2217_stat);;
}







std::ostream &operator<<(std::ostream &_Stream, _2082b8830_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2094cea78_cmdAttrs _Src) {
	_Stream << "cmdAttrs{";
	_Stream << "hProcess:" << _Src._field_hProcess << ", ";
	_Stream << "hThread:" << _Src._field_hThread;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20943da3c_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _2097d194b_Prec(_2097d15d8_Token* _self_) {
	if (((*(_self_))._field_Id != static_cast<jule::U64>(6LLU))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("%", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str(">>", 2) || _match_expr == jule::Str("<<", 2) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1a52c3dbb:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1a52c4dde:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("=", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1a52c4e55:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1a52c4ecc:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1a52c5054:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1a52c4bbe:;
			{
				return 0LLU;;
			}
		}
		_match_end_1a52c4b69:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _2097d15d8_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline void _2097d6d3b_Fill(_2097d6973_File* _self_, jule::Slice<jule::U8> _1727_data) {
	(*(_self_))._field_Data=_1727_data;
}



inline jule::Str _2097d70a0_Dir(_2097d6973_File* _self_) {
	return _2093a8798_Dir((*(_self_))._field_Path);;
}



inline jule::Str _2097d7314_Name(_2097d6973_File* _self_) {
	return _2093a8424_Base((*(_self_))._field_Path);;
}



inline jule::Uintptr _2097d7578_Addr(_2097d6973_File* _self_) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)((&((*(_self_)))))));;
}



inline jule::Str _2097d7886_GetRow(_2097d6973_File* _self_, jule::I64 _3821_row) {
	jule::I64 _3917_n = 0LL;;
	jule::I64 _4017_lineStart = 0LL;;
	jule::I64 _4117_i = 0LL;;
	for (; (_4117_i < (*(_self_))._field_Data.len()); (_4117_i)++) {
		{
			if (((*(_self_))._field_Data[_4117_i] != '\n')) {
				goto _iter_next_1a52c96da;
			};
			(_3917_n)++;
			if ((_3917_n == _3821_row)) {
				return static_cast<jule::Str>((*(_self_))._field_Data.slice(_4017_lineStart, _4117_i));;
			};
			_4017_lineStart=static_cast<jule::I64>((_4117_i + 1LL));
		}
	_iter_next_1a52c96da:;
	}
	_iter_end_1a52c96da:;;
	return jule::Str();;
}







std::ostream &operator<<(std::ostream &_Stream, _2097d6973_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2097d8755_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _2097de816_pushErr(_2097de2b6_lex* _self_, jule::Str _44226_fmt, jule::Slice<jule::Any> _44239_args) {
	{ jule::Slice<_20943da3c_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_2097d94c0_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _44226_fmt, _44239_args)); };
}



inline void _2097deb35_pushErrTok(_2097de2b6_lex* _self_, jule::Ptr<_2097d15d8_Token>* _44730_token, jule::Str _44745_fmt) {
	{ jule::Slice<_20943da3c_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_2097d94c0_makeErr((*(_44730_token)).get()._field_Row, (*(_44730_token)).get()._field_Column, &((*(_self_))._field_file), _44745_fmt, jule::Slice<jule::Any>())); };
}



inline void _2097ded11_lex(_2097de2b6_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_2097e1d13_newLine(_self_);
	while (((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len())) {
		{
			jule::Ptr<_2097d15d8_Token> _45721_token = _2097e3188_token(_self_);;
			if ((_45721_token.get()._field_Id != static_cast<jule::U64>(0LLU))) {
				{ jule::Slice<jule::Ptr<_2097d15d8_Token>> &__jule_push_dest = (*(_self_))._field_tokens; __jule_push_dest.push(_45721_token); };
			};
		}
	_iter_next_1a530c92c:;
	}
	_iter_end_1a530c92c:;;
}



inline jule::Str _2097e011e_id(_2097de2b6_lex* _self_, jule::Slice<jule::U8>* _46622_ln) {
	if (((*(_46622_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _47014_r = 0;;
	jule::I64 _47021_i = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2083969b8_DecodeRune((*(_46622_ln)));
		_47014_r = __jule_assign_result.__jule_result_arg0;
		_47021_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_47014_r != '_') && (!(_2097d4ab4_IsLetter(_47014_r))))) {
		return jule::Str();;
	};
	while ((_47021_i < (*(_46622_ln)).len())) {
		{
			jule::I32 _47618_pr = 0;;
			jule::I64 _47622_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2083969b8_DecodeRune((*(_46622_ln)).slice(_47021_i));
				_47618_pr = __jule_assign_result.__jule_result_arg0;
				_47622_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_47618_pr != '_') && (!(_2097d5103_IsDecimal(static_cast<jule::U8>(static_cast<jule::U8>(_47618_pr)))))) && (!(_2097d4ab4_IsLetter(_47618_pr))))) {
				(*(_self_))._field_pos+=_47021_i;
				return static_cast<jule::Str>((*(_46622_ln)).slice(0LL, _47021_i));;
			};
			_47021_i+=_47622_n;
		}
	_iter_next_1a5310a95:;
	}
	_iter_end_1a5310a95:;;
	(*(_self_))._field_pos+=(*(_46622_ln)).len();
	return static_cast<jule::Str>((*(_46622_ln)));;
}



inline jule::Slice<jule::U8> _2097e0383_resume(_2097de2b6_lex* _self_) {
	jule::I64 _49117_i = (*(_self_))._field_pos;;
	for (; (_49117_i < (*(_self_))._field_file.get()._field_Data.len()); (_49117_i)++) {
		{
			jule::I32 _49317_r = static_cast<jule::I32>((*(_self_))._field_file.get()._field_Data[_49117_i]);;
			if (_2097d4663_IsSpace(_49317_r)) {
				;
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _49317_r };
					
					if (_match_expr == '\n') {
						_case_begin_1a5314c97:;
						{
							_2097e1d13_newLine(_self_);
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1a531477a:;
						{
							(*(_self_))._field_column+=8LL;
						}
					}
					else {
						_case_begin_1a5312b74:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1a5314659:;
				};
				goto _iter_next_1a5313081;
			};
			jule::I64 _50821_j = _49117_i;;
			for (; (_50821_j < (*(_self_))._field_file.get()._field_Data.len()); (_50821_j)++) {
				{
					if (((*(_self_))._field_file.get()._field_Data[_50821_j] == '\n')) {
						goto _iter_end_1a5313b20;
					};
				}
			_iter_next_1a5313b20:;
			}
			_iter_end_1a5313b20:;;
			return (*(_self_))._field_file.get()._field_Data.slice(_49117_i, _50821_j);;
		}
	_iter_next_1a5313081:;
	}
	_iter_end_1a5313081:;;
	return nullptr;;
}



inline void _2097e0608_lexLineComment(_2097de2b6_lex* _self_, jule::Ptr<_2097d15d8_Token>* _51938_token) {
	jule::I64 _52013_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _52317_r = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
			if (((_52317_r == '\n') || (_52317_r == '\r'))) {
				goto _iter_end_1a5317096;
			};
		}
	_iter_next_1a5317096:;
	}
	_iter_end_1a5317096:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		(*(_51938_token)).get()._field_Id=static_cast<jule::U64>(17LLU);
		(*(_51938_token)).get()._field_Kind=static_cast<jule::Str>((*(_self_))._field_file.get()._field_Data.slice(_52013_start, (*(_self_))._field_pos));
	};
}



inline void _2097e087d_lexRangeComment(_2097de2b6_lex* _self_, jule::Ptr<_2097d15d8_Token>* _53439_token) {
	jule::I64 _53513_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _53817_r = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
			if ((_53817_r == '\r')) {
				goto _iter_next_1a531a033;
			};
			if ((_53817_r == '\n')) {
				_2097e1d13_newLine(_self_);
				goto _iter_next_1a531a033;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*(_self_))._field_file.get()._field_Data.len()) && (_53817_r == '*')) && ((*(_self_))._field_file.get()._field_Data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					(*(_53439_token)).get()._field_Id=static_cast<jule::U64>(17LLU);
					(*(_53439_token)).get()._field_Kind=static_cast<jule::Str>((*(_self_))._field_file.get()._field_Data.slice(_53513_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1a531a033:;
	}
	_iter_end_1a531a033:;;
	_2097de816_pushErr(_self_, jule::Str("missing block comment close", 27), jule::Slice<jule::Any>());
}



inline jule::Str _2097e0b8b_num(_2097de2b6_lex* _self_, jule::Slice<jule::U8>* _56223_txt) {
	jule::Str __jule_func_result;
	if (((*(_56223_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_2097dccdc_hexNum(_56223_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_2097dca45_octalNum(_56223_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_2097db48e_binaryNum(_56223_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_2097db1e7_commonNum(_56223_txt);
	_julec_label_end:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _2097e0e99_escapeSeq(_2097de2b6_lex* _self_, jule::Slice<jule::U8>* _58429_txt) {
	jule::Str _58517_seq = jule::Str();;
	if (((*(_58429_txt)).len() < 2LL)) {
		goto _julec_label_end;
	};
	{
		auto &_match_expr{ (*(_58429_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1a5323ec6:;
			{
				(*(_self_))._field_pos+=2LL;
				return static_cast<jule::Str>((*(_58429_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1a5323e0a:;
			{
				_58517_seq=_2097dd3c5_bigUnicodePointEscape(_58429_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1a5323b41:;
			{
				_58517_seq=_2097dd68e_littleUnicodePointEscape(_58429_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1a5323ba7:;
			{
				_58517_seq=_2097dd848_hexByteEscape(_58429_txt);
			}
		}
		else {
			_case_begin_1a5323503:;
			{
				_58517_seq=_2097ddace_byteEscape(_58429_txt);
			}
		}
		_match_end_1a5323a20:;
	};
	_julec_label_end:;
	if (_58517_seq.empty()) {
		((*(_self_))._field_pos)++;
		_2097de816_pushErr(_self_, jule::Str("invalid escape sequence", 23), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_58517_seq.len();
	return _58517_seq;;
}



inline jule::Str _2097e1351_getRune(_2097de2b6_lex* _self_, jule::Slice<jule::U8>* _61427_txt, jule::Bool _61440_raw) {
	if (((!(_61440_raw)) && ((*(_61427_txt))[0LL] == '\\'))) {
		return _2097e0e99_escapeSeq(_self_, _61427_txt);;
	};
	jule::I32 _61814_r = 0;;
	jule::I64 _61817_n = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2083969b8_DecodeRune((*(_61427_txt)));
		_61814_r = __jule_assign_result.__jule_result_arg0;
		_61817_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_61817_n;
	return jule::Str::from_rune(_61814_r);;
}



inline jule::Str _2097e165e_lexRune(_2097de2b6_lex* _self_, jule::Slice<jule::U8>* _62327_txt) {
	jule::Str _62417_run = jule::Str("'", 1);;
	((*(_self_))._field_column)++;
	jule::I64 _62617_n = 0LL;;
	jule::I64 _62717_i = 1LL;;
	for (; (_62717_i < (*(_62327_txt)).len()); (_62717_i)++) {
		{
			if (((*(_62327_txt))[_62717_i] == '\r')) {
				goto _iter_next_1a5329141;
			};
			if (((*(_62327_txt))[_62717_i] == '\n')) {
				_2097de816_pushErr(_self_, jule::Str("rune is not finished", 20), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_2097e1d13_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _63917_part = (*(_62327_txt)).slice(_62717_i);;
			jule::Str _64017_r = _2097e1351_getRune(_self_, &(_63917_part), false);;
			_62417_run+=_64017_r;
			(*(_self_))._field_column+=_2083986ac_RuneCountStr(_64017_r);
			if (_64017_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1a5329141;
			};
			if ((_64017_r.len() > 1LL)) {
				_62717_i+=(_64017_r.len() - 1LL);
			};
			(_62617_n)++;
		}
	_iter_next_1a5329141:;
	}
	_iter_end_1a5329141:;;
	if ((_62617_n == 0LL)) {
		_2097de816_pushErr(_self_, jule::Str("rune is cannot empty", 20), jule::Slice<jule::Any>());
	} else if ((_62617_n > 1LL)) {
		_2097de816_pushErr(_self_, jule::Str("rune is should be single", 24), jule::Slice<jule::Any>());
	};
	return _62417_run;;
}



inline jule::Str _2097e18c3_lexStr(_2097de2b6_lex* _self_) {
	jule::Str _66317_s = jule::Str();;
	jule::U8 _66413_mark = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _66613_raw = (_66413_mark == '`');;
	(_66317_s).append(_66413_mark);
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len())) {
		{
			jule::U8 _67117_ch = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
			if ((_67117_ch == '\r')) {
				goto _iter_next_1a532ee7c;
			};
			if ((_67117_ch == '\n')) {
				_2097e1d13_newLine(_self_);
				if ((!(_66613_raw))) {
					_2097de816_pushErr(_self_, jule::Str("string is not finished", 22), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _68321_part = (*(_self_))._field_file.get()._field_Data.slice((*(_self_))._field_pos);;
			jule::Str _68417_r = _2097e1351_getRune(_self_, &(_68321_part), _66613_raw);;
			_66317_s+=_68417_r;
			(*(_self_))._field_column+=_2083986ac_RuneCountStr(_68417_r);
			if ((_67117_ch == _66413_mark)) {
				goto _iter_end_1a532ee7c;
			};
		}
	_iter_next_1a532ee7c:;
	}
	_iter_end_1a532ee7c:;;
	return _66317_s;;
}



inline jule::Bool _2097e1b37_isFirstTokenOfLine(_2097de2b6_lex* _self_) {
	return ((*(_self_))._field_column == 1LL);;
}



inline void _2097e1d13_newLine(_2097de2b6_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _2097e230d_isOp(_2097de2b6_lex* _self_, jule::Slice<jule::U8>* _70424_txt, jule::Str _70437_kind, jule::U64 _70448_id, jule::Ptr<_2097d15d8_Token>* _70466_t) {
	if ((!(_2097d9855_bytesHasPrefix(_70424_txt, _70437_kind)))) {
		return false;;
	};
	(*(_70466_t)).get()._field_Kind=_70437_kind;
	(*(_70466_t)).get()._field_Id=_70448_id;
	(*(_self_))._field_pos+=_70437_kind.len();
	return true;;
}



inline jule::Bool _2097e26b5_lexBasicOps(_2097de2b6_lex* _self_, jule::Slice<jule::U8> _71430_txt, jule::Ptr<_2097d15d8_Token>* _71448_tok) {
	{
		auto expr = &(_2097d8ec5_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5335d0c:;
		if (it != expr_end) {
			_2097d8755_kindPair *_71516_pair = it;
			{
				if (_2097e230d_isOp(_self_, &(_71430_txt), (*(_71516_pair))._field_kind, (*(_71516_pair))._field_id, _71448_tok)) {
					return true;;
				};
			}
			_iter_next_1a5335d0c:;
			++it;
			goto _iter_begin_1a5335d0c;
		}
		_iter_end_1a5335d0c:;
	};
	return false;;
}



inline jule::Bool _2097e2a6c_lexId(_2097de2b6_lex* _self_, jule::Slice<jule::U8>* _72425_txt, jule::Ptr<_2097d15d8_Token>* _72443_t) {
	jule::Str _72513_lex = _2097e011e_id(_self_, _72425_txt);;
	if (_72513_lex.empty()) {
		return false;;
	};
	(*(_72443_t)).get()._field_Kind=_72513_lex;
	(*(_72443_t)).get()._field_Id=static_cast<jule::U64>(1LLU);
	return true;;
}



inline jule::Bool _2097e2e24_lexNum(_2097de2b6_lex* _self_, jule::Slice<jule::U8>* _73426_txt, jule::Ptr<_2097d15d8_Token>* _73444_t) {
	jule::Str _73513_lex = _2097e0b8b_num(_self_, _73426_txt);;
	if (_73513_lex.empty()) {
		return false;;
	};
	(*(_73444_t)).get()._field_Kind=_73513_lex;
	(*(_73444_t)).get()._field_Id=static_cast<jule::U64>(5LLU);
	return true;;
}



inline jule::Ptr<_2097d15d8_Token> _2097e3188_token(_2097de2b6_lex* _self_) {
	jule::Ptr<_2097d15d8_Token> _74617_t = jule::new_ptr<_2097d15d8_Token>(_2097d15d8_Token{._field_File=(*(_self_))._field_file, ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _75113_txt = _2097e0383_resume(_self_);;
	if ((_75113_txt == nullptr)) {
		return _74617_t;;
	};
	_74617_t.get()._field_Column=(*(_self_))._field_column;
	_74617_t.get()._field_Row=(*(_self_))._field_row;
	{
		
		if (_2097e2e24_lexNum(_self_, &(_75113_txt), &(_74617_t))) {
			_case_begin_1a533bb48:;
			{
				goto _match_end_1a533b076;
			}
		}
		else if ((_75113_txt[0LL] == '\'')) {
			_case_begin_1a533c165:;
			{
				_74617_t.get()._field_Kind=_2097e165e_lexRune(_self_, &(_75113_txt));
				_74617_t.get()._field_Id=static_cast<jule::U64>(5LLU);
				return _74617_t;;
			}
		}
		else if (((_75113_txt[0LL] == '\"') || (_75113_txt[0LL] == '`'))) {
			_case_begin_1a533c594:;
			{
				_74617_t.get()._field_Kind=_2097e18c3_lexStr(_self_);
				_74617_t.get()._field_Id=static_cast<jule::U64>(5LLU);
				return _74617_t;;
			}
		}
		else if (_2097d9855_bytesHasPrefix(&(_75113_txt), jule::Str("//", 2))) {
			_case_begin_1a533c60a:;
			{
				_2097e0608_lexLineComment(_self_, &(_74617_t));
				return _74617_t;;
			}
		}
		else if (_2097d9855_bytesHasPrefix(&(_75113_txt), jule::Str("/*", 2))) {
			_case_begin_1a533c671:;
			{
				_2097e087d_lexRangeComment(_self_, &(_74617_t));
				return _74617_t;;
			}
		}
		else if (_2097e230d_isOp(_self_, &(_75113_txt), jule::Str("(", 1), static_cast<jule::U64>(2LLU), &(_74617_t)) || _2097e230d_isOp(_self_, &(_75113_txt), jule::Str(")", 1), static_cast<jule::U64>(2LLU), &(_74617_t)) || _2097e230d_isOp(_self_, &(_75113_txt), jule::Str("{", 1), static_cast<jule::U64>(2LLU), &(_74617_t)) || _2097e230d_isOp(_self_, &(_75113_txt), jule::Str("}", 1), static_cast<jule::U64>(2LLU), &(_74617_t)) || _2097e230d_isOp(_self_, &(_75113_txt), jule::Str("[", 1), static_cast<jule::U64>(2LLU), &(_74617_t)) || _2097e230d_isOp(_self_, &(_75113_txt), jule::Str("]", 1), static_cast<jule::U64>(2LLU), &(_74617_t)) || _2097e26b5_lexBasicOps(_self_, _75113_txt, &(_74617_t))) {
			_case_begin_1a533b0dc:;
			{
				goto _match_end_1a533b076;
			}
		}
		else if (_2097e2a6c_lexId(_self_, &(_75113_txt), &(_74617_t))) {
			_case_begin_1a533b153:;
			{
				{
					auto expr = &(_2097d8b84_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a5342500:;
					if (it != expr_end) {
						_2097d8755_kindPair *_78920_pair = it;
						{
							if (((*(_78920_pair))._field_kind == _74617_t.get()._field_Kind)) {
								_74617_t.get()._field_Id=(*(_78920_pair))._field_id;
								goto _iter_end_1a5342500;
							};
						}
						_iter_next_1a5342500:;
						++it;
						goto _iter_begin_1a5342500;
					}
					_iter_end_1a5342500:;
				};
			}
		}
		else {
			_case_begin_1a533a75c:;
			{
				jule::I32 _79618_r = 0;;
				jule::I64 _79621_sz = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2083969b8_DecodeRune(_75113_txt);
					_79618_r = __jule_assign_result.__jule_result_arg0;
					_79621_sz = __jule_assign_result.__jule_result_arg1;
				});
				_2097de816_pushErr(_self_, jule::Str("undefined token: @", 18), jule::Slice<jule::Any>::make({jule::Any(_79618_r, &__jule_any_type1)}));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_79621_sz;
				return _74617_t;;
			}
		}
		_match_end_1a533b076:;
	};
	(*(_self_))._field_column+=_2083986ac_RuneCountStr(_74617_t.get()._field_Kind);
	return _74617_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _2097de2b6_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dde8d4ec_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dde8de8c_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ddea02bc_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dde97cba_set(_1ddea0c90_decimal* _self_, jule::Str _23322_s) {
	jule::Bool __jule_func_result = false;
	jule::I64 _23417_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_23417_i >= _23322_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23322_s[_23417_i] == '+')) {
			_case_begin_1a57dea57:;
			{
				(_23417_i)++;
			}
		}
		else if ((_23322_s[_23417_i] == '-')) {
			_case_begin_1a57dec66:;
			{
				(*(_self_))._field_neg=true;
				(_23417_i)++;
			}
		}
		_match_end_1a57deb78:;
	};
	jule::Bool _25117_sawdot = false;;
	jule::Bool _25217_sawdigits = false;;
	for (; (_23417_i < _23322_s.len()); (_23417_i)++) {
		{
			{
				
				if ((_23322_s[_23417_i] == '_')) {
					_case_begin_1a57e1707:;
					{
						goto _iter_next_1a57e1075;
					}
				}
				else if ((_23322_s[_23417_i] == '.')) {
					_case_begin_1a57e177e:;
					{
						if (_25117_sawdot) {
							return __jule_func_result;;
						};
						_25117_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1a57e1075;
					}
				}
				else if ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9'))) {
					_case_begin_1a57e1806:;
					{
						_25217_sawdigits=true;
						if (((_23322_s[_23417_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1a57e1075;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23322_s[_23417_i];
							((*(_self_))._field_nd)++;
						} else if ((_23322_s[_23417_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1a57e1075;
					}
				}
				_match_end_1a57e15d6:;
			};
			goto _iter_end_1a57e1075;
		}
	_iter_next_1a57e1075:;
	}
	_iter_end_1a57e1075:;;
	if ((!(_25217_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_25117_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_23417_i < _23322_s.len()) && (_1dde93612_lower(_23322_s[_23417_i]) == 'e'))) {
		(_23417_i)++;
		if ((_23417_i >= _23322_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _29721_esign = 1LL;;
		if ((_23322_s[_23417_i] == '+')) {
			(_23417_i)++;
		} else if ((_23322_s[_23417_i] == '-')) {
			(_23417_i)++;
			_29721_esign=-1LL;
		};
		if ((((_23417_i >= _23322_s.len()) || (_23322_s[_23417_i] < '0')) || (_23322_s[_23417_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _30721_e = 0LL;;
		for (; ((_23417_i < _23322_s.len()) && ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9')) || (_23322_s[_23417_i] == '_'))); (_23417_i)++) {
			{
				if ((_23322_s[_23417_i] == '_')) {
					goto _iter_next_1a57e7433;
				};
				if ((_30721_e < 10000LL)) {
					_30721_e=static_cast<jule::I64>((((_30721_e * 10LL) + static_cast<jule::I64>(_23322_s[_23417_i])) - '0'));
				};
			}
		_iter_next_1a57e7433:;
		}
		_iter_end_1a57e7433:;;
		(*(_self_))._field_dp+=(_30721_e * _29721_esign);
	};
	if ((_23417_i != _23322_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _1dde980c8_floatBits(_1ddea0c90_decimal* _self_, _1dde8d4ec_floatInfo* _32729_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _32817_exp = 0LL;;
	jule::U64 _32917_mant = 0LLU;;
	if (((*(_self_))._field_nd == 0LL)) {
		_32917_mant=0LLU;
		_32817_exp=(*(_32729_flt))._field_bias;
		goto _julec_label_out;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_overflow;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_32917_mant=0LLU;
		_32817_exp=(*(_32729_flt))._field_bias;
		goto _julec_label_out;
	};
	_32817_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I64 _35421_n = 0LL;;
			if (((*(_self_))._field_dp >= _1dde9799b_powtab.len())) {
				_35421_n=27LL;
			} else {
				_35421_n=_1dde9799b_powtab[(*(_self_))._field_dp];
			};
			_1ddea139a_shift(_self_, static_cast<jule::I64>((-(_35421_n))));
			_32817_exp+=_35421_n;
		}
	_iter_next_1a57ece83:;
	}
	_iter_end_1a57ece83:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I64 _36421_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _1dde9799b_powtab.len())) {
				_36421_n=27LL;
			} else {
				_36421_n=_1dde9799b_powtab[(-((*(_self_))._field_dp))];
			};
			_1ddea139a_shift(_self_, _36421_n);
			_32817_exp-=_36421_n;
		}
	_iter_next_1a57edc53:;
	}
	_iter_end_1a57edc53:;;
	(_32817_exp)--;
	if ((_32817_exp < ((*(_32729_flt))._field_bias + 1LL))) {
		jule::I64 _38117_n = (((*(_32729_flt))._field_bias + 1LL) - _32817_exp);;
		_1ddea139a_shift(_self_, static_cast<jule::I64>((-(_38117_n))));
		_32817_exp+=_38117_n;
	};
	if (((_32817_exp - (*(_32729_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_32729_flt))._field_expbits) - 1LL)))) {
		goto _julec_label_overflow;
	};
	_1ddea139a_shift(_self_, static_cast<jule::I64>(static_cast<jule::I64>((1LL + (*(_32729_flt))._field_mantbits))));
	_32917_mant=static_cast<jule::U64>(_1ddea1d7e_roundedInteger(_self_));
	if ((_32917_mant == (2LLU << (*(_32729_flt))._field_mantbits))) {
		_32917_mant>>=1LLU;
		(_32817_exp)++;
		if (((_32817_exp - (*(_32729_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_32729_flt))._field_expbits) - 1LL)))) {
			goto _julec_label_overflow;
		};
	};
	if (((_32917_mant & (1LLU << (*(_32729_flt))._field_mantbits)) == 0LLU)) {
		_32817_exp=(*(_32729_flt))._field_bias;
	};
	goto _julec_label_out;
	_julec_label_overflow:;
	_32917_mant=0LLU;
	_32817_exp=static_cast<jule::I64>(static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << (*(_32729_flt))._field_expbits) - 1LLU) + static_cast<jule::U64>((*(_32729_flt))._field_bias))));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_out:;
	jule::U64 _41717_bits = (_32917_mant & ((1LLU << (*(_32729_flt))._field_mantbits) - 1LLU));;
	_41717_bits|=(static_cast<jule::U64>(((_32817_exp - (*(_32729_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_32729_flt))._field_expbits) - 1LL)))) << (*(_32729_flt))._field_mantbits);
	if ((*(_self_))._field_neg) {
		_41717_bits|=((1LLU << (*(_32729_flt))._field_mantbits) << (*(_32729_flt))._field_expbits);
	};
	__jule_func_result.__jule_result_arg0 = _41717_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _1ddea1125_assign(_1ddea0c90_decimal* _self_, jule::U64 _33029_v) {
	jule::Array<jule::U8,24> _33117_buf = jule::Array<jule::U8,24>();;
	jule::I64 _33417_n = 0LL;;
	while ((_33029_v > 0LLU)) {
		{
			jule::U64 _33617_v1 = (_33029_v / 10LLU);;
			_33029_v-=(10LLU * _33617_v1);
			_33117_buf[_33417_n]=static_cast<jule::U8>(static_cast<jule::U8>((_33029_v + '0')));
			(_33417_n)++;
			_33029_v=_33617_v1;
		}
	_iter_next_1a580a59a:;
	}
	_iter_end_1a580a59a:;;
	(*(_self_))._field_nd=0LL;
	(_33417_n)--;
	for (; (_33417_n >= 0LL); (_33417_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_33117_buf[_33417_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1a580b018:;
	}
	_iter_end_1a580b018:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_1ddea2478_trim(_self_);
}



inline void _1ddea139a_shift(_1ddea0c90_decimal* _self_, jule::I64 _35528_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1a580ce0a:;
		}
		else if ((_35528_k > 0LL)) {
			_case_begin_1a580ce82:;
			{
				while ((_35528_k > 60LL)) {
					{
						_1ddea2e18_leftShift(_self_, 60LLU);
						_35528_k-=60LL;
					}
				_iter_next_1a580da98:;
				}
				_iter_end_1a580da98:;;
				_1ddea2e18_leftShift(_self_, static_cast<jule::U64>(static_cast<jule::U64>(_35528_k)));
			}
		}
		else if ((_35528_k < 0LL)) {
			_case_begin_1a580d009:;
			{
				while ((_35528_k < -60LL)) {
					{
						_1ddea2731_rightShift(_self_, 60LLU);
						_35528_k+=60LL;
					}
				_iter_next_1a580d9dd:;
				}
				_iter_end_1a580d9dd:;;
				_1ddea2731_rightShift(_self_, static_cast<jule::U64>(static_cast<jule::U64>((-(_35528_k)))));
			}
		}
		_match_end_1a580ccd9:;
	};
}



inline void _1ddea1620_roundDown(_1ddea0c90_decimal* _self_, jule::I64 _37528_nd) {
	if (((_37528_nd < 0LL) || (_37528_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_37528_nd;
	_1ddea2478_trim(_self_);
}



inline void _1ddea1895_roundUp(_1ddea0c90_decimal* _self_, jule::I64 _38426_nd) {
	if (((_38426_nd < 0LL) || (_38426_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I64 _39017_i = (_38426_nd - 1LL);;
	for (; (_39017_i >= 0LL); (_39017_i)--) {
		{
			jule::U8 _39217_c = (*(_self_))._field_d[_39017_i];;
			if ((_39217_c < '9')) {
				((*(_self_))._field_d[_39017_i])++;
				(*(_self_))._field_nd=static_cast<jule::I64>((_39017_i + 1LL));
				return;;
			};
		}
	_iter_next_1a581200d:;
	}
	_iter_end_1a581200d:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _1ddea1b1a_round(_1ddea0c90_decimal* _self_, jule::I64 _41124_nd) {
	if (((_41124_nd < 0LL) || (_41124_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_1ddea3259_shouldRoundUp(_self_, _41124_nd)) {
		_1ddea1895_roundUp(_self_, _41124_nd);
	} else {
		_1ddea1620_roundDown(_self_, _41124_nd);
	};
}



inline jule::U64 _1ddea1d7e_roundedInteger(_1ddea0c90_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I64 _42817_i = 0LL;;
	jule::U64 _42917_n = 0LLU;;
	for (; ((_42817_i < (*(_self_))._field_dp) && (_42817_i < (*(_self_))._field_nd)); (_42817_i)++) {
		{
			_42917_n=static_cast<jule::U64>(((_42917_n * 10LLU) + static_cast<jule::U64>(((*(_self_))._field_d[_42817_i] - '0'))));
		}
	_iter_next_1a5814890:;
	}
	_iter_end_1a5814890:;;
	for (; (_42817_i < (*(_self_))._field_dp); (_42817_i)++) {
		{
			_42917_n*=10LLU;
		}
	_iter_next_1a5816386:;
	}
	_iter_end_1a5816386:;;
	if (_1ddea3259_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_42917_n)++;
	};
	return _42917_n;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ddea0c90_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ddeb4b1c_Const> static__1ddeb504b_NewI64(jule::I64 _1622_x) {
	return jule::new_ptr<_1ddeb4b1c_Const>(_1ddeb4b1c_Const{._field_data=jule::Any(_1622_x, &__jule_any_type2)});;
}



inline jule::Ptr<_1ddeb4b1c_Const> static__1ddeb52e3_NewU64(jule::U64 _1922_x) {
	return jule::new_ptr<_1ddeb4b1c_Const>(_1ddeb4b1c_Const{._field_data=jule::Any(_1922_x, &__jule_any_type3)});;
}



inline jule::Ptr<_1ddeb4b1c_Const> static__1ddeb558a_NewBool(jule::Bool _2223_x) {
	return jule::new_ptr<_1ddeb4b1c_Const>(_1ddeb4b1c_Const{._field_data=jule::Any(_2223_x, &__jule_any_type4)});;
}



inline jule::Ptr<_1ddeb4b1c_Const> static__1ddeb5832_NewStr(jule::Str _2522_x) {
	return jule::new_ptr<_1ddeb4b1c_Const>(_1ddeb4b1c_Const{._field_data=jule::Any(_2522_x, &__jule_any_type5)});;
}



inline jule::Ptr<_1ddeb4b1c_Const> static__1ddeb5ac9_NewF64(jule::F64 _2822_x) {
	return jule::new_ptr<_1ddeb4b1c_Const>(_1ddeb4b1c_Const{._field_data=jule::Any(_2822_x, &__jule_any_type6)});;
}



inline jule::Ptr<_1ddeb4b1c_Const> static__1ddeb5cc7_NewNil(void) {
	return jule::new_ptr<_1ddeb4b1c_Const>(_1ddeb4b1c_Const{._field_data=nullptr});;
}



inline jule::I64 _1ddeb6415_ReadI64(_1ddeb4b1c_Const* _self_) {
	if ((!(_1ddeb87ad_IsI64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2));;
}



inline jule::U64 _1ddeb6679_ReadU64(_1ddeb4b1c_Const* _self_) {
	if ((!(_1ddeb8a22_IsU64(_self_)))) {
		return 0LLU;;
	};
	return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3));;
}



inline jule::Bool _1ddeb68dd_ReadBool(_1ddeb4b1c_Const* _self_) {
	if ((!(_1ddeb8c86_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type4);;
}



inline jule::Str _1ddeb6b52_ReadStr(_1ddeb4b1c_Const* _self_) {
	if ((!(_1ddeb8eea_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type5);;
}



inline jule::F64 _1ddeb6db6_ReadF64(_1ddeb4b1c_Const* _self_) {
	if ((!(_1ddeb925e_IsF64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6));;
}



inline jule::I64 _1ddeb712a_AsI64(_1ddeb4b1c_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1a588c770:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2));;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1a588cdd0:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1a588ce46:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6)));;
			}
		}
		else {
			_case_begin_1a588ccae:;
			{
				return 0LL;;
			}
		}
		_match_end_1a588cb16:;
	};
}



inline jule::U64 _1ddeb738e_AsU64(_1ddeb4b1c_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1a588e673:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1a588e72d:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1a588e794:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6)));;
			}
		}
		else {
			_case_begin_1a588d4c9:;
			{
				return 0LLU;;
			}
		}
		_match_end_1a588d7a4:;
	};
}



inline jule::F64 _1ddeb7603_AsF64(_1ddeb4b1c_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1a5891433:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1a5890e05:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1a5890e9e:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3)));;
			}
		}
		else {
			_case_begin_1a588ec4a:;
			{
				return 0LL;;
			}
		}
		_match_end_1a5890025:;
	};
}



inline void _1ddeb7878_SetI64(_1ddeb4b1c_Const* _self_, jule::I64 _13825_x) {
	(*(_self_))._field_data=jule::Any(_13825_x, &__jule_any_type2);
}



inline void _1ddeb7aed_SetU64(_1ddeb4b1c_Const* _self_, jule::U64 _14125_x) {
	(*(_self_))._field_data=jule::Any(_14125_x, &__jule_any_type3);
}



inline void _1ddeb7d73_SetBool(_1ddeb4b1c_Const* _self_, jule::Bool _14426_x) {
	(*(_self_))._field_data=jule::Any(_14426_x, &__jule_any_type4);
}



inline void _1ddeb80e8_SetStr(_1ddeb4b1c_Const* _self_, jule::Str _14725_x) {
	(*(_self_))._field_data=jule::Any(_14725_x, &__jule_any_type5);
}



inline void _1ddeb836d_SetF64(_1ddeb4b1c_Const* _self_, jule::F64 _15025_x) {
	(*(_self_))._field_data=jule::Any(_15025_x, &__jule_any_type6);
}



inline void _1ddeb8549_SetNil(_1ddeb4b1c_Const* _self_) {
	(*(_self_))._field_data=nullptr;
}



inline jule::Bool _1ddeb87ad_IsI64(_1ddeb4b1c_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1a5894ba6:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a5894e3c:;
			{
				return false;;
			}
		}
		_match_end_1a5894dd7:;
	};
}



inline jule::Bool _1ddeb8a22_IsU64(_1ddeb4b1c_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1a5895800:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a5895206:;
			{
				return false;;
			}
		}
		_match_end_1a58951a1:;
	};
}



inline jule::Bool _1ddeb8c86_IsBool(_1ddeb4b1c_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1a589627e:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a5895b96:;
			{
				return false;;
			}
		}
		_match_end_1a5895b41:;
	};
}



inline jule::Bool _1ddeb8eea_IsStr(_1ddeb4b1c_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1a5896c0d:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a5896625:;
			{
				return false;;
			}
		}
		_match_end_1a58965c0:;
	};
}



inline jule::Bool _1ddeb925e_IsF64(_1ddeb4b1c_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1a589768c:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a58970a4:;
			{
				return false;;
			}
		}
		_match_end_1a589704e:;
	};
}



inline jule::Bool _1ddeb94c3_IsNil(_1ddeb4b1c_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _1ddeb97d1_AreSameTypes(_1ddeb4b1c_Const* _self_, _1ddeb4b1c_Const _21327_x) {
	{
		
		if ((_1ddeb87ad_IsI64(_self_) == _1ddeb87ad_IsI64(&_21327_x))) {
			_case_begin_1a5898924:;
			{
				return true;;
			}
		}
		else if ((_1ddeb8a22_IsU64(_self_) == _1ddeb8a22_IsU64(&_21327_x))) {
			_case_begin_1a589898a:;
			{
				return true;;
			}
		}
		else if ((_1ddeb925e_IsF64(_self_) == _1ddeb925e_IsF64(&_21327_x))) {
			_case_begin_1a5898a01:;
			{
				return true;;
			}
		}
		else if ((_1ddeb8c86_IsBool(_self_) == _1ddeb8c86_IsBool(&_21327_x))) {
			_case_begin_1a5898c76:;
			{
				return true;;
			}
		}
		else if ((_1ddeb8eea_IsStr(_self_) == _1ddeb8eea_IsStr(&_21327_x))) {
			_case_begin_1a5898cdc:;
			{
				return true;;
			}
		}
		else if ((_1ddeb94c3_IsNil(_self_) == _1ddeb94c3_IsNil(&_21327_x))) {
			_case_begin_1a5898d53:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a5898836:;
			{
				return false;;
			}
		}
		_match_end_1a589876a:;
	};
}



inline jule::Bool _1ddeb9ade_And(_1ddeb4b1c_Const* _self_, _1ddeb4b1c_Const _23818_x) {
	{
		
		if ((_1ddeb8c86_IsBool(_self_) && _1ddeb8c86_IsBool(&_23818_x))) {
			_case_begin_1a589ba7b:;
			{
				return (_1ddeb68dd_ReadBool(_self_) && _1ddeb68dd_ReadBool(&_23818_x));;
			}
		}
		else {
			_case_begin_1a589ba15:;
			{
				return false;;
			}
		}
		_match_end_1a589b608:;
	};
}



inline jule::Bool _1ddeb9dec_Or(_1ddeb4b1c_Const* _self_, _1ddeb4b1c_Const _24917_x) {
	{
		
		if ((_1ddeb8c86_IsBool(_self_) && _1ddeb8c86_IsBool(&_24917_x))) {
			_case_begin_1a589cdbd:;
			{
				return (_1ddeb68dd_ReadBool(_self_) || _1ddeb68dd_ReadBool(&_24917_x));;
			}
		}
		else {
			_case_begin_1a589c560:;
			{
				return false;;
			}
		}
		_match_end_1a589c494:;
	};
}



inline jule::Bool _1ddeba20a_Eq(_1ddeb4b1c_Const* _self_, _1ddeb4b1c_Const _26017_x) {
	{
		
		if (_1ddeb94c3_IsNil(_self_)) {
			_case_begin_1a589e782:;
			{
				return _1ddeb94c3_IsNil(&_26017_x);;
			}
		}
		else if (_1ddeb8c86_IsBool(_self_)) {
			_case_begin_1a589e232:;
			{
				return (_1ddeb8c86_IsBool(&_26017_x) && (_1ddeb68dd_ReadBool(_self_) == _1ddeb68dd_ReadBool(&_26017_x)));;
			}
		}
		else if (_1ddeb8eea_IsStr(_self_)) {
			_case_begin_1a589e2a9:;
			{
				return (_1ddeb8eea_IsStr(&_26017_x) && (_1ddeb6b52_ReadStr(_self_) == _1ddeb6b52_ReadStr(&_26017_x)));;
			}
		}
		else if (_1ddeb87ad_IsI64(_self_)) {
			_case_begin_1a589e4eb:;
			{
				return (_1ddeb6415_ReadI64(_self_) == _1ddeb712a_AsI64(&_26017_x));;
			}
		}
		else if (_1ddeb8a22_IsU64(_self_)) {
			_case_begin_1a589e562:;
			{
				return (_1ddeb6679_ReadU64(_self_) == _1ddeb738e_AsU64(&_26017_x));;
			}
		}
		else if (_1ddeb925e_IsF64(_self_)) {
			_case_begin_1a589e5c8:;
			{
				return (_1ddeb6db6_ReadF64(_self_) == _1ddeb7603_AsF64(&_26017_x));;
			}
		}
		else {
			_case_begin_1a589d83b:;
			{
				return false;;
			}
		}
		_match_end_1a589d770:;
	};
}



inline jule::Bool _1ddeba518_Lt(_1ddeb4b1c_Const* _self_, _1ddeb4b1c_Const _28717_x) {
	{
		
		if (_1ddeb8eea_IsStr(_self_)) {
			_case_begin_1a58a2d6d:;
			{
				return (_1ddeb8eea_IsStr(&_28717_x) && (_1ddeb6b52_ReadStr(_self_) < _1ddeb6b52_ReadStr(&_28717_x)));;
			}
		}
		else if (_1ddeb87ad_IsI64(_self_)) {
			_case_begin_1a58a2dd4:;
			{
				return (_1ddeb6415_ReadI64(_self_) < _1ddeb712a_AsI64(&_28717_x));;
			}
		}
		else if (_1ddeb8a22_IsU64(_self_)) {
			_case_begin_1a58a2e5b:;
			{
				return (_1ddeb6679_ReadU64(_self_) < _1ddeb738e_AsU64(&_28717_x));;
			}
		}
		else if (_1ddeb925e_IsF64(_self_)) {
			_case_begin_1a58a2ed3:;
			{
				return (_1ddeb6db6_ReadF64(_self_) < _1ddeb7603_AsF64(&_28717_x));;
			}
		}
		else {
			_case_begin_1a589eb28:;
			{
				return false;;
			}
		}
		_match_end_1a589ea5c:;
	};
}



inline jule::Bool _1ddeba826_LtEq(_1ddeb4b1c_Const* _self_, _1ddeb4b1c_Const _31019_x) {
	{
		
		if (_1ddeb8eea_IsStr(_self_)) {
			_case_begin_1a58a5a30:;
			{
				return (_1ddeb8eea_IsStr(&_31019_x) && (_1ddeb6b52_ReadStr(_self_) <= _1ddeb6b52_ReadStr(&_31019_x)));;
			}
		}
		else if (_1ddeb87ad_IsI64(_self_)) {
			_case_begin_1a58a5a96:;
			{
				return (_1ddeb6415_ReadI64(_self_) <= _1ddeb712a_AsI64(&_31019_x));;
			}
		}
		else if (_1ddeb8a22_IsU64(_self_)) {
			_case_begin_1a58a5b1d:;
			{
				return (_1ddeb6679_ReadU64(_self_) <= _1ddeb738e_AsU64(&_31019_x));;
			}
		}
		else if (_1ddeb925e_IsF64(_self_)) {
			_case_begin_1a58a5b95:;
			{
				return (_1ddeb6db6_ReadF64(_self_) <= _1ddeb7603_AsF64(&_31019_x));;
			}
		}
		else {
			_case_begin_1a58a3764:;
			{
				return false;;
			}
		}
		_match_end_1a58a3698:;
	};
}



inline jule::Bool _1ddebab34_Gt(_1ddeb4b1c_Const* _self_, _1ddeb4b1c_Const _33317_x) {
	{
		
		if (_1ddeb8eea_IsStr(_self_)) {
			_case_begin_1a58a86e2:;
			{
				return (_1ddeb8eea_IsStr(&_33317_x) && (_1ddeb6b52_ReadStr(_self_) > _1ddeb6b52_ReadStr(&_33317_x)));;
			}
		}
		else if (_1ddeb87ad_IsI64(_self_)) {
			_case_begin_1a58a8758:;
			{
				return (_1ddeb6415_ReadI64(_self_) > _1ddeb712a_AsI64(&_33317_x));;
			}
		}
		else if (_1ddeb8a22_IsU64(_self_)) {
			_case_begin_1a58a87d0:;
			{
				return (_1ddeb6679_ReadU64(_self_) > _1ddeb738e_AsU64(&_33317_x));;
			}
		}
		else if (_1ddeb925e_IsF64(_self_)) {
			_case_begin_1a58a8857:;
			{
				return (_1ddeb6db6_ReadF64(_self_) > _1ddeb7603_AsF64(&_33317_x));;
			}
		}
		else {
			_case_begin_1a58a6426:;
			{
				return false;;
			}
		}
		_match_end_1a58a635a:;
	};
}



inline jule::Bool _1ddebae42_GtEq(_1ddeb4b1c_Const* _self_, _1ddeb4b1c_Const _35619_x) {
	{
		
		if (_1ddeb8eea_IsStr(_self_)) {
			_case_begin_1a58ab3a4:;
			{
				return (_1ddeb8eea_IsStr(&_35619_x) && (_1ddeb6b52_ReadStr(_self_) >= _1ddeb6b52_ReadStr(&_35619_x)));;
			}
		}
		else if (_1ddeb87ad_IsI64(_self_)) {
			_case_begin_1a58ab41a:;
			{
				return (_1ddeb6415_ReadI64(_self_) >= _1ddeb712a_AsI64(&_35619_x));;
			}
		}
		else if (_1ddeb8a22_IsU64(_self_)) {
			_case_begin_1a58ab492:;
			{
				return (_1ddeb6679_ReadU64(_self_) >= _1ddeb738e_AsU64(&_35619_x));;
			}
		}
		else if (_1ddeb925e_IsF64(_self_)) {
			_case_begin_1a58ab519:;
			{
				return (_1ddeb6db6_ReadF64(_self_) >= _1ddeb7603_AsF64(&_35619_x));;
			}
		}
		else {
			_case_begin_1a58a90d8:;
			{
				return false;;
			}
		}
		_match_end_1a58a901c:;
	};
}



inline jule::Bool _1ddebb250_Add(_1ddeb4b1c_Const* _self_, _1ddeb4b1c_Const _37722_x) {
	{
		
		if (_1ddeb8eea_IsStr(_self_)) {
			_case_begin_1a58ae066:;
			{
				if ((!(_1ddeb8eea_IsStr(&_37722_x)))) {
					return false;;
				};
				_1ddeb80e8_SetStr(_self_, (_1ddeb6b52_ReadStr(_self_) + _1ddeb6b52_ReadStr(&_37722_x)));
			}
		}
		else if (_1ddeb925e_IsF64(_self_)) {
			_case_begin_1a58ae0cc:;
			{
				_1ddeb836d_SetF64(_self_, static_cast<jule::F64>((_1ddeb6db6_ReadF64(_self_) + _1ddeb7603_AsF64(&_37722_x))));
			}
		}
		else if (_1ddeb87ad_IsI64(_self_)) {
			_case_begin_1a58ae154:;
			{
				if (_1ddeb925e_IsF64(&_37722_x)) {
					_1ddeb836d_SetF64(_self_, static_cast<jule::F64>((_1ddeb7603_AsF64(_self_) + _1ddeb6db6_ReadF64(&_37722_x))));
				} else {
					_1ddeb7878_SetI64(_self_, static_cast<jule::I64>((_1ddeb6415_ReadI64(_self_) + _1ddeb712a_AsI64(&_37722_x))));
				};
			}
		}
		else if (_1ddeb8a22_IsU64(_self_)) {
			_case_begin_1a58ae1cb:;
			{
				if (_1ddeb925e_IsF64(&_37722_x)) {
					_1ddeb836d_SetF64(_self_, static_cast<jule::F64>((_1ddeb7603_AsF64(_self_) + _1ddeb6db6_ReadF64(&_37722_x))));
				} else {
					_1ddeb7aed_SetU64(_self_, static_cast<jule::U64>((_1ddeb6679_ReadU64(_self_) + _1ddeb738e_AsU64(&_37722_x))));
				};
			}
		}
		else {
			_case_begin_1a58abc9a:;
			{
				return false;;
			}
		}
		_match_end_1a58abbce:;
	};
	return true;;
}



inline jule::Bool _1ddebb55d_Sub(_1ddeb4b1c_Const* _self_, _1ddeb4b1c_Const _40622_x) {
	{
		
		if (_1ddeb925e_IsF64(_self_)) {
			_case_begin_1a58b3eb1:;
			{
				_1ddeb836d_SetF64(_self_, static_cast<jule::F64>((_1ddeb6db6_ReadF64(_self_) - _1ddeb7603_AsF64(&_40622_x))));
			}
		}
		else if (_1ddeb87ad_IsI64(_self_)) {
			_case_begin_1a58b4027:;
			{
				if (_1ddeb925e_IsF64(&_40622_x)) {
					_1ddeb836d_SetF64(_self_, static_cast<jule::F64>((_1ddeb7603_AsF64(_self_) - _1ddeb6db6_ReadF64(&_40622_x))));
				} else {
					_1ddeb7878_SetI64(_self_, static_cast<jule::I64>((_1ddeb6415_ReadI64(_self_) - _1ddeb712a_AsI64(&_40622_x))));
				};
			}
		}
		else if (_1ddeb8a22_IsU64(_self_)) {
			_case_begin_1a58b408d:;
			{
				if (_1ddeb925e_IsF64(&_40622_x)) {
					_1ddeb836d_SetF64(_self_, static_cast<jule::F64>((_1ddeb7603_AsF64(_self_) - _1ddeb6db6_ReadF64(&_40622_x))));
				} else {
					_1ddeb7aed_SetU64(_self_, static_cast<jule::U64>((_1ddeb6679_ReadU64(_self_) - _1ddeb738e_AsU64(&_40622_x))));
				};
			}
		}
		else {
			_case_begin_1a58b37da:;
			{
				return false;;
			}
		}
		_match_end_1a58b371e:;
	};
	return true;;
}



inline jule::Bool _1ddebb86b_Mul(_1ddeb4b1c_Const* _self_, _1ddeb4b1c_Const _43022_x) {
	{
		
		if (_1ddeb925e_IsF64(_self_)) {
			_case_begin_1a58b8070:;
			{
				_1ddeb836d_SetF64(_self_, static_cast<jule::F64>((_1ddeb6db6_ReadF64(_self_) * _1ddeb7603_AsF64(&_43022_x))));
			}
		}
		else if (_1ddeb87ad_IsI64(_self_)) {
			_case_begin_1a58b80d6:;
			{
				if (_1ddeb925e_IsF64(&_43022_x)) {
					_1ddeb836d_SetF64(_self_, static_cast<jule::F64>((_1ddeb7603_AsF64(_self_) * _1ddeb6db6_ReadF64(&_43022_x))));
				} else {
					_1ddeb7878_SetI64(_self_, static_cast<jule::I64>((_1ddeb6415_ReadI64(_self_) * _1ddeb712a_AsI64(&_43022_x))));
				};
			}
		}
		else if (_1ddeb8a22_IsU64(_self_)) {
			_case_begin_1a58b814c:;
			{
				if (_1ddeb925e_IsF64(&_43022_x)) {
					_1ddeb836d_SetF64(_self_, static_cast<jule::F64>((_1ddeb7603_AsF64(_self_) * _1ddeb6db6_ReadF64(&_43022_x))));
				} else {
					_1ddeb7aed_SetU64(_self_, static_cast<jule::U64>((_1ddeb6679_ReadU64(_self_) * _1ddeb738e_AsU64(&_43022_x))));
				};
			}
		}
		else {
			_case_begin_1a58b7756:;
			{
				return false;;
			}
		}
		_match_end_1a58b768a:;
	};
	return true;;
}



inline jule::Bool _1ddebbb79_Div(_1ddeb4b1c_Const* _self_, _1ddeb4b1c_Const _45822_x) {
	{
		
		if (_1ddeb925e_IsF64(_self_)) {
			_case_begin_1a58bc12e:;
			{
				jule::F64 _46117_l = _1ddeb7603_AsF64(&_45822_x);;
				if ((_46117_l == 0LL)) {
					return false;;
				};
				_1ddeb836d_SetF64(_self_, static_cast<jule::F64>(jule::div(_1ddeb6db6_ReadF64(_self_),_46117_l)));
			}
		}
		else if (_1ddeb87ad_IsI64(_self_)) {
			_case_begin_1a58bc195:;
			{
				jule::F64 _46717_l = _1ddeb7603_AsF64(&_45822_x);;
				if ((_46717_l == 0LL)) {
					return false;;
				};
				_1ddeb836d_SetF64(_self_, static_cast<jule::F64>(jule::div(_1ddeb7603_AsF64(_self_),_46717_l)));
			}
		}
		else if (_1ddeb8a22_IsU64(_self_)) {
			_case_begin_1a58bc20b:;
			{
				jule::F64 _47317_l = _1ddeb7603_AsF64(&_45822_x);;
				if ((_47317_l == 0LL)) {
					return false;;
				};
				_1ddeb836d_SetF64(_self_, static_cast<jule::F64>(jule::div(_1ddeb7603_AsF64(_self_),_47317_l)));
			}
		}
		else {
			_case_begin_1a58bb815:;
			{
				return false;;
			}
		}
		_match_end_1a58bb749:;
	};
	return true;;
}



inline jule::Bool _1ddebbe87_Mod(_1ddeb4b1c_Const* _self_, _1ddeb4b1c_Const _48722_x) {
	{
		
		if (_1ddeb87ad_IsI64(_self_)) {
			_case_begin_1a58c1331:;
			{
				jule::I64 _49017_l = _1ddeb712a_AsI64(&_48722_x);;
				if ((_49017_l == 0LL)) {
					return false;;
				};
				_1ddeb7878_SetI64(_self_, static_cast<jule::I64>(jule::mod(_1ddeb6415_ReadI64(_self_),_49017_l)));
			}
		}
		else if (_1ddeb8a22_IsU64(_self_)) {
			_case_begin_1a58c1397:;
			{
				jule::U64 _49617_l = _1ddeb738e_AsU64(&_48722_x);;
				if ((_49617_l == 0LLU)) {
					return false;;
				};
				_1ddeb7aed_SetU64(_self_, static_cast<jule::U64>(jule::mod(_1ddeb6679_ReadU64(_self_),_49617_l)));
			}
		}
		else {
			_case_begin_1a58c12ba:;
			{
				return false;;
			}
		}
		_match_end_1a58bc904:;
	};
	return true;;
}



inline jule::Bool _1ddebc295_BitwiseAnd(_1ddeb4b1c_Const* _self_, _1ddeb4b1c_Const _50929_x) {
	{
		
		if (_1ddeb87ad_IsI64(_self_)) {
			_case_begin_1a58c4268:;
			{
				_1ddeb7878_SetI64(_self_, static_cast<jule::I64>((_1ddeb6415_ReadI64(_self_) & _1ddeb712a_AsI64(&_50929_x))));
			}
		}
		else if (_1ddeb8a22_IsU64(_self_)) {
			_case_begin_1a58c42ce:;
			{
				_1ddeb7aed_SetU64(_self_, static_cast<jule::U64>((_1ddeb6679_ReadU64(_self_) & _1ddeb738e_AsU64(&_50929_x))));
			}
		}
		else {
			_case_begin_1a58c4202:;
			{
				return false;;
			}
		}
		_match_end_1a58c2dc1:;
	};
	return true;;
}



inline jule::Bool _1ddebc5a3_BitwiseOr(_1ddeb4b1c_Const* _self_, _1ddeb4b1c_Const _52328_x) {
	{
		
		if (_1ddeb87ad_IsI64(_self_)) {
			_case_begin_1a58c60d3:;
			{
				_1ddeb7878_SetI64(_self_, static_cast<jule::I64>((_1ddeb6415_ReadI64(_self_) | _1ddeb712a_AsI64(&_52328_x))));
			}
		}
		else if (_1ddeb8a22_IsU64(_self_)) {
			_case_begin_1a58c6149:;
			{
				_1ddeb7aed_SetU64(_self_, static_cast<jule::U64>((_1ddeb6679_ReadU64(_self_) | _1ddeb738e_AsU64(&_52328_x))));
			}
		}
		else {
			_case_begin_1a58c606c:;
			{
				return false;;
			}
		}
		_match_end_1a58c5eb2:;
	};
	return true;;
}



inline jule::Bool _1ddebc8b1_Xor(_1ddeb4b1c_Const* _self_, _1ddeb4b1c_Const _53722_x) {
	{
		
		if (_1ddeb87ad_IsI64(_self_)) {
			_case_begin_1a58c7e70:;
			{
				_1ddeb7878_SetI64(_self_, static_cast<jule::I64>((_1ddeb6415_ReadI64(_self_) ^ _1ddeb712a_AsI64(&_53722_x))));
			}
		}
		else if (_1ddeb8a22_IsU64(_self_)) {
			_case_begin_1a58c7ed6:;
			{
				_1ddeb7aed_SetU64(_self_, static_cast<jule::U64>((_1ddeb6679_ReadU64(_self_) ^ _1ddeb738e_AsU64(&_53722_x))));
			}
		}
		else {
			_case_begin_1a58c7e09:;
			{
				return false;;
			}
		}
		_match_end_1a58c7d4e:;
	};
	return true;;
}



inline jule::Bool _1ddebcbbe_Lshift(_1ddeb4b1c_Const* _self_, _1ddeb4b1c_Const _55125_x) {
	{
		
		if (_1ddeb87ad_IsI64(_self_)) {
			_case_begin_1a58c9d0c:;
			{
				jule::I64 _55417_l = _1ddeb712a_AsI64(_self_);;
				if ((_55417_l < 0LL)) {
					jule::U64 _55621_r = _1ddeb738e_AsU64(&_55125_x);;
					_1ddeb7878_SetI64(_self_, static_cast<jule::I64>((_55417_l << _55621_r)));
				} else {
					_1ddebd340_lshiftUnsig(_self_, &(_55125_x));
				};
			}
		}
		else if (_1ddeb8a22_IsU64(_self_)) {
			_case_begin_1a58c9d73:;
			{
				_1ddebd340_lshiftUnsig(_self_, &(_55125_x));
			}
		}
		else {
			_case_begin_1a58c9c96:;
			{
				return false;;
			}
		}
		_match_end_1a58c9bdb:;
	};
	return true;;
}



inline jule::Bool _1ddebcecc_Rshift(_1ddeb4b1c_Const* _self_, _1ddeb4b1c_Const _57125_x) {
	{
		
		if (_1ddeb87ad_IsI64(_self_)) {
			_case_begin_1a58cc3d6:;
			{
				jule::I64 _57417_l = _1ddeb712a_AsI64(_self_);;
				if ((_57417_l < 0LL)) {
					jule::U64 _57621_r = _1ddeb738e_AsU64(&_57125_x);;
					_1ddeb7878_SetI64(_self_, static_cast<jule::I64>((_57417_l >> _57621_r)));
				} else {
					_1ddebd63c_rshiftUnsig(_self_, &(_57125_x));
				};
			}
		}
		else if (_1ddeb8a22_IsU64(_self_)) {
			_case_begin_1a58cc44c:;
			{
				_1ddebd63c_rshiftUnsig(_self_, &(_57125_x));
			}
		}
		else {
			_case_begin_1a58cc370:;
			{
				return false;;
			}
		}
		_match_end_1a58cc2a4:;
	};
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ddeb4b1c_Const _Src) {
	_Stream << "Const{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acaa352d_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acaa43b9_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acaa47b5_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acad72cb_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acad7892_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acad7b7d_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acad8002_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acad82dd_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acad86d9_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acad89c5_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1acad9113_IsUnsafe(_1acad8cb1_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1acad8cb1_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1acad97d9_AutoSized(_1acad9487_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1acad9487_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acad9b91_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acada048_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acadb456_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acadb742_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acadbce7_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acadc0d3_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1acadc7dc_IsNil(_1acadc48a_LitExpr* _self_) {
	return (*(_self_))._field_Value.equal("nil", 3);;
}







std::ostream &operator<<(std::ostream &_Stream, _1acadc48a_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acadcac8_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1acadd39d_IsSelf(_1acadd04b_IdentExpr* _self_) {
	return (*(_self_))._field_Ident.equal("self", 4);;
}







std::ostream &operator<<(std::ostream &_Stream, _1acadd04b_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acadd755_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acaddb0c_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acaddeb4_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acade36b_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acade7de_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "IsSelf:" << _Src._field_IsSelf << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acadec62_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1acae06d0_Unhandled(_1acae036c_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _1acae0944_Ignored(_1acae036c_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*(_self_))._field_Exception.get()._field_Deferred);;
}







std::ostream &operator<<(std::ostream &_Stream, _1acae036c_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1acae114d_IsTargeted(_1acae0ceb_FieldExprPair* _self_) {
	return ((*(_self_))._field_Field != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1acae0ceb_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acae15c1_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1acae1d96_IsEmpty(_1acae1a44_BraceLit* _self_) {
	return ((*(_self_))._field_Exprs.len() == 0LL);;
}







std::ostream &operator<<(std::ostream &_Stream, _1acae1a44_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acae2429_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1acae2db9_IsEmpty(_1acae2a9a_SliceExpr* _self_) {
	return ((*(_self_))._field_Exprs.len() == 0LL);;
}







std::ostream &operator<<(std::ostream &_Stream, _1acae2a9a_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acae3408_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acae3a13_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acae3cee_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acae4272_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acae4629_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acae49d1_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acae4cbc_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acae53c7_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acae5916_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acae6807_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acae6e12_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1acae794b_IsSelf(_1acae75d8_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1acae7bb0_IsRef(_1acae75d8_ParamDecl* _self_) {
	return ((!((*(_self_))._field_Ident.empty())) && ((*(_self_))._field_Ident[0LL] == '&'));;
}







std::ostream &operator<<(std::ostream &_Stream, _1acae75d8_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1acae8c5a_IsAnon(_1acae8908_FnDecl* _self_) {
	return (*(_self_))._field_Ident.equal("<anonymous>", 11);;
}







std::ostream &operator<<(std::ostream &_Stream, _1acae8908_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acae98d7_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acae9c8e_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1acaea751_IsInf(_1acaea3ee_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1acaea3ee_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1acaeb026_IsWhileNext(_1acaeabc4_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1acaeabc4_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acaeb565_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acaeb91c_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acaebcc4_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acaec247_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acaec5ee_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acaeca72_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acaed248_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acaed6bb_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acaedd92_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acaee634_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1acaeee09_AutoExpr(_1acaeeaa7_EnumItemDecl* _self_) {
	return ((*(_self_))._field_Expr == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1acaeeaa7_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1acb00932_DefaultTyped(_1acb005d0_EnumDecl* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb005d0_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb00da5_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb014b0_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb01724_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb02071_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb02747_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Inherits:" << _Src._field_Inherits << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1acb031b5_IsTraitImpl(_1acb02d52_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1acb03429_IsStructImpl(_1acb02d52_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb02d52_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1acb09342_FieldIns> _1acb047b0_instance(jule::Ptr<_1acb0444c_Field> _self_) {
	return jule::new_ptr<_1acb09342_FieldIns>(_1acb09342_FieldIns{._field_Decl=_self_, });;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb0444c_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb0620c_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1acb09d37_StructIns> _1acb07483_instance(jule::Ptr<_1acb07021_Struct> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];;
	};
	jule::Ptr<_1acb09d37_StructIns> _9917_ins = jule::new_ptr<_1acb09d37_StructIns>(_1acb09d37_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_1acb09342_FieldIns>>::alloc(0LL, _self_.get()._field_Fields.len()), ._field_Statics=jule::Slice<jule::Ptr<_1abd1497c_Var>>::alloc(0LL, _self_.get()._field_Statics.len()), ._field_Refers=static__1acb27eed_new(), });;
	{
		auto expr = &(_self_.get()._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5bbea2a:;
		if (it != expr_end) {
			jule::Ptr<_1abd1497c_Var> _10621_s = *it;
			{
				{ jule::Slice<jule::Ptr<_1abd1497c_Var>> &__jule_push_dest = _9917_ins.get()._field_Statics; __jule_push_dest.push(jule::new_ptr<_1abd1497c_Var>((*(_10621_s)))); };
			}
			_iter_next_1a5bbea2a:;
			++it;
			goto _iter_begin_1a5bbea2a;
		}
		_iter_end_1a5bbea2a:;
	};
	{
		auto expr = &(_self_.get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5bc0d8e:;
		if (it != expr_end) {
			jule::Ptr<_1acb0444c_Field> _11021_f = *it;
			{
				{ jule::Slice<jule::Ptr<_1acb09342_FieldIns>> &__jule_push_dest = _9917_ins.get()._field_Fields; __jule_push_dest.push(_1acb047b0_instance(_11021_f)); };
				if ((((!(_11021_f.get()._field_Mutable)) && (_11021_f.get()._field_Kind.get()._field_Kind != nullptr)) && _1acca6445_Mutable(_11021_f.get()._field_Kind.get()._field_Kind.ptr()))) {
					_9917_ins.get()._field_Mutable=true;
				};
			}
			_iter_next_1a5bc0d8e:;
			++it;
			goto _iter_begin_1a5bc0d8e;
		}
		_iter_end_1a5bc0d8e:;
	};
	if ((_self_.get()._field_Generics.len() == 0LL)) {
		_9917_ins.get()._field_Methods=_self_.get()._field_Methods;
	} else {
		_9917_ins.get()._field_Methods=jule::Slice<jule::Ptr<_1acb221d4_Fn>>::alloc(0LL, _self_.get()._field_Methods.len());
		{
			auto expr = &(_self_.get()._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a5bc2ce7:;
			if (it != expr_end) {
				jule::Ptr<_1acb221d4_Fn> _12125_f = *it;
				{
					jule::Ptr<_1acb221d4_Fn> _12225_fins = jule::new_ptr<_1acb221d4_Fn>((*(_12125_f)));;
					_12225_fins.get()._field_Instances=nullptr;
					{ jule::Slice<jule::Ptr<_1acb221d4_Fn>> &__jule_push_dest = _9917_ins.get()._field_Methods; __jule_push_dest.push(_12225_fins); };
				}
				_iter_next_1a5bc2ce7:;
				++it;
				goto _iter_begin_1a5bc2ce7;
			}
			_iter_end_1a5bc2ce7:;
		};
	};
	return _9917_ins;;
}



inline jule::Ptr<_1acb09d37_StructIns> _1acb0775d_appendInstance(_1acb07021_Struct* _self_, jule::Ptr<_1acb09d37_StructIns>* _13338_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5bc505d:;
		if (it != expr_end) {
			jule::Ptr<_1acb09d37_StructIns> _13921_ains = *it;
			{
				if (_1acb0a92b_Same(_13921_ains.ptr(), (*(_13338_ins)))) {
					return _13921_ains;;
				};
			}
			_iter_next_1a5bc505d:;
			++it;
			goto _iter_begin_1a5bc505d;
		}
		_iter_end_1a5bc505d:;
	};
	{ jule::Slice<jule::Ptr<_1acb09d37_StructIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13338_ins))); };
	return nullptr;;
}



inline jule::Ptr<_1acb221d4_Fn> _1acb07b15_FindMethod(_1acb07021_Struct* _self_, jule::Str _15129_ident, jule::Bool _15141_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5bc646b:;
		if (it != expr_end) {
			jule::Ptr<_1acb221d4_Fn> _15221_f = *it;
			{
				if (((_15221_f.get()._field_Statically == _15141_statically) && (_15221_f.get()._field_Ident == _15129_ident))) {
					return _15221_f;;
				};
			}
			_iter_next_1a5bc646b:;
			++it;
			goto _iter_begin_1a5bc646b;
		}
		_iter_end_1a5bc646b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abd1497c_Var> _1acb07e23_FindStatic(_1acb07021_Struct* _self_, jule::Str _16229_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5bc6b86:;
		if (it != expr_end) {
			jule::Ptr<_1abd1497c_Var> _16321_v = *it;
			{
				if ((_16321_v.get()._field_Ident == _16229_ident)) {
					return _16321_v;;
				};
			}
			_iter_next_1a5bc6b86:;
			++it;
			goto _iter_begin_1a5bc6b86;
		}
		_iter_end_1a5bc6b86:;
	};
	return nullptr;;
}



inline jule::Ptr<_1acb0444c_Field> _1acb08231_FindField(_1acb07021_Struct* _self_, jule::Str _17328_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5bc846d:;
		if (it != expr_end) {
			jule::Ptr<_1acb0444c_Field> _17421_f = *it;
			{
				if ((_17421_f.get()._field_Ident == _17328_ident)) {
					return _17421_f;;
				};
			}
			_iter_next_1a5bc846d:;
			++it;
			goto _iter_begin_1a5bc846d;
		}
		_iter_end_1a5bc846d:;
	};
	return nullptr;;
}



inline jule::Bool _1acb0853e_IsImplements(_1acb07021_Struct* _self_, jule::Ptr<_1acb34405_Trait> _18327_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5bc934d:;
		if (it != expr_end) {
			jule::Ptr<_1acb34405_Trait> *_18416_it = it;
			{
				if ((_18327_t == (*(_18416_it)))) {
					return true;;
				};
			}
			_iter_next_1a5bc934d:;
			++it;
			goto _iter_begin_1a5bc934d;
		}
		_iter_end_1a5bc934d:;
	};
	return false;;
}



inline jule::Bool _1acb0884c_IsDerives(_1acb07021_Struct* _self_, jule::Str _19324_ident) {
	{
		auto expr = &((*(_self_))._field_Directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5bc98c0:;
		if (it != expr_end) {
			jule::Ptr<_1acaa47b5_Directive> *_19416_d = it;
			{
				if ((*(_19416_d)).get()._field_Tag.get()._field_Kind.equal("derive", 6)) {
					if ((((*(_19416_d)).get()._field_Args.len() == 1LL) && ((*(_19416_d)).get()._field_Args[0LL].get()._field_Kind == _19324_ident))) {
						return true;;
					};
				};
			}
			_iter_next_1a5bc98c0:;
			++it;
			goto _iter_begin_1a5bc98c0;
		}
		_iter_end_1a5bc98c0:;
	};
	return false;;
}



inline jule::Bool _1acb08b5a_IsUses(_1acb07021_Struct* _self_, jule::Ptr<_1acb07021_Struct> _20521_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5bcbc8a:;
		if (it != expr_end) {
			jule::Ptr<_1acb07021_Struct> *_20616_u = it;
			{
				while ((_20521_s == (*(_20616_u)))) {
					{
						return true;;
					}
				_iter_next_1a5bcc50a:;
				}
				_iter_end_1a5bcc50a:;;
			}
			_iter_next_1a5bcbc8a:;
			++it;
			goto _iter_begin_1a5bcbc8a;
		}
		_iter_end_1a5bcbc8a:;
	};
	return false;;
}



inline jule::Bool _1acb08dbe_HasRefAccessible(_1acb07021_Struct* _self_) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5bcca7c:;
		if (it != expr_end) {
			jule::Ptr<_1acb221d4_Fn> *_21616_m = it;
			{
				if ((((*(_21616_m)).get()._field_Params.len() > 0LL) && _1acb211e4_IsRef((*(_21616_m)).get()._field_Params[0LL].ptr()))) {
					return true;;
				};
			}
			_iter_next_1a5bcca7c:;
			++it;
			goto _iter_begin_1a5bcca7c;
		}
		_iter_end_1a5bcca7c:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb07021_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb09342_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb0dc3c_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb0e204_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb0e5ab_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb0e9a7_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb0ed5e_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb1016c_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb106bc_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb1106e_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb11426_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb11899_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb11c51_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb12108_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb1257b_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb12aba_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb13109_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb138e0_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb13c86_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb1414e_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb1443a_CommonIdentExprModel _Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb1499b_CommonSubIdentExprModel _Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "ExprKind:" << _Src._field_ExprKind << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb14c98_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb15172_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb1555c_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb1587b_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb15c66_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb16151_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb16607_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb16aad_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb16e98_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb172b7_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb175d6_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb1cb19_BuiltinDeleteCallExprModel _Src) {
	_Stream << "BuiltinDeleteCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Key:" << _Src._field_Key;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb1ce5a_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb1d345_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb1d642_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb1d92d_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb1dc19_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb1e027_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb1e3e0_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb1e6cb_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb2018d_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1acb23eb6_ParamIns> _1acb20c1b_instance(jule::Ptr<_1acb20897_Param> _self_) {
	return jule::new_ptr<_1acb23eb6_ParamIns>(_1acb23eb6_ParamIns{._field_Decl=_self_, });;
}



inline jule::Bool _1acb20e80_IsSelf(_1acb20897_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1acb211e4_IsRef(_1acb20897_Param* _self_) {
	return ((!((*(_self_))._field_Ident.empty())) && ((*(_self_))._field_Ident[0LL] == '&'));;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb20897_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1acb22646_IsVoid(_1acb221d4_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _1acb228aa_IsMethod(_1acb221d4_Fn* _self_) {
	return ((*(_self_))._field_Owner != nullptr);;
}



inline jule::Bool _1acb22b1e_IsEntryPoint(_1acb221d4_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _1acb22d83_IsInit(_1acb221d4_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _1acb230e7_IsAnon(_1acb221d4_Fn* _self_) {
	return _2097d4124_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _1acb2335b_AnyVar(_1acb221d4_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*(_self_))._field_Result.get()._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_1acb24d85_FnIns> _1acb235c0_instanceForce(jule::Ptr<_1acb221d4_Fn> _self_) {
	jule::Ptr<_1acb24d85_FnIns> _10017_ins = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_1abcbc935_Scope>(), ._field_Refers=static__1acb27eed_new(), });;
	_10017_ins.get()._field_Params=jule::Slice<jule::Ptr<_1acb23eb6_ParamIns>>::alloc(0LL, _self_.get()._field_Params.len());
	{
		auto expr = &(_self_.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5be0012:;
		if (it != expr_end) {
			jule::Ptr<_1acb20897_Param> _10721_p = *it;
			{
				{ jule::Slice<jule::Ptr<_1acb23eb6_ParamIns>> &__jule_push_dest = _10017_ins.get()._field_Params; __jule_push_dest.push(_1acb20c1b_instance(_10721_p)); };
			}
			_iter_next_1a5be0012:;
			++it;
			goto _iter_begin_1a5be0012;
		}
		_iter_end_1a5be0012:;
	};
	if ((_10017_ins.get()._field_Decl.get()._field_Result != nullptr)) {
		_10017_ins.get()._field_Result=_10017_ins.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Kind;
	};
	return _10017_ins;;
}



inline jule::Ptr<_1acb24d85_FnIns> _1acb23834_instance(jule::Ptr<_1acb221d4_Fn> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];;
	};
	return _1acb235c0_instanceForce(_self_);;
}



inline jule::Ptr<_1acb24d85_FnIns> _1acb23b0e_appendInstance(_1acb221d4_Fn* _self_, jule::Ptr<_1acb24d85_FnIns>* _12838_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		{ jule::Slice<jule::Ptr<_1acb24d85_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12838_ins))); };
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		{ jule::Slice<jule::Ptr<_1acb24d85_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12838_ins))); };
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5be4346:;
		if (it != expr_end) {
			jule::Ptr<_1acb24d85_FnIns> _14421_ains = *it;
			{
				if (_1acb2678d_Same(_14421_ains.ptr(), (*(_12838_ins)))) {
					return _14421_ains;;
				};
			}
			_iter_next_1a5be4346:;
			++it;
			goto _iter_begin_1a5be4346;
		}
		_iter_end_1a5be4346:;
	};
	{ jule::Slice<jule::Ptr<_1acb24d85_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12838_ins))); };
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb221d4_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1acb24318_Str(_1acb23eb6_ParamIns* _self_) {
	jule::Str _16617_s = jule::Str();;
	if ((*(_self_))._field_Decl.get()._field_Mutable) {
		(_16617_s).append("mut ", 4);
	};
	if ((*(_self_))._field_Decl.get()._field_Reference) {
		(_16617_s).append("&_:", 3);
	};
	if (_1acb20e80_IsSelf((*(_self_))._field_Decl.ptr())) {
		if (_1acb211e4_IsRef((*(_self_))._field_Decl.ptr())) {
			(_16617_s).append("&", 1);
		};
		(_16617_s).append("self", 4);
		return _16617_s;;
	};
	if ((*(_self_))._field_Decl.get()._field_Variadic) {
		(_16617_s).append("...", 3);
	};
	if (((*(_self_))._field_Kind != nullptr)) {
		_16617_s+=_1acca5059_Str((*(_self_))._field_Kind.ptr());
	};
	return _16617_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb23eb6_ParamIns _Src) {
	_Stream << _1acb24318_Str(&_Src);
	return _Stream;
}



inline jule::Str _1acb251b5_Str(_1acb24d85_FnIns* _self_) {
	;
	return _1acb26a9b_GetKindStr(_self_, false);;
}



inline jule::Bool _1acb254c3_Equal(jule::Ptr<_1acb24d85_FnIns> _self_, jule::Ptr<_1acca4ba2_TypeKind> _21721_other) {
	jule::Ptr<_1acb24d85_FnIns> _21813_f = _1acca85ac_Fn(_21721_other.ptr());;
	if ((_21813_f == nullptr)) {
		return false;;
	};
	return _1acb25935_EqualFn(_self_, &(_21813_f));;
}



inline jule::Bool _1acb25935_EqualFn(jule::Ptr<_1acb24d85_FnIns> _self_, jule::Ptr<_1acb24d85_FnIns>* _22824_f) {
	if ((_self_.get()._field_Decl.get()._field_Exceptional != (*(_22824_f)).get()._field_Decl.get()._field_Exceptional)) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Unsafety != (*(_22824_f)).get()._field_Decl.get()._field_Unsafety)) {
		return false;;
	};
	if ((_1acb22646_IsVoid(_self_.get()._field_Decl.ptr()) != _1acb22646_IsVoid((*(_22824_f)).get()._field_Decl.ptr()))) {
		return false;;
	};
	jule::Fn<jule::Bool(jule::Ptr<_1acb23eb6_ParamIns>,jule::Ptr<_1acb23eb6_ParamIns>)> _23813_checkParams = jule::Fn<jule::Bool(jule::Ptr<_1acb23eb6_ParamIns>,jule::Ptr<_1acb23eb6_ParamIns>)>([=](jule::Ptr<_1acb23eb6_ParamIns> _23830_p1, jule::Ptr<_1acb23eb6_ParamIns> _23845_p2) mutable -> jule::Bool {
		if ((_23830_p1.get()._field_Decl.get()._field_Mutable != _23845_p2.get()._field_Decl.get()._field_Mutable)) {
			return false;;
		};
		if (_1acb20e80_IsSelf(_23830_p1.get()._field_Decl.ptr())) {
			if ((!(_1acb20e80_IsSelf(_23845_p2.get()._field_Decl.ptr())))) {
				return false;;
			};
			if ((_1acb211e4_IsRef(_23830_p1.get()._field_Decl.ptr()) != _1acb211e4_IsRef(_23845_p2.get()._field_Decl.ptr()))) {
				return false;;
			};
			return true;;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Reference != _23845_p2.get()._field_Decl.get()._field_Reference)) {
			return false;;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Variadic != _23845_p2.get()._field_Decl.get()._field_Variadic)) {
			return false;;
		};
		return _1acca5367_Equal(_23830_p1.get()._field_Kind, _23845_p2.get()._field_Kind);;
	});;
	if (((*(_22824_f)).get()._field_Params.len() != _self_.get()._field_Params.len())) {
		return false;;
	};
	jule::I64 _27017_i = 0LL;;
	for (; (_27017_i < _self_.get()._field_Params.len()); (_27017_i)++) {
		{
			if ((!(_23813_checkParams(_self_.get()._field_Params[_27017_i], (*(_22824_f)).get()._field_Params[_27017_i])))) {
				return false;;
			};
		}
	_iter_next_1a5c01a29:;
	}
	_iter_end_1a5c01a29:;;
	if ((!(_1acb22646_IsVoid(_self_.get()._field_Decl.ptr())))) {
		if ((!(_1acca5367_Equal(_self_.get()._field_Result, (*(_22824_f)).get()._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1acb25c43_equalTrait(jule::Ptr<_1acb24d85_FnIns> _self_, jule::Ptr<_1acb24d85_FnIns>* _28727_other) {
	if ((_self_.get()._field_Decl.get()._field_Public != (*(_28727_other)).get()._field_Decl.get()._field_Public)) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Ident != (*(_28727_other)).get()._field_Decl.get()._field_Ident)) {
		return false;;
	};
	if ((!(_1acb25935_EqualFn(_self_, _28727_other)))) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Generics.len() != (*(_28727_other)).get()._field_Decl.get()._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1acca4ba2_TypeKind>> _1acb25ea7_Types(_1acb24d85_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1a5c059ea:;
			{
				return nullptr;;
			}
		}
		else if ((_1acca905d_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1a5c05a61:;
			{
				return jule::Slice<jule::Ptr<_1acca4ba2_TypeKind>>::make({(*(_self_))._field_Result});;
			}
		}
		else {
			_case_begin_1a5c05984:;
			{
				return _1acca905d_Tup((*(_self_))._field_Result.ptr()).get()._field_Types;;
			}
		}
		_match_end_1a5c058b8:;
	};
}



inline jule::Bool _1acb2621b_IsBuiltin(_1acb24d85_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _1acb26480_IsAnon(_1acb24d85_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _1acb230e7_IsAnon((*(_self_))._field_Decl.ptr())));;
}



inline jule::Bool _1acb2678d_Same(_1acb24d85_FnIns* _self_, jule::Ptr<_1acb24d85_FnIns> _33019_f) {
	if ((((*(_self_))._field_Decl != _33019_f.get()._field_Decl) || (_33019_f.get()._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5c08d2d:;
		if (it != expr_end) {
			jule::I64 _33513_i = it - expr->begin();
			jule::Ptr<_1acca3420_InsGeneric> *_33516_g = it;
			{
				jule::Ptr<_1acca3420_InsGeneric> _33617_g2 = _33019_f.get()._field_Generics[_33513_i];;
				if ((((*(_33516_g)).get()._field_Kind.get()._field_BindIdent != _33617_g2.get()._field_Kind.get()._field_BindIdent) || (!(_1acca5367_Equal((*(_33516_g)).get()._field_Kind, _33617_g2.get()._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1a5c08d2d:;
			++it;
			_33513_i++;
			goto _iter_begin_1a5c08d2d;
		}
		_iter_end_1a5c08d2d:;
	};
	return true;;
}



inline jule::Str _1acb26a9b_GetKindStr(_1acb24d85_FnIns* _self_, jule::Bool _34725_ident) {
	jule::Str _34817_s = jule::Str();;
	if ((*(_self_))._field_Decl.get()._field_Unsafety) {
		(_34817_s).append("unsafe ", 7);
	};
	(_34817_s).append("fn", 2);
	if ((_34725_ident && ((*(_self_))._field_Decl != nullptr))) {
		_34817_s+=(jule::Str(" ", 1) + (*(_self_))._field_Decl.get()._field_Ident);
	};
	(_34817_s).append("(", 1);
	jule::I64 _36113_n = (*(_self_))._field_Params.len();;
	if ((_36113_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a5c0cda9:;
			if (it != expr_end) {
				jule::Ptr<_1acb23eb6_ParamIns> *_36320_p = it;
				{
					_34817_s+=_1acb24318_Str((*(_36320_p)).ptr());
					(_34817_s).append(",", 1);
				}
				_iter_next_1a5c0cda9:;
				++it;
				goto _iter_begin_1a5c0cda9;
			}
			_iter_end_1a5c0cda9:;
		};
		(_34817_s).mut_slice(0LL, (_34817_s.len() - 1LL));;
	};
	(_34817_s).append(")", 1);
	if ((*(_self_))._field_Decl.get()._field_Exceptional) {
		(_34817_s).append("!", 1);
	};
	if ((!(_1acb22646_IsVoid((*(_self_))._field_Decl.ptr())))) {
		(_34817_s).append(":", 1);
		_34817_s+=_1acca5059_Str((*(_self_))._field_Result.ptr());
	};
	return _34817_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb24d85_FnIns _Src) {
	_Stream << _1acb251b5_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1acb27cde_ReferenceStack> static__1acb27eed_new(void) {
	return jule::new_ptr<_1acb27cde_ReferenceStack>(_1acb27cde_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL, 10LL)});;
}



inline jule::I64 _1acb283c7_Len(_1acb27cde_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_buffer.len());;
}



inline jule::Any _1acb286d5_At(_1acb27cde_ReferenceStack* _self_, jule::I64 _6821_i) {
	return (*(_self_))._field_buffer[_6821_i];;
}



inline void _1acb2895a_Push(_1acb27cde_ReferenceStack* _self_, jule::Any _7327_ref) {
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_buffer; __jule_push_dest.push(_7327_ref); };
}



inline jule::Bool _1a63e78a1_Exist(_1acb27cde_ReferenceStack* _self_, jule::Ptr<_1acb24d85_FnIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a63e8b7c:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type7_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1a63e8b7c:;
			++it;
			goto _iter_begin_1a63e8b7c;
		}
		_iter_end_1a63e8b7c:;
	};
	return false;;
}

inline jule::Bool _1a640ac5a_Exist(_1acb27cde_ReferenceStack* _self_, jule::Ptr<_1abd1497c_Var> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a640bee2:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type8_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1a640bee2:;
			++it;
			goto _iter_begin_1a640bee2;
		}
		_iter_end_1a640bee2:;
	};
	return false;;
}

inline jule::Bool _1a6499d2c_Exist(_1acb27cde_ReferenceStack* _self_, jule::Ptr<_1acb09d37_StructIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a649b108:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type9_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1a649b108:;
			++it;
			goto _iter_begin_1a649b108;
		}
		_iter_end_1a649b108:;
	};
	return false;;
}

inline jule::Bool _1a673841c_Exist(_1acb27cde_ReferenceStack* _self_, jule::Ptr<_1acb34405_Trait> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6739671:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type10_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1a6739671:;
			++it;
			goto _iter_begin_1a6739671;
		}
		_iter_end_1a6739671:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb27cde_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb29120_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1acb2d861_symbolBuilder> _1acb2dce5_getRoot(jule::Ptr<_1acb2d861_symbolBuilder> _self_) {
	jule::Ptr<_1acb2d861_symbolBuilder> _32517_root = _self_;;
	while ((_32517_root.get()._field_owner != nullptr)) {
		{
			_32517_root=_32517_root.get()._field_owner;
		}
	_iter_next_1a5c26103:;
	}
	_iter_end_1a5c26103:;;
	return _32517_root;;
}



inline void _1acb2e18b_pushErr(_1acb2d861_symbolBuilder* _self_, jule::Ptr<_2097d15d8_Token>* _33227_token, jule::Str _33242_fmt, jule::Slice<jule::Any> _33255_args) {
	{ jule::Slice<_20943da3c_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1abce2493_compilerErr(_33227_token, true, _33242_fmt, _33255_args)); };
}



inline void _1acb2e554_pushErrText(_1acb2d861_symbolBuilder* _self_, jule::Ptr<_2097d15d8_Token>* _33631_token, jule::Str _33646_fmt, jule::Slice<jule::Any> _33659_args) {
	{ jule::Slice<_20943da3c_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1abce2493_compilerErr(_33631_token, false, _33646_fmt, _33659_args)); };
}



inline void _1acb2e873_pushSuggestion(_1acb2d861_symbolBuilder* _self_, jule::Str _34133_fmt, jule::Slice<jule::Any> _34146_args) {
	{
		_1abce3928_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _34133_fmt, _34146_args);
	};
}



inline jule::Bool _1acb2ec2a_checkCppUseDeclPath(_1acb2d861_symbolBuilder* _self_, jule::Ptr<_1acaee634_UseDecl>* _34539_decl, jule::Str _34555_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _34613_ext = _2093a7dd5_Ext(_34555_path);;
	if (((!(_2094312c1_IsValidHeaderExt(_34613_ext))) && (!(_209431568_IsValidCppExt(_34613_ext))))) {
		_1acb2e18b_pushErr(_self_, &((*(_34539_decl)).get()._field_Token), jule::Str("invalid C++ extension: @", 24), jule::Slice<jule::Any>::make({jule::Any(_34613_ext, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_2082b8830_Status> _35313_info = ({
		auto except = static__2093a9c0b_Of(_34555_path);
		(except.ok()) ? (except.result) : ({{
			_1acb2e18b_pushErr(_self_, &((*(_34539_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_34539_decl)).get()._field_LinkPath, &__jule_any_type5)}));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_2082b8830_Status>(nullptr);});
	});;
	if (_2082b8be8_IsDir(_35313_info.ptr())) {
		_1acb2e18b_pushErr(_self_, &((*(_34539_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_34539_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1abcdb39e_ImportInfo> _1acb30005_buildCppHeaderImport(_1acb2d861_symbolBuilder* _self_, jule::Ptr<_1acaee634_UseDecl>* _36544_decl) {
	jule::Str _36617_path = (*(_36544_decl)).get()._field_LinkPath;;
	if ((!(_209431018_IsStdHeaderPath((*(_36544_decl)).get()._field_LinkPath)))) {
		_36617_path=_2093a7b3d_Join(jule::Slice<jule::Str>::make({_2097d70a0_Dir((*(_36544_decl)).get()._field_Token.get()._field_File.ptr()),(*(_36544_decl)).get()._field_LinkPath}));
		jule::Bool _37021_ok = _1acb2ec2a_checkCppUseDeclPath(_self_, _36544_decl, _36617_path);;
		if ((!(_37021_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2093a817c_Abs(_36617_path);
			_36617_path = __jule_assign_result.__jule_result_arg0;
			_37021_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_37021_ok))) {
			_1acb2e18b_pushErr(_self_, &((*(_36544_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_36544_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		};
	};
	return jule::new_ptr<_1abcdb39e_ImportInfo>(_1abcdb39e_ImportInfo{._field_Token=(*(_36544_decl)).get()._field_Token, ._field_Path=_36617_path, ._field_LinkPath=(*(_36544_decl)).get()._field_LinkPath, ._field_Ident=jule::Str(), ._field_Binded=true, ._field_Std=false, ._field_Package=nullptr, });;
}



inline jule::Ptr<_1abcdb39e_ImportInfo> _1acb30313_buildStdImport(_1acb2d861_symbolBuilder* _self_, jule::Ptr<_1acaee634_UseDecl>* _39338_decl) {
	jule::Str _39417_path = (*(_39338_decl)).get()._field_LinkPath.slice(5LL);;
	_39417_path=_2093a3dae_Replace(_39417_path, jule::Str("::", 2), jule::Str("\\", 1), -1LL);
	_39417_path=_2093a7b3d_Join(jule::Slice<jule::Str>::make({_2094d2c79_PathStdlib,_39417_path}));
	jule::Bool _39720_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2093a817c_Abs(_39417_path);
		_39417_path = __jule_assign_result.__jule_result_arg0;
		_39720_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_39720_ok))) {
		_1acb2e18b_pushErr(_self_, &((*(_39338_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_39338_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_2082b8830_Status> _40413_info = ({
		auto except = static__2093a9c0b_Of(_39417_path);
		(except.ok()) ? (except.result) : ({{
			_1acb2e18b_pushErr(_self_, &((*(_39338_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_39338_decl)).get()._field_LinkPath, &__jule_any_type5)}));
			return nullptr;;
		} jule::Ptr<_2082b8830_Status>(nullptr);});
	});;
	if ((!(_2082b8be8_IsDir(_40413_info.ptr())))) {
		_1acb2e18b_pushErr(_self_, &((*(_39338_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_39338_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I64 _41413_i = (_20939e6a1_FindLast((*(_39338_decl)).get()._field_LinkPath, jule::Str("::", 2)) + 1LL);;
	jule::Str _41513_ident = (*(_39338_decl)).get()._field_LinkPath.slice(_41413_i);;
	return jule::new_ptr<_1abcdb39e_ImportInfo>(_1abcdb39e_ImportInfo{._field_Token=(*(_39338_decl)).get()._field_Token, ._field_Path=_39417_path, ._field_LinkPath=(*(_39338_decl)).get()._field_LinkPath, ._field_Ident=_41513_ident, ._field_Alias=(*(_39338_decl)).get()._field_Alias, ._field_Binded=false, ._field_Std=true, ._field_ImportAll=(*(_39338_decl)).get()._field_Full, ._field_Package=jule::new_ptr<_1abcdded9_Package>(_1abcdded9_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1abcdb39e_ImportInfo> _1acb30621_buildIdentImport(jule::Ptr<_1acb2d861_symbolBuilder> _self_, jule::Ptr<_1acaee634_UseDecl>* _43241_decl) {
	jule::Str _43313_modPath = _1abcd86ed_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1abcd7862_GetModPath(_self_.get()._field_importer);;
	if ((_43313_modPath.len() == 0LL)) {
		_1acb2e18b_pushErr(_self_.ptr(), &((*(_43241_decl)).get()._field_Token), jule::Str("no module file found in current directory or any parent directory", 65), jule::Slice<jule::Any>());
		_1acb2e873_pushSuggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _44017_path = (*(_43241_decl)).get()._field_LinkPath;;
	_44017_path=_2093a3dae_Replace(_44017_path, jule::Str("::", 2), jule::Str("\\", 1), -1LL);
	_44017_path=_2093a7b3d_Join(jule::Slice<jule::Str>::make({_43313_modPath,_44017_path}));
	jule::Bool _44420_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2093a817c_Abs(_44017_path);
		_44017_path = __jule_assign_result.__jule_result_arg0;
		_44420_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_44420_ok))) {
		_1acb2e18b_pushErr(_self_.ptr(), &((*(_43241_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_43241_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_2082b8830_Status> _45113_info = ({
		auto except = static__2093a9c0b_Of(_44017_path);
		(except.ok()) ? (except.result) : ({{
			_1acb2e18b_pushErr(_self_.ptr(), &((*(_43241_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_43241_decl)).get()._field_LinkPath, &__jule_any_type5)}));
			return nullptr;;
		} jule::Ptr<_2082b8830_Status>(nullptr);});
	});;
	if ((!(_2082b8be8_IsDir(_45113_info.ptr())))) {
		_1acb2e18b_pushErr(_self_.ptr(), &((*(_43241_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_43241_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I64 _46113_i = (_20939e6a1_FindLast((*(_43241_decl)).get()._field_LinkPath, jule::Str("::", 2)) + 1LL);;
	jule::Str _46213_ident = (*(_43241_decl)).get()._field_LinkPath.slice(_46113_i);;
	return jule::new_ptr<_1abcdb39e_ImportInfo>(_1abcdb39e_ImportInfo{._field_Token=(*(_43241_decl)).get()._field_Token, ._field_Path=_44017_path, ._field_LinkPath=(*(_43241_decl)).get()._field_LinkPath, ._field_Ident=_46213_ident, ._field_Alias=(*(_43241_decl)).get()._field_Alias, ._field_Binded=false, ._field_Std=false, ._field_ImportAll=(*(_43241_decl)).get()._field_Full, ._field_Package=jule::new_ptr<_1abcdded9_Package>(_1abcdded9_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1abcdb39e_ImportInfo> _1acb3092e_buildImport(jule::Ptr<_1acb2d861_symbolBuilder> _self_, jule::Ptr<_1acaee634_UseDecl>* _47936_decl) {
	{
		
		if ((*(_47936_decl)).get()._field_Binded) {
			_case_begin_1a5c3c933:;
			{
				return _1acb30005_buildCppHeaderImport(_self_.ptr(), _47936_decl);;
			}
		}
		else if ((*(_47936_decl)).get()._field_Std) {
			_case_begin_1a5c3cb75:;
			{
				return _1acb30313_buildStdImport(_self_.ptr(), _47936_decl);;
			}
		}
		else {
			_case_begin_1a5c3c23a:;
			{
				return _1acb30621_buildIdentImport(_self_, _47936_decl);;
			}
		}
		_match_end_1a5c3c180:;
	};
}



inline jule::Bool _1acb30c3c_checkDuplicateUseDecl(_1acb2d861_symbolBuilder* _self_, jule::Ptr<_1abcdb39e_ImportInfo>* _49041_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1abcdb39e_ImportInfo> _49213_lpkg = _1abd59708_SelectPackage((*(_self_))._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_1abcdb39e_ImportInfo>)>([=](jule::Ptr<_1abcdb39e_ImportInfo> _49248_spkg) mutable -> jule::Bool {
		return ((*(_49041_pkg)).get()._field_Path == _49248_spkg.get()._field_Path);;
	}));;
	if ((_49213_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_1acb2e18b_pushErr(_self_, &((*(_49041_pkg)).get()._field_Token), jule::Str("use declaration duplication: @ is already used above", 52), jule::Slice<jule::Any>::make({jule::Any((*(_49041_pkg)).get()._field_LinkPath, &__jule_any_type5)}));
	_1acb2e873_pushSuggestion(_self_, jule::Str("remove this use declaration, already used, it is safe", 53), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline void _1acb3105b_implImportSelections(_1acb2d861_symbolBuilder* _self_, jule::Ptr<_1abcdb39e_ImportInfo>* _50444_imp, jule::Ptr<_1acaee634_UseDecl>* _50467_decl) {
	(*(_50444_imp)).get()._field_Selected=(*(_50467_decl)).get()._field_Selected;
	{
		auto expr = &((*(_50444_imp)).get()._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5c41393:;
		if (it != expr_end) {
			jule::Ptr<_2097d15d8_Token> _50616_item = *it;
			{
				{
					auto expr = &((*(_50444_imp)).get()._field_Selected);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a5c41abe:;
					if (it != expr_end) {
						jule::Ptr<_2097d15d8_Token> _50720_citem = *it;
						{
							if ((_50616_item == _50720_citem)) {
								goto _iter_end_1a5c41abe;
							} else if ((_50616_item.get()._field_Kind == _50720_citem.get()._field_Kind)) {
								_1acb2e18b_pushErr(_self_, &(_50616_item), jule::Str("duplicated selection: @ is already selected", 43), jule::Slice<jule::Any>::make({jule::Any(_50616_item.get()._field_Kind, &__jule_any_type5)}));
								_1acb2e873_pushSuggestion(_self_, jule::Str("remove this use selection, already selected, it is safe", 55), jule::Slice<jule::Any>());
								goto _iter_end_1a5c41abe;
							};
						}
						_iter_next_1a5c41abe:;
						++it;
						goto _iter_begin_1a5c41abe;
					}
					_iter_end_1a5c41abe:;
				};
			}
			_iter_next_1a5c41393:;
			++it;
			goto _iter_begin_1a5c41393;
		}
		_iter_end_1a5c41393:;
	};
}



inline jule::Str _1acb31369_getAsLinkPath(jule::Ptr<_1acb2d861_symbolBuilder> _self_, jule::Str _51937_path) {
	if (_20939cdb9_HasPrefix(_51937_path, _2094d2c79_PathStdlib)) {
		(_51937_path).mut_slice(_2094d2c79_PathStdlib.len());;
		return (jule::Str("std", 3) + _2093a3dae_Replace(_51937_path, jule::Str("\\", 1), jule::Str("::", 2), -1LL));;
	};
	jule::Str _52514_root;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2093a817c_Abs(_1abcd86ed_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1abcd7862_GetModPath(_self_.get()._field_importer));
		_52514_root = __jule_assign_result.__jule_result_arg0;
	});
	(_51937_path).mut_slice(_52514_root.len());;
	if ((_51937_path[0LL] == 92LLU)) {
		(_51937_path).mut_slice(1LL);;
	};
	return _2093a3dae_Replace(_51937_path, jule::Str("\\", 1), jule::Str("::", 2), -1LL);;
}



inline void _1acb31732_pushCycleError(jule::Ptr<_1acb2d861_symbolBuilder> _self_, jule::Ptr<_1acb2d861_symbolBuilder>* _53335_sb, jule::Str _53355_path, jule::Str* _53371_message) {
	;
	jule::Str _53513_refersTo = _20943de7c_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_1acb31369_getAsLinkPath(_self_, _2097d70a0_Dir((*(_53335_sb)).get()._field_table.get()._field_File.ptr())), &__jule_any_type5),jule::Any(_1acb31369_getAsLinkPath(_self_, _53355_path), &__jule_any_type5)}));;
	((*(_53371_message))).buffer.insert(0, (((_20939c649_Repeat(jule::Str(" ", 1), 7LL) + _53513_refersTo) + jule::Str("\n", 1))));;
}



inline void _1acb31aea_pushCrossCycleError(jule::Ptr<_1acb2d861_symbolBuilder> _self_, jule::Ptr<_1acb2d861_symbolBuilder>* _54240_target, jule::Ptr<_1abcdb39e_ImportInfo>* _54265_imp, jule::Ptr<_2097d15d8_Token>* _54284_errorToken) {
	jule::Str _54317_message = jule::Str();;
	_1acb31732_pushCycleError(_self_, &(_self_), (*(_54265_imp)).get()._field_Path, &(_54317_message));
	jule::Ptr<_1acb2d861_symbolBuilder> _54717_owner = _self_.get()._field_owner;;
	jule::Ptr<_1acb2d861_symbolBuilder> _54817_old = _self_;;
	while ((_54717_owner.get()._field_owner != nullptr)) {
		{
			_1acb31732_pushCycleError(_self_, &(_54817_old.get()._field_owner), _2097d70a0_Dir(_54817_old.get()._field_table.get()._field_File.ptr()), &(_54317_message));
			if ((_54717_owner.get()._field_owner == (*(_54240_target)))) {
				_1acb31732_pushCycleError(_self_, _54240_target, _2097d70a0_Dir(_54717_owner.get()._field_table.get()._field_File.ptr()), &(_54317_message));
				goto _iter_end_1a5c48c19;
			};
			_54817_old=_54717_owner;
			_54717_owner=_54717_owner.get()._field_owner;
		}
	_iter_next_1a5c48c19:;
	}
	_iter_end_1a5c48c19:;;
	_1acb2e18b_pushErr(_self_.ptr(), _54284_errorToken, jule::Str("illegal cross cycle in use declarations;\n@", 42), jule::Slice<jule::Any>::make({jule::Any(_54317_message, &__jule_any_type5)}));
}



inline jule::Bool _1acb31ea2_checkImportCycles(jule::Ptr<_1acb2d861_symbolBuilder> _self_, jule::Ptr<_1abcdb39e_ImportInfo> _56537_imp, jule::Ptr<_1acaee634_UseDecl>* _56556_decl) {
	if ((_56537_imp.get()._field_Path == _2097d70a0_Dir(_self_.get()._field_table.get()._field_File.ptr()))) {
		_1acb2e18b_pushErr(_self_.ptr(), &((*(_56556_decl)).get()._field_Token), jule::Str("illegal cycle in use declaration, package @ refers to itself", 60), jule::Slice<jule::Any>::make({jule::Any(_1acb31369_getAsLinkPath(_self_, _56537_imp.get()._field_Path), &__jule_any_type5)}));
		return false;;
	};
	if ((_self_.get()._field_owner == nullptr)) {
		return true;;
	};
	if ((_2097d70a0_Dir(_self_.get()._field_owner.get()._field_table.get()._field_File.ptr()) == _56537_imp.get()._field_Path)) {
		_1acb31aea_pushCrossCycleError(_self_, &(_self_.get()._field_owner), &(_56537_imp), &((*(_56556_decl)).get()._field_Token));
		return false;;
	};
	jule::Ptr<_1acb2d861_symbolBuilder> _58017_owner = _self_.get()._field_owner;;
	_julec_label_iter:;
	if ((_2097d70a0_Dir(_58017_owner.get()._field_table.get()._field_File.ptr()) == _56537_imp.get()._field_Path)) {
		_1acb31aea_pushCrossCycleError(_self_, &(_58017_owner), &(_56537_imp), &((*(_56556_decl)).get()._field_Token));
		return false;;
	};
	if ((_58017_owner.get()._field_owner != nullptr)) {
		_58017_owner=_58017_owner.get()._field_owner;
		goto _julec_label_iter;
	};
	return true;;
}



inline void _1acb3238c_checkPackageAccessibility(_1acb2d861_symbolBuilder* _self_, jule::Ptr<_1acaee634_UseDecl>* _60145_decl, jule::Str* _60162_mod, jule::Str* _60173_path) {
	if (((_1abcd86ed_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1abcd7862_GetModPath((*(_self_))._field_importer) != (*(_60162_mod))) && _2093a2b16_Contains((*(_60173_path)), jule::Str("internal", 8)))) {
		_1acb2e18b_pushErr(_self_, &((*(_60145_decl)).get()._field_Token), jule::Str("you cannot access to internal packages", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1acb32755_importPackage(jule::Ptr<_1acb2d861_symbolBuilder> _self_, jule::Ptr<_1abcdb39e_ImportInfo>* _60738_imp, jule::Ptr<_1acaee634_UseDecl>* _60761_decl) {
	jule::Bool __jule_func_result = false;
	if ((*(_60738_imp)).get()._field_Binded) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1abcdb39e_ImportInfo> _61217_port = _1abcd86ed_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1abcd7e7d_GetImport(_self_.get()._field_importer, (*(_60738_imp)).get()._field_Path);;
	if ((_61217_port != nullptr)) {
		(*(_60738_imp)).get()._field_Package=_61217_port.get()._field_Package;
		(*(_60738_imp)).get()._field_Duplicate=true;
		jule::Str _61717_oldMod = _1abcd86ed_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1abcd7862_GetModPath(_self_.get()._field_importer);;
		_1abcd86ed_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1abcd7620_SetModPath(_self_.get()._field_importer, _1abcd86ed_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1abcd7b70_ModById(_self_.get()._field_importer, (*(_60738_imp)).get()._field_ModId));
		_1acb3238c_checkPackageAccessibility(_self_.ptr(), _60761_decl, &(_61717_oldMod), &(_61217_port.get()._field_Path));
		_1abcd86ed_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1abcd7620_SetModPath(_self_.get()._field_importer, _61717_oldMod);
	} else {
		if ((!(_1acb31ea2_checkImportCycles(_self_, (*(_60738_imp)), _60761_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _62617_oldMod = _1abcd86ed_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1abcd7862_GetModPath(_self_.get()._field_importer);;
		__JULE_DEFER({
			_1abcd86ed_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1abcd7620_SetModPath(_self_.get()._field_importer, _62617_oldMod);
		});;
		if ((*(_60738_imp)).get()._field_Std) {
			_1abcd86ed_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1abcd7620_SetModPath(_self_.get()._field_importer, _2094d2c79_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1acaa352d_Ast>> _63122_asts;;
		jule::Slice<_20943da3c_Log> _63132_errors;;
		({
			__jule_tuple_sx_1acaa352d_Ast__jule_tuple_s_20943da3c_Log __jule_assign_result = _1abcd86ed_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1abcd8335_ImportPackage(_self_.get()._field_importer, (*(_60738_imp)).get()._field_Path, (!((*(_60738_imp)).get()._field_Std)));
			_63122_asts = __jule_assign_result.__jule_result_arg0;
			_63132_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_63132_errors.len() > 0LL)) {
			(_self_.get()._field_errors).append(_63132_errors);;
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1acb3238c_checkPackageAccessibility(_self_.ptr(), _60761_decl, &(_62617_oldMod), &((*(_60738_imp)).get()._field_Path));
		{
			auto expr = &(_63122_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a5c57189:;
			if (it != expr_end) {
				jule::Ptr<_1acaa352d_Ast> _63925_ast = *it;
				{
					jule::Ptr<_1abd59241_SymbolTable> _64025_table = nullptr;;
					({
						__jule_tuple_x_1abd59241_SymbolTable__jule_tuple_s_20943da3c_Log __jule_assign_result = _1accc3be3_buildSymbols(&(_63925_ast), &(_self_.get()._field_importer), _self_);
						_64025_table = __jule_assign_result.__jule_result_arg0;
						_63132_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_63132_errors.len() > 0LL)) {
						(_self_.get()._field_errors).append(_63132_errors);;
						__jule_func_result = false;
						return __jule_func_result;;
					};
					{ jule::Slice<jule::Ptr<_1abd59241_SymbolTable>> &__jule_push_dest = (*(_60738_imp)).get()._field_Package.get()._field_Files; __jule_push_dest.push(_64025_table); };
				}
				_iter_next_1a5c57189:;
				++it;
				goto _iter_begin_1a5c57189;
			}
			_iter_end_1a5c57189:;
		};
	};
	_1acb3105b_implImportSelections(_self_.ptr(), _60738_imp, _60761_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1abcdb39e_ImportInfo> _1acb32a63_importUseDecl(jule::Ptr<_1acb2d861_symbolBuilder> _self_, jule::Ptr<_1acaee634_UseDecl>* _65438_decl) {
	jule::Ptr<_1abcdb39e_ImportInfo> _65517_imp = _1acb3092e_buildImport(_self_, _65438_decl);;
	if ((_65517_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _66117_ok = _1acb30c3c_checkDuplicateUseDecl(_self_.ptr(), &(_65517_imp));;
	if ((!(_66117_ok))) {
		return nullptr;;
	};
	_66117_ok=_1acb32755_importPackage(_self_, &(_65517_imp), _65438_decl);
	{ jule::Slice<jule::Ptr<_1abcdb39e_ImportInfo>> &__jule_push_dest = _self_.get()._field_table.get()._field_Imports; __jule_push_dest.push(_65517_imp); };
	if (_66117_ok) {
		_1abcd86ed_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1abcd85aa_Imported(_self_.get()._field_importer, _65517_imp);
		return _65517_imp;;
	};
	return nullptr;;
}



inline void _1acb32c3e_importUseDecls(jule::Ptr<_1acb2d861_symbolBuilder> _self_) {
	{
		auto expr = &(_self_.get()._field_ast.get()._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5c5b963:;
		if (it != expr_end) {
			jule::Ptr<_1acaee634_UseDecl> _67621_decl = *it;
			{
				_1acb32a63_importUseDecl(_self_, &(_67621_decl));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					goto _iter_end_1a5c5b963;
				};
			}
			_iter_next_1a5c5b963:;
			++it;
			goto _iter_begin_1a5c5b963;
		}
		_iter_end_1a5c5b963:;
	};
}



inline void _1acb32eb4_appendNode(_1acb2d861_symbolBuilder* _self_, _1acaa43b9_Node* _68534_node) {
	{
		auto &_match_expr{ (*(_68534_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1a5c5cb0c:;
			{
				{ jule::Slice<jule::Ptr<_1abcb7831_Impl>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Impls; __jule_push_dest.push(_1acb2d311_buildImpl((*(_68534_node))._field_Data.cast_ptr<_1acb02d52_Impl>(&__jule_any_type11))); };
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1a5c5cd82:;
			{
				jule::Ptr<_1acca3e59_TypeAlias> _69021_ta = _1acb29a05_buildTypeAlias((*(_68534_node))._field_Data.cast_ptr<_1acaed248_TypeAliasDecl>(&__jule_any_type12));;
				{ jule::Slice<jule::Ptr<_1acca3e59_TypeAlias>> &__jule_push_dest = (*(_self_))._field_table.get()._field_TypeAliases; __jule_push_dest.push(_69021_ta); };
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1a5c5cde8:;
			{
				jule::Ptr<_1acb07021_Struct> _69321_srct = _1acb2a363_buildStruct((*(_68534_node))._field_Data.cast_ptr<_1acb02071_StructDecl>(&__jule_any_type13));;
				{ jule::Slice<jule::Ptr<_1acb07021_Struct>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Structs; __jule_push_dest.push(_69321_srct); };
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1a5c5ce5e:;
			{
				jule::Ptr<_1acb221d4_Fn> _69621_f = _1acb2aebd_buildFn((*(_68534_node))._field_Data.cast_ptr<_1acae8908_FnDecl>(&__jule_any_type14));;
				{ jule::Slice<jule::Ptr<_1acb221d4_Fn>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Funcs; __jule_push_dest.push(_69621_f); };
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1a5c5cec5:;
			{
				jule::Ptr<_1acb34405_Trait> _69921_t = _1acb2b7a4_buildTrait((*(_68534_node))._field_Data.cast_ptr<_1acb02747_TraitDecl>(&__jule_any_type15));;
				{ jule::Slice<jule::Ptr<_1acb34405_Trait>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Traits; __jule_push_dest.push(_69921_t); };
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1a5c5d734:;
			{
				jule::Ptr<_1abd1497c_Var> _70221_v = _1acb2ccc2_buildVar((*(_68534_node))._field_Data.cast_ptr<_1acae98d7_VarDecl>(&__jule_any_type16));;
				{ jule::Slice<jule::Ptr<_1abd1497c_Var>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Vars; __jule_push_dest.push(_70221_v); };
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1a5c5d79a:;
			{
				jule::Ptr<_1acb36b88_Enum> _70521_e = _1acb2c244_buildEnum((*(_68534_node))._field_Data.cast_ptr<_1acb005d0_EnumDecl>(&__jule_any_type17));;
				{ jule::Slice<jule::Ptr<_1acb36b88_Enum>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Enums; __jule_push_dest.push(_70521_e); };
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1a5c5d811:;
			{
				jule::Ptr<_1acb38283_TypeEnum> _70821_e = _1acb2ca2a_buildTypeEnum((*(_68534_node))._field_Data.cast_ptr<_1acb014b0_TypeEnumDecl>(&__jule_any_type18));;
				{ jule::Slice<jule::Ptr<_1acb38283_TypeEnum>> &__jule_push_dest = (*(_self_))._field_table.get()._field_TypeEnums; __jule_push_dest.push(_70821_e); };
			}
		}
		else {
			_case_begin_1a5c5cd1b:;
			{
				_1acb2e18b_pushErr(_self_, &((*(_68534_node))._field_Token), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a5c5ccb6:;
	};
}



inline void _1acb33190_appendNodes(_1acb2d861_symbolBuilder* _self_) {
	{
		auto expr = &((*(_self_))._field_ast.get()._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5c65b7b:;
		if (it != expr_end) {
			_1acaa43b9_Node _71621_node = *it;
			{
				_1acb32eb4_appendNode(_self_, &(_71621_node));
			}
			_iter_next_1a5c65b7b:;
			++it;
			goto _iter_begin_1a5c65b7b;
		}
		_iter_end_1a5c65b7b:;
	};
}



inline void _1acb33415_pushDirectivePass(_1acb2d861_symbolBuilder* _self_, jule::Ptr<_1acaa47b5_Directive>* _72141_d) {
	if (((*(_72141_d)).get()._field_Args.len() == 0LL)) {
		_1acb2e18b_pushErr(_self_, &((*(_72141_d)).get()._field_Tag), jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_72141_d)).get()._field_Args.len() > 1LL)) {
		jule::Ptr<_2097d15d8_Token> _72617_arg = (*(_72141_d)).get()._field_Args[1LL];;
		_1acb2e18b_pushErr(_self_, &(_72617_arg), jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*(_72141_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
	};
	jule::Ptr<_2097d15d8_Token> _73013_arg = (*(_72141_d)).get()._field_Args[0LL];;
	if ((_73013_arg.get()._field_Id != static_cast<jule::U64>(5LLU))) {
		_1acb2e18b_pushErr(_self_, &(_73013_arg), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if ((_73013_arg.get()._field_Kind[0LL] != '\"')) {
		_1acb2e18b_pushErr(_self_, &(_73013_arg), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<_1acb29120_Pass> &__jule_push_dest = (*(_self_))._field_table.get()._field_Passes; __jule_push_dest.push(_1acb29120_Pass{._field_Token=(*(_72141_d)).get()._field_Tag, ._field_Text=_73013_arg.get()._field_Kind.slice(1LL, (_73013_arg.get()._field_Kind.len() - 1LL))}); };
}



inline void _1acb335e1_appendTopDirectives(_1acb2d861_symbolBuilder* _self_) {
	{
		auto expr = &((*(_self_))._field_ast.get()._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5c6a82e:;
		if (it != expr_end) {
			jule::Ptr<_1acaa47b5_Directive> _74821_d = *it;
			{
				{
					auto &_match_expr{ _74821_d.get()._field_Tag.get()._field_Kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_1a5c6c0d3:;
						{
							_1acb33415_pushDirectivePass(_self_, &(_74821_d));
						}
					}
					_match_end_1a5c6c05b:;
				};
			}
			_iter_next_1a5c6a82e:;
			++it;
			goto _iter_begin_1a5c6a82e;
		}
		_iter_end_1a5c6a82e:;
	};
}



inline void _1acb337bc_build(jule::Ptr<_1acb2d861_symbolBuilder> _self_) {
	_self_.get()._field_table=jule::new_ptr<_1abd59241_SymbolTable>(_1abd59241_SymbolTable{._field_File=_self_.get()._field_ast.get()._field_File, });
	_1acb335e1_appendTopDirectives(_self_.ptr());
	_1acb32c3e_importUseDecls(_self_);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	_1acb33190_appendNodes(_self_.ptr());
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1acb2d861_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1acb347ac_Str(_1acb34405_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1acb34aba_Equal(jule::Ptr<_1acb34405_Trait> _self_, jule::Ptr<_1acca4ba2_TypeKind> _2621_other) {
	jule::Ptr<_1acb34405_Trait> _2713_trt = _1acca8a85_Trait(_2621_other.ptr());;
	return (_self_ == _2713_trt);;
}



inline jule::Bool _1acb34e94_IsBuiltin(_1acb34405_Trait* _self_) {
	return ((*(_self_))._field_Token == nullptr);;
}



inline jule::Ptr<_1acb221d4_Fn> _1acb352a2_FindMethod(_1acb34405_Trait* _self_, jule::Str _4029_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5c70966:;
		if (it != expr_end) {
			jule::Ptr<_1acb221d4_Fn> _4121_f = *it;
			{
				if ((_4121_f.get()._field_Ident == _4029_ident)) {
					return _4121_f;;
				};
			}
			_iter_next_1a5c70966:;
			++it;
			goto _iter_begin_1a5c70966;
		}
		_iter_end_1a5c70966:;
	};
	return _1acb358bd_findMethodInherit(_self_, &(_4029_ident));;
}



inline jule::Bool _1acb355b0_inherits(jule::Ptr<_1acb34405_Trait> _self_, jule::Ptr<_1acb34405_Trait>* _4929_t) {
	if ((_self_ == (*(_4929_t)))) {
		return true;;
	};
	{
		auto expr = &(_self_.get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5c71ba9:;
		if (it != expr_end) {
			jule::Ptr<_1accaba55_TypeSymbol> _5321_i = *it;
			{
				if (_1acb355b0_inherits(_1acca8a85_Trait(_5321_i.get()._field_Kind.ptr()), _4929_t)) {
					return true;;
				};
			}
			_iter_next_1a5c71ba9:;
			++it;
			goto _iter_begin_1a5c71ba9;
		}
		_iter_end_1a5c71ba9:;
	};
	return false;;
}



inline jule::Ptr<_1acb221d4_Fn> _1acb358bd_findMethodInherit(_1acb34405_Trait* _self_, jule::Str* _6137_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5c7311c:;
		if (it != expr_end) {
			jule::Ptr<_1accaba55_TypeSymbol> _6221_i = *it;
			{
				if ((_6221_i.get()._field_Kind == nullptr)) {
					goto _iter_next_1a5c7311c;
				};
				jule::Ptr<_1acb34405_Trait> _6621_t = _1acca8a85_Trait(_6221_i.get()._field_Kind.ptr());;
				if ((_6621_t != nullptr)) {
					jule::Ptr<_1acb221d4_Fn> _6825_f2 = _1acb352a2_FindMethod(_6621_t.ptr(), (*(_6137_ident)));;
					if ((_6825_f2 != nullptr)) {
						return _6825_f2;;
					};
				};
			}
			_iter_next_1a5c7311c:;
			++it;
			goto _iter_begin_1a5c7311c;
		}
		_iter_end_1a5c7311c:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb34405_Trait _Src) {
	_Stream << _1acb347ac_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1acb36539_AutoExpr(_1acb36193_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb36193_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1acb36eeb_Str(_1acb36b88_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1acb37309_Equal(jule::Ptr<_1acb36b88_Enum> _self_, jule::Ptr<_1acca4ba2_TypeKind> _3821_other) {
	jule::Ptr<_1acb36b88_Enum> _3913_enm = _1acca7b0b_Enum(_3821_other.ptr());;
	return (_self_ == _3913_enm);;
}



inline jule::Ptr<_1acb36193_EnumItem> _1acb37705_FindItem(_1acb36b88_Enum* _self_, jule::Str _4727_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5c76a7c:;
		if (it != expr_end) {
			jule::Ptr<_1acb36193_EnumItem> _4821_item = *it;
			{
				if ((_4821_item.get()._field_Ident == _4727_ident)) {
					return _4821_item;;
				};
			}
			_iter_next_1a5c76a7c:;
			++it;
			goto _iter_begin_1a5c76a7c;
		}
		_iter_end_1a5c76a7c:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb36b88_Enum _Src) {
	_Stream << _1acb36eeb_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb37c00_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1acb385b3_Str(_1acb38283_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1acb388c1_Equal(jule::Ptr<_1acb38283_TypeEnum> _self_, jule::Ptr<_1acca4ba2_TypeKind> _8021_other) {
	jule::Ptr<_1acb38283_TypeEnum> _8113_tenm = _1acca7d70_TypeEnum(_8021_other.ptr());;
	return (_self_ == _8113_tenm);;
}



inline jule::Ptr<_1acb37c00_TypeEnumItem> _1acb38cbc_FindItem(_1acb38283_TypeEnum* _self_, jule::Str _8927_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5c78b4a:;
		if (it != expr_end) {
			jule::Ptr<_1acb37c00_TypeEnumItem> _9021_item = *it;
			{
				if ((_9021_item.get()._field_Ident == _8927_ident)) {
					return _9021_item;;
				};
			}
			_iter_next_1a5c78b4a:;
			++it;
			goto _iter_begin_1a5c78b4a;
		}
		_iter_end_1a5c78b4a:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb38283_TypeEnum _Src) {
	_Stream << _1acb385b3_Str(&_Src);
	return _Stream;
}



inline jule::Str _1acb3a791_Str(_1acb3a3d9_comptimeRange* _self_) {
	return jule::Str("comptimeRange", 13);;
}



inline jule::Bool _1acb3aa9e_Equal(jule::Ptr<_1acb3a3d9_comptimeRange> _self_, jule::Ptr<_1acca4ba2_TypeKind> _2521_other) {
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb3a3d9_comptimeRange _Src) {
	_Stream << _1acb3a791_Str(&_Src);
	return _Stream;
}



inline jule::Str _1acb3b242_Str(_1acb3adce_comptimeStructField* _self_) {
	return jule::Str("comptimeStructField", 19);;
}



inline jule::Bool _1acb3b550_Equal(jule::Ptr<_1acb3adce_comptimeStructField> _self_, jule::Ptr<_1acca4ba2_TypeKind> _3521_other) {
	return false;;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb3ba28__Name(jule::Ptr<_1acb3adce_comptimeStructField> _self_, jule::Ptr<_1acc78e73_Eval>* _3926_e, jule::Ptr<_1acae036c_FnCallExpr>* _3941_fc) {
	if (((*(_3941_fc)).get()._field_Args.len() > 0LL)) {
		_1acc79490_pushErr((*(_3926_e)).ptr(), (*(_3941_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ddeb4b1c_Const> _4417_constant = static__1ddeb5832_NewStr(_self_.get()._field_field.get()._field_Decl.get()._field_Ident);;
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd690da_primStr, ._field_Model=jule::Any(_4417_constant, &__jule_any_type19), ._field_Constant=_4417_constant});;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb3bdd0__Type(jule::Ptr<_1acb3adce_comptimeStructField> _self_, jule::Ptr<_1acc78e73_Eval>* _5230_e, jule::Ptr<_1acae036c_FnCallExpr>* _5245_fc) {
	if (((*(_5245_fc)).get()._field_Args.len() > 0LL)) {
		_1acc79490_pushErr((*(_5230_e)).ptr(), (*(_5245_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1acb557cd_buildComptimeTypeInfoData(&((*(_5230_e)).get()._field_s), &(_self_.get()._field_field.get()._field_Kind));;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb3c287__Public(jule::Ptr<_1acb3adce_comptimeStructField> _self_, jule::Ptr<_1acc78e73_Eval>* _6032_e, jule::Ptr<_1acae036c_FnCallExpr>* _6047_fc) {
	if (((*(_6047_fc)).get()._field_Args.len() > 0LL)) {
		_1acc79490_pushErr((*(_6032_e)).ptr(), (*(_6047_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Public", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ddeb4b1c_Const> _6517_constant = static__1ddeb558a_NewBool(_self_.get()._field_field.get()._field_Decl.get()._field_Public);;
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd693e8_primBool, ._field_Model=jule::Any(_6517_constant, &__jule_any_type19), ._field_Constant=_6517_constant});;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb3c595_subIdent(jule::Ptr<_1acb3adce_comptimeStructField> _self_, jule::Str _7328_ident) {
	{
		auto &_match_expr{ _7328_ident };
		
		if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_1a5c889d4:;
			{
				jule::Ptr<_1acb24d85_FnIns> _7621_method = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>([=](jule::Ptr<_1acc78e73_Eval>* _7733_e, jule::Ptr<_1acae036c_FnCallExpr>* _7748_fc, jule::Ptr<_1abd5dc4b_Data>* ) mutable -> jule::Ptr<_1abd5dc4b_Data> {
					return _1acb3ba28__Name(_self_, _7733_e, _7748_fc);;
				}), });;
				return _1acb5527d_buildAsComptimeMethodData(&(_7621_method));;
			}
		}
		else if (_match_expr == jule::Str("Public", 6)) {
			_case_begin_1a5c88a4a:;
			{
				jule::Ptr<_1acb24d85_FnIns> _8321_method = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>([=](jule::Ptr<_1acc78e73_Eval>* _8433_e, jule::Ptr<_1acae036c_FnCallExpr>* _8448_fc, jule::Ptr<_1abd5dc4b_Data>* ) mutable -> jule::Ptr<_1abd5dc4b_Data> {
					return _1acb3c287__Public(_self_, _8433_e, _8448_fc);;
				}), });;
				return _1acb5527d_buildAsComptimeMethodData(&(_8321_method));;
			}
		}
		else if (_match_expr == jule::Str("Type", 4)) {
			_case_begin_1a5c88819:;
			{
				jule::Ptr<_1acb24d85_FnIns> _9021_method = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>([=](jule::Ptr<_1acc78e73_Eval>* _9133_e, jule::Ptr<_1acae036c_FnCallExpr>* _9148_fc, jule::Ptr<_1abd5dc4b_Data>* ) mutable -> jule::Ptr<_1abd5dc4b_Data> {
					return _1acb3bdd0__Type(_self_, _9133_e, _9148_fc);;
				}), });;
				return _1acb5527d_buildAsComptimeMethodData(&(_9021_method));;
			}
		}
		else {
			_case_begin_1a5c883c9:;
			{
				return nullptr;;
			}
		}
		_match_end_1a5c88297:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1acb3adce_comptimeStructField _Src) {
	_Stream << _1acb3b242_Str(&_Src);
	return _Stream;
}



inline jule::Str _1acb3cc7c_Str(_1acb3c908_comptimeStructFields* _self_) {
	return jule::Str("comptimeStructFields", 20);;
}



inline jule::Bool _1acb3d08a_Equal(jule::Ptr<_1acb3c908_comptimeStructFields> _self_, jule::Ptr<_1acca4ba2_TypeKind> _10921_other) {
	return false;;
}



inline void _1acb3d4b9_ready(_1acb3c908_comptimeStructFields* _self_, jule::Ptr<_1abd1497c_Var>* _11329_keyA, jule::Ptr<_1abd1497c_Var>* _11346_keyB) {
	if (((*(_11329_keyA)) != nullptr)) {
		(*(_11329_keyA)).get()._field_Constant=true;
		(*(_11329_keyA)).get()._field_Value=jule::new_ptr<_1abd5ecc4_Value>(_1abd5ecc4_Value{._field_Data=jule::new_ptr<_1abd5dc4b_Data>()});
		(*(_11329_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_11329_keyA)).get()._field_Kind=_1acd6c033_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_11346_keyB)) != nullptr)) {
		(*(_11346_keyB)).get()._field_Constant=true;
		(*(_11346_keyB)).get()._field_Value=jule::new_ptr<_1abd5ecc4_Value>(_1abd5ecc4_Value{._field_Data=jule::new_ptr<_1abd5dc4b_Data>()});
		(*(_11346_keyB)).get()._field_Kind=jule::new_ptr<_1accaba55_TypeSymbol>(_1accaba55_TypeSymbol{._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(jule::new_ptr<_1acb3adce_comptimeStructField>(), 6)})});
	};
}



inline void _1acb3d882_step(_1acb3c908_comptimeStructFields* _self_, jule::I64 _13523_i, jule::Ptr<_1abd1497c_Var>* _13536_keyA, jule::Ptr<_1abd1497c_Var>* _13553_keyB) {
	if (((*(_13536_keyA)) != nullptr)) {
		(*(_13536_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1ddeb504b_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_13523_i)));
		(*(_13536_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_13536_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_13553_keyB)) != nullptr)) {
		_1acca979a_comptimeStructField((*(_13553_keyB)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_field=(*(_self_))._field_fields[_13523_i];
	};
}



inline jule::I64 _1acb3dae6_len(_1acb3c908_comptimeStructFields* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb3c908_comptimeStructFields _Src) {
	_Stream << _1acb3cc7c_Str(&_Src);
	return _Stream;
}



inline jule::Str _1acb3e245_Str(_1acb3ddd2_comptimeStatic* _self_) {
	return jule::Str("comptimeStatic", 14);;
}



inline jule::Bool _1acb3e553_Equal(jule::Ptr<_1acb3ddd2_comptimeStatic> _self_, jule::Ptr<_1acca4ba2_TypeKind> _15921_other) {
	return false;;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb3ea2b__Name(jule::Ptr<_1acb3ddd2_comptimeStatic> _self_, jule::Ptr<_1acc78e73_Eval>* _16326_e, jule::Ptr<_1acae036c_FnCallExpr>* _16341_fc) {
	if (((*(_16341_fc)).get()._field_Args.len() > 0LL)) {
		_1acc79490_pushErr((*(_16326_e)).ptr(), (*(_16341_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ddeb4b1c_Const> _16817_constant = static__1ddeb5832_NewStr(_self_.get()._field_field.get()._field_Ident);;
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd690da_primStr, ._field_Model=jule::Any(_16817_constant, &__jule_any_type19), ._field_Constant=_16817_constant});;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb3edd3__Type(jule::Ptr<_1acb3ddd2_comptimeStatic> _self_, jule::Ptr<_1acc78e73_Eval>* _17630_e, jule::Ptr<_1acae036c_FnCallExpr>* _17645_fc) {
	if (((*(_17645_fc)).get()._field_Args.len() > 0LL)) {
		_1acc79490_pushErr((*(_17630_e)).ptr(), (*(_17645_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1acb557cd_buildComptimeTypeInfoData(&((*(_17630_e)).get()._field_s), &(_self_.get()._field_field.get()._field_Kind.get()._field_Kind));;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb4028a__Public(jule::Ptr<_1acb3ddd2_comptimeStatic> _self_, jule::Ptr<_1acc78e73_Eval>* _18432_e, jule::Ptr<_1acae036c_FnCallExpr>* _18447_fc) {
	if (((*(_18447_fc)).get()._field_Args.len() > 0LL)) {
		_1acc79490_pushErr((*(_18432_e)).ptr(), (*(_18447_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Public", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ddeb4b1c_Const> _18917_constant = static__1ddeb558a_NewBool(_self_.get()._field_field.get()._field_Public);;
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd693e8_primBool, ._field_Model=jule::Any(_18917_constant, &__jule_any_type19), ._field_Constant=_18917_constant});;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb40598_subIdent(jule::Ptr<_1acb3ddd2_comptimeStatic> _self_, jule::Str _19728_ident) {
	{
		auto &_match_expr{ _19728_ident };
		
		if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_1a5c9ac49:;
			{
				jule::Ptr<_1acb24d85_FnIns> _20021_method = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>([=](jule::Ptr<_1acc78e73_Eval>* _20133_e, jule::Ptr<_1acae036c_FnCallExpr>* _20148_fc, jule::Ptr<_1abd5dc4b_Data>* ) mutable -> jule::Ptr<_1abd5dc4b_Data> {
					return _1acb3ea2b__Name(_self_, _20133_e, _20148_fc);;
				}), });;
				return _1acb5527d_buildAsComptimeMethodData(&(_20021_method));;
			}
		}
		else if (_match_expr == jule::Str("Public", 6)) {
			_case_begin_1a5c9acb0:;
			{
				jule::Ptr<_1acb24d85_FnIns> _20721_method = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>([=](jule::Ptr<_1acc78e73_Eval>* _20833_e, jule::Ptr<_1acae036c_FnCallExpr>* _20848_fc, jule::Ptr<_1abd5dc4b_Data>* ) mutable -> jule::Ptr<_1abd5dc4b_Data> {
					return _1acb4028a__Public(_self_, _20833_e, _20848_fc);;
				}), });;
				return _1acb5527d_buildAsComptimeMethodData(&(_20721_method));;
			}
		}
		else if (_match_expr == jule::Str("Type", 4)) {
			_case_begin_1a5c9aa6d:;
			{
				jule::Ptr<_1acb24d85_FnIns> _21421_method = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>([=](jule::Ptr<_1acc78e73_Eval>* _21533_e, jule::Ptr<_1acae036c_FnCallExpr>* _21548_fc, jule::Ptr<_1abd5dc4b_Data>* ) mutable -> jule::Ptr<_1abd5dc4b_Data> {
					return _1acb3edd3__Type(_self_, _21533_e, _21548_fc);;
				}), });;
				return _1acb5527d_buildAsComptimeMethodData(&(_21421_method));;
			}
		}
		else {
			_case_begin_1a5c9a62d:;
			{
				return nullptr;;
			}
		}
		_match_end_1a5c9a573:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1acb3ddd2_comptimeStatic _Src) {
	_Stream << _1acb3e245_Str(&_Src);
	return _Stream;
}



inline jule::Str _1acb40d07_Str(_1acb40994_comptimeStatics* _self_) {
	return jule::Str("comptimeStatics", 15);;
}



inline jule::Bool _1acb41115_Equal(jule::Ptr<_1acb40994_comptimeStatics> _self_, jule::Ptr<_1acca4ba2_TypeKind> _23321_other) {
	return false;;
}



inline void _1acb414bc_ready(_1acb40994_comptimeStatics* _self_, jule::Ptr<_1abd1497c_Var>* _23729_keyA, jule::Ptr<_1abd1497c_Var>* _23746_keyB) {
	if (((*(_23729_keyA)) != nullptr)) {
		(*(_23729_keyA)).get()._field_Constant=true;
		(*(_23729_keyA)).get()._field_Value=jule::new_ptr<_1abd5ecc4_Value>(_1abd5ecc4_Value{._field_Data=jule::new_ptr<_1abd5dc4b_Data>()});
		(*(_23729_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_23729_keyA)).get()._field_Kind=_1acd6c033_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_23746_keyB)) != nullptr)) {
		(*(_23746_keyB)).get()._field_Constant=true;
		(*(_23746_keyB)).get()._field_Value=jule::new_ptr<_1abd5ecc4_Value>(_1abd5ecc4_Value{._field_Data=jule::new_ptr<_1abd5dc4b_Data>()});
		(*(_23746_keyB)).get()._field_Kind=jule::new_ptr<_1accaba55_TypeSymbol>(_1accaba55_TypeSymbol{._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(jule::new_ptr<_1acb3ddd2_comptimeStatic>(), 8)})});
	};
}



inline void _1acb41885_step(_1acb40994_comptimeStatics* _self_, jule::I64 _25923_i, jule::Ptr<_1abd1497c_Var>* _25936_keyA, jule::Ptr<_1abd1497c_Var>* _25953_keyB) {
	if (((*(_25936_keyA)) != nullptr)) {
		(*(_25936_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1ddeb504b_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_25923_i)));
		(*(_25936_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_25936_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_25953_keyB)) != nullptr)) {
		_1accaae61_comptimeStatic((*(_25953_keyB)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_field=(*(_self_))._field_fields[_25923_i];
	};
}



inline jule::I64 _1acb41ae9_len(_1acb40994_comptimeStatics* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb40994_comptimeStatics _Src) {
	_Stream << _1acb40d07_Str(&_Src);
	return _Stream;
}



inline jule::Str _1acb42248_Str(_1acb41dd5_comptimeEnumField* _self_) {
	return jule::Str("comptimeEnumField", 17);;
}



inline jule::Bool _1acb42556_Equal(jule::Ptr<_1acb41dd5_comptimeEnumField> _self_, jule::Ptr<_1acca4ba2_TypeKind> _28321_other) {
	return false;;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb42a0c__Name(jule::Ptr<_1acb41dd5_comptimeEnumField> _self_, jule::Ptr<_1acc78e73_Eval>* _28726_e, jule::Ptr<_1acae036c_FnCallExpr>* _28741_fc) {
	if (((*(_28741_fc)).get()._field_Args.len() > 0LL)) {
		_1acc79490_pushErr((*(_28726_e)).ptr(), (*(_28741_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ddeb4b1c_Const> _29217_constant = static__1ddeb5832_NewStr(_self_.get()._field_field.get()._field_Ident);;
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd690da_primStr, ._field_Model=jule::Any(_29217_constant, &__jule_any_type19), ._field_Constant=_29217_constant});;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb42d1a_subIdent(jule::Ptr<_1acb41dd5_comptimeEnumField> _self_, jule::Str _30028_ident) {
	{
		auto &_match_expr{ _30028_ident };
		
		if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_1a5ca8cac:;
			{
				jule::Ptr<_1acb24d85_FnIns> _30321_method = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>([=](jule::Ptr<_1acc78e73_Eval>* _30433_e, jule::Ptr<_1acae036c_FnCallExpr>* _30448_fc, jule::Ptr<_1abd5dc4b_Data>* ) mutable -> jule::Ptr<_1abd5dc4b_Data> {
					return _1acb42a0c__Name(_self_, _30433_e, _30448_fc);;
				}), });;
				return _1acb5527d_buildAsComptimeMethodData(&(_30321_method));;
			}
		}
		else {
			_case_begin_1a5ca8dcd:;
			{
				return nullptr;;
			}
		}
		_match_end_1a5ca8d23:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1acb41dd5_comptimeEnumField _Src) {
	_Stream << _1acb42248_Str(&_Src);
	return _Stream;
}



inline jule::Str _1acb43579_Str(_1acb43106_comptimeEnumFields* _self_) {
	return jule::Str("comptimeEnumFields", 18);;
}



inline jule::Bool _1acb43887_Equal(jule::Ptr<_1acb43106_comptimeEnumFields> _self_, jule::Ptr<_1acca4ba2_TypeKind> _32221_other) {
	return false;;
}



inline void _1acb43c3e_ready(_1acb43106_comptimeEnumFields* _self_, jule::Ptr<_1abd1497c_Var>* _32629_keyA, jule::Ptr<_1abd1497c_Var>* _32646_keyB) {
	if (((*(_32629_keyA)) != nullptr)) {
		(*(_32629_keyA)).get()._field_Constant=true;
		(*(_32629_keyA)).get()._field_Value=jule::new_ptr<_1abd5ecc4_Value>(_1abd5ecc4_Value{._field_Data=jule::new_ptr<_1abd5dc4b_Data>()});
		(*(_32629_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_32629_keyA)).get()._field_Kind=_1acd6c033_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_32646_keyB)) != nullptr)) {
		(*(_32646_keyB)).get()._field_Constant=true;
		(*(_32646_keyB)).get()._field_Value=jule::new_ptr<_1abd5ecc4_Value>(_1abd5ecc4_Value{._field_Data=jule::new_ptr<_1abd5dc4b_Data>()});
		(*(_32646_keyB)).get()._field_Kind=jule::new_ptr<_1accaba55_TypeSymbol>(_1accaba55_TypeSymbol{._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(jule::new_ptr<_1acb41dd5_comptimeEnumField>(), 10)})});
	};
}



inline void _1acb44107_step(_1acb43106_comptimeEnumFields* _self_, jule::I64 _34823_i, jule::Ptr<_1abd1497c_Var>* _34836_keyA, jule::Ptr<_1abd1497c_Var>* _34853_keyB) {
	if (((*(_34836_keyA)) != nullptr)) {
		(*(_34836_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1ddeb504b_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_34823_i)));
		(*(_34836_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_34836_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_34853_keyB)) != nullptr)) {
		_1acca9c73_comptimeEnumField((*(_34853_keyB)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_field=(*(_self_))._field_fields[_34823_i];
	};
}



inline jule::I64 _1acb4436b_len(_1acb43106_comptimeEnumFields* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb43106_comptimeEnumFields _Src) {
	_Stream << _1acb43579_Str(&_Src);
	return _Stream;
}



inline jule::Str _1acb449ba_Str(_1acb44657_comptimeParam* _self_) {
	return jule::Str("comptimeParam", 13);;
}



inline jule::Bool _1acb44cc8_Equal(jule::Ptr<_1acb44657_comptimeParam> _self_, jule::Ptr<_1acca4ba2_TypeKind> _37221_other) {
	return false;;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb452b2__Name(jule::Ptr<_1acb44657_comptimeParam> _self_, jule::Ptr<_1acc78e73_Eval>* _37626_e, jule::Ptr<_1acae036c_FnCallExpr>* _37641_fc) {
	if (((*(_37641_fc)).get()._field_Args.len() > 0LL)) {
		_1acc79490_pushErr((*(_37626_e)).ptr(), (*(_37641_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ddeb4b1c_Const> _38117_constant = static__1ddeb5832_NewStr(_self_.get()._field_param.get()._field_Decl.get()._field_Ident);;
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd690da_primStr, ._field_Model=jule::Any(_38117_constant, &__jule_any_type19), ._field_Constant=_38117_constant});;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb45669__Type(jule::Ptr<_1acb44657_comptimeParam> _self_, jule::Ptr<_1acc78e73_Eval>* _38930_e, jule::Ptr<_1acae036c_FnCallExpr>* _38945_fc) {
	if (((*(_38945_fc)).get()._field_Args.len() > 0LL)) {
		_1acc79490_pushErr((*(_38930_e)).ptr(), (*(_38945_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1acb557cd_buildComptimeTypeInfoData(&((*(_38930_e)).get()._field_s), &(_self_.get()._field_param.get()._field_Kind));;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb45a21__Variadic(jule::Ptr<_1acb44657_comptimeParam> _self_, jule::Ptr<_1acc78e73_Eval>* _39734_e, jule::Ptr<_1acae036c_FnCallExpr>* _39749_fc) {
	if (((*(_39749_fc)).get()._field_Args.len() > 0LL)) {
		_1acc79490_pushErr((*(_39734_e)).ptr(), (*(_39749_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Variadic", 8), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ddeb4b1c_Const> _40217_constant = static__1ddeb558a_NewBool(_self_.get()._field_param.get()._field_Decl.get()._field_Variadic);;
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd693e8_primBool, ._field_Model=jule::Any(_40217_constant, &__jule_any_type19), ._field_Constant=_40217_constant});;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb45dc8__Reference(jule::Ptr<_1acb44657_comptimeParam> _self_, jule::Ptr<_1acc78e73_Eval>* _41035_e, jule::Ptr<_1acae036c_FnCallExpr>* _41050_fc) {
	if (((*(_41050_fc)).get()._field_Args.len() > 0LL)) {
		_1acc79490_pushErr((*(_41035_e)).ptr(), (*(_41050_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Reference", 9), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ddeb4b1c_Const> _41517_constant = static__1ddeb558a_NewBool(_self_.get()._field_param.get()._field_Decl.get()._field_Reference);;
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd693e8_primBool, ._field_Model=jule::Any(_41517_constant, &__jule_any_type19), ._field_Constant=_41517_constant});;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb461d6_subIdent(jule::Ptr<_1acb44657_comptimeParam> _self_, jule::Str _42328_ident) {
	{
		auto &_match_expr{ _42328_ident };
		
		if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_1a5cb9dcd:;
			{
				jule::Ptr<_1acb24d85_FnIns> _42621_method = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>([=](jule::Ptr<_1acc78e73_Eval>* _42733_e, jule::Ptr<_1acae036c_FnCallExpr>* _42748_fc, jule::Ptr<_1abd5dc4b_Data>* ) mutable -> jule::Ptr<_1abd5dc4b_Data> {
					return _1acb452b2__Name(_self_, _42733_e, _42748_fc);;
				}), });;
				return _1acb5527d_buildAsComptimeMethodData(&(_42621_method));;
			}
		}
		else if (_match_expr == jule::Str("Variadic", 8)) {
			_case_begin_1a5cb9e44:;
			{
				jule::Ptr<_1acb24d85_FnIns> _43321_method = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>([=](jule::Ptr<_1acc78e73_Eval>* _43433_e, jule::Ptr<_1acae036c_FnCallExpr>* _43448_fc, jule::Ptr<_1abd5dc4b_Data>* ) mutable -> jule::Ptr<_1abd5dc4b_Data> {
					return _1acb45a21__Variadic(_self_, _43433_e, _43448_fc);;
				}), });;
				return _1acb5527d_buildAsComptimeMethodData(&(_43321_method));;
			}
		}
		else if (_match_expr == jule::Str("Reference", 9)) {
			_case_begin_1a5cb9c13:;
			{
				jule::Ptr<_1acb24d85_FnIns> _44021_method = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>([=](jule::Ptr<_1acc78e73_Eval>* _44133_e, jule::Ptr<_1acae036c_FnCallExpr>* _44148_fc, jule::Ptr<_1abd5dc4b_Data>* ) mutable -> jule::Ptr<_1abd5dc4b_Data> {
					return _1acb45dc8__Reference(_self_, _44133_e, _44148_fc);;
				}), });;
				return _1acb5527d_buildAsComptimeMethodData(&(_44021_method));;
			}
		}
		else if (_match_expr == jule::Str("Type", 4)) {
			_case_begin_1a5cb9c79:;
			{
				jule::Ptr<_1acb24d85_FnIns> _44721_method = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>([=](jule::Ptr<_1acc78e73_Eval>* _44833_e, jule::Ptr<_1acae036c_FnCallExpr>* _44848_fc, jule::Ptr<_1abd5dc4b_Data>* ) mutable -> jule::Ptr<_1abd5dc4b_Data> {
					return _1acb45669__Type(_self_, _44833_e, _44848_fc);;
				}), });;
				return _1acb5527d_buildAsComptimeMethodData(&(_44721_method));;
			}
		}
		else {
			_case_begin_1a5cb97c3:;
			{
				return nullptr;;
			}
		}
		_match_end_1a5cb9691:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1acb44657_comptimeParam _Src) {
	_Stream << _1acb449ba_Str(&_Src);
	return _Stream;
}



inline jule::Str _1acb46a66_Str(_1acb46703_comptimeParams* _self_) {
	return jule::Str("comptimeParams", 14);;
}



inline jule::Bool _1acb46d74_Equal(jule::Ptr<_1acb46703_comptimeParams> _self_, jule::Ptr<_1acca4ba2_TypeKind> _46621_other) {
	return false;;
}



inline void _1acb472a3_ready(_1acb46703_comptimeParams* _self_, jule::Ptr<_1abd1497c_Var>* _47029_keyA, jule::Ptr<_1abd1497c_Var>* _47046_keyB) {
	if (((*(_47029_keyA)) != nullptr)) {
		(*(_47029_keyA)).get()._field_Constant=true;
		(*(_47029_keyA)).get()._field_Value=jule::new_ptr<_1abd5ecc4_Value>(_1abd5ecc4_Value{._field_Data=jule::new_ptr<_1abd5dc4b_Data>()});
		(*(_47029_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_47029_keyA)).get()._field_Kind=_1acd6c033_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_47046_keyB)) != nullptr)) {
		(*(_47046_keyB)).get()._field_Constant=true;
		(*(_47046_keyB)).get()._field_Value=jule::new_ptr<_1abd5ecc4_Value>(_1abd5ecc4_Value{._field_Data=jule::new_ptr<_1abd5dc4b_Data>()});
		(*(_47046_keyB)).get()._field_Kind=jule::new_ptr<_1accaba55_TypeSymbol>(_1accaba55_TypeSymbol{._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(jule::new_ptr<_1acb44657_comptimeParam>(), 12)})});
	};
}



inline void _1acb4766b_step(_1acb46703_comptimeParams* _self_, jule::I64 _49223_i, jule::Ptr<_1abd1497c_Var>* _49236_keyA, jule::Ptr<_1abd1497c_Var>* _49253_keyB) {
	if (((*(_49236_keyA)) != nullptr)) {
		(*(_49236_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1ddeb504b_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_49223_i)));
		(*(_49236_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_49236_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_49253_keyB)) != nullptr)) {
		_1accaa24b_comptimeParam((*(_49253_keyB)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_param=(*(_self_))._field_params[_49223_i];
	};
}



inline jule::I64 _1acb478d0_len(_1acb46703_comptimeParams* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_params.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb46703_comptimeParams _Src) {
	_Stream << _1acb46a66_Str(&_Src);
	return _Stream;
}



inline jule::Str _1acb4802e_Str(_1acb47bbb_comptimeTypeInfos* _self_) {
	return jule::Str("comptimeTypeInfos", 17);;
}



inline jule::Bool _1acb4833c_Equal(jule::Ptr<_1acb47bbb_comptimeTypeInfos> _self_, jule::Ptr<_1acca4ba2_TypeKind> _51621_other) {
	return false;;
}



inline void _1acb4876b_ready(_1acb47bbb_comptimeTypeInfos* _self_, jule::Ptr<_1abd1497c_Var>* _52029_keyA, jule::Ptr<_1abd1497c_Var>* _52046_keyB) {
	if (((*(_52029_keyA)) != nullptr)) {
		(*(_52029_keyA)).get()._field_Constant=true;
		(*(_52029_keyA)).get()._field_Value=jule::new_ptr<_1abd5ecc4_Value>(_1abd5ecc4_Value{._field_Data=jule::new_ptr<_1abd5dc4b_Data>()});
		(*(_52029_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_52029_keyA)).get()._field_Kind=_1acd6c033_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_52046_keyB)) != nullptr)) {
		(*(_52046_keyB)).get()._field_Constant=true;
		(*(_52046_keyB)).get()._field_Value=jule::new_ptr<_1abd5ecc4_Value>(_1abd5ecc4_Value{._field_Data=jule::new_ptr<_1abd5dc4b_Data>()});
		(*(_52046_keyB)).get()._field_Kind=jule::new_ptr<_1accaba55_TypeSymbol>(_1accaba55_TypeSymbol{._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(jule::new_ptr<_1acb49184_comptimeTypeInfo>(), 15)})});
	};
}



inline void _1acb48b34_step(_1acb47bbb_comptimeTypeInfos* _self_, jule::I64 _54223_i, jule::Ptr<_1abd1497c_Var>* _54236_keyA, jule::Ptr<_1abd1497c_Var>* _54253_keyB) {
	if (((*(_54236_keyA)) != nullptr)) {
		(*(_54236_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1ddeb504b_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_54223_i)));
		(*(_54236_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_54236_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_54253_keyB)) != nullptr)) {
		(*(_54253_keyB)).get()._field_Kind.get()._field_Kind.get()._field_Kind=jule::Trait<_1acca4740_Kind>((*(_self_))._field_types[_54223_i], 15);
	};
}



inline jule::I64 _1acb48d98_len(_1acb47bbb_comptimeTypeInfos* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_types.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb47bbb_comptimeTypeInfos _Src) {
	_Stream << _1acb4802e_Str(&_Src);
	return _Stream;
}



inline jule::Str _1acb494e7_Str(_1acb49184_comptimeTypeInfo* _self_) {
	return ((jule::Str("comptimeTypeInfo[", 17) + _1acca5059_Str((*(_self_))._field_base.ptr())) + jule::Str("]", 1));;
}



inline jule::Bool _1acb49805_Equal(jule::Ptr<_1acb49184_comptimeTypeInfo> _self_, jule::Ptr<_1acca4ba2_TypeKind> _56621_other) {
	return false;;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb49dee__Str(jule::Ptr<_1acb49184_comptimeTypeInfo> _self_, jule::Ptr<_1acc78e73_Eval>* _57025_e, jule::Ptr<_1acae036c_FnCallExpr>* _57040_fc) {
	if (((*(_57040_fc)).get()._field_Args.len() > 0LL)) {
		_1acc79490_pushErr((*(_57025_e)).ptr(), (*(_57040_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Str", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ddeb4b1c_Const> _57517_constant = static__1ddeb5832_NewStr(_1acca5059_Str(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd690da_primStr, ._field_Model=jule::Any(_57517_constant, &__jule_any_type19), ._field_Constant=_57517_constant});;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb4a2a6__Kind(jule::Ptr<_1acb49184_comptimeTypeInfo> _self_, jule::Ptr<_1acc78e73_Eval>* _58330_e, jule::Ptr<_1acae036c_FnCallExpr>* _58345_fc) {
	if (((*(_58345_fc)).get()._field_Args.len() > 0LL)) {
		_1acc79490_pushErr((*(_58330_e)).ptr(), (*(_58345_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Kind", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1acb36b88_Enum> _58817_enm = _1abcdce50_FindEnum(_1acb5546a_findComptimePackage(&((*(_58330_e)).get()._field_s)).ptr(), jule::Str("Kind", 4));;
	jule::Ptr<_1acb36193_EnumItem> _58917_item = nullptr;;
	{
		
		if (_1acca5e6c_Void(_self_.get()._field_base.ptr())) {
			_case_begin_1a5cd2b82:;
			{
				_58917_item=_1acb37705_FindItem(_58817_enm.ptr(), jule::Str("Void", 4));
			}
		}
		else if ((_1acca8821_Struct(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1a5cd2ca3:;
			{
				_58917_item=_1acb37705_FindItem(_58817_enm.ptr(), jule::Str("Struct", 6));
			}
		}
		else if ((_1acca8a85_Trait(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1a5cd29a6:;
			{
				_58917_item=_1acb37705_FindItem(_58817_enm.ptr(), jule::Str("Trait", 5));
			}
		}
		else if ((_1acca7897_Ptr(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1a5cd2a1c:;
			{
				if (_1accb4b90_IsUnsafe(_1acca7897_Ptr(_self_.get()._field_base.ptr()).ptr())) {
					_58917_item=_1acb37705_FindItem(_58817_enm.ptr(), jule::Str("UnsafePtr", 9));
				} else {
					_58917_item=_1acb37705_FindItem(_58817_enm.ptr(), jule::Str("Ptr", 3));
				};
			}
		}
		else if ((_1acca7633_Sptr(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1a5cd3325:;
			{
				_58917_item=_1acb37705_FindItem(_58817_enm.ptr(), jule::Str("Ref", 3));
			}
		}
		else if ((_1acca7b0b_Enum(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1a5cd338b:;
			{
				_58917_item=_1acb37705_FindItem(_58817_enm.ptr(), jule::Str("Enum", 4));
			}
		}
		else if ((_1acca8ce9_Map(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1a5cd3402:;
			{
				_58917_item=_1acb37705_FindItem(_58817_enm.ptr(), jule::Str("Map", 3));
			}
		}
		else if ((_1acca8348_Slc(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1a5cd3468:;
			{
				_58917_item=_1acb37705_FindItem(_58817_enm.ptr(), jule::Str("Slice", 5));
			}
		}
		else if ((_1acca80d4_Arr(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1a5cd34ce:;
			{
				_58917_item=_1acb37705_FindItem(_58817_enm.ptr(), jule::Str("Array", 5));
			}
		}
		else if ((_1acca85ac_Fn(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1a5cd3545:;
			{
				_58917_item=_1acb37705_FindItem(_58817_enm.ptr(), jule::Str("Func", 4));
			}
		}
		else if ((_1acca905d_Tup(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1a5cd35ab:;
			{
				_58917_item=_1acb37705_FindItem(_58817_enm.ptr(), jule::Str("Tuple", 5));
			}
		}
		else if ((_1acca73be_Prim(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1a5cd3622:;
			{
				jule::Ptr<_1accac407_Prim> _61817_prim = _1acca73be_Prim(_self_.get()._field_base.ptr());;
				{
					
					if (_1accb086c_IsAny(_61817_prim.ptr())) {
						_case_begin_1a5cdae76:;
						{
							_58917_item=_1acb37705_FindItem(_58817_enm.ptr(), jule::Str("Any", 3));
						}
					}
					else if (_1accb0394_IsBool(_61817_prim.ptr())) {
						_case_begin_1a5cdb63b:;
						{
							_58917_item=_1acb37705_FindItem(_58817_enm.ptr(), jule::Str("Bool", 4));
						}
					}
					else if (_1accb0608_IsStr(_61817_prim.ptr())) {
						_case_begin_1a5cdb8c2:;
						{
							_58917_item=_1acb37705_FindItem(_58817_enm.ptr(), jule::Str("Str", 3));
						}
					}
					else if (_1accae67e_IsF32(_61817_prim.ptr())) {
						_case_begin_1a5cdbe44:;
						{
							_58917_item=_1acb37705_FindItem(_58817_enm.ptr(), jule::Str("F32", 3));
						}
					}
					else if (_1accae8e3_IsF64(_61817_prim.ptr())) {
						_case_begin_1a5cdbeaa:;
						{
							_58917_item=_1acb37705_FindItem(_58817_enm.ptr(), jule::Str("F64", 3));
						}
					}
					else if (_1accad22c_IsI8(_61817_prim.ptr())) {
						_case_begin_1a5cdc021:;
						{
							_58917_item=_1acb37705_FindItem(_58817_enm.ptr(), jule::Str("I8", 2));
						}
					}
					else if (_1accad491_IsI16(_61817_prim.ptr())) {
						_case_begin_1a5cdc087:;
						{
							_58917_item=_1acb37705_FindItem(_58817_enm.ptr(), jule::Str("I16", 3));
						}
					}
					else if (_1accad705_IsI32(_61817_prim.ptr())) {
						_case_begin_1a5cdc0ed:;
						{
							_58917_item=_1acb37705_FindItem(_58817_enm.ptr(), jule::Str("I32", 3));
						}
					}
					else if (_1accad969_IsI64(_61817_prim.ptr())) {
						_case_begin_1a5cdc164:;
						{
							_58917_item=_1acb37705_FindItem(_58817_enm.ptr(), jule::Str("I64", 3));
						}
					}
					else if (_1accadbcd_IsU8(_61817_prim.ptr())) {
						_case_begin_1a5cdc1ca:;
						{
							_58917_item=_1acb37705_FindItem(_58817_enm.ptr(), jule::Str("U8", 2));
						}
					}
					else if (_1accade42_IsU16(_61817_prim.ptr())) {
						_case_begin_1a5cdc241:;
						{
							_58917_item=_1acb37705_FindItem(_58817_enm.ptr(), jule::Str("U16", 3));
						}
					}
					else if (_1accae1a6_IsU32(_61817_prim.ptr())) {
						_case_begin_1a5cdc2a7:;
						{
							_58917_item=_1acb37705_FindItem(_58817_enm.ptr(), jule::Str("U32", 3));
						}
					}
					else if (_1accae41a_IsU64(_61817_prim.ptr())) {
						_case_begin_1a5cdc31d:;
						{
							_58917_item=_1acb37705_FindItem(_58817_enm.ptr(), jule::Str("U64", 3));
						}
					}
					else if (_1accaeb57_IsInt(_61817_prim.ptr())) {
						_case_begin_1a5cdc384:;
						{
							_58917_item=_1acb37705_FindItem(_58817_enm.ptr(), jule::Str("Int", 3));
						}
					}
					else if (_1accaedbb_IsUint(_61817_prim.ptr())) {
						_case_begin_1a5cdc3ea:;
						{
							_58917_item=_1acb37705_FindItem(_58817_enm.ptr(), jule::Str("Uint", 4));
						}
					}
					else if (_1accb0130_IsUintptr(_61817_prim.ptr())) {
						_case_begin_1a5cdc472:;
						{
							_58917_item=_1acb37705_FindItem(_58817_enm.ptr(), jule::Str("Uintptr", 7));
						}
					}
					else {
						_case_begin_1a5cdb493:;
						{
							jule::panic((jule::Str("Kind(): unimplemented type for std::comptime: ", 46) + _1acca5059_Str(_self_.get()._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:653:17"));;
						}
					}
					_match_end_1a5cdb42c:;
				};
			}
		}
		else {
			_case_begin_1a5cd2852:;
			{
				jule::panic((jule::Str("Kind(): unimplemented type for std::comptime: ", 46) + _1acca5059_Str(_self_.get()._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:656:13"));;
			}
		}
		_match_end_1a5cd27ec:;
	};
	return _1acca24b8_evalEnumStatic(&(_58817_enm), &(_58917_item));;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb4a65d__Bits(jule::Ptr<_1acb49184_comptimeTypeInfo> _self_, jule::Ptr<_1acc78e73_Eval>* _66130_e, jule::Ptr<_1acae036c_FnCallExpr>* _66145_fc) {
	if (((*(_66145_fc)).get()._field_Args.len() > 0LL)) {
		_1acc79490_pushErr((*(_66130_e)).ptr(), (*(_66145_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Bits", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1accac407_Prim> _66613_prim = _1acca73be_Prim(_self_.get()._field_base.ptr());;
	if ((_66613_prim == nullptr)) {
		_1acc79490_pushErr((*(_66130_e)).ptr(), (*(_66145_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Bits", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I64 _67113_n = _1ddea724c_BitsizeOf(_66613_prim.get()._field_Kind);;
	if ((_67113_n == -1LL)) {
		_1acc79490_pushErr((*(_66130_e)).ptr(), (*(_66145_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Bits", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ddeb4b1c_Const> _67617_constant = static__1ddeb504b_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_67113_n)));;
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd690da_primStr, ._field_Model=jule::Any(_67617_constant, &__jule_any_type19), ._field_Constant=_67617_constant});;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb4aa15__Elem(jule::Ptr<_1acb49184_comptimeTypeInfo> _self_, jule::Ptr<_1acc78e73_Eval>* _68430_e, jule::Ptr<_1acae036c_FnCallExpr>* _68445_fc) {
	if (((*(_68445_fc)).get()._field_Args.len() > 0LL)) {
		_1acc79490_pushErr((*(_68430_e)).ptr(), (*(_68445_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Elem", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1accb41bc_Ptr> _68917_ptr = _1acca7897_Ptr(_self_.get()._field_base.ptr());;
	if ((_68917_ptr != nullptr)) {
		if (_1accb4b90_IsUnsafe(_68917_ptr.ptr())) {
			_1acc79490_pushErr((*(_68430_e)).ptr(), (*(_68445_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Elem", 4), &__jule_any_type5)}));
			return nullptr;;
		};
		return _1acb557cd_buildComptimeTypeInfoData(&((*(_68430_e)).get()._field_s), &(_68917_ptr.get()._field_Elem));;
	};
	jule::Ptr<_1accb0b58_Sptr> _69717_sptr = _1acca7633_Sptr(_self_.get()._field_base.ptr());;
	if ((_69717_sptr != nullptr)) {
		return _1acb557cd_buildComptimeTypeInfoData(&((*(_68430_e)).get()._field_s), &(_69717_sptr.get()._field_Elem));;
	};
	jule::Ptr<_1accb15b5_Slc> _70117_slice = _1acca8348_Slc(_self_.get()._field_base.ptr());;
	if ((_70117_slice != nullptr)) {
		return _1acb557cd_buildComptimeTypeInfoData(&((*(_68430_e)).get()._field_s), &(_70117_slice.get()._field_Elem));;
	};
	jule::Ptr<_1accb3760_Arr> _70517_array = _1acca80d4_Arr(_self_.get()._field_base.ptr());;
	if ((_70517_array != nullptr)) {
		return _1acb557cd_buildComptimeTypeInfoData(&((*(_68430_e)).get()._field_s), &(_70517_array.get()._field_Elem));;
	};
	jule::Ptr<_1acb36b88_Enum> _70917_enm = _1acca7b0b_Enum(_self_.get()._field_base.ptr());;
	if ((_70917_enm != nullptr)) {
		return _1acb557cd_buildComptimeTypeInfoData(&((*(_68430_e)).get()._field_s), &(_70917_enm.get()._field_Kind.get()._field_Kind));;
	};
	_1acc79490_pushErr((*(_68430_e)).ptr(), (*(_68445_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Elem", 4), &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb4adbc__Size(jule::Ptr<_1acb49184_comptimeTypeInfo> _self_, jule::Ptr<_1acc78e73_Eval>* _71730_e, jule::Ptr<_1acae036c_FnCallExpr>* _71745_fc) {
	if (((*(_71745_fc)).get()._field_Args.len() > 0LL)) {
		_1acc79490_pushErr((*(_71730_e)).ptr(), (*(_71745_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Size", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1accb3760_Arr> _72217_arr = _1acca80d4_Arr(_self_.get()._field_base.ptr());;
	if ((_72217_arr == nullptr)) {
		_1acc79490_pushErr((*(_71730_e)).ptr(), (*(_71745_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Size", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ddeb4b1c_Const> _72717_constant = static__1ddeb504b_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_72217_arr.get()._field_N)));;
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd69c45_primInt, ._field_Model=jule::Any(_72717_constant, &__jule_any_type19), ._field_Constant=_72717_constant});;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb4b274__Key(jule::Ptr<_1acb49184_comptimeTypeInfo> _self_, jule::Ptr<_1acc78e73_Eval>* _73529_e, jule::Ptr<_1acae036c_FnCallExpr>* _73544_fc) {
	if (((*(_73544_fc)).get()._field_Args.len() > 0LL)) {
		_1acc79490_pushErr((*(_73529_e)).ptr(), (*(_73544_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Key", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1accb2b6b_Map> _74017_m = _1acca8ce9_Map(_self_.get()._field_base.ptr());;
	if ((_74017_m == nullptr)) {
		_1acc79490_pushErr((*(_73529_e)).ptr(), (*(_73544_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Key", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1acb557cd_buildComptimeTypeInfoData(&((*(_73529_e)).get()._field_s), &(_74017_m.get()._field_Key));;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb4b62b__Value(jule::Ptr<_1acb49184_comptimeTypeInfo> _self_, jule::Ptr<_1acc78e73_Eval>* _74831_e, jule::Ptr<_1acae036c_FnCallExpr>* _74846_fc) {
	if (((*(_74846_fc)).get()._field_Args.len() > 0LL)) {
		_1acc79490_pushErr((*(_74831_e)).ptr(), (*(_74846_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Value", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1accb2b6b_Map> _75317_m = _1acca8ce9_Map(_self_.get()._field_base.ptr());;
	if ((_75317_m == nullptr)) {
		_1acc79490_pushErr((*(_74831_e)).ptr(), (*(_74846_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Value", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1acb557cd_buildComptimeTypeInfoData(&((*(_74831_e)).get()._field_s), &(_75317_m.get()._field_Val));;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb4b9d3__Fields(jule::Ptr<_1acb49184_comptimeTypeInfo> _self_, jule::Ptr<_1acc78e73_Eval>* _76132_e, jule::Ptr<_1acae036c_FnCallExpr>* _76147_fc) {
	if (((*(_76147_fc)).get()._field_Args.len() > 0LL)) {
		_1acc79490_pushErr((*(_76132_e)).ptr(), (*(_76147_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Fields", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1acb09d37_StructIns> _76617_s = _1acca8821_Struct(_self_.get()._field_base.ptr());;
	if ((_76617_s != nullptr)) {
		return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(jule::new_ptr<_1acb3c908_comptimeStructFields>(_1acb3c908_comptimeStructFields{._field_fields=_76617_s.get()._field_Fields}), 7)}), });;
	};
	jule::Ptr<_1acb36b88_Enum> _77617_enm = _1acca7b0b_Enum(_self_.get()._field_base.ptr());;
	if ((_77617_enm != nullptr)) {
		return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(jule::new_ptr<_1acb43106_comptimeEnumFields>(_1acb43106_comptimeEnumFields{._field_fields=_77617_enm.get()._field_Items}), 11)}), });;
	};
	_1acc79490_pushErr((*(_76132_e)).ptr(), (*(_76147_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Fields", 6), &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb4bd8a__Statics(jule::Ptr<_1acb49184_comptimeTypeInfo> _self_, jule::Ptr<_1acc78e73_Eval>* _79033_e, jule::Ptr<_1acae036c_FnCallExpr>* _79048_fc) {
	if (((*(_79048_fc)).get()._field_Args.len() > 0LL)) {
		_1acc79490_pushErr((*(_79033_e)).ptr(), (*(_79048_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Statics", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1acb09d37_StructIns> _79517_s = _1acca8821_Struct(_self_.get()._field_base.ptr());;
	if ((_79517_s == nullptr)) {
		_1acc79490_pushErr((*(_79033_e)).ptr(), (*(_79048_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Fields", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(jule::new_ptr<_1acb40994_comptimeStatics>(_1acb40994_comptimeStatics{._field_fields=_79517_s.get()._field_Statics}), 9)}), });;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb4c242__Public(jule::Ptr<_1acb49184_comptimeTypeInfo> _self_, jule::Ptr<_1acc78e73_Eval>* _80932_e, jule::Ptr<_1acae036c_FnCallExpr>* _80947_fc) {
	if (((*(_80947_fc)).get()._field_Args.len() > 0LL)) {
		_1acc79490_pushErr((*(_80932_e)).ptr(), (*(_80947_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Public", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Bool _81417_public = false;;
	{
		
		if ((_1acca8821_Struct(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1a5d13036:;
			{
				_81417_public=_1acca8821_Struct(_self_.get()._field_base.ptr()).get()._field_Decl.get()._field_Public;
			}
		}
		else if ((_1acca8a85_Trait(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1a5d1309c:;
			{
				_81417_public=_1acca8a85_Trait(_self_.get()._field_base.ptr()).get()._field_Public;
			}
		}
		else if ((_1acca7b0b_Enum(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1a5d12db0:;
			{
				_81417_public=_1acca7b0b_Enum(_self_.get()._field_base.ptr()).get()._field_Public;
			}
		}
		else if ((_1acca7d70_TypeEnum(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1a5d12e26:;
			{
				_81417_public=_1acca7d70_TypeEnum(_self_.get()._field_base.ptr()).get()._field_Public;
			}
		}
		else {
			_case_begin_1a5d11089:;
			{
				_1acc79490_pushErr((*(_80932_e)).ptr(), (*(_80947_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Public", 6), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a5d12002:;
	};
	jule::Ptr<_1ddeb4b1c_Const> _82817_constant = static__1ddeb558a_NewBool(_81417_public);;
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd693e8_primBool, ._field_Model=jule::Any(_82817_constant, &__jule_any_type19), ._field_Constant=_82817_constant});;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb4c5e9__Binded(jule::Ptr<_1acb49184_comptimeTypeInfo> _self_, jule::Ptr<_1acc78e73_Eval>* _83632_e, jule::Ptr<_1acae036c_FnCallExpr>* _83647_fc) {
	if (((*(_83647_fc)).get()._field_Args.len() > 0LL)) {
		_1acc79490_pushErr((*(_83632_e)).ptr(), (*(_83647_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Binded", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ddeb4b1c_Const> _84117_constant = static__1ddeb558a_NewBool(_1acca5994_Binded(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd693e8_primBool, ._field_Model=jule::Any(_84117_constant, &__jule_any_type19), ._field_Constant=_84117_constant});;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb4c9a1__Ordered(jule::Ptr<_1acb49184_comptimeTypeInfo> _self_, jule::Ptr<_1acc78e73_Eval>* _84929_e, jule::Ptr<_1acae036c_FnCallExpr>* _84944_fc) {
	if (((*(_84944_fc)).get()._field_Args.len() > 0LL)) {
		_1acc79490_pushErr((*(_84929_e)).ptr(), (*(_84944_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Ordered", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ddeb4b1c_Const> _85417_constant = static__1ddeb558a_NewBool(_1acca66a9_Ordered(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd690da_primStr, ._field_Model=jule::Any(_85417_constant, &__jule_any_type19), ._field_Constant=_85417_constant});;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb4cd58__Comparable(jule::Ptr<_1acb49184_comptimeTypeInfo> _self_, jule::Ptr<_1acc78e73_Eval>* _86232_e, jule::Ptr<_1acae036c_FnCallExpr>* _86247_fc) {
	if (((*(_86247_fc)).get()._field_Args.len() > 0LL)) {
		_1acc79490_pushErr((*(_86232_e)).ptr(), (*(_86247_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Comparable", 10), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ddeb4b1c_Const> _86717_constant = static__1ddeb558a_NewBool(_1acca61d1_Comparable(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd690da_primStr, ._field_Model=jule::Any(_86717_constant, &__jule_any_type19), ._field_Constant=_86717_constant});;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb4d210__Mutable(jule::Ptr<_1acb49184_comptimeTypeInfo> _self_, jule::Ptr<_1acc78e73_Eval>* _87529_e, jule::Ptr<_1acae036c_FnCallExpr>* _87544_fc) {
	if (((*(_87544_fc)).get()._field_Args.len() > 0LL)) {
		_1acc79490_pushErr((*(_87529_e)).ptr(), (*(_87544_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Mutable", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ddeb4b1c_Const> _88017_constant = static__1ddeb558a_NewBool(_1acca6445_Mutable(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd693e8_primBool, ._field_Model=jule::Any(_88017_constant, &__jule_any_type19), ._field_Constant=_88017_constant});;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb4d5b7__Types(jule::Ptr<_1acb49184_comptimeTypeInfo> _self_, jule::Ptr<_1acc78e73_Eval>* _88831_e, jule::Ptr<_1acae036c_FnCallExpr>* _88846_fc) {
	if (((*(_88846_fc)).get()._field_Args.len() > 0LL)) {
		_1acc79490_pushErr((*(_88831_e)).ptr(), (*(_88846_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Types", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1accb21ba_Tuple> _89317_tup = _1acca905d_Tup(_self_.get()._field_base.ptr());;
	if ((_89317_tup == nullptr)) {
		_1acc79490_pushErr((*(_88831_e)).ptr(), (*(_88846_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Types", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1acb47bbb_comptimeTypeInfos> _89817_infos = jule::new_ptr<_1acb47bbb_comptimeTypeInfos>(_1acb47bbb_comptimeTypeInfos{._field_types=jule::Slice<jule::Ptr<_1acb49184_comptimeTypeInfo>>::alloc(0LL, _89317_tup.get()._field_Types.len())});;
	{
		auto expr = &(_89317_tup.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5d225a6:;
		if (it != expr_end) {
			jule::Ptr<_1acca4ba2_TypeKind> _90121_t = *it;
			{
				{ jule::Slice<jule::Ptr<_1acb49184_comptimeTypeInfo>> &__jule_push_dest = _89817_infos.get()._field_types; __jule_push_dest.push(_1abce4099_pushComptimeTypeInfo((*(_88831_e)).get()._field_s.get()._field_meta.ptr(), &(_90121_t))); };
			}
			_iter_next_1a5d225a6:;
			++it;
			goto _iter_begin_1a5d225a6;
		}
		_iter_end_1a5d225a6:;
	};
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(_89817_infos, 14)}), });;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb4d96e__Exceptional(jule::Ptr<_1acb49184_comptimeTypeInfo> _self_, jule::Ptr<_1acc78e73_Eval>* _91137_e, jule::Ptr<_1acae036c_FnCallExpr>* _91152_fc) {
	if (((*(_91152_fc)).get()._field_Args.len() > 0LL)) {
		_1acc79490_pushErr((*(_91137_e)).ptr(), (*(_91152_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Exceptional", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1acb24d85_FnIns> _91617_f = _1acca85ac_Fn(_self_.get()._field_base.ptr());;
	if ((_91617_f == nullptr)) {
		_1acc79490_pushErr((*(_91137_e)).ptr(), (*(_91152_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Exceptional", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ddeb4b1c_Const> _92117_constant = static__1ddeb558a_NewBool(((_91617_f.get()._field_Decl != nullptr) && _91617_f.get()._field_Decl.get()._field_Exceptional));;
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd693e8_primBool, ._field_Model=jule::Any(_92117_constant, &__jule_any_type19), ._field_Constant=_92117_constant});;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb4dd26__CanNil(jule::Ptr<_1acb49184_comptimeTypeInfo> _self_, jule::Ptr<_1acc78e73_Eval>* _92932_e, jule::Ptr<_1acae036c_FnCallExpr>* _92947_fc) {
	if (((*(_92947_fc)).get()._field_Args.len() > 0LL)) {
		_1acc79490_pushErr((*(_92932_e)).ptr(), (*(_92947_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("CanNil", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ddeb4b1c_Const> _93417_constant = static__1ddeb558a_NewBool(_1acca691d_NilCompatible(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd693e8_primBool, ._field_Model=jule::Any(_93417_constant, &__jule_any_type19), ._field_Constant=_93417_constant});;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb4e1cd__Result(jule::Ptr<_1acb49184_comptimeTypeInfo> _self_, jule::Ptr<_1acc78e73_Eval>* _94232_e, jule::Ptr<_1acae036c_FnCallExpr>* _94247_fc) {
	if (((*(_94247_fc)).get()._field_Args.len() > 0LL)) {
		_1acc79490_pushErr((*(_94232_e)).ptr(), (*(_94247_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Result", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1acb24d85_FnIns> _94717_f = _1acca85ac_Fn(_self_.get()._field_base.ptr());;
	if ((_94717_f == nullptr)) {
		_1acc79490_pushErr((*(_94232_e)).ptr(), (*(_94247_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Result", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	if ((_94717_f.get()._field_Result == nullptr)) {
		return _1acb557cd_buildComptimeTypeInfoData(&((*(_94232_e)).get()._field_s), &(_1acd68a13_primVoid));;
	};
	return _1acb557cd_buildComptimeTypeInfoData(&((*(_94232_e)).get()._field_s), &(_94717_f.get()._field_Result));;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb4e585__Params(jule::Ptr<_1acb49184_comptimeTypeInfo> _self_, jule::Ptr<_1acc78e73_Eval>* _95832_e, jule::Ptr<_1acae036c_FnCallExpr>* _95847_fc) {
	if (((*(_95847_fc)).get()._field_Args.len() > 0LL)) {
		_1acc79490_pushErr((*(_95832_e)).ptr(), (*(_95847_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Params", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1acb24d85_FnIns> _96317_f = _1acca85ac_Fn(_self_.get()._field_base.ptr());;
	if ((_96317_f == nullptr)) {
		_1acc79490_pushErr((*(_95832_e)).ptr(), (*(_95847_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Params", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(jule::new_ptr<_1acb46703_comptimeParams>(_1acb46703_comptimeParams{._field_params=_96317_f.get()._field_Params}), 13)}), });;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb4e893_subIdent(jule::Ptr<_1acb49184_comptimeTypeInfo> _self_, jule::Str _97528_ident) {
	{
		auto &_match_expr{ _97528_ident };
		
		if (_match_expr == jule::Str("Str", 3)) {
			_case_begin_1a5d2eeba:;
			{
				jule::Ptr<_1acb24d85_FnIns> _97821_method = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>([=](jule::Ptr<_1acc78e73_Eval>* _97933_e, jule::Ptr<_1acae036c_FnCallExpr>* _97948_fc, jule::Ptr<_1abd5dc4b_Data>* ) mutable -> jule::Ptr<_1abd5dc4b_Data> {
					return _1acb49dee__Str(_self_, _97933_e, _97948_fc);;
				}), });;
				return _1acb5527d_buildAsComptimeMethodData(&(_97821_method));;
			}
		}
		else if (_match_expr == jule::Str("Bits", 4)) {
			_case_begin_1a5d30949:;
			{
				jule::Ptr<_1acb24d85_FnIns> _98521_method = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>([=](jule::Ptr<_1acc78e73_Eval>* _98633_e, jule::Ptr<_1acae036c_FnCallExpr>* _98648_fc, jule::Ptr<_1abd5dc4b_Data>* ) mutable -> jule::Ptr<_1abd5dc4b_Data> {
					return _1acb4a65d__Bits(_self_, _98633_e, _98648_fc);;
				}), });;
				return _1acb5527d_buildAsComptimeMethodData(&(_98521_method));;
			}
		}
		else if (_match_expr == jule::Str("Elem", 4)) {
			_case_begin_1a5d309b0:;
			{
				jule::Ptr<_1acb24d85_FnIns> _99221_method = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>([=](jule::Ptr<_1acc78e73_Eval>* _99333_e, jule::Ptr<_1acae036c_FnCallExpr>* _99348_fc, jule::Ptr<_1abd5dc4b_Data>* ) mutable -> jule::Ptr<_1abd5dc4b_Data> {
					return _1acb4aa15__Elem(_self_, _99333_e, _99348_fc);;
				}), });;
				return _1acb5527d_buildAsComptimeMethodData(&(_99221_method));;
			}
		}
		else if (_match_expr == jule::Str("Size", 4)) {
			_case_begin_1a5d3043d:;
			{
				jule::Ptr<_1acb24d85_FnIns> _99921_method = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>([=](jule::Ptr<_1acc78e73_Eval>* _100033_e, jule::Ptr<_1acae036c_FnCallExpr>* _100048_fc, jule::Ptr<_1abd5dc4b_Data>* ) mutable -> jule::Ptr<_1abd5dc4b_Data> {
					return _1acb4adbc__Size(_self_, _100033_e, _100048_fc);;
				}), });;
				return _1acb5527d_buildAsComptimeMethodData(&(_99921_method));;
			}
		}
		else if (_match_expr == jule::Str("Key", 3)) {
			_case_begin_1a5d304a4:;
			{
				jule::Ptr<_1acb24d85_FnIns> _100621_method = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>([=](jule::Ptr<_1acc78e73_Eval>* _100733_e, jule::Ptr<_1acae036c_FnCallExpr>* _100748_fc, jule::Ptr<_1abd5dc4b_Data>* ) mutable -> jule::Ptr<_1abd5dc4b_Data> {
					return _1acb4b274__Key(_self_, _100733_e, _100748_fc);;
				}), });;
				return _1acb5527d_buildAsComptimeMethodData(&(_100621_method));;
			}
		}
		else if (_match_expr == jule::Str("Value", 5)) {
			_case_begin_1a5d3052b:;
			{
				jule::Ptr<_1acb24d85_FnIns> _101321_method = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>([=](jule::Ptr<_1acc78e73_Eval>* _101433_e, jule::Ptr<_1acae036c_FnCallExpr>* _101448_fc, jule::Ptr<_1abd5dc4b_Data>* ) mutable -> jule::Ptr<_1abd5dc4b_Data> {
					return _1acb4b62b__Value(_self_, _101433_e, _101448_fc);;
				}), });;
				return _1acb5527d_buildAsComptimeMethodData(&(_101321_method));;
			}
		}
		else if (_match_expr == jule::Str("Fields", 6)) {
			_case_begin_1a5d305a3:;
			{
				jule::Ptr<_1acb24d85_FnIns> _102021_method = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>([=](jule::Ptr<_1acc78e73_Eval>* _102133_e, jule::Ptr<_1acae036c_FnCallExpr>* _102148_fc, jule::Ptr<_1abd5dc4b_Data>* ) mutable -> jule::Ptr<_1abd5dc4b_Data> {
					return _1acb4b9d3__Fields(_self_, _102133_e, _102148_fc);;
				}), });;
				return _1acb5527d_buildAsComptimeMethodData(&(_102021_method));;
			}
		}
		else if (_match_expr == jule::Str("Statics", 7)) {
			_case_begin_1a5d30a37:;
			{
				jule::Ptr<_1acb24d85_FnIns> _102721_method = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>([=](jule::Ptr<_1acc78e73_Eval>* _102833_e, jule::Ptr<_1acae036c_FnCallExpr>* _102848_fc, jule::Ptr<_1abd5dc4b_Data>* ) mutable -> jule::Ptr<_1abd5dc4b_Data> {
					return _1acb4bd8a__Statics(_self_, _102833_e, _102848_fc);;
				}), });;
				return _1acb5527d_buildAsComptimeMethodData(&(_102721_method));;
			}
		}
		else if (_match_expr == jule::Str("Params", 6)) {
			_case_begin_1a5d30aae:;
			{
				jule::Ptr<_1acb24d85_FnIns> _103421_method = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>([=](jule::Ptr<_1acc78e73_Eval>* _103533_e, jule::Ptr<_1acae036c_FnCallExpr>* _103548_fc, jule::Ptr<_1abd5dc4b_Data>* ) mutable -> jule::Ptr<_1abd5dc4b_Data> {
					return _1acb4e585__Params(_self_, _103533_e, _103548_fc);;
				}), });;
				return _1acb5527d_buildAsComptimeMethodData(&(_103421_method));;
			}
		}
		else if (_match_expr == jule::Str("Types", 5)) {
			_case_begin_1a5d30b36:;
			{
				jule::Ptr<_1acb24d85_FnIns> _104121_method = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>([=](jule::Ptr<_1acc78e73_Eval>* _104233_e, jule::Ptr<_1acae036c_FnCallExpr>* _104248_fc, jule::Ptr<_1abd5dc4b_Data>* ) mutable -> jule::Ptr<_1abd5dc4b_Data> {
					return _1acb4d5b7__Types(_self_, _104233_e, _104248_fc);;
				}), });;
				return _1acb5527d_buildAsComptimeMethodData(&(_104121_method));;
			}
		}
		else if (_match_expr == jule::Str("Public", 6)) {
			_case_begin_1a5d30bad:;
			{
				jule::Ptr<_1acb24d85_FnIns> _104821_method = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>([=](jule::Ptr<_1acc78e73_Eval>* _104933_e, jule::Ptr<_1acae036c_FnCallExpr>* _104948_fc, jule::Ptr<_1abd5dc4b_Data>* ) mutable -> jule::Ptr<_1abd5dc4b_Data> {
					return _1acb4c242__Public(_self_, _104933_e, _104948_fc);;
				}), });;
				return _1acb5527d_buildAsComptimeMethodData(&(_104821_method));;
			}
		}
		else if (_match_expr == jule::Str("Binded", 6)) {
			_case_begin_1a5d30c35:;
			{
				jule::Ptr<_1acb24d85_FnIns> _105521_method = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>([=](jule::Ptr<_1acc78e73_Eval>* _105633_e, jule::Ptr<_1acae036c_FnCallExpr>* _105648_fc, jule::Ptr<_1abd5dc4b_Data>* ) mutable -> jule::Ptr<_1abd5dc4b_Data> {
					return _1acb4c5e9__Binded(_self_, _105633_e, _105648_fc);;
				}), });;
				return _1acb5527d_buildAsComptimeMethodData(&(_105521_method));;
			}
		}
		else if (_match_expr == jule::Str("Ordered", 7)) {
			_case_begin_1a5d30cac:;
			{
				jule::Ptr<_1acb24d85_FnIns> _106221_method = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>([=](jule::Ptr<_1acc78e73_Eval>* _106333_e, jule::Ptr<_1acae036c_FnCallExpr>* _106348_fc, jule::Ptr<_1abd5dc4b_Data>* ) mutable -> jule::Ptr<_1abd5dc4b_Data> {
					return _1acb4c9a1__Ordered(_self_, _106333_e, _106348_fc);;
				}), });;
				return _1acb5527d_buildAsComptimeMethodData(&(_106221_method));;
			}
		}
		else if (_match_expr == jule::Str("Comparable", 10)) {
			_case_begin_1a5d30d34:;
			{
				jule::Ptr<_1acb24d85_FnIns> _106921_method = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>([=](jule::Ptr<_1acc78e73_Eval>* _107033_e, jule::Ptr<_1acae036c_FnCallExpr>* _107048_fc, jule::Ptr<_1abd5dc4b_Data>* ) mutable -> jule::Ptr<_1abd5dc4b_Data> {
					return _1acb4cd58__Comparable(_self_, _107033_e, _107048_fc);;
				}), });;
				return _1acb5527d_buildAsComptimeMethodData(&(_106921_method));;
			}
		}
		else if (_match_expr == jule::Str("Mutable", 7)) {
			_case_begin_1a5d30dab:;
			{
				jule::Ptr<_1acb24d85_FnIns> _107621_method = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>([=](jule::Ptr<_1acc78e73_Eval>* _107733_e, jule::Ptr<_1acae036c_FnCallExpr>* _107748_fc, jule::Ptr<_1abd5dc4b_Data>* ) mutable -> jule::Ptr<_1abd5dc4b_Data> {
					return _1acb4d210__Mutable(_self_, _107733_e, _107748_fc);;
				}), });;
				return _1acb5527d_buildAsComptimeMethodData(&(_107621_method));;
			}
		}
		else if (_match_expr == jule::Str("Exceptional", 11)) {
			_case_begin_1a5d30e33:;
			{
				jule::Ptr<_1acb24d85_FnIns> _108321_method = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>([=](jule::Ptr<_1acc78e73_Eval>* _108433_e, jule::Ptr<_1acae036c_FnCallExpr>* _108448_fc, jule::Ptr<_1abd5dc4b_Data>* ) mutable -> jule::Ptr<_1abd5dc4b_Data> {
					return _1acb4d96e__Exceptional(_self_, _108433_e, _108448_fc);;
				}), });;
				return _1acb5527d_buildAsComptimeMethodData(&(_108321_method));;
			}
		}
		else if (_match_expr == jule::Str("CanNil", 6)) {
			_case_begin_1a5d30eaa:;
			{
				jule::Ptr<_1acb24d85_FnIns> _109021_method = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>([=](jule::Ptr<_1acc78e73_Eval>* _109133_e, jule::Ptr<_1acae036c_FnCallExpr>* _109148_fc, jule::Ptr<_1abd5dc4b_Data>* ) mutable -> jule::Ptr<_1abd5dc4b_Data> {
					return _1acb4dd26__CanNil(_self_, _109133_e, _109148_fc);;
				}), });;
				return _1acb5527d_buildAsComptimeMethodData(&(_109021_method));;
			}
		}
		else if (_match_expr == jule::Str("Result", 6)) {
			_case_begin_1a5d31032:;
			{
				jule::Ptr<_1acb24d85_FnIns> _109721_method = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>([=](jule::Ptr<_1acc78e73_Eval>* _109833_e, jule::Ptr<_1acae036c_FnCallExpr>* _109848_fc, jule::Ptr<_1abd5dc4b_Data>* ) mutable -> jule::Ptr<_1abd5dc4b_Data> {
					return _1acb4e1cd__Result(_self_, _109833_e, _109848_fc);;
				}), });;
				return _1acb5527d_buildAsComptimeMethodData(&(_109721_method));;
			}
		}
		else if (_match_expr == jule::Str("Kind", 4)) {
			_case_begin_1a5d310a9:;
			{
				jule::Ptr<_1acb24d85_FnIns> _110421_method = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>([=](jule::Ptr<_1acc78e73_Eval>* _110533_e, jule::Ptr<_1acae036c_FnCallExpr>* _110548_fc, jule::Ptr<_1abd5dc4b_Data>* ) mutable -> jule::Ptr<_1abd5dc4b_Data> {
					return _1acb4a2a6__Kind(_self_, _110533_e, _110548_fc);;
				}), });;
				return _1acb5527d_buildAsComptimeMethodData(&(_110421_method));;
			}
		}
		else {
			_case_begin_1a5d3032d:;
			{
				return nullptr;;
			}
		}
		_match_end_1a5d3020c:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1acb49184_comptimeTypeInfo _Src) {
	_Stream << _1acb494e7_Str(&_Src);
	return _Stream;
}



inline jule::Str _1acb4eee2_Str(_1acb4eb7e_comptimeValue* _self_) {
	return jule::Str("comptimeValue", 13);;
}



inline jule::Bool _1acb50300_Equal(jule::Ptr<_1acb4eb7e_comptimeValue> _self_, jule::Ptr<_1acca4ba2_TypeKind> _112321_other) {
	return false;;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb5080b__Unwrap(jule::Ptr<_1acb4eb7e_comptimeValue> _self_, jule::Ptr<_1acc78e73_Eval>* _112732_e, jule::Ptr<_1acae036c_FnCallExpr>* _112747_fc) {
	if (((*(_112747_fc)).get()._field_Args.len() > 0LL)) {
		_1acc79490_pushErr((*(_112732_e)).ptr(), (*(_112747_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Unwrap", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	return _self_.get()._field_data;;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb50bb3__Type(jule::Ptr<_1acb4eb7e_comptimeValue> _self_, jule::Ptr<_1acc78e73_Eval>* _113530_e, jule::Ptr<_1acae036c_FnCallExpr>* _113545_fc) {
	if (((*(_113545_fc)).get()._field_Args.len() > 0LL)) {
		_1acc79490_pushErr((*(_113530_e)).ptr(), (*(_113545_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1acb557cd_buildComptimeTypeInfoData(&((*(_113530_e)).get()._field_s), &(_self_.get()._field_data.get()._field_Kind));;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb5106a__Lvalue(jule::Ptr<_1acb4eb7e_comptimeValue> _self_, jule::Ptr<_1acc78e73_Eval>* _114332_e, jule::Ptr<_1acae036c_FnCallExpr>* _114347_fc) {
	if (((*(_114347_fc)).get()._field_Args.len() > 0LL)) {
		_1acc79490_pushErr((*(_114332_e)).ptr(), (*(_114347_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Lvalue", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ddeb4b1c_Const> _114817_constant = static__1ddeb558a_NewBool(_self_.get()._field_data.get()._field_Lvalue);;
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd693e8_primBool, ._field_Model=jule::Any(_114817_constant, &__jule_any_type19), ._field_Constant=_114817_constant});;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb51422__Mutable(jule::Ptr<_1acb4eb7e_comptimeValue> _self_, jule::Ptr<_1acc78e73_Eval>* _115633_e, jule::Ptr<_1acae036c_FnCallExpr>* _115648_fc) {
	if (((*(_115648_fc)).get()._field_Args.len() > 0LL)) {
		_1acc79490_pushErr((*(_115633_e)).ptr(), (*(_115648_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Mutable", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ddeb4b1c_Const> _116117_constant = static__1ddeb558a_NewBool(_self_.get()._field_data.get()._field_Mutable);;
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd693e8_primBool, ._field_Model=jule::Any(_116117_constant, &__jule_any_type19), ._field_Constant=_116117_constant});;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb517c9__Const(jule::Ptr<_1acb4eb7e_comptimeValue> _self_, jule::Ptr<_1acc78e73_Eval>* _116931_e, jule::Ptr<_1acae036c_FnCallExpr>* _116946_fc) {
	if (((*(_116946_fc)).get()._field_Args.len() > 0LL)) {
		_1acc79490_pushErr((*(_116931_e)).ptr(), (*(_116946_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Const", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ddeb4b1c_Const> _117417_constant = static__1ddeb558a_NewBool(_1abd5e5ba_IsConst(_self_.get()._field_data.ptr()));;
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd693e8_primBool, ._field_Model=jule::Any(_117417_constant, &__jule_any_type19), ._field_Constant=_117417_constant});;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb51b81__Field(jule::Ptr<_1acb4eb7e_comptimeValue> _self_, jule::Ptr<_1acc78e73_Eval>* _118231_e, jule::Ptr<_1acae036c_FnCallExpr>* _118246_fc) {
	if (((*(_118246_fc)).get()._field_Args.len() > 1LL)) {
		_1acc79490_pushErr((*(_118231_e)).ptr(), (*(_118246_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Field", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1acb09d37_StructIns> _118717_s = _1acca8821_Struct(_self_.get()._field_data.get()._field_Kind.ptr());;
	if ((_118717_s == nullptr)) {
		_1acc79490_pushErr((*(_118231_e)).ptr(), (*(_118246_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_self_.get()._field_data.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Field", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1acadb456_Expr> _119217_arg = (*(_118246_fc)).get()._field_Args[0LL];;
	jule::Ptr<_1abd5dc4b_Data> _119317_d = _1acc95984_evalExpr((*(_118231_e)), _119217_arg);;
	if ((_119317_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1abd5e5ba_IsConst(_119317_d.ptr())))) {
		_1acc79490_pushErr((*(_118231_e)).ptr(), _119217_arg.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1accac407_Prim> _120113_prim = _1acca73be_Prim(_119317_d.get()._field_Kind.ptr());;
	if (((_120113_prim == nullptr) || (!(_1accb0608_IsStr(_120113_prim.ptr()))))) {
		_1acc79490_pushErr((*(_118231_e)).ptr(), _119217_arg.get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_1acca5059_Str(_119317_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Str _120613_ident = _1ddeb6b52_ReadStr(_119317_d.get()._field_Constant.ptr());;
	jule::Ptr<_1acb09342_FieldIns> _120717_f = _1acb0b0e1_FindField(_118717_s.ptr(), _120613_ident);;
	if ((_120717_f == nullptr)) {
		_1acc79490_pushErr((*(_118231_e)).ptr(), _119217_arg.get()._field_Token, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_118717_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5),jule::Any(_120613_ident, &__jule_any_type5)}));
		return nullptr;;
	};
	_119317_d=jule::new_ptr<_1abd5dc4b_Data>((*(_self_.get()._field_data)));
	_119317_d=_1acc8e0a9_evalStructSubIdentField((*(_118231_e)).ptr(), &(_119317_d), &(_118717_s), &(_119217_arg.get()._field_Token), &(_120717_f));
	return _1acb55b0d_buildComptimeValue(&(_119317_d));;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb51e8e_subIdent(jule::Ptr<_1acb4eb7e_comptimeValue> _self_, jule::Str _121728_ident) {
	{
		auto &_match_expr{ _121728_ident };
		
		if (_match_expr == jule::Str("Unwrap", 6)) {
			_case_begin_1a5d68300:;
			{
				jule::Ptr<_1acb24d85_FnIns> _122021_method = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>([=](jule::Ptr<_1acc78e73_Eval>* _122133_e, jule::Ptr<_1acae036c_FnCallExpr>* _122148_fc, jule::Ptr<_1abd5dc4b_Data>* ) mutable -> jule::Ptr<_1abd5dc4b_Data> {
					return _1acb5080b__Unwrap(_self_, _122133_e, _122148_fc);;
				}), });;
				return _1acb5527d_buildAsComptimeMethodData(&(_122021_method));;
			}
		}
		else if (_match_expr == jule::Str("Type", 4)) {
			_case_begin_1a5d68366:;
			{
				jule::Ptr<_1acb24d85_FnIns> _122721_method = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>([=](jule::Ptr<_1acc78e73_Eval>* _122833_e, jule::Ptr<_1acae036c_FnCallExpr>* _122848_fc, jule::Ptr<_1abd5dc4b_Data>* ) mutable -> jule::Ptr<_1abd5dc4b_Data> {
					return _1acb50bb3__Type(_self_, _122833_e, _122848_fc);;
				}), });;
				return _1acb5527d_buildAsComptimeMethodData(&(_122721_method));;
			}
		}
		else if (_match_expr == jule::Str("Lvalue", 6)) {
			_case_begin_1a5d68146:;
			{
				jule::Ptr<_1acb24d85_FnIns> _123421_method = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>([=](jule::Ptr<_1acc78e73_Eval>* _123533_e, jule::Ptr<_1acae036c_FnCallExpr>* _123548_fc, jule::Ptr<_1abd5dc4b_Data>* ) mutable -> jule::Ptr<_1abd5dc4b_Data> {
					return _1acb5106a__Lvalue(_self_, _123533_e, _123548_fc);;
				}), });;
				return _1acb5527d_buildAsComptimeMethodData(&(_123421_method));;
			}
		}
		else if (_match_expr == jule::Str("Mutable", 7)) {
			_case_begin_1a5d681bd:;
			{
				jule::Ptr<_1acb24d85_FnIns> _124121_method = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>([=](jule::Ptr<_1acc78e73_Eval>* _124233_e, jule::Ptr<_1acae036c_FnCallExpr>* _124248_fc, jule::Ptr<_1abd5dc4b_Data>* ) mutable -> jule::Ptr<_1abd5dc4b_Data> {
					return _1acb51422__Mutable(_self_, _124233_e, _124248_fc);;
				}), });;
				return _1acb5527d_buildAsComptimeMethodData(&(_124121_method));;
			}
		}
		else if (_match_expr == jule::Str("Const", 5)) {
			_case_begin_1a5d68245:;
			{
				jule::Ptr<_1acb24d85_FnIns> _124821_method = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>([=](jule::Ptr<_1acc78e73_Eval>* _124933_e, jule::Ptr<_1acae036c_FnCallExpr>* _124948_fc, jule::Ptr<_1abd5dc4b_Data>* ) mutable -> jule::Ptr<_1abd5dc4b_Data> {
					return _1acb517c9__Const(_self_, _124933_e, _124948_fc);;
				}), });;
				return _1acb5527d_buildAsComptimeMethodData(&(_124821_method));;
			}
		}
		else if (_match_expr == jule::Str("Field", 5)) {
			_case_begin_1a5d67d38:;
			{
				jule::Ptr<_1acb24d85_FnIns> _125521_method = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>([=](jule::Ptr<_1acc78e73_Eval>* _125633_e, jule::Ptr<_1acae036c_FnCallExpr>* _125648_fc, jule::Ptr<_1abd5dc4b_Data>* ) mutable -> jule::Ptr<_1abd5dc4b_Data> {
					return _1acb51b81__Field(_self_, _125633_e, _125648_fc);;
				}), });;
				return _1acb5527d_buildAsComptimeMethodData(&(_125521_method));;
			}
		}
		else {
			_case_begin_1a5d67bd4:;
			{
				return nullptr;;
			}
		}
		_match_end_1a5d67b3a:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1acb4eb7e_comptimeValue _Src) {
	_Stream << _1acb4eee2_Str(&_Src);
	return _Stream;
}



inline jule::Str _1acb525dd_Str(_1acb5227a_comptimeFiles* _self_) {
	return jule::Str("comptimeFiles", 13);;
}



inline jule::Bool _1acb528eb_Equal(jule::Ptr<_1acb5227a_comptimeFiles> _self_, jule::Ptr<_1acca4ba2_TypeKind> _127421_other) {
	return false;;
}



inline void _1acb52d2a_ready(_1acb5227a_comptimeFiles* _self_, jule::Ptr<_1abd1497c_Var>* _127829_keyA, jule::Ptr<_1abd1497c_Var>* _127846_keyB) {
	if (((*(_127829_keyA)) != nullptr)) {
		(*(_127829_keyA)).get()._field_Constant=true;
		(*(_127829_keyA)).get()._field_Value=jule::new_ptr<_1abd5ecc4_Value>(_1abd5ecc4_Value{._field_Data=jule::new_ptr<_1abd5dc4b_Data>()});
		(*(_127829_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_127829_keyA)).get()._field_Kind=_1acd6c033_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_127846_keyB)) != nullptr)) {
		(*(_127846_keyB)).get()._field_Constant=true;
		(*(_127846_keyB)).get()._field_Value=jule::new_ptr<_1abd5ecc4_Value>(_1abd5ecc4_Value{._field_Data=jule::new_ptr<_1abd5dc4b_Data>()});
		(*(_127846_keyB)).get()._field_Kind=jule::new_ptr<_1accaba55_TypeSymbol>(_1accaba55_TypeSymbol{._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(jule::new_ptr<_1acb53743_comptimeFile>(), 18)})});
	};
}



inline void _1acb531e3_step(_1acb5227a_comptimeFiles* _self_, jule::I64 _130023_i, jule::Ptr<_1abd1497c_Var>* _130036_keyA, jule::Ptr<_1abd1497c_Var>* _130053_keyB) {
	if (((*(_130036_keyA)) != nullptr)) {
		(*(_130036_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1ddeb504b_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_130023_i)));
		(*(_130036_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_130036_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_130053_keyB)) != nullptr)) {
		(*(_130053_keyB)).get()._field_Kind.get()._field_Kind.get()._field_Kind.cast_ptr<_1acb53743_comptimeFile>(18).get()._field_file=(*(_self_))._field_files[_130023_i];
	};
}



inline jule::I64 _1acb53457_len(_1acb5227a_comptimeFiles* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_files.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb5227a_comptimeFiles _Src) {
	_Stream << _1acb525dd_Str(&_Src);
	return _Stream;
}



inline jule::Str _1acb53aa6_Str(_1acb53743_comptimeFile* _self_) {
	return jule::Str("comptimeFile", 12);;
}



inline jule::Bool _1acb53db4_Equal(jule::Ptr<_1acb53743_comptimeFile> _self_, jule::Ptr<_1acca4ba2_TypeKind> _132421_other) {
	return false;;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb5438c__Path(jule::Ptr<_1acb53743_comptimeFile> _self_, jule::Ptr<_1acc78e73_Eval>* _132830_e, jule::Ptr<_1acae036c_FnCallExpr>* _132845_fc) {
	if (((*(_132845_fc)).get()._field_Args.len() > 0LL)) {
		_1acc79490_pushErr((*(_132830_e)).ptr(), (*(_132845_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Path", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ddeb4b1c_Const> _133317_constant = static__1ddeb5832_NewStr(_self_.get()._field_file.get()._field_File.get()._field_Path);;
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd690da_primStr, ._field_Model=jule::Any(_133317_constant, &__jule_any_type19), ._field_Constant=_133317_constant});;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb54744__Name(jule::Ptr<_1acb53743_comptimeFile> _self_, jule::Ptr<_1acc78e73_Eval>* _134130_e, jule::Ptr<_1acae036c_FnCallExpr>* _134145_fc) {
	if (((*(_134145_fc)).get()._field_Args.len() > 0LL)) {
		_1acc79490_pushErr((*(_134130_e)).ptr(), (*(_134145_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ddeb4b1c_Const> _134617_constant = static__1ddeb5832_NewStr(_2097d7314_Name(_self_.get()._field_file.get()._field_File.ptr()));;
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd690da_primStr, ._field_Model=jule::Any(_134617_constant, &__jule_any_type19), ._field_Constant=_134617_constant});;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb54aeb__Dir(jule::Ptr<_1acb53743_comptimeFile> _self_, jule::Ptr<_1acc78e73_Eval>* _135429_e, jule::Ptr<_1acae036c_FnCallExpr>* _135444_fc) {
	if (((*(_135444_fc)).get()._field_Args.len() > 0LL)) {
		_1acc79490_pushErr((*(_135429_e)).ptr(), (*(_135444_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Dir", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ddeb4b1c_Const> _135917_constant = static__1ddeb5832_NewStr(_2097d70a0_Dir(_self_.get()._field_file.get()._field_File.ptr()));;
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd690da_primStr, ._field_Model=jule::Any(_135917_constant, &__jule_any_type19), ._field_Constant=_135917_constant});;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb54e09_subIdent(jule::Ptr<_1acb53743_comptimeFile> _self_, jule::Str _136728_ident) {
	{
		auto &_match_expr{ _136728_ident };
		
		if (_match_expr == jule::Str("Path", 4)) {
			_case_begin_1a5d81769:;
			{
				jule::Ptr<_1acb24d85_FnIns> _137021_method = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>([=](jule::Ptr<_1acc78e73_Eval>* _137133_e, jule::Ptr<_1acae036c_FnCallExpr>* _137148_fc, jule::Ptr<_1abd5dc4b_Data>* ) mutable -> jule::Ptr<_1abd5dc4b_Data> {
					return _1acb5438c__Path(_self_, _137133_e, _137148_fc);;
				}), });;
				return _1acb5527d_buildAsComptimeMethodData(&(_137021_method));;
			}
		}
		else if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_1a5d817d0:;
			{
				jule::Ptr<_1acb24d85_FnIns> _137721_method = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>([=](jule::Ptr<_1acc78e73_Eval>* _137833_e, jule::Ptr<_1acae036c_FnCallExpr>* _137848_fc, jule::Ptr<_1abd5dc4b_Data>* ) mutable -> jule::Ptr<_1abd5dc4b_Data> {
					return _1acb54744__Name(_self_, _137833_e, _137848_fc);;
				}), });;
				return _1acb5527d_buildAsComptimeMethodData(&(_137721_method));;
			}
		}
		else if (_match_expr == jule::Str("Dir", 3)) {
			_case_begin_1a5d8158d:;
			{
				jule::Ptr<_1acb24d85_FnIns> _138421_method = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>([=](jule::Ptr<_1acc78e73_Eval>* _138533_e, jule::Ptr<_1acae036c_FnCallExpr>* _138548_fc, jule::Ptr<_1abd5dc4b_Data>* ) mutable -> jule::Ptr<_1abd5dc4b_Data> {
					return _1acb54aeb__Dir(_self_, _138533_e, _138548_fc);;
				}), });;
				return _1acb5527d_buildAsComptimeMethodData(&(_138421_method));;
			}
		}
		else {
			_case_begin_1a5d81181:;
			{
				return nullptr;;
			}
		}
		_match_end_1a5d80955:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1acb53743_comptimeFile _Src) {
	_Stream << _1acb53aa6_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_1abce4671_Sema>*,jule::Slice<jule::Ptr<_1acca3e59_TypeAlias>>*)> _1acb57989_readyFn(jule::Ptr<_1acb5759e_constraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_1abce4671_Sema>*,jule::Slice<jule::Ptr<_1acca3e59_TypeAlias>>*)>([=](jule::Ptr<_1abce4671_Sema>* _6321_sema, jule::Slice<jule::Ptr<_1acca3e59_TypeAlias>>* _6339_generics) mutable -> jule::Bool {
		{
			auto expr = &(_self_.get()._field_genericsD);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a5d8e656:;
			if (it != expr_end) {
				jule::I64 _6418_i = it - expr->begin();
				jule::Ptr<_1acae4272_GenericDecl> _6425_g = *it;
				{
					jule::Ptr<_1acca3420_InsGeneric> _6525_generic = _self_.get()._field_generics[_6418_i];;
					if (((_6425_g.get()._field_Constraint == nullptr) || (_6425_g.get()._field_Constraint.get()._field_Mask.len() == 0LL))) {
						goto _iter_next_1a5d8e656;
					};
					_6525_generic.get()._field_Constraint=jule::Slice<jule::Ptr<_1acca4ba2_TypeKind>>::alloc(0LL, _6425_g.get()._field_Constraint.get()._field_Mask.len());
					{
						auto expr = &(_6425_g.get()._field_Constraint.get()._field_Mask);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a5d91812:;
						if (it != expr_end) {
							jule::Ptr<_1acad72cb_TypeDecl> _7029_mask = *it;
							{
								jule::I64 _7125_n = (*(_6321_sema)).get()._field_errors.len();;
								jule::Ptr<_1acca4ba2_TypeKind> _7229_kind = _1abceb9ec_buildTypeWithRefers((*(_6321_sema)), &(_7029_mask), jule::Trait<_1accc2ecd_Lookup>((*(_6321_sema)), 3), (*(_6339_generics)), nullptr);;
								if ((_7229_kind == nullptr)) {
									{
										auto &_match_expr{ _7029_mask.get()._field_Kind };
										
										if (_match_expr.type == &__jule_any_type20) {
											_case_begin_1a5d934b2:;
											{
												jule::Ptr<_1acad7892_IdentTypeDecl> _7637_itd = _7029_mask.get()._field_Kind.cast_ptr<_1acad7892_IdentTypeDecl>(&__jule_any_type20);;
												if (((_7637_itd.get()._field_Generics.len() == 0LL) && _1acb58b66_isBuiltinConstraint(&(_7637_itd.get()._field_Ident)))) {
													_7229_kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(_1accc064b_buildPrimType(_7637_itd.get()._field_Ident), 20)});
													(*(_6321_sema)).get()._field_errors=(*(_6321_sema)).get()._field_errors.slice(0LL, _7125_n);
													goto _julec_label_success;
												};
											}
										}
										_match_end_1a5d9345c:;
									};
									return false;;
								};
								_julec_label_success:;
								{ jule::Slice<jule::Ptr<_1acca4ba2_TypeKind>> &__jule_push_dest = _6525_generic.get()._field_Constraint; __jule_push_dest.push(_7229_kind); };
							}
							_iter_next_1a5d91812:;
							++it;
							goto _iter_begin_1a5d91812;
						}
						_iter_end_1a5d91812:;
					};
				}
				_iter_next_1a5d8e656:;
				++it;
				_6418_i++;
				goto _iter_begin_1a5d8e656;
			}
			_iter_end_1a5d8e656:;
		};
		return true;;
	});;
}



inline jule::Bool _1acb57bed_readyFi(jule::Ptr<_1acb5759e_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_fi.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_fi.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _1abd010c8_fnEnvironment(_self_.get()._field_s, &(_self_.get()._field_fi), _1acb57989_readyFn(_self_)));;
}



inline jule::Bool _1acb57e62_readySi(jule::Ptr<_1acb5759e_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_si.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_si.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _1acb57989_readyFn(_self_)(&(_self_.get()._field_s), &(_self_.get()._field_genericsA)));;
}



inline jule::Bool _1acb581c6_ready(jule::Ptr<_1acb5759e_constraintChecker> _self_) {
	if ((_self_.get()._field_fi != nullptr)) {
		return _1acb57bed_readyFi(_self_);;
	};
	return _1acb57e62_readySi(_self_);;
}



inline jule::Bool _1acb5843a_check(jule::Ptr<_1acb5759e_constraintChecker> _self_) {
	if ((!(_1acb581c6_ready(_self_)))) {
		return false;;
	};
	_julec_label_lookup:;
	{
		auto expr = &(_self_.get()._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5d9a046:;
		if (it != expr_end) {
			jule::I64 _11914_i = it - expr->begin();
			jule::Ptr<_1acca3420_InsGeneric> _11921_g = *it;
			{
				if ((_11921_g.get()._field_Constraint == nullptr)) {
					goto _iter_next_1a5d9a046;
				};
				{
					auto expr = &(_11921_g.get()._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a5d9aaa2:;
					if (it != expr_end) {
						jule::Ptr<_1acca4ba2_TypeKind> _12325_c2 = *it;
						{
							jule::Ptr<_1accac407_Prim> _12425_prim = _1acca73be_Prim(_12325_c2.ptr());;
							if (((_12425_prim != nullptr) && _1accaceb8_IsConstraint(_12425_prim.ptr()))) {
								if (_1acb5887a_matchConstraint(&(_12425_prim.get()._field_Kind), &(_11921_g.get()._field_Kind))) {
									goto _iter_next_1a5d9a046;
								};
								goto _iter_next_1a5d9aaa2;
							};
							if (_1acca5367_Equal(_12325_c2, _11921_g.get()._field_Kind)) {
								goto _iter_next_1a5d9a046;
							};
						}
						_iter_next_1a5d9aaa2:;
						++it;
						goto _iter_begin_1a5d9aaa2;
					}
					_iter_end_1a5d9aaa2:;
				};
				_1abce7003_pushErr(_self_.get()._field_s.ptr(), _self_.get()._field_et, jule::Str("type @ is not matched with @'s constraint", 41), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_11921_g.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_self_.get()._field_genericsD[_11914_i].get()._field_Ident, &__jule_any_type5)}));
				return false;;
			}
			_iter_next_1a5d9a046:;
			++it;
			_11914_i++;
			goto _iter_begin_1a5d9a046;
		}
		_iter_end_1a5d9a046:;
	};
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb5759e_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1abcb7bd8_IsTraitImpl(_1abcb7831_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1abcb7e4c_IsStructImpl(_1abcb7831_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1abcb7831_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1abcbc935_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1abcbcd31_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1abcbd11c_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1abcbd491_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1abcbd77c_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1abcbe052_IsWhileNext(_1abcbdc00_WhileIter* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1abcbdc00_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1abcbe5d5_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1abcbe9d1_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1abcbed88_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1abcc0174_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1abcc0460_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1abcc0817_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1abcc0c8a_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1abcc1142_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1abcc1c58_IsGenericTypeMatch(_1abcc174c_Match* _self_) {
	return (((*(_self_))._field_TypeMatch && ((*(_self_))._field_Expr != nullptr)) && (*(_self_))._field_Expr.get()._field_Kind.get()._field_Generic);;
}







std::ostream &operator<<(std::ostream &_Stream, _1abcc174c_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1abcc25e9_isDefault(_1abcc2297_Case* _self_) {
	return ((*(_self_))._field_Exprs == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1abcc2297_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1abcc286e_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1abcc2bc1_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1abcc32cb_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1abcc374e_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1abcdb39e_ImportInfo> _1abcc49d6_SelectPackage(_1abcc4563_scopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_1abcdb39e_ImportInfo>)> _45632_selector) {
	return _1abce4ae4_SelectPackage((*(_self_))._field_s.ptr(), _45632_selector);;
}



inline jule::Ptr<_1abd1497c_Var> _1abcc4d8d_FindVar(_1abcc4563_scopeChecker* _self_, jule::Str _46726_ident, jule::Bool _46738_binded) {
	;
	jule::Ptr<_1abd1497c_Var> _47017_v = _1abd5b6b6_findVar((*(_self_))._field_table.ptr(), _46726_ident, _46738_binded, true);;
	if ((_47017_v != nullptr)) {
		return _47017_v;;
	};
	jule::Ptr<_1abcc4563_scopeChecker> _47517_parent = (*(_self_))._field_parent;;
	while ((_47517_parent != nullptr)) {
		{
			_47017_v=_1abd5b6b6_findVar(_47517_parent.get()._field_table.ptr(), _46726_ident, _46738_binded, true);
			if ((_47017_v != nullptr)) {
				return _47017_v;;
			};
			_47517_parent=_47517_parent.get()._field_parent;
		}
	_iter_next_1a5dc31d4:;
	}
	_iter_end_1a5dc31d4:;;
	return _1abce4e9b_FindVar((*(_self_))._field_s.ptr(), _46726_ident, _46738_binded);;
}



inline jule::Ptr<_1acca3e59_TypeAlias> _1abcc5245_FindTypeAlias(_1abcc4563_scopeChecker* _self_, jule::Str _49432_ident, jule::Bool _49444_binded) {
	;
	jule::Ptr<_1acca3e59_TypeAlias> _49717_ta = _1abd5bb17_findTypeAlias((*(_self_))._field_table.ptr(), _49432_ident, _49444_binded, true);;
	if ((_49717_ta != nullptr)) {
		return _49717_ta;;
	};
	jule::Ptr<_1abcc4563_scopeChecker> _50217_parent = (*(_self_))._field_parent;;
	while ((_50217_parent != nullptr)) {
		{
			_49717_ta=_1abd5bb17_findTypeAlias(_50217_parent.get()._field_table.ptr(), _49432_ident, _49444_binded, true);
			if ((_49717_ta != nullptr)) {
				return _49717_ta;;
			};
			_50217_parent=_50217_parent.get()._field_parent;
		}
	_iter_next_1a5dc5c97:;
	}
	_iter_end_1a5dc5c97:;;
	return _1abce5353_FindTypeAlias((*(_self_))._field_s.ptr(), _49432_ident, _49444_binded);;
}



inline jule::Ptr<_1acb07021_Struct> _1abcc55ec_FindStruct(_1abcc4563_scopeChecker* _self_, jule::Str _51929_ident, jule::Bool _51941_binded) {
	return _1abce570a_FindStruct((*(_self_))._field_s.ptr(), _51929_ident, _51941_binded);;
}



inline jule::Ptr<_1acb221d4_Fn> _1abcc59a4_FindFn(_1abcc4563_scopeChecker* _self_, jule::Str _52825_ident, jule::Bool _52837_binded) {
	return _1abce5ab2_FindFn((*(_self_))._field_s.ptr(), _52825_ident, _52837_binded);;
}



inline jule::Ptr<_1acb34405_Trait> _1abcc5cb2_FindTrait(_1abcc4563_scopeChecker* _self_, jule::Str _53728_ident) {
	return _1abce5dc0_FindTrait((*(_self_))._field_s.ptr(), _53728_ident);;
}



inline jule::Ptr<_1acb36b88_Enum> _1abcc60c0_FindEnum(_1abcc4563_scopeChecker* _self_, jule::Str _54627_ident) {
	return _1abce61cd_FindEnum((*(_self_))._field_s.ptr(), _54627_ident);;
}



inline jule::Ptr<_1acb38283_TypeEnum> _1abcc63cd_FindTypeEnum(_1abcc4563_scopeChecker* _self_, jule::Str _55531_ident) {
	return _1abce64db_FindTypeEnum((*(_self_))._field_s.ptr(), _55531_ident);;
}



inline jule::Bool _1abcc670d_isUnsafe(jule::Ptr<_1abcc4563_scopeChecker> _self_) {
	jule::Ptr<_1abcc4563_scopeChecker> _56317_scope = _self_;;
	_julec_label_iter:;
	if (_56317_scope.get()._field_scope.get()._field_Unsafety) {
		return true;;
	};
	if ((_56317_scope.get()._field_parent != nullptr)) {
		_56317_scope=_56317_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Bool _1abcc6972_isRoot(_1abcc4563_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _1abcc6b4d_stop(_1abcc4563_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _1abcc6db2_stopped(_1abcc4563_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _1abcc7126_isDeferred(jule::Ptr<_1abcc4563_scopeChecker> _self_) {
	jule::Ptr<_1abcc4563_scopeChecker> _59617_scope = _self_;;
	_julec_label_iter:;
	if (_59617_scope.get()._field_scope.get()._field_Deferred) {
		return true;;
	};
	if ((_59617_scope.get()._field_parent != nullptr)) {
		_59617_scope=_59617_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Ptr<_1abcc4563_scopeChecker> _1abcc738a_getRoot(jule::Ptr<_1abcc4563_scopeChecker> _self_) {
	jule::Ptr<_1abcc4563_scopeChecker> _61417_root = _self_;;
	while (((_61417_root.get()._field_parent != nullptr) && (_61417_root.get()._field_owner == nullptr))) {
		{
			_61417_root=_61417_root.get()._field_parent;
		}
	_iter_next_1a5dcec4b:;
	}
	_iter_end_1a5dcec4b:;;
	return _61417_root;;
}



inline jule::Ptr<_1abcc4563_scopeChecker> _1abcc75ee_getHardRoot(jule::Ptr<_1abcc4563_scopeChecker> _self_) {
	jule::Ptr<_1abcc4563_scopeChecker> _62417_root = _self_;;
	while ((_62417_root.get()._field_parent != nullptr)) {
		{
			_62417_root=_62417_root.get()._field_parent;
		}
	_iter_next_1a5dd0d29:;
	}
	_iter_end_1a5dd0d29:;;
	return _62417_root;;
}



inline jule::Ptr<_1abcc0174_Label> _1abcc790c_findLabel(_1abcc4563_scopeChecker* _self_, jule::Str _63428_ident) {
	{
		auto expr = &((*(_self_))._field_scope.get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5dd1863:;
		if (it != expr_end) {
			jule::Any _63521_st = *it;
			{
				{
					auto &_match_expr{ _63521_st };
					
					if (_match_expr.type == &__jule_any_type21) {
						_case_begin_1a5dd237a:;
						{
							jule::Ptr<_1abcc0174_Label> _63825_label = _63521_st.cast_ptr<_1abcc0174_Label>(&__jule_any_type21);;
							if ((_63825_label.get()._field_Ident == _63428_ident)) {
								return _63825_label;;
							};
						}
					}
					_match_end_1a5dd227b:;
				};
			}
			_iter_next_1a5dd1863:;
			++it;
			goto _iter_begin_1a5dd1863;
		}
		_iter_end_1a5dd1863:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abcc32cb_scopeLabel> _1abcc7c1a_findLabelScope(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Str _65034_ident) {
	jule::Ptr<_1abcc32cb_scopeLabel> _65117_label = _1abcc8028_findLabelAll(_self_.ptr(), _65034_ident);;
	if (((_65117_label != nullptr) && (_65117_label.get()._field_scope == _self_))) {
		return _65117_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1abcc32cb_scopeLabel> _1abcc8028_findLabelAll(_1abcc4563_scopeChecker* _self_, jule::Str _66231_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5dd446a:;
		if (it != expr_end) {
			jule::Ptr<_1abcc32cb_scopeLabel> _66321_lbl = *it;
			{
				if ((_66321_lbl.get()._field_label.get()._field_Ident == _66231_ident)) {
					return _66321_lbl;;
				};
			}
			_iter_next_1a5dd446a:;
			++it;
			goto _iter_begin_1a5dd446a;
		}
		_iter_end_1a5dd446a:;
	};
	return nullptr;;
}



inline jule::Bool _1abcc83d0_isDuplicatedIdent(_1abcc4563_scopeChecker* _self_, jule::Uintptr _67436_itself, jule::Str _67453_ident) {
	jule::Ptr<_1abd1497c_Var> _67513_v = _1abcc4d8d_FindVar(_self_, _67453_ident, false);;
	if (((_67513_v != nullptr) && (static_cast<jule::Uintptr>(_67513_v) != _67436_itself))) {
		if ((_67513_v.get()._field_Scope == nullptr)) {
			return false;;
		};
		return ((_67513_v.get()._field_Scope == (*(_self_))._field_scope) || (!(_1abce68b5_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	jule::Ptr<_1acca3e59_TypeAlias> _68313_ta = _1abcc5245_FindTypeAlias(_self_, _67453_ident, false);;
	if (((_68313_ta != nullptr) && (static_cast<jule::Uintptr>(_68313_ta) != _67436_itself))) {
		if ((_68313_ta.get()._field_Scope == nullptr)) {
			return false;;
		};
		return ((_68313_ta.get()._field_Scope == (*(_self_))._field_tree) || (!(_1abce68b5_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	return false;;
}



inline void _1abcc8655_checkVarDecl(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Ptr<_1acae98d7_VarDecl> _69436_decl) {
	jule::Ptr<_1abd1497c_Var> _69517_v = _1acb2ccc2_buildVar(_69436_decl);;
	_69517_v.get()._field_Scope=_self_.get()._field_scope;
	__JULE_DEFER({
		{ jule::Slice<jule::Ptr<_1abd1497c_Var>> &__jule_push_dest = _self_.get()._field_table.get()._field_Vars; __jule_push_dest.push(_69517_v); };
		{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_69517_v, &__jule_any_type8)); };
	});;
	if (_1abcc83d0_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_69517_v)), _69517_v.get()._field_Ident)) {
		_1abce7003_pushErr(_self_.get()._field_s.ptr(), _69517_v.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_69517_v.get()._field_Ident, &__jule_any_type5)}));
		_1abce7322_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1abcc6b4d_stop(_self_.ptr());
		return;;
	};
	_1abd0819b_checkVarDecl(_self_.get()._field_s, &(_69517_v), jule::Trait<_1accc2ecd_Lookup>(_self_, 0));
	if (((!(_1abd15065_IsTypeInferred(_69517_v.ptr()))) && ((_69517_v.get()._field_Kind == nullptr) || (_69517_v.get()._field_Kind.get()._field_Kind == nullptr)))) {
		return;;
	};
	_1abd0bd70_checkTypeVar(_self_.get()._field_s, &(_69517_v), jule::Trait<_1accc2ecd_Lookup>(_self_, 0));
}



inline void _1abcc88ca_checkTypeAliasDecl(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Ptr<_1acaed248_TypeAliasDecl> _71842_decl) {
	jule::Ptr<_1acca3e59_TypeAlias> _71917_ta = _1acb29a05_buildTypeAlias(_71842_decl);;
	if (_1abcc83d0_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_71917_ta)), _71917_ta.get()._field_Ident)) {
		_1abce7003_pushErr(_self_.get()._field_s.ptr(), _71917_ta.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_71917_ta.get()._field_Ident, &__jule_any_type5)}));
		_1abce7322_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1abcc6b4d_stop(_self_.ptr());
		return;;
	};
	_1abd0288d_checkTypeAliasDecl(_self_.get()._field_s, &(_71917_ta), jule::Trait<_1accc2ecd_Lookup>(_self_, 0));
	{ jule::Slice<jule::Ptr<_1acca3e59_TypeAlias>> &__jule_push_dest = _self_.get()._field_table.get()._field_TypeAliases; __jule_push_dest.push(_71917_ta); };
	if ((_71917_ta.get()._field_Kind.get()._field_Kind == nullptr)) {
		_1abcc6b4d_stop(_self_.ptr());
	};
}



inline jule::Ptr<_1abcbc935_Scope> _1abcc8b3e_getChild(_1abcc4563_scopeChecker* _self_) {
	return jule::new_ptr<_1abcbc935_Scope>(_1abcbc935_Scope{._field_Parent=(*(_self_))._field_scope, });;
}



inline void _1abcc9007_checkChildSsc(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Ptr<_1acae6e12_ScopeTree>* _74238_tree, jule::Ptr<_1abcbc935_Scope>* _74261_s, jule::Ptr<_1abcc4563_scopeChecker>* _74277_ssc) {
	(*(_74277_ssc)).get()._field_parent=_self_;
	_1abcd44a7_check((*(_74277_ssc)), _74238_tree, _74261_s);
}



inline jule::Ptr<_1abcbc935_Scope> _1abcc93ae_checkChildSc(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Ptr<_1acae6e12_ScopeTree>* _74737_tree, jule::Ptr<_1abcc4563_scopeChecker>* _74760_ssc) {
	jule::Ptr<_1abcbc935_Scope> _74817_s = _1abcc8b3e_getChild(_self_.ptr());;
	_1abcc9007_checkChildSsc(_self_, _74737_tree, &(_74817_s), _74760_ssc);
	return _74817_s;;
}



inline jule::Ptr<_1abcbc935_Scope> _1abcc96bc_checkChild(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Ptr<_1acae6e12_ScopeTree>* _75335_tree) {
	jule::Ptr<_1abcc4563_scopeChecker> _75417_ssc = _1abcd471b_newChildChecker(_self_);;
	return _1abcc93ae_checkChildSc(_self_, _75335_tree, &(_75417_ssc));;
}



inline void _1abcc9942_checkAnonScope(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Ptr<_1acae6e12_ScopeTree> _75838_tree) {
	jule::Ptr<_1abcbc935_Scope> _75917_s = _1abcc96bc_checkChild(_self_, &(_75838_tree));;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_75917_s, &__jule_any_type22)); };
}



inline void _1abcc9c61_processErrorCall(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Ptr<_1acb1d345_BuiltinErrorCallExprModel>* _76341_m, jule::Ptr<_2097d15d8_Token> _76372_err) {
	if (_1abcc7126_isDeferred(_self_)) {
		_1abce7003_pushErr(_self_.get()._field_s.ptr(), _76372_err, jule::Str("deferred scopes are not supports error calls", 44), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1abcc4563_scopeChecker> _76817_root = _1abcc738a_getRoot(_self_);;
	if ((!(_76817_root.get()._field_owner.get()._field_Decl.get()._field_Exceptional))) {
		_1abce7003_pushErr(_self_.get()._field_s.ptr(), _76372_err, jule::Str("error call can only useable for exceptional functions", 53), jule::Slice<jule::Any>());
		_1abce7322_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57), jule::Slice<jule::Any>());
	};
	(*(_76341_m)).get()._field_Func=_76817_root.get()._field_owner;
}



inline void _1abcc9ed6_checkExpr(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Ptr<_1acadb456_Expr> _77633_expr) {
	jule::Ptr<_1acc78e73_Eval> _77717_eval = _1abcedc96_eval(_self_.get()._field_s, jule::Trait<_1accc2ecd_Lookup>(_self_, 0));;
	_77717_eval.get()._field_ignored=true;
	jule::Ptr<_1abd5dc4b_Data> _77917_d = _1acc95984_evalExpr(_77717_eval, _77633_expr);;
	if ((_77917_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _77917_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1a5dedbd2:;
			{
				jule::Ptr<_1acb1d345_BuiltinErrorCallExprModel> _78621_m = _77917_d.get()._field_Model.cast_ptr<_1acb1d345_BuiltinErrorCallExprModel>(&__jule_any_type23);;
				_1abcc9c61_processErrorCall(_self_, &(_78621_m), _77633_expr.get()._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_77917_d, &__jule_any_type24)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type31 || _match_expr.type == &__jule_any_type32 || _match_expr.type == &__jule_any_type33 || _match_expr.type == &__jule_any_type34 || _match_expr.type == &__jule_any_type35) {
			_case_begin_1a5dedde1:;
			{
				{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_77917_d, &__jule_any_type24)); };
			}
		}
		else {
			_case_begin_1a5dedc8c:;
			{
				_1abce7003_pushErr(_self_.get()._field_s.ptr(), _77633_expr.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a5dedd7a:;
	};
}



inline jule::Ptr<_1abcbcd31_If> _1abcca2e4_checkIf(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Ptr<_1acaec247_If> _80631_i) {
	jule::Ptr<_1abcbc935_Scope> _80717_s = _1abcc96bc_checkChild(_self_, &(_80631_i.get()._field_Scope));;
	jule::Ptr<_1abd5dc4b_Data> _80917_d = _1acc95984_evalExpr(_1abcedc96_eval(_self_.get()._field_s, jule::Trait<_1accc2ecd_Lookup>(_self_, 0)), _80631_i.get()._field_Expr);;
	if ((_80917_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1accac407_Prim> _81417_prim = _1acca73be_Prim(_80917_d.get()._field_Kind.ptr());;
	if (((_81417_prim == nullptr) || (!(_1accb0394_IsBool(_81417_prim.ptr()))))) {
		_1abce7003_pushErr(_self_.get()._field_s.ptr(), _80631_i.get()._field_Expr.get()._field_Token, jule::Str("if conditions must be have boolean expression", 45), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1abcbcd31_If>(_1abcbcd31_If{._field_Expr=_80917_d.get()._field_Model, ._field_Scope=_80717_s});;
}



inline jule::Ptr<_1abcbd11c_Else> _1abcca602_checkElse(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Ptr<_1acaec5ee_Else> _82633_e) {
	return jule::new_ptr<_1abcbd11c_Else>(_1abcbd11c_Else{._field_Scope=_1abcc96bc_checkChild(_self_, &(_82633_e.get()._field_Scope))});;
}



inline void _1abcca877_checkConditional(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Ptr<_1acaeca72_Conditional> _83240_conditional) {
	jule::Ptr<_1abcbd491_Conditional> _83317_c = jule::new_ptr<_1abcbd491_Conditional>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_83317_c, &__jule_any_type36)); };
	_83317_c.get()._field_Elifs=jule::Slice<jule::Ptr<_1abcbcd31_If>>::alloc(0LL, (_83240_conditional.get()._field_Tail.len() + 1LL));
	{ jule::Slice<jule::Ptr<_1abcbcd31_If>> &__jule_push_dest = _83317_c.get()._field_Elifs; __jule_push_dest.push(_1abcca2e4_checkIf(_self_, _83240_conditional.get()._field_Head)); };
	{
		auto expr = &(_83240_conditional.get()._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5e07ba8:;
		if (it != expr_end) {
			jule::Ptr<_1acaec247_If> _83921_elif = *it;
			{
				{ jule::Slice<jule::Ptr<_1abcbcd31_If>> &__jule_push_dest = _83317_c.get()._field_Elifs; __jule_push_dest.push(_1abcca2e4_checkIf(_self_, _83921_elif)); };
			}
			_iter_next_1a5e07ba8:;
			++it;
			goto _iter_begin_1a5e07ba8;
		}
		_iter_end_1a5e07ba8:;
	};
	if ((_83240_conditional.get()._field_Default != nullptr)) {
		_83317_c.get()._field_Default=_1abcca602_checkElse(_self_, _83240_conditional.get()._field_Default);
	};
}



inline void _1abccacd9_checkIterScopeSsc(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Uintptr _84837_it, jule::Ptr<_1acae6e12_ScopeTree> _84854_tree, jule::Ptr<_1abcbc935_Scope>* _84877_s, jule::Ptr<_1abcc4563_scopeChecker> _84892_ssc) {
	_84892_ssc.get()._field_it=_84837_it;
	_1abcc9007_checkChildSsc(_self_, &(_84854_tree), _84877_s, &(_84892_ssc));
}



inline jule::Ptr<_1abcbc935_Scope> _1abccb23a_checkIterScopeSc(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Uintptr _85336_it, jule::Ptr<_1acae6e12_ScopeTree> _85353_tree, jule::Ptr<_1abcc4563_scopeChecker> _85375_ssc) {
	jule::Ptr<_1abcbc935_Scope> _85417_scope = _1abcc8b3e_getChild(_self_.ptr());;
	_1abccacd9_checkIterScopeSsc(_self_, _85336_it, _85353_tree, &(_85417_scope), _85375_ssc);
	return _85417_scope;;
}



inline jule::Ptr<_1abcbc935_Scope> _1abccb5e2_checkIterScope(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Uintptr _85934_it, jule::Ptr<_1acae6e12_ScopeTree>* _85952_tree) {
	jule::Ptr<_1abcc4563_scopeChecker> _86017_ssc = _1abcd471b_newChildChecker(_self_);;
	return _1abccb23a_checkIterScopeSc(_self_, _85934_it, (*(_85952_tree)), _86017_ssc);;
}



inline void _1abccb867_checkInfIter(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Ptr<_1acaea3ee_Iter>* _86437_it) {
	jule::Ptr<_1abcbd77c_InfIter> _86517_kind = jule::new_ptr<_1abcbd77c_InfIter>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_86517_kind, &__jule_any_type37)); };
	_86517_kind.get()._field_Scope=_1abccb5e2_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_86517_kind)), &((*(_86437_it)).get()._field_Scope));
}



inline void _1abccbadc_checkWhileIter(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Ptr<_1acaea3ee_Iter>* _87039_it) {
	jule::Ptr<_1acaeabc4_WhileKind> _87117_wh = (*(_87039_it)).get()._field_Kind.cast_ptr<_1acaeabc4_WhileKind>(&__jule_any_type38);;
	if (((_87117_wh.get()._field_Expr == nullptr) && (_87117_wh.get()._field_Next == nullptr))) {
		_1abccb867_checkInfIter(_self_, _87039_it);
		return;;
	};
	jule::Ptr<_1abcbdc00_WhileIter> _87717_kind = jule::new_ptr<_1abcbdc00_WhileIter>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_87717_kind, &__jule_any_type39)); };
	_87717_kind.get()._field_Scope=_1abccb5e2_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_87717_kind)), &((*(_87039_it)).get()._field_Scope));
	if ((_87117_wh.get()._field_Expr != nullptr)) {
		jule::Ptr<_1abd5dc4b_Data> _88221_d = _1acc95984_evalExpr(_1abcedc96_eval(_self_.get()._field_s, jule::Trait<_1accc2ecd_Lookup>(_self_, 0)), _87117_wh.get()._field_Expr);;
		if ((_88221_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1accac407_Prim> _88717_prim = _1acca73be_Prim(_88221_d.get()._field_Kind.ptr());;
		if ((_88717_prim == nullptr)) {
			_1abce7003_pushErr(_self_.get()._field_s.ptr(), (*(_87039_it)).get()._field_Token, jule::Str("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1accb0394_IsBool(_88717_prim.ptr())))) {
			_1abce7003_pushErr(_self_.get()._field_s.ptr(), (*(_87039_it)).get()._field_Token, jule::Str("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		_87717_kind.get()._field_Expr=_88221_d.get()._field_Model;
	};
	if (_1acaeb026_IsWhileNext(_87117_wh.ptr())) {
		if ((!(_1abcbbe62_isValidAstStForNextSt(&(_87117_wh.get()._field_Next))))) {
			_1abce7003_pushErr(_self_.get()._field_s.ptr(), _87117_wh.get()._field_NextToken, jule::Str("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _90717_n = _self_.get()._field_scope.get()._field_Stmts.len();;
		_1abcd3253_checkNode(_self_, &(_87117_wh.get()._field_Next));
		if ((_90717_n < _self_.get()._field_scope.get()._field_Stmts.len())) {
			jule::Any _91025_st = _self_.get()._field_scope.get()._field_Stmts[_90717_n];;
			_self_.get()._field_scope.get()._field_Stmts=_self_.get()._field_scope.get()._field_Stmts.slice(0LL, _90717_n);
			if ((!(_1abcbc209_isValidStForNextSt(&(_91025_st))))) {
				_1abce7003_pushErr(_self_.get()._field_s.ptr(), _87117_wh.get()._field_NextToken, jule::Str("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			};
			_87717_kind.get()._field_Next=_91025_st;
		};
	};
}



inline void _1abccbea5_checkComptimeRangeIter(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Ptr<_1acaea3ee_Iter>* _92047_it, jule::Ptr<_1abcbe5d5_RangeIter>* _92063_kind, jule::Ptr<_1abd5dc4b_Data>* _92086_d) {
	if (((*(_92063_kind)).get()._field_KeyA != nullptr)) {
		if (((!(_1abce68b5_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1abcc83d0_isDuplicatedIdent(_self_.ptr(), 0LLU, (*(_92063_kind)).get()._field_KeyA.get()._field_Ident))) {
			_1abce7003_pushErr(_self_.get()._field_s.ptr(), (*(_92063_kind)).get()._field_KeyA.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_92063_kind)).get()._field_KeyA.get()._field_Ident, &__jule_any_type5)}));
			_1abce7322_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	if (((*(_92063_kind)).get()._field_KeyB != nullptr)) {
		if (((!(_1abce68b5_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1abcc83d0_isDuplicatedIdent(_self_.ptr(), 0LLU, (*(_92063_kind)).get()._field_KeyB.get()._field_Ident))) {
			_1abce7003_pushErr(_self_.get()._field_s.ptr(), (*(_92063_kind)).get()._field_KeyB.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_92063_kind)).get()._field_KeyB.get()._field_Ident, &__jule_any_type5)}));
			_1abce7322_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_1acb3a3d9_comptimeRange> _93417_comptime = _1accaa4b0_comptimeRange((*(_92086_d)).get()._field_Kind.ptr());;
	_1acb3a20d_comptimeRangeKind_mptr_data[(_93417_comptime.get()._field_kind).type_offset]._1acb3998d_ready(_93417_comptime.get()._field_kind, &((*(_92063_kind)).get()._field_KeyA), &((*(_92063_kind)).get()._field_KeyB));
	jule::I64 _93617_i = 0LL;;
	jule::I64 _93713_errors = _self_.get()._field_s.get()._field_errors.len();;
	for (; (_93617_i < _1acb3a20d_comptimeRangeKind_mptr_data[(_93417_comptime.get()._field_kind).type_offset]._1acb3a0ba_len(_93417_comptime.get()._field_kind)); (_93617_i)++) {
		{
			jule::Ptr<_1abcc4563_scopeChecker> _93921_ssc = _1abcd471b_newChildChecker(_self_);;
			jule::Ptr<_1abcbc935_Scope> _94021_scope = _1abcc8b3e_getChild(_self_.ptr());;
			if (((*(_92063_kind)).get()._field_KeyA != nullptr)) {
				(*(_92063_kind)).get()._field_KeyA.get()._field_Scope=_94021_scope;
				{ jule::Slice<jule::Ptr<_1abd1497c_Var>> &__jule_push_dest = _93921_ssc.get()._field_table.get()._field_Vars; __jule_push_dest.push((*(_92063_kind)).get()._field_KeyA); };
			};
			if (((*(_92063_kind)).get()._field_KeyB != nullptr)) {
				(*(_92063_kind)).get()._field_KeyB.get()._field_Scope=_94021_scope;
				{ jule::Slice<jule::Ptr<_1abd1497c_Var>> &__jule_push_dest = _93921_ssc.get()._field_table.get()._field_Vars; __jule_push_dest.push((*(_92063_kind)).get()._field_KeyB); };
			};
			_1acb3a20d_comptimeRangeKind_mptr_data[(_93417_comptime.get()._field_kind).type_offset]._1acb39d56_step(_93417_comptime.get()._field_kind, _93617_i, &((*(_92063_kind)).get()._field_KeyA), &((*(_92063_kind)).get()._field_KeyB));
			_1abcc9007_checkChildSsc(_self_, &((*(_92047_it)).get()._field_Scope), &(_94021_scope), &(_93921_ssc));
			if ((_93713_errors != _self_.get()._field_s.get()._field_errors.len())) {
				goto _iter_end_1a5e1ca69;
			};
			{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_94021_scope, &__jule_any_type22)); };
		}
	_iter_next_1a5e1ca69:;
	}
	_iter_end_1a5e1ca69:;;
}



inline void _1abccc22a_checkRangeIter(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Ptr<_1acaea3ee_Iter>* _95939_it) {
	jule::Ptr<_1acaeb565_RangeKind> _96017_rang = (*(_95939_it)).get()._field_Kind.cast_ptr<_1acaeb565_RangeKind>(&__jule_any_type40);;
	jule::Ptr<_1abd5dc4b_Data> _96217_d = _1acc95676_evalExpr1(_1abcedc96_eval(_self_.get()._field_s, jule::Trait<_1accc2ecd_Lookup>(_self_, 0)), _96017_rang.get()._field_Expr);;
	if ((_96217_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1abcbe5d5_RangeIter> _96717_kind = jule::new_ptr<_1abcbe5d5_RangeIter>(_1abcbe5d5_RangeIter{._field_Expr=_96217_d, });;
	_1abd54b76_rangeChecker _97117_rc = _1abd54b76_rangeChecker{._field_sc=_self_, ._field_rang=_96017_rang, ._field_Kind=_96717_kind, ._field_d=_96217_d};;
	jule::Bool _97713_ok = _1abd5699c_check(&_97117_rc);;
	if ((!(_97713_ok))) {
		return;;
	};
	jule::Ptr<_1acb3a3d9_comptimeRange> _98217_comptimeRange = _1accaa4b0_comptimeRange(_96217_d.get()._field_Kind.ptr());;
	if ((_98217_comptimeRange != nullptr)) {
		_1abccbea5_checkComptimeRangeIter(_self_, _95939_it, &(_96717_kind), &(_96217_d));
		return;;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_96717_kind, &__jule_any_type41)); };
	jule::Ptr<_1abcc4563_scopeChecker> _99017_ssc = _1abcd471b_newChildChecker(_self_);;
	jule::Ptr<_1abcbc935_Scope> _99117_scope = _1abcc8b3e_getChild(_self_.ptr());;
	if ((_96717_kind.get()._field_KeyA != nullptr)) {
		if (((!(_1abce68b5_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1abcc83d0_isDuplicatedIdent(_self_.ptr(), 0LLU, _96717_kind.get()._field_KeyA.get()._field_Ident))) {
			_1abce7003_pushErr(_self_.get()._field_s.ptr(), _96717_kind.get()._field_KeyA.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_96717_kind.get()._field_KeyA.get()._field_Ident, &__jule_any_type5)}));
			_1abce7322_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		_96717_kind.get()._field_KeyA.get()._field_Scope=_99117_scope;
		{ jule::Slice<jule::Ptr<_1abd1497c_Var>> &__jule_push_dest = _99017_ssc.get()._field_table.get()._field_Vars; __jule_push_dest.push(_96717_kind.get()._field_KeyA); };
	};
	if ((_96717_kind.get()._field_KeyB != nullptr)) {
		if (((!(_1abce68b5_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1abcc83d0_isDuplicatedIdent(_self_.ptr(), 0LLU, _96717_kind.get()._field_KeyB.get()._field_Ident))) {
			_1abce7003_pushErr(_self_.get()._field_s.ptr(), _96717_kind.get()._field_KeyB.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_96717_kind.get()._field_KeyB.get()._field_Ident, &__jule_any_type5)}));
			_1abce7322_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		_96717_kind.get()._field_KeyB.get()._field_Scope=_99117_scope;
		{ jule::Slice<jule::Ptr<_1abd1497c_Var>> &__jule_push_dest = _99017_ssc.get()._field_table.get()._field_Vars; __jule_push_dest.push(_96717_kind.get()._field_KeyB); };
	};
	_1abccacd9_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_96717_kind)), (*(_95939_it)).get()._field_Scope, &(_99117_scope), _99017_ssc);
	_96717_kind.get()._field_Scope=_99117_scope;
}



inline void _1abccc4a0_checkIter(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Ptr<_1acaea3ee_Iter> _101533_it) {
	if (_1acaea751_IsInf(_101533_it.ptr())) {
		_1abccb867_checkInfIter(_self_, &(_101533_it));
		return;;
	};
	{
		auto &_match_expr{ _101533_it.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1a5e2d4b4:;
			{
				_1abccbadc_checkWhileIter(_self_, &(_101533_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1a5e2d01e:;
			{
				_1abccc22a_checkRangeIter(_self_, &(_101533_it));
			}
		}
		else {
			_case_begin_1a5e2c936:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1a5e2c8d1:;
	};
}



inline jule::Bool _1abccc7ad_checkValidContLabel(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Uintptr _103139_it) {
	jule::Ptr<_1abcc4563_scopeChecker> _103217_scope = _self_;;
	_julec_label_iter:;
	if ((_103217_scope.get()._field_it == _103139_it)) {
		return true;;
	};
	if ((_103217_scope.get()._field_parent != nullptr)) {
		_103217_scope=_103217_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Bool _1abcccabb_checkValidBreakLabel(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Uintptr _104740_ptr) {
	jule::Ptr<_1abcc4563_scopeChecker> _104817_scope = _self_;;
	_julec_label_iter:;
	if ((_104817_scope.get()._field_it == _104740_ptr)) {
		return true;;
	};
	if ((_104817_scope.get()._field_cse != 0LLU)) {
		jule::Uintptr _105617_mtch = static_cast<jule::Uintptr>(((_1abcc2297_Case*)(_104817_scope.get()._field_cse))->_field_Owner);;
		if ((_105617_mtch == _104740_ptr)) {
			return true;;
		};
	};
	if ((_104817_scope.get()._field_parent != nullptr)) {
		_104817_scope=_104817_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Ptr<_1abcbe9d1_ContSt> _1abcccdc9_checkContValidScope(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Ptr<_1acaebcc4_ContSt> _107039_c) {
	if (_1abcc7126_isDeferred(_self_)) {
		_1abce7003_pushErr(_self_.get()._field_s.ptr(), _107039_c.get()._field_Token, jule::Str("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_107039_c.get()._field_Label != nullptr)) {
		return jule::new_ptr<_1abcbe9d1_ContSt>();;
	};
	jule::Ptr<_1abcc4563_scopeChecker> _108017_scope = _self_;;
	_julec_label_iter:;
	{
		
		if ((((_108017_scope.get()._field_it == 0LLU) && (_108017_scope.get()._field_parent != nullptr)) && (_108017_scope.get()._field_owner == nullptr))) {
			_case_begin_1a5e353cd:;
			{
				_108017_scope=_108017_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_108017_scope.get()._field_it != 0LLU)) {
			_case_begin_1a5e35455:;
			{
				return jule::new_ptr<_1abcbe9d1_ContSt>(_1abcbe9d1_ContSt{._field_It=_108017_scope.get()._field_it});;
			}
		}
		_match_end_1a5e35323:;
	};
	_1abce7003_pushErr(_self_.get()._field_s.ptr(), _107039_c.get()._field_Token, jule::Str("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1abccd14e_checkCont(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Ptr<_1acaebcc4_ContSt> _109429_c) {
	jule::Ptr<_1abcbe9d1_ContSt> _109517_cont = _1abcccdc9_checkContValidScope(_self_, _109429_c);;
	if ((_109517_cont == nullptr)) {
		return;;
	};
	if ((_109429_c.get()._field_Label != nullptr)) {
		jule::Ptr<_1abcc32cb_scopeLabel> _110121_label = _1abcba13b_findLabelParent(_109429_c.get()._field_Label.get()._field_Kind, _self_.get()._field_parent);;
		if ((_110121_label == nullptr)) {
			_1abce7003_pushErr(_self_.get()._field_s.ptr(), _109429_c.get()._field_Label, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any(_109429_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
			return;;
		};
		_110121_label.get()._field_used=true;
		if (((_110121_label.get()._field_pos + 1LL) >= _110121_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_1abce7003_pushErr(_self_.get()._field_s.ptr(), _109429_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_109429_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
			return;;
		};
		jule::I64 _111417_i = (_110121_label.get()._field_pos + 1LL);;
		if ((_111417_i >= _110121_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_1abce7003_pushErr(_self_.get()._field_s.ptr(), _109429_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>());
		} else {
			jule::Any _111825_st = _110121_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_111417_i];;
			{
				auto &_match_expr{ _111825_st };
				
				if (_match_expr.type == &__jule_any_type37) {
					_case_begin_1a5e3ca67:;
					{
						_109517_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_111825_st.cast_ptr<_1abcbd77c_InfIter>(&__jule_any_type37)));
					}
				}
				else if (_match_expr.type == &__jule_any_type41) {
					_case_begin_1a5e3d2a4:;
					{
						_109517_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_111825_st.cast_ptr<_1abcbe5d5_RangeIter>(&__jule_any_type41)));
					}
				}
				else if (_match_expr.type == &__jule_any_type39) {
					_case_begin_1a5e3d31a:;
					{
						_109517_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_111825_st.cast_ptr<_1abcbdc00_WhileIter>(&__jule_any_type39)));
					}
				}
				else {
					_case_begin_1a5e3d11c:;
					{
						_1abce7003_pushErr(_self_.get()._field_s.ptr(), _109429_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_109429_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
					}
				}
				_match_end_1a5e3d0b7:;
			};
		};
	};
	if ((_109517_cont.get()._field_It != 0LLU)) {
		if ((!(_1abccc7ad_checkValidContLabel(_self_, _109517_cont.get()._field_It)))) {
			_1abce7003_pushErr(_self_.get()._field_s.ptr(), _109429_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_109429_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		};
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_109517_cont, &__jule_any_type42)); };
}



inline void _1abccd3c4_checkLabel(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Ptr<_1acae4629_LabelSt> _114134_l) {
	if ((_1abcc790c_findLabel(_self_.ptr(), _114134_l.get()._field_Ident) != nullptr)) {
		_1abce7003_pushErr(_self_.get()._field_s.ptr(), _114134_l.get()._field_Token, jule::Str("label is already exist in this identifier: @", 44), jule::Slice<jule::Any>::make({jule::Any(_114134_l.get()._field_Ident, &__jule_any_type5)}));
		return;;
	};
	jule::Ptr<_1abcc0174_Label> _114717_label = jule::new_ptr<_1abcc0174_Label>(_1abcc0174_Label{._field_Ident=_114134_l.get()._field_Ident});;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_114717_label, &__jule_any_type21)); };
	{ jule::Slice<jule::Ptr<_1abcc32cb_scopeLabel>> &__jule_push_dest = (*(_self_.get()._field_labels)); __jule_push_dest.push(jule::new_ptr<_1abcc32cb_scopeLabel>(_1abcc32cb_scopeLabel{._field_token=_114134_l.get()._field_Token, ._field_label=_114717_label, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL)), ._field_scope=_self_, })); };
}



inline void _1abccd649_pushGoto(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Ptr<_1acae49d1_GotoSt> _116032_gt) {
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_1abcc0460_GotoSt>(_1abcc0460_GotoSt{._field_Ident=_116032_gt.get()._field_Label.get()._field_Kind}), &__jule_any_type43)); };
	{ jule::Slice<jule::Ptr<_1abcc374e_scopeGoto>> &__jule_push_dest = (*(_self_.get()._field_gotos)); __jule_push_dest.push(jule::new_ptr<_1abcc374e_scopeGoto>(_1abcc374e_scopeGoto{._field_gt=_116032_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL))})); };
}



inline void _1abccd8be_checkPostfix(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Ptr<_1acae5916_AssignSt> _117236_a) {
	if ((_117236_a.get()._field_Left.len() > 1LL)) {
		_1abce7003_pushErr(_self_.get()._field_s.ptr(), _117236_a.get()._field_Setter, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1acadb456_Expr> _117817_expr = _117236_a.get()._field_Left[0LL].get()._field_Expr;;
	jule::Ptr<_1abd5dc4b_Data> _117917_d = _1acc95984_evalExpr(_1abcedc96_eval(_self_.get()._field_s, jule::Trait<_1accc2ecd_Lookup>(_self_, 0)), _117817_expr);;
	if ((_117917_d == nullptr)) {
		return;;
	};
	_1abcbbbba_checkAssign(&(_self_.get()._field_s), &(_117917_d), nullptr, _117236_a.get()._field_Setter);
	if ((_1acca7897_Ptr(_117917_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1accb41bc_Ptr> _118721_ptr = _1acca7897_Ptr(_117917_d.get()._field_Kind.ptr());;
		if (_1accb4b90_IsUnsafe(_118721_ptr.ptr())) {
			_1abce7003_pushErr(_self_.get()._field_s.ptr(), _117236_a.get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any(_117236_a.get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_1acca5059_Str(_117917_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return;;
		};
	} else {
		if (((_1acca73be_Prim(_117917_d.get()._field_Kind.ptr()) == nullptr) || (!(_1ddeb4611_IsNum(_1acca73be_Prim(_117917_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1abce7003_pushErr(_self_.get()._field_s.ptr(), _117236_a.get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any(_117236_a.get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_1acca5059_Str(_117917_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return;;
		};
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_1abcc0817_Postfix>(_1abcc0817_Postfix{._field_Expr=_117917_d.get()._field_Model, ._field_Op=_117236_a.get()._field_Setter.get()._field_Kind}), &__jule_any_type44)); };
}



inline jule::Bool _1abccdbcc_isNewAssignIdent(_1abcc4563_scopeChecker* _self_, jule::Str _120535_ident) {
	if ((_2097d3d7c_IsIgnoreIdent(_120535_ident) || _120535_ident.empty())) {
		return false;;
	};
	return (_1abd5bebe_defByIdent((*(_self_))._field_table.ptr(), _120535_ident, false) == nullptr);;
}



inline jule::Bool _1abcce12d_checkStructureAssignOp(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Ptr<_1acb09d37_StructIns>* _121247_s, jule::Ptr<_1acae5916_AssignSt>* _121267_a, jule::Ptr<_1abd5dc4b_Data>* _121286_r) {
	jule::Ptr<_1acb24d85_FnIns> _121517_overload = nullptr;;
	{
		auto &_match_expr{ (*(_121267_a)).get()._field_Setter.get()._field_Kind };
		
		if (_match_expr == jule::Str("+=", 2)) {
			_case_begin_1a5e50a36:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == jule::Str("-=", 2)) {
			_case_begin_1a5e4e5b2:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == jule::Str("/=", 2)) {
			_case_begin_1a5e4ea02:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == jule::Str("*=", 2)) {
			_case_begin_1a5e4ea68:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == jule::Str("%=", 2)) {
			_case_begin_1a5e4eace:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == jule::Str("<<=", 3)) {
			_case_begin_1a5e4eb45:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == jule::Str(">>=", 3)) {
			_case_begin_1a5e50a9c:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == jule::Str("|=", 2)) {
			_case_begin_1a5e50b13:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == jule::Str("&=", 2)) {
			_case_begin_1a5e50b79:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == jule::Str("^=", 2)) {
			_case_begin_1a5e50be0:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1a5e4e98b:;
			{
				_1abce7003_pushErr(_self_.get()._field_s.ptr(), (*(_121267_a)).get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_121267_a)).get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_1acb0a19a_Str((*(_121247_s)).ptr()), &__jule_any_type5)}));
				return false;;
			}
		}
		_match_end_1a5e4e408:;
	};
	if ((_121517_overload == nullptr)) {
		_1abce7003_pushErr(_self_.get()._field_s.ptr(), (*(_121267_a)).get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_121267_a)).get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_1acb0a19a_Str((*(_121247_s)).ptr()), &__jule_any_type5)}));
		return false;;
	};
	jule::Ptr<_1acb23eb6_ParamIns> _124717_p = _121517_overload.get()._field_Params[1LL];;
	return _1abcee291_checkAssignType(_self_.get()._field_s, _124717_p.get()._field_Decl.get()._field_Reference, &(_124717_p.get()._field_Kind), _121286_r, (*(_121267_a)).get()._field_Setter);;
}



inline void _1abcce3a3_checkSingleAssign(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Ptr<_1acae5916_AssignSt>* _125142_a) {
	jule::Ptr<_1abd5dc4b_Data> _125217_l = nullptr;;
	if ((!(_2097d3d7c_IsIgnoreIdent((*(_125142_a)).get()._field_Left[0LL].get()._field_Ident)))) {
		jule::Ptr<_1acadb456_Expr> _125521_expr = (*(_125142_a)).get()._field_Left[0LL].get()._field_Expr;;
		_125217_l=_1acc95984_evalExpr(_1abcedc96_eval(_self_.get()._field_s, jule::Trait<_1accc2ecd_Lookup>(_self_, 0)), _125521_expr);
		if ((_125217_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1acc78e73_Eval> _126217_eval = nullptr;;
	if ((_125217_l != nullptr)) {
		_126217_eval=_1abced988_evalp(_self_.get()._field_s, jule::Trait<_1accc2ecd_Lookup>(_self_, 0), _125217_l.get()._field_Kind);
	} else {
		_126217_eval=_1abcedc96_eval(_self_.get()._field_s, jule::Trait<_1accc2ecd_Lookup>(_self_, 0));
	};
	_126217_eval.get()._field_unsafety=_1abcc670d_isUnsafe(_self_);
	jule::Ptr<_1abd5dc4b_Data> _126917_r = _1acc95984_evalExpr(_126217_eval, (*(_125142_a)).get()._field_Right);;
	if ((_126917_r == nullptr)) {
		return;;
	};
	if ((_125217_l == nullptr)) {
		if (_1acca5e6c_Void(_126917_r.get()._field_Kind.ptr())) {
			_1abce7003_pushErr(_self_.get()._field_s.ptr(), (*(_125142_a)).get()._field_Right.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_126917_r, &__jule_any_type24)); };
		return;;
	};
	if ((!(_1abcbbbba_checkAssign(&(_self_.get()._field_s), &(_125217_l), _126917_r, (*(_125142_a)).get()._field_Setter)))) {
		return;;
	};
	if ((_1acca905d_Tup(_126917_r.get()._field_Kind.ptr()) != nullptr)) {
		_1abce7003_pushErr(_self_.get()._field_s.ptr(), (*(_125142_a)).get()._field_Setter, jule::Str("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1acb0dc3c_OperandExprModel> _129117_lm = jule::new_ptr<_1acb0dc3c_OperandExprModel>(_1acb0dc3c_OperandExprModel{._field_Kind=_125217_l.get()._field_Kind, ._field_Model=_125217_l.get()._field_Model});;
	jule::Ptr<_1acb0dc3c_OperandExprModel> _129517_rm = jule::new_ptr<_1acb0dc3c_OperandExprModel>(_1acb0dc3c_OperandExprModel{._field_Kind=_126917_r.get()._field_Kind, ._field_Model=_126917_r.get()._field_Model});;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_1abcc0c8a_Assign>(_1abcc0c8a_Assign{._field_L=_129117_lm, ._field_R=_129517_rm, ._field_Op=(*(_125142_a)).get()._field_Setter}), &__jule_any_type45)); };
	if ((!(*(_125142_a)).get()._field_Setter.get()._field_Kind.equal("=", 1))) {
		jule::Ptr<_1acb09d37_StructIns> _130221_strct = _1acca8821_Struct(_125217_l.get()._field_Kind.ptr());;
		if ((_130221_strct != nullptr)) {
			_1abcce12d_checkStructureAssignOp(_self_, &(_130221_strct), _125142_a, &(_126917_r));
			return;;
		};
		(*(_125142_a)).get()._field_Setter.get()._field_Kind=(*(_125142_a)).get()._field_Setter.get()._field_Kind.slice(0LL, ((*(_125142_a)).get()._field_Setter.get()._field_Kind.len() - 1LL));
		_1acc97bd9_binaryEval _130921_solver = static__1acc98602_new(_126217_eval, (*(_125142_a)).get()._field_Setter);;
		_126917_r=_1acc9d45e_solveExplicit(&_130921_solver, &(_125217_l), &(_126917_r));
		if ((_126917_r == nullptr)) {
			return;;
		};
		((*(_125142_a)).get()._field_Setter.get()._field_Kind).append("=", 1);
		return;;
	};
	_1abd492db_assignTypeChecker _131817_checker = _1abd492db_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_125217_l.get()._field_Kind, ._field_d=_126917_r, ._field_errorToken=(*(_125142_a)).get()._field_Setter};;
	if (_1abd4a463_check(&_131817_checker)) {
		_129517_rm.get()._field_Model=_126917_r.get()._field_Model;
		_129117_lm.get()._field_Model=_125217_l.get()._field_Model;
	};
}



inline void _1abcce8d1_processEndPartOfMultiAssign(_1abcc4563_scopeChecker* _self_, jule::Ptr<_1abcc1142_MultiAssign>* _133051_st, jule::Ptr<_1acae5916_AssignSt>* _133114_a, jule::Ptr<_1acae53c7_AssignLeft>* _133133_lexpr, jule::Ptr<_1abd5dc4b_Data>* _133158_l, jule::Ptr<_1abd5dc4b_Data>* _133173_r) {
	if (((!((*(_133133_lexpr)).get()._field_Reference)) && _2097d3d7c_IsIgnoreIdent((*(_133133_lexpr)).get()._field_Ident))) {
		if (_1acca5e6c_Void((*(_133173_r)).get()._field_Kind.ptr())) {
			_1abce7003_pushErr((*(_self_))._field_s.ptr(), (*(_133114_a)).get()._field_Right.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Ptr<_1abd5dc4b_Data>> &__jule_push_dest = (*(_133051_st)).get()._field_L; __jule_push_dest.push(nullptr); };
		return;;
	};
	if (((*(_133114_a)).get()._field_Declarative && ((*(_133133_lexpr)).get()._field_Reference || _1abccdbcc_isNewAssignIdent(_self_, (*(_133133_lexpr)).get()._field_Ident)))) {
		if (_1abcc83d0_isDuplicatedIdent(_self_, 0LLU, (*(_133133_lexpr)).get()._field_Ident)) {
			_1abce7003_pushErr((*(_self_))._field_s.ptr(), (*(_133133_lexpr)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_133133_lexpr)).get()._field_Ident, &__jule_any_type5)}));
			_1abce7322_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
			_1abcc6b4d_stop(_self_);
			return;;
		};
		if (_2097d3d7c_IsIgnoreIdent((*(_133133_lexpr)).get()._field_Ident)) {
			_1abce7003_pushErr((*(_self_))._field_s.ptr(), (*(_133133_lexpr)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1abd1497c_Var> _135221_v = jule::new_ptr<_1abd1497c_Var>(_1abd1497c_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*(_133133_lexpr)).get()._field_Token, ._field_Ident=(*(_133133_lexpr)).get()._field_Ident, ._field_Mutable=(*(_133133_lexpr)).get()._field_Mutable, ._field_Reference=(*(_133133_lexpr)).get()._field_Reference, ._field_Value=jule::new_ptr<_1abd5ecc4_Value>(_1abd5ecc4_Value{._field_Expr=(*(_133114_a)).get()._field_Right, ._field_Data=(*(_133173_r))}), });;
		_1abd0ba51_checkVar((*(_self_))._field_s, &(_135221_v));
		_135221_v.get()._field_Value=nullptr;
		{ jule::Slice<jule::Ptr<_1abd5dc4b_Data>> &__jule_push_dest = (*(_133051_st)).get()._field_L; __jule_push_dest.push(jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_135221_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_135221_v.get()._field_Mutable, ._field_Reference=_135221_v.get()._field_Reference, ._field_Lvalue=(!(_135221_v.get()._field_Constant)), ._field_Model=jule::Any(_135221_v, &__jule_any_type8), })); };
		{ jule::Slice<jule::Ptr<_1abd1497c_Var>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Vars; __jule_push_dest.push(_135221_v); };
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_135221_v, &__jule_any_type8)); };
		return;;
	};
	if (((*(_133133_lexpr)).get()._field_Mutable || (*(_133133_lexpr)).get()._field_Reference)) {
		_1abce7003_pushErr((*(_self_))._field_s.ptr(), (*(_133133_lexpr)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_133133_lexpr)).get()._field_Ident, &__jule_any_type5)}));
		_1abce7322_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if ((!(_1abcbbbba_checkAssign(&((*(_self_))._field_s), _133158_l, (*(_133173_r)), (*(_133114_a)).get()._field_Setter)))) {
		return;;
	};
	;
	_1abd021a6_checkValidityForInitExpr((*(_self_))._field_s, (*(_133158_l)).get()._field_Mutable, false, &((*(_133158_l)).get()._field_Kind), _133173_r, &((*(_133114_a)).get()._field_Setter));
	_1abd492db_assignTypeChecker _139517_checker = _1abd492db_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_133158_l)).get()._field_Kind, ._field_d=(*(_133173_r)), ._field_errorToken=(*(_133114_a)).get()._field_Setter};;
	_1abd4a463_check(&_139517_checker);
	{ jule::Slice<jule::Ptr<_1abd5dc4b_Data>> &__jule_push_dest = (*(_133051_st)).get()._field_L; __jule_push_dest.push((*(_133158_l))); };
}



inline void _1abcceb67_checkMultiAssign(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Ptr<_1acae5916_AssignSt>* _140541_a) {
	jule::Ptr<_1abd5dc4b_Data> _140617_rd = _1acc95984_evalExpr(_1abcedc96_eval(_self_.get()._field_s, jule::Trait<_1accc2ecd_Lookup>(_self_, 0)), (*(_140541_a)).get()._field_Right);;
	if ((_140617_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1abd5dc4b_Data>> _141017_right = _1abcbadea_getDatasFromTupleData(&(_140617_rd));;
	if ((_141017_right.len() == 1LL)) {
		{
			auto &_match_expr{ _141017_right[0LL].get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type46) {
				_case_begin_1a5e70814:;
				{
					jule::Ptr<_1acb11899_IndexingExprModel> _141425_iem = _141017_right[0LL].get()._field_Model.cast_ptr<_1acb11899_IndexingExprModel>(&__jule_any_type46);;
					if ((_1acca8ce9_Map(_141425_iem.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
						_141017_right=jule::Slice<jule::Ptr<_1abd5dc4b_Data>>::make({jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acca8ce9_Map(_141425_iem.get()._field_Expr.get()._field_Kind.ptr()).get()._field_Val, }),jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd693e8_primBool, })});
					};
				}
			}
			_match_end_1a5e707ae:;
		};
	};
	{
		
		if (((*(_140541_a)).get()._field_Left.len() > _141017_right.len())) {
			_case_begin_1a5e70407:;
			{
				_1abce7003_pushErr(_self_.get()._field_s.ptr(), (*(_140541_a)).get()._field_Setter, jule::Str("overflow multi assignment identifers", 36), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*(_140541_a)).get()._field_Left.len() < _141017_right.len())) {
			_case_begin_1a5e7047e:;
			{
				_1abce7003_pushErr(_self_.get()._field_s.ptr(), (*(_140541_a)).get()._field_Setter, jule::Str("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1a5e701a4:;
	};
	jule::Ptr<_1abcc1142_MultiAssign> _143317_st = jule::new_ptr<_1abcc1142_MultiAssign>(_1abcc1142_MultiAssign{._field_R=_140617_rd.get()._field_Model});;
	{
		auto expr = &((*(_140541_a)).get()._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5e741db:;
		if (it != expr_end) {
			jule::I64 _143613_i = it - expr->begin();
			{
				jule::Ptr<_1acae53c7_AssignLeft> _143721_lexpr = (*(_140541_a)).get()._field_Left[_143613_i];;
				jule::Ptr<_1abd5dc4b_Data> _143821_l = nullptr;;
				if (((!(_2097d3d7c_IsIgnoreIdent(_143721_lexpr.get()._field_Ident))) && ((!((*(_140541_a)).get()._field_Declarative)) || (!(_1abccdbcc_isNewAssignIdent(_self_.ptr(), _143721_lexpr.get()._field_Ident)))))) {
					_143821_l=_1acc95984_evalExpr(_1abcedc96_eval(_self_.get()._field_s, jule::Trait<_1accc2ecd_Lookup>(_self_, 0)), _143721_lexpr.get()._field_Expr);
					if ((_143821_l == nullptr)) {
						goto _iter_next_1a5e741db;
					};
				};
				jule::Ptr<_1abd5dc4b_Data> _144621_r = _141017_right[_143613_i];;
				_1abcce8d1_processEndPartOfMultiAssign(_self_.ptr(), &(_143317_st), _140541_a, &(_143721_lexpr), &(_143821_l), &(_144621_r));
			}
			_iter_next_1a5e741db:;
			++it;
			_143613_i++;
			goto _iter_begin_1a5e741db;
		}
		_iter_end_1a5e741db:;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_143317_st, &__jule_any_type47)); };
}



inline void _1abcceddc_checkAssignSt(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Ptr<_1acae5916_AssignSt> _145237_a) {
	{
		
		if (_2097d5e28_IsPostfixOp(_145237_a.get()._field_Setter.get()._field_Kind)) {
			_case_begin_1a5e7818a:;
			{
				_1abccd8be_checkPostfix(_self_, _145237_a);
			}
		}
		else if (((_145237_a.get()._field_Left.len() == 1LL) && (!(_145237_a.get()._field_Declarative)))) {
			_case_begin_1a5e78564:;
			{
				_1abcce3a3_checkSingleAssign(_self_, &(_145237_a));
			}
		}
		else {
			_case_begin_1a5e7483a:;
			{
				_1abcceb67_checkMultiAssign(_self_, &(_145237_a));
			}
		}
		_match_end_1a5e7476e:;
	};
}



inline jule::Ptr<_1abcbc935_Scope> _1abcd0294_checkCaseScope(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Ptr<_1abcc2297_Case>* _146335_c, jule::Ptr<_1acae6e12_ScopeTree>* _146350_tree) {
	jule::Ptr<_1abcc4563_scopeChecker> _146417_ssc = _1abcd471b_newChildChecker(_self_);;
	_146417_ssc.get()._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_146335_c))));
	return _1abcc93ae_checkChildSc(_self_, _146350_tree, &(_146417_ssc));;
}



inline jule::Ptr<_1abcc2297_Case> _1abcd078e_checkCase(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Ptr<_1abcc174c_Match> _146933_m, jule::I64 _146944_i, jule::Ptr<_1acaed6bb_Case> _146956_c, jule::Ptr<_1abd5dc4b_Data> _146975_expr) {
	jule::Ptr<_1abcc2297_Case> _147017_case = _146933_m.get()._field_Cases[_146944_i];;
	_147017_case.get()._field_Exprs=jule::Slice<jule::Ptr<_1abd5dc4b_Data>>::alloc(0LL, _146956_c.get()._field_Exprs.len());
	jule::Bool _147217_constMatched = false;;
	jule::Ptr<_1acc78e73_Eval> _147317_eval = _1abcedc96_eval(_self_.get()._field_s, jule::Trait<_1accc2ecd_Lookup>(_self_, 0));;
	{
		auto expr = &(_146956_c.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5e7c766:;
		if (it != expr_end) {
			jule::Ptr<_1acadb456_Expr> _147421_e = *it;
			{
				jule::Ptr<_1abd5dc4b_Data> _147521_d = _1acc94c4c_evalExprKind(_147317_eval, _147421_e.get()._field_Kind);;
				if ((_147521_d == nullptr)) {
					goto _iter_next_1a5e7c766;
				};
				if (_146933_m.get()._field_TypeMatch) {
					{ jule::Slice<jule::Ptr<_1abd5dc4b_Data>> &__jule_push_dest = _147017_case.get()._field_Exprs; __jule_push_dest.push(_147521_d); };
					if ((_1abcbab53_countMatchType(&(_146933_m), &(_147521_d.get()._field_Kind)) > 1LL)) {
						_1abce7003_pushErr(_self_.get()._field_s.ptr(), _147421_e.get()._field_Token, jule::Str("duplicated pattern: type @ is already matched", 45), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_147521_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
					};
					if (_146975_expr.get()._field_Kind.get()._field_Generic) {
						_147217_constMatched=(_147217_constMatched || _1acca5367_Equal(_146975_expr.get()._field_Kind, _147521_d.get()._field_Kind));
					} else {
						if ((_1acca7d70_TypeEnum(_146975_expr.get()._field_Kind.ptr()) != nullptr)) {
							_1abcee6e2_checkTypeCompatibility(_self_.get()._field_s, &(_146975_expr.get()._field_Kind), &(_147521_d.get()._field_Kind), &(_147421_e.get()._field_Token));
						} else {
							jule::Ptr<_1acb34405_Trait> _149029_trt = _1acca8a85_Trait(_146975_expr.get()._field_Kind.ptr());;
							if ((_149029_trt != nullptr)) {
								_1abcee6e2_checkTypeCompatibility(_self_.get()._field_s, &(_146975_expr.get()._field_Kind), &(_147521_d.get()._field_Kind), &(_147421_e.get()._field_Token));
							};
						};
					};
					goto _iter_next_1a5e7c766;
				} else if (_146933_m.get()._field_Comptime) {
					if ((!(_1abd5e5ba_IsConst(_147521_d.ptr())))) {
						_1abce7003_pushErr(_self_.get()._field_s.ptr(), _147421_e.get()._field_Token, jule::Str("const-matching requires constant expression", 43), jule::Slice<jule::Any>());
					} else {
						_147217_constMatched=(_147217_constMatched || _1ddeb68dd_ReadBool(_147521_d.get()._field_Constant.ptr()));
					};
				};
				if (_147521_d.get()._field_Decl) {
					_1abce7003_pushErr(_self_.get()._field_s.ptr(), _147421_e.get()._field_Token, jule::Str("expecting expression, found type declaration", 44), jule::Slice<jule::Any>());
					_1abce7322_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49), jule::Slice<jule::Any>());
					goto _iter_next_1a5e7c766;
				};
				{ jule::Slice<jule::Ptr<_1abd5dc4b_Data>> &__jule_push_dest = _147017_case.get()._field_Exprs; __jule_push_dest.push(_147521_d); };
				_1abd492db_assignTypeChecker _151321_checker = _1abd492db_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_146975_expr.get()._field_Kind, ._field_d=_147521_d, ._field_errorToken=_147421_e.get()._field_Token};;
				_1abd4a463_check(&_151321_checker);
			}
			_iter_next_1a5e7c766:;
			++it;
			goto _iter_begin_1a5e7c766;
		}
		_iter_end_1a5e7c766:;
	};
	if (((!(_146933_m.get()._field_Comptime)) || _147217_constMatched)) {
		_147017_case.get()._field_Scope=_1abcd0294_checkCaseScope(_self_, &(_147017_case), &(_146956_c.get()._field_Scope));
	};
	return _147017_case;;
}



inline void _1abcd0b57_checkCases(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Ptr<_1acaedd92_MatchCase>* _152735_m, jule::Ptr<_1abcc174c_Match> _152754_rm, jule::Ptr<_1abd5dc4b_Data> _152770_expr) {
	_152754_rm.get()._field_Cases=jule::Slice<jule::Ptr<_1abcc2297_Case>>::alloc(0LL, (*(_152735_m)).get()._field_Cases.len());
	{
		auto expr = &((*(_152735_m)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5e86dd0:;
		if (it != expr_end) {
			jule::I64 _152913_i = it - expr->begin();
			{
				jule::Ptr<_1abcc2297_Case> _153021_case = jule::new_ptr<_1abcc2297_Case>(_1abcc2297_Case{._field_Owner=_152754_rm, });;
				if ((_152913_i > 0LL)) {
					_152754_rm.get()._field_Cases[(_152913_i - 1LL)].get()._field_Next=_153021_case;
				};
				{ jule::Slice<jule::Ptr<_1abcc2297_Case>> &__jule_push_dest = _152754_rm.get()._field_Cases; __jule_push_dest.push(_153021_case); };
			}
			_iter_next_1a5e86dd0:;
			++it;
			_152913_i++;
			goto _iter_begin_1a5e86dd0;
		}
		_iter_end_1a5e86dd0:;
	};
	if (((_152754_rm.get()._field_Default != nullptr) && ((*(_152735_m)).get()._field_Cases.len() > 0LL))) {
		_152754_rm.get()._field_Cases[(_152754_rm.get()._field_Cases.len() - 1LL)].get()._field_Next=_152754_rm.get()._field_Default;
	};
	{
		auto expr = &((*(_152735_m)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5e89850:;
		if (it != expr_end) {
			jule::I64 _154314_i = it - expr->begin();
			jule::Ptr<_1acaed6bb_Case> _154321_c = *it;
			{
				_1abcd078e_checkCase(_self_, _152754_rm, _154314_i, _154321_c, _152770_expr);
			}
			_iter_next_1a5e89850:;
			++it;
			_154314_i++;
			goto _iter_begin_1a5e89850;
		}
		_iter_end_1a5e89850:;
	};
}



inline jule::Ptr<_1abcc2297_Case> _1abcd100e_checkDefault(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Ptr<_1abcc174c_Match> _154836_m, jule::Ptr<_1acaec5ee_Else> _154851_d) {
	jule::Ptr<_1abcc2297_Case> _154917_def = jule::new_ptr<_1abcc2297_Case>(_1abcc2297_Case{._field_Owner=_154836_m, });;
	_154917_def.get()._field_Scope=_1abcd0294_checkCaseScope(_self_, &(_154917_def), &(_154851_d.get()._field_Scope));
	return _154917_def;;
}



inline void _1abcd132d_checkComptimePanic(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Ptr<_2097d15d8_Token> _155638_callToken, jule::Ptr<_1abcbc935_Scope>* _155658_s) {
	if (((*(_155658_s)).get()._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _156013_stmt = (*(_155658_s)).get()._field_Stmts[0LL];;
	{
		auto &_match_expr{ _156013_stmt };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1a5e8c963:;
			{
				jule::Ptr<_1abd5dc4b_Data> _156317_d = _156013_stmt.cast_ptr<_1abd5dc4b_Data>(&__jule_any_type24);;
				{
					auto &_match_expr{ _156317_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type30) {
						_case_begin_1a5e8d7bb:;
						{
							jule::Ptr<_1acb16151_BuiltinPanicCallExprModel> _156621_m = _156317_d.get()._field_Model.cast_ptr<_1acb16151_BuiltinPanicCallExprModel>(&__jule_any_type30);;
							{
								auto &_match_expr{ _156621_m.get()._field_Expr };
								
								if (_match_expr.type == &__jule_any_type19) {
									_case_begin_1a5e8e756:;
									{
										jule::Ptr<_1ddeb4b1c_Const> _156925_c = _156621_m.get()._field_Expr.cast_ptr<_1ddeb4b1c_Const>(&__jule_any_type19);;
										if (_1ddeb8eea_IsStr(_156925_c.ptr())) {
											if ((_155638_callToken == nullptr)) {
												jule::Ptr<_1abcc4563_scopeChecker> _157237_root = _1abcc75ee_getHardRoot(_self_);;
												_1abce7003_pushErr(_self_.get()._field_s.ptr(), _157237_root.get()._field_calledFrom, jule::Str("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_1ddeb6b52_ReadStr(_156925_c.ptr()), &__jule_any_type5)}));
											} else {
												_1abce7003_pushErr(_self_.get()._field_s.ptr(), _155638_callToken, jule::Str("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_1ddeb6b52_ReadStr(_156925_c.ptr()), &__jule_any_type5)}));
											};
											_1abcc6b4d_stop(_self_.ptr());
										};
									}
								}
								_match_end_1a5e8e547:;
							};
						}
					}
					_match_end_1a5e8d3c0:;
				};
			}
		}
		_match_end_1a5e8c8ec:;
	};
}



inline void _1abcd164c_processConstMatch(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Ptr<_1abcc174c_Match>* _158442_tm, jule::Ptr<_1acaedd92_MatchCase>* _158459_m) {
	{
		auto expr = &((*(_158442_tm)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5e8ce91:;
		if (it != expr_end) {
			jule::I64 _158514_i = it - expr->begin();
			jule::Ptr<_1abcc2297_Case> _158521_c = *it;
			{
				if ((_158521_c.get()._field_Scope != nullptr)) {
					jule::Ptr<_2097d15d8_Token> _158725_token = nullptr;;
					if (((!((*(_158442_tm)).get()._field_TypeMatch)) && (_158521_c.get()._field_Scope.get()._field_Stmts.len() > 0LL))) {
						_158725_token=(*(_158459_m)).get()._field_Cases[_158514_i].get()._field_Scope.get()._field_Stmts[0LL]._field_Token;
					};
					_1abcd132d_checkComptimePanic(_self_, _158725_token, &(_158521_c.get()._field_Scope));
					(*(_158442_tm)).get()._field_Default=_158521_c;
					(*(_158442_tm)).get()._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_1a5e8ce91:;
			++it;
			_158514_i++;
			goto _iter_begin_1a5e8ce91;
		}
		_iter_end_1a5e8ce91:;
	};
	if (((*(_158459_m)).get()._field_Default != nullptr)) {
		(*(_158442_tm)).get()._field_Cases=nullptr;
		(*(_158442_tm)).get()._field_Default=_1abcd100e_checkDefault(_self_, (*(_158442_tm)), (*(_158459_m)).get()._field_Default);
		if (((*(_158442_tm)).get()._field_Default != nullptr)) {
			jule::Ptr<_2097d15d8_Token> _160125_token = nullptr;;
			if ((!((*(_158442_tm)).get()._field_TypeMatch))) {
				_160125_token=(*(_158459_m)).get()._field_Default.get()._field_Scope.get()._field_Stmts[0LL]._field_Token;
			};
			_1abcd132d_checkComptimePanic(_self_, _160125_token, &((*(_158442_tm)).get()._field_Default.get()._field_Scope));
		};
	} else {
		(*(_158442_tm)).get()._field_Cases=nullptr;
	};
}



inline void _1abcd18c2_checkTypeMatch(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Ptr<_1acaedd92_MatchCase>* _161339_m) {
	jule::Ptr<_1abd5dc4b_Data> _161417_d = _1acc95368_eval(_1abcedc96_eval(_self_.get()._field_s, jule::Trait<_1accc2ecd_Lookup>(_self_, 0)), (*(_161339_m)).get()._field_Expr);;
	if ((_161417_d == nullptr)) {
		return;;
	};
	if (((!(_161417_d.get()._field_Kind.get()._field_Generic)) && (!(((((_1acca73be_Prim(_161417_d.get()._field_Kind.ptr()) != nullptr) && _1accb086c_IsAny(_1acca73be_Prim(_161417_d.get()._field_Kind.ptr()).ptr())) || (_1acca8a85_Trait(_161417_d.get()._field_Kind.ptr()) != nullptr)) || (_1acca7d70_TypeEnum(_161417_d.get()._field_Kind.ptr()) != nullptr)))))) {
		_1abce7003_pushErr(_self_.get()._field_s.ptr(), (*(_161339_m)).get()._field_Expr.get()._field_Token, jule::Str("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1abcc174c_Match> _162517_tm = jule::new_ptr<_1abcc174c_Match>(_1abcc174c_Match{._field_Expr=_161417_d, ._field_TypeMatch=true, });;
	_162517_tm.get()._field_Comptime=_162517_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic;
	if (((!(_162517_tm.get()._field_Comptime)) && ((*(_161339_m)).get()._field_Default != nullptr))) {
		_162517_tm.get()._field_Default=_1abcd100e_checkDefault(_self_, _162517_tm, (*(_161339_m)).get()._field_Default);
	};
	_1abcd0b57_checkCases(_self_, _161339_m, _162517_tm, _161417_d);
	if (_162517_tm.get()._field_Comptime) {
		_1abcd164c_processConstMatch(_self_, &(_162517_tm), _161339_m);
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_162517_tm, &__jule_any_type48)); };
}



inline void _1abcd1b47_checkCommonMatch(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Ptr<_1acaedd92_MatchCase>* _164641_m) {
	jule::Ptr<_1abd5dc4b_Data> _164717_d = nullptr;;
	if (((*(_164641_m)).get()._field_Expr == nullptr)) {
		_164717_d=jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd693e8_primBool, ._field_Constant=static__1ddeb558a_NewBool(true)});
		_164717_d.get()._field_Model=jule::Any(_164717_d.get()._field_Constant, &__jule_any_type19);
	} else {
		_164717_d=_1acc95984_evalExpr(_1abcedc96_eval(_self_.get()._field_s, jule::Trait<_1accc2ecd_Lookup>(_self_, 0)), (*(_164641_m)).get()._field_Expr);
		if ((_164717_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1abcc174c_Match> _166117_mc = jule::new_ptr<_1abcc174c_Match>(_1abcc174c_Match{._field_Expr=_164717_d, ._field_Comptime=(((((*(_164641_m)).get()._field_Expr != nullptr) && _1abd5e5ba_IsConst(_164717_d.ptr())) && _1ddeb8c86_IsBool(_164717_d.get()._field_Constant.ptr())) && _1ddeb68dd_ReadBool(_164717_d.get()._field_Constant.ptr())), });;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_166117_mc, &__jule_any_type48)); };
	if (((!(_166117_mc.get()._field_Comptime)) && ((*(_164641_m)).get()._field_Default != nullptr))) {
		_166117_mc.get()._field_Default=_1abcd100e_checkDefault(_self_, _166117_mc, (*(_164641_m)).get()._field_Default);
	};
	_1abcd0b57_checkCases(_self_, _164641_m, _166117_mc, _164717_d);
	if (_166117_mc.get()._field_Comptime) {
		_1abcd164c_processConstMatch(_self_, &(_166117_mc), _164641_m);
	};
}



inline void _1abcd1dbc_checkMatch(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Ptr<_1acaedd92_MatchCase> _168434_m) {
	if (_168434_m.get()._field_TypeMatch) {
		_1abcd18c2_checkTypeMatch(_self_, &(_168434_m));
		return;;
	};
	_1abcd1b47_checkCommonMatch(_self_, &(_168434_m));
}



inline void _1abcd2142_checkFall(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Ptr<_1acae4cbc_FallSt> _169229_f) {
	if ((((_self_.get()._field_cse == 0LLU) || ((_self_.get()._field_scope.get()._field_Stmts.len() + 1LL) < _self_.get()._field_scope.get()._field_Stmts.len())) || _1abcc7126_isDeferred(_self_))) {
		_1abce7003_pushErr(_self_.get()._field_s.ptr(), _169229_f.get()._field_Token, jule::Str("fall keyword can only useable at end of the case scopes", 55), jule::Slice<jule::Any>());
		return;;
	};
	_1abcc2297_Case* _170017_case = ((_1abcc2297_Case*)(_self_.get()._field_cse));;
	if (_170017_case->_field_Owner.get()._field_Comptime) {
		_1abce7003_pushErr(_self_.get()._field_s.ptr(), _169229_f.get()._field_Token, jule::Str("the fall statement is not allowed for comptime-matching", 55), jule::Slice<jule::Any>());
		return;;
	} else if ((_170017_case->_field_Next == nullptr)) {
		_1abce7003_pushErr(_self_.get()._field_s.ptr(), _169229_f.get()._field_Token, jule::Str("fall cannot useable at final case", 33), jule::Slice<jule::Any>());
		_1abce7322_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_1abcc286e_FallSt>(_1abcc286e_FallSt{._field_DestCase=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_170017_case->_field_Next))}), &__jule_any_type49)); };
}



inline jule::Ptr<_1abcbed88_BreakSt> _1abcd2450_checkBreakWithLabel(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Ptr<_1acaeb91c_BreakSt> _171539_b) {
	jule::Ptr<_1abcbed88_BreakSt> _171617_brk = _1abcd275d_checkPlainBreak(_self_, _171539_b);;
	if ((_171617_brk == nullptr)) {
		return nullptr;;
	};
	_171617_brk.get()._field_It=0LLU;
	_171617_brk.get()._field_Mtch=0LLU;
	jule::Ptr<_1abcc32cb_scopeLabel> _172617_label = _1abcba13b_findLabelParent(_171539_b.get()._field_Label.get()._field_Kind, _self_.get()._field_parent);;
	if ((_172617_label == nullptr)) {
		_1abce7003_pushErr(_self_.get()._field_s.ptr(), _171539_b.get()._field_Label, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any(_171539_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	_172617_label.get()._field_used=true;
	if (((_172617_label.get()._field_pos + 1LL) >= _172617_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_1abce7003_pushErr(_self_.get()._field_s.ptr(), _171539_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_171539_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I64 _173913_i = (_172617_label.get()._field_pos + 1LL);;
	if ((_173913_i >= _172617_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_1abce7003_pushErr(_self_.get()._field_s.ptr(), _171539_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_171539_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
	} else {
		jule::Any _174321_st = _172617_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_173913_i];;
		{
			auto &_match_expr{ _174321_st };
			
			if (_match_expr.type == &__jule_any_type37) {
				_case_begin_1a5ead2d0:;
				{
					_171617_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174321_st.cast_ptr<_1abcbd77c_InfIter>(&__jule_any_type37)));
				}
			}
			else if (_match_expr.type == &__jule_any_type41) {
				_case_begin_1a5eada1c:;
				{
					_171617_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174321_st.cast_ptr<_1abcbe5d5_RangeIter>(&__jule_any_type41)));
				}
			}
			else if (_match_expr.type == &__jule_any_type39) {
				_case_begin_1a5eada83:;
				{
					_171617_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174321_st.cast_ptr<_1abcbdc00_WhileIter>(&__jule_any_type39)));
				}
			}
			else if (_match_expr.type == &__jule_any_type48) {
				_case_begin_1a5eadb0a:;
				{
					_171617_brk.get()._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174321_st.cast_ptr<_1abcc174c_Match>(&__jule_any_type48)));
				}
			}
			else {
				_case_begin_1a5ead874:;
				{
					_1abce7003_pushErr(_self_.get()._field_s.ptr(), _171539_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_171539_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
				}
			}
			_match_end_1a5ead81e:;
		};
	};
	if ((_171617_brk.get()._field_It != 0LLU)) {
		if ((!(_1abcccabb_checkValidBreakLabel(_self_, _171617_brk.get()._field_It)))) {
			_1abce7003_pushErr(_self_.get()._field_s.ptr(), _171539_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_171539_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		};
	};
	if ((_171617_brk.get()._field_Mtch != 0LLU)) {
		if ((!(_1abcccabb_checkValidBreakLabel(_self_, _171617_brk.get()._field_Mtch)))) {
			_1abce7003_pushErr(_self_.get()._field_s.ptr(), _171539_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_171539_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		};
	};
	return _171617_brk;;
}



inline jule::Ptr<_1abcbed88_BreakSt> _1abcd275d_checkPlainBreak(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Ptr<_1acaeb91c_BreakSt> _177335_b) {
	if (_1abcc7126_isDeferred(_self_)) {
		_1abce7003_pushErr(_self_.get()._field_s.ptr(), _177335_b.get()._field_Token, jule::Str("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1abcc4563_scopeChecker> _177917_scope = _self_;;
	_julec_label_iter:;
	{
		
		if (((((_177917_scope.get()._field_it == 0LLU) && (_177917_scope.get()._field_cse == 0LLU)) && (_177917_scope.get()._field_parent != nullptr)) && (_177917_scope.get()._field_owner == nullptr))) {
			_case_begin_1a5eb46d2:;
			{
				_177917_scope=_177917_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_177917_scope.get()._field_it != 0LLU)) {
			_case_begin_1a5eb4759:;
			{
				return jule::new_ptr<_1abcbed88_BreakSt>(_1abcbed88_BreakSt{._field_It=_177917_scope.get()._field_it, });;
			}
		}
		else if ((_177917_scope.get()._field_cse != 0LLU)) {
			_case_begin_1a5eb47d1:;
			{
				return jule::new_ptr<_1abcbed88_BreakSt>(_1abcbed88_BreakSt{._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(((_1abcc2297_Case*)(_177917_scope.get()._field_cse))->_field_Owner))});;
			}
		}
		_match_end_1a5eb4638:;
	};
	_1abce7003_pushErr(_self_.get()._field_s.ptr(), _177335_b.get()._field_Token, jule::Str("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1abcd29d3_checkBreak(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Ptr<_1acaeb91c_BreakSt> _179530_b) {
	if ((_179530_b.get()._field_Label != nullptr)) {
		jule::Ptr<_1abcbed88_BreakSt> _179721_brk = _1abcd2450_checkBreakWithLabel(_self_, _179530_b);;
		{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_179721_brk, &__jule_any_type50)); };
		return;;
	};
	jule::Ptr<_1abcbed88_BreakSt> _180217_brk = _1abcd275d_checkPlainBreak(_self_, _179530_b);;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_180217_brk, &__jule_any_type50)); };
}



inline void _1abcd2c58_checkRet(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Ptr<_1acae9c8e_RetSt> _180632_r) {
	if (_1abcc7126_isDeferred(_self_)) {
		_1abce7003_pushErr(_self_.get()._field_s.ptr(), _180632_r.get()._field_Token, jule::Str("deferred scopes are not supports return statements", 50), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1abcc2bc1_RetSt> _181117_rt = jule::new_ptr<_1abcc2bc1_RetSt>(_1abcc2bc1_RetSt{._field_Func=_1abcc738a_getRoot(_self_).get()._field_owner, });;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_181117_rt, &__jule_any_type51)); };
	jule::Ptr<_1abd57173_retTypeChecker> _181617_rtc = jule::new_ptr<_1abd57173_retTypeChecker>(_1abd57173_retTypeChecker{._field_sc=_self_, ._field_f=_181117_rt.get()._field_Func, ._field_errorToken=_180632_r.get()._field_Token, });;
	jule::Bool _182113_ok = _1abd57cde_check(_181617_rtc.ptr(), &(_180632_r.get()._field_Expr));;
	if ((!(_182113_ok))) {
		return;;
	};
	if ((_180632_r.get()._field_Expr != nullptr)) {
		_181117_rt.get()._field_Expr=_181617_rtc.get()._field_model;
	};
}



inline void _1abcd2ecd_checkUseExpr(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Ptr<_1acadbce7_UseExpr> _183132_ue) {
	if ((_self_.get()._field_result == nullptr)) {
		_1abce7003_pushErr(_self_.get()._field_s.ptr(), _183132_ue.get()._field_Token, jule::Str("use expressions cannot useable out of exceptional handler scopes", 64), jule::Slice<jule::Any>());
		return;;
	};
	if (_1abcc7126_isDeferred(_self_)) {
		_1abce7003_pushErr(_self_.get()._field_s.ptr(), _183132_ue.get()._field_Token, jule::Str("use expressions cannot useable in deferred scopes", 49), jule::Slice<jule::Any>());
	};
	if (((_self_.get()._field_i + 1LL) < _self_.get()._field_tree.get()._field_Stmts.len())) {
		_1abce7003_pushErr(_self_.get()._field_s.ptr(), _183132_ue.get()._field_Token, jule::Str("use expressions must be last statement of scope", 47), jule::Slice<jule::Any>());
	};
}



inline void _1abcd3253_checkNode(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Any* _184734_node) {
	{
		auto &_match_expr{ (*(_184734_node)) };
		
		if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1a5ec138c:;
			{
				_1abcc9942_checkAnonScope(_self_, (*(_184734_node)).cast_ptr<_1acae6e12_ScopeTree>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1a5ec0b72:;
			{
				_1abcc8655_checkVarDecl(_self_, (*(_184734_node)).cast_ptr<_1acae98d7_VarDecl>(&__jule_any_type16));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1a5ec1249:;
			{
				_1abcc88ca_checkTypeAliasDecl(_self_, (*(_184734_node)).cast_ptr<_1acaed248_TypeAliasDecl>(&__jule_any_type12));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1a5ec106d:;
			{
				_1abcc9ed6_checkExpr(_self_, (*(_184734_node)).cast_ptr<_1acadb456_Expr>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1a5ec147a:;
			{
				_1abcca877_checkConditional(_self_, (*(_184734_node)).cast_ptr<_1acaeca72_Conditional>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1a5ec14e1:;
			{
				_1abccc4a0_checkIter(_self_, (*(_184734_node)).cast_ptr<_1acaea3ee_Iter>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1a5ec1557:;
			{
				_1abccd14e_checkCont(_self_, (*(_184734_node)).cast_ptr<_1acaebcc4_ContSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1a5ec15bd:;
			{
				_1abccd3c4_checkLabel(_self_, (*(_184734_node)).cast_ptr<_1acae4629_LabelSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1a5ec1634:;
			{
				_1abccd649_pushGoto(_self_, (*(_184734_node)).cast_ptr<_1acae49d1_GotoSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1a5ec169a:;
			{
				_1abcceddc_checkAssignSt(_self_, (*(_184734_node)).cast_ptr<_1acae5916_AssignSt>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1a5ec1711:;
			{
				_1abcd1dbc_checkMatch(_self_, (*(_184734_node)).cast_ptr<_1acaedd92_MatchCase>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1a5ec1777:;
			{
				_1abcd2142_checkFall(_self_, (*(_184734_node)).cast_ptr<_1acae4cbc_FallSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1a5ec17dd:;
			{
				_1abcd29d3_checkBreak(_self_, (*(_184734_node)).cast_ptr<_1acaeb91c_BreakSt>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1a5ec1865:;
			{
				_1abcd2c58_checkRet(_self_, (*(_184734_node)).cast_ptr<_1acae9c8e_RetSt>(&__jule_any_type63));
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1a5ec18dc:;
			{
				_1abcd2ecd_checkUseExpr(_self_, (*(_184734_node)).cast_ptr<_1acadbce7_UseExpr>(&__jule_any_type64));
			}
		}
		else {
			_case_begin_1a5ec0ce8:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1a5ec0c1b:;
	};
}



inline void _1abcd342e_checkResult(jule::Ptr<_1abcc4563_scopeChecker> _self_) {
	_1acae6807_Stmt _188517_stmt = _self_.get()._field_tree.get()._field_Stmts[(_self_.get()._field_tree.get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _188517_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1a5ec91db:;
			{
				jule::Ptr<_1acadbce7_UseExpr> _188821_ue = _188517_stmt._field_Data.cast_ptr<_1acadbce7_UseExpr>(&__jule_any_type64);;
				jule::Ptr<_1abd5dc4b_Data> _188921_d = _1acc95984_evalExpr(_1abcedc96_eval(_self_.get()._field_s, jule::Trait<_1accc2ecd_Lookup>(_self_, 0)), _188821_ue.get()._field_Expr);;
				if ((_188921_d == nullptr)) {
					return;;
				};
				{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_188921_d, &__jule_any_type24)); };
				jule::Ptr<_1abd57173_retTypeChecker> _189421_rtc = jule::new_ptr<_1abd57173_retTypeChecker>(_1abd57173_retTypeChecker{._field_sc=_self_, ._field_types=_1acb25ea7_Types(_self_.get()._field_result.ptr()), ._field_errorToken=_188821_ue.get()._field_Expr.get()._field_Token, });;
				_1abd57cde_check(_189421_rtc.ptr(), &(_188821_ue.get()._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1a5ec899e:;
			{
				jule::Ptr<_1acadb456_Expr> _190121_expr = _188517_stmt._field_Data.cast_ptr<_1acadb456_Expr>(&__jule_any_type53);;
				jule::Ptr<_1abd5dc4b_Data> _190221_d = _1acc95984_evalExpr(_1abcedc96_eval(_self_.get()._field_s, jule::Trait<_1accc2ecd_Lookup>(_self_, 0)), _190121_expr);;
				if ((_190221_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ _190221_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1a5ecdb08:;
						{
							jule::Ptr<_1acb1d345_BuiltinErrorCallExprModel> _190825_m = _190221_d.get()._field_Model.cast_ptr<_1acb1d345_BuiltinErrorCallExprModel>(&__jule_any_type23);;
							_1abcc9c61_processErrorCall(_self_, &(_190825_m), _190121_expr.get()._field_Token);
							{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_190221_d, &__jule_any_type24)); };
						}
					}
					else {
						_case_begin_1a5ecd663:;
						{
							return;;
						}
					}
					_match_end_1a5ecd751:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type58 || _match_expr.type == &__jule_any_type62 || _match_expr.type == &__jule_any_type56 || _match_expr.type == &__jule_any_type63) {
			_case_begin_1a5ec8a15:;
			{
				_1abcd3253_checkNode(_self_, &(_188517_stmt._field_Data));
			}
		}
		else {
			_case_begin_1a5ec8938:;
			{
				_1abcd3253_checkNode(_self_, &(_188517_stmt._field_Data));
				return;;
			}
		}
		_match_end_1a5ec87b2:;
	};
	_self_.get()._field_result=nullptr;
}



inline void _1abcd360a_checkTree(jule::Ptr<_1abcc4563_scopeChecker> _self_) {
	_self_.get()._field_i=0LL;
	jule::I64 _193017_n = _self_.get()._field_tree.get()._field_Stmts.len();;
	if ((_self_.get()._field_result != nullptr)) {
		(_193017_n)--;
	};
	for (; (_self_.get()._field_i < _193017_n); (_self_.get()._field_i)++) {
		{
			_1acae6807_Stmt _193821_stmt = _self_.get()._field_tree.get()._field_Stmts[_self_.get()._field_i];;
			_1abcd3253_checkNode(_self_, &(_193821_stmt._field_Data));
			if (_1abcc6db2_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_1a5ed1897:;
	}
	_iter_end_1a5ed1897:;;
	if (((_self_.get()._field_result != nullptr) && (_self_.get()._field_tree.get()._field_Stmts.len() != 0LL))) {
		_1abcd342e_checkResult(_self_);
	};
}



inline void _1abcd3929_checkGoto(_1abcc4563_scopeChecker* _self_, jule::Ptr<_1abcc374e_scopeGoto>* _194933_gt, jule::Ptr<_1abcc32cb_scopeLabel>* _194954_label) {
	jule::Ptr<_1abcc4563_scopeChecker> _195017_gtsc = (*(_194933_gt)).get()._field_scope;;
	while (((_195017_gtsc.get()._field_childIndex - 1LL) > (*(_194954_label)).get()._field_scope.get()._field_childIndex)) {
		{
			_195017_gtsc=_195017_gtsc.get()._field_parent;
		}
	_iter_next_1a5ed427e:;
	}
	_iter_end_1a5ed427e:;;
	jule::I64 _195517_n = 0LL;;
	if ((_195017_gtsc.get()._field_scope == (*(_194954_label)).get()._field_scope.get()._field_scope)) {
		if (((*(_194933_gt)).get()._field_pos > (*(_194954_label)).get()._field_pos)) {
			return;;
		};
		_195517_n=(*(_194933_gt)).get()._field_pos;
	};
	jule::I64 _196817_i = ((*(_194954_label)).get()._field_pos - 1LL);;
	if ((_195517_n == 0LL)) {
		{
			auto expr = &((*(_194954_label)).get()._field_scope.get()._field_scope.get()._field_Stmts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a5ed6715:;
			if (it != expr_end) {
				jule::I64 _197117_j = it - expr->begin();
				jule::Any _197120_stmt = *it;
				{
					if (_1abcba812_stmtIsGotoScope(&(_197120_stmt), &(_195017_gtsc.get()._field_scope))) {
						_195517_n=_197117_j;
						goto _iter_end_1a5ed6715;
					};
				}
				_iter_next_1a5ed6715:;
				++it;
				_197117_j++;
				goto _iter_begin_1a5ed6715;
			}
			_iter_end_1a5ed6715:;
		};
	};
	for (; (_196817_i >= _195517_n); (_196817_i)--) {
		{
			jule::Any _198121_stmt = (*(_194954_label)).get()._field_scope.get()._field_scope.get()._field_Stmts[_196817_i];;
			if (_1abcbc4a1_stmtIsDef(&(_198121_stmt))) {
				_1abce7003_pushErr((*(_self_))._field_s.ptr(), (*(_194933_gt)).get()._field_gt.get()._field_Token, jule::Str("goto @ jumps over declaration(s)", 32), jule::Slice<jule::Any>::make({jule::Any((*(_194933_gt)).get()._field_gt.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
				return;;
			};
		}
	_iter_next_1a5ed76b1:;
	}
	_iter_end_1a5ed76b1:;;
}



inline void _1abcd3b05_checkGotos(_1abcc4563_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5ed643a:;
		if (it != expr_end) {
			jule::Ptr<_1abcc374e_scopeGoto> _199021_gt = *it;
			{
				jule::Ptr<_1abcc32cb_scopeLabel> _199121_label = _1abcc8028_findLabelAll(_self_, _199021_gt.get()._field_gt.get()._field_Label.get()._field_Kind);;
				if ((_199121_label == nullptr)) {
					_1abce7003_pushErr((*(_self_))._field_s.ptr(), _199021_gt.get()._field_gt.get()._field_Token, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any(_199021_gt.get()._field_gt.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
					goto _iter_next_1a5ed643a;
				};
				_199121_label.get()._field_used=true;
				_1abcd3929_checkGoto(_self_, &(_199021_gt), &(_199121_label));
			}
			_iter_next_1a5ed643a:;
			++it;
			goto _iter_begin_1a5ed643a;
		}
		_iter_end_1a5ed643a:;
	};
}



inline void _1abcd3cd1_checkLabels(_1abcc4563_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5ed9383:;
		if (it != expr_end) {
			jule::Ptr<_1abcc32cb_scopeLabel> _200316_l = *it;
			{
				if ((!(_200316_l.get()._field_used))) {
					_1abce7003_pushErr((*(_self_))._field_s.ptr(), _200316_l.get()._field_token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any(_200316_l.get()._field_label.get()._field_Ident, &__jule_any_type5)}));
				};
			}
			_iter_next_1a5ed9383:;
			++it;
			goto _iter_begin_1a5ed9383;
		}
		_iter_end_1a5ed9383:;
	};
}



inline void _1abcd3eac_checkVars(_1abcc4563_scopeChecker* _self_) {
	{
		auto expr = &((*(_self_))._field_table.get()._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5edb74d:;
		if (it != expr_end) {
			jule::Ptr<_1abd1497c_Var> _201116_v = *it;
			{
				if (((((!(_201116_v.get()._field_Used)) && (!(_201116_v.get()._field_Constant))) && (!(_2097d3d7c_IsIgnoreIdent(_201116_v.get()._field_Ident)))) && (!(_2097d4124_IsAnonIdent(_201116_v.get()._field_Ident))))) {
					_1abce7003_pushErr((*(_self_))._field_s.ptr(), _201116_v.get()._field_Token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any(_201116_v.get()._field_Ident, &__jule_any_type5)}));
				};
			}
			_iter_next_1a5edb74d:;
			++it;
			goto _iter_begin_1a5edb74d;
		}
		_iter_end_1a5edb74d:;
	};
}



inline void _1abcd4188_checkAliases(_1abcc4563_scopeChecker* _self_) {
	{
		auto expr = &((*(_self_))._field_table.get()._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5ede553:;
		if (it != expr_end) {
			jule::Ptr<_1acca3e59_TypeAlias> _201916_a = *it;
			{
				if ((((!(_201916_a.get()._field_Used)) && (!(_2097d3d7c_IsIgnoreIdent(_201916_a.get()._field_Ident)))) && (!(_2097d4124_IsAnonIdent(_201916_a.get()._field_Ident))))) {
					_1abce7003_pushErr((*(_self_))._field_s.ptr(), _201916_a.get()._field_Token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any(_201916_a.get()._field_Ident, &__jule_any_type5)}));
				};
			}
			_iter_next_1a5ede553:;
			++it;
			goto _iter_begin_1a5ede553;
		}
		_iter_end_1a5ede553:;
	};
}



inline void _1abcd44a7_check(jule::Ptr<_1abcc4563_scopeChecker> _self_, jule::Ptr<_1acae6e12_ScopeTree>* _202730_tree, jule::Ptr<_1abcbc935_Scope>* _202753_s) {
	(*(_202753_s)).get()._field_Deferred=(*(_202730_tree)).get()._field_Deferred;
	(*(_202753_s)).get()._field_Unsafety=(*(_202730_tree)).get()._field_Unsafety;
	jule::I64 _203113_errors = _self_.get()._field_s.get()._field_errors.len();;
	_self_.get()._field_tree=(*(_202730_tree));
	_self_.get()._field_scope=(*(_202753_s));
	_1abcd360a_checkTree(_self_);
	if ((_203113_errors == _self_.get()._field_s.get()._field_errors.len())) {
		_1abcd3eac_checkVars(_self_.ptr());
		_1abcd4188_checkAliases(_self_.ptr());
		if (_1abcc6972_isRoot(_self_.ptr())) {
			_1abcd3b05_checkGotos(_self_.ptr());
			_1abcd3cd1_checkLabels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_1abcc4563_scopeChecker> _1abcd471b_newChildChecker(jule::Ptr<_1abcc4563_scopeChecker> _self_) {
	jule::Ptr<_1abcc4563_scopeChecker> _205117_base = _1abcb9965_newScopeCheckerBase(&(_self_.get()._field_s), nullptr);;
	_205117_base.get()._field_parent=_self_;
	_205117_base.get()._field_labels=_self_.get()._field_labels;
	_205117_base.get()._field_gotos=_self_.get()._field_gotos;
	_205117_base.get()._field_childIndex=static_cast<jule::I64>((_self_.get()._field_childIndex + 1LL));
	return _205117_base;;
}







std::ostream &operator<<(std::ostream &_Stream, _1abcc4563_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1abcd56b7_checkCdef(_1abcd52bb_directiveChecker* _self_, jule::Ptr<_1acaa47b5_Directive>* _1629_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1a5ee514c:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1acb221d4_Fn>(&__jule_any_type65).get()._field_Binded) {
					goto _match_end_1a5ee537d;
				};
				goto _case_begin_1a5ee53d3;
			}
		}
		else {
			_case_begin_1a5ee53d3:;
			{
				_1abce7003_pushErr((*(_self_))._field_s.ptr(), (*(_1629_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_1629_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1a5ee537d:;
	};
	if (((*(_1629_d)).get()._field_Args.len() > 0LL)) {
		_1abce7003_pushErr((*(_self_))._field_s.ptr(), (*(_1629_d)).get()._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1abcd593c_checkTypedef(_1abcd52bb_directiveChecker* _self_, jule::Ptr<_1acaa47b5_Directive>* _3232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1a5ee758e:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1acb07021_Struct>(&__jule_any_type66).get()._field_Binded) {
					goto _match_end_1a5ee77ae;
				};
				goto _case_begin_1a5ee7814;
			}
		}
		else {
			_case_begin_1a5ee7814:;
			{
				_1abce7003_pushErr((*(_self_))._field_s.ptr(), (*(_3232_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_3232_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1a5ee77ae:;
	};
	if (((*(_3232_d)).get()._field_Args.len() > 0LL)) {
		_1abce7003_pushErr((*(_self_))._field_s.ptr(), (*(_3232_d)).get()._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1abcd5bb2_checkDerive(_1abcd52bb_directiveChecker* _self_, jule::Ptr<_1acaa47b5_Directive>* _4831_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1a5ee9a03:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_1acb07021_Struct>(&__jule_any_type66).get()._field_Binded))) {
					goto _match_end_1a5ee9c23;
				};
				goto _case_begin_1a5ee9c78;
			}
		}
		else {
			_case_begin_1a5ee9c78:;
			{
				_1abce7003_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a5ee9c23:;
	};
	if (((*(_4831_d)).get()._field_Args.len() == 0LL)) {
		_1abce7003_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		_1abce7322_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_4831_d)).get()._field_Args.len() > 1LL)) {
		_1abce7003_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("derive", 6), &__jule_any_type5)}));
	};
	{
		auto &_match_expr{ (*(_4831_d)).get()._field_Args[0LL].get()._field_Kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_1a5eed199:;
		}
		else {
			_case_begin_1a5eea619:;
			{
				_1abce7003_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Args[0LL], jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_4831_d)).get()._field_Args[0LL].get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1a5eeccd1:;
	};
}



inline void _1abcd5e37_checkNamespace(_1abcd52bb_directiveChecker* _self_, jule::Ptr<_1acaa47b5_Directive>* _7438_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1a5eee4b9:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_1acb07021_Struct>(&__jule_any_type66).get()._field_Binded))) {
					_1abce7003_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1a5eee530:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_1acb221d4_Fn>(&__jule_any_type65).get()._field_Binded))) {
					_1abce7003_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a5eee596:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_1abd1497c_Var>(&__jule_any_type8).get()._field_Binded))) {
					_1abce7003_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else {
			_case_begin_1a5eee3dc:;
			{
				_1abce7003_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1a5eee387:;
	};
	if (((*(_7438_d)).get()._field_Args.len() == 0LL)) {
		_1abce7003_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_7438_d)).get()._field_Args.len() > 1LL)) {
		_1abce7003_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
	};
	jule::Ptr<_2097d15d8_Token> _9913_arg = (*(_7438_d)).get()._field_Args[0LL];;
	if ((_9913_arg.get()._field_Id != static_cast<jule::U64>(5LLU))) {
		_1abce7003_pushErr((*(_self_))._field_s.ptr(), _9913_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if ((_9913_arg.get()._field_Kind[0LL] != '\"')) {
		_1abce7003_pushErr((*(_self_))._field_s.ptr(), _9913_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*(_7438_d)).get()._field_Args[0LL].get()._field_Kind=_9913_arg.get()._field_Kind.slice(1LL, (_9913_arg.get()._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1a6006eb6:;
			{
				if ((_1acc9db68_findDirective(&((*((*(_self_))._field_d))), jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_1acaa47b5_Directive> _11625_typedef = jule::new_ptr<_1acaa47b5_Directive>(_1acaa47b5_Directive{._field_Tag=(*(_7438_d)).get()._field_Tag, });;
					_11625_typedef.get()._field_Tag.get()._field_Kind=jule::Str("typedef", 7);
					{ jule::Slice<jule::Ptr<_1acaa47b5_Directive>> &__jule_push_dest = (*((*(_self_))._field_d)); __jule_push_dest.push(_11625_typedef); };
				};
			}
		}
		_match_end_1a6006e61:;
	};
}



inline void _1abcd61ac_checkDeprecated(_1abcd52bb_directiveChecker* _self_, jule::Ptr<_1acaa47b5_Directive>* _12539_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1a6008847:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1acb07021_Struct>(&__jule_any_type66).get()._field_Binded) {
					_1abce7003_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1a60091c7:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1acb221d4_Fn>(&__jule_any_type65).get()._field_Binded) {
					_1abce7003_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a600923d:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1abd1497c_Var>(&__jule_any_type8).get()._field_Binded) {
					_1abce7003_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else {
			_case_begin_1a6008a78:;
			{
				_1abce7003_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1a60088d0:;
	};
	if (((*(_12539_d)).get()._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*(_12539_d)).get()._field_Args.len() > 1LL)) {
		_1abce7003_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
	};
	jule::Ptr<_2097d15d8_Token> _15013_arg = (*(_12539_d)).get()._field_Args[0LL];;
	if ((_15013_arg.get()._field_Id != static_cast<jule::U64>(5LLU))) {
		_1abce7003_pushErr((*(_self_))._field_s.ptr(), _15013_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if ((_15013_arg.get()._field_Kind[0LL] != '\"')) {
		_1abce7003_pushErr((*(_self_))._field_s.ptr(), _15013_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*(_12539_d)).get()._field_Args[0LL].get()._field_Kind=_15013_arg.get()._field_Kind.slice(1LL, (_15013_arg.get()._field_Kind.len() - 1LL));
}



inline void _1abcd6432_checkTest(_1abcd52bb_directiveChecker* _self_, jule::Ptr<_1acaa47b5_Directive>* _16429_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1a600d066:;
			{
				jule::Ptr<_1acb221d4_Fn> _16717_f = (*(_self_))._field_o.cast_ptr<_1acb221d4_Fn>(&__jule_any_type65);;
				if ((((!(_16717_f.get()._field_Binded)) && (!(_1acb22d83_IsInit(_16717_f.ptr())))) && (!(_1acb22b1e_IsEntryPoint(_16717_f.ptr()))))) {
					goto _match_end_1a6011861;
				};
				if (_1acb228aa_IsMethod(_16717_f.ptr())) {
					_1abce7003_pushErr((*(_self_))._field_s.ptr(), _16717_f.get()._field_Token, jule::Str("you cannot declare test methods", 31), jule::Slice<jule::Any>());
					goto _match_end_1a6011861;
				};
				goto _case_begin_1a60118b6;
			}
		}
		else {
			_case_begin_1a60118b6:;
			{
				_1abce7003_pushErr((*(_self_))._field_s.ptr(), (*(_16429_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_16429_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1a6011861:;
	};
	if (((*(_16429_d)).get()._field_Args.len() > 0LL)) {
		_1abce7003_pushErr((*(_self_))._field_s.ptr(), (*(_16429_d)).get()._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1abcd66a7_checkDirective(_1abcd52bb_directiveChecker* _self_, jule::Ptr<_1acaa47b5_Directive>* _18538_d) {
	{
		auto &_match_expr{ (*(_18538_d)).get()._field_Tag.get()._field_Kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_1a6015359:;
			{
				_1abcd56b7_checkCdef(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_1a60153c0:;
			{
				_1abcd593c_checkTypedef(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_1a6015436:;
			{
				_1abcd5bb2_checkDerive(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_1a601549c:;
			{
				_1abcd5e37_checkNamespace(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_1a6015ed6:;
			{
				_1abcd61ac_checkDeprecated(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_1a601604c:;
			{
				_1abcd6432_checkTest(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_1a60160b3:;
			{
				_1abce7003_pushErr((*(_self_))._field_s.ptr(), (*(_18538_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_18538_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		else {
			_case_begin_1a60152e3:;
			{
				_1abce7003_pushErr((*(_self_))._field_s.ptr(), (*(_18538_d)).get()._field_Tag, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(_18538_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1a601528d:;
	};
}



inline void _1abcd6883_check(_1abcd52bb_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6018291:;
		if (it != expr_end) {
			jule::Ptr<_1acaa47b5_Directive> _20821_d = *it;
			{
				_1abcd66a7_checkDirective(_self_, &(_20821_d));
			}
			_iter_next_1a6018291:;
			++it;
			goto _iter_begin_1a6018291;
		}
		_iter_end_1a6018291:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1abcd52bb_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1abcdb39e_ImportInfo> _1abcdb866_SelectPackage(_1abcdb39e_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_1abcdb39e_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1abd1497c_Var> _1abcdbc1d_FindVar(_1abcdb39e_ImportInfo* _self_, jule::Str _18926_ident, jule::Bool ) {
	if ((!(_1abcdd648_isLookupable(_self_, _18926_ident)))) {
		return nullptr;;
	};
	return _1abcd8ab6_findVarInPackage(&((*(_self_))._field_Package.get()._field_Files), _18926_ident, false);;
}



inline jule::Ptr<_1acca3e59_TypeAlias> _1abcdc0c5_FindTypeAlias(_1abcdb39e_ImportInfo* _self_, jule::Str _20132_ident, jule::Bool ) {
	if ((!(_1abcdd648_isLookupable(_self_, _20132_ident)))) {
		return nullptr;;
	};
	return _1abcd8ee5_findTypeAliasInPackage(&((*(_self_))._field_Package.get()._field_Files), _20132_ident, false);;
}



inline jule::Ptr<_1acb07021_Struct> _1abcdc47c_FindStruct(_1abcdb39e_ImportInfo* _self_, jule::Str _21329_ident, jule::Bool ) {
	if ((!(_1abcdd648_isLookupable(_self_, _21329_ident)))) {
		return nullptr;;
	};
	return _1abcd93d0_findStructInPackage(&((*(_self_))._field_Package.get()._field_Files), _21329_ident, false);;
}



inline jule::Ptr<_1acb221d4_Fn> _1abcdc834_FindFn(_1abcdb39e_ImportInfo* _self_, jule::Str _22525_ident, jule::Bool ) {
	if ((!(_1abcdd648_isLookupable(_self_, _22525_ident)))) {
		return nullptr;;
	};
	return _1abcd9842_findFnInPackage(&((*(_self_))._field_Package.get()._field_Files), _22525_ident, false);;
}



inline jule::Ptr<_1acb34405_Trait> _1abcdcb42_FindTrait(_1abcdb39e_ImportInfo* _self_, jule::Str _23628_ident) {
	if ((!(_1abcdd648_isLookupable(_self_, _23628_ident)))) {
		return nullptr;;
	};
	return _1abcd9b50_findTraitInPackage(&((*(_self_))._field_Package.get()._field_Files), _23628_ident);;
}



inline jule::Ptr<_1acb36b88_Enum> _1abcdce50_FindEnum(_1abcdb39e_ImportInfo* _self_, jule::Str _24727_ident) {
	if ((!(_1abcdd648_isLookupable(_self_, _24727_ident)))) {
		return nullptr;;
	};
	return _1abcd9e91_findEnumInPackage(&((*(_self_))._field_Package.get()._field_Files), _24727_ident);;
}



inline jule::Ptr<_1acb38283_TypeEnum> _1abcdd25d_FindTypeEnum(_1abcdb39e_ImportInfo* _self_, jule::Str _25831_ident) {
	if ((!(_1abcdd648_isLookupable(_self_, _25831_ident)))) {
		return nullptr;;
	};
	return _1abcda2d2_findTypeEnumInPackage(&((*(_self_))._field_Package.get()._field_Files), _25831_ident);;
}



inline jule::Bool _1abcdd648_isLookupable(_1abcdb39e_ImportInfo* _self_, jule::Str _26727_ident) {
	if ((*(_self_))._field_Binded) {
		return false;;
	};
	if ((!((*(_self_))._field_ImportAll))) {
		if ((((*(_self_))._field_Alias.len() != 0LL) || _1abcdd956_existIdent(_self_, jule::Str("self", 4)))) {
			return true;;
		};
		if (((*(_self_))._field_Selected.len() > 0LL)) {
			if ((!(_1abcdd956_existIdent(_self_, _26727_ident)))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _1abcdd956_existIdent(_1abcdb39e_ImportInfo* _self_, jule::Str _28725_ident) {
	{
		auto expr = &((*(_self_))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a602d0ec:;
		if (it != expr_end) {
			jule::Ptr<_2097d15d8_Token> *_28816_sident = it;
			{
				if (((*(_28816_sident)).get()._field_Kind == _28725_ident)) {
					return true;;
				};
			}
			_iter_next_1a602d0ec:;
			++it;
			goto _iter_begin_1a602d0ec;
		}
		_iter_end_1a602d0ec:;
	};
	return false;;
}



inline jule::Bool _1abcddbdc_isAccessibleViaSelection(_1abcdb39e_ImportInfo* _self_) {
	return (((*(_self_))._field_ImportAll || ((*(_self_))._field_Selected.len() == 0LL)) || _1abcdd956_existIdent(_self_, jule::Str("self", 4)));;
}







std::ostream &operator<<(std::ostream &_Stream, _1abcdb39e_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1abcdb39e_ImportInfo> _1abcde45c_SelectPackage(_1abcdded9_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_1abcdb39e_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1abd1497c_Var> _1abcde814_FindVar(_1abcdded9_Package* _self_, jule::Str _31426_ident, jule::Bool _31438_binded) {
	return _1abcd8ab6_findVarInPackage(&((*(_self_))._field_Files), _31426_ident, _31438_binded);;
}



inline jule::Ptr<_1acca3e59_TypeAlias> _1abcdebbb_FindTypeAlias(_1abcdded9_Package* _self_, jule::Str _32032_ident, jule::Bool _32044_binded) {
	return _1abcd8ee5_findTypeAliasInPackage(&((*(_self_))._field_Files), _32032_ident, _32044_binded);;
}



inline jule::Ptr<_1acb07021_Struct> _1abce0073_FindStruct(_1abcdded9_Package* _self_, jule::Str _32629_ident, jule::Bool _32641_binded) {
	return _1abcd93d0_findStructInPackage(&((*(_self_))._field_Files), _32629_ident, _32641_binded);;
}



inline jule::Ptr<_1acb221d4_Fn> _1abce042a_FindFn(_1abcdded9_Package* _self_, jule::Str _33225_ident, jule::Bool _33237_binded) {
	return _1abcd9842_findFnInPackage(&((*(_self_))._field_Files), _33225_ident, _33237_binded);;
}



inline jule::Ptr<_1acb34405_Trait> _1abce0738_FindTrait(_1abcdded9_Package* _self_, jule::Str _33828_ident) {
	return _1abcd9b50_findTraitInPackage(&((*(_self_))._field_Files), _33828_ident);;
}



inline jule::Ptr<_1acb36b88_Enum> _1abce0a46_FindEnum(_1abcdded9_Package* _self_, jule::Str _34427_ident) {
	return _1abcd9e91_findEnumInPackage(&((*(_self_))._field_Files), _34427_ident);;
}



inline jule::Ptr<_1acb38283_TypeEnum> _1abce0d54_FindTypeEnum(_1abcdded9_Package* _self_, jule::Str _35031_ident) {
	return _1abcda2d2_findTypeEnumInPackage(&((*(_self_))._field_Files), _35031_ident);;
}







std::ostream &operator<<(std::ostream &_Stream, _1abcdded9_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1acb49184_comptimeTypeInfo> _1abce4099_pushComptimeTypeInfo(_1abce3b59_commonSemaMeta* _self_, jule::Ptr<_1acca4ba2_TypeKind>* _21344_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6058435:;
		if (it != expr_end) {
			jule::Ptr<_1acb49184_comptimeTypeInfo> _21421_t2 = *it;
			{
				if (((_21421_t2.get()._field_base.get()._field_BindIdent == (*(_21344_t)).get()._field_BindIdent) && _1acca5367_Equal(_21421_t2.get()._field_base, (*(_21344_t))))) {
					return _21421_t2;;
				};
			}
			_iter_next_1a6058435:;
			++it;
			goto _iter_begin_1a6058435;
		}
		_iter_end_1a6058435:;
	};
	jule::Ptr<_1acb49184_comptimeTypeInfo> _21917_t1 = jule::new_ptr<_1acb49184_comptimeTypeInfo>(_1acb49184_comptimeTypeInfo{._field_base=(*(_21344_t))});;
	{ jule::Slice<jule::Ptr<_1acb49184_comptimeTypeInfo>> &__jule_push_dest = (*(_self_))._field_comptimeTypeInfos; __jule_push_dest.push(_21917_t1); };
	return _21917_t1;;
}







std::ostream &operator<<(std::ostream &_Stream, _1abce3b59_commonSemaMeta _Src) {
	_Stream << "commonSemaMeta{";
	_Stream << "comptimeTypeInfos:" << _Src._field_comptimeTypeInfos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1abcdb39e_ImportInfo> _1abce4ae4_SelectPackage(_1abce4671_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_1abcdb39e_ImportInfo>)> _24232_selector) {
	return _1abd59708_SelectPackage((*(_self_))._field_file.ptr(), _24232_selector);;
}



inline jule::Ptr<_1abd1497c_Var> _1abce4e9b_FindVar(_1abce4671_Sema* _self_, jule::Str _25226_ident, jule::Bool _25238_binded) {
	jule::Ptr<_1abd1497c_Var> _25417_v = _1abcd8ab6_findVarInPackage(&((*(_self_))._field_files), _25226_ident, _25238_binded);;
	if ((_25417_v != nullptr)) {
		return _25417_v;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a605b548:;
		if (it != expr_end) {
			jule::Ptr<_1abcdb39e_ImportInfo> _26021_imp = *it;
			{
				if ((!(_1abce27d4_impIsLookupable(&(_26021_imp), _25226_ident)))) {
					goto _iter_next_1a605b548;
				};
				_25417_v=_1abcdbc1d_FindVar(_26021_imp.ptr(), _25226_ident, _25238_binded);
				if (((_25417_v != nullptr) && _1abce76c9_isAccessibleDefine(_self_, _25417_v.get()._field_Public, _25417_v.get()._field_Token))) {
					return _25417_v;;
				};
			}
			_iter_next_1a605b548:;
			++it;
			goto _iter_begin_1a605b548;
		}
		_iter_end_1a605b548:;
	};
	return nullptr;;
}



inline jule::Ptr<_1acca3e59_TypeAlias> _1abce5353_FindTypeAlias(_1abce4671_Sema* _self_, jule::Str _27932_ident, jule::Bool _27944_binded) {
	jule::Ptr<_1acca3e59_TypeAlias> _28117_ta = _1abcd8ee5_findTypeAliasInPackage(&((*(_self_))._field_files), _27932_ident, _27944_binded);;
	if ((_28117_ta != nullptr)) {
		return _28117_ta;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a605dc32:;
		if (it != expr_end) {
			jule::Ptr<_1abcdb39e_ImportInfo> _28721_imp = *it;
			{
				if ((!(_1abce27d4_impIsLookupable(&(_28721_imp), _27932_ident)))) {
					goto _iter_next_1a605dc32;
				};
				_28117_ta=_1abcdc0c5_FindTypeAlias(_28721_imp.ptr(), _27932_ident, _27944_binded);
				if (((_28117_ta != nullptr) && _1abce76c9_isAccessibleDefine(_self_, _28117_ta.get()._field_Public, _28117_ta.get()._field_Token))) {
					return _28117_ta;;
				};
			}
			_iter_next_1a605dc32:;
			++it;
			goto _iter_begin_1a605dc32;
		}
		_iter_end_1a605dc32:;
	};
	return nullptr;;
}



inline jule::Ptr<_1acb07021_Struct> _1abce570a_FindStruct(_1abce4671_Sema* _self_, jule::Str _30629_ident, jule::Bool _30641_binded) {
	jule::Ptr<_1acb07021_Struct> _30817_s = _1abcd93d0_findStructInPackage(&((*(_self_))._field_files), _30629_ident, _30641_binded);;
	if ((_30817_s != nullptr)) {
		return _30817_s;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a606141b:;
		if (it != expr_end) {
			jule::Ptr<_1abcdb39e_ImportInfo> _31321_imp = *it;
			{
				if ((!(_1abce27d4_impIsLookupable(&(_31321_imp), _30629_ident)))) {
					goto _iter_next_1a606141b;
				};
				_30817_s=_1abcdc47c_FindStruct(_31321_imp.ptr(), _30629_ident, _30641_binded);
				if (((_30817_s != nullptr) && _1abce76c9_isAccessibleDefine(_self_, _30817_s.get()._field_Public, _30817_s.get()._field_Token))) {
					return _30817_s;;
				};
			}
			_iter_next_1a606141b:;
			++it;
			goto _iter_begin_1a606141b;
		}
		_iter_end_1a606141b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1acb221d4_Fn> _1abce5ab2_FindFn(_1abce4671_Sema* _self_, jule::Str _33125_ident, jule::Bool _33137_binded) {
	jule::Ptr<_1acb221d4_Fn> _33317_f = _1abcd9842_findFnInPackage(&((*(_self_))._field_files), _33125_ident, _33137_binded);;
	if ((_33317_f != nullptr)) {
		return _33317_f;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6063b05:;
		if (it != expr_end) {
			jule::Ptr<_1abcdb39e_ImportInfo> _33921_imp = *it;
			{
				if ((!(_1abce27d4_impIsLookupable(&(_33921_imp), _33125_ident)))) {
					goto _iter_next_1a6063b05;
				};
				_33317_f=_1abcdc834_FindFn(_33921_imp.ptr(), _33125_ident, _33137_binded);
				if (((_33317_f != nullptr) && _1abce76c9_isAccessibleDefine(_self_, _33317_f.get()._field_Public, _33317_f.get()._field_Token))) {
					return _33317_f;;
				};
			}
			_iter_next_1a6063b05:;
			++it;
			goto _iter_begin_1a6063b05;
		}
		_iter_end_1a6063b05:;
	};
	return nullptr;;
}



inline jule::Ptr<_1acb34405_Trait> _1abce5dc0_FindTrait(_1abce4671_Sema* _self_, jule::Str _35828_ident) {
	jule::Ptr<_1acb34405_Trait> _36017_t = _1abcd9b50_findTraitInPackage(&((*(_self_))._field_files), _35828_ident);;
	if ((_36017_t != nullptr)) {
		return _36017_t;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6065ed1:;
		if (it != expr_end) {
			jule::Ptr<_1abcdb39e_ImportInfo> _36621_imp = *it;
			{
				if ((!(_1abce27d4_impIsLookupable(&(_36621_imp), _35828_ident)))) {
					goto _iter_next_1a6065ed1;
				};
				_36017_t=_1abcdcb42_FindTrait(_36621_imp.ptr(), _35828_ident);
				if (((_36017_t != nullptr) && _1abce76c9_isAccessibleDefine(_self_, _36017_t.get()._field_Public, _36017_t.get()._field_Token))) {
					return _36017_t;;
				};
			}
			_iter_next_1a6065ed1:;
			++it;
			goto _iter_begin_1a6065ed1;
		}
		_iter_end_1a6065ed1:;
	};
	return nullptr;;
}



inline jule::Ptr<_1acb36b88_Enum> _1abce61cd_FindEnum(_1abce4671_Sema* _self_, jule::Str _38527_ident) {
	jule::Ptr<_1acb36b88_Enum> _38717_e = _1abcd9e91_findEnumInPackage(&((*(_self_))._field_files), _38527_ident);;
	if ((_38717_e != nullptr)) {
		return _38717_e;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6068467:;
		if (it != expr_end) {
			jule::Ptr<_1abcdb39e_ImportInfo> _39321_imp = *it;
			{
				if ((!(_1abce27d4_impIsLookupable(&(_39321_imp), _38527_ident)))) {
					goto _iter_next_1a6068467;
				};
				_38717_e=_1abcdce50_FindEnum(_39321_imp.ptr(), _38527_ident);
				if (((_38717_e != nullptr) && _1abce76c9_isAccessibleDefine(_self_, _38717_e.get()._field_Public, _38717_e.get()._field_Token))) {
					return _38717_e;;
				};
			}
			_iter_next_1a6068467:;
			++it;
			goto _iter_begin_1a6068467;
		}
		_iter_end_1a6068467:;
	};
	return nullptr;;
}



inline jule::Ptr<_1acb38283_TypeEnum> _1abce64db_FindTypeEnum(_1abce4671_Sema* _self_, jule::Str _41231_ident) {
	jule::Ptr<_1acb38283_TypeEnum> _41417_e = _1abcda2d2_findTypeEnumInPackage(&((*(_self_))._field_files), _41231_ident);;
	if ((_41417_e != nullptr)) {
		return _41417_e;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a606a8ed:;
		if (it != expr_end) {
			jule::Ptr<_1abcdb39e_ImportInfo> _42021_imp = *it;
			{
				if ((!(_1abce27d4_impIsLookupable(&(_42021_imp), _41231_ident)))) {
					goto _iter_next_1a606a8ed;
				};
				_41417_e=_1abcdd25d_FindTypeEnum(_42021_imp.ptr(), _41231_ident);
				if (((_41417_e != nullptr) && _1abce76c9_isAccessibleDefine(_self_, _41417_e.get()._field_Public, _41417_e.get()._field_Token))) {
					return _41417_e;;
				};
			}
			_iter_next_1a606a8ed:;
			++it;
			goto _iter_begin_1a606a8ed;
		}
		_iter_end_1a606a8ed:;
	};
	return nullptr;;
}



inline jule::Bool _1abce68b5_isFlag(_1abce4671_Sema* _self_, jule::I64 _43621_flags) {
	return (((*(_self_))._field_flags & _43621_flags) == _43621_flags);;
}



inline void _1abce6b3a_setCurrentFile(_1abce4671_Sema* _self_, jule::Ptr<_1abd59241_SymbolTable> _43837_f) {
	(*(_self_))._field_file=_43837_f;
}



inline void _1abce7003_pushErr(_1abce4671_Sema* _self_, jule::Ptr<_2097d15d8_Token> _44026_token, jule::Str _44041_fmt, jule::Slice<jule::Any> _44054_args) {
	{ jule::Slice<_20943da3c_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1abce2493_compilerErr(&(_44026_token), true, _44041_fmt, _44054_args)); };
}



inline void _1abce7322_pushSuggestion(_1abce4671_Sema* _self_, jule::Str _44533_fmt, jule::Slice<jule::Any> _44546_args) {
	{
		_1abce3928_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _44533_fmt, _44546_args);
	};
}



inline jule::Bool _1abce76c9_isAccessibleDefine(_1abce4671_Sema* _self_, jule::Bool _45033_public, jule::Ptr<_2097d15d8_Token> _45047_token) {
	return ((_45033_public || (_45047_token.get()._field_File == nullptr)) || (_2097d70a0_Dir((*(_self_))._field_file.get()._field_File.ptr()) == _2097d70a0_Dir(_45047_token.get()._field_File.ptr())));;
}



inline jule::Bool _1abce7b2a_isDuplicatedIdent(_1abce4671_Sema* _self_, jule::Uintptr _45732_itself, jule::Str _45749_ident, jule::Bool _45761_binded) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6071c45:;
		if (it != expr_end) {
			jule::Ptr<_1abd59241_SymbolTable> *_45816_f = it;
			{
				if (_1abd5c420_isDuplicatedIdent((*(_45816_f)).ptr(), _45732_itself, _45749_ident, _45761_binded)) {
					return true;;
				};
				{
					auto expr = &((*(_45816_f)).get()._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a60727d4:;
					if (it != expr_end) {
						jule::Ptr<_1abcdb39e_ImportInfo> *_46320_imp = it;
						{
							{
								auto expr = &((*(_46320_imp)).get()._field_Selected);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a6073351:;
								if (it != expr_end) {
									jule::Ptr<_2097d15d8_Token> *_46424_selected = it;
									{
										if (((*(_46424_selected)).get()._field_Kind == _45749_ident)) {
											return true;;
										};
									}
									_iter_next_1a6073351:;
									++it;
									goto _iter_begin_1a6073351;
								}
								_iter_end_1a6073351:;
							};
						}
						_iter_next_1a60727d4:;
						++it;
						goto _iter_begin_1a60727d4;
					}
					_iter_end_1a60727d4:;
				};
			}
			_iter_next_1a6071c45:;
			++it;
			goto _iter_begin_1a6071c45;
		}
		_iter_end_1a6071c45:;
	};
	return false;;
}



inline void _1abce7e49_checkDirectives(jule::Ptr<_1abce4671_Sema> _self_, jule::Slice<jule::Ptr<_1acaa47b5_Directive>>* _47440_d, jule::Any _47466_o) {
	_1abcd52bb_directiveChecker _47517_dc = _1abcd52bb_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1acaa47b5_Directive>>>)((&((*(_47440_d)))))), ._field_o=_47466_o};;
	_1abcd6883_check(&_47517_dc);
}



inline jule::Bool _1abce839a_checkGenericQuantity(_1abce4671_Sema* _self_, jule::I64 _48339_required, jule::I64 _48354_given, jule::Ptr<_2097d15d8_Token> _48366_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_48339_required == 0LL) && (_48354_given > 0LL))) {
			_case_begin_1a607572c:;
			{
				_1abce7003_pushErr(_self_, _48366_token, jule::Str("type have not generics but instantiate like generics", 52), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_48339_required > 0LL) && (_48354_given == 0LL))) {
			_case_begin_1a60757a4:;
			{
				_1abce7003_pushErr(_self_, _48366_token, jule::Str("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_48339_required < _48354_given)) {
			_case_begin_1a607582b:;
			{
				_1abce7003_pushErr(_self_, _48366_token, jule::Str("overflow generics", 17), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_48339_required > _48354_given)) {
			_case_begin_1a60758a3:;
			{
				_1abce7003_pushErr(_self_, _48366_token, jule::Str("missing generics", 16), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a60756a5:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a60755d9:;
	};
}



inline jule::Bool _1abce8774_isDuplicatedImportSelection(_1abce4671_Sema* _self_, jule::Uintptr _50242_itself, jule::Str _50259_ident) {
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a607828a:;
		if (it != expr_end) {
			jule::Ptr<_1abcdb39e_ImportInfo> *_50316_imp = it;
			{
				if ((static_cast<jule::Uintptr>((*(_50316_imp))) == _50242_itself)) {
					goto _iter_end_1a607828a;
				};
				if (_1abcdd956_existIdent((*(_50316_imp)).ptr(), _50259_ident)) {
					return true;;
				};
			}
			_iter_next_1a607828a:;
			++it;
			goto _iter_begin_1a607828a;
		}
		_iter_end_1a607828a:;
	};
	return false;;
}



inline jule::Any _1abce8b3c_getImportDef(_1abce4671_Sema* _self_, jule::Str _51527_ident, jule::Ptr<_1abcdb39e_ImportInfo>* _51544_imp) {
	if ((_1acd6d1cc_findPackageBuiltinDef((*(_51544_imp)).get()._field_LinkPath, _51527_ident) != nullptr)) {
		return jule::Any(true, &__jule_any_type4);;
	};
	{
		auto expr = &((*(_51544_imp)).get()._field_Package.get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a607a105:;
		if (it != expr_end) {
			jule::Ptr<_1abd59241_SymbolTable> _51921_f = *it;
			{
				;
				jule::Any _52221_def = _1abd5bebe_defByIdent(_51921_f.ptr(), _51527_ident, false);;
				if ((_52221_def != nullptr)) {
					return _52221_def;;
				};
			}
			_iter_next_1a607a105:;
			++it;
			goto _iter_begin_1a607a105;
		}
		_iter_end_1a607a105:;
	};
	return nullptr;;
}



inline jule::Bool _1a6080e96_checkImportSelection(_1abce4671_Sema* _self_, jule::Ptr<_2097d15d8_Token>* _53043_ident, jule::Ptr<_1abd1497c_Var>* _53059_s) {
	if ((!(_1abce76c9_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_1abce7003_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1abce7322_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1abcda7cc_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_1abce7003_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1a6084b04_checkImportSelection(_1abce4671_Sema* _self_, jule::Ptr<_2097d15d8_Token>* _53043_ident, jule::Ptr<_1acca3e59_TypeAlias>* _53059_s) {
	if ((!(_1abce76c9_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_1abce7003_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1abce7322_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1abcda7cc_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_1abce7003_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1a608870c_checkImportSelection(_1abce4671_Sema* _self_, jule::Ptr<_2097d15d8_Token>* _53043_ident, jule::Ptr<_1acb07021_Struct>* _53059_s) {
	if ((!(_1abce76c9_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_1abce7003_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1abce7322_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1abcda7cc_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_1abce7003_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1a608c49c_checkImportSelection(_1abce4671_Sema* _self_, jule::Ptr<_2097d15d8_Token>* _53043_ident, jule::Ptr<_1acb34405_Trait>* _53059_s) {
	if ((!(_1abce76c9_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_1abce7003_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1abce7322_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1abcda7cc_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_1abce7003_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1a60910a5_checkImportSelection(_1abce4671_Sema* _self_, jule::Ptr<_2097d15d8_Token>* _53043_ident, jule::Ptr<_1acb36b88_Enum>* _53059_s) {
	if ((!(_1abce76c9_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_1abce7003_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1abce7322_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1abcda7cc_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_1abce7003_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1a6094bad_checkImportSelection(_1abce4671_Sema* _self_, jule::Ptr<_2097d15d8_Token>* _53043_ident, jule::Ptr<_1acb38283_TypeEnum>* _53059_s) {
	if ((!(_1abce76c9_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_1abce7003_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1abce7322_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1abcda7cc_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_1abce7003_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1a60987b6_checkImportSelection(_1abce4671_Sema* _self_, jule::Ptr<_2097d15d8_Token>* _53043_ident, jule::Ptr<_1acb221d4_Fn>* _53059_s) {
	if ((!(_1abce76c9_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_1abce7003_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1abce7322_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1abcda7cc_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_1abce7003_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}



inline jule::Bool _1abce9324_checkImportSelectedSelections(_1abce4671_Sema* _self_, jule::Ptr<_1abcdb39e_ImportInfo>* _54453_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_54453_imp)).get()._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a607bbc8:;
		if (it != expr_end) {
			jule::Ptr<_2097d15d8_Token> _54616_ident = *it;
			{
				if (_54616_ident.get()._field_Kind.equal("self", 4)) {
					goto _iter_next_1a607bbc8;
				};
				if (_1abce8774_isDuplicatedImportSelection(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_54453_imp)))), _54616_ident.get()._field_Kind)) {
					_1abce7003_pushErr(_self_, _54616_ident, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_54616_ident.get()._field_Kind, &__jule_any_type5)}));
					_1abce7322_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1a607bbc8;
				};
				jule::Any _55821_def = _1abce8b3c_getImportDef(_self_, _54616_ident.get()._field_Kind, _54453_imp);;
				{
					auto &_match_expr{ _55821_def };
					
					if (_match_expr.type == &__jule_any_type4) {
						_case_begin_1a607ebcb:;
						{
							goto _iter_next_1a607bbc8;
						}
					}
					else if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1a607cbb8:;
						{
							jule::Ptr<_1abd1497c_Var> _56425_v = _55821_def.cast_ptr<_1abd1497c_Var>(&__jule_any_type8);;
							__jule_func_result=(_1a6080e96_checkImportSelection(_self_, &(_54616_ident), &(_56425_v)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type67) {
						_case_begin_1a607e307:;
						{
							jule::Ptr<_1acca3e59_TypeAlias> _56725_ta = _55821_def.cast_ptr<_1acca3e59_TypeAlias>(&__jule_any_type67);;
							__jule_func_result=(_1a6084b04_checkImportSelection(_self_, &(_54616_ident), &(_56725_ta)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type66) {
						_case_begin_1a607e36d:;
						{
							jule::Ptr<_1acb07021_Struct> _57025_s = _55821_def.cast_ptr<_1acb07021_Struct>(&__jule_any_type66);;
							__jule_func_result=(_1a608870c_checkImportSelection(_self_, &(_54616_ident), &(_57025_s)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type10) {
						_case_begin_1a607ed0d:;
						{
							jule::Ptr<_1acb34405_Trait> _57325_t = _55821_def.cast_ptr<_1acb34405_Trait>(&__jule_any_type10);;
							__jule_func_result=(_1a608c49c_checkImportSelection(_self_, &(_54616_ident), &(_57325_t)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type68) {
						_case_begin_1a607ed74:;
						{
							jule::Ptr<_1acb36b88_Enum> _57625_e = _55821_def.cast_ptr<_1acb36b88_Enum>(&__jule_any_type68);;
							__jule_func_result=(_1a60910a5_checkImportSelection(_self_, &(_54616_ident), &(_57625_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type69) {
						_case_begin_1a607edda:;
						{
							jule::Ptr<_1acb38283_TypeEnum> _57925_e = _55821_def.cast_ptr<_1acb38283_TypeEnum>(&__jule_any_type69);;
							__jule_func_result=(_1a6094bad_checkImportSelection(_self_, &(_54616_ident), &(_57925_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type65) {
						_case_begin_1a607ee51:;
						{
							jule::Ptr<_1acb221d4_Fn> _58225_f = _55821_def.cast_ptr<_1acb221d4_Fn>(&__jule_any_type65);;
							__jule_func_result=(_1a60987b6_checkImportSelection(_self_, &(_54616_ident), &(_58225_f)) && __jule_func_result);
						}
					}
					else {
						_case_begin_1a607e11a:;
						{
							_1abce7003_pushErr(_self_, _54616_ident, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any(_54616_ident.get()._field_Kind, &__jule_any_type5)}));
							__jule_func_result=false;
							goto _iter_next_1a607bbc8;
						}
					}
					_match_end_1a607e0b5:;
				};
			}
			_iter_next_1a607bbc8:;
			++it;
			goto _iter_begin_1a607bbc8;
		}
		_iter_end_1a607bbc8:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a609c798_checkImportsAllSelectionsFromCollection(_1abce4671_Sema* _self_, jule::Slice<jule::Ptr<_1abd1497c_Var>>* _59362_s, jule::Ptr<_2097d15d8_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a609e305:;
		if (it != expr_end) {
			jule::Ptr<_1abd1497c_Var> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_1a6080e96_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_1a609e305:;
			++it;
			goto _iter_begin_1a609e305;
		}
		_iter_end_1a609e305:;
	};
	return _59417_ok;;
}

inline jule::Bool _1a60a0b31_checkImportsAllSelectionsFromCollection(_1abce4671_Sema* _self_, jule::Slice<jule::Ptr<_1acca3e59_TypeAlias>>* _59362_s, jule::Ptr<_2097d15d8_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a60a1e0c:;
		if (it != expr_end) {
			jule::Ptr<_1acca3e59_TypeAlias> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_1a6084b04_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_1a60a1e0c:;
			++it;
			goto _iter_begin_1a60a1e0c;
		}
		_iter_end_1a60a1e0c:;
	};
	return _59417_ok;;
}

inline jule::Bool _1a60a1291_checkImportsAllSelectionsFromCollection(_1abce4671_Sema* _self_, jule::Slice<jule::Ptr<_1acb07021_Struct>>* _59362_s, jule::Ptr<_2097d15d8_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a60a4a03:;
		if (it != expr_end) {
			jule::Ptr<_1acb07021_Struct> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_1a608870c_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_1a60a4a03:;
			++it;
			goto _iter_begin_1a60a4a03;
		}
		_iter_end_1a60a4a03:;
	};
	return _59417_ok;;
}

inline jule::Bool _1a60a3d43_checkImportsAllSelectionsFromCollection(_1abce4671_Sema* _self_, jule::Slice<jule::Ptr<_1acb221d4_Fn>>* _59362_s, jule::Ptr<_2097d15d8_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a60a761b:;
		if (it != expr_end) {
			jule::Ptr<_1acb221d4_Fn> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_1a60987b6_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_1a60a761b:;
			++it;
			goto _iter_begin_1a60a761b;
		}
		_iter_end_1a60a761b:;
	};
	return _59417_ok;;
}

inline jule::Bool _1a60a53b6_checkImportsAllSelectionsFromCollection(_1abce4671_Sema* _self_, jule::Slice<jule::Ptr<_1acb34405_Trait>>* _59362_s, jule::Ptr<_2097d15d8_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a60aa1bd:;
		if (it != expr_end) {
			jule::Ptr<_1acb34405_Trait> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_1a608c49c_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_1a60aa1bd:;
			++it;
			goto _iter_begin_1a60aa1bd;
		}
		_iter_end_1a60aa1bd:;
	};
	return _59417_ok;;
}

inline jule::Bool _1a60a9552_checkImportsAllSelectionsFromCollection(_1abce4671_Sema* _self_, jule::Slice<jule::Ptr<_1acb36b88_Enum>>* _59362_s, jule::Ptr<_2097d15d8_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a60acc70:;
		if (it != expr_end) {
			jule::Ptr<_1acb36b88_Enum> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_1a60910a5_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_1a60acc70:;
			++it;
			goto _iter_begin_1a60acc70;
		}
		_iter_end_1a60acc70:;
	};
	return _59417_ok;;
}

inline jule::Bool _1a60ac104_checkImportsAllSelectionsFromCollection(_1abce4671_Sema* _self_, jule::Slice<jule::Ptr<_1acb38283_TypeEnum>>* _59362_s, jule::Ptr<_2097d15d8_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a60b08aa:;
		if (it != expr_end) {
			jule::Ptr<_1acb38283_TypeEnum> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_1a6094bad_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_1a60b08aa:;
			++it;
			goto _iter_begin_1a60b08aa;
		}
		_iter_end_1a60b08aa:;
	};
	return _59417_ok;;
}



inline jule::Bool _1abce9a50_checkImportAllSelections(_1abce4671_Sema* _self_, jule::Ptr<_1abcdb39e_ImportInfo>* _60344_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_60344_imp)).get()._field_Package.get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a60993bb:;
		if (it != expr_end) {
			jule::Ptr<_1abd59241_SymbolTable> *_60516_file = it;
			{
				__jule_func_result=(_1a609c798_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_Vars), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1a60a0b31_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_TypeAliases), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1a60a1291_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_Structs), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1a60a3d43_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_Funcs), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1a60a53b6_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_Traits), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1a60a9552_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_Enums), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1a60ac104_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_TypeEnums), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
			}
			_iter_next_1a60993bb:;
			++it;
			goto _iter_begin_1a60993bb;
		}
		_iter_end_1a60993bb:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1abce9d6e_checkImportSelections(_1abce4671_Sema* _self_, jule::Ptr<_1abcdb39e_ImportInfo>* _61745_imp) {
	jule::Bool __jule_func_result = false;
	if (((*(_61745_imp)).get()._field_Selected.len() > 0LL)) {
		__jule_func_result = _1abce9324_checkImportSelectedSelections(_self_, _61745_imp);
		return __jule_func_result;;
	} else if ((*(_61745_imp)).get()._field_ImportAll) {
		__jule_func_result = _1abce9a50_checkImportAllSelections(_self_, _61745_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1abcea17c_isUseAliasDuplication(_1abce4671_Sema* _self_, jule::Ptr<_1abcdb39e_ImportInfo>* _62641_imp) {
	if (((*(_62641_imp)).get()._field_Alias.len() == 0LL)) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a60b2e2e:;
		if (it != expr_end) {
			jule::Ptr<_1abcdb39e_ImportInfo> _63121_imp2 = *it;
			{
				if ((_63121_imp2 == (*(_62641_imp)))) {
					goto _iter_end_1a60b2e2e;
				};
				if ((_63121_imp2.get()._field_Alias == (*(_62641_imp)).get()._field_Alias)) {
					return true;;
				};
				if (((_63121_imp2.get()._field_Ident == _63121_imp2.get()._field_LinkPath) && (_63121_imp2.get()._field_Ident == (*(_62641_imp)).get()._field_Alias))) {
					return true;;
				};
			}
			_iter_next_1a60b2e2e:;
			++it;
			goto _iter_begin_1a60b2e2e;
		}
		_iter_end_1a60b2e2e:;
	};
	return false;;
}



inline jule::Bool _1abcea48a_checkImport(_1abce4671_Sema* _self_, jule::Ptr<_1abcdb39e_ImportInfo>* _64635_imp) {
	if (((*(_64635_imp)).get()._field_Binded || ((*(_64635_imp)).get()._field_Package.get()._field_Files.len() == 0LL))) {
		return true;;
	};
	if (_1abcea17c_isUseAliasDuplication(_self_, _64635_imp)) {
		_1abce7003_pushErr(_self_, (*(_64635_imp)).get()._field_Token, jule::Str("identifier duplication: @ is already used for another use declaration above", 75), jule::Slice<jule::Any>::make({jule::Any((*(_64635_imp)).get()._field_Alias, &__jule_any_type5)}));
		_1abce7322_pushSuggestion(_self_, jule::Str("rename alias for this use declaration to avoid duplication", 58), jule::Slice<jule::Any>());
	};
	if ((!((*(_64635_imp)).get()._field_Duplicate))) {
		jule::Ptr<_1abce4671_Sema> _65721_sema = jule::new_ptr<_1abce4671_Sema>(_1abce4671_Sema{._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta});;
		_1abd1132a_check(_65721_sema, &((*(_64635_imp)).get()._field_Package.get()._field_Files));
		if ((_65721_sema.get()._field_errors.len() != 0LL)) {
			((*(_self_))._field_errors).append(_65721_sema.get()._field_errors);;
			_65721_sema.get()._field_errors=nullptr;
			return false;;
		};
	};
	return _1abce9d6e_checkImportSelections(_self_, _64635_imp);;
}



inline void _1abcea666_checkImports(_1abce4671_Sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a60b7692:;
		if (it != expr_end) {
			jule::Ptr<_1abd59241_SymbolTable> _67221_file = *it;
			{
				_1abce6b3a_setCurrentFile(_self_, _67221_file);
				{
					auto expr = &(_67221_file.get()._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a60b9155:;
					if (it != expr_end) {
						jule::Ptr<_1abcdb39e_ImportInfo> _67425_imp = *it;
						{
							jule::Bool _67521_ok = _1abcea48a_checkImport(_self_, &(_67425_imp));;
							if ((!(_67521_ok))) {
								return;;
							};
						}
						_iter_next_1a60b9155:;
						++it;
						goto _iter_begin_1a60b9155;
					}
					_iter_end_1a60b9155:;
				};
			}
			_iter_next_1a60b7692:;
			++it;
			goto _iter_begin_1a60b7692;
		}
		_iter_end_1a60b7692:;
	};
}



inline void _1abcea842_implFileImpls(jule::Ptr<_1abce4671_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a60b8cae:;
		if (it != expr_end) {
			jule::Ptr<_1abcb7831_Impl> _68521_imp = *it;
			{
				_1abd07d7c_implImpl(_self_, &(_68521_imp));
			}
			_iter_next_1a60b8cae:;
			++it;
			goto _iter_begin_1a60b8cae;
		}
		_iter_end_1a60b8cae:;
	};
}



inline void _1abceaa1d_implImpls(jule::Ptr<_1abce4671_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a60ba684:;
		if (it != expr_end) {
			jule::Ptr<_1abd59241_SymbolTable> _69121_file = *it;
			{
				_1abce6b3a_setCurrentFile(_self_.ptr(), _69121_file);
				_1abcea842_implFileImpls(_self_);
			}
			_iter_next_1a60ba684:;
			++it;
			goto _iter_begin_1a60ba684;
		}
		_iter_end_1a60ba684:;
	};
}



inline void _1abceabe9_checkEnums(jule::Ptr<_1abce4671_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a60bba2b:;
		if (it != expr_end) {
			jule::Ptr<_1abd59241_SymbolTable> _69821_file = *it;
			{
				_1abce6b3a_setCurrentFile(_self_.ptr(), _69821_file);
				{
					
					if ((!(_1abd04681_checkEnumDecls(_self_)))) {
						_case_begin_1a60bc4ee:;
					}
					else if ((!(_1abd048e5_checkTypeEnumDecls(_self_)))) {
						_case_begin_1a60bc576:;
					}
					_match_end_1a60bc455:;
				};
			}
			_iter_next_1a60bba2b:;
			++it;
			goto _iter_begin_1a60bba2b;
		}
		_iter_end_1a60bba2b:;
	};
}



inline void _1abceadc5_checkFileInherits(jule::Ptr<_1abce4671_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a60bbed2:;
		if (it != expr_end) {
			jule::Ptr<_1acb34405_Trait> _70821_t = *it;
			{
				jule::Bool _70917_ok = _1abd06133__checkTraitDeclInherits(_self_, &(_70821_t));;
				if ((!(_70917_ok))) {
					return;;
				};
			}
			_iter_next_1a60bbed2:;
			++it;
			goto _iter_begin_1a60bbed2;
		}
		_iter_end_1a60bbed2:;
	};
}



inline void _1abceb0a1_checkInherits(jule::Ptr<_1abce4671_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a60bd2ad:;
		if (it != expr_end) {
			jule::Ptr<_1abd59241_SymbolTable> _71721_file = *it;
			{
				_1abce6b3a_setCurrentFile(_self_.ptr(), _71721_file);
				_1abceadc5_checkFileInherits(_self_);
			}
			_iter_next_1a60bd2ad:;
			++it;
			goto _iter_begin_1a60bd2ad;
		}
		_iter_end_1a60bd2ad:;
	};
}



inline _1accb5ee3_typeChecker _1abceb502_typeChecker(jule::Ptr<_1abce4671_Sema> _self_, jule::Trait<_1accc2ecd_Lookup> _72335_l, jule::Slice<jule::Ptr<_1acca3e59_TypeAlias>> _72350_generics, jule::Ptr<_1accb5113_referencer> _72413_referencer) {
	_1accb5ee3_typeChecker _72517_tc = _1accb5ee3_typeChecker{._field_s=_self_, ._field_rootLookup=_72335_l, ._field_lookup=_72335_l, ._field_referencer=_72413_referencer, ._field_useGenerics=_72350_generics, };;
	{
		auto &_match_expr{ _72335_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1a60c0a41:;
			{
				jule::Ptr<_1abcc4563_scopeChecker> _73421_hard = _1abcc75ee_getHardRoot(_72335_l.cast_ptr<_1abcc4563_scopeChecker>(0));;
				_72517_tc._field_refers=_73421_hard.get()._field_owner.get()._field_Refers;
			}
		}
		_match_end_1a60c0942:;
	};
	if (((_72413_referencer != nullptr) && (_72413_referencer.get()._field_refs != nullptr))) {
		{
			auto &_match_expr{ _72413_referencer.get()._field_owner };
			
			if (_match_expr.type == &__jule_any_type67) {
				_case_begin_1a60c1de9:;
				{
					_72517_tc._field_ownerAlias=_72413_referencer.get()._field_owner.cast_ptr<_1acca3e59_TypeAlias>(&__jule_any_type67);
				}
			}
			_match_end_1a60c1d94:;
		};
	};
	return _72517_tc;;
}



inline jule::Ptr<_1acca4ba2_TypeKind> _1abceb9ec_buildTypeWithRefers(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acad72cb_TypeDecl>* _75044_t, jule::Trait<_1accc2ecd_Lookup> _75067_l, jule::Slice<jule::Ptr<_1acca3e59_TypeAlias>> _75113_generics, jule::Ptr<_1accb5113_referencer> _75141_referencer) {
	return ({ auto _wrap_copy = _1abceb502_typeChecker(_self_, _75067_l, _75113_generics, _75141_referencer); _1accbce40_checkDecl(&_wrap_copy, _75044_t); });;
}



inline jule::Bool _1abcebee7_checkTypeWithRefers(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1accaba55_TypeSymbol>* _75744_t, jule::Trait<_1accc2ecd_Lookup> _75764_l, jule::Slice<jule::Ptr<_1acca3e59_TypeAlias>> _75813_generics, jule::Ptr<_1accb5113_referencer> _75841_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1accabdb8_checked((*(_75744_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*(_75744_t)).get()._field_Kind=_1abceb9ec_buildTypeWithRefers(_self_, &((*(_75744_t)).get()._field_Decl), _75764_l, _75813_generics, _75841_referencer);
	__jule_func_result = _1accabdb8_checked((*(_75744_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1acb5759e_constraintChecker> _1abcec25b_constraintChecker(jule::Ptr<_1abce4671_Sema> _self_) {
	return jule::new_ptr<_1acb5759e_constraintChecker>(_1acb5759e_constraintChecker{._field_s=_self_, });;
}



inline jule::Bool _1abcec613_checkType(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1accaba55_TypeSymbol>* _77234_t, jule::Trait<_1accc2ecd_Lookup> _77254_l) {
	return _1abcebee7_checkTypeWithRefers(_self_, _77234_t, _77254_l, nullptr, nullptr);;
}



inline jule::Ptr<_1acca4ba2_TypeKind> _1abceca64_buildTypeWithGenerics(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acad72cb_TypeDecl>* _77846_t, jule::Slice<jule::Ptr<_1acca3e59_TypeAlias>> _77913_generics, jule::Ptr<_1acb27cde_ReferenceStack> _77941_refers) {
	jule::Ptr<_1accb5ee3_typeChecker> _78017_tc = jule::new_ptr<_1accb5ee3_typeChecker>(_1accb5ee3_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1accc2ecd_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1accc2ecd_Lookup>(_self_, 3), ._field_refers=_77941_refers, ._field_useGenerics=_77913_generics, });;
	return _1accbce40_checkDecl(_78017_tc.ptr(), _77846_t);;
}



inline jule::Ptr<_1acca4ba2_TypeKind> _1abcecd72_buildType(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acad72cb_TypeDecl>* _79134_t) {
	return _1abceca64_buildTypeWithGenerics(_self_, _79134_t, nullptr, nullptr);;
}



inline jule::Ptr<_1acca4ba2_TypeKind> _1abced180_selectType(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acad72cb_TypeDecl>* _79635_t) {
	jule::Ptr<_1accb5ee3_typeChecker> _79717_tc = jule::new_ptr<_1accb5ee3_typeChecker>(_1accb5ee3_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1accc2ecd_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1accc2ecd_Lookup>(_self_, 3), ._field_selection=true, });;
	return _1accbce40_checkDecl(_79717_tc.ptr(), _79635_t);;
}



inline jule::Ptr<_1acc78e73_Eval> _1abced5d1_evalpd(jule::Ptr<_1abce4671_Sema> _self_, jule::Trait<_1accc2ecd_Lookup> _80830_l, jule::Ptr<_1acca4ba2_TypeKind> _80845_p, jule::Ptr<_1abd1497c_Var> _80863_owner) {
	jule::Ptr<_1acc78e73_Eval> _80917_e = jule::new_ptr<_1acc78e73_Eval>(_1acc78e73_Eval{._field_s=_self_, ._field_lookup=_80830_l, ._field_owner=_80863_owner, });;
	{
		auto &_match_expr{ _80830_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1a60c9e46:;
			{
				_80917_e.get()._field_unsafety=_1abcc670d_isUnsafe(_80830_l.cast_ptr<_1abcc4563_scopeChecker>(0));
			}
		}
		_match_end_1a60c9dd0:;
	};
	_80917_e.get()._field_prefix=_80845_p;
	return _80917_e;;
}



inline jule::Ptr<_1acc78e73_Eval> _1abced988_evalp(jule::Ptr<_1abce4671_Sema> _self_, jule::Trait<_1accc2ecd_Lookup> _82329_l, jule::Ptr<_1acca4ba2_TypeKind> _82344_p) {
	return _1abced5d1_evalpd(_self_, _82329_l, _82344_p, nullptr);;
}



inline jule::Ptr<_1acc78e73_Eval> _1abcedc96_eval(jule::Ptr<_1abce4671_Sema> _self_, jule::Trait<_1accc2ecd_Lookup> _82828_l) {
	return _1abced988_evalp(_self_, _82828_l, nullptr);;
}



inline jule::Bool _1abcee291_checkAssignType(jule::Ptr<_1abce4671_Sema> _self_, jule::Bool _83235_destIsRef, jule::Ptr<_1acca4ba2_TypeKind>* _83257_dest, jule::Ptr<_1abd5dc4b_Data>* _83314_d, jule::Ptr<_2097d15d8_Token> _83328_errorToken) {
	if ((*(_83314_d)).get()._field_Decl) {
		_1abce7003_pushErr(_self_.ptr(), _83328_errorToken, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return false;;
	};
	if (_83235_destIsRef) {
		if ((!(_1acca5367_Equal((*(_83257_dest)), (*(_83314_d)).get()._field_Kind)))) {
			_1abce7003_pushErr(_self_.ptr(), _83328_errorToken, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str((*(_83257_dest)).ptr()), &__jule_any_type5),jule::Any(_1acca5059_Str((*(_83314_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
			return false;;
		};
	} else {
		jule::Ptr<_1abd492db_assignTypeChecker> _84421_atc = jule::new_ptr<_1abd492db_assignTypeChecker>(_1abd492db_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_83257_dest)), ._field_d=(*(_83314_d)), ._field_errorToken=_83328_errorToken});;
		jule::Bool _85017_ok = _1abd4a463_check(_84421_atc.ptr());;
		if ((!(_85017_ok))) {
			return false;;
		};
	};
	if (((!(_1abd5e5ba_IsConst((*(_83314_d)).ptr()))) || (_1acca73be_Prim((*(_83257_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _86017_kind = _1acca73be_Prim((*(_83257_dest)).ptr()).get()._field_Kind;;
	{
		
		if (_1ddeb39b7_IsSigInt(_86017_kind)) {
			_case_begin_1a60d11d3:;
			{
				_1ddeb7878_SetI64((*(_83314_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1ddeb712a_AsI64((*(_83314_d)).get()._field_Constant.ptr())));
			}
		}
		else if (_1ddeb3ca3_IsUnsigInt(_86017_kind)) {
			_case_begin_1a60d125a:;
			{
				_1ddeb7aed_SetU64((*(_83314_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1ddeb738e_AsU64((*(_83314_d)).get()._field_Constant.ptr())));
			}
		}
		else if (_1ddeb4369_IsFloat(_86017_kind)) {
			_case_begin_1a60d12d2:;
			{
				_1ddeb836d_SetF64((*(_83314_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(_1ddeb7603_AsF64((*(_83314_d)).get()._field_Constant.ptr())));
			}
		}
		_match_end_1a60d1117:;
	};
	return true;;
}



inline jule::Bool _1abcee6e2_checkTypeCompatibility(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acca4ba2_TypeKind>* _87447_dest, jule::Ptr<_1acca4ba2_TypeKind>* _87514_src, jule::Ptr<_2097d15d8_Token>* _87535_errorToken) {
	if (((*(_87514_src)) == nullptr)) {
		_1abce7003_pushErr(_self_.ptr(), (*(_87535_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str((*(_87447_dest)).ptr()), &__jule_any_type5),jule::Any(_1acca5059_Str((*(_87514_src)).ptr()), &__jule_any_type5)}));
		return false;;
	};
	if ((_1acca905d_Tup((*(_87514_src)).ptr()) != nullptr)) {
		_1abce7003_pushErr(_self_.ptr(), (*(_87535_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str((*(_87447_dest)).ptr()), &__jule_any_type5),jule::Any(_1acca5059_Str((*(_87514_src)).ptr()), &__jule_any_type5)}));
		return false;;
	};
	_1abd476b3_typeCompatibilityChecker _88917_tcc = _1abd476b3_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_87447_dest)), ._field_src=(*(_87514_src)), ._field_errorToken=(*(_87535_errorToken))};;
	if (_1abd48c58_check(&_88917_tcc)) {
		return true;;
	};
	_1abce7003_pushErr(_self_.ptr(), (*(_87535_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str((*(_87447_dest)).ptr()), &__jule_any_type5),jule::Any(_1acca5059_Str((*(_87514_src)).ptr()), &__jule_any_type5)}));
	return false;;
}



inline jule::Ptr<_1acca4ba2_TypeKind> _1abceeb65_buildNonGenericTypeKind(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acad72cb_TypeDecl>* _91048_ast, jule::Slice<jule::Ptr<_1acae4272_GenericDecl>>* _91114_generics, jule::Slice<jule::Ptr<_1acca4ba2_TypeKind>>* _91150_ignored) {
	jule::Ptr<_1accb5ee3_typeChecker> _91217_tc = jule::new_ptr<_1accb5ee3_typeChecker>(_1accb5ee3_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1accc2ecd_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1accc2ecd_Lookup>(_self_, 3), ._field_ignoreGenerics=(*(_91114_generics)), ._field_ignoredGenerics=(&((*(_91150_ignored)))), });;
	return _1accbce40_checkDecl(_91217_tc.ptr(), _91048_ast);;
}



inline jule::Bool _1abd00050_buildFnNonGenericTypeKinds(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acb24d85_FnIns>* _92251_f, jule::Slice<jule::Ptr<_1acca4ba2_TypeKind>>* _92267_ignored) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Slice<jule::Ptr<_1acae4272_GenericDecl>> _92417_generics = nullptr;;
	if (_1acb228aa_IsMethod((*(_92251_f)).get()._field_Decl.ptr())) {
		_92417_generics=jule::append((*(_92251_f)).get()._field_Decl.get()._field_Generics,(*(_92251_f)).get()._field_Decl.get()._field_Owner.get()._field_Generics);
	} else {
		_92417_generics=(*(_92251_f)).get()._field_Decl.get()._field_Generics;
	};
	{
		auto expr = &((*(_92251_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a60d9bc0:;
		if (it != expr_end) {
			jule::Ptr<_1acb23eb6_ParamIns> _93121_p = *it;
			{
				if ((!(_1acb20e80_IsSelf(_93121_p.get()._field_Decl.ptr())))) {
					_93121_p.get()._field_Kind=_1abceeb65_buildNonGenericTypeKind(_self_, &(_93121_p.get()._field_Decl.get()._field_Kind.get()._field_Decl), &(_92417_generics), _92267_ignored);
					__jule_func_result=(__jule_func_result && (_93121_p.get()._field_Kind != nullptr));
				};
			}
			_iter_next_1a60d9bc0:;
			++it;
			goto _iter_begin_1a60d9bc0;
		}
		_iter_end_1a60d9bc0:;
	};
	if ((!(_1acb22646_IsVoid((*(_92251_f)).get()._field_Decl.ptr())))) {
		(*(_92251_f)).get()._field_Result=_1abceeb65_buildNonGenericTypeKind(_self_, &((*(_92251_f)).get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl), &(_92417_generics), _92267_ignored);
		__jule_func_result=(__jule_func_result && ((*(_92251_f)).get()._field_Result != nullptr));
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1acb24d85_FnIns> _1abd0036e_getTraitCheckFnKind(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acb221d4_Fn>* _94444_f) {
	if (((*(_94444_f)).get()._field_Instances.len() == 1LL)) {
		return (*(_94444_f)).get()._field_Instances[0LL];;
	};
	jule::Ptr<_1acb24d85_FnIns> _94817_ins = _1acb235c0_instanceForce((*(_94444_f)));;
	jule::Ptr<_1accb5ee3_typeChecker> _95017_tc = jule::new_ptr<_1accb5ee3_typeChecker>(_1accb5ee3_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1accc2ecd_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1accc2ecd_Lookup>(_self_, 3), });;
	{
		auto expr = &(_94817_ins.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a60ddce5:;
		if (it != expr_end) {
			jule::Ptr<_1acb23eb6_ParamIns> _95521_p = *it;
			{
				if ((!(_1acb20e80_IsSelf(_95521_p.get()._field_Decl.ptr())))) {
					_95521_p.get()._field_Kind=_1accbce40_checkDecl(_95017_tc.ptr(), &(_95521_p.get()._field_Decl.get()._field_Kind.get()._field_Decl));
				};
			}
			_iter_next_1a60ddce5:;
			++it;
			goto _iter_begin_1a60ddce5;
		}
		_iter_end_1a60ddce5:;
	};
	if ((!(_1acb22646_IsVoid((*(_94444_f)).ptr())))) {
		_94817_ins.get()._field_Result=_1accbce40_checkDecl(_95017_tc.ptr(), &((*(_94444_f)).get()._field_Result.get()._field_Kind.get()._field_Decl));
	};
	return _94817_ins;;
}



inline jule::Bool _1abd007c0_checkConstraintsFn(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acb24d85_FnIns>* _96743_f, jule::Ptr<_2097d15d8_Token>* _96759_et, jule::Ptr<_1acb24d85_FnIns> _96775_exist) {
	jule::Ptr<_1acb5759e_constraintChecker> _96817_cc = _1abcec25b_constraintChecker(_self_);;
	_96817_cc.get()._field_et=(*(_96759_et));
	_96817_cc.get()._field_fi=(*(_96743_f));
	if ((_96775_exist != nullptr)) {
		{
			auto expr = &(_96775_exist.get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a60e20e5:;
			if (it != expr_end) {
				jule::I64 _97218_i = it - expr->begin();
				jule::Ptr<_1acca3420_InsGeneric> _97225_g = *it;
				{
					(*(_96743_f)).get()._field_Generics[_97218_i].get()._field_Constraint=_97225_g.get()._field_Constraint;
				}
				_iter_next_1a60e20e5:;
				++it;
				_97218_i++;
				goto _iter_begin_1a60e20e5;
			}
			_iter_end_1a60e20e5:;
		};
	} else {
		_96817_cc.get()._field_uniq=true;
	};
	return _1acb5843a_check(_96817_cc);;
}



inline jule::Bool _1abd00c21_checkConstraintsStruct(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acb09d37_StructIns>* _98147_s, jule::Ptr<_2097d15d8_Token>* _98167_et, jule::Ptr<_1acb09d37_StructIns> _98183_exist) {
	jule::Ptr<_1acb5759e_constraintChecker> _98217_cc = _1abcec25b_constraintChecker(_self_);;
	_98217_cc.get()._field_et=(*(_98167_et));
	_98217_cc.get()._field_si=(*(_98147_s));
	if ((_98183_exist != nullptr)) {
		{
			auto expr = &(_98183_exist.get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a60e48cd:;
			if (it != expr_end) {
				jule::I64 _98618_i = it - expr->begin();
				jule::Ptr<_1acca3420_InsGeneric> _98625_g = *it;
				{
					(*(_98147_s)).get()._field_Generics[_98618_i].get()._field_Constraint=_98625_g.get()._field_Constraint;
				}
				_iter_next_1a60e48cd:;
				++it;
				_98618_i++;
				goto _iter_begin_1a60e48cd;
			}
			_iter_end_1a60e48cd:;
		};
	} else {
		_98217_cc.get()._field_uniq=true;
	};
	return _1acb5843a_check(_98217_cc);;
}



inline jule::Bool _1abd010c8_fnEnvironment(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acb24d85_FnIns>* _99838_f, jule::Fn<jule::Bool(jule::Ptr<_1abce4671_Sema>*,jule::Slice<jule::Ptr<_1acca3e59_TypeAlias>>*)> _99849_algo) {
	jule::Ptr<_1abce4671_Sema> _99917_sema = (*(_99838_f)).get()._field_Decl.get()._field_sema;;
	jule::Ptr<_1abd59241_SymbolTable> _100017_old = (*(_99838_f)).get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1abce6b3a_setCurrentFile((*(_99838_f)).get()._field_Decl.get()._field_sema.ptr(), _100017_old);
	});;
	jule::Ptr<_1abd59241_SymbolTable> _100217_file = _1abce34b6_findFile(&((*(_99838_f)).get()._field_Decl.get()._field_sema.get()._field_files), &((*(_99838_f)).get()._field_Decl.get()._field_Token.get()._field_File));;
	if ((_100217_file != nullptr)) {
		_1abce6b3a_setCurrentFile((*(_99838_f)).get()._field_Decl.get()._field_sema.ptr(), _100217_file);
	};
	jule::I64 _100717_size = (*(_99838_f)).get()._field_Generics.len();;
	if ((((*(_99838_f)).get()._field_Decl != nullptr) && ((*(_99838_f)).get()._field_Decl.get()._field_Owner != nullptr))) {
		_100717_size+=(*(_99838_f)).get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1acca3e59_TypeAlias>> _101217_generics = jule::Slice<jule::Ptr<_1acca3e59_TypeAlias>>::alloc(0LL, _100717_size);;
	_1abce3164_appendGenericTypeAliases(&(_101217_generics), _99838_f);
	jule::Bool _101513_ok = _99849_algo(&(_99917_sema), &(_101217_generics));;
	if ((_99917_sema != _self_)) {
		(_self_.get()._field_errors).append(_99917_sema.get()._field_errors);;
		_99917_sema.get()._field_errors=nullptr;
	};
	return _101513_ok;;
}



inline void _1abd0134d_checkFnParamKind(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acb23eb6_ParamIns>* _102541_p) {
	(*(_102541_p)).get()._field_Kind.get()._field_Variadic=(*(_102541_p)).get()._field_Decl.get()._field_Variadic;
	if (((*(_102541_p)).get()._field_Decl.get()._field_Reference && (!(_1accbec55_isValidForRef(&((*(_102541_p)).get()._field_Kind)))))) {
		_1abce7003_pushErr(_self_.ptr(), (*(_102541_p)).get()._field_Decl.get()._field_Token, jule::Str("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str((*(_102541_p)).get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
}



inline jule::Bool _1abd0165b_reloadFnInsTypes(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acb24d85_FnIns> _103240_f) {
	if ((_1acb2621b_IsBuiltin(_103240_f.ptr()) || _1acb26480_IsAnon(_103240_f.ptr()))) {
		return true;;
	};
	return _1abd010c8_fnEnvironment(_self_, &(_103240_f), jule::Fn<jule::Bool(jule::Ptr<_1abce4671_Sema>*,jule::Slice<jule::Ptr<_1acca3e59_TypeAlias>>*)>([=](jule::Ptr<_1abce4671_Sema>* _103643_sema, jule::Slice<jule::Ptr<_1acca3e59_TypeAlias>>* _103661_generics) mutable -> jule::Bool {
		jule::Bool _103721_ok = true;;
		{
			auto expr = &(_103240_f.get()._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a60eeee3:;
			if (it != expr_end) {
				jule::Ptr<_1acb23eb6_ParamIns> _103825_p = *it;
				{
					if (_1acb20e80_IsSelf(_103825_p.get()._field_Decl.ptr())) {
						if (_1acb211e4_IsRef(_103825_p.get()._field_Decl.ptr())) {
							_103825_p.get()._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(jule::new_ptr<_1accb0b58_Sptr>(_1accb0b58_Sptr{._field_Elem=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(_103240_f.get()._field_Owner, 0)})}), 21)});
						} else {
							_103825_p.get()._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(_103240_f.get()._field_Owner, 0)});
						};
					} else {
						_103825_p.get()._field_Kind=_1abceca64_buildTypeWithGenerics((*(_103643_sema)), &(_103825_p.get()._field_Decl.get()._field_Kind.get()._field_Decl), (*(_103661_generics)), _103240_f.get()._field_Refers);
						if ((_103825_p.get()._field_Kind != nullptr)) {
							_1abd0134d_checkFnParamKind(_self_, &(_103825_p));
						} else {
							_103721_ok=false;
						};
					};
				}
				_iter_next_1a60eeee3:;
				++it;
				goto _iter_begin_1a60eeee3;
			}
			_iter_end_1a60eeee3:;
		};
		if ((!(_1acb22646_IsVoid(_103240_f.get()._field_Decl.ptr())))) {
			_103240_f.get()._field_Result=_1abceca64_buildTypeWithGenerics((*(_103643_sema)), &(_103240_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl), (*(_103661_generics)), _103240_f.get()._field_Refers);
			_103721_ok=((_103240_f.get()._field_Result != nullptr) && _103721_ok);
		};
		return _103721_ok;;
	}));;
}



inline jule::Bool _1abd01ace_checkRefValidityForInitExpr(jule::Ptr<_1abce4671_Sema> _self_, jule::Bool _106847_leftMut, jule::Ptr<_1abd5dc4b_Data>* _106867_d, jule::Ptr<_2097d15d8_Token>* _106882_errorToken) {
	{
		auto &_match_expr{ (*(_106867_d)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a60ee421:;
			{
				goto _match_end_1a61046e0;
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1a6105070:;
			{
				jule::Ptr<_1acb13109_TraitSubIdentExprModel> _107321_model = (*(_106867_d)).get()._field_Model.cast_ptr<_1acb13109_TraitSubIdentExprModel>(&__jule_any_type70);;
				if ((!(_1abce1eed_isValidModelForRef(&(_107321_model.get()._field_Expr))))) {
					_1abce7003_pushErr(_self_.ptr(), (*(_106882_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(_107321_model.get()._field_Method.get()._field_Ident, &__jule_any_type5)}));
					return false;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1a61050d6:;
			{
				jule::Ptr<_1acb138e0_StructSubIdentExprModel> _107921_model = (*(_106867_d)).get()._field_Model.cast_ptr<_1acb138e0_StructSubIdentExprModel>(&__jule_any_type71);;
				if ((!(_1abce1eed_isValidModelForRef(&(_107921_model.get()._field_Expr.get()._field_Model))))) {
					_1abce7003_pushErr(_self_.ptr(), (*(_106882_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(_107921_model.get()._field_Field.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
					return false;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72 || _match_expr.type == &__jule_any_type73) {
			_case_begin_1a6104844:;
			{
				_1abce7003_pushErr(_self_.ptr(), (*(_106882_errorToken)), jule::Str("built-in defines cannot pass to references", 42), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1a61048aa:;
			{
				jule::Ptr<_1acb0e5ab_UnaryExprModel> _108921_unary = (*(_106867_d)).get()._field_Model.cast_ptr<_1acb0e5ab_UnaryExprModel>(&__jule_any_type74);;
				if (_108921_unary.get()._field_Op.get()._field_Kind.equal("*", 1)) {
					if ((!(_1abce1eed_isValidModelForRef(&((*(_106867_d)).get()._field_Model))))) {
						_1abce7003_pushErr(_self_.ptr(), (*(_106882_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(jule::Str("address from * &T", 17), &__jule_any_type5)}));
						return false;;
					};
					goto _match_end_1a61046e0;
				};
				goto _case_begin_1a6104745;
			}
		}
		else {
			_case_begin_1a6104745:;
			{
				_1abce7003_pushErr(_self_.ptr(), (*(_106882_errorToken)), jule::Str("references requires variable for assignment", 43), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1a61046e0:;
	};
	if ((_106847_leftMut && (!((*(_106867_d)).get()._field_Mutable)))) {
		_1abce7003_pushErr(_self_.ptr(), (*(_106882_errorToken)), jule::Str("mutable reference cannot point to immutable data", 48), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1abd021a6_checkValidityForInitExpr(jule::Ptr<_1abce4671_Sema> _self_, jule::Bool _110944_leftMut, jule::Bool _110959_leftRef, jule::Ptr<_1acca4ba2_TypeKind>* _111010_leftKind, jule::Ptr<_1abd5dc4b_Data>* _111036_d, jule::Ptr<_2097d15d8_Token>* _111051_errorToken) {
	if (((_110944_leftMut && (!((*(_111036_d)).get()._field_Mutable))) && _1acca6445_Mutable((*(_111036_d)).get()._field_Kind.ptr()))) {
		_1abce7003_pushErr(_self_.ptr(), (*(_111051_errorToken)), jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str((*(_111036_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
		return false;;
	};
	if (_110959_leftRef) {
		if ((!(_1abd01ace_checkRefValidityForInitExpr(_self_, _110944_leftMut, _111036_d, _111051_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1abd492db_assignTypeChecker> _112017_atc = jule::new_ptr<_1abd492db_assignTypeChecker>(_1abd492db_assignTypeChecker{._field_s=_self_, ._field_d=(*(_111036_d)), ._field_errorToken=(*(_111051_errorToken))});;
	return _1abd499b2_checkValidity(_112017_atc.ptr());;
}



inline jule::Bool _1abd0256e_checkTypeAliasDeclKind(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acca3e59_TypeAlias>* _112847_ta, jule::Trait<_1accc2ecd_Lookup> _112867_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1abd59241_SymbolTable> _112917_old = _self_.get()._field_file;;
	__JULE_DEFER({
		_1abce6b3a_setCurrentFile(_self_.ptr(), _112917_old);
	});;
	if (((*(_112847_ta)).get()._field_Token != nullptr)) {
		jule::Ptr<_1abd59241_SymbolTable> _113421_file = _1abce34b6_findFile(&(_self_.get()._field_files), &((*(_112847_ta)).get()._field_Token.get()._field_File));;
		if ((_113421_file != nullptr)) {
			_1abce6b3a_setCurrentFile(_self_.ptr(), _113421_file);
		};
	};
	__jule_func_result=_1abcebee7_checkTypeWithRefers(_self_, &((*(_112847_ta)).get()._field_Kind), _112867_l, nullptr, jule::new_ptr<_1accb5113_referencer>(_1accb5113_referencer{._field_ident=(*(_112847_ta)).get()._field_Ident, ._field_owner=jule::Any((*(_112847_ta)), &__jule_any_type67), ._field_refs=(&((*(_112847_ta)).get()._field_Refers))}));
	if (((__jule_func_result && (_1acca80d4_Arr((*(_112847_ta)).get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) && _1acca80d4_Arr((*(_112847_ta)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_Auto)) {
		_1abce7003_pushErr(_self_.ptr(), (*(_112847_ta)).get()._field_Kind.get()._field_Decl.get()._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _1abd0288d_checkTypeAliasDecl(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acca3e59_TypeAlias>* _115143_ta, jule::Trait<_1accc2ecd_Lookup> _115163_l) {
	if (_2097d3d7c_IsIgnoreIdent((*(_115143_ta)).get()._field_Ident)) {
		_1abce7003_pushErr(_self_.ptr(), (*(_115143_ta)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	_1abd0256e_checkTypeAliasDeclKind(_self_, _115143_ta, _115163_l);
}



inline void _1abd02b13_checkTypeAliasDeclDup(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acca3e59_TypeAlias>* _115946_ta) {
	if (_2097d3d7c_IsIgnoreIdent((*(_115946_ta)).get()._field_Ident)) {
		_1abce7003_pushErr(_self_.ptr(), (*(_115946_ta)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1abce7b2a_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_115946_ta)))), (*(_115946_ta)).get()._field_Ident, (*(_115946_ta)).get()._field_Binded)) {
		_1abce7003_pushErr(_self_.ptr(), (*(_115946_ta)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_115946_ta)).get()._field_Ident, &__jule_any_type5)}));
		_1abce7322_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1abd0256e_checkTypeAliasDeclKind(_self_, _115946_ta, jule::Trait<_1accc2ecd_Lookup>(_self_, 3));
}



inline jule::Bool _1abd02d77_checkTypeAliasDecls(jule::Ptr<_1abce4671_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6115de9:;
		if (it != expr_end) {
			jule::Ptr<_1acca3e59_TypeAlias> _117221_ta = *it;
			{
				_1abd02b13_checkTypeAliasDeclDup(_self_, &(_117221_ta));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a6115de9:;
			++it;
			goto _iter_begin_1a6115de9;
		}
		_iter_end_1a6115de9:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a613959e_checkEnumItemsDup(_1abce4671_Sema* _self_, jule::Slice<jule::Ptr<_1acb36193_EnumItem>> _118339_items) {
	{
		auto expr = &(_118339_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a613a825:;
		if (it != expr_end) {
			jule::Ptr<_1acb36193_EnumItem> *_118416_item = it;
			{
				if ((*(_118416_item)).get()._field_Ident.empty()) {
					goto _iter_next_1a613a825;
				} else if (_2097d3d7c_IsIgnoreIdent((*(_118416_item)).get()._field_Ident)) {
					_1abce7003_pushErr(_self_, (*(_118416_item)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_118339_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a613b4b3:;
						if (it != expr_end) {
							jule::Ptr<_1acb36193_EnumItem> *_119024_citem = it;
							{
								if (((*(_118416_item)) == (*(_119024_citem)))) {
									goto _iter_end_1a613b4b3;
								} else if (((*(_118416_item)).get()._field_Ident == (*(_119024_citem)).get()._field_Ident)) {
									_1abce7003_pushErr(_self_, (*(_118416_item)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_118416_item)).get()._field_Ident, &__jule_any_type5)}));
									_1abce7322_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1a613b4b3;
								};
							}
							_iter_next_1a613b4b3:;
							++it;
							goto _iter_begin_1a613b4b3;
						}
						_iter_end_1a613b4b3:;
					};
				};
			}
			_iter_next_1a613a825:;
			++it;
			goto _iter_begin_1a613a825;
		}
		_iter_end_1a613a825:;
	};
}

inline void _1a61439b5_checkEnumItemsDup(_1abce4671_Sema* _self_, jule::Slice<jule::Ptr<_1acb37c00_TypeEnumItem>> _118339_items) {
	{
		auto expr = &(_118339_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6144be7:;
		if (it != expr_end) {
			jule::Ptr<_1acb37c00_TypeEnumItem> *_118416_item = it;
			{
				if ((*(_118416_item)).get()._field_Ident.empty()) {
					goto _iter_next_1a6144be7;
				} else if (_2097d3d7c_IsIgnoreIdent((*(_118416_item)).get()._field_Ident)) {
					_1abce7003_pushErr(_self_, (*(_118416_item)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_118339_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a6145885:;
						if (it != expr_end) {
							jule::Ptr<_1acb37c00_TypeEnumItem> *_119024_citem = it;
							{
								if (((*(_118416_item)) == (*(_119024_citem)))) {
									goto _iter_end_1a6145885;
								} else if (((*(_118416_item)).get()._field_Ident == (*(_119024_citem)).get()._field_Ident)) {
									_1abce7003_pushErr(_self_, (*(_118416_item)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_118416_item)).get()._field_Ident, &__jule_any_type5)}));
									_1abce7322_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1a6145885;
								};
							}
							_iter_next_1a6145885:;
							++it;
							goto _iter_begin_1a6145885;
						}
						_iter_end_1a6145885:;
					};
				};
			}
			_iter_next_1a6144be7:;
			++it;
			goto _iter_begin_1a6144be7;
		}
		_iter_end_1a6144be7:;
	};
}



inline void _1abd03372_checkEnumItemsStr(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acb36b88_Enum>* _120342_e) {
	jule::Ptr<_1acc78e73_Eval> _120417_eval = _1abcedc96_eval(_self_, jule::Trait<_1accc2ecd_Lookup>(_self_, 3));;
	{
		auto expr = &((*(_120342_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a61177e1:;
		if (it != expr_end) {
			jule::Ptr<_1acb36193_EnumItem> _120521_item = *it;
			{
				if (_1acb36539_AutoExpr(_120521_item.ptr())) {
					_120521_item.get()._field_Value=jule::new_ptr<_1abd5ecc4_Value>(_1abd5ecc4_Value{._field_Data=jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Constant=static__1ddeb5832_NewStr(_120521_item.get()._field_Ident)})});
					_120521_item.get()._field_Value.get()._field_Data.get()._field_Model=jule::Any(_120521_item.get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
				} else {
					jule::Ptr<_1abd5dc4b_Data> _121425_d = _1acc95984_evalExpr(_120417_eval, _120521_item.get()._field_Value.get()._field_Expr);;
					if ((_121425_d == nullptr)) {
						goto _iter_next_1a61177e1;
					};
					if ((!(_1abd5e5ba_IsConst(_121425_d.ptr())))) {
						_1abce7003_pushErr(_self_.ptr(), _120521_item.get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
					};
					_1abcee291_checkAssignType(_self_, false, &((*(_120342_e)).get()._field_Kind.get()._field_Kind), &(_121425_d), _120521_item.get()._field_Token);
					_120521_item.get()._field_Value.get()._field_Data=_121425_d;
				};
			}
			_iter_next_1a61177e1:;
			++it;
			goto _iter_begin_1a61177e1;
		}
		_iter_end_1a61177e1:;
	};
}



inline void _1a6120b3a_checkEnumItemInt(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acc78e73_Eval>* _122946_eval, jule::Ptr<_1acb36b88_Enum>* _122964_e, jule::Ptr<_1accac407_Prim>* _122975_prim, jule::Ptr<_1acb36193_EnumItem>* _122993_item, jule::U64* _1229115_n) {
	if (_1acb36539_AutoExpr((*(_122993_item)).ptr())) {
		(*(_122993_item)).get()._field_Value=jule::new_ptr<_1abd5ecc4_Value>(_1abd5ecc4_Value{._field_Data=jule::new_ptr<_1abd5dc4b_Data>()});
		{
			
{
				_case_begin_1a612370e:;
				{
					(*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1ddeb52e3_NewU64((*(_1229115_n)));
				}
			}
			_match_end_1a61230b0:;
		};
		(*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1abd5dc4b_Data> _124421_d = _1acc95984_evalExpr((*(_122946_eval)), (*(_122993_item)).get()._field_Value.get()._field_Expr);;
		if ((_124421_d == nullptr)) {
			return;;
		};
		if ((!(_1abd5e5ba_IsConst(_124421_d.ptr())))) {
			_1abce7003_pushErr(_self_.ptr(), (*(_122993_item)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1abcee291_checkAssignType(_self_, false, &((*(_122964_e)).get()._field_Kind.get()._field_Kind), &(_124421_d), (*(_122993_item)).get()._field_Token);
		(*(_122993_item)).get()._field_Value.get()._field_Data=_124421_d;
		{
			
{
				_case_begin_1a61269dc:;
				{
					(*(_1229115_n))=static_cast<jule::U64>(_1ddeb6679_ReadU64((*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_1a61268ee:;
		};
	};
}

inline void _1a612d373_checkEnumItemInt(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acc78e73_Eval>* _122946_eval, jule::Ptr<_1acb36b88_Enum>* _122964_e, jule::Ptr<_1accac407_Prim>* _122975_prim, jule::Ptr<_1acb36193_EnumItem>* _122993_item, jule::I64* _1229115_n) {
	if (_1acb36539_AutoExpr((*(_122993_item)).ptr())) {
		(*(_122993_item)).get()._field_Value=jule::new_ptr<_1abd5ecc4_Value>(_1abd5ecc4_Value{._field_Data=jule::new_ptr<_1abd5dc4b_Data>()});
		{
			
{
				_case_begin_1a6130d7b:;
				{
					(*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1ddeb504b_NewI64((*(_1229115_n)));
				}
			}
			_match_end_1a61307a4:;
		};
		(*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1abd5dc4b_Data> _124421_d = _1acc95984_evalExpr((*(_122946_eval)), (*(_122993_item)).get()._field_Value.get()._field_Expr);;
		if ((_124421_d == nullptr)) {
			return;;
		};
		if ((!(_1abd5e5ba_IsConst(_124421_d.ptr())))) {
			_1abce7003_pushErr(_self_.ptr(), (*(_122993_item)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1abcee291_checkAssignType(_self_, false, &((*(_122964_e)).get()._field_Kind.get()._field_Kind), &(_124421_d), (*(_122993_item)).get()._field_Token);
		(*(_122993_item)).get()._field_Value.get()._field_Data=_124421_d;
		{
			
{
				_case_begin_1a61342e1:;
				{
					(*(_1229115_n))=static_cast<jule::I64>(_1ddeb6415_ReadI64((*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_1a613427a:;
		};
	};
}



inline void _1a611c2da_checkEnumItemsInt1(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1accac407_Prim>* _126444_prim, jule::Ptr<_1acb36b88_Enum>* _126462_e) {
	jule::U64 _126517_max = 0LLU;;
	{
		
{
			_case_begin_1a611e133:;
			{
				_126517_max=static_cast<jule::U64>(_1ddead5d8_MaxU(_1accac737_Str((*(_126444_prim)).ptr())));
			}
		}
		_match_end_1a611de02:;
	};
	jule::Ptr<_1acc78e73_Eval> _127517_eval = _1abcedc96_eval(_self_, jule::Trait<_1accc2ecd_Lookup>(_self_, 3));;
	jule::U64 _127617_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1acb36193_EnumItem> _127717_first = (*(_126462_e)).get()._field_Items[0LL];;
	_1a6120b3a_checkEnumItemInt(_self_, &(_127517_eval), _126462_e, _126444_prim, &(_127717_first), &(_127617_n));
	if ((_127717_first.get()._field_Value.get()._field_Data != nullptr)) {
		{
			
{
				_case_begin_1a6127218:;
				{
					_127617_n=static_cast<jule::U64>(_1ddeb738e_AsU64(_127717_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_1a6120e6a:;
		};
	};
	{
		auto expr = (*(_126462_e)).get()._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a61229a5:;
		if (it != expr_end) {
			jule::Ptr<_1acb36193_EnumItem> _128921_item = *it;
			{
				if (((_1acb36539_AutoExpr(_128921_item.ptr()) && (_127617_n > 0LLU)) && ((_126517_max - _127617_n) <= 0LLU))) {
					_1abce7003_pushErr(_self_.ptr(), _128921_item.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1a61229a5;
				};
				(_127617_n)++;
				_1a6120b3a_checkEnumItemInt(_self_, &(_127517_eval), _126462_e, _126444_prim, &(_128921_item), &(_127617_n));
			}
			_iter_next_1a61229a5:;
			++it;
			goto _iter_begin_1a61229a5;
		}
		_iter_end_1a61229a5:;
	};
}

inline void _1a611bb25_checkEnumItemsInt1(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1accac407_Prim>* _126444_prim, jule::Ptr<_1acb36b88_Enum>* _126462_e) {
	jule::I64 _126517_max = 0LL;;
	{
		
{
			_case_begin_1a612b618:;
			{
				_126517_max=static_cast<jule::I64>(_1ddead341_MaxI(_1accac737_Str((*(_126444_prim)).ptr())));
			}
		}
		_match_end_1a612b4a3:;
	};
	jule::Ptr<_1acc78e73_Eval> _127517_eval = _1abcedc96_eval(_self_, jule::Trait<_1accc2ecd_Lookup>(_self_, 3));;
	jule::I64 _127617_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_1acb36193_EnumItem> _127717_first = (*(_126462_e)).get()._field_Items[0LL];;
	_1a612d373_checkEnumItemInt(_self_, &(_127517_eval), _126462_e, _126444_prim, &(_127717_first), &(_127617_n));
	if ((_127717_first.get()._field_Value.get()._field_Data != nullptr)) {
		{
			
{
				_case_begin_1a612dc8b:;
				{
					_127617_n=static_cast<jule::I64>(_1ddeb712a_AsI64(_127717_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_1a612c55e:;
		};
	};
	{
		auto expr = (*(_126462_e)).get()._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a612ea06:;
		if (it != expr_end) {
			jule::Ptr<_1acb36193_EnumItem> _128921_item = *it;
			{
				if (((_1acb36539_AutoExpr(_128921_item.ptr()) && (_127617_n > 0LL)) && ((_126517_max - _127617_n) <= 0LL))) {
					_1abce7003_pushErr(_self_.ptr(), _128921_item.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1a612ea06;
				};
				(_127617_n)++;
				_1a612d373_checkEnumItemInt(_self_, &(_127517_eval), _126462_e, _126444_prim, &(_128921_item), &(_127617_n));
			}
			_iter_next_1a612ea06:;
			++it;
			goto _iter_begin_1a612ea06;
		}
		_iter_end_1a612ea06:;
	};
}



inline void _1abd03e22_checkEnumItemsInt(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acb36b88_Enum>* _129942_e) {
	jule::Ptr<_1accac407_Prim> _130013_prim = _1acca73be_Prim((*(_129942_e)).get()._field_Kind.get()._field_Kind.ptr());;
	{
		
		if (_1ddeb39b7_IsSigInt(_130013_prim.get()._field_Kind)) {
			_case_begin_1a61293d5:;
			{
				_1a611bb25_checkEnumItemsInt1(_self_, &(_130013_prim), _129942_e);
			}
		}
		else {
			_case_begin_1a611baae:;
			{
				_1a611c2da_checkEnumItemsInt1(_self_, &(_130013_prim), _129942_e);
			}
		}
		_match_end_1a611ba59:;
	};
}



inline void _1abd04197_checkEnumDecl(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acb36b88_Enum>* _130938_e) {
	if (_2097d3d7c_IsIgnoreIdent((*(_130938_e)).get()._field_Ident)) {
		_1abce7003_pushErr(_self_.ptr(), (*(_130938_e)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1abce7b2a_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_130938_e)))), (*(_130938_e)).get()._field_Ident, false)) {
		_1abce7003_pushErr(_self_.ptr(), (*(_130938_e)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_130938_e)).get()._field_Ident, &__jule_any_type5)}));
		_1abce7322_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*(_130938_e)).get()._field_Items.len() == 0LL)) {
		_1abce7003_pushErr(_self_.ptr(), (*(_130938_e)).get()._field_Token, jule::Str("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*(_130938_e)).get()._field_Ident, &__jule_any_type5)}));
		return;;
	};
	_1a613959e_checkEnumItemsDup(_self_.ptr(), (*(_130938_e)).get()._field_Items);
	if (((*(_130938_e)).get()._field_Kind != nullptr)) {
		if ((!(_1abcec613_checkType(_self_, &((*(_130938_e)).get()._field_Kind), jule::Trait<_1accc2ecd_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		(*(_130938_e)).get()._field_Kind=_1acd6c033_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	jule::Ptr<_1accac407_Prim> _133317_t = _1acca73be_Prim((*(_130938_e)).get()._field_Kind.get()._field_Kind.ptr());;
	if ((_133317_t == nullptr)) {
		_1abce7003_pushErr(_self_.ptr(), (*(_130938_e)).get()._field_Token, jule::Str("invalid type source", 19), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1accb0608_IsStr(_133317_t.ptr())) {
			_case_begin_1a6140286:;
			{
				_1abd03372_checkEnumItemsStr(_self_, _130938_e);
			}
		}
		else if (_1ddeb404a_IsInt(_1accac737_Str(_133317_t.ptr()))) {
			_case_begin_1a613ed9b:;
			{
				_1abd03e22_checkEnumItemsInt(_self_, _130938_e);
			}
		}
		else {
			_case_begin_1a613e2c9:;
			{
				_1abce7003_pushErr(_self_.ptr(), (*(_130938_e)).get()._field_Token, jule::Str("invalid type source", 19), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a613e175:;
	};
}



inline void _1abd0441c_checkTypeEnumDecl(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acb38283_TypeEnum>* _135042_e) {
	if (_2097d3d7c_IsIgnoreIdent((*(_135042_e)).get()._field_Ident)) {
		_1abce7003_pushErr(_self_.ptr(), (*(_135042_e)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1abce7b2a_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_135042_e)))), (*(_135042_e)).get()._field_Ident, false)) {
		_1abce7003_pushErr(_self_.ptr(), (*(_135042_e)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_135042_e)).get()._field_Ident, &__jule_any_type5)}));
		_1abce7322_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*(_135042_e)).get()._field_Items.len() == 0LL)) {
		_1abce7003_pushErr(_self_.ptr(), (*(_135042_e)).get()._field_Token, jule::Str("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*(_135042_e)).get()._field_Ident, &__jule_any_type5)}));
		return;;
	};
	_1a61439b5_checkEnumItemsDup(_self_.ptr(), (*(_135042_e)).get()._field_Items);
	{
		auto expr = &((*(_135042_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6141320:;
		if (it != expr_end) {
			jule::Ptr<_1acb37c00_TypeEnumItem> _136421_item = *it;
			{
				if ((_136421_item.get()._field_Kind == nullptr)) {
					_1abce7003_pushErr(_self_.ptr(), _136421_item.get()._field_Token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
					goto _iter_next_1a6141320;
				};
				jule::Bool _136917_ok = _1abcec613_checkType(_self_, &(_136421_item.get()._field_Kind), jule::Trait<_1accc2ecd_Lookup>(_self_, 3));;
				if ((!(_136917_ok))) {
					goto _iter_next_1a6141320;
				};
				jule::Ptr<_1accac407_Prim> _137317_p = _1acca73be_Prim(_136421_item.get()._field_Kind.get()._field_Kind.ptr());;
				if (((_137317_p != nullptr) && _1accb086c_IsAny(_137317_p.ptr()))) {
					_1abce7003_pushErr(_self_.ptr(), _136421_item.get()._field_Token, jule::Str("the <any> type is not allowed for type-enum declarations", 56), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1a6141320:;
			++it;
			goto _iter_begin_1a6141320;
		}
		_iter_end_1a6141320:;
	};
	if (((*(_135042_e)).get()._field_Items.len() == 1LL)) {
		jule::Ptr<_1acb37c00_TypeEnumItem> _137921_item = (*(_135042_e)).get()._field_Items[0LL];;
		_1acca4ba2_TypeKind _138017_tk = _1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>((*(_135042_e)), 4)};;
		if (((_137921_item.get()._field_Kind.get()._field_Kind != nullptr) && _1acca5367_Equal(_137921_item.get()._field_Kind.get()._field_Kind, ((jule::Ptr<_1acca4ba2_TypeKind>)((&(_138017_tk))))))) {
			_1abce7003_pushErr(_self_.ptr(), _137921_item.get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_1acb385b3_Str((*(_135042_e)).ptr()), &__jule_any_type5)}));
		};
	};
}



inline jule::Bool _1abd04681_checkEnumDecls(jule::Ptr<_1abce4671_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a614c309:;
		if (it != expr_end) {
			jule::Ptr<_1acb36b88_Enum> _139121_e = *it;
			{
				_1abd04197_checkEnumDecl(_self_, &(_139121_e));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a614c309:;
			++it;
			goto _iter_begin_1a614c309;
		}
		_iter_end_1a614c309:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1abd048e5_checkTypeEnumDecls(jule::Ptr<_1abce4671_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a614d6a1:;
		if (it != expr_end) {
			jule::Ptr<_1acb38283_TypeEnum> _140321_e = *it;
			{
				_1abd0441c_checkTypeEnumDecl(_self_, &(_140321_e));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a614d6a1:;
			++it;
			goto _iter_begin_1a614d6a1;
		}
		_iter_end_1a614d6a1:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1abd04c03_checkDeclGenerics(_1abce4671_Sema* _self_, jule::Slice<jule::Ptr<_1acae4272_GenericDecl>>* _141337_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _141337_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a614e9d2:;
		if (it != expr_end) {
			jule::I64 _141513_i = it - expr->begin();
			jule::Ptr<_1acae4272_GenericDecl> *_141516_g = it;
			{
				if (_2097d3d7c_IsIgnoreIdent((*(_141516_g)).get()._field_Ident)) {
					_1abce7003_pushErr(_self_, (*(_141516_g)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1a614e9d2;
				};
				_julec_label_duplicationLookup:;
				{
					auto expr = _141337_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a61507e6:;
					if (it != expr_end) {
						jule::I64 _142417_j = it - expr->begin();
						jule::Ptr<_1acae4272_GenericDecl> *_142420_ct = it;
						{
							{
								
								if ((_142417_j >= _141513_i)) {
									_case_begin_1a6151c8c:;
									{
										goto _iter_end_1a61507e6;
									}
								}
								else if (((*(_141516_g)).get()._field_Ident == (*(_142420_ct)).get()._field_Ident)) {
									_case_begin_1a6151d14:;
									{
										_1abce7003_pushErr(_self_, (*(_141516_g)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_141516_g)).get()._field_Ident, &__jule_any_type5)}));
										_1abce7322_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1a61507e6;
									}
								}
								_match_end_1a6151b7c:;
							};
						}
						_iter_next_1a61507e6:;
						++it;
						_142417_j++;
						goto _iter_begin_1a61507e6;
					}
					_iter_end_1a61507e6:;
				};
			}
			_iter_next_1a614e9d2:;
			++it;
			_141513_i++;
			goto _iter_begin_1a614e9d2;
		}
		_iter_end_1a614e9d2:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1abd05011_checkFnDeclParamsDup(_1abce4671_Sema* _self_, jule::Ptr<_1acb221d4_Fn>* _144040_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_check:;
	{
		auto expr = &((*(_144040_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6153bc3:;
		if (it != expr_end) {
			jule::I64 _144313_i = it - expr->begin();
			jule::Ptr<_1acb20897_Param> *_144316_p = it;
			{
				{
					auto expr = &((*(_144040_f)).get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a6154773:;
					if (it != expr_end) {
						jule::Ptr<_1acae4272_GenericDecl> *_144520_g = it;
						{
							if (((*(_144316_p)).get()._field_Ident == (*(_144520_g)).get()._field_Ident)) {
								__jule_func_result=false;
								_1abce7003_pushErr(_self_, (*(_144316_p)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_144316_p)).get()._field_Ident, &__jule_any_type5)}));
								_1abce7322_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								goto _iter_next_1a6153bc3;
							};
						}
						_iter_next_1a6154773:;
						++it;
						goto _iter_begin_1a6154773;
					}
					_iter_end_1a6154773:;
				};
				_julec_label_paramsLookup:;
				{
					auto expr = &((*(_144040_f)).get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a61550e2:;
					if (it != expr_end) {
						jule::I64 _145517_j = it - expr->begin();
						jule::Ptr<_1acb20897_Param> *_145520_jp = it;
						{
							{
								
								if ((_145517_j >= _144313_i)) {
									_case_begin_1a6156a2d:;
									{
										goto _iter_end_1a61550e2;
									}
								}
								else if (_2097d3d7c_IsIgnoreIdent((*(_144316_p)).get()._field_Ident) || _2097d3d7c_IsIgnoreIdent((*(_145520_jp)).get()._field_Ident) || _2097d4124_IsAnonIdent((*(_144316_p)).get()._field_Ident) || _2097d4124_IsAnonIdent((*(_145520_jp)).get()._field_Ident)) {
									_case_begin_1a6156aa5:;
									{
										goto _iter_end_1a61550e2;
									}
								}
								else if (((*(_144316_p)).get()._field_Ident == (*(_145520_jp)).get()._field_Ident)) {
									_case_begin_1a6156b2c:;
									{
										__jule_func_result=false;
										_1abce7003_pushErr(_self_, (*(_144316_p)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_144316_p)).get()._field_Ident, &__jule_any_type5)}));
										_1abce7322_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_next_1a6153bc3;
									}
								}
								_match_end_1a615690c:;
							};
						}
						_iter_next_1a61550e2:;
						++it;
						_145517_j++;
						goto _iter_begin_1a61550e2;
					}
					_iter_end_1a61550e2:;
				};
			}
			_iter_next_1a6153bc3:;
			++it;
			_144313_i++;
			goto _iter_begin_1a6153bc3;
		}
		_iter_end_1a6153bc3:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1abd0531e_checkFnDeclResultDup(_1abce4671_Sema* _self_, jule::Ptr<_1acb221d4_Fn>* _147740_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1acb22646_IsVoid((*(_147740_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_147740_f)).get()._field_Result.get()._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a61596ac:;
		if (it != expr_end) {
			jule::I64 _148413_i = it - expr->begin();
			jule::Ptr<_2097d15d8_Token> *_148416_v = it;
			{
				if ((_2097d3d7c_IsIgnoreIdent((*(_148416_v)).get()._field_Kind) || _2097d4124_IsAnonIdent((*(_148416_v)).get()._field_Kind))) {
					goto _iter_next_1a61596ac;
				};
				{
					auto expr = &((*(_147740_f)).get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a615ab20:;
					if (it != expr_end) {
						jule::Ptr<_1acae4272_GenericDecl> *_148920_g = it;
						{
							if (((*(_148416_v)).get()._field_Kind == (*(_148920_g)).get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1a615ab20:;
						++it;
						goto _iter_begin_1a615ab20;
					}
					_iter_end_1a615ab20:;
				};
				{
					auto expr = &((*(_147740_f)).get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a615ba44:;
					if (it != expr_end) {
						jule::Ptr<_1acb20897_Param> *_149520_p = it;
						{
							if (((*(_148416_v)).get()._field_Kind == (*(_149520_p)).get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1a615ba44:;
						++it;
						goto _iter_begin_1a615ba44;
					}
					_iter_end_1a615ba44:;
				};
				_julec_label_itself_lookup:;
				{
					auto expr = &((*(_147740_f)).get()._field_Result.get()._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a615cdca:;
					if (it != expr_end) {
						jule::I64 _150317_j = it - expr->begin();
						jule::Ptr<_2097d15d8_Token> *_150320_jv = it;
						{
							{
								
								if ((_150317_j >= _148413_i)) {
									_case_begin_1a615dabd:;
									{
										goto _iter_end_1a615cdca;
									}
								}
								else if (((*(_150320_jv)).get()._field_Kind == (*(_148416_v)).get()._field_Kind)) {
									_case_begin_1a615db45:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_1a615d9ad:;
							};
						}
						_iter_next_1a615cdca:;
						++it;
						_150317_j++;
						goto _iter_begin_1a615cdca;
					}
					_iter_end_1a615cdca:;
				};
				goto _iter_next_1a61596ac;
				_julec_label_exist:;
				_1abce7003_pushErr(_self_, (*(_148416_v)), jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_148416_v)).get()._field_Kind, &__jule_any_type5)}));
				_1abce7322_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1a61596ac:;
			++it;
			_148413_i++;
			goto _iter_begin_1a61596ac;
		}
		_iter_end_1a61596ac:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1abd0562c_checkFnVariadicParam(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acb221d4_Fn>* _152245_f) {
	if (((*(_152245_f)).get()._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_1acb20897_Param> _152617_param = (*(_152245_f)).get()._field_Params[((*(_152245_f)).get()._field_Params.len() - 1LL)];;
	if ((_152617_param.get()._field_Variadic && _152617_param.get()._field_Reference)) {
		_1abce7003_pushErr(_self_.ptr(), _152617_param.get()._field_Token, jule::Str("variadic storage cannot be reference", 36), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _1abd058a2_checkFnDeclPrototype(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acb221d4_Fn>* _153545_f) {
	if (((*(_153545_f)).get()._field_Exceptional && (*(_153545_f)).get()._field_Binded)) {
		_1abce7003_pushErr(_self_.ptr(), (*(_153545_f)).get()._field_Token, jule::Str("binded defines cannot be exceptional", 36), jule::Slice<jule::Any>());
		return;;
	};
	if ((*(_153545_f)).get()._field_Exceptional) {
		if (_1acb22b1e_IsEntryPoint((*(_153545_f)).ptr())) {
			_1abce7003_pushErr(_self_.ptr(), (*(_153545_f)).get()._field_Token, jule::Str("entry point cannot be exceptional", 33), jule::Slice<jule::Any>());
		} else if (_1acb22d83_IsInit((*(_153545_f)).ptr())) {
			_1abce7003_pushErr(_self_.ptr(), (*(_153545_f)).get()._field_Token, jule::Str("initializer function cannot be exceptional", 42), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1abd04c03_checkDeclGenerics(_self_.ptr(), &((*(_153545_f)).get()._field_Generics))))) {
			_case_begin_1a6163672:;
		}
		else if ((!(_1abd05011_checkFnDeclParamsDup(_self_.ptr(), _153545_f)))) {
			_case_begin_1a61636e9:;
		}
		else if ((!(_1abd0531e_checkFnDeclResultDup(_self_.ptr(), _153545_f)))) {
			_case_begin_1a6163771:;
		}
		else if ((!(_1abd0562c_checkFnVariadicParam(_self_, _153545_f)))) {
			_case_begin_1a616492b:;
		}
		_match_end_1a6163c38:;
	};
}



inline jule::Bool _1abd05d03_catchTraitInheritCycle(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acb34405_Trait> _155742_t1, jule::Ptr<_1acb34405_Trait> _155758_t2, jule::Str* _155775_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &(_155758_t2.get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a616680c:;
		if (it != expr_end) {
			jule::Ptr<_1accaba55_TypeSymbol> _155921_i = *it;
			{
				if ((_155921_i.get()._field_Kind == nullptr)) {
					goto _iter_next_1a616680c;
				};
				jule::Ptr<_1acb34405_Trait> _156321_t3 = _1acca8a85_Trait(_155921_i.get()._field_Kind.ptr());;
				if ((_155742_t1 == _156321_t3)) {
					_1abd0a577_pushCycleError(_self_.ptr(), &(_155758_t2.get()._field_Ident), &(_156321_t3.get()._field_Ident), _155775_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1abd05d03_catchTraitInheritCycle(_self_, _155742_t1, _156321_t3, _155775_message)))) {
					_1abd0a577_pushCycleError(_self_.ptr(), &(_155758_t2.get()._field_Ident), &(_156321_t3.get()._field_Ident), _155775_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a616680c:;
			++it;
			goto _iter_begin_1a616680c;
		}
		_iter_end_1a616680c:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1abd06133__checkTraitDeclInherits(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acb34405_Trait>* _157648_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_157648_t)).get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a61694ad:;
		if (it != expr_end) {
			jule::I64 _157814_i = it - expr->begin();
			jule::Ptr<_1accaba55_TypeSymbol> _157821_it = *it;
			{
				if ((!(_1abcec613_checkType(_self_, &(_157821_it), jule::Trait<_1accc2ecd_Lookup>(_self_, 3))))) {
					__jule_func_result=false;
					goto _iter_next_1a61694ad;
				};
				jule::Ptr<_1acb34405_Trait> _158321_t2 = _1acca8a85_Trait(_157821_it.get()._field_Kind.ptr());;
				if ((_158321_t2 == nullptr)) {
					_1abce7003_pushErr(_self_.ptr(), _157821_it.get()._field_Decl.get()._field_Token, jule::Str("trait @ cannot implement @, type should be trait", 48), jule::Slice<jule::Any>::make({jule::Any((*(_157648_t)).get()._field_Ident, &__jule_any_type5),jule::Any(_1acca5059_Str(_157821_it.get()._field_Kind.ptr()), &__jule_any_type5)}));
					__jule_func_result=false;
					goto _iter_next_1a61694ad;
				};
				{
					auto expr = &((*(_157648_t)).get()._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a616ade9:;
					if (it != expr_end) {
						jule::I64 _158917_j = it - expr->begin();
						jule::Ptr<_1accaba55_TypeSymbol> _158920_it2 = *it;
						{
							if ((_158917_j >= _157814_i)) {
								goto _iter_end_1a616ade9;
							};
							if (((_158920_it2.get()._field_Kind != nullptr) && _1acca5367_Equal(_157821_it.get()._field_Kind, _158920_it2.get()._field_Kind))) {
								_1abce7003_pushErr(_self_.ptr(), _157821_it.get()._field_Decl.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_158321_t2.get()._field_Ident, &__jule_any_type5)}));
								__jule_func_result=false;
								goto _iter_end_1a616ade9;
							};
						}
						_iter_next_1a616ade9:;
						++it;
						_158917_j++;
						goto _iter_begin_1a616ade9;
					}
					_iter_end_1a616ade9:;
				};
				if (((*(_157648_t)) == _158321_t2)) {
					_1abce7003_pushErr(_self_.ptr(), _157821_it.get()._field_Decl.get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(_157648_t)).get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
				} else {
					jule::Str _160325_message = jule::Str();;
					__jule_func_result=(__jule_func_result && _1abd05d03_catchTraitInheritCycle(_self_, (*(_157648_t)), _158321_t2, &(_160325_message)));
					if ((_160325_message.len() > 0LL)) {
						jule::Str _160629_errMsg = _160325_message;;
						_160325_message=jule::Str();
						_1abd0a577_pushCycleError(_self_.ptr(), &((*(_157648_t)).get()._field_Ident), &(_158321_t2.get()._field_Ident), &(_160325_message));
						_160629_errMsg+=_160325_message;
						_1abce7003_pushErr(_self_.ptr(), _157821_it.get()._field_Decl.get()._field_Token, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_160629_errMsg, &__jule_any_type5)}));
					};
				};
			}
			_iter_next_1a61694ad:;
			++it;
			_157814_i++;
			goto _iter_begin_1a61694ad;
		}
		_iter_end_1a61694ad:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1abd063b9_checkTraitDeclInherits(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acb34405_Trait>* _161747_t) {
	{
		auto expr = &((*(_161747_t)).get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a616917d:;
		if (it != expr_end) {
			jule::I64 _161814_i = it - expr->begin();
			jule::Ptr<_1accaba55_TypeSymbol> _161821_it = *it;
			{
				jule::Ptr<_1acb34405_Trait> _161921_t1 = _1acca8a85_Trait(_161821_it.get()._field_Kind.ptr());;
				{
					auto expr = &((*(_161747_t)).get()._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a6172818:;
					if (it != expr_end) {
						jule::I64 _162018_j = it - expr->begin();
						jule::Ptr<_1accaba55_TypeSymbol> _162025_it2 = *it;
						{
							if ((_162018_j == _161814_i)) {
								goto _iter_next_1a6172818;
							};
							jule::Ptr<_1acb34405_Trait> _162425_t2 = _1acca8a85_Trait(_162025_it2.get()._field_Kind.ptr());;
							{
								auto expr = &(_161921_t1.get()._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a6173be3:;
								if (it != expr_end) {
									jule::Ptr<_1acb221d4_Fn> _162529_t1m = *it;
									{
										jule::Ptr<_1acb221d4_Fn> _162629_t2m = _1acb352a2_FindMethod(_162425_t2.ptr(), _162529_t1m.get()._field_Ident);;
										if ((_162629_t2m == nullptr)) {
											goto _iter_next_1a6173be3;
										};
										jule::Ptr<_1acb24d85_FnIns> _163025_t1f = _1abd0036e_getTraitCheckFnKind(_self_, &(_162529_t1m));;
										jule::Ptr<_1acb24d85_FnIns> _163125_t2f = _1abd0036e_getTraitCheckFnKind(_self_, &(_162629_t2m));;
										if ((!(_1acb25c43_equalTrait(_163025_t1f, &(_163125_t2f))))) {
											_1abce7003_pushErr(_self_.ptr(), _161821_it.get()._field_Decl.get()._field_Token, jule::Str("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87), jule::Slice<jule::Any>::make({jule::Any((*(_161747_t)).get()._field_Ident, &__jule_any_type5),jule::Any(_162425_t2.get()._field_Ident, &__jule_any_type5),jule::Any(_1acb26a9b_GetKindStr(_163025_t1f.ptr(), true), &__jule_any_type5),jule::Any(_1acb26a9b_GetKindStr(_163125_t2f.ptr(), true), &__jule_any_type5)}));
											return;;
										};
									}
									_iter_next_1a6173be3:;
									++it;
									goto _iter_begin_1a6173be3;
								}
								_iter_end_1a6173be3:;
							};
						}
						_iter_next_1a6172818:;
						++it;
						_162018_j++;
						goto _iter_begin_1a6172818;
					}
					_iter_end_1a6172818:;
				};
			}
			_iter_next_1a616917d:;
			++it;
			_161814_i++;
			goto _iter_begin_1a616917d;
		}
		_iter_end_1a616917d:;
	};
}



inline void _1abd0663e_checkTraitDeclMethod(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acb221d4_Fn>* _164245_f) {
	if (_2097d3d7c_IsIgnoreIdent((*(_164245_f)).get()._field_Ident)) {
		_1abce7003_pushErr(_self_.ptr(), (*(_164245_f)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_2097d4124_IsAnonIdent((*(_164245_f)).get()._field_Ident)) {
		_1abce7003_pushErr(_self_.ptr(), (*(_164245_f)).get()._field_Token, jule::Str("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	(*(_164245_f)).get()._field_sema=_self_;
	_1abd058a2_checkFnDeclPrototype(_self_, _164245_f);
	jule::Ptr<_1acb24d85_FnIns> _165017_ins = _1acb23834_instance((*(_164245_f)));;
	_1abd0165b_reloadFnInsTypes(_self_, _165017_ins);
	_165017_ins.get()._field_reloaded=true;
	_1acb23b0e_appendInstance((*(_164245_f)).ptr(), &(_165017_ins));
}



inline void _1abd068b4_checkTraitDeclMethods(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acb34405_Trait>* _165646_t) {
	{
		auto expr = &((*(_165646_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a61790c2:;
		if (it != expr_end) {
			jule::I64 _165714_i = it - expr->begin();
			jule::Ptr<_1acb221d4_Fn> _165721_f = *it;
			{
				_1abd0663e_checkTraitDeclMethod(_self_, &(_165721_f));
				(*(_165646_t)).get()._field_Mutable=((*(_165646_t)).get()._field_Mutable || _165721_f.get()._field_Params[0LL].get()._field_Mutable);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_1acb358bd_findMethodInherit((*(_165646_t)).ptr(), &(_165721_f.get()._field_Ident)) != nullptr)) {
					_1abce7003_pushErr(_self_.ptr(), _165721_f.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_165721_f.get()._field_Ident, &__jule_any_type5)}));
					_1abce7322_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					goto _iter_next_1a61790c2;
				};
				_julec_label_duplicateLookup:;
				{
					auto expr = &((*(_165646_t)).get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a617bcc8:;
					if (it != expr_end) {
						jule::I64 _167417_j = it - expr->begin();
						jule::Ptr<_1acb221d4_Fn> _167420_jf = *it;
						{
							{
								
								if ((_167417_j >= _165714_i)) {
									_case_begin_1a617c8de:;
									{
										goto _iter_end_1a617bcc8;
									}
								}
								else if ((_165721_f.get()._field_Ident == _167420_jf.get()._field_Ident)) {
									_case_begin_1a617c966:;
									{
										_1abce7003_pushErr(_self_.ptr(), _165721_f.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_165721_f.get()._field_Ident, &__jule_any_type5)}));
										_1abce7322_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_end_1a617bcc8;
									}
								}
								_match_end_1a617c7ce:;
							};
						}
						_iter_next_1a617bcc8:;
						++it;
						_167417_j++;
						goto _iter_begin_1a617bcc8;
					}
					_iter_end_1a617bcc8:;
				};
			}
			_iter_next_1a61790c2:;
			++it;
			_165714_i++;
			goto _iter_begin_1a61790c2;
		}
		_iter_end_1a61790c2:;
	};
}



inline void _1abd06b39_checkTraitDecl(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acb34405_Trait>* _169339_t) {
	if (_2097d3d7c_IsIgnoreIdent((*(_169339_t)).get()._field_Ident)) {
		_1abce7003_pushErr(_self_.ptr(), (*(_169339_t)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1abce7b2a_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_169339_t)))), (*(_169339_t)).get()._field_Ident, false)) {
		_1abce7003_pushErr(_self_.ptr(), (*(_169339_t)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_169339_t)).get()._field_Ident, &__jule_any_type5)}));
		_1abce7322_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1abd063b9_checkTraitDeclInherits(_self_, _169339_t);
	_1abd068b4_checkTraitDeclMethods(_self_, _169339_t);
}



inline jule::Bool _1abd06d9d_checkTraitDecls(jule::Ptr<_1abce4671_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a61814c5:;
		if (it != expr_end) {
			jule::Ptr<_1acb34405_Trait> _170721_t = *it;
			{
				_1abd06b39_checkTraitDecl(_self_, &(_170721_t));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a61814c5:;
			++it;
			goto _iter_begin_1a61814c5;
		}
		_iter_end_1a61814c5:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1abd07255_checkTraitImplMethods(_1abce4671_Sema* _self_, jule::Ptr<_1acb34405_Trait>* _171745_base, jule::Ptr<_1abcb7831_Impl>* _171760_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_171760_ipl)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6182c8a:;
		if (it != expr_end) {
			jule::Ptr<_1acb221d4_Fn> *_171916_f = it;
			{
				if ((_1acb352a2_FindMethod((*(_171745_base)).ptr(), (*(_171916_f)).get()._field_Ident) == nullptr)) {
					_1abce7003_pushErr(_self_, (*(_171916_f)).get()._field_Token, jule::Str("undefined identifier: trait @ has no define @", 45), jule::Slice<jule::Any>::make({jule::Any((*(_171745_base)).get()._field_Ident, &__jule_any_type5),jule::Any((*(_171916_f)).get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1a6182c8a:;
			++it;
			goto _iter_begin_1a6182c8a;
		}
		_iter_end_1a6182c8a:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1abd0760c_implToStruct(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acb07021_Struct>* _172837_dest, jule::Ptr<_1abcb7831_Impl>* _172857_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_172857_ipl)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6184ce2:;
		if (it != expr_end) {
			jule::Ptr<_1acb221d4_Fn> _173221_f = *it;
			{
				if (((_1acb07b15_FindMethod((*(_172837_dest)).ptr(), _173221_f.get()._field_Ident, _173221_f.get()._field_Statically) != nullptr) || (_1acb08231_FindField((*(_172837_dest)).ptr(), _173221_f.get()._field_Ident) != nullptr))) {
					_1abce7003_pushErr(_self_.ptr(), _173221_f.get()._field_Token, jule::Str("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*(_172837_dest)).get()._field_Ident, &__jule_any_type5),jule::Any(_173221_f.get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
					goto _iter_next_1a6184ce2;
				};
				if ((((*(_172837_dest)).get()._field_Generics.len() > 0LL) && (_173221_f.get()._field_Generics.len() > 0LL))) {
					{
						auto expr = &(_173221_f.get()._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a6187069:;
						if (it != expr_end) {
							jule::Ptr<_1acae4272_GenericDecl> _174024_fg = *it;
							{
								{
									auto expr = &((*(_172837_dest)).get()._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1a6187850:;
									if (it != expr_end) {
										jule::Ptr<_1acae4272_GenericDecl> _174128_dg = *it;
										{
											if ((_174024_fg.get()._field_Ident == _174128_dg.get()._field_Ident)) {
												_1abce7003_pushErr(_self_.ptr(), _174024_fg.get()._field_Token, jule::Str("methods cannot have same generic identifier with owner same time", 64), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1a6187850:;
										++it;
										goto _iter_begin_1a6187850;
									}
									_iter_end_1a6187850:;
								};
							}
							_iter_next_1a6187069:;
							++it;
							goto _iter_begin_1a6187069;
						}
						_iter_end_1a6187069:;
					};
				};
				_1abce7e49_checkDirectives(_self_, &(_173221_f.get()._field_Directives), jule::Any(_173221_f, &__jule_any_type65));
				_173221_f.get()._field_sema=_self_;
				_173221_f.get()._field_Owner=(*(_172837_dest));
				{ jule::Slice<jule::Ptr<_1acb221d4_Fn>> &__jule_push_dest = (*(_172837_dest)).get()._field_Methods; __jule_push_dest.push(_173221_f); };
			}
			_iter_next_1a6184ce2:;
			++it;
			goto _iter_begin_1a6184ce2;
		}
		_iter_end_1a6184ce2:;
	};
	{
		auto expr = &((*(_172857_ipl)).get()._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6189b4e:;
		if (it != expr_end) {
			jule::Ptr<_1abd1497c_Var> _175721_v = *it;
			{
				;
				if (((_1acb07b15_FindMethod((*(_172837_dest)).ptr(), _175721_v.get()._field_Ident, true) != nullptr) || (_1acb07e23_FindStatic((*(_172837_dest)).ptr(), _175721_v.get()._field_Ident) != nullptr))) {
					_1abce7003_pushErr(_self_.ptr(), _175721_v.get()._field_Token, jule::Str("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*(_172837_dest)).get()._field_Ident, &__jule_any_type5),jule::Any(_175721_v.get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
					goto _iter_next_1a6189b4e;
				};
				{ jule::Slice<jule::Ptr<_1abd1497c_Var>> &__jule_push_dest = (*(_172837_dest)).get()._field_Statics; __jule_push_dest.push(_175721_v); };
			}
			_iter_next_1a6189b4e:;
			++it;
			goto _iter_begin_1a6189b4e;
		}
		_iter_end_1a6189b4e:;
	};
	return __jule_func_result;;
}



inline void _1abd07882_implTrait(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1abcb7831_Impl>* _177034_decl) {
	jule::Ptr<_1acca4ba2_TypeKind> _177117_base_t = _1abced180_selectType(_self_, &((*(_177034_decl)).get()._field_Base));;
	if ((_177117_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1acb34405_Trait> _177517_base = _1acca8a85_Trait(_177117_base_t.ptr());;
	if ((_177517_base == nullptr)) {
		_1abce7003_pushErr(_self_.ptr(), (*(_177034_decl)).get()._field_Base.get()._field_Token, jule::Str("invalid base type for impl: @", 29), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_177117_base_t.ptr()), &__jule_any_type5)}));
		_1abce7322_pushSuggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1acca4ba2_TypeKind> _178217_destT = _1abced180_selectType(_self_, &((*(_177034_decl)).get()._field_Dest));;
	if ((_178217_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1acb09d37_StructIns> _178617_destS = _1acca8821_Struct(_178217_destT.ptr());;
	if ((_178617_destS == nullptr)) {
		_1abce7003_pushErr(_self_.ptr(), (*(_177034_decl)).get()._field_Dest.get()._field_Token, jule::Str("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_178217_destT.ptr()), &__jule_any_type5)}));
		_1abce7322_pushSuggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1acb07021_Struct> _179317_dest = _178617_destS.get()._field_Decl;;
	if ((_2097d70a0_Dir(_179317_dest.get()._field_Token.get()._field_File.ptr()) != _2097d70a0_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_1abce7003_pushErr(_self_.ptr(), (*(_177034_decl)).get()._field_Dest.get()._field_Token, jule::Str("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	_1abd12e64_pushImplemented(_177517_base, &(_179317_dest));
	_1abd1321c_pushImplements(&(_179317_dest), _177517_base);
	if (((*(_177034_decl)).get()._field_Statics.len() > 0LL)) {
		_1abce7003_pushErr(_self_.ptr(), (*(_177034_decl)).get()._field_Statics[0LL].get()._field_Token, jule::Str("trait implementations cannot implement static field", 51), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1abd07255_checkTraitImplMethods(_self_.ptr(), &(_177517_base), _177034_decl)))) {
			_case_begin_1a6192ddd:;
		}
		else if ((!(_1abd0760c_implToStruct(_self_, &(_179317_dest), _177034_decl)))) {
			_case_begin_1a6192e65:;
		}
		_match_end_1a61913a3:;
	};
}



inline void _1abd07b07_implStruct(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1abcb7831_Impl>* _181335_decl) {
	jule::Ptr<_1acca4ba2_TypeKind> _181417_destT = _1abced180_selectType(_self_, &((*(_181335_decl)).get()._field_Dest));;
	if ((_181417_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1acb09d37_StructIns> _181817_destS = _1acca8821_Struct(_181417_destT.ptr());;
	if ((_181817_destS == nullptr)) {
		_1abce7003_pushErr(_self_.ptr(), (*(_181335_decl)).get()._field_Dest.get()._field_Token, jule::Str("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_181417_destT.ptr()), &__jule_any_type5)}));
		_1abce7322_pushSuggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1acb07021_Struct> _182517_dest = _181817_destS.get()._field_Decl;;
	if ((_2097d70a0_Dir(_182517_dest.get()._field_Token.get()._field_File.ptr()) != _2097d70a0_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_1abce7003_pushErr(_self_.ptr(), (*(_181335_decl)).get()._field_Dest.get()._field_Token, jule::Str("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1abd0760c_implToStruct(_self_, &(_182517_dest), _181335_decl)))) {
			_case_begin_1a6197343:;
		}
		_match_end_1a6195165:;
	};
}



inline void _1abd07d7c_implImpl(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1abcb7831_Impl>* _183733_decl) {
	{
		
		if (_1abcb7bd8_IsTraitImpl((*(_183733_decl)).ptr())) {
			_case_begin_1a6197ce4:;
			{
				_1abd07882_implTrait(_self_, _183733_decl);
			}
		}
		else if (_1abcb7e4c_IsStructImpl((*(_183733_decl)).ptr())) {
			_case_begin_1a6197d6b:;
			{
				_1abd07b07_implStruct(_self_, _183733_decl);
			}
		}
		_match_end_1a6197bd4:;
	};
}



inline void _1abd0819b_checkVarDecl(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1abd1497c_Var>* _184837_decl, jule::Trait<_1accc2ecd_Lookup> _184853_l) {
	if (_2097d3d7c_IsIgnoreIdent((*(_184837_decl)).get()._field_Ident)) {
		_1abce7003_pushErr(_self_.ptr(), (*(_184837_decl)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1abd15065_IsTypeInferred((*(_184837_decl)).ptr())) {
		if ((!(_1abd14d01_IsInitialized((*(_184837_decl)).ptr())))) {
			_1abce7003_pushErr(_self_.ptr(), (*(_184837_decl)).get()._field_Token, jule::Str("type inferred declarations should have a initializer expression", 63), jule::Slice<jule::Any>());
		};
	} else {
		_1abcec613_checkType(_self_, &((*(_184837_decl)).get()._field_Kind), _184853_l);
	};
	if (((*(_184837_decl)).get()._field_Constant && (*(_184837_decl)).get()._field_Reference)) {
		_1abce7003_pushErr(_self_.ptr(), (*(_184837_decl)).get()._field_Token, jule::Str("references cannot be constant", 29), jule::Slice<jule::Any>());
	};
	if ((!(_1abd14d01_IsInitialized((*(_184837_decl)).ptr())))) {
		if ((*(_184837_decl)).get()._field_Constant) {
			_1abce7003_pushErr(_self_.ptr(), (*(_184837_decl)).get()._field_Token, jule::Str("missing expression for constant variable initialization", 55), jule::Slice<jule::Any>());
		};
		if ((*(_184837_decl)).get()._field_Statically) {
			_1abce7003_pushErr(_self_.ptr(), (*(_184837_decl)).get()._field_Token, jule::Str("static variables must be have initialize expression", 51), jule::Slice<jule::Any>());
		};
		if ((*(_184837_decl)).get()._field_Reference) {
			_1abce7003_pushErr(_self_.ptr(), (*(_184837_decl)).get()._field_Token, jule::Str("reference variables must be have lvalue initialize expression", 61), jule::Slice<jule::Any>());
		};
	};
}



inline void _1abd08421_checkGlobalVarDecl(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1abd1497c_Var>* _188043_decl) {
	if (_1abce7b2a_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_188043_decl)))), (*(_188043_decl)).get()._field_Ident, (*(_188043_decl)).get()._field_Binded)) {
		_1abce7003_pushErr(_self_.ptr(), (*(_188043_decl)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_188043_decl)).get()._field_Ident, &__jule_any_type5)}));
		_1abce7322_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*(_188043_decl)).get()._field_Binded && (*(_188043_decl)).get()._field_Constant)) {
		_1abce7003_pushErr(_self_.ptr(), (*(_188043_decl)).get()._field_Token, jule::Str("binded variables cannot be constant", 35), jule::Slice<jule::Any>());
	};
	if ((((!((*(_188043_decl)).get()._field_Binded)) && (!((*(_188043_decl)).get()._field_Constant))) && (!((*(_188043_decl)).get()._field_Statically)))) {
		_1abce7003_pushErr(_self_.ptr(), (*(_188043_decl)).get()._field_Token, jule::Str("global variables must be static", 31), jule::Slice<jule::Any>());
		_1abce7322_pushSuggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30), jule::Slice<jule::Any>());
	};
	_1abce7e49_checkDirectives(_self_, &((*(_188043_decl)).get()._field_Directives), jule::Any((*(_188043_decl)), &__jule_any_type8));
	_1abd0819b_checkVarDecl(_self_, _188043_decl, jule::Trait<_1accc2ecd_Lookup>(_self_, 3));
}



inline jule::Bool _1abd08685_checkGlobalDecls(jule::Ptr<_1abce4671_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a61a179d:;
		if (it != expr_end) {
			jule::Ptr<_1abd1497c_Var> _189821_decl = *it;
			{
				_1abd08421_checkGlobalVarDecl(_self_, &(_189821_decl));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a61a179d:;
			++it;
			goto _iter_begin_1a61a179d;
		}
		_iter_end_1a61a179d:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1abd08a3c_checkStructTraitImpl(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acb07021_Struct>* _190845_strct, jule::Ptr<_1acb34405_Trait>* _190866_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_190866_trt)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a61a2e86:;
		if (it != expr_end) {
			jule::Ptr<_1acb221d4_Fn> _190921_tf = *it;
			{
				jule::Bool _191021_exist = false;;
				jule::Ptr<_1acb221d4_Fn> _191121_sf = _1acb07b15_FindMethod((*(_190845_strct)).ptr(), _190921_tf.get()._field_Ident, _190921_tf.get()._field_Statically);;
				jule::Ptr<_1acb24d85_FnIns> _191217_tfK = _1abd0036e_getTraitCheckFnKind(_self_, &(_190921_tf));;
				if ((_191121_sf != nullptr)) {
					jule::Ptr<_1acb24d85_FnIns> _191425_sfK = _1abd0036e_getTraitCheckFnKind(_self_, &(_191121_sf));;
					_191021_exist=_1acb25c43_equalTrait(_191217_tfK, &(_191425_sfK));
				};
				if (_191021_exist) {
					jule::Ptr<_1acaa47b5_Directive> _191821_d = _1acc9db68_findDirective(&(_191121_sf.get()._field_Directives), jule::Str("deprecated", 10));;
					if ((_191821_d != nullptr)) {
						_1abce7003_pushErr(_self_.ptr(), _191821_d.get()._field_Tag, jule::Str("trait implementations cannot have deprecated code", 49), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_1abce7003_pushErr(_self_.ptr(), (*(_190845_strct)).get()._field_Token, jule::Str("trait @ derived but not implemented define @", 44), jule::Slice<jule::Any>::make({jule::Any((*(_190866_trt)).get()._field_Ident, &__jule_any_type5),jule::Any(_1acb26a9b_GetKindStr(_191217_tfK.ptr(), true), &__jule_any_type5)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1a61a2e86:;
			++it;
			goto _iter_begin_1a61a2e86;
		}
		_iter_end_1a61a2e86:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1abd08d4a_checkStructImpls(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acb07021_Struct>* _193241_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_193241_s)).get()._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a61aca1d:;
		if (it != expr_end) {
			jule::Ptr<_1acb34405_Trait> _193421_trt = *it;
			{
				__jule_func_result=(_1abd08a3c_checkStructTraitImpl(_self_, _193241_s, &(_193421_trt)) && __jule_func_result);
			}
			_iter_next_1a61aca1d:;
			++it;
			goto _iter_begin_1a61aca1d;
		}
		_iter_end_1a61aca1d:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1abd09158_checkStructFields(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acb07021_Struct>* _194042_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_194042_st)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a61ade09:;
		if (it != expr_end) {
			jule::Ptr<_1acb0444c_Field> _194221_f = *it;
			{
				_194221_f.get()._field_Owner=(*(_194042_st));
				{
					auto expr = &((*(_194042_st)).get()._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a61ae954:;
					if (it != expr_end) {
						jule::Ptr<_1acb0444c_Field> _194420_cf = *it;
						{
							if ((_194221_f == _194420_cf)) {
								goto _iter_end_1a61ae954;
							} else if ((_194221_f.get()._field_Ident == _194420_cf.get()._field_Ident)) {
								_1abce7003_pushErr(_self_.ptr(), _194221_f.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_194221_f.get()._field_Ident, &__jule_any_type5)}));
								_1abce7322_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1a61ae954:;
						++it;
						goto _iter_begin_1a61ae954;
					}
					_iter_end_1a61ae954:;
				};
			}
			_iter_next_1a61ade09:;
			++it;
			goto _iter_begin_1a61ade09;
		}
		_iter_end_1a61ade09:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1abd093cd_checkStructDecl(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acb07021_Struct>* _195740_s) {
	if (_2097d3d7c_IsIgnoreIdent((*(_195740_s)).get()._field_Ident)) {
		_1abce7003_pushErr(_self_.ptr(), (*(_195740_s)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1abce7b2a_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_195740_s)))), (*(_195740_s)).get()._field_Ident, (*(_195740_s)).get()._field_Binded)) {
		_1abce7003_pushErr(_self_.ptr(), (*(_195740_s)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_195740_s)).get()._field_Ident, &__jule_any_type5)}));
		_1abce7322_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1abce7e49_checkDirectives(_self_, &((*(_195740_s)).get()._field_Directives), jule::Any((*(_195740_s)), &__jule_any_type66));
	{
		
		if ((!(_1abd04c03_checkDeclGenerics(_self_.ptr(), &((*(_195740_s)).get()._field_Generics))))) {
			_case_begin_1a61b15c1:;
		}
		else if ((!(_1abd09158_checkStructFields(_self_, _195740_s)))) {
			_case_begin_1a61b312d:;
		}
		else if ((!(_1abd08d4a_checkStructImpls(_self_, _195740_s)))) {
			_case_begin_1a61b3194:;
		}
		else if ((!(_1abd09e4a_checkFuncDecls(_self_, &((*(_195740_s)).get()._field_Methods))))) {
			_case_begin_1a61b320a:;
		}
		_match_end_1a61b2eeb:;
	};
}



inline jule::Bool _1abd09642_checkStructDecls(jule::Ptr<_1abce4671_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a61b4926:;
		if (it != expr_end) {
			jule::Ptr<_1acb07021_Struct> _197721_s = *it;
			{
				_1abd093cd_checkStructDecl(_self_, &(_197721_s));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a61b4926:;
			++it;
			goto _iter_begin_1a61b4926;
		}
		_iter_end_1a61b4926:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1abd098b7_checkAnonFnDecl(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acb221d4_Fn>* _198740_f) {
	(*(_198740_f)).get()._field_sema=_self_;
	_1abd058a2_checkFnDeclPrototype(_self_, _198740_f);
}



inline void _1abd09b3c_checkFnDecl(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acb221d4_Fn>* _199236_f) {
	if (_2097d3d7c_IsIgnoreIdent((*(_199236_f)).get()._field_Ident)) {
		_1abce7003_pushErr(_self_.ptr(), (*(_199236_f)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1acb230e7_IsAnon((*(_199236_f)).ptr())) {
		_1abce7003_pushErr(_self_.ptr(), (*(_199236_f)).get()._field_Token, jule::Str("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	_1abce7e49_checkDirectives(_self_, &((*(_199236_f)).get()._field_Directives), jule::Any((*(_199236_f)), &__jule_any_type65));
	_1abd098b7_checkAnonFnDecl(_self_, _199236_f);
	if ((((*(_199236_f)).get()._field_Owner == nullptr) && _1abce7b2a_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_199236_f)))), (*(_199236_f)).get()._field_Ident, (*(_199236_f)).get()._field_Binded))) {
		if ((*(_199236_f)).get()._field_Ident.equal("init", 4)) {
			jule::Ptr<_1acb221d4_Fn> _200421_init = _1abce5ab2_FindFn(_self_.ptr(), jule::Str("init", 4), false);;
			if ((_200421_init != nullptr)) {
				return;;
			};
		};
		_1abce7003_pushErr(_self_.ptr(), (*(_199236_f)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_199236_f)).get()._field_Ident, &__jule_any_type5)}));
		_1abce7322_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1abd09e4a_checkFuncDecls(jule::Ptr<_1abce4671_Sema> _self_, jule::Slice<jule::Ptr<_1acb221d4_Fn>>* _201439_funcs) {
	{
		auto expr = _201439_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a61ba322:;
		if (it != expr_end) {
			jule::Ptr<_1acb221d4_Fn> _201521_f = *it;
			{
				_1abd09b3c_checkFnDecl(_self_, &(_201521_f));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_1a61ba322:;
			++it;
			goto _iter_begin_1a61ba322;
		}
		_iter_end_1a61ba322:;
	};
	return true;;
}



inline jule::Bool _1abd0a1ae_checkFnDecls(jule::Ptr<_1abce4671_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1abd09e4a_checkFuncDecls(_self_, &(_self_.get()._field_file.get()._field_Funcs));
	return __jule_func_result;;
}



inline void _1abd0a577_pushCycleError(_1abce4671_Sema* _self_, jule::Str* _203030_st1, jule::Str* _203041_st2, jule::Str* _203056_message) {
	;
	jule::Str _203213_refers_to = _20943de7c_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_203030_st1)), &__jule_any_type5),jule::Any((*(_203041_st2)), &__jule_any_type5)}));;
	((*(_203056_message))).buffer.insert(0, (((_20939c649_Repeat(jule::Str(" ", 1), 7LL) + _203213_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1abd0a9c8_checkCrossCycle(_1abce4671_Sema* _self_, jule::Ptr<_1acb07021_Struct>* _203631_st1, jule::Ptr<_1acb07021_Struct>* _203646_st2, jule::Str* _203665_message) {
	{
		auto expr = &((*(_203646_st2)).get()._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a61bd941:;
		if (it != expr_end) {
			jule::Ptr<_1acb07021_Struct> *_203716_u = it;
			{
				if (((*(_203716_u)) == (*(_203631_st1)))) {
					_1abd0a577_pushCycleError(_self_, &((*(_203646_st2)).get()._field_Ident), &((*(_203716_u)).get()._field_Ident), _203665_message);
					return false;;
				};
				if ((!(_1abd0a9c8_checkCrossCycle(_self_, _203631_st1, _203716_u, _203665_message)))) {
					_1abd0a577_pushCycleError(_self_, &((*(_203646_st2)).get()._field_Ident), &((*(_203716_u)).get()._field_Ident), _203665_message);
					return false;;
				};
			}
			_iter_next_1a61bd941:;
			++it;
			goto _iter_begin_1a61bd941;
		}
		_iter_end_1a61bd941:;
	};
	return true;;
}



inline jule::Bool _1abd0ae4b_checkStructDeriveIllegalCycles(_1abce4671_Sema* _self_, jule::Str _205049_derive, jule::Ptr<_1acb07021_Struct>* _205063_st1, jule::Ptr<_1acca4ba2_TypeKind>* _205082_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1acb07021_Struct> _205117_st2 = _1accc08e3_getStructFromKind((*(_205082_k)));;
	if ((_205117_st2 == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_205063_st1)) == _205117_st2)) {
		_1abce7003_pushErr(_self_, (*(_205063_st1)).get()._field_Token, jule::Str("illegal cycle for derive @, struct @ refers to itself", 53), jule::Slice<jule::Any>::make({jule::Any(_205049_derive, &__jule_any_type5),jule::Any((*(_205063_st1)).get()._field_Ident, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _206317_message = jule::Str();;
	if ((!(_1abd0a9c8_checkCrossCycle(_self_, _205063_st1, &(_205117_st2), &(_206317_message))))) {
		jule::Str _206521_errMsg = _206317_message;;
		_206317_message=jule::Str();
		_1abd0a577_pushCycleError(_self_, &((*(_205063_st1)).get()._field_Ident), &(_205117_st2.get()._field_Ident), &(_206317_message));
		_206521_errMsg+=_206317_message;
		_1abce7003_pushErr(_self_, (*(_205063_st1)).get()._field_Token, jule::Str("illegal cross cycle for derive @;\n@", 35), jule::Slice<jule::Any>::make({jule::Any(_205049_derive, &__jule_any_type5),jule::Any(_206521_errMsg, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1abd0b28c_checkStructInsDeriveClone(_1abce4671_Sema* _self_, jule::Ptr<_1acb09d37_StructIns> _207548_st) {
	jule::Bool __jule_func_result = false;
	if ((!(_1acb0884c_IsDerives(_207548_st.get()._field_Decl.ptr(), jule::Str("Clone", 5))))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto expr = &(_207548_st.get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a61c467d:;
		if (it != expr_end) {
			jule::Ptr<_1acb09342_FieldIns> _207921_f = *it;
			{
				if ((_207921_f.get()._field_Kind == nullptr)) {
					goto _iter_next_1a61c467d;
				};
				if ((!(_1acca6de6_SupportsCloning(_207921_f.get()._field_Kind.ptr())))) {
					_1abce7003_pushErr(_self_, _207548_st.get()._field_Decl.get()._field_Token, jule::Str("type @ is not compatible to derive @", 36), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_207921_f.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Clone", 5), &__jule_any_type5)}));
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1abd0ae4b_checkStructDeriveIllegalCycles(_self_, jule::Str("Clone", 5), &(_207548_st.get()._field_Decl), &(_207921_f.get()._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a61c467d:;
			++it;
			goto _iter_begin_1a61c467d;
		}
		_iter_end_1a61c467d:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1abd0b479_checkPackageDecls(jule::Ptr<_1abce4671_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a61c40b7:;
		if (it != expr_end) {
			jule::Ptr<_1abd59241_SymbolTable> _209721_f = *it;
			{
				_1abce6b3a_setCurrentFile(_self_.ptr(), _209721_f);
				if ((!(_1abd02d77_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1a61c40b7:;
			++it;
			goto _iter_begin_1a61c40b7;
		}
		_iter_end_1a61c40b7:;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a61c796c:;
		if (it != expr_end) {
			jule::Ptr<_1abd59241_SymbolTable> _210421_f = *it;
			{
				_1abce6b3a_setCurrentFile(_self_.ptr(), _210421_f);
				if ((!(_1abd06d9d_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1a61c796c:;
			++it;
			goto _iter_begin_1a61c796c;
		}
		_iter_end_1a61c796c:;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a61c731d:;
		if (it != expr_end) {
			jule::Ptr<_1abd59241_SymbolTable> _211121_f = *it;
			{
				_1abce6b3a_setCurrentFile(_self_.ptr(), _211121_f);
				if ((!(_1abd08685_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1a61c731d:;
			++it;
			goto _iter_begin_1a61c731d;
		}
		_iter_end_1a61c731d:;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a61c7e67:;
		if (it != expr_end) {
			jule::Ptr<_1abd59241_SymbolTable> _211821_f = *it;
			{
				_1abce6b3a_setCurrentFile(_self_.ptr(), _211821_f);
				{
					
					if ((!(_1abd0a1ae_checkFnDecls(_self_)))) {
						_case_begin_1a61c9c8d:;
					}
					else if ((!(_1abd09642_checkStructDecls(_self_)))) {
						_case_begin_1a61c9d04:;
					}
					else {
						_case_begin_1a61c9c27:;
						{
							goto _iter_next_1a61c7e67;
						}
					}
					_match_end_1a61c9bb1:;
				};
				return;;
			}
			_iter_next_1a61c7e67:;
			++it;
			goto _iter_begin_1a61c7e67;
		}
		_iter_end_1a61c7e67:;
	};
}



inline void _1abd0b7ba_checkDataForTypeInference(_1abce4671_Sema* _self_, jule::Ptr<_1abd5dc4b_Data>* _213045_d, jule::Ptr<_2097d15d8_Token>* _213056_err_token) {
	{
		
		if (_1abd5e0e2_IsNil((*(_213045_d)).ptr())) {
			_case_begin_1a61cab5c:;
			{
				_1abce7003_pushErr(_self_, (*(_213056_err_token)), jule::Str("nil is cannot use with type inferred definitions", 48), jule::Slice<jule::Any>());
			}
		}
		else if (_1abd5e356_IsVoid((*(_213045_d)).ptr())) {
			_case_begin_1a61cabd4:;
			{
				_1abce7003_pushErr(_self_, (*(_213056_err_token)), jule::Str("void data is cannot use for type inferred definitions", 53), jule::Slice<jule::Any>());
			}
		}
		else if ((*(_213045_d)).get()._field_Kind.get()._field_Variadic) {
			_case_begin_1a61cac5b:;
			{
				_1abce7003_pushErr(_self_, (*(_213056_err_token)), jule::Str("invalid expression for type inference", 37), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a61caa3b:;
	};
}



inline void _1abd0ba51_checkVar(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1abd1497c_Var>* _214133_v) {
	if ((*(_214133_v)).get()._field_Binded) {
		return;;
	};
	if (_1abd15065_IsTypeInferred((*(_214133_v)).ptr())) {
		(*(_214133_v)).get()._field_Kind=jule::new_ptr<_1accaba55_TypeSymbol>(_1accaba55_TypeSymbol{._field_Kind=(*(_214133_v)).get()._field_Value.get()._field_Data.get()._field_Kind});
		_1abd0b7ba_checkDataForTypeInference(_self_.ptr(), &((*(_214133_v)).get()._field_Value.get()._field_Data), &((*(_214133_v)).get()._field_Value.get()._field_Expr.get()._field_Token));
		_1abd021a6_checkValidityForInitExpr(_self_, (*(_214133_v)).get()._field_Mutable, (*(_214133_v)).get()._field_Reference, &((*(_214133_v)).get()._field_Kind.get()._field_Kind), &((*(_214133_v)).get()._field_Value.get()._field_Data), &((*(_214133_v)).get()._field_Value.get()._field_Expr.get()._field_Token));
	} else {
		jule::Ptr<_1accb3760_Arr> _215821_arr = _1acca80d4_Arr((*(_214133_v)).get()._field_Kind.get()._field_Kind.ptr());;
		if ((_215821_arr != nullptr)) {
			if (_215821_arr.get()._field_Auto) {
				jule::Ptr<_1accb3760_Arr> _216125_dataArr = _1acca80d4_Arr((*(_214133_v)).get()._field_Value.get()._field_Data.get()._field_Kind.ptr());;
				if ((_216125_dataArr != nullptr)) {
					_215821_arr.get()._field_N=_216125_dataArr.get()._field_N;
				};
			};
		};
		if (_1abcee291_checkAssignType(_self_, (*(_214133_v)).get()._field_Reference, &((*(_214133_v)).get()._field_Kind.get()._field_Kind), &((*(_214133_v)).get()._field_Value.get()._field_Data), (*(_214133_v)).get()._field_Value.get()._field_Expr.get()._field_Token)) {
			_1abd021a6_checkValidityForInitExpr(_self_, (*(_214133_v)).get()._field_Mutable, (*(_214133_v)).get()._field_Reference, &((*(_214133_v)).get()._field_Kind.get()._field_Kind), &((*(_214133_v)).get()._field_Value.get()._field_Data), &((*(_214133_v)).get()._field_Value.get()._field_Expr.get()._field_Token));
		};
	};
	if (((*(_214133_v)).get()._field_Reference && (!(_1accbec55_isValidForRef(&((*(_214133_v)).get()._field_Kind.get()._field_Kind)))))) {
		_1abce7003_pushErr(_self_.ptr(), (*(_214133_v)).get()._field_Token, jule::Str("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str((*(_214133_v)).get()._field_Kind.get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
	if ((*(_214133_v)).get()._field_Constant) {
		jule::Bool _218317_comptime = _1acca92c2_comptime((*(_214133_v)).get()._field_Value.get()._field_Data.get()._field_Kind.ptr());;
		if (((!(_1abd5e5ba_IsConst((*(_214133_v)).get()._field_Value.get()._field_Data.ptr()))) && (!(_218317_comptime)))) {
			_1abce7003_pushErr(_self_.ptr(), (*(_214133_v)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		if ((_218317_comptime && (_1accaa4b0_comptimeRange((*(_214133_v)).get()._field_Value.get()._field_Data.get()._field_Kind.ptr()) != nullptr))) {
			_1abce7003_pushErr(_self_.ptr(), (*(_214133_v)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("@ is invalid data-type for constant", 35), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str((*(_214133_v)).get()._field_Value.get()._field_Data.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
	} else {
		(*(_214133_v)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
	};
	if ((_1acca905d_Tup((*(_214133_v)).get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
		(*(_214133_v)).get()._field_Kind.get()._field_Kind=nullptr;
	};
}



inline void _1abd0bd70_checkTypeVar(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1abd1497c_Var>* _220037_decl, jule::Trait<_1accc2ecd_Lookup> _220053_l) {
	if (((*(_220037_decl)).get()._field_Binded || (!(_1abd14d01_IsInitialized((*(_220037_decl)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1acc78e73_Eval> _220517_eval = nullptr;;
	if (((*(_220037_decl)).get()._field_Kind != nullptr)) {
		_220517_eval=_1abced5d1_evalpd(_self_, _220053_l, (*(_220037_decl)).get()._field_Kind.get()._field_Kind, (*(_220037_decl)));
	} else {
		_220517_eval=_1abced5d1_evalpd(_self_, _220053_l, nullptr, (*(_220037_decl)));
	};
	_220517_eval.get()._field_immutable=(!((*(_220037_decl)).get()._field_Mutable));
	(*(_220037_decl)).get()._field_Value.get()._field_Data=_1acc95984_evalExpr(_220517_eval, (*(_220037_decl)).get()._field_Value.get()._field_Expr);
	if (((*(_220037_decl)).get()._field_Value.get()._field_Data == nullptr)) {
		return;;
	};
	_1abd0ba51_checkVar(_self_, _220037_decl);
}



inline void _1abd0c04b_checkGlobalTypes(jule::Ptr<_1abce4671_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a61db189:;
		if (it != expr_end) {
			jule::Ptr<_1abd1497c_Var> _222121_decl = *it;
			{
				if (((_1abd14d01_IsInitialized(_222121_decl.ptr()) && (_222121_decl.get()._field_Value.get()._field_Data == nullptr)) || (_1abd15065_IsTypeInferred(_222121_decl.ptr()) && (_222121_decl.get()._field_Kind.get()._field_Kind == nullptr)))) {
					_1abd0bd70_checkTypeVar(_self_, &(_222121_decl), jule::Trait<_1accc2ecd_Lookup>(_self_, 3));
				};
			}
			_iter_next_1a61db189:;
			++it;
			goto _iter_begin_1a61db189;
		}
		_iter_end_1a61db189:;
	};
}



inline jule::Ptr<_1acb24d85_FnIns> _1abd0c403_readyToCheckFn(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acb09d37_StructIns>* _223239_s, jule::Ptr<_1acb221d4_Fn>* _223259_f) {
	jule::Ptr<_1acb24d85_FnIns> _223317_ins = _1acb23834_instance((*(_223259_f)));;
	if (((*(_223259_f)).get()._field_Instances.len() != 0LL)) {
		return _223317_ins;;
	};
	_223317_ins.get()._field_Owner=(*(_223239_s));
	_1acb23b0e_appendInstance((*(_223259_f)).ptr(), &(_223317_ins));
	_223317_ins.get()._field_reloaded=true;
	if (_1abd0165b_reloadFnInsTypes(_self_, _223317_ins)) {
		return _223317_ins;;
	};
	return nullptr;;
}



inline void _1abd0c722_checkTypeMethod(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acb09d37_StructIns>* _224640_s, jule::Ptr<_1acb221d4_Fn>* _224660_f) {
	if (((*(_224660_f)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1acb24d85_FnIns> _225117_ins = (*(_224660_f)).get()._field_Instances[0LL];;
	if ((_225117_ins.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1abd0edea_checkFnIns(_self_, &(_225117_ins));
}



inline jule::Ptr<_1acb24d85_FnIns> _1abd0cb73_checkStructInsOp(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acb09d37_StructIns>* _225941_s, jule::Ptr<_1acb221d4_Fn>* _225961_f, jule::Fn<jule::Bool(jule::Ptr<_1acb221d4_Fn>)> _225969_p) {
	if (((((*(_225961_f)) == nullptr) || ((*(_225961_f)).get()._field_Generics.len() > 0LL)) || (!(_225969_p((*(_225961_f))))))) {
		return nullptr;;
	};
	return (*(_225961_f)).get()._field_Instances[0LL];;
}



inline jule::Bool _1abd0d02a_checkStructEnv(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acb09d37_StructIns>* _226939_s, jule::Ptr<_2097d15d8_Token> _226958_errorToken) {
	jule::Bool __jule_func_result = false;
	_1accb5ee3_typeChecker _227017_tc = _1accb5ee3_typeChecker{._field_s=(*(_226939_s)).get()._field_Decl.get()._field_sema, ._field_rootLookup=jule::Trait<_1accc2ecd_Lookup>((*(_226939_s)).get()._field_Decl.get()._field_sema, 3), ._field_lookup=jule::Trait<_1accc2ecd_Lookup>((*(_226939_s)).get()._field_Decl.get()._field_sema, 3), ._field_referencer=jule::new_ptr<_1accb5113_referencer>(_1accb5113_referencer{._field_ident=(*(_226939_s)).get()._field_Decl.get()._field_Ident, ._field_owner=jule::Any((*(_226939_s)).get()._field_Decl, &__jule_any_type66), }), ._field_refers=(*(_226939_s)).get()._field_Refers, };;
	if (((*(_226939_s)).get()._field_Generics.len() > 0LL)) {
		_227017_tc._field_useGenerics=jule::Slice<jule::Ptr<_1acca3e59_TypeAlias>>::alloc(0LL, (*(_226939_s)).get()._field_Generics.len());
		{
			auto expr = &((*(_226939_s)).get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a61e4945:;
			if (it != expr_end) {
				jule::I64 _228318_i = it - expr->begin();
				jule::Ptr<_1acca3420_InsGeneric> _228325_g = *it;
				{
					jule::Ptr<_1acae4272_GenericDecl> _228425_decl = (*(_226939_s)).get()._field_Decl.get()._field_Generics[_228318_i];;
					{ jule::Slice<jule::Ptr<_1acca3e59_TypeAlias>> &__jule_push_dest = _227017_tc._field_useGenerics; __jule_push_dest.push(jule::new_ptr<_1acca3e59_TypeAlias>(_1acca3e59_TypeAlias{._field_Token=_228425_decl.get()._field_Token, ._field_Ident=_228425_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1accaba55_TypeSymbol>(_1accaba55_TypeSymbol{._field_Kind=_228325_g.get()._field_Kind}), })); };
				}
				_iter_next_1a61e4945:;
				++it;
				_228318_i++;
				goto _iter_begin_1a61e4945;
			}
			_iter_end_1a61e4945:;
		};
	};
	jule::Ptr<_1abd59241_SymbolTable> _229317_oldFile = _self_.get()._field_file;;
	__JULE_DEFER({
		_1abce6b3a_setCurrentFile(_self_.ptr(), _229317_oldFile);
	});;
	if ((_self_.get()._field_file.get()._field_File != (*(_226939_s)).get()._field_Decl.get()._field_Token.get()._field_File)) {
		jule::Ptr<_1abd59241_SymbolTable> _229721_file = _1abce34b6_findFile(&(_self_.get()._field_files), &((*(_226939_s)).get()._field_Decl.get()._field_Token.get()._field_File));;
		if ((_229721_file != nullptr)) {
			_1abce6b3a_setCurrentFile(_self_.ptr(), _229721_file);
		};
	};
	if (((*(_226939_s)).get()._field_Generics.len() > 0LL)) {
		jule::Ptr<_1acb5759e_constraintChecker> _230421_cc = _1abcec25b_constraintChecker(_self_);;
		_230421_cc.get()._field_et=_226958_errorToken;
		_230421_cc.get()._field_si=(*(_226939_s));
		_230421_cc.get()._field_genericsA=_227017_tc._field_useGenerics;
		_230421_cc.get()._field_uniq=true;
		if ((!(_1acb5843a_check(_230421_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*(_226939_s)).get()._field_Statics.len() > 0LL)) {
		jule::I64 _231721_n = _self_.get()._field_errors.len();;
		_self_.get()._field_files[0LL].get()._field_TypeAliases=jule::append(_227017_tc._field_useGenerics,_self_.get()._field_files[0LL].get()._field_TypeAliases);
		{
			auto expr = &((*(_226939_s)).get()._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a61eae8a:;
			if (it != expr_end) {
				jule::Ptr<_1abd1497c_Var> _231925_v = *it;
				{
					_1abd0819b_checkVarDecl(_self_, &(_231925_v), jule::Trait<_1accc2ecd_Lookup>(_self_, 3));
					_1abd0bd70_checkTypeVar(_self_, &(_231925_v), jule::Trait<_1accc2ecd_Lookup>(_self_, 3));
					__jule_func_result=(((_self_.get()._field_errors.len() - _231721_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1a61eae8a:;
				++it;
				goto _iter_begin_1a61eae8a;
			}
			_iter_end_1a61eae8a:;
		};
		_self_.get()._field_files[0LL].get()._field_TypeAliases=_self_.get()._field_files[0LL].get()._field_TypeAliases.slice(_227017_tc._field_useGenerics.len());
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1acc78e73_Eval> _233017_eval = _1abcedc96_eval(_self_, jule::Trait<_1accc2ecd_Lookup>(_self_, 3));;
	(*(_226939_s)).get()._field_Comparable=(!((*(_226939_s)).get()._field_Decl.get()._field_Binded));
	{
		auto expr = &((*(_226939_s)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a61eda09:;
		if (it != expr_end) {
			jule::Ptr<_1acb09342_FieldIns> _233221_f = *it;
			{
				jule::Ptr<_1acca4ba2_TypeKind> _233321_kind = _1accbce40_checkDecl(&_227017_tc, &(_233221_f.get()._field_Decl.get()._field_Kind.get()._field_Decl));;
				__jule_func_result=((_233321_kind != nullptr) && __jule_func_result);
				if ((_233321_kind == nullptr)) {
					if (((_self_ != (*(_226939_s)).get()._field_Decl.get()._field_sema) && ((*(_226939_s)).get()._field_Decl.get()._field_sema.get()._field_errors.len() > 0LL))) {
						(_self_.get()._field_errors).append((*(_226939_s)).get()._field_Decl.get()._field_sema.get()._field_errors);;
						(*(_226939_s)).get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
					};
					goto _iter_next_1a61eda09;
				};
				_233221_f.get()._field_Kind=_233321_kind;
				(*(_226939_s)).get()._field_Mutable=((*(_226939_s)).get()._field_Mutable || ((!(_233221_f.get()._field_Decl.get()._field_Mutable)) && _1acca6445_Mutable(_233221_f.get()._field_Kind.ptr())));
				(*(_226939_s)).get()._field_Comparable=((*(_226939_s)).get()._field_Comparable && _1acca61d1_Comparable(_233221_f.get()._field_Kind.ptr()));
				_1abd0b28c_checkStructInsDeriveClone(_self_.ptr(), (*(_226939_s)));
				if ((_233221_f.get()._field_Decl.get()._field_Default == nullptr)) {
					goto _iter_next_1a61eda09;
				};
				_233017_eval.get()._field_prefix=_233221_f.get()._field_Kind;
				_233017_eval.get()._field_field=_233221_f;
				_233221_f.get()._field_Default=_1acc95984_evalExpr(_233017_eval, _233221_f.get()._field_Decl.get()._field_Default);
				if ((_233221_f.get()._field_Default == nullptr)) {
					goto _iter_next_1a61eda09;
				};
				;
				_1abcee291_checkAssignType(_self_, false, &(_233221_f.get()._field_Kind), &(_233221_f.get()._field_Default), _233221_f.get()._field_Decl.get()._field_Default.get()._field_Token);
			}
			_iter_next_1a61eda09:;
			++it;
			goto _iter_begin_1a61eda09;
		}
		_iter_end_1a61eda09:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1abd0d3d2_precheckStructIns(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acb09d37_StructIns>* _236742_s, jule::Ptr<_2097d15d8_Token> _236761_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1abd0d02a_checkStructEnv(_self_, _236742_s, _236761_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_236742_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6205538:;
		if (it != expr_end) {
			jule::Ptr<_1acb221d4_Fn> _237221_f = *it;
			{
				if ((_237221_f.get()._field_Generics.len() == 0LL)) {
					if ((_1abd0c403_readyToCheckFn(_self_, _236742_s, &(_237221_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1a6205538:;
			++it;
			goto _iter_begin_1a6205538;
		}
		_iter_end_1a6205538:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1abd0d657_checkStructIns(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acb09d37_StructIns>* _238239_s) {
	{
		auto expr = &((*(_238239_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6206c76:;
		if (it != expr_end) {
			jule::Ptr<_1acb221d4_Fn> _238321_f = *it;
			{
				_1abd0c722_checkTypeMethod(_self_, _238239_s, &(_238321_f));
			}
			_iter_next_1a6206c76:;
			++it;
			goto _iter_begin_1a6206c76;
		}
		_iter_end_1a6206c76:;
	};
}



inline void _1abd0d8cc_checkTypeStruct(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acb07021_Struct>* _238840_s) {
	if ((*(_238840_s)).get()._field_Binded) {
		return;;
	};
	if (((*(_238840_s)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_238840_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a62083a4:;
		if (it != expr_end) {
			jule::Ptr<_1acb09d37_StructIns> _240121_ins = *it;
			{
				_1abd0d657_checkStructIns(_self_, &(_240121_ins));
			}
			_iter_next_1a62083a4:;
			++it;
			goto _iter_begin_1a62083a4;
		}
		_iter_end_1a62083a4:;
	};
}



inline void _1abd0daa8_checkStructTypes(jule::Ptr<_1abce4671_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6208a47:;
		if (it != expr_end) {
			jule::Ptr<_1acb07021_Struct> _240721_s = *it;
			{
				_1abd0d8cc_checkTypeStruct(_self_, &(_240721_s));
			}
			_iter_next_1a6208a47:;
			++it;
			goto _iter_begin_1a6208a47;
		}
		_iter_end_1a6208a47:;
	};
}



inline void _1abd0dd50_checkStructInsOperators(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acb09d37_StructIns> _241247_s) {
	{
		auto expr = &(_241247_s.get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6209c13:;
		if (it != expr_end) {
			jule::Ptr<_1acb221d4_Fn> _241321_m = *it;
			{
				{
					auto &_match_expr{ _241321_m.get()._field_Ident };
					
					if (_match_expr == jule::Str("Eq", 2)) {
						_case_begin_1a620a96c:;
						{
							_241247_s.get()._field_Operators._field_Eq=_1abd0cb73_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1abd166d7_Eq);
							_241247_s.get()._field_Comparable=(_241247_s.get()._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str("Gt", 2)) {
						_case_begin_1a620a9d3:;
						{
							_241247_s.get()._field_Operators._field_Gt=_1abd0cb73_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1abd1697e_Gt);
						}
					}
					else if (_match_expr == jule::Str("GtEq", 4)) {
						_case_begin_1a620aa49:;
						{
							_241247_s.get()._field_Operators._field_GtEq=_1abd0cb73_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1abd16c26_GtEq);
						}
					}
					else if (_match_expr == jule::Str("Lt", 2)) {
						_case_begin_1a620aac1:;
						{
							_241247_s.get()._field_Operators._field_Lt=_1abd0cb73_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1abd16ebd_Lt);
						}
					}
					else if (_match_expr == jule::Str("LtEq", 4)) {
						_case_begin_1a620ab48:;
						{
							_241247_s.get()._field_Operators._field_LtEq=_1abd0cb73_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1abd17265_LtEq);
						}
					}
					else if (_match_expr == jule::Str("Shl", 3)) {
						_case_begin_1a620abc0:;
						{
							_241247_s.get()._field_Operators._field_Shl=_1abd0cb73_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1abd1784d_Shl);
						}
					}
					else if (_match_expr == jule::Str("Shr", 3)) {
						_case_begin_1a620ac47:;
						{
							_241247_s.get()._field_Operators._field_Shr=_1abd0cb73_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1abd17ae5_Shr);
						}
					}
					else if (_match_expr == jule::Str("Add", 3)) {
						_case_begin_1a620acbe:;
						{
							_241247_s.get()._field_Operators._field_Add=_1abd0cb73_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1abd17d8c_Add);
						}
					}
					else if (_match_expr == jule::Str("Sub", 3)) {
						_case_begin_1a620ad46:;
						{
							_241247_s.get()._field_Operators._field_Sub=_1abd0cb73_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1abd18134_Sub);
						}
					}
					else if (_match_expr == jule::Str("Div", 3)) {
						_case_begin_1a620adbd:;
						{
							_241247_s.get()._field_Operators._field_Div=_1abd0cb73_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1abd183cb_Div);
						}
					}
					else if (_match_expr == jule::Str("Mul", 3)) {
						_case_begin_1a620ae45:;
						{
							_241247_s.get()._field_Operators._field_Mul=_1abd0cb73_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1abd18673_Mul);
						}
					}
					else if (_match_expr == jule::Str("Mod", 3)) {
						_case_begin_1a620aebc:;
						{
							_241247_s.get()._field_Operators._field_Mod=_1abd0cb73_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1abd1891a_Mod);
						}
					}
					else if (_match_expr == jule::Str("BitAnd", 6)) {
						_case_begin_1a620b044:;
						{
							_241247_s.get()._field_Operators._field_BitAnd=_1abd0cb73_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1abd18bb2_BitAnd);
						}
					}
					else if (_match_expr == jule::Str("BitOr", 5)) {
						_case_begin_1a620b0bb:;
						{
							_241247_s.get()._field_Operators._field_BitOr=_1abd0cb73_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1abd18e59_BitOr);
						}
					}
					else if (_match_expr == jule::Str("BitXor", 6)) {
						_case_begin_1a620b143:;
						{
							_241247_s.get()._field_Operators._field_BitXor=_1abd0cb73_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1abd19201_BitXor);
						}
					}
					else if (_match_expr == jule::Str("Neg", 3)) {
						_case_begin_1a620b1ba:;
						{
							_241247_s.get()._field_Operators._field_Neg=_1abd0cb73_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1abd197d9_Neg);
						}
					}
					else if (_match_expr == jule::Str("Pos", 3)) {
						_case_begin_1a620b242:;
						{
							_241247_s.get()._field_Operators._field_Pos=_1abd0cb73_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1abd19a81_Pos);
						}
					}
					else if (_match_expr == jule::Str("BitNot", 6)) {
						_case_begin_1a620b2b9:;
						{
							_241247_s.get()._field_Operators._field_BitNot=_1abd0cb73_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1abd19d28_BitNot);
						}
					}
					else if (_match_expr == jule::Str("AddAssign", 9)) {
						_case_begin_1a620b341:;
						{
							_241247_s.get()._field_Operators._field_AddAssign=_1abd0cb73_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1abd1a411_AddAssign);
						}
					}
					else if (_match_expr == jule::Str("SubAssign", 9)) {
						_case_begin_1a620b3b8:;
						{
							_241247_s.get()._field_Operators._field_SubAssign=_1abd0cb73_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1abd1a6a8_SubAssign);
						}
					}
					else if (_match_expr == jule::Str("DivAssign", 9)) {
						_case_begin_1a620b440:;
						{
							_241247_s.get()._field_Operators._field_DivAssign=_1abd0cb73_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1abd1a950_DivAssign);
						}
					}
					else if (_match_expr == jule::Str("MulAssign", 9)) {
						_case_begin_1a620b4b7:;
						{
							_241247_s.get()._field_Operators._field_MulAssign=_1abd0cb73_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1abd1abe7_MulAssign);
						}
					}
					else if (_match_expr == jule::Str("ModAssign", 9)) {
						_case_begin_1a620b53e:;
						{
							_241247_s.get()._field_Operators._field_ModAssign=_1abd0cb73_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1abd1ae8e_ModAssign);
						}
					}
					else if (_match_expr == jule::Str("ShlAssign", 9)) {
						_case_begin_1a620b5b6:;
						{
							_241247_s.get()._field_Operators._field_ShlAssign=_1abd0cb73_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1abd1b236_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str("ShrAssign", 9)) {
						_case_begin_1a620b63d:;
						{
							_241247_s.get()._field_Operators._field_ShrAssign=_1abd0cb73_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1abd1b4cd_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str("BitOrAssign", 11)) {
						_case_begin_1a620b6b5:;
						{
							_241247_s.get()._field_Operators._field_BitOrAssign=_1abd0cb73_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1abd1b775_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str("BitAndAssign", 12)) {
						_case_begin_1a620b73c:;
						{
							_241247_s.get()._field_Operators._field_BitAndAssign=_1abd0cb73_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1abd1ba1c_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str("BitXorAssign", 12)) {
						_case_begin_1a620b7b4:;
						{
							_241247_s.get()._field_Operators._field_BitXorAssign=_1abd0cb73_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1abd1bcb4_BitXorAssign);
						}
					}
					_match_end_1a620a54e:;
				};
			}
			_iter_next_1a6209c13:;
			++it;
			goto _iter_begin_1a6209c13;
		}
		_iter_end_1a6209c13:;
	};
}



inline void _1abd0e0d6_precheckStructType(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acb07021_Struct>* _247643_s) {
	if ((*(_247643_s)).get()._field_Binded) {
		return;;
	};
	if (((*(_247643_s)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*(_247643_s)).get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_1acb09d37_StructIns> _248721_ins = _1acb07483_instance((*(_247643_s)));;
		_248721_ins.get()._field_Checked=true;
		_1acb0775d_appendInstance((*(_247643_s)).ptr(), &(_248721_ins));
		_1abd0d3d2_precheckStructIns(_self_, &(_248721_ins), nullptr);
	};
	_1abd0dd50_checkStructInsOperators(_self_, (*(_247643_s)).get()._field_Instances[0LL]);
}



inline void _1abd0e2b2_precheckStructTypes(jule::Ptr<_1abce4671_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a621c4d9:;
		if (it != expr_end) {
			jule::Ptr<_1acb07021_Struct> _249721_s = *it;
			{
				_1abd0e0d6_precheckStructType(_self_, &(_249721_s));
			}
			_iter_next_1a621c4d9:;
			++it;
			goto _iter_begin_1a621c4d9;
		}
		_iter_end_1a621c4d9:;
	};
}



inline void _1abd0e537_checkRets(_1abce4671_Sema* _self_, jule::Ptr<_1acb24d85_FnIns>* _250233_f) {
	if (_1acb22646_IsVoid((*(_250233_f)).get()._field_Decl.ptr())) {
		return;;
	};
	_1abd11726_missingRetChecker _250613_mrc = static__1abd11ade_new();;
	jule::Bool _250713_ok = _1abd12b01_check(&_250613_mrc, (*(_250233_f)).get()._field_Scope);;
	if ((!(_250713_ok))) {
		_1abce7003_pushErr(_self_, (*(_250233_f)).get()._field_Decl.get()._field_Token, jule::Str("missing return at end of function", 33), jule::Slice<jule::Any>());
	};
}



inline void _1abd0e856_checkFnInsSc(_1abce4671_Sema* _self_, jule::Ptr<_1acb24d85_FnIns>* _251336_f, jule::Ptr<_1abcc4563_scopeChecker>* _251352_sc) {
	_1abce2ad1_appendRetVars(&((*(_251352_sc)).get()._field_table.get()._field_Vars), _251336_f);
	_1abce2d89_appendParamVars(&((*(_251352_sc)).get()._field_table.get()._field_Vars), _251336_f);
	_1abce3164_appendGenericTypeAliases(&((*(_251352_sc)).get()._field_table.get()._field_TypeAliases), _251336_f);
	_1abcd44a7_check((*(_251352_sc)), &((*(_251336_f)).get()._field_Decl.get()._field_Scope), &((*(_251336_f)).get()._field_Scope));
	if ((!(_1abcc6db2_stopped((*(_251352_sc)).ptr())))) {
		_1abd0e537_checkRets(_self_, _251336_f);
	};
}



inline void _1abd0eb75_checkFnInsCaller(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acb24d85_FnIns>* _252641_f, jule::Ptr<_2097d15d8_Token> _252656_caller) {
	if ((*(_252641_f)).get()._field_Decl.get()._field_Binded) {
		return;;
	};
	jule::Ptr<_1abd59241_SymbolTable> _253117_old = (*(_252641_f)).get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1abce6b3a_setCurrentFile((*(_252641_f)).get()._field_Decl.get()._field_sema.ptr(), _253117_old);
	});;
	jule::Ptr<_1abd59241_SymbolTable> _253317_file = _1abce34b6_findFile(&((*(_252641_f)).get()._field_Decl.get()._field_sema.get()._field_files), &((*(_252641_f)).get()._field_Decl.get()._field_Token.get()._field_File));;
	if ((_253317_file != nullptr)) {
		_1abce6b3a_setCurrentFile((*(_252641_f)).get()._field_Decl.get()._field_sema.ptr(), _253317_file);
	};
	jule::Ptr<_1abcc4563_scopeChecker> _253817_sc = _1abcb9cea_newScopeChecker(&((*(_252641_f)).get()._field_Decl.get()._field_sema), (*(_252641_f)));;
	_253817_sc.get()._field_calledFrom=_252656_caller;
	_1abd0e856_checkFnInsSc(_self_.ptr(), _252641_f, &(_253817_sc));
	if (((*(_252641_f)).get()._field_Decl.get()._field_sema != _self_)) {
		(_self_.get()._field_errors).append((*(_252641_f)).get()._field_Decl.get()._field_sema.get()._field_errors);;
		(*(_252641_f)).get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
	};
}



inline void _1abd0edea_checkFnIns(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acb24d85_FnIns>* _254835_f) {
	_1abd0eb75_checkFnInsCaller(_self_, _254835_f, nullptr);
}



inline void _1abd10170_checkTypeFn(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acb221d4_Fn>* _255236_f) {
	if ((*(_255236_f)).get()._field_Binded) {
		return;;
	};
	if (((*(_255236_f)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_255236_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a622715e:;
		if (it != expr_end) {
			jule::Ptr<_1acb24d85_FnIns> _256221_ins = *it;
			{
				_1abd0edea_checkFnIns(_self_, &(_256221_ins));
			}
			_iter_next_1a622715e:;
			++it;
			goto _iter_begin_1a622715e;
		}
		_iter_end_1a622715e:;
	};
}



inline void _1abd103e5_checkTestFn(_1abce4671_Sema* _self_, jule::Ptr<_1acb24d85_FnIns>* _256735_f) {
	if ((*(_256735_f)).get()._field_Decl.get()._field_Public) {
		_1abce7003_pushErr(_self_, (*(_256735_f)).get()._field_Decl.get()._field_Token, jule::Str("test function cannot be public", 30), jule::Slice<jule::Any>());
		_1abce7322_pushSuggestion(_self_, jule::Str("dont use identifier which is starts with capital letter to avoid define as public", 81), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*(_256735_f)).get()._field_Decl.get()._field_Unsafety || (!(_1acb22646_IsVoid((*(_256735_f)).get()._field_Decl.ptr())))) || ((*(_256735_f)).get()._field_Decl.get()._field_Generics.len() != 0LL)) || ((*(_256735_f)).get()._field_Params.len() != 1LL)) || (*(_256735_f)).get()._field_Decl.get()._field_Params[0LL].get()._field_Mutable) || (*(_256735_f)).get()._field_Decl.get()._field_Params[0LL].get()._field_Reference)) {
		_1abce7003_pushErr(_self_, (*(_256735_f)).get()._field_Decl.get()._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1abce7322_pushSuggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1accb0b58_Sptr> _258517_sptr = _1acca7633_Sptr((*(_256735_f)).get()._field_Params[0LL].get()._field_Kind.ptr());;
	if ((_258517_sptr == nullptr)) {
		_1abce7003_pushErr(_self_, (*(_256735_f)).get()._field_Decl.get()._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1abce7322_pushSuggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1acb09d37_StructIns> _259213_s = _1acca8821_Struct(_258517_sptr.get()._field_Elem.ptr());;
	if (((_259213_s == nullptr) || (!(_1abce1294_isStdPackage(_259213_s.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path, jule::Str("testing", 7)))))) {
		_1abce7003_pushErr(_self_, (*(_256735_f)).get()._field_Decl.get()._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1abce7322_pushSuggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1abd1066a_precheckTypeFn(jule::Ptr<_1abce4671_Sema> _self_, jule::Ptr<_1acb221d4_Fn>* _260039_f) {
	if ((*(_260039_f)).get()._field_Binded) {
		return;;
	};
	if (((*(_260039_f)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*(_260039_f)).get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_1acb24d85_FnIns> _261121_ins = _1acb235c0_instanceForce((*(_260039_f)));;
		{ jule::Slice<jule::Ptr<_1acb24d85_FnIns>> &__jule_push_dest = (*(_260039_f)).get()._field_Instances; __jule_push_dest.push(_261121_ins); };
		jule::Bool _261317_ok = _1abd0165b_reloadFnInsTypes(_self_, _261121_ins);;
		_261121_ins.get()._field_reloaded=true;
		if ((_261317_ok && _1accbe3e7_hasDirective(&((*(_260039_f)).get()._field_Directives), jule::Str("test", 4)))) {
			_1abd103e5_checkTestFn(_self_.ptr(), &(_261121_ins));
		};
	};
}



inline void _1abd10846_precheckFnTypes(jule::Ptr<_1abce4671_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6231da0:;
		if (it != expr_end) {
			jule::Ptr<_1acb34405_Trait> _262421_decl = *it;
			{
				{
					auto expr = &(_262421_decl.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a623270d:;
					if (it != expr_end) {
						jule::Ptr<_1acb221d4_Fn> _262525_m = *it;
						{
							_1abd1066a_precheckTypeFn(_self_, &(_262525_m));
						}
						_iter_next_1a623270d:;
						++it;
						goto _iter_begin_1a623270d;
					}
					_iter_end_1a623270d:;
				};
			}
			_iter_next_1a6231da0:;
			++it;
			goto _iter_begin_1a6231da0;
		}
		_iter_end_1a6231da0:;
	};
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6232345:;
		if (it != expr_end) {
			jule::Ptr<_1acb221d4_Fn> _262921_decl = *it;
			{
				_1abd1066a_precheckTypeFn(_self_, &(_262921_decl));
			}
			_iter_next_1a6232345:;
			++it;
			goto _iter_begin_1a6232345;
		}
		_iter_end_1a6232345:;
	};
}



inline void _1abd10a22_checkFnTypes(jule::Ptr<_1abce4671_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6233555:;
		if (it != expr_end) {
			jule::Ptr<_1acb221d4_Fn> _263621_decl = *it;
			{
				_1abd10170_checkTypeFn(_self_, &(_263621_decl));
			}
			_iter_next_1a6233555:;
			++it;
			goto _iter_begin_1a6233555;
		}
		_iter_end_1a6233555:;
	};
}



inline void _1abd10bed_checkPackageTypes(jule::Ptr<_1abce4671_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a62346bb:;
		if (it != expr_end) {
			jule::Ptr<_1abd59241_SymbolTable> _264421_f = *it;
			{
				_1abce6b3a_setCurrentFile(_self_.ptr(), _264421_f);
				_1abd0c04b_checkGlobalTypes(_self_);
				_1abd10846_precheckFnTypes(_self_);
				_1abd0e2b2_precheckStructTypes(_self_);
			}
			_iter_next_1a62346bb:;
			++it;
			goto _iter_begin_1a62346bb;
		}
		_iter_end_1a62346bb:;
	};
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6235964:;
		if (it != expr_end) {
			jule::Ptr<_1abd59241_SymbolTable> _265521_f = *it;
			{
				_1abce6b3a_setCurrentFile(_self_.ptr(), _265521_f);
				_1abd10a22_checkFnTypes(_self_);
				_1abd0daa8_checkStructTypes(_self_);
			}
			_iter_next_1a6235964:;
			++it;
			goto _iter_begin_1a6235964;
		}
		_iter_end_1a6235964:;
	};
}



inline void _1abd10dc9_setFileSemaFields(jule::Ptr<_1abce4671_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6236a64:;
		if (it != expr_end) {
			jule::Ptr<_1acb221d4_Fn> _266321_f = *it;
			{
				_266321_f.get()._field_sema=_self_;
			}
			_iter_next_1a6236a64:;
			++it;
			goto _iter_begin_1a6236a64;
		}
		_iter_end_1a6236a64:;
	};
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6236d94:;
		if (it != expr_end) {
			jule::Ptr<_1acb07021_Struct> _266621_st = *it;
			{
				_266621_st.get()._field_sema=_self_;
			}
			_iter_next_1a6236d94:;
			++it;
			goto _iter_begin_1a6236d94;
		}
		_iter_end_1a6236d94:;
	};
}



inline void _1abd110a5_setSemaFields(jule::Ptr<_1abce4671_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a62378cd:;
		if (it != expr_end) {
			jule::Ptr<_1abd59241_SymbolTable> _267221_file = *it;
			{
				_1abce6b3a_setCurrentFile(_self_.ptr(), _267221_file);
				_1abd10dc9_setFileSemaFields(_self_);
			}
			_iter_next_1a62378cd:;
			++it;
			goto _iter_begin_1a62378cd;
		}
		_iter_end_1a62378cd:;
	};
}



inline void _1abd1132a_check(jule::Ptr<_1abce4671_Sema> _self_, jule::Slice<jule::Ptr<_1abd59241_SymbolTable>>* _267830_files) {
	_self_.get()._field_files=(*(_267830_files));
	_1abcea666_checkImports(_self_.ptr());
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1abd110a5_setSemaFields(_self_);
	_1abceb0a1_checkInherits(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1abceaa1d_implImpls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1abceabe9_checkEnums(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1abd0b479_checkPackageDecls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1abd10bed_checkPackageTypes(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1abce4671_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags << ", ";
	_Stream << "meta:" << _Src._field_meta;
	_Stream << "}";
	return _Stream;
}



inline _1abd11726_missingRetChecker static__1abd11ade_new(void) {
	return _1abd11726_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU, 0), };;
}



inline jule::Bool _1abd11db9_checkConditional(_1abd11726_missingRetChecker* _self_, jule::Ptr<_1abcbd491_Conditional> _272635_c) {
	{
		auto expr = &(_272635_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a623c0a8:;
		if (it != expr_end) {
			jule::Ptr<_1abcbcd31_If> _272721_elif = *it;
			{
				if ((_272721_elif == nullptr)) {
					return false;;
				};
				if ((!(_1abd127e3_checkScope(_self_, _272721_elif.get()._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1a623c0a8:;
			++it;
			goto _iter_begin_1a623c0a8;
		}
		_iter_end_1a623c0a8:;
	};
	return ((_272635_c.get()._field_Default != nullptr) && _1abd127e3_checkScope(_self_, _272635_c.get()._field_Default.get()._field_Scope));;
}



inline jule::Bool _1abd121c7_checkMatch(_1abd11726_missingRetChecker* _self_, jule::Ptr<_1abcc174c_Match> _273829_m) {
	{
		auto expr = &(_273829_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a623dc47:;
		if (it != expr_end) {
			jule::Ptr<_1abcc2297_Case> _273921_c = *it;
			{
				if ((_273921_c == nullptr)) {
					return false;;
				};
				jule::I64 _274317_n = (*(_self_))._field_breaked.len();;
				jule::Bool _274417_ok = _1abd127e3_checkScope(_self_, _273921_c.get()._field_Scope);;
				{
					
					if ((_274317_n != (*(_self_))._field_breaked.len())) {
						_case_begin_1a624074e:;
						{
							return false;;
						}
					}
					else if ((!(_274417_ok))) {
						_case_begin_1a62407b5:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_1a624082b;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_1a624082b:;
						{
							(*(_self_))._field_falled=false;
							if ((_273921_c.get()._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1a623dc47;
						}
					}
					_match_end_1a623ec26:;
				};
			}
			_iter_next_1a623dc47:;
			++it;
			goto _iter_begin_1a623dc47;
		}
		_iter_end_1a623dc47:;
	};
	return ((_273829_m.get()._field_Default != nullptr) && _1abd127e3_checkScope(_self_, _273829_m.get()._field_Default.get()._field_Scope));;
}



inline jule::Bool _1abd124d5_checkInfIter(_1abd11726_missingRetChecker* _self_, jule::Ptr<_1abcbd77c_InfIter> _276431_it) {
	jule::I64 _276513_n = (*(_self_))._field_breaked.len();;
	if (_1abd127e3_checkScope(_self_, _276431_it.get()._field_Scope)) {
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _276513_n);
		return true;;
	};
	if ((_276513_n != (*(_self_))._field_breaked.len())) {
		jule::Uintptr _277117_itaddr = static_cast<jule::Uintptr>(_276431_it);;
		{
			auto expr = (*(_self_))._field_breaked.slice(_276513_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1a6243ee4:;
			if (it != expr_end) {
				jule::Uintptr _277220_addr = *it;
				{
					if ((_277117_itaddr == _277220_addr)) {
						(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _276513_n);
						return false;;
					};
				}
				_iter_next_1a6243ee4:;
				++it;
				goto _iter_begin_1a6243ee4;
			}
			_iter_end_1a6243ee4:;
		};
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _276513_n);
	};
	return true;;
}



inline jule::Bool _1abd127e3_checkScope(_1abd11726_missingRetChecker* _self_, jule::Ptr<_1abcbc935_Scope> _278329_s) {
	if ((_278329_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_278329_s.get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6245600:;
		if (it != expr_end) {
			jule::Any _278721_st = *it;
			{
				{
					auto &_match_expr{ _278721_st };
					
					if (_match_expr.type == &__jule_any_type49) {
						_case_begin_1a62463d1:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type50) {
						_case_begin_1a624649c:;
						{
							jule::Uintptr _279321_addr = _278721_st.cast_ptr<_1abcbed88_BreakSt>(&__jule_any_type50).get()._field_It;;
							if ((_279321_addr != 0LLU)) {
								{ jule::Slice<jule::Uintptr> &__jule_push_dest = (*(_self_))._field_breaked; __jule_push_dest.push(_279321_addr); };
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type42) {
						_case_begin_1a6246513:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type37) {
						_case_begin_1a6246579:;
						{
							if (_1abd124d5_checkInfIter(_self_, _278721_st.cast_ptr<_1abcbd77c_InfIter>(&__jule_any_type37))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type51) {
						_case_begin_1a62465e0:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1a6246656:;
						{
							if (_1abd127e3_checkScope(_self_, _278721_st.cast_ptr<_1abcbc935_Scope>(&__jule_any_type22))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type24) {
						_case_begin_1a62466cd:;
						{
							{
								auto &_match_expr{ _278721_st.cast_ptr<_1abd5dc4b_Data>(&__jule_any_type24).get()._field_Model };
								
								if (_match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type23) {
									_case_begin_1a624a061:;
									{
										return true;;
									}
								}
								_match_end_1a6249c97:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type36) {
						_case_begin_1a6246755:;
						{
							if (_1abd11db9_checkConditional(_self_, _278721_st.cast_ptr<_1abcbd491_Conditional>(&__jule_any_type36))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type48) {
						_case_begin_1a62467cc:;
						{
							if (_1abd121c7_checkMatch(_self_, _278721_st.cast_ptr<_1abcc174c_Match>(&__jule_any_type48))) {
								return true;;
							};
						}
					}
					_match_end_1a624629e:;
				};
			}
			_iter_next_1a6245600:;
			++it;
			goto _iter_begin_1a6245600;
		}
		_iter_end_1a6245600:;
	};
	return false;;
}



inline jule::Bool _1abd12b01_check(_1abd11726_missingRetChecker* _self_, jule::Ptr<_1abcbc935_Scope> _282924_s) {
	return _1abd127e3_checkScope(_self_, _282924_s);;
}







std::ostream &operator<<(std::ostream &_Stream, _1abd11726_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1abd13937_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "Range:" << _Src._field_Range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1abd14d01_IsInitialized(_1abd1497c_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _1abd15065_IsTypeInferred(_1abd1497c_Var* _self_) {
	return (((*(_self_))._field_Kind == nullptr) || ((*(_self_))._field_Kind.get()._field_Decl == nullptr));;
}



inline jule::Bool _1abd152c9_untypedConstant(_1abd1497c_Var* _self_) {
	return (_1abd15065_IsTypeInferred(_self_) && (*(_self_))._field_Value.get()._field_Data.get()._field_untyped);;
}







std::ostream &operator<<(std::ostream &_Stream, _1abd1497c_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "IterRelation:" << _Src._field_IterRelation << ", ";
	_Stream << "RetOrder:" << _Src._field_RetOrder << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1abd15d57_Dispose(jule::Ptr<_1acb221d4_Fn> _1023_f) {
	return ((((((((((_1023_f != nullptr) && (_1023_f.get()._field_Owner != nullptr)) && _1023_f.get()._field_Ident.equal("Dispose", 7)) && (!(_1023_f.get()._field_Statically))) && (!(_1023_f.get()._field_Unsafety))) && _1acb22646_IsVoid(_1023_f.ptr())) && (_1023_f.get()._field_Generics.len() == 0LL)) && (_1023_f.get()._field_Params.len() == 1LL)) && _1023_f.get()._field_Params[0LL].get()._field_Mutable) && (!(_1acb211e4_IsRef(_1023_f.get()._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__1abd160ee_Str(jule::Ptr<_1acb221d4_Fn> _2419_f) {
	if (((((((((((_2419_f == nullptr) || (_2419_f.get()._field_Owner == nullptr)) || (!_2419_f.get()._field_Ident.equal("Str", 3))) || _2419_f.get()._field_Statically) || _2419_f.get()._field_Unsafety) || _1acb22646_IsVoid(_2419_f.ptr())) || (_2419_f.get()._field_Generics.len() != 0LL)) || (_2419_f.get()._field_Params.len() != 1LL)) || _2419_f.get()._field_Params[0LL].get()._field_Mutable) || _1acb211e4_IsRef(_2419_f.get()._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1acb24d85_FnIns> _3817_ins = _2419_f.get()._field_Instances[0LL];;
	jule::Ptr<_1accac407_Prim> _3913_prim = _1acca73be_Prim(_3817_ins.get()._field_Result.ptr());;
	if ((_3913_prim == nullptr)) {
		return false;;
	};
	return _1accb0608_IsStr(_3913_prim.ptr());;
}



inline jule::Bool static__1abd16440_logical(jule::Ptr<_1acb221d4_Fn>* _4624_f, jule::Str _4632_ident) {
	if (((((((((((((((*(_4624_f)) == nullptr) || ((*(_4624_f)).get()._field_Ident != _4632_ident)) || ((*(_4624_f)).get()._field_Owner == nullptr)) || ((*(_4624_f)).get()._field_Instances.len() == 0LL)) || (*(_4624_f)).get()._field_Statically) || (*(_4624_f)).get()._field_Unsafety) || _1acb22646_IsVoid((*(_4624_f)).ptr())) || ((*(_4624_f)).get()._field_Generics.len() != 0LL)) || ((*(_4624_f)).get()._field_Params.len() != 2LL)) || (*(_4624_f)).get()._field_Params[0LL].get()._field_Mutable) || _1acb211e4_IsRef((*(_4624_f)).get()._field_Params[0LL].ptr())) || (*(_4624_f)).get()._field_Params[1LL].get()._field_Mutable) || (*(_4624_f)).get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1acb24d85_FnIns> _6317_ins = (*(_4624_f)).get()._field_Instances[0LL];;
	jule::Ptr<_1accac407_Prim> _6413_prim = _1acca73be_Prim(_6317_ins.get()._field_Result.ptr());;
	if (((_6413_prim == nullptr) || (!(_1accb0394_IsBool(_6413_prim.ptr()))))) {
		return false;;
	};
	return (_6317_ins.get()._field_Owner == _1acca8821_Struct(_6317_ins.get()._field_Params[1LL].get()._field_Kind.ptr()));;
}



inline jule::Bool static__1abd166d7_Eq(jule::Ptr<_1acb221d4_Fn> _7218_f) {
	return static__1abd16440_logical(&(_7218_f), jule::Str("Eq", 2));;
}



inline jule::Bool static__1abd1697e_Gt(jule::Ptr<_1acb221d4_Fn> _7718_f) {
	return static__1abd16440_logical(&(_7718_f), jule::Str("Gt", 2));;
}



inline jule::Bool static__1abd16c26_GtEq(jule::Ptr<_1acb221d4_Fn> _8220_f) {
	return static__1abd16440_logical(&(_8220_f), jule::Str("GtEq", 4));;
}



inline jule::Bool static__1abd16ebd_Lt(jule::Ptr<_1acb221d4_Fn> _8718_f) {
	return static__1abd16440_logical(&(_8718_f), jule::Str("Lt", 2));;
}



inline jule::Bool static__1abd17265_LtEq(jule::Ptr<_1acb221d4_Fn> _9220_f) {
	return static__1abd16440_logical(&(_9220_f), jule::Str("LtEq", 4));;
}



inline jule::Bool static__1abd175a6_result(jule::Ptr<_1acb221d4_Fn>* _9623_f, jule::Str _9631_ident) {
	if (((((((((((((((*(_9623_f)) == nullptr) || ((*(_9623_f)).get()._field_Ident != _9631_ident)) || ((*(_9623_f)).get()._field_Owner == nullptr)) || ((*(_9623_f)).get()._field_Instances.len() == 0LL)) || (*(_9623_f)).get()._field_Statically) || (*(_9623_f)).get()._field_Unsafety) || _1acb22646_IsVoid((*(_9623_f)).ptr())) || ((*(_9623_f)).get()._field_Generics.len() != 0LL)) || ((*(_9623_f)).get()._field_Params.len() != 2LL)) || (*(_9623_f)).get()._field_Params[0LL].get()._field_Mutable) || _1acb211e4_IsRef((*(_9623_f)).get()._field_Params[0LL].ptr())) || (*(_9623_f)).get()._field_Params[1LL].get()._field_Mutable) || (*(_9623_f)).get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1acb24d85_FnIns> _11317_ins = (*(_9623_f)).get()._field_Instances[0LL];;
	return (_1acca8821_Struct(_11317_ins.get()._field_Result.ptr()) == _11317_ins.get()._field_Owner);;
}



inline jule::Bool static__1abd1784d_Shl(jule::Ptr<_1acb221d4_Fn> _11819_f) {
	return static__1abd175a6_result(&(_11819_f), jule::Str("Shl", 3));;
}



inline jule::Bool static__1abd17ae5_Shr(jule::Ptr<_1acb221d4_Fn> _12319_f) {
	return static__1abd175a6_result(&(_12319_f), jule::Str("Shr", 3));;
}



inline jule::Bool static__1abd17d8c_Add(jule::Ptr<_1acb221d4_Fn> _12819_f) {
	return static__1abd175a6_result(&(_12819_f), jule::Str("Add", 3));;
}



inline jule::Bool static__1abd18134_Sub(jule::Ptr<_1acb221d4_Fn> _13319_f) {
	return static__1abd175a6_result(&(_13319_f), jule::Str("Sub", 3));;
}



inline jule::Bool static__1abd183cb_Div(jule::Ptr<_1acb221d4_Fn> _13819_f) {
	return static__1abd175a6_result(&(_13819_f), jule::Str("Div", 3));;
}



inline jule::Bool static__1abd18673_Mul(jule::Ptr<_1acb221d4_Fn> _14319_f) {
	return static__1abd175a6_result(&(_14319_f), jule::Str("Mul", 3));;
}



inline jule::Bool static__1abd1891a_Mod(jule::Ptr<_1acb221d4_Fn> _14819_f) {
	return static__1abd175a6_result(&(_14819_f), jule::Str("Mod", 3));;
}



inline jule::Bool static__1abd18bb2_BitAnd(jule::Ptr<_1acb221d4_Fn> _15322_f) {
	return static__1abd175a6_result(&(_15322_f), jule::Str("BitAnd", 6));;
}



inline jule::Bool static__1abd18e59_BitOr(jule::Ptr<_1acb221d4_Fn> _15821_f) {
	return static__1abd175a6_result(&(_15821_f), jule::Str("BitOr", 5));;
}



inline jule::Bool static__1abd19201_BitXor(jule::Ptr<_1acb221d4_Fn> _16322_f) {
	return static__1abd175a6_result(&(_16322_f), jule::Str("BitXor", 6));;
}



inline jule::Bool static__1abd19542_unary(jule::Ptr<_1acb221d4_Fn>* _16722_f, jule::Str _16730_ident) {
	if (((((((((((((*(_16722_f)) == nullptr) || ((*(_16722_f)).get()._field_Ident != _16730_ident)) || ((*(_16722_f)).get()._field_Owner == nullptr)) || ((*(_16722_f)).get()._field_Instances.len() == 0LL)) || (*(_16722_f)).get()._field_Statically) || (*(_16722_f)).get()._field_Unsafety) || _1acb22646_IsVoid((*(_16722_f)).ptr())) || ((*(_16722_f)).get()._field_Generics.len() != 0LL)) || ((*(_16722_f)).get()._field_Params.len() != 1LL)) || (*(_16722_f)).get()._field_Params[0LL].get()._field_Mutable) || _1acb211e4_IsRef((*(_16722_f)).get()._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1acb24d85_FnIns> _18217_ins = (*(_16722_f)).get()._field_Instances[0LL];;
	return (_1acca8821_Struct(_18217_ins.get()._field_Result.ptr()) == _18217_ins.get()._field_Owner);;
}



inline jule::Bool static__1abd197d9_Neg(jule::Ptr<_1acb221d4_Fn> _18719_f) {
	return static__1abd19542_unary(&(_18719_f), jule::Str("Neg", 3));;
}



inline jule::Bool static__1abd19a81_Pos(jule::Ptr<_1acb221d4_Fn> _19219_f) {
	return static__1abd19542_unary(&(_19219_f), jule::Str("Pos", 3));;
}



inline jule::Bool static__1abd19d28_BitNot(jule::Ptr<_1acb221d4_Fn> _19722_f) {
	return static__1abd19542_unary(&(_19722_f), jule::Str("BitNot", 6));;
}



inline jule::Bool static__1abd1a169_assign(jule::Ptr<_1acb221d4_Fn>* _20123_f, jule::Str _20131_ident) {
	if (((((((((((((((*(_20123_f)) == nullptr) || ((*(_20123_f)).get()._field_Ident != _20131_ident)) || ((*(_20123_f)).get()._field_Owner == nullptr)) || ((*(_20123_f)).get()._field_Instances.len() == 0LL)) || (*(_20123_f)).get()._field_Statically) || (*(_20123_f)).get()._field_Unsafety) || (!(_1acb22646_IsVoid((*(_20123_f)).ptr())))) || ((*(_20123_f)).get()._field_Generics.len() != 0LL)) || ((*(_20123_f)).get()._field_Params.len() != 2LL)) || (!((*(_20123_f)).get()._field_Params[0LL].get()._field_Mutable))) || _1acb211e4_IsRef((*(_20123_f)).get()._field_Params[0LL].ptr())) || (*(_20123_f)).get()._field_Params[1LL].get()._field_Mutable) || (*(_20123_f)).get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__1abd1a411_AddAssign(jule::Ptr<_1acb221d4_Fn> _22125_f) {
	return static__1abd1a169_assign(&(_22125_f), jule::Str("AddAssign", 9));;
}



inline jule::Bool static__1abd1a6a8_SubAssign(jule::Ptr<_1acb221d4_Fn> _22625_f) {
	return static__1abd1a169_assign(&(_22625_f), jule::Str("SubAssign", 9));;
}



inline jule::Bool static__1abd1a950_DivAssign(jule::Ptr<_1acb221d4_Fn> _23125_f) {
	return static__1abd1a169_assign(&(_23125_f), jule::Str("DivAssign", 9));;
}



inline jule::Bool static__1abd1abe7_MulAssign(jule::Ptr<_1acb221d4_Fn> _23625_f) {
	return static__1abd1a169_assign(&(_23625_f), jule::Str("MulAssign", 9));;
}



inline jule::Bool static__1abd1ae8e_ModAssign(jule::Ptr<_1acb221d4_Fn> _24125_f) {
	return static__1abd1a169_assign(&(_24125_f), jule::Str("ModAssign", 9));;
}



inline jule::Bool static__1abd1b236_ShlAssign(jule::Ptr<_1acb221d4_Fn> _24625_f) {
	return static__1abd1a169_assign(&(_24625_f), jule::Str("ShlAssign", 9));;
}



inline jule::Bool static__1abd1b4cd_ShrAssign(jule::Ptr<_1acb221d4_Fn> _25125_f) {
	return static__1abd1a169_assign(&(_25125_f), jule::Str("ShrAssign", 9));;
}



inline jule::Bool static__1abd1b775_BitOrAssign(jule::Ptr<_1acb221d4_Fn> _25627_f) {
	return static__1abd1a169_assign(&(_25627_f), jule::Str("BitOrAssign", 11));;
}



inline jule::Bool static__1abd1ba1c_BitAndAssign(jule::Ptr<_1acb221d4_Fn> _26128_f) {
	return static__1abd1a169_assign(&(_26128_f), jule::Str("BitAndAssign", 12));;
}



inline jule::Bool static__1abd1bcb4_BitXorAssign(jule::Ptr<_1acb221d4_Fn> _26628_f) {
	return static__1abd1a169_assign(&(_26628_f), jule::Str("BitXorAssign", 12));;
}







std::ostream &operator<<(std::ostream &_Stream, _1abd1572a_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1abd47b8b_pushErr(_1abd476b3_typeCompatibilityChecker* _self_, jule::Str _11726_fmt, jule::Slice<jule::Any> _11739_args) {
	_1abce7003_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _11726_fmt, _11739_args);
}



inline jule::Bool _1abd47e00_checkTrait(_1abd476b3_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1acca5c08_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1acb34405_Trait> _12517_trt = _1acca8a85_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _12617_ref = false;;
	{
		
		if ((_1acca7633_Sptr((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1a627da89:;
			{
				_12617_ref=true;
				(*(_self_))._field_src=_1acca7633_Sptr((*(_self_))._field_src.ptr()).get()._field_Elem;
				if ((_1acca8821_Struct((*(_self_))._field_src.ptr()) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1a627db11;
			}
		}
		else if ((_1acca8821_Struct((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1a627db11:;
			{
				jule::Ptr<_1acb09d37_StructIns> _13617_s = _1acca8821_Struct((*(_self_))._field_src.ptr());;
				if ((!(_1acb0853e_IsImplements(_13617_s.get()._field_Decl.ptr(), _12517_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_12617_ref)) && _1abd4641a_traitHasReferenceReceiver(&(_12517_trt)))) {
					_1abd47b8b_pushErr(_self_, jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1acca8a85_Trait((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1a627db88:;
			{
				jule::Ptr<_1acb34405_Trait> _14621_base = _1acca8a85_Trait((*(_self_))._field_src.ptr());;
				if ((_12517_trt == _14621_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_lookup:;
				{
					auto expr = &(_14621_base.get()._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a6282dce:;
					if (it != expr_end) {
						jule::Ptr<_1acb07021_Struct> _15120_s1 = *it;
						{
							{
								auto expr = &(_12517_trt.get()._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a6283a28:;
								if (it != expr_end) {
									jule::Ptr<_1acb07021_Struct> _15224_s2 = *it;
									{
										if ((_15120_s1 == _15224_s2)) {
											goto _iter_next_1a6282dce;
										};
									}
									_iter_next_1a6283a28:;
									++it;
									goto _iter_begin_1a6283a28;
								}
								_iter_end_1a6283a28:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_1a6282dce:;
						++it;
						goto _iter_begin_1a6282dce;
					}
					_iter_end_1a6282dce:;
				};
				{
					auto expr = &(_12517_trt.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a62845a6:;
					if (it != expr_end) {
						jule::Ptr<_1acb221d4_Fn> _15925_m1 = *it;
						{
							jule::Ptr<_1acb221d4_Fn> _16025_m2 = _1acb352a2_FindMethod(_14621_base.ptr(), _15925_m1.get()._field_Ident);;
							if ((_16025_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_1acb24d85_FnIns> _16421_m1k = _1abd0036e_getTraitCheckFnKind((*(_self_))._field_s, &(_15925_m1));;
							jule::Ptr<_1acb24d85_FnIns> _16521_m2k = _1abd0036e_getTraitCheckFnKind((*(_self_))._field_s, &(_16025_m2));;
							if ((!(_1acb25c43_equalTrait(_16421_m1k, &(_16521_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_1a62845a6:;
						++it;
						goto _iter_begin_1a62845a6;
					}
					_iter_end_1a62845a6:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a627da23:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1a627d9bd:;
	};
}



inline jule::Bool _1abd48164_checkPtr(_1abd476b3_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1acca5c08_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1accb41bc_Ptr> _18017_dest = _1acca7897_Ptr((*(_self_))._field_dest.ptr());;
	if (_1accb4b90_IsUnsafe(_18017_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1acca5367_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1abd483c8_checkPrim(_1abd476b3_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*(_self_))._field_dest.get()._field_Variadic))) {
		jule::Ptr<_1accac407_Prim> _18917_prim = _1acca73be_Prim((*(_self_))._field_dest.ptr());;
		if (((_18917_prim != nullptr) && _1accb086c_IsAny(_18917_prim.ptr()))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1acca5367_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1abd48780_typeEnum(_1abd476b3_typeCompatibilityChecker* _self_, jule::Ptr<_1acb38283_TypeEnum>* _19728_e, jule::Ptr<_1acca4ba2_TypeKind>* _19747_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_19728_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6289de7:;
		if (it != expr_end) {
			jule::Ptr<_1acb37c00_TypeEnumItem> _19821_item = *it;
			{
				if (_1acca5367_Equal(_19821_item.get()._field_Kind.get()._field_Kind, (*(_19747_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1acb38283_TypeEnum> _20221_ke = _1acca7d70_TypeEnum(_19821_item.get()._field_Kind.get()._field_Kind.ptr());;
				if ((_20221_ke == nullptr)) {
					goto _iter_next_1a6289de7;
				};
				if (_1abd48780_typeEnum(_self_, &(_20221_ke), _19747_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1a6289de7:;
			++it;
			goto _iter_begin_1a6289de7;
		}
		_iter_end_1a6289de7:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1abd489e4_checkTypeEnum(_1abd476b3_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1acca5367_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1acb38283_TypeEnum> _21717_e = _1acca7d70_TypeEnum((*(_self_))._field_dest.ptr());;
	__jule_func_result = _1abd48780_typeEnum(_self_, &(_21717_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _1abd48c58_check(_1abd476b3_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_1acca7897_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _1abd48164_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_1acca691d_NilCompatible((*(_self_))._field_dest.ptr())) {
		if (_1acca5c08_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_1acca73be_Prim((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1a628e935:;
			{
				__jule_func_result = _1abd483c8_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1acca7d70_TypeEnum((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1a628ed20:;
			{
				__jule_func_result = _1abd489e4_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1acca8a85_Trait((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1a628ed86:;
			{
				__jule_func_result = _1abd47e00_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a628dba9:;
			{
				__jule_func_result = _1acca5367_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1a628da11:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1abd476b3_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _1abd4974d_pushErr(_1abd492db_assignTypeChecker* _self_, jule::Str _25326_fmt, jule::Slice<jule::Any> _25339_args) {
	_1abce7003_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _25326_fmt, _25339_args);
}



inline jule::Bool _1abd499b2_checkValidity(_1abd492db_assignTypeChecker* _self_) {
	jule::Bool _25817_valid = true;;
	{
		
		if ((_1acca85ac_Fn((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a629253c:;
			{
				jule::Ptr<_1acb24d85_FnIns> _26117_f = _1acca85ac_Fn((*(_self_))._field_d.get()._field_Kind.ptr());;
				{
					
					if (_1acb2621b_IsBuiltin(_26117_f.ptr())) {
						_case_begin_1a629396c:;
						{
							_1abd4974d_pushErr(_self_, jule::Str("builtin define cannot use as anonymous function", 47), jule::Slice<jule::Any>());
							_25817_valid=false;
						}
					}
					else if (_26117_f.get()._field_Decl.get()._field_Binded) {
						_case_begin_1a62939e4:;
						{
							_1abd4974d_pushErr(_self_, jule::Str("binded functions cannot use as anonymous function", 49), jule::Slice<jule::Any>());
							_25817_valid=false;
						}
					}
					else if (((!(_26117_f.get()._field_Decl.get()._field_Statically)) && _1acb228aa_IsMethod(_26117_f.get()._field_Decl.ptr()))) {
						_case_begin_1a6293a6b:;
						{
							_1abd4974d_pushErr(_self_, jule::Str("non-static methods cannot use as anonymous function", 51), jule::Slice<jule::Any>());
							_25817_valid=false;
						}
					}
					else if (((_26117_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_26117_f.get()._field_Generics.len() == 0LL))) {
						_case_begin_1a6293ae3:;
						{
							_1abd4974d_pushErr(_self_, jule::Str("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
							_1abce7322_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("instantiate generic function to use as anonymous function", 57), jule::Slice<jule::Any>());
							_25817_valid=false;
						}
					}
					_match_end_1a6293890:;
				};
			}
		}
		else if ((_1acca905d_Tup((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a62925b4:;
			{
				_1abd4974d_pushErr(_self_, jule::Str("tuples cannot assign to single define in same time", 50), jule::Slice<jule::Any>());
				_25817_valid=false;
			}
		}
		_match_end_1a6292482:;
	};
	return _25817_valid;;
}



inline jule::Bool _1abd49c26_checkConst(_1abd492db_assignTypeChecker* _self_) {
	if (((((!(_1abd5e5ba_IsConst((*(_self_))._field_d.ptr()))) || (_1acca73be_Prim((*(_self_))._field_dest.ptr()) == nullptr)) || (_1acca73be_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) == nullptr)) || (!(_1ddeb4611_IsNum(_1acca73be_Prim((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
		return false;;
	};
	if ((!__jule_any_type19_compare((*(_self_))._field_d.get()._field_Model, (*(_self_))._field_d.get()._field_Constant))) {
		return false;;
	};
	jule::Str _29813_kind = _1acca73be_Prim((*(_self_))._field_dest.ptr()).get()._field_Kind;;
	{
		
		if (_1ddeb4369_IsFloat(_29813_kind)) {
			_case_begin_1a6299ba4:;
			{
				if ((!(_1abd466e5_floatAssignable(_29813_kind, &((*(_self_))._field_d))))) {
					_1abd4974d_pushErr(_self_, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*(_self_))._field_d.get()._field_Constant.get()._field_Kind=_29813_kind;
			}
		}
		else if (_1ddeb404a_IsInt(_29813_kind)) {
			_case_begin_1a6299c1a:;
			{
				if ((!(_1abd4720c_intAssignable(_29813_kind, &((*(_self_))._field_d))))) {
					_1abd4974d_pushErr(_self_, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*(_self_))._field_d.get()._field_Constant.get()._field_Kind=_29813_kind;
			}
		}
		else {
			_case_begin_1a6299b3d:;
			{
				return false;;
			}
		}
		_match_end_1a6299ad8:;
	};
	return true;;
}



inline jule::Bool _1abd49e8a_isPrim(_1abd492db_assignTypeChecker* _self_) {
	if (((*(_self_))._field_dest.get()._field_Variadic || (*(_self_))._field_d.get()._field_Kind.get()._field_Variadic)) {
		return false;;
	};
	if ((_1acca5994_Binded((*(_self_))._field_dest.ptr()) || _1acca5994_Binded((*(_self_))._field_d.get()._field_Kind.ptr()))) {
		return false;;
	};
	return ((_1acca73be_Prim((*(_self_))._field_dest.ptr()) != nullptr) && (_1acca73be_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr));;
}



inline jule::Bool _1abd4a1ee_checkCompatibility(_1abd492db_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1a629e03d:;
			{
				return false;;
			}
		}
		else if ((!(_1abd499b2_checkValidity(_self_)))) {
			_case_begin_1a629e0b5:;
			{
				return false;;
			}
		}
		else if (_1abd49c26_checkConst(_self_)) {
			_case_begin_1a629e13c:;
			{
				return true;;
			}
		}
		else if ((_1acca7b0b_Enum((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a629e1b4:;
			{
				jule::Ptr<_1acca4ba2_TypeKind> _34221_dkind = (*(_self_))._field_dest;;
				if ((_1acca7b0b_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_34221_dkind=_1acca7b0b_Enum((*(_self_))._field_dest.ptr()).get()._field_Kind.get()._field_Kind;
				} else if ((_1acca73be_Prim((*(_self_))._field_dest.ptr()) == nullptr)) {
					goto _match_end_1a629de1c;
				};
				if (_1ddeb0d7c_TypesAreCompatible(_1acca73be_Prim(_1acca7b0b_Enum((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).get()._field_Kind, _1acca73be_Prim(_34221_dkind.ptr()).get()._field_Kind)) {
					return true;;
				};
			}
		}
		else if (_1abd49e8a_isPrim(_self_)) {
			_case_begin_1a629e23b:;
			{
				jule::Ptr<_1accac407_Prim> _35217_dest = _1acca73be_Prim((*(_self_))._field_dest.ptr());;
				if (_1accb086c_IsAny(_35217_dest.ptr())) {
					return true;;
				};
				jule::Ptr<_1accac407_Prim> _35621_src = _1acca73be_Prim((*(_self_))._field_d.get()._field_Kind.ptr());;
				if (_1ddeb0d7c_TypesAreCompatible(_35217_dest.get()._field_Kind, _35621_src.get()._field_Kind)) {
					return true;;
				};
			}
		}
		_match_end_1a629de1c:;
	};
	return _1abcee6e2_checkTypeCompatibility((*(_self_))._field_s, &((*(_self_))._field_dest), &((*(_self_))._field_d.get()._field_Kind), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _1abd4a463_check(_1abd492db_assignTypeChecker* _self_) {
	jule::Bool _36513_ok = _1abd4a1ee_checkCompatibility(_self_);;
	if ((_36513_ok && (!((*(_self_))._field_d.get()._field_Kind.get()._field_Variadic)))) {
		_1accc0b9b_applyImplicitCast(&((*(_self_))._field_dest), &((*(_self_))._field_d));
	};
	return _36513_ok;;
}







std::ostream &operator<<(std::ostream &_Stream, _1abd492db_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a62b63eb_annotateConstraintElem(_1abd4acc1_dynamicTypeAnnotation* _self_, jule::Ptr<_1acca4ba2_TypeKind>* _38549_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1a62b79a2:;
			{
				jule::Ptr<_1acca4ba2_TypeKind> _38821_elem = nullptr;;
				{
					
{
						_case_begin_1a62b87b6:;
						{
							_38821_elem=_1acca80d4_Arr((*(_38549_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1a62b8332:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_1acad9487_ArrTypeDecl>(&__jule_any_type75).get()._field_Elem;
				return _1abd4c3cc_annotateConstraint(_self_, &(_38821_elem));;
			}
		}
		_match_end_1a62b78e7:;
	};
	return false;;
}

inline jule::Bool _1a62b672b_annotateConstraintElem(_1abd4acc1_dynamicTypeAnnotation* _self_, jule::Ptr<_1acca4ba2_TypeKind>* _38549_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1a62bad6d:;
			{
				jule::Ptr<_1acca4ba2_TypeKind> _38821_elem = nullptr;;
				{
					
{
						_case_begin_1a62bbc1a:;
						{
							_38821_elem=_1acca8348_Slc((*(_38549_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1a62bb6ed:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_1acad86d9_SlcTypeDecl>(&__jule_any_type76).get()._field_Elem;
				return _1abd4c3cc_annotateConstraint(_self_, &(_38821_elem));;
			}
		}
		_match_end_1a62bacb3:;
	};
	return false;;
}

inline jule::Bool _1a62b5c14_annotateConstraintElem(_1abd4acc1_dynamicTypeAnnotation* _self_, jule::Ptr<_1acca4ba2_TypeKind>* _38549_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1a62be239:;
			{
				jule::Ptr<_1acca4ba2_TypeKind> _38821_elem = nullptr;;
				{
					
{
						_case_begin_1a62c014c:;
						{
							_38821_elem=_1acca7897_Ptr((*(_38549_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1a62beab9:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_1acad8cb1_PtrTypeDecl>(&__jule_any_type77).get()._field_Elem;
				return _1abd4c3cc_annotateConstraint(_self_, &(_38821_elem));;
			}
		}
		_match_end_1a62be17e:;
	};
	return false;;
}

inline jule::Bool _1a62bdc72_annotateConstraintElem(_1abd4acc1_dynamicTypeAnnotation* _self_, jule::Ptr<_1acca4ba2_TypeKind>* _38549_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1a62c22d6:;
			{
				jule::Ptr<_1acca4ba2_TypeKind> _38821_elem = nullptr;;
				{
					
{
						_case_begin_1a62c3271:;
						{
							_38821_elem=_1acca7633_Sptr((*(_38549_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1a62c2b66:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_1acad82dd_SptrTypeDecl>(&__jule_any_type78).get()._field_Elem;
				return _1abd4c3cc_annotateConstraint(_self_, &(_38821_elem));;
			}
		}
		_match_end_1a62c222b:;
	};
	return false;;
}



inline jule::Bool _1abd4b662_annotateConstraintMap(_1abd4acc1_dynamicTypeAnnotation* _self_, jule::Ptr<_1acca4ba2_TypeKind>* _40545_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1a62a6782:;
			{
				jule::Ptr<_1accb2b6b_Map> _40821_m = _1acca8ce9_Map((*(_40545_k)).ptr());;
				jule::Ptr<_1acad9b91_MapTypeDecl> _40921_m2 = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_1acad9b91_MapTypeDecl>(&__jule_any_type79);;
				(*(_self_))._field_c=_40921_m2.get()._field_Key;
				if ((!(_1abd4c3cc_annotateConstraint(_self_, &(_40821_m.get()._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=_40921_m2.get()._field_Val;
				__jule_func_result = _1abd4c3cc_annotateConstraint(_self_, &(_40821_m.get()._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_1a62a670a:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1abd4b970_annotateConstraintTup(_1abd4acc1_dynamicTypeAnnotation* _self_, jule::Ptr<_1acca4ba2_TypeKind>* _42045_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1a62a8e05:;
			{
				jule::Ptr<_1acad89c5_TupleTypeDecl> _42321_tup = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_1acad89c5_TupleTypeDecl>(&__jule_any_type80);;
				jule::Ptr<_1accb21ba_Tuple> _42421_tup2 = _1acca905d_Tup((*(_42045_k)).ptr());;
				{
					auto expr = &(_42421_tup2.get()._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a62aa2e1:;
					if (it != expr_end) {
						jule::Ptr<_1acca4ba2_TypeKind> _42525_t2 = *it;
						{
							{
								auto expr = &(_42321_tup.get()._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a62aaaa5:;
								if (it != expr_end) {
									jule::Ptr<_1acad72cb_TypeDecl> _42629_t = *it;
									{
										(*(_self_))._field_c=_42629_t;
										if (_1abd4c3cc_annotateConstraint(_self_, &(_42525_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1a62aaaa5:;
									++it;
									goto _iter_begin_1a62aaaa5;
								}
								_iter_end_1a62aaaa5:;
							};
						}
						_iter_next_1a62aa2e1:;
						++it;
						goto _iter_begin_1a62aa2e1;
					}
					_iter_end_1a62aa2e1:;
				};
			}
		}
		_match_end_1a62a6c16:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1abd4bc7d_annotateConstraintFn(_1abd4acc1_dynamicTypeAnnotation* _self_, jule::Ptr<_1acca4ba2_TypeKind>* _43744_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1a62aa874:;
			{
				jule::Ptr<_1acae8908_FnDecl> _44021_pf = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_1acae8908_FnDecl>(&__jule_any_type14);;
				jule::Ptr<_1acb24d85_FnIns> _44121_f = _1acca85ac_Fn((*(_43744_k)).ptr());;
				{
					auto expr = &(_44121_f.get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a62acbc8:;
					if (it != expr_end) {
						jule::I64 _44218_i = it - expr->begin();
						jule::Ptr<_1acb23eb6_ParamIns> _44225_fp = *it;
						{
							(*(_self_))._field_c=_44021_pf.get()._field_Params[_44218_i].get()._field_Kind;
							if (_1abd4c3cc_annotateConstraint(_self_, &(_44225_fp.get()._field_Kind))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1a62acbc8:;
						++it;
						_44218_i++;
						goto _iter_begin_1a62acbc8;
					}
					_iter_end_1a62acbc8:;
				};
				if ((_44021_pf.get()._field_Result != nullptr)) {
					(*(_self_))._field_c=_44021_pf.get()._field_Result.get()._field_Kind;
					if (_1abd4c3cc_annotateConstraint(_self_, &(_44121_f.get()._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1a62aa81e:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1abd4c0ad_annotateConstraintIdent(_1abd4acc1_dynamicTypeAnnotation* _self_, jule::Ptr<_1acca4ba2_TypeKind>* _45847_k) {
	jule::Ptr<_1acad7892_IdentTypeDecl> _45917_ident = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_1acad7892_IdentTypeDecl>(&__jule_any_type20);;
	jule::Ptr<_1acb09d37_StructIns> _46017_s = _1acca8821_Struct((*(_45847_k)).ptr());;
	{
		auto expr = &((*(_self_))._field_f.get()._field_Decl.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a62b078b:;
		if (it != expr_end) {
			jule::I64 _46113_i = it - expr->begin();
			jule::Ptr<_1acae4272_GenericDecl> _46116_g = *it;
			{
				if ((_46116_g.get()._field_Ident == _45917_ident.get()._field_Ident)) {
					jule::Ptr<_1acca3420_InsGeneric> _46325_fg = (*(_self_))._field_f.get()._field_Generics[_46113_i];;
					if ((_46325_fg != nullptr)) {
						return false;;
					};
					_1abd4c6eb_pushGeneric(_self_, _45847_k, _46113_i);
					return true;;
				};
				if ((_46017_s == nullptr)) {
					goto _iter_next_1a62b078b;
				};
				jule::Ptr<_1acad72cb_TypeDecl> _47321_c = (*(_self_))._field_c;;
				{
					auto expr = &(_45917_ident.get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a62b2eb9:;
					if (it != expr_end) {
						jule::Ptr<_1acad72cb_TypeDecl> _47425_ig = *it;
						{
							(*(_self_))._field_c=_47425_ig;
							{
								auto expr = &(_46017_s.get()._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a62b3c34:;
								if (it != expr_end) {
									jule::Ptr<_1acca3420_InsGeneric> _47629_sg = *it;
									{
										if (_1abd4c3cc_annotateConstraint(_self_, &(_47629_sg.get()._field_Kind))) {
											return true;;
										};
									}
									_iter_next_1a62b3c34:;
									++it;
									goto _iter_begin_1a62b3c34;
								}
								_iter_end_1a62b3c34:;
							};
						}
						_iter_next_1a62b2eb9:;
						++it;
						goto _iter_begin_1a62b2eb9;
					}
					_iter_end_1a62b2eb9:;
				};
				(*(_self_))._field_c=_47321_c;
			}
			_iter_next_1a62b078b:;
			++it;
			_46113_i++;
			goto _iter_begin_1a62b078b;
		}
		_iter_end_1a62b078b:;
	};
	return false;;
}



inline jule::Bool _1abd4c3cc_annotateConstraint(_1abd4acc1_dynamicTypeAnnotation* _self_, jule::Ptr<_1acca4ba2_TypeKind>* _48742_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1a62b366d:;
			{
				return _1abd4c0ad_annotateConstraintIdent(_self_, _48742_k);;
			}
		}
		_match_end_1a62b3618:;
	};
	{
		
		if ((_1acca80d4_Arr((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1a62b5692:;
			{
				return _1a62b63eb_annotateConstraintElem(_self_, _48742_k);;
			}
		}
		else if ((_1acca8348_Slc((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1a62b50a9:;
			{
				return _1a62b672b_annotateConstraintElem(_self_, _48742_k);;
			}
		}
		else if ((_1acca7897_Ptr((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1a62b5120:;
			{
				return _1a62b5c14_annotateConstraintElem(_self_, _48742_k);;
			}
		}
		else if ((_1acca7633_Sptr((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1a62b4c13:;
			{
				return _1a62bdc72_annotateConstraintElem(_self_, _48742_k);;
			}
		}
		else if ((_1acca8ce9_Map((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1a62b4c79:;
			{
				return _1abd4b662_annotateConstraintMap(_self_, _48742_k);;
			}
		}
		else if ((_1acca85ac_Fn((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1a62b4ce0:;
			{
				return _1abd4bc7d_annotateConstraintFn(_self_, _48742_k);;
			}
		}
		else if ((_1acca905d_Tup((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1a62b4d56:;
			{
				return _1abd4b970_annotateConstraintTup(_self_, _48742_k);;
			}
		}
		else {
			_case_begin_1a62b37e4:;
			{
				return false;;
			}
		}
		_match_end_1a62b377d:;
	};
}



inline void _1abd4c6eb_pushGeneric(_1abd4acc1_dynamicTypeAnnotation* _self_, jule::Ptr<_1acca4ba2_TypeKind>* _51235_k, jule::I64 _51249_i) {
	(*(_self_))._field_f.get()._field_Generics[_51249_i]=jule::new_ptr<_1acca3420_InsGeneric>(_1acca3420_InsGeneric{._field_Kind=(*(_51235_k)), });
	jule::Ptr<_1acae4272_GenericDecl> _51417_gd = (*(_self_))._field_f.get()._field_Decl.get()._field_Generics[_51249_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a62c5938:;
		if (it != expr_end) {
			jule::Ptr<_1acca4ba2_TypeKind> _51521_ignored = *it;
			{
				if ((_51417_gd.get()._field_Ident == _1acca5059_Str(_51521_ignored.ptr()))) {
					_51521_ignored.get()._field_Kind=(*(_51235_k)).get()._field_Kind;
				};
			}
			_iter_next_1a62c5938:;
			++it;
			goto _iter_begin_1a62c5938;
		}
		_iter_end_1a62c5938:;
	};
	if (((_51417_gd.get()._field_Constraint == nullptr) || (_51417_gd.get()._field_Constraint.get()._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=_51417_gd.get()._field_Constraint.get()._field_Mask[0LL];
	_1abd4c3cc_annotateConstraint(_self_, _51235_k);
}



inline jule::Bool _1abd4ca09_annotatePrim(_1abd4acc1_dynamicTypeAnnotation* _self_, jule::Ptr<_1acca4ba2_TypeKind>* _52743_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1abd4e830_annotateAny(_self_, _52743_k);
	return __jule_func_result;;
}



inline jule::Bool _1abd4cd17_annotateArr(_1abd4acc1_dynamicTypeAnnotation* _self_, jule::Ptr<_1acca4ba2_TypeKind>* _53142_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1accb3760_Arr> _53217_parr = _1acca80d4_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_53217_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1accb3760_Arr> _53617_arr = _1acca80d4_Arr((*(_53142_k)).ptr());;
	(*(_self_))._field_k=(&(_53217_parr.get()._field_Elem));
	__jule_func_result = _1abd4eb3d_annotateKind(_self_, &(_53617_arr.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1abd4d125_annotateSlc(_1abd4acc1_dynamicTypeAnnotation* _self_, jule::Ptr<_1acca4ba2_TypeKind>* _54142_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1accb15b5_Slc> _54217_pslc = _1acca8348_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_54217_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1accb15b5_Slc> _54617_slc = _1acca8348_Slc((*(_54142_k)).ptr());;
	(*(_self_))._field_k=(&(_54217_pslc.get()._field_Elem));
	__jule_func_result = _1abd4eb3d_annotateKind(_self_, &(_54617_slc.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1abd4d4cc_checkMapKey(_1abd4acc1_dynamicTypeAnnotation* _self_, jule::Ptr<_1acca4ba2_TypeKind>* _55141_k, jule::Ptr<_1acca4ba2_TypeKind>* _55161_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1acca4ba2_TypeKind>* _55217_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_55141_k;
	__jule_func_result=_1abd4eb3d_annotateKind(_self_, _55161_ck);
	(*(_self_))._field_k=_55217_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1abd4d7da_annotateMap(_1abd4acc1_dynamicTypeAnnotation* _self_, jule::Ptr<_1acca4ba2_TypeKind>* _55942_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1accb2b6b_Map> _56017_pmap = _1acca8ce9_Map((*((*(_self_))._field_k)).ptr());;
	if ((_56017_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1accb2b6b_Map> _56417_m = _1acca8ce9_Map((*(_55942_k)).ptr());;
	__jule_func_result = (_1abd4d4cc_checkMapKey(_self_, (&(_56017_pmap.get()._field_Key)), &(_56417_m.get()._field_Key)) && _1abd4d4cc_checkMapKey(_self_, (&(_56017_pmap.get()._field_Val)), &(_56417_m.get()._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _1abd4dae8_annotateFn(_1abd4acc1_dynamicTypeAnnotation* _self_, jule::Ptr<_1acca4ba2_TypeKind>* _56941_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1acb24d85_FnIns> _57017_pf = _1acca85ac_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_57017_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1acb24d85_FnIns> _57417_f = _1acca85ac_Fn((*(_56941_k)).ptr());;
	{
		
		if ((_57017_pf.get()._field_Params.len() != _57417_f.get()._field_Params.len())) {
			_case_begin_1a62d1713:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1acb22646_IsVoid(_57017_pf.get()._field_Decl.ptr()) != _1acb22646_IsVoid(_57417_f.get()._field_Decl.ptr()))) {
			_case_begin_1a62d1779:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1a62d16ad:;
	};
	__jule_func_result=true;
	jule::Ptr<_1acca4ba2_TypeKind>* _58317_old = (*(_self_))._field_k;;
	{
		auto expr = &(_57417_f.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a62d2c64:;
		if (it != expr_end) {
			jule::I64 _58414_i = it - expr->begin();
			jule::Ptr<_1acb23eb6_ParamIns> _58421_fp = *it;
			{
				(*(_self_))._field_k=(&(_57017_pf.get()._field_Params[_58414_i].get()._field_Kind));
				__jule_func_result=(_1abd4eb3d_annotateKind(_self_, &(_58421_fp.get()._field_Kind)) && __jule_func_result);
			}
			_iter_next_1a62d2c64:;
			++it;
			_58414_i++;
			goto _iter_begin_1a62d2c64;
		}
		_iter_end_1a62d2c64:;
	};
	if ((!(_1acb22646_IsVoid(_57017_pf.get()._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&(_57017_pf.get()._field_Result));
		__jule_func_result=(_1abd4eb3d_annotateKind(_self_, &(_57417_f.get()._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_58317_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1abd4de06_annotatePtr(_1abd4acc1_dynamicTypeAnnotation* _self_, jule::Ptr<_1acca4ba2_TypeKind>* _59842_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1accb41bc_Ptr> _59917_pptr = _1acca7897_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_59917_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1accb41bc_Ptr> _60317_ptr = _1acca7897_Ptr((*(_59842_k)).ptr());;
	(*(_self_))._field_k=(&(_59917_pptr.get()._field_Elem));
	__jule_func_result = _1abd4eb3d_annotateKind(_self_, &(_60317_ptr.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1abd4e214_annotateSptr(_1abd4acc1_dynamicTypeAnnotation* _self_, jule::Ptr<_1acca4ba2_TypeKind>* _60843_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1accb0b58_Sptr> _60917_ssptr = _1acca7633_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_60917_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1accb0b58_Sptr> _61317_sptr = _1acca7633_Sptr((*(_60843_k)).ptr());;
	(*(_self_))._field_k=(&(_60917_ssptr.get()._field_Elem));
	__jule_func_result = _1abd4eb3d_annotateKind(_self_, &(_61317_sptr.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1abd4e522_annotateStruct(_1abd4acc1_dynamicTypeAnnotation* _self_, jule::Ptr<_1acca4ba2_TypeKind>* _61845_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1acb09d37_StructIns> _61917_s = _1acca8821_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_61917_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1acb09d37_StructIns> _62317_s2 = _1acca8821_Struct((*(_61845_k)).ptr());;
	if ((_61917_s.get()._field_Generics.len() != _62317_s2.get()._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &(_61917_s.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a62da8e8:;
		if (it != expr_end) {
			jule::I64 _62714_i = it - expr->begin();
			jule::Ptr<_1acca3420_InsGeneric> _62721_g = *it;
			{
				jule::Ptr<_1acca3420_InsGeneric> _62821_g2 = _62317_s2.get()._field_Generics[_62714_i];;
				if (_1acca5367_Equal(_62721_g.get()._field_Kind, _62821_g2.get()._field_Kind)) {
					goto _iter_next_1a62da8e8;
				};
				(*(_self_))._field_k=(&(_62721_g.get()._field_Kind));
				if ((!(_1abd4eb3d_annotateKind(_self_, &(_62821_g2.get()._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a62da8e8:;
			++it;
			_62714_i++;
			goto _iter_begin_1a62da8e8;
		}
		_iter_end_1a62da8e8:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1abd4e830_annotateAny(_1abd4acc1_dynamicTypeAnnotation* _self_, jule::Ptr<_1acca4ba2_TypeKind>* _64042_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _64113_kind = _1acca5059_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*(_self_))._field_f.get()._field_Decl.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a62dd1ae:;
		if (it != expr_end) {
			jule::I64 _64213_i = it - expr->begin();
			jule::Ptr<_1acae4272_GenericDecl> _64216_g = *it;
			{
				if ((_64113_kind != _64216_g.get()._field_Ident)) {
					goto _iter_next_1a62dd1ae;
				};
				jule::Ptr<_1acca3420_InsGeneric> _64617_t = (*(_self_))._field_f.get()._field_Generics[_64213_i];;
				{
					
					if ((_64617_t == nullptr) || (_64617_t.get()._field_Kind == nullptr)) {
						_case_begin_1a62debb6:;
						{
							_1abd4c6eb_pushGeneric(_self_, _64042_k, _64213_i);
						}
					}
					else if ((!(_1acca5367_Equal(_64617_t.get()._field_Kind, (*(_64042_k)))))) {
						_case_begin_1a62dec2c:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1a62de039:;
				};
				(*((*(_self_))._field_k)).get()._field_Kind=(*(_64042_k)).get()._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1a62dd1ae:;
			++it;
			_64213_i++;
			goto _iter_begin_1a62dd1ae;
		}
		_iter_end_1a62dd1ae:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1abd4eb3d_annotateKind(_1abd4acc1_dynamicTypeAnnotation* _self_, jule::Ptr<_1acca4ba2_TypeKind>* _66143_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1abd4e830_annotateAny(_self_, _66143_k)) {
			_case_begin_1a62e2449:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1acca73be_Prim((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1a62e1e0a:;
			{
				__jule_func_result = _1abd4ca09_annotatePrim(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_1acca80d4_Arr((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1a62e1e82:;
			{
				__jule_func_result = _1abd4cd17_annotateArr(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_1acca8348_Slc((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1a62e21b3:;
			{
				__jule_func_result = _1abd4d125_annotateSlc(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_1acca8ce9_Map((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1a62e2229:;
			{
				__jule_func_result = _1abd4d7da_annotateMap(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_1acca85ac_Fn((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1a62e22a1:;
			{
				__jule_func_result = _1abd4dae8_annotateFn(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_1acca7897_Ptr((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1a62e2328:;
			{
				__jule_func_result = _1abd4de06_annotatePtr(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_1acca7633_Sptr((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1a62e24b0:;
			{
				__jule_func_result = _1abd4e214_annotateSptr(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_1acca8821_Struct((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1a62e2526:;
			{
				__jule_func_result = _1abd4e522_annotateStruct(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a62e1cc8:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1a62e1767:;
	};
}



inline jule::Bool _1abd4eda2_annotate(_1abd4acc1_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*(_self_))._field_p.get()._field_Kind));
	__jule_func_result = _1abd4eb3d_annotateKind(_self_, &((*(_self_))._field_a.get()._field_Kind));
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1abd4acc1_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1abd50c1b_pushErrToken(_1abd506bb_fnCallArgChecker* _self_, jule::Ptr<_2097d15d8_Token> _70631_token, jule::Str _70646_fmt, jule::Slice<jule::Any> _70659_args) {
	_1abce7003_pushErr((*(_self_))._field_e.get()._field_s.ptr(), _70631_token, _70646_fmt, _70659_args);
}



inline void _1abd5103a_pushErr(_1abd506bb_fnCallArgChecker* _self_, jule::Str _71026_fmt, jule::Slice<jule::Any> _71039_args) {
	_1abd50c1b_pushErrToken(_self_, (*(_self_))._field_errorToken, _71026_fmt, _71039_args);
}



inline jule::Slice<jule::Ptr<_1acb23eb6_ParamIns>> _1abd5129e_getParams(_1abd506bb_fnCallArgChecker* _self_) {
	if (((((*(_self_))._field_f.get()._field_Params.len() > 0LL) && ((*(_self_))._field_f.get()._field_Params[0LL].get()._field_Decl != nullptr)) && _1acb20e80_IsSelf((*(_self_))._field_f.get()._field_Params[0LL].get()._field_Decl.ptr()))) {
		return (*(_self_))._field_f.get()._field_Params.slice(1LL);;
	};
	return (*(_self_))._field_f.get()._field_Params;;
}



inline jule::Bool _1abd51579_checkCounts(_1abd506bb_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1acb23eb6_ParamIns>>* _72331_params) {
	jule::Bool __jule_func_result = false;
	jule::I64 _72417_n = (*(_72331_params)).len();;
	if (((_72417_n > 0LL) && _1acb20e80_IsSelf((*(_72331_params))[0LL].get()._field_Decl.ptr()))) {
		(_72417_n)--;
	};
	jule::I64 _72917_diff = (_72417_n - (*(_self_))._field_args.len());;
	jule::Str _73017_log = jule::Str();;
	{
		
		if ((_72917_diff == 0LL)) {
			_case_begin_1a62ebab3:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_72417_n > 0LL) && (*(_72331_params))[(_72417_n - 1LL)].get()._field_Decl.get()._field_Variadic)) {
			_case_begin_1a62ec7b7:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_72917_diff < 0LL) || (_72917_diff > (*(_72331_params)).len()))) {
			_case_begin_1a62ec3dd:;
			{
				_73017_log=jule::Str("argument overflow: passed more argument than expected to call @", 63);
			}
		}
		else {
			_case_begin_1a62ec377:;
			{
				_73017_log=jule::Str("missing arguments to call @", 27);
			}
		}
		_match_end_1a62ec322:;
	};
	jule::Str _74117_err = (*(_self_))._field_f.get()._field_Decl.get()._field_Ident;;
	(_74117_err).append("\n       wanted (", 16);
	{
		auto expr = _72331_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a62ee6ba:;
		if (it != expr_end) {
			jule::I64 _74313_i = it - expr->begin();
			jule::Ptr<_1acb23eb6_ParamIns> *_74316_p = it;
			{
				_74117_err+=_1acca5059_Str((*(_74316_p)).get()._field_Kind.ptr());
				if ((((*(_72331_params)).len() - _74313_i) > 1LL)) {
					(_74117_err).append(", ", 2);
				};
			}
			_iter_next_1a62ee6ba:;
			++it;
			_74313_i++;
			goto _iter_begin_1a62ee6ba;
		}
		_iter_end_1a62ee6ba:;
	};
	(_74117_err).append(")", 1);
	_1abd5103a_pushErr(_self_, _73017_log, jule::Slice<jule::Any>::make({jule::Any(_74117_err, &__jule_any_type5)}));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1abd519ca_checkArg(_1abd506bb_fnCallArgChecker* _self_, jule::Ptr<_1acb23eb6_ParamIns>* _75432_p, jule::Ptr<_1abd5dc4b_Data>* _75451_arg, jule::Ptr<_2097d15d8_Token>* _75468_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _1acb26e97_parameterUsesGenerics(_75432_p, &((*(_self_))._field_f.get()._field_Decl.get()._field_Generics)))) {
		__jule_func_result=((!((*(_75432_p)).get()._field_Decl.get()._field_Variadic)) && _1abd583c7_isGoodValueToInfer(_75451_arg));
		if (__jule_func_result) {
			_1abd4acc1_dynamicTypeAnnotation _75925_dta = _1abd4acc1_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_75432_p)), ._field_a=(*(_75451_arg)), ._field_errorToken=(*(_75468_errorToken)), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_1abd4eda2_annotate(&_75925_dta);
		};
		if ((!(__jule_func_result))) {
			_1abd50c1b_pushErrToken(_self_, (*(_75468_errorToken)), jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1abd021a6_checkValidityForInitExpr((*(_self_))._field_e.get()._field_s, (*(_75432_p)).get()._field_Decl.get()._field_Mutable, (*(_75432_p)).get()._field_Decl.get()._field_Reference, &((*(_75432_p)).get()._field_Kind), _75451_arg, _75468_errorToken)) {
		_1abcee291_checkAssignType((*(_self_))._field_e.get()._field_s, (*(_75432_p)).get()._field_Decl.get()._field_Reference, &((*(_75432_p)).get()._field_Kind), _75451_arg, (*(_75468_errorToken)));
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1abd51d82_push(_1abd506bb_fnCallArgChecker* _self_, jule::Ptr<_1acb23eb6_ParamIns>* _78328_p, jule::Ptr<_1acadb456_Expr> _78346_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1acca4ba2_TypeKind> _78417_old = (*(_self_))._field_e.get()._field_prefix;;
	jule::Bool _78513_oldImmut = (*(_self_))._field_e.get()._field_immutable;;
	(*(_self_))._field_e.get()._field_immutable=(!((*(_78328_p)).get()._field_Decl.get()._field_Mutable));
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*(_78328_p)).get()._field_Decl.get()._field_Variadic)))) {
		(*(_self_))._field_e.get()._field_prefix=(*(_78328_p)).get()._field_Kind;
	} else {
		(*(_self_))._field_e.get()._field_prefix=nullptr;
	};
	jule::Ptr<_1abd5dc4b_Data> _79317_d = _1acc95984_evalExpr((*(_self_))._field_e, _78346_arg);;
	(*(_self_))._field_e.get()._field_prefix=_78417_old;
	(*(_self_))._field_e.get()._field_immutable=_78513_oldImmut;
	if ((_79317_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1abd519ca_checkArg(_self_, _78328_p, &(_79317_d), &(_78346_arg.get()._field_Token));
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(_79317_d.get()._field_Model); };
	return __jule_func_result;;
}



inline jule::Bool _1abd52239_pushVariadic(_1abd506bb_fnCallArgChecker* _self_, jule::Ptr<_1acb23eb6_ParamIns>* _80736_p, jule::I64 _80754_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _80917_variadiced = false;;
	jule::Bool _81013_more = ((_80754_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_1acb11426_SliceExprModel> _81117_model = jule::new_ptr<_1acb11426_SliceExprModel>(_1acb11426_SliceExprModel{._field_ElemKind=(*(_80736_p)).get()._field_Kind, });;
	jule::Ptr<_1acca4ba2_TypeKind> _81517_old = (*(_self_))._field_e.get()._field_prefix;;
	jule::Bool _82013_variadic = (*(_80736_p)).get()._field_Kind.get()._field_Variadic;;
	(*(_80736_p)).get()._field_Kind.get()._field_Variadic=false;
	__JULE_DEFER({
		(*(_80736_p)).get()._field_Kind.get()._field_Variadic=_82013_variadic;
	});;
	for (; (_80754_i < (*(_self_))._field_args.len()); (_80754_i)++) {
		{
			jule::Ptr<_1acadb456_Expr> _82721_arg = (*(_self_))._field_args[_80754_i];;
			{
				auto &_match_expr{ _82721_arg.get()._field_Kind };
				
				if (_match_expr.type == &__jule_any_type81) {
					_case_begin_1a630c211:;
					{
						(*(_self_))._field_e.get()._field_prefix=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(jule::new_ptr<_1accb15b5_Slc>(_1accb15b5_Slc{._field_Elem=(*(_80736_p)).get()._field_Kind}), 22)});
					}
				}
				else {
					_case_begin_1a630c9e7:;
					{
						(*(_self_))._field_e.get()._field_prefix=(*(_80736_p)).get()._field_Kind;
					}
				}
				_match_end_1a630c992:;
			};
			jule::Ptr<_1abd5dc4b_Data> _84021_d = _1acc95368_eval((*(_self_))._field_e, _82721_arg);;
			if ((_84021_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1a630b71b;
			};
			if (_84021_d.get()._field_Kind.get()._field_Variadic) {
				_80917_variadiced=true;
				(*(_80736_p)).get()._field_Kind.get()._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1abd519ca_checkArg(_self_, _80736_p, &(_84021_d), &(_82721_arg.get()._field_Token)));
				{
					auto &_match_expr{ _84021_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type82) {
						_case_begin_1a6315c86:;
						{
							_81117_model=_84021_d.get()._field_Model.cast_ptr<_1acb11426_SliceExprModel>(&__jule_any_type82);
							_81117_model.get()._field_ElemKind=(*(_80736_p)).get()._field_Kind;
						}
					}
					else {
						_case_begin_1a63155e3:;
						{
							_81117_model=nullptr;
							{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(_84021_d.get()._field_Model); };
						}
					}
					_match_end_1a631558d:;
				};
				(_80754_i)++;
				goto _iter_end_1a630b71b;
			};
			__jule_func_result=(__jule_func_result && _1abd519ca_checkArg(_self_, _80736_p, &(_84021_d), &(_82721_arg.get()._field_Token)));
			{ jule::Slice<jule::Any> &__jule_push_dest = _81117_model.get()._field_Elems; __jule_push_dest.push(_84021_d.get()._field_Model); };
		}
	_iter_next_1a630b71b:;
	}
	_iter_end_1a630b71b:;;
	(*(_self_))._field_e.get()._field_prefix=_81517_old;
	if ((_80917_variadiced && _81013_more)) {
		_1abd50c1b_pushErrToken(_self_, (*(_self_))._field_args[_80754_i].get()._field_Token, jule::Str("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
	};
	if ((_81117_model != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(jule::Any(_81117_model, &__jule_any_type82)); };
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1abd52547_checkArgs(_1abd506bb_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1acb23eb6_ParamIns>>* _88333_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _88413_arg = (*(_self_))._field_e.get()._field_arg;;
	(*(_self_))._field_e.get()._field_arg=true;
	__jule_func_result=true;
	jule::I64 _88817_i = 0LL;;
	if ((((*(_88333_params)).len() > 0LL) && _1acb20e80_IsSelf((*(_88333_params))[0LL].get()._field_Decl.ptr()))) {
		(_88817_i)++;
	};
	_julec_label_iter:;
	while ((_88817_i < (*(_88333_params)).len())) {
		{
			jule::Ptr<_1acb23eb6_ParamIns> _89521_p = (*(_88333_params))[_88817_i];;
			{
				
				if (_89521_p.get()._field_Decl.get()._field_Variadic) {
					_case_begin_1a631b330:;
					{
						__jule_func_result=(_1abd52239_pushVariadic(_self_, &(_89521_p), _88817_i) && __jule_func_result);
						goto _iter_end_1a6318519;
					}
				}
				else if (((*(_self_))._field_args.len() <= _88817_i)) {
					_case_begin_1a631ab04:;
					{
						__jule_func_result=false;
						goto _iter_end_1a6318519;
					}
				}
				else {
					_case_begin_1a631ae89:;
					{
						__jule_func_result=(_1abd51d82_push(_self_, &(_89521_p), (*(_self_))._field_args[_88817_i]) && __jule_func_result);
					}
				}
				_match_end_1a631ae34:;
			};
			(_88817_i)++;
		}
	_iter_next_1a6318519:;
	}
	_iter_end_1a6318519:;;
	(*(_self_))._field_e.get()._field_arg=_88413_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1abd527cd_checkDynamicTypeAnnotation(_1abd506bb_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_self_))._field_f.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a631d024:;
		if (it != expr_end) {
			jule::Ptr<_1acca3420_InsGeneric> _91516_g = *it;
			{
				if ((_91516_g == nullptr)) {
					_1abd5103a_pushErr(_self_, jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a631d024:;
			++it;
			goto _iter_begin_1a631d024;
		}
		_iter_end_1a631d024:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1abd52a53_check(_1abd506bb_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1acb23eb6_ParamIns>> _92517_params = _1abd5129e_getParams(_self_);;
	__jule_func_result=_1abd51579_checkCounts(_self_, &(_92517_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1abd52547_checkArgs(_self_, &(_92517_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_1abd527cd_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1abd506bb_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1abd5359d_pushErr(_1abd53092_structLitChecker* _self_, jule::Ptr<_2097d15d8_Token> _94626_token, jule::Str _94641_fmt, jule::Slice<jule::Any> _94654_args) {
	_1acc79490_pushErr((*(_self_))._field_e.ptr(), _94626_token, _94641_fmt, _94654_args);
}



inline void _1abd538bc_pushSuggestion(_1abd53092_structLitChecker* _self_, jule::Str _95133_fmt, jule::Slice<jule::Any> _95146_args) {
	_1acc797ae_pushSuggestion((*(_self_))._field_e.ptr(), _95133_fmt, _95146_args);
}



inline void _1abd53c85_pushMatch(_1abd53092_structLitChecker* _self_, jule::Ptr<_1acb09342_FieldIns>* _95533_f, jule::Ptr<_1abd5dc4b_Data>* _95552_d, jule::Ptr<_2097d15d8_Token>* _95567_errorToken) {
	;
	if (_1abd021a6_checkValidityForInitExpr((*(_self_))._field_e.get()._field_s, (!((*(_self_))._field_e.get()._field_immutable)), false, &((*(_95533_f)).get()._field_Kind), _95552_d, _95567_errorToken)) {
		_1abcee291_checkAssignType((*(_self_))._field_e.get()._field_s, false, &((*(_95533_f)).get()._field_Kind), _95552_d, (*(_95567_errorToken)));
	};
	{ jule::Slice<jule::Ptr<_1acb0e9a7_StructArgExprModel>> &__jule_push_dest = (*(_self_))._field_args; __jule_push_dest.push(jule::new_ptr<_1acb0e9a7_StructArgExprModel>(_1acb0e9a7_StructArgExprModel{._field_Field=(*(_95533_f)), ._field_Expr=(*(_95552_d)).get()._field_Model})); };
}



inline void _1abd540a4_checkPair(_1abd53092_structLitChecker* _self_, jule::Ptr<_1acae0ceb_FieldExprPair>* _96833_pair, jule::Slice<jule::Ptr<_1acadb456_Expr>>* _96860_exprs) {
	jule::Ptr<_1acb09342_FieldIns> _97017_f = _1acb0b0e1_FindField((*(_self_))._field_s.ptr(), (*(_96833_pair)).get()._field_Field.get()._field_Kind);;
	if ((_97017_f == nullptr)) {
		_1abd5359d_pushErr(_self_, (*(_96833_pair)).get()._field_Field, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_96833_pair)).get()._field_Field.get()._field_Kind, &__jule_any_type5)}));
		return;;
	};
	if ((!(_1abce76c9_isAccessibleDefine((*(_self_))._field_e.get()._field_s.ptr(), _97017_f.get()._field_Decl.get()._field_Public, _97017_f.get()._field_Decl.get()._field_Token)))) {
		_1abd5359d_pushErr(_self_, (*(_96833_pair)).get()._field_Field, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_96833_pair)).get()._field_Field.get()._field_Kind, &__jule_any_type5)}));
		_1abd538bc_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	_julec_label_dup_lookup:;
	{
		auto expr = _96860_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a632725e:;
		if (it != expr_end) {
			jule::Ptr<_1acadb456_Expr> _98221_expr = *it;
			{
				{
					auto &_match_expr{ _98221_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type83) {
						_case_begin_1a6327ade:;
						{
							jule::Ptr<_1acae0ceb_FieldExprPair> _98525_dpair = _98221_expr.get()._field_Kind.cast_ptr<_1acae0ceb_FieldExprPair>(&__jule_any_type83);;
							{
								
								if (((*(_96833_pair)) == _98525_dpair)) {
									_case_begin_1a63289be:;
									{
										goto _iter_end_1a632725e;
									}
								}
								else if (((*(_96833_pair)).get()._field_Field.get()._field_Kind == _98525_dpair.get()._field_Field.get()._field_Kind)) {
									_case_begin_1a6328a46:;
									{
										_1abd5359d_pushErr(_self_, (*(_96833_pair)).get()._field_Field, jule::Str("@ already has expression", 24), jule::Slice<jule::Any>::make({jule::Any((*(_96833_pair)).get()._field_Field.get()._field_Kind, &__jule_any_type5)}));
										goto _iter_end_1a632725e;
									}
								}
								_match_end_1a6328914:;
							};
						}
					}
					_match_end_1a6327935:;
				};
			}
			_iter_next_1a632725e:;
			++it;
			goto _iter_begin_1a632725e;
		}
		_iter_end_1a632725e:;
	};
	jule::Ptr<_1acca4ba2_TypeKind> _99617_prefix = (*(_self_))._field_e.get()._field_prefix;;
	__JULE_DEFER({
		(*(_self_))._field_e.get()._field_prefix=_99617_prefix;
	});;
	(*(_self_))._field_e.get()._field_prefix=_97017_f.get()._field_Kind;
	jule::Ptr<_1abd5dc4b_Data> _100017_d = _1acc95984_evalExpr((*(_self_))._field_e, (*(_96833_pair)).get()._field_Expr);;
	if ((_100017_d == nullptr)) {
		return;;
	};
	_1abd53c85_pushMatch(_self_, &(_97017_f), &(_100017_d), &((*(_96833_pair)).get()._field_Field));
}



inline jule::Bool _1abd543b2_readyExprs(_1abd53092_structLitChecker* _self_, jule::Slice<jule::Ptr<_1acadb456_Expr>>* _100734_exprs) {
	jule::Bool _100817_ok = true;;
	{
		auto expr = _100734_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a632bd46:;
		if (it != expr_end) {
			jule::I64 _100914_i = it - expr->begin();
			jule::Ptr<_1acadb456_Expr> _100921_expr = *it;
			{
				{
					auto &_match_expr{ _100921_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type84) {
						_case_begin_1a632c9b2:;
						{
							jule::Ptr<_1acae2429_KeyValPair> _101225_pair = _100921_expr.get()._field_Kind.cast_ptr<_1acae2429_KeyValPair>(&__jule_any_type84);;
							{
								auto &_match_expr{ _101225_pair.get()._field_Key.get()._field_Kind };
								
								if (_match_expr.type == &__jule_any_type85) {
									_case_begin_1a632d2dc:;
									{
										goto _match_end_1a632d760;
									}
								}
								else {
									_case_begin_1a632d9d5:;
									{
										_1abd5359d_pushErr(_self_, _101225_pair.get()._field_Colon, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
										_100817_ok=false;
										goto _iter_next_1a632bd46;
									}
								}
								_match_end_1a632d760:;
							};
							(*(_100734_exprs))[_100914_i].get()._field_Kind=jule::Any(jule::new_ptr<_1acae0ceb_FieldExprPair>(_1acae0ceb_FieldExprPair{._field_Field=_101225_pair.get()._field_Key.get()._field_Token, ._field_Expr=_101225_pair.get()._field_Val}), &__jule_any_type83);
						}
					}
					_match_end_1a632c808:;
				};
			}
			_iter_next_1a632bd46:;
			++it;
			_100914_i++;
			goto _iter_begin_1a632bd46;
		}
		_iter_end_1a632bd46:;
	};
	return _100817_ok;;
}



inline void _1abd54637_check(_1abd53092_structLitChecker* _self_, jule::Slice<jule::Ptr<_1acadb456_Expr>>* _103129_exprs) {
	if (((*(_103129_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_1abd543b2_readyExprs(_self_, _103129_exprs)))) {
		return;;
	};
	jule::Bool _103817_paired = false;;
	{
		auto expr = _103129_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a632c74d:;
		if (it != expr_end) {
			jule::I64 _103914_i = it - expr->begin();
			jule::Ptr<_1acadb456_Expr> _103921_expr = *it;
			{
				{
					auto &_match_expr{ _103921_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type83) {
						_case_begin_1a63358bb:;
						{
							jule::Ptr<_1acae0ceb_FieldExprPair> _104225_pair = _103921_expr.get()._field_Kind.cast_ptr<_1acae0ceb_FieldExprPair>(&__jule_any_type83);;
							if (((_103914_i > 0LL) && (!(_103817_paired)))) {
								_1abd5359d_pushErr(_self_, _104225_pair.get()._field_Field, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							_103817_paired=true;
							_1abd540a4_checkPair(_self_, &(_104225_pair), _103129_exprs);
						}
					}
					else {
						_case_begin_1a6331697:;
						{
							if (_103817_paired) {
								_1abd5359d_pushErr(_self_, _103921_expr.get()._field_Token, jule::Str("argument must target to field", 29), jule::Slice<jule::Any>());
							};
							if ((_103914_i >= (*(_self_))._field_s.get()._field_Fields.len())) {
								_1abd5359d_pushErr(_self_, _103921_expr.get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>());
								goto _iter_next_1a632c74d;
							};
							jule::Ptr<_1acb09342_FieldIns> _105725_field = (*(_self_))._field_s.get()._field_Fields[_103914_i];;
							if ((!(_1abce76c9_isAccessibleDefine((*(_self_))._field_e.get()._field_s.ptr(), _105725_field.get()._field_Decl.get()._field_Public, _105725_field.get()._field_Decl.get()._field_Token)))) {
								_1abd5359d_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("structure cannot instantiating because it has non-public fields", 63), jule::Slice<jule::Any>());
								_1abd538bc_pushSuggestion(_self_, jule::Str("use field:expression pairs to instantiate", 41), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1acca4ba2_TypeKind> _106525_prefix = (*(_self_))._field_e.get()._field_prefix;;
							__JULE_DEFER({
								(*(_self_))._field_e.get()._field_prefix=_106525_prefix;
							});;
							(*(_self_))._field_e.get()._field_prefix=_105725_field.get()._field_Kind;
							jule::Ptr<_1abd5dc4b_Data> _106925_d = _1acc95984_evalExpr((*(_self_))._field_e, _103921_expr);;
							if ((_106925_d == nullptr)) {
								goto _iter_next_1a632c74d;
							};
							_1abd53c85_pushMatch(_self_, &(_105725_field), &(_106925_d), &(_103921_expr.get()._field_Token));
						}
					}
					_match_end_1a6331521:;
				};
			}
			_iter_next_1a632c74d:;
			++it;
			_103914_i++;
			goto _iter_begin_1a632c74d;
		}
		_iter_end_1a632c74d:;
	};
	if ((!(_103817_paired))) {
		jule::I64 _108017_n = (*(_self_))._field_s.get()._field_Fields.len();;
		jule::I64 _108121_diff = (_108017_n - (*(_103129_exprs)).len());;
		{
			
			if ((_108121_diff <= 0LL)) {
				_case_begin_1a6335998:;
				{
					return;;
				}
			}
			_match_end_1a63381a4:;
		};
		jule::Str _108721_idents = jule::Str();;
		for (; (_108121_diff > 0LL); (_108121_diff)--) {
			{
				_108721_idents+=(jule::Str(", ", 2) + (*(_self_))._field_s.get()._field_Fields[(_108017_n - _108121_diff)].get()._field_Decl.get()._field_Ident);
			}
		_iter_next_1a6338a67:;
		}
		_iter_end_1a6338a67:;;
		(_108721_idents).mut_slice(2LL);;
		_1abd5359d_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(_108721_idents, &__jule_any_type5)}));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1abd53092_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1abd1497c_Var> _1abd5513d_buildVar(_1abd54b76_rangeChecker* _self_, jule::Ptr<_1acae98d7_VarDecl>* _110628_decl) {
	jule::Ptr<_1abd1497c_Var> _110717_v = _1acb2ccc2_buildVar((*(_110628_decl)));;
	return _110717_v;;
}



inline void _1abd55319_setSizeKey(_1abd54b76_rangeChecker* _self_) {
	if ((((*(_self_))._field_rang.get()._field_KeyA == nullptr) || _2097d3d7c_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	(*(_self_))._field_Kind.get()._field_KeyA=_1abd5513d_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyA));
	(*(_self_))._field_Kind.get()._field_KeyA.get()._field_Kind=_1acd6c033_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	{
		auto &_match_expr{ (*(_self_))._field_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a633c065:;
			{
				(*(_self_))._field_Kind.get()._field_KeyA.get()._field_IterRelation=jule::new_ptr<_1abd13937_IterRelation>(_1abd13937_IterRelation{._field_Range=(*(_self_))._field_d.get()._field_Model.cast_ptr<_1abd1497c_Var>(&__jule_any_type8)});
			}
		}
		_match_end_1a633c010:;
	};
}



inline void _1abd556d2_checkRangeExprValidity(_1abd54b76_rangeChecker* _self_, jule::Ptr<_1abd5dc4b_Data>* _113346_d, jule::Ptr<_1abd1497c_Var>* _113357_key, jule::Ptr<_1acca4ba2_TypeKind>* _113373_k) {
	jule::Bool _113417__mut = (*(_113357_key)).get()._field_Mutable;;
	if ((_113417__mut && (!(_1acca6445_Mutable((*(_113373_k)).ptr()))))) {
		_113417__mut=false;
	};
	_1abd021a6_checkValidityForInitExpr((*(_self_))._field_sc.get()._field_s, _113417__mut, (*(_113357_key)).get()._field_Reference, &((*(_113357_key)).get()._field_Kind.get()._field_Kind), _113346_d, &((*(_self_))._field_rang.get()._field_InToken));
}



inline void _1abd558ad_checkSlice(_1abd54b76_rangeChecker* _self_) {
	_1abd55319_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _2097d3d7c_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1accb15b5_Slc> _115217_slc = _1acca8348_Slc((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyB=_1abd5513d_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1accaba55_TypeSymbol>(_1accaba55_TypeSymbol{._field_Kind=_115217_slc.get()._field_Elem});
	_1abd556d2_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(_self_))._field_Kind.get()._field_KeyB), &(_115217_slc.get()._field_Elem));
}



inline void _1abd55a89_checkArray(_1abd54b76_rangeChecker* _self_) {
	_1abd55319_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _2097d3d7c_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1accb3760_Arr> _116517_arr = _1acca80d4_Arr((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyB=_1abd5513d_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1accaba55_TypeSymbol>(_1accaba55_TypeSymbol{._field_Kind=_116517_arr.get()._field_Elem});
	_1abd556d2_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(_self_))._field_Kind.get()._field_KeyB), &(_116517_arr.get()._field_Elem));
}



inline void _1abd55c65_checkMapKeyA(_1abd54b76_rangeChecker* _self_) {
	if ((((*(_self_))._field_rang.get()._field_KeyA == nullptr) || _2097d3d7c_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1accb2b6b_Map> _117717_m = _1acca8ce9_Map((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyA=_1abd5513d_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyA));
	(*(_self_))._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_1accaba55_TypeSymbol>(_1accaba55_TypeSymbol{._field_Kind=_117717_m.get()._field_Key});
	jule::Ptr<_1abd5dc4b_Data> _118117_d = jule::new_ptr<_1abd5dc4b_Data>((*((*(_self_))._field_d)));;
	_118117_d.get()._field_Kind=_117717_m.get()._field_Key;
	_1abd556d2_checkRangeExprValidity(_self_, &(_118117_d), &((*(_self_))._field_Kind.get()._field_KeyA), &(_117717_m.get()._field_Key));
}



inline void _1abd55e41_checkMapKeyB(_1abd54b76_rangeChecker* _self_) {
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _2097d3d7c_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1accb2b6b_Map> _119217_m = _1acca8ce9_Map((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyB=_1abd5513d_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1accaba55_TypeSymbol>(_1accaba55_TypeSymbol{._field_Kind=_119217_m.get()._field_Val});
	jule::Ptr<_1abd5dc4b_Data> _119617_d = jule::new_ptr<_1abd5dc4b_Data>((*((*(_self_))._field_d)));;
	_119617_d.get()._field_Kind=_119217_m.get()._field_Val;
	_1abd556d2_checkRangeExprValidity(_self_, &(_119617_d), &((*(_self_))._field_Kind.get()._field_KeyB), &(_119217_m.get()._field_Val));
}



inline void _1abd5611c_checkMap(_1abd54b76_rangeChecker* _self_) {
	_1abd55c65_checkMapKeyA(_self_);
	_1abd55e41_checkMapKeyB(_self_);
}



inline void _1abd562e8_checkStr(_1abd54b76_rangeChecker* _self_) {
	_1abd55319_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _2097d3d7c_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	(*(_self_))._field_Kind.get()._field_KeyB=_1abd5513d_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=_1acd6c033_findBuiltinTypeAlias(jule::Str("u8", 2)).get()._field_Kind;
}



inline void _1abd564c4_checkComptime(_1abd54b76_rangeChecker* _self_) {
	_1abd55319_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyA != nullptr) && (*(_self_))._field_rang.get()._field_KeyA.get()._field_Mutable)) {
		_1abce7003_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_rang.get()._field_KeyA.get()._field_Token, jule::Str("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_rang.get()._field_KeyA.get()._field_Ident, &__jule_any_type5)}));
	};
	if ((((*(_self_))._field_rang.get()._field_KeyB != nullptr) && (*(_self_))._field_rang.get()._field_KeyB.get()._field_Mutable)) {
		_1abce7003_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_rang.get()._field_KeyB.get()._field_Token, jule::Str("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident, &__jule_any_type5)}));
	};
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _2097d3d7c_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	(*(_self_))._field_Kind.get()._field_KeyB=_1abd5513d_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
}



inline jule::Bool _1abd56738_checkComptimeRange(_1abd54b76_rangeChecker* _self_) {
	jule::Ptr<_1acb3a3d9_comptimeRange> _123117_range = _1accaa4b0_comptimeRange((*(_self_))._field_d.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ _123117_range.get()._field_kind };
		
		if (_match_expr.type_is(true, 0) || _match_expr.type_is(true, 2) || _match_expr.type_is(true, 3) || _match_expr.type_is(true, 4) || _match_expr.type_is(true, 1) || _match_expr.type_is(true, 5)) {
			_case_begin_1a6353ce6:;
			{
				_1abd564c4_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_1a6353048:;
			{
				_1abce7003_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_rang.get()._field_InToken, jule::Str("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1a6352ee3:;
	};
}



inline jule::Bool _1abd5699c_check(_1abd54b76_rangeChecker* _self_) {
	{
		
		if ((*(_self_))._field_d.get()._field_Kind.get()._field_Variadic) {
			_case_begin_1a6354c2b:;
		}
		else if ((_1acca8348_Slc((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6354c92:;
			{
				_1abd558ad_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_1acca80d4_Arr((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6354d08:;
			{
				_1abd55a89_checkArray(_self_);
				return true;;
			}
		}
		else if ((_1acca8ce9_Map((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6354d6e:;
			{
				_1abd5611c_checkMap(_self_);
				return true;;
			}
		}
		else if ((_1accaa4b0_comptimeRange((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a63560c3:;
			{
				return _1abd56738_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_1a63545aa:;
			{
				jule::Ptr<_1accac407_Prim> _126317_prim = _1acca73be_Prim((*(_self_))._field_d.get()._field_Kind.ptr());;
				if (((_126317_prim != nullptr) && _1accb0608_IsStr(_126317_prim.ptr()))) {
					_1abd562e8_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_1a6354ac7:;
	};
	_1abce7003_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_rang.get()._field_InToken, jule::Str("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1abd54b76_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1abd57580_prepareTypes(_1abd57173_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_1acb25ea7_Types((*(_self_))._field_f.ptr());
	};
}



inline void _1abd57805_prepareExprs(_1abd57173_retTypeChecker* _self_, jule::Ptr<_1acadb456_Expr>* _129136_e) {
	if (((*(_129136_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*(_129136_e)).get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1a635ab33:;
			{
				(*(_self_))._field_exprs=(*(_129136_e)).get()._field_Kind.cast_ptr<_1acadc0d3_TupleExpr>(&__jule_any_type86).get()._field_Expr;
			}
		}
		else {
			_case_begin_1a635a759:;
			{
				{ jule::Slice<jule::Ptr<_1acadb456_Expr>> &__jule_push_dest = (*(_self_))._field_exprs; __jule_push_dest.push((*(_129136_e))); };
			}
		}
		_match_end_1a635a704:;
	};
}



inline void _1abd579d1_checkExprs(_1abd57173_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1abd5dc4b_Data>> _130717_datas = jule::Slice<jule::Ptr<_1abd5dc4b_Data>>::alloc(0LL, (*(_self_))._field_exprs.len());;
	jule::Ptr<_1acc78e73_Eval> _130817_eval = _1abcedc96_eval((*(_self_))._field_sc.get()._field_s, jule::Trait<_1accc2ecd_Lookup>((*(_self_))._field_sc, 0));;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a635b4c4:;
		if (it != expr_end) {
			jule::I64 _130914_i = it - expr->begin();
			jule::Ptr<_1acadb456_Expr> _130921_expr = *it;
			{
				if ((_130914_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_1a635b4c4;
				};
				jule::Ptr<_1acca4ba2_TypeKind> _131421_t = (*(_self_))._field_types[_130914_i];;
				_130817_eval.get()._field_prefix=_131421_t;
				jule::Ptr<_1abd5dc4b_Data> _131721_d = _1acc95984_evalExpr(_130817_eval, _130921_expr);;
				if ((_131721_d == nullptr)) {
					goto _iter_next_1a635b4c4;
				};
				{ jule::Slice<jule::Ptr<_1abd5dc4b_Data>> &__jule_push_dest = _130717_datas; __jule_push_dest.push(_131721_d); };
				if (((!(_131721_d.get()._field_Mutable)) && _1acca6445_Mutable(_131721_d.get()._field_Kind.ptr()))) {
					_1abce7003_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("mutable typed return expressions should be mutable", 50), jule::Slice<jule::Any>());
					return;;
				};
				_1abd492db_assignTypeChecker _132921_ac = _1abd492db_assignTypeChecker{._field_s=(*(_self_))._field_sc.get()._field_s, ._field_dest=_131421_t, ._field_d=_131721_d, ._field_errorToken=(*(_self_))._field_errorToken};;
				_1abd4a463_check(&_132921_ac);
			}
			_iter_next_1a635b4c4:;
			++it;
			_130914_i++;
			goto _iter_begin_1a635b4c4;
		}
		_iter_end_1a635b4c4:;
	};
	if ((_130717_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_1acb14c98_TupleExprModel>(_1acb14c98_TupleExprModel{._field_Datas=_130717_datas}), &__jule_any_type87);
	} else if ((_130717_datas.len() == 1LL)) {
		(*(_self_))._field_model=_130717_datas[0LL].get()._field_Model;
	};
}



inline jule::Bool _1abd57cde_check(_1abd57173_retTypeChecker* _self_, jule::Ptr<_1acadb456_Expr>* _134829_e) {
	_1abd57580_prepareTypes(_self_);
	_1abd57805_prepareExprs(_self_, _134829_e);
	jule::I64 _135213_n = (*(_self_))._field_exprs.len();;
	if (((_135213_n == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
		if ((!(_1acb2335b_AnyVar((*(_self_))._field_f.get()._field_Decl.ptr())))) {
			_1abce7003_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("return statements of non-void functions should have return expression", 69), jule::Slice<jule::Any>());
			return false;;
		};
		return true;;
	};
	if ((((_135213_n > 0LL) && ((*(_self_))._field_f != nullptr)) && _1acb22646_IsVoid((*(_self_))._field_f.get()._field_Decl.ptr()))) {
		_1abce7003_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("void functions is cannot returns any value", 42), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_135213_n > (*(_self_))._field_types.len())) {
		_1abce7003_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("overflow return expressions", 27), jule::Slice<jule::Any>());
	} else if ((_135213_n < (*(_self_))._field_types.len())) {
		_1abce7003_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
	};
	_1abd579d1_checkExprs(_self_);
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1abd57173_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1abcdb39e_ImportInfo> _1abd59708_SelectPackage(_1abd59241_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_1abcdb39e_ImportInfo>)> _2732_selector) {
	if ((_2732_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6368091:;
		if (it != expr_end) {
			jule::Ptr<_1abcdb39e_ImportInfo> _3121_pkg = *it;
			{
				if (_2732_selector(_3121_pkg)) {
					return _3121_pkg;;
				};
			}
			_iter_next_1a6368091:;
			++it;
			goto _iter_begin_1a6368091;
		}
		_iter_end_1a6368091:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abd1497c_Var> _1abd59ab0_FindVar(_1abd59241_SymbolTable* _self_, jule::Str _4126_ident, jule::Bool _4138_binded) {
	return _1abd5b6b6_findVar(_self_, _4126_ident, _4138_binded, false);;
}



inline jule::Ptr<_1acca3e59_TypeAlias> _1abd59e67_FindTypeAlias(_1abd59241_SymbolTable* _self_, jule::Str _4732_ident, jule::Bool _4744_binded) {
	return _1abd5bb17_findTypeAlias(_self_, _4732_ident, _4744_binded, false);;
}



inline jule::Ptr<_1acb07021_Struct> _1abd5a31e_FindStruct(_1abd59241_SymbolTable* _self_, jule::Str _5329_ident, jule::Bool _5341_binded) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a636a406:;
		if (it != expr_end) {
			jule::Ptr<_1acb07021_Struct> _5421_s = *it;
			{
				if (((_5421_s.get()._field_Ident == _5329_ident) && (_5421_s.get()._field_Binded == _5341_binded))) {
					return _5421_s;;
				};
			}
			_iter_next_1a636a406:;
			++it;
			goto _iter_begin_1a636a406;
		}
		_iter_end_1a636a406:;
	};
	return nullptr;;
}



inline jule::Ptr<_1acb221d4_Fn> _1abd5a6c6_FindFn(_1abd59241_SymbolTable* _self_, jule::Str _6425_ident, jule::Bool _6437_binded) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a636b79d:;
		if (it != expr_end) {
			jule::Ptr<_1acb221d4_Fn> _6521_f = *it;
			{
				if (((_6521_f.get()._field_Ident == _6425_ident) && (_6521_f.get()._field_Binded == _6437_binded))) {
					return _6521_f;;
				};
			}
			_iter_next_1a636b79d:;
			++it;
			goto _iter_begin_1a636b79d;
		}
		_iter_end_1a636b79d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1acb34405_Trait> _1abd5a9d4_FindTrait(_1abd59241_SymbolTable* _self_, jule::Str _7528_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a636be74:;
		if (it != expr_end) {
			jule::Ptr<_1acb34405_Trait> _7621_t = *it;
			{
				if ((_7621_t.get()._field_Ident == _7528_ident)) {
					return _7621_t;;
				};
			}
			_iter_next_1a636be74:;
			++it;
			goto _iter_begin_1a636be74;
		}
		_iter_end_1a636be74:;
	};
	return nullptr;;
}



inline jule::Ptr<_1acb36b88_Enum> _1abd5ace2_FindEnum(_1abd59241_SymbolTable* _self_, jule::Str _8627_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a636d75b:;
		if (it != expr_end) {
			jule::Ptr<_1acb36b88_Enum> _8721_e = *it;
			{
				if ((_8721_e.get()._field_Ident == _8627_ident)) {
					return _8721_e;;
				};
			}
			_iter_next_1a636d75b:;
			++it;
			goto _iter_begin_1a636d75b;
		}
		_iter_end_1a636d75b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1acb38283_TypeEnum> _1abd5b100_FindTypeEnum(_1abd59241_SymbolTable* _self_, jule::Str _9731_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a636e63b:;
		if (it != expr_end) {
			jule::Ptr<_1acb38283_TypeEnum> _9821_e = *it;
			{
				if ((_9821_e.get()._field_Ident == _9731_ident)) {
					return _9821_e;;
				};
			}
			_iter_next_1a636e63b:;
			++it;
			goto _iter_begin_1a636e63b;
		}
		_iter_end_1a636e63b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abd1497c_Var> _1abd5b6b6_findVar(_1abd59241_SymbolTable* _self_, jule::Str _10826_ident, jule::Bool _10838_binded, jule::Bool _10852_reverse) {
	if (_10852_reverse) {
		jule::I64 _11021_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_11021_i >= 0LL); (_11021_i)--) {
			{
				jule::Ptr<_1abd1497c_Var> _11225_v = (*(_self_))._field_Vars[_11021_i];;
				if (((_11225_v.get()._field_Ident == _10826_ident) && (_11225_v.get()._field_Binded == _10838_binded))) {
					return _11225_v;;
				};
			}
		_iter_next_1a6371561:;
		}
		_iter_end_1a6371561:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a637281a:;
			if (it != expr_end) {
				jule::Ptr<_1abd1497c_Var> _11825_v = *it;
				{
					if (((_11825_v.get()._field_Ident == _10826_ident) && (_11825_v.get()._field_Binded == _10838_binded))) {
						return _11825_v;;
					};
				}
				_iter_next_1a637281a:;
				++it;
				goto _iter_begin_1a637281a;
			}
			_iter_end_1a637281a:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1acca3e59_TypeAlias> _1abd5bb17_findTypeAlias(_1abd59241_SymbolTable* _self_, jule::Str _12732_ident, jule::Bool _12744_binded, jule::Bool _12758_reverse) {
	if (_12758_reverse) {
		jule::I64 _12921_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_12921_i >= 0LL); (_12921_i)--) {
			{
				jule::Ptr<_1acca3e59_TypeAlias> _13125_ta = (*(_self_))._field_TypeAliases[_12921_i];;
				if (((_13125_ta.get()._field_Ident == _12732_ident) && (_13125_ta.get()._field_Binded == _12744_binded))) {
					return _13125_ta;;
				};
			}
		_iter_next_1a6374498:;
		}
		_iter_end_1a6374498:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a6375752:;
			if (it != expr_end) {
				jule::Ptr<_1acca3e59_TypeAlias> _13725_ta = *it;
				{
					if (((_13725_ta.get()._field_Ident == _12732_ident) && (_13725_ta.get()._field_Binded == _12744_binded))) {
						return _13725_ta;;
					};
				}
				_iter_next_1a6375752:;
				++it;
				goto _iter_begin_1a6375752;
			}
			_iter_end_1a6375752:;
		};
	};
	return nullptr;;
}



inline jule::Any _1abd5bebe_defByIdent(_1abd59241_SymbolTable* _self_, jule::Str _14829_ident, jule::Bool _14841_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a63766cb:;
		if (it != expr_end) {
			jule::Ptr<_1abd1497c_Var> _14921_v = *it;
			{
				if (((_14921_v.get()._field_Ident == _14829_ident) && (_14921_v.get()._field_Binded == _14841_binded))) {
					return jule::Any(_14921_v, &__jule_any_type8);;
				};
			}
			_iter_next_1a63766cb:;
			++it;
			goto _iter_begin_1a63766cb;
		}
		_iter_end_1a63766cb:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a637718d:;
		if (it != expr_end) {
			jule::Ptr<_1acca3e59_TypeAlias> _15521_ta = *it;
			{
				if (((_15521_ta.get()._field_Ident == _14829_ident) && (_15521_ta.get()._field_Binded == _14841_binded))) {
					return jule::Any(_15521_ta, &__jule_any_type67);;
				};
			}
			_iter_next_1a637718d:;
			++it;
			goto _iter_begin_1a637718d;
		}
		_iter_end_1a637718d:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a63780a1:;
		if (it != expr_end) {
			jule::Ptr<_1acb07021_Struct> _16121_s = *it;
			{
				if (((_16121_s.get()._field_Ident == _14829_ident) && (_16121_s.get()._field_Binded == _14841_binded))) {
					return jule::Any(_16121_s, &__jule_any_type66);;
				};
			}
			_iter_next_1a63780a1:;
			++it;
			goto _iter_begin_1a63780a1;
		}
		_iter_end_1a63780a1:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6378a52:;
		if (it != expr_end) {
			jule::Ptr<_1acb221d4_Fn> _16721_f = *it;
			{
				if (((_16721_f.get()._field_Ident == _14829_ident) && (_16721_f.get()._field_Binded == _14841_binded))) {
					return jule::Any(_16721_f, &__jule_any_type65);;
				};
			}
			_iter_next_1a6378a52:;
			++it;
			goto _iter_begin_1a6378a52;
		}
		_iter_end_1a6378a52:;
	};
	if (_14841_binded) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6379aec:;
		if (it != expr_end) {
			jule::Ptr<_1acb34405_Trait> _17721_t = *it;
			{
				if ((_17721_t.get()._field_Ident == _14829_ident)) {
					return jule::Any(_17721_t, &__jule_any_type10);;
				};
			}
			_iter_next_1a6379aec:;
			++it;
			goto _iter_begin_1a6379aec;
		}
		_iter_end_1a6379aec:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a637a7ce:;
		if (it != expr_end) {
			jule::Ptr<_1acb36b88_Enum> _18321_e = *it;
			{
				if ((_18321_e.get()._field_Ident == _14829_ident)) {
					return jule::Any(_18321_e, &__jule_any_type68);;
				};
			}
			_iter_next_1a637a7ce:;
			++it;
			goto _iter_begin_1a637a7ce;
		}
		_iter_end_1a637a7ce:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a637b57c:;
		if (it != expr_end) {
			jule::Ptr<_1acb38283_TypeEnum> _18921_te = *it;
			{
				if ((_18921_te.get()._field_Ident == _14829_ident)) {
					return jule::Any(_18921_te, &__jule_any_type69);;
				};
			}
			_iter_next_1a637b57c:;
			++it;
			goto _iter_begin_1a637b57c;
		}
		_iter_end_1a637b57c:;
	};
	return nullptr;;
}



inline jule::Bool _1abd5c420_isDuplicatedIdent(_1abd59241_SymbolTable* _self_, jule::Uintptr _20132_itself, jule::Str _20149_ident, jule::Bool _20161_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a637c22b:;
		if (it != expr_end) {
			jule::Ptr<_1abd1497c_Var> *_20216_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20216_v))) != _20132_itself) && ((*(_20216_v)).get()._field_Ident == _20149_ident)) && ((*(_20216_v)).get()._field_Binded == _20161_binded))) {
					return true;;
				};
			}
			_iter_next_1a637c22b:;
			++it;
			goto _iter_begin_1a637c22b;
		}
		_iter_end_1a637c22b:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a637c1d7:;
		if (it != expr_end) {
			jule::Ptr<_1acca3e59_TypeAlias> *_20816_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20816_ta))) != _20132_itself) && ((*(_20816_ta)).get()._field_Ident == _20149_ident)) && ((*(_20816_ta)).get()._field_Binded == _20161_binded))) {
					return true;;
				};
			}
			_iter_next_1a637c1d7:;
			++it;
			goto _iter_begin_1a637c1d7;
		}
		_iter_end_1a637c1d7:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a637ca89:;
		if (it != expr_end) {
			jule::Ptr<_1acb07021_Struct> *_21416_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21416_s))) != _20132_itself) && ((*(_21416_s)).get()._field_Ident == _20149_ident)) && ((*(_21416_s)).get()._field_Binded == _20161_binded))) {
					return true;;
				};
			}
			_iter_next_1a637ca89:;
			++it;
			goto _iter_begin_1a637ca89;
		}
		_iter_end_1a637ca89:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6380273:;
		if (it != expr_end) {
			jule::Ptr<_1acb221d4_Fn> *_22016_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22016_f))) != _20132_itself) && ((*(_22016_f)).get()._field_Ident == _20149_ident)) && ((*(_22016_f)).get()._field_Binded == _20161_binded))) {
					return true;;
				};
			}
			_iter_next_1a6380273:;
			++it;
			goto _iter_begin_1a6380273;
		}
		_iter_end_1a6380273:;
	};
	if (_20161_binded) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6381450:;
		if (it != expr_end) {
			jule::Ptr<_1acb34405_Trait> *_23016_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23016_t))) != _20132_itself) && ((*(_23016_t)).get()._field_Ident == _20149_ident))) {
					return true;;
				};
			}
			_iter_next_1a6381450:;
			++it;
			goto _iter_begin_1a6381450;
		}
		_iter_end_1a6381450:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a63808a0:;
		if (it != expr_end) {
			jule::Ptr<_1acb36b88_Enum> *_23616_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23616_e))) != _20132_itself) && ((*(_23616_e)).get()._field_Ident == _20149_ident))) {
					return true;;
				};
			}
			_iter_next_1a63808a0:;
			++it;
			goto _iter_begin_1a63808a0;
		}
		_iter_end_1a63808a0:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6382d14:;
		if (it != expr_end) {
			jule::Ptr<_1acb38283_TypeEnum> *_24216_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24216_te))) != _20132_itself) && ((*(_24216_te)).get()._field_Ident == _20149_ident))) {
					return true;;
				};
			}
			_iter_next_1a6382d14:;
			++it;
			goto _iter_begin_1a6382d14;
		}
		_iter_end_1a6382d14:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1abd59241_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1abd5e0e2_IsNil(_1abd5dc4b_Data* _self_) {
	return _1acca5c08_IsNil((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1abd5e356_IsVoid(_1abd5dc4b_Data* _self_) {
	return _1acca5e6c_Void((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1abd5e5ba_IsConst(_1abd5dc4b_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _1abd5e8c8_GoodOperand(_1abd5dc4b_Data* _self_, jule::Ptr<_1abd5dc4b_Data>* _10031_other) {
	if ((_1acca7d70_TypeEnum((*(_10031_other)).get()._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1acca73be_Prim((*(_10031_other)).get()._field_Kind.ptr()) == nullptr) || (!(_1accb086c_IsAny(_1acca73be_Prim((*(_10031_other)).get()._field_Kind.ptr()).ptr())))) && (_1acca8a85_Trait((*(_10031_other)).get()._field_Kind.ptr()) == nullptr)) && (!(_1acca5c08_IsNil((*(_self_))._field_Kind.ptr()))));;
}







std::ostream &operator<<(std::ostream &_Stream, _1abd5dc4b_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1abd5ecc4_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _1acc79490_pushErr(_1acc78e73_Eval* _self_, jule::Ptr<_2097d15d8_Token> _13126_token, jule::Str _13141_fmt, jule::Slice<jule::Any> _13154_args) {
	_1abce7003_pushErr((*(_self_))._field_s.ptr(), _13126_token, _13141_fmt, _13154_args);
}



inline void _1acc797ae_pushSuggestion(_1acc78e73_Eval* _self_, jule::Str _13633_fmt, jule::Slice<jule::Any> _13646_args) {
	_1abce7322_pushSuggestion((*(_self_))._field_s.ptr(), _13633_fmt, _13646_args);
}



inline void _1acc7998a_allowBuiltin(_1acc78e73_Eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1acc79b66_disallowBuiltin(_1acc78e73_Eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _1acc79dca_isUnsafe(_1acc78e73_Eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _1acc7a13e_isGlobal(_1acc78e73_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1a63b2cab:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a63b2d55:;
			{
				return false;;
			}
		}
		_match_end_1a63b33c7:;
	};
}



inline jule::Bool _1acc7a44c_applyNumericPrefix(_1acc78e73_Eval* _self_, jule::Ptr<_1abd5dc4b_Data>* _16342_d) {
	if ((((((*(_16342_d)) == nullptr) || (!(_1abd5e5ba_IsConst((*(_16342_d)).ptr())))) || (_1acca73be_Prim((*(_16342_d)).get()._field_Kind.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1accac407_Prim> _17013_prim = _1acca73be_Prim((*(_self_))._field_prefix.ptr());;
	if ((_17013_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_1ddeb4369_IsFloat(_1accac737_Str(_17013_prim.ptr()))) {
			_case_begin_1a63b57d6:;
			{
				(*(_16342_d)).get()._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>((*((*(_self_))._field_prefix)));
				_1ddeb836d_SetF64((*(_16342_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(_1ddeb7603_AsF64((*(_16342_d)).get()._field_Constant.ptr())));
				(*(_16342_d)).get()._field_Constant.get()._field_Kind=_17013_prim.get()._field_Kind;
			}
		}
		else if (_1ddeb39b7_IsSigInt(_1accac737_Str(_17013_prim.ptr()))) {
			_case_begin_1a63b585d:;
			{
				if ((!(_1abd46a36_sigAssignable(_1accac737_Str(_17013_prim.ptr()), _16342_d)))) {
					return false;;
				};
				(*(_16342_d)).get()._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>((*((*(_self_))._field_prefix)));
				_1ddeb7878_SetI64((*(_16342_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1ddeb712a_AsI64((*(_16342_d)).get()._field_Constant.ptr())));
				(*(_16342_d)).get()._field_Constant.get()._field_Kind=_17013_prim.get()._field_Kind;
			}
		}
		else if (_1ddeb3ca3_IsUnsigInt(_1accac737_Str(_17013_prim.ptr()))) {
			_case_begin_1a63b58d5:;
			{
				if ((!(_1abd46dbb_unsigAssignable(_1accac737_Str(_17013_prim.ptr()), _16342_d)))) {
					return false;;
				};
				(*(_16342_d)).get()._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>((*((*(_self_))._field_prefix)));
				_1ddeb7aed_SetU64((*(_16342_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1ddeb738e_AsU64((*(_16342_d)).get()._field_Constant.ptr())));
				(*(_16342_d)).get()._field_Constant.get()._field_Kind=_17013_prim.get()._field_Kind;
			}
		}
		_match_end_1a63b5b5a:;
	};
	return true;;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc7a6b1_litNil(_1acc78e73_Eval* _self_) {
	jule::Ptr<_1ddeb4b1c_Const> _20217_constant = static__1ddeb5cc7_NewNil();;
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=nullptr}), ._field_Mutable=true, ._field_Model=jule::Any(_20217_constant, &__jule_any_type19), ._field_Constant=_20217_constant});;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc7a9be_litStr(_1acc78e73_Eval* _self_, jule::Ptr<_1acadc48a_LitExpr>* _21122_l) {
	jule::Str _21217_s = (*(_21122_l)).get()._field_Value.slice(1LL, ((*(_21122_l)).get()._field_Value.len() - 1LL));;
	if (_2097d293b_IsRawStr((*(_21122_l)).get()._field_Value)) {
		_21217_s=_1abd450d9_ToRawStr(static_cast<jule::Slice<jule::U8>>(_21217_s));
	} else {
		_21217_s=_1abd45408_ToStr(static_cast<jule::Slice<jule::U8>>(_21217_s));
	};
	jule::Ptr<_1ddeb4b1c_Const> _21817_constant = static__1ddeb5832_NewStr(_21217_s);;
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd690da_primStr, ._field_Mutable=true, ._field_Model=jule::Any(_21817_constant, &__jule_any_type19), ._field_Constant=_21817_constant});;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc7accc_litBool(_1acc78e73_Eval* _self_, jule::Ptr<_1acadc48a_LitExpr>* _22823_l) {
	jule::Ptr<_1ddeb4b1c_Const> _22917_constant = static__1ddeb558a_NewBool((*(_22823_l)).get()._field_Value.equal("true", 4));;
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd693e8_primBool, ._field_Mutable=true, ._field_Model=jule::Any(_22917_constant, &__jule_any_type19), ._field_Constant=_22917_constant});;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc7b0da_litRune(_1acc78e73_Eval* _self_, jule::Ptr<_1acadc48a_LitExpr>* _23823_l) {
	jule::Str _24013_lt = (*(_23823_l)).get()._field_Value.slice(1LL, ((*(_23823_l)).get()._field_Value.len() - 1LL));;
	jule::I32 _24113_r = _1abd2d457_ToRune(static_cast<jule::Slice<jule::U8>>(_24013_lt));;
	jule::Ptr<_1abd5dc4b_Data> _24217_data = jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Constant=static__1ddeb504b_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_24113_r)))});;
	jule::Bool _24613_isAscii = _1abd2d325_IsAscii(_24113_r);;
	if (_24613_isAscii) {
		_24217_data.get()._field_Kind=_1acd6ac35_primU8;
	} else {
		_24217_data.get()._field_Kind=_1acd6a6a2_primI32;
	};
	_24217_data.get()._field_Mutable=true;
	_24217_data.get()._field_Model=jule::Any(jule::new_ptr<_1acb1dc19_RuneExprModel>(_1acb1dc19_RuneExprModel{._field_Code=_24113_r}), &__jule_any_type88);
	_24217_data.get()._field_IsRune=true;
	_24217_data.get()._field_untyped=true;
	return _24217_data;;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc7b3e8_litFloat(_1acc78e73_Eval* _self_, jule::Ptr<_1acadc48a_LitExpr>* _26024_l) {
	jule::F64 _26113_f = ({
		auto except = _1dde9a87d_ParseFloat((*(_26024_l)).get()._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1ddeb4b1c_Const> _26217_constant = static__1ddeb5ac9_NewF64(_26113_f);;
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_untyped=true, ._field_Kind=_1acd6bcbe_primF64, ._field_Mutable=true, ._field_Model=jule::Any(_26217_constant, &__jule_any_type19), ._field_Constant=_26217_constant});;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc7b706_litInt(_1acc78e73_Eval* _self_, jule::Ptr<_1acadc48a_LitExpr>* _27226_l) {
	;
	jule::Str _27517_lit = (*(_27226_l)).get()._field_Value;;
	jule::I64 _27617_base = 0LL;;
	{
		
		if (_20939cdb9_HasPrefix(_27517_lit, jule::Str("0x", 2))) {
			_case_begin_1a63c4839:;
			{
				(_27517_lit).mut_slice(2LL);;
				_27617_base=16LLU;
			}
		}
		else if (_20939cdb9_HasPrefix(_27517_lit, jule::Str("0b", 2))) {
			_case_begin_1a63c48a0:;
			{
				(_27517_lit).mut_slice(2LL);;
				_27617_base=2LLU;
			}
		}
		else if (_20939cdb9_HasPrefix(_27517_lit, jule::Str("0o", 2))) {
			_case_begin_1a63c454d:;
			{
				(_27517_lit).mut_slice(2LL);;
				_27617_base=8LLU;
			}
		}
		else if (((_27517_lit[0LL] == '0') && (_27517_lit.len() > 1LL))) {
			_case_begin_1a63c45b4:;
			{
				(_27517_lit).mut_slice(1LL);;
				_27617_base=8LLU;
			}
		}
		else {
			_case_begin_1a63c44d7:;
			{
				_27617_base=10LLU;
			}
		}
		_match_end_1a63c4482:;
	};
	jule::Ptr<_1abd5dc4b_Data> _29617_d = jule::new_ptr<_1abd5dc4b_Data>();;
	jule::Bool _29817_ok = true;;
	jule::I64 _29913_sig = ({
		auto except = _1dde9438d_ParseInt(_27517_lit, _27617_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_29817_ok=false;

			0LL;
		});
	});;
	if (_29817_ok) {
		_29617_d.get()._field_Constant=static__1ddeb504b_NewI64(_29913_sig);
		_29617_d.get()._field_Kind=_1acd69c45_primInt;
	} else {
		jule::U64 _30717_unsig = ({
			auto except = _1dde93e2b_ParseUint(_27517_lit, _27617_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_1acc79490_pushErr(_self_, (*(_27226_l)).get()._field_Token, jule::Str("arithmetic value overflow: this value too big", 45), jule::Slice<jule::Any>());
				_1acc797ae_pushSuggestion(_self_, jule::Str("floating-point literals may solve your problem", 46), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		_29617_d.get()._field_Constant=static__1ddeb52e3_NewU64(_30717_unsig);
		_29617_d.get()._field_Kind=_1acd6997b_primUint;
	};
	_29617_d.get()._field_Model=jule::Any(_29617_d.get()._field_Constant, &__jule_any_type19);
	if ((!(_1acc7a44c_applyNumericPrefix(_self_, &(_29617_d))))) {
		_1acc9e20c_fitBitsize(&(_29617_d));
	};
	_29617_d.get()._field_Mutable=true;
	_29617_d.get()._field_untyped=true;
	return _29617_d;;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc7ba14_litNum(_1acc78e73_Eval* _self_, jule::Ptr<_1acadc48a_LitExpr>* _32826_l) {
	{
		
		if (_2097d3596_IsFloat((*(_32826_l)).get()._field_Value)) {
			_case_begin_1a63cb588:;
			{
				return _1acc7b3e8_litFloat(_self_, _32826_l);;
			}
		}
		else {
			_case_begin_1a63cada1:;
			{
				return _1acc7b706_litInt(_self_, _32826_l);;
			}
		}
		_match_end_1a63cad07:;
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc7bd22_evalLit(_1acc78e73_Eval* _self_, jule::Ptr<_1acadc48a_LitExpr> _33726_lit) {
	{
		
		if (_1acadc7dc_IsNil(_33726_lit.ptr())) {
			_case_begin_1a63cc08e:;
			{
				return _1acc7a6b1_litNil(_self_);;
			}
		}
		else if (_2097d2694_IsStr(_33726_lit.get()._field_Value)) {
			_case_begin_1a63cc105:;
			{
				return _1acc7a9be_litStr(_self_, &(_33726_lit));;
			}
		}
		else if (_2097d32ee_IsBool(_33726_lit.get()._field_Value)) {
			_case_begin_1a63cc16b:;
			{
				return _1acc7accc_litBool(_self_, &(_33726_lit));;
			}
		}
		else if (_2097d2bd3_IsRune(_33726_lit.get()._field_Value)) {
			_case_begin_1a63cc1d2:;
			{
				return _1acc7b0da_litRune(_self_, &(_33726_lit));;
			}
		}
		else if (_2097d383d_IsNum(_33726_lit.get()._field_Value)) {
			_case_begin_1a63cc325:;
			{
				return _1acc7ba14_litNum(_self_, &(_33726_lit));;
			}
		}
		else {
			_case_begin_1a63cba61:;
			{
				return nullptr;;
			}
		}
		_match_end_1a63cb159:;
	};
}



inline jule::Any _1acc7c130_findBuiltins(_1acc78e73_Eval* _self_, jule::Str _35431_ident) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 1)) {
			_case_begin_1a63ce426:;
			{
				jule::Any _35721_def = _1acc9deed_findBuiltinsImport(_35431_ident, (*(_self_))._field_lookup.cast_ptr<_1abcdb39e_ImportInfo>(1));;
				if ((_35721_def != nullptr)) {
					return _35721_def;;
				};
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1a63ce899:;
			{
				jule::Any _36221_def = _1acc9eb8b_findBuiltinsSema(_35431_ident, (*(_self_))._field_lookup.cast_ptr<_1abce4671_Sema>(3));;
				if ((_36221_def != nullptr)) {
					return _36221_def;;
				};
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1a63ce910:;
			{
				jule::Any _36721_def = _1acc9eb8b_findBuiltinsSema(_35431_ident, (*(_self_))._field_lookup.cast_ptr<_1abcc4563_scopeChecker>(0).get()._field_s);;
				if ((_36721_def != nullptr)) {
					return _36721_def;;
				};
			}
		}
		_match_end_1a63ce3c1:;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _1acd6c242_findBuiltinDef(_35431_ident);;
}



inline jule::Any _1acc7c4d7_getDef(_1acc78e73_Eval* _self_, jule::Str _37825_ident, jule::Bool _37837_binded) {
	jule::Ptr<_1abd1497c_Var> _38317_v = _1accc2ecd_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1accc184a_FindVar((*(_self_))._field_lookup, _37825_ident, _37837_binded);;
	if ((_38317_v != nullptr)) {
		return jule::Any(_38317_v, &__jule_any_type8);;
	};
	jule::Ptr<_1acca3e59_TypeAlias> _38817_ta = _1accc2ecd_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1accc1c02_FindTypeAlias((*(_self_))._field_lookup, _37825_ident, _37837_binded);;
	if ((_38817_ta != nullptr)) {
		return jule::Any(_38817_ta, &__jule_any_type67);;
	};
	if ((!(_37837_binded))) {
		jule::Ptr<_1acb36b88_Enum> _39421_enm = _1accc2ecd_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1accc2a7c_FindEnum((*(_self_))._field_lookup, _37825_ident);;
		if ((_39421_enm != nullptr)) {
			return jule::Any(_39421_enm, &__jule_any_type68);;
		};
		jule::Ptr<_1acb38283_TypeEnum> _39921_tenm = _1accc2ecd_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1accc2d8a_FindTypeEnum((*(_self_))._field_lookup, _37825_ident);;
		if ((_39921_tenm != nullptr)) {
			return jule::Any(_39921_tenm, &__jule_any_type69);;
		};
	};
	jule::Ptr<_1acb221d4_Fn> _40517_f = _1accc2ecd_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1accc2461_FindFn((*(_self_))._field_lookup, _37825_ident, _37837_binded);;
	if ((_40517_f != nullptr)) {
		return jule::Any(_40517_f, &__jule_any_type65);;
	};
	jule::Ptr<_1acb07021_Struct> _41017_s = _1accc2ecd_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1accc20a9_FindStruct((*(_self_))._field_lookup, _37825_ident, _37837_binded);;
	if ((_41017_s != nullptr)) {
		return jule::Any(_41017_s, &__jule_any_type66);;
	};
	return _1acc7c130_findBuiltins(_self_, _37825_ident);;
}



inline void _1a63e4e64_pushReference(_1acc78e73_Eval* _self_, jule::Ptr<_1acb24d85_FnIns>* _41840_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1a63e6916:;
			{
				jule::Ptr<_1abcc4563_scopeChecker> _42121_sc = _1abcc75ee_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1abcc4563_scopeChecker>(0));;
				if ((!(_1a63e78a1_Exist(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), (*(_41840_ref)))))) {
					_1acb2895a_Push(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any((*(_41840_ref)), &__jule_any_type7));
				};
			}
		}
		else {
			_case_begin_1a63e631c:;
			{
				if (((((*(_self_))._field_owner != nullptr) && ((*(_self_))._field_owner.get()._field_Scope == nullptr)) && (!(_1a63e78a1_Exist((*(_self_))._field_owner.get()._field_Refers.ptr(), (*(_41840_ref))))))) {
					_1acb2895a_Push((*(_self_))._field_owner.get()._field_Refers.ptr(), jule::Any((*(_41840_ref)), &__jule_any_type7));
				};
			}
		}
		_match_end_1a63e62b7:;
	};
}

inline void _1a6408362_pushReference(_1acc78e73_Eval* _self_, jule::Ptr<_1abd1497c_Var>* _41840_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1a6409cc0:;
			{
				jule::Ptr<_1abcc4563_scopeChecker> _42121_sc = _1abcc75ee_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1abcc4563_scopeChecker>(0));;
				if ((!(_1a640ac5a_Exist(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), (*(_41840_ref)))))) {
					_1acb2895a_Push(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any((*(_41840_ref)), &__jule_any_type8));
				};
			}
		}
		else {
			_case_begin_1a64096c6:;
			{
				if (((((*(_self_))._field_owner != nullptr) && ((*(_self_))._field_owner.get()._field_Scope == nullptr)) && (!(_1a640ac5a_Exist((*(_self_))._field_owner.get()._field_Refers.ptr(), (*(_41840_ref))))))) {
					_1acb2895a_Push((*(_self_))._field_owner.get()._field_Refers.ptr(), jule::Any((*(_41840_ref)), &__jule_any_type8));
				};
			}
		}
		_match_end_1a6409671:;
	};
}

inline void _1a64973bd_pushReference(_1acc78e73_Eval* _self_, jule::Ptr<_1acb09d37_StructIns>* _41840_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1a6498d92:;
			{
				jule::Ptr<_1abcc4563_scopeChecker> _42121_sc = _1abcc75ee_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1abcc4563_scopeChecker>(0));;
				if ((!(_1a6499d2c_Exist(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), (*(_41840_ref)))))) {
					_1acb2895a_Push(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any((*(_41840_ref)), &__jule_any_type9));
				};
			}
		}
		else {
			_case_begin_1a6498798:;
			{
				if (((((*(_self_))._field_owner != nullptr) && ((*(_self_))._field_owner.get()._field_Scope == nullptr)) && (!(_1a6499d2c_Exist((*(_self_))._field_owner.get()._field_Refers.ptr(), (*(_41840_ref))))))) {
					_1acb2895a_Push((*(_self_))._field_owner.get()._field_Refers.ptr(), jule::Any((*(_41840_ref)), &__jule_any_type9));
				};
			}
		}
		_match_end_1a6498743:;
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc7ca6a__evalEnum(_1acc78e73_Eval* _self_, jule::Ptr<_1acb36b88_Enum> _43528_enm) {
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(_43528_enm, 3)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc7ce22_evalEnum(_1acc78e73_Eval* _self_, jule::Ptr<_1acb36b88_Enum> _44431_enm, jule::Ptr<_2097d15d8_Token> _44443_errorToken) {
	if ((!(_1abce76c9_isAccessibleDefine((*(_self_))._field_s.ptr(), _44431_enm.get()._field_Public, _44431_enm.get()._field_Token)))) {
		_1acc79490_pushErr(_self_, _44443_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_44431_enm.get()._field_Ident, &__jule_any_type5)}));
		_1acc797ae_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1acc7ca6a__evalEnum(_self_, _44431_enm);;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc7d230__evalTypeEnum(_1acc78e73_Eval* _self_, jule::Ptr<_1acb38283_TypeEnum> _45332_enm) {
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(_45332_enm, 4)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc7d5d7_evalTypeEnum(_1acc78e73_Eval* _self_, jule::Ptr<_1acb38283_TypeEnum> _46235_enm, jule::Ptr<_2097d15d8_Token> _46251_errorToken) {
	if ((!(_1abce76c9_isAccessibleDefine((*(_self_))._field_s.ptr(), _46235_enm.get()._field_Public, _46235_enm.get()._field_Token)))) {
		_1acc79490_pushErr(_self_, _46251_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_46235_enm.get()._field_Ident, &__jule_any_type5)}));
		_1acc797ae_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1acc7d230__evalTypeEnum(_self_, _46235_enm);;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc7d8e5__evalStruct(_1acc78e73_Eval* _self_, jule::Ptr<_1acb09d37_StructIns> _47130_s) {
	jule::Ptr<_1abd5dc4b_Data> _47217_d = jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(_47130_s, 0)}), ._field_Model=jule::Any(_47130_s, &__jule_any_type9), ._field_Decl=true, });;
	if (((_47130_s.get()._field_Decl != nullptr) && _47130_s.get()._field_Decl.get()._field_Binded)) {
		_47217_d.get()._field_Kind.get()._field_BindIdent=_47130_s.get()._field_Decl.get()._field_Ident;
	};
	return _47217_d;;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc7dc9c_evalStruct(_1acc78e73_Eval* _self_, jule::Ptr<_1acb09d37_StructIns> _48533_s, jule::Ptr<_2097d15d8_Token> _48548_errorToken) {
	if ((!(_1abce76c9_isAccessibleDefine((*(_self_))._field_s.ptr(), _48533_s.get()._field_Decl.get()._field_Public, _48533_s.get()._field_Decl.get()._field_Token)))) {
		_1acc79490_pushErr(_self_, _48548_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_48533_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
		_1acc797ae_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1acc7e3c9_checkDeprecated(_self_, &(_48533_s.get()._field_Decl.get()._field_Directives), _48548_errorToken);
	return _1acc7d8e5__evalStruct(_self_, _48533_s);;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc7e0aa_evalFnIns(_1acc78e73_Eval* _self_, jule::Ptr<_1acb24d85_FnIns> _49528_f) {
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(_49528_f, 1)}), ._field_Model=jule::Any(_49528_f, &__jule_any_type7), });;
}



inline void _1acc7e3c9_checkDeprecated(_1acc78e73_Eval* _self_, jule::Slice<jule::Ptr<_1acaa47b5_Directive>>* _50439_directives, jule::Ptr<_2097d15d8_Token> _50470_tok) {
	if (_1acc79dca_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_1acaa47b5_Directive> _50913_d = _1acc9db68_findDirective(_50439_directives, jule::Str("deprecated", 10));;
	if ((_50913_d != nullptr)) {
		if ((_50913_d.get()._field_Args.len() == 0LL)) {
			_1acc79490_pushErr(_self_, _50470_tok, jule::Str("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(jule::Str("this code is deprecated", 23), &__jule_any_type5)}));
		} else {
			_1acc79490_pushErr(_self_, _50470_tok, jule::Str("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(_50913_d.get()._field_Args[0LL].get()._field_Kind, &__jule_any_type5)}));
		};
		_1acc797ae_pushSuggestion(_self_, jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc7e781_evalFn(_1acc78e73_Eval* _self_, jule::Ptr<_1acb221d4_Fn> _52029_f, jule::Ptr<_2097d15d8_Token> _52037_errorToken) {
	if ((!(_1abce76c9_isAccessibleDefine((*(_self_))._field_s.ptr(), _52029_f.get()._field_Public, _52029_f.get()._field_Token)))) {
		_1acc79490_pushErr(_self_, _52037_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_52029_f.get()._field_Ident, &__jule_any_type5)}));
		_1acc797ae_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1acc7e3c9_checkDeprecated(_self_, &(_52029_f.get()._field_Directives), _52037_errorToken);
	jule::Ptr<_1acb24d85_FnIns> _52917_ins = _1acb23834_instance(_52029_f);;
	_1a63e4e64_pushReference(_self_, &(_52917_ins));
	return _1acc7e0aa_evalFnIns(_self_, _52917_ins);;
}



inline void _1acc7eb49_pushIllegalCycleError(_1acc78e73_Eval* _self_, jule::Ptr<_1abd1497c_Var>* _53441_v1, jule::Ptr<_1abd1497c_Var>* _53452_v2, jule::Str* _53467_message) {
	;
	jule::Str _53613_refers_to = _20943de7c_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_53441_v1)).get()._field_Ident, &__jule_any_type5),jule::Any((*(_53452_v2)).get()._field_Ident, &__jule_any_type5)}));;
	((*(_53467_message))).buffer.insert(0, (((_20939c649_Repeat(jule::Str(" ", 1), 7LL) + _53613_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1acc80001_checkCrossCycle(_1acc78e73_Eval* _self_, jule::Ptr<_1abd1497c_Var>* _54035_v, jule::Str* _54049_message) {
	{
		auto expr = &((*(_54035_v)).get()._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a63ec598:;
		if (it != expr_end) {
			jule::Ptr<_1abd1497c_Var> *_54116_d = it;
			{
				if (((*(_54116_d)) == (*(_self_))._field_owner)) {
					_1acc7eb49_pushIllegalCycleError(_self_, _54035_v, _54116_d, _54049_message);
					return false;;
				};
				if ((!(_1acc80001_checkCrossCycle(_self_, _54116_d, _54049_message)))) {
					_1acc7eb49_pushIllegalCycleError(_self_, _54035_v, _54116_d, _54049_message);
					return false;;
				};
			}
			_iter_next_1a63ec598:;
			++it;
			goto _iter_begin_1a63ec598;
		}
		_iter_end_1a63ec598:;
	};
	return true;;
}



inline jule::Bool _1acc803a8_checkIllegalCycles(_1acc78e73_Eval* _self_, jule::Ptr<_1abd1497c_Var>* _55942_v, jule::Ptr<_2097d15d8_Token> _55951_decl_token) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*(_self_))._field_owner.get()._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_55942_v)))) {
		_1acc79490_pushErr(_self_, (*(_self_))._field_owner.get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_owner.get()._field_Ident, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _57217_message = jule::Str();;
	if ((!(_1acc80001_checkCrossCycle(_self_, _55942_v, &(_57217_message))))) {
		jule::Str _57521_errMsg = _57217_message;;
		_57217_message=jule::Str();
		_1acc7eb49_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _55942_v, &(_57217_message));
		_57521_errMsg+=_57217_message;
		_1acc79490_pushErr(_self_, _55951_decl_token, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_57521_errMsg, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{ jule::Slice<jule::Ptr<_1abd1497c_Var>> &__jule_push_dest = (*(_self_))._field_owner.get()._field_Depends; __jule_push_dest.push((*(_55942_v))); };
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc80760_evalVar(_1acc78e73_Eval* _self_, jule::Ptr<_1abd1497c_Var> _58730_v, jule::Ptr<_2097d15d8_Token> _58739_errorToken) {
	if ((!(_1abce76c9_isAccessibleDefine((*(_self_))._field_s.ptr(), _58730_v.get()._field_Public, _58730_v.get()._field_Token)))) {
		_1acc79490_pushErr(_self_, _58739_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_58730_v.get()._field_Ident, &__jule_any_type5)}));
		_1acc797ae_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1acc7e3c9_checkDeprecated(_self_, &(_58730_v.get()._field_Directives), _58739_errorToken);
	_58730_v.get()._field_Used=true;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1a64045d3:;
			{
				jule::Bool _60117_ok = _1acc803a8_checkIllegalCycles(_self_, &(_58730_v), _58739_errorToken);;
				if ((!(_60117_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1a640468d:;
			{
				if (((!(_58730_v.get()._field_Reference)) || _1acc79dca_isUnsafe(_self_))) {
					goto _match_end_1a640457d;
				};
				jule::Ptr<_1abcc4563_scopeChecker> _60921_s = (*(_self_))._field_lookup.cast_ptr<_1abcc4563_scopeChecker>(0);;
				while (((_60921_s.get()._field_owner == nullptr) && (_60921_s.get()._field_parent != nullptr))) {
					{
						_60921_s=_60921_s.get()._field_parent;
					}
				_iter_next_1a640665c:;
				}
				_iter_end_1a640665c:;;
				if ((((_60921_s.get()._field_owner != nullptr) && _60921_s.get()._field_owner.get()._field_Anon) && (_58730_v.get()._field_Scope != _60921_s.get()._field_owner.get()._field_Scope))) {
					_1acc79490_pushErr(_self_, _58739_errorToken, jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75), jule::Slice<jule::Any>::make({jule::Any(_58730_v.get()._field_Ident, &__jule_any_type5)}));
				};
			}
		}
		_match_end_1a640457d:;
	};
	if ((_58730_v.get()._field_Scope == nullptr)) {
		_1a6408362_pushReference(_self_, &(_58730_v));
	};
	if (((!(_58730_v.get()._field_Binded)) && ((_58730_v.get()._field_Value == nullptr) || (_58730_v.get()._field_Value.get()._field_Data == nullptr)))) {
		if (_58730_v.get()._field_Constant) {
			_1abd0bd70_checkTypeVar((*(_self_))._field_s, &(_58730_v), jule::Trait<_1accc2ecd_Lookup>((*(_self_))._field_s, 3));
			if (((_58730_v.get()._field_Value == nullptr) || (_58730_v.get()._field_Value.get()._field_Data == nullptr))) {
				return nullptr;;
			};
		};
	};
	if (((_58730_v.get()._field_Kind == nullptr) || (_58730_v.get()._field_Kind.get()._field_Kind == nullptr))) {
		if ((_58730_v.get()._field_Scope != nullptr)) {
			return nullptr;;
		};
		_1abd0bd70_checkTypeVar((*(_self_))._field_s, &(_58730_v), (*(_self_))._field_lookup);
		if (((_58730_v.get()._field_Kind == nullptr) || (_58730_v.get()._field_Kind.get()._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	jule::Ptr<_1abd5dc4b_Data> _65217_d = jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_58730_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_58730_v.get()._field_Mutable, ._field_Reference=_58730_v.get()._field_Reference, ._field_Lvalue=(!(_58730_v.get()._field_Constant)), ._field_Model=jule::Any(_58730_v, &__jule_any_type8), });;
	if ((((!(_58730_v.get()._field_Binded)) && _1abd14d01_IsInitialized(_58730_v.ptr())) && (_58730_v.get()._field_Value.get()._field_Data != nullptr))) {
		_65217_d.get()._field_IsRune=_58730_v.get()._field_Value.get()._field_Data.get()._field_IsRune;
	};
	if ((_58730_v.get()._field_Constant && (_58730_v.get()._field_Value.get()._field_Data.get()._field_Constant != nullptr))) {
		_65217_d.get()._field_Constant=jule::new_ptr<_1ddeb4b1c_Const>((*(_58730_v.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_65217_d.get()._field_Model=jule::Any(_65217_d.get()._field_Constant, &__jule_any_type19);
		if (_1abd152c9_untypedConstant(_58730_v.ptr())) {
			_1acc7a44c_applyNumericPrefix(_self_, &(_65217_d));
			_65217_d.get()._field_untyped=true;
		};
	};
	return _65217_d;;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc80b17_evalTypeAlias(_1acc78e73_Eval* _self_, jule::Ptr<_1acca3e59_TypeAlias> _67636_ta, jule::Ptr<_2097d15d8_Token> _67652_errorToken) {
	if ((!(_1abce76c9_isAccessibleDefine((*(_self_))._field_s.ptr(), _67636_ta.get()._field_Public, _67636_ta.get()._field_Token)))) {
		_1acc79490_pushErr(_self_, _67652_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_67636_ta.get()._field_Ident, &__jule_any_type5)}));
		_1acc797ae_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_67636_ta.get()._field_Used=true;
	jule::Trait<_1acca4740_Kind> _68517_kind = _67636_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
	jule::Ptr<_1abd5dc4b_Data> _68617_d = nullptr;;
	{
		auto &_match_expr{ _68517_kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1a6419043:;
			{
				_68617_d=_1acc7d8e5__evalStruct(_self_, _68517_kind.cast_ptr<_1acb09d37_StructIns>(0));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1a64187e5:;
			{
				_68617_d=_1acc7ca6a__evalEnum(_self_, _68517_kind.cast_ptr<_1acb36b88_Enum>(3));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1a6417b24:;
			{
				_68617_d=_1acc7d230__evalTypeEnum(_self_, _68517_kind.cast_ptr<_1acb38283_TypeEnum>(4));
			}
		}
		else {
			_case_begin_1a6417a03:;
			{
				_68617_d=jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=_67636_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind}), ._field_Decl=true, });
				if (_67636_ta.get()._field_Binded) {
					_68617_d.get()._field_Kind.get()._field_BindIdent=_67636_ta.get()._field_Ident;
				} else {
					_68617_d.get()._field_Kind.get()._field_BindIdent=_67636_ta.get()._field_Kind.get()._field_Kind.get()._field_BindIdent;
				};
				_68617_d.get()._field_Model=jule::Any(_68617_d.get()._field_Kind, &__jule_any_type89);
			}
		}
		_match_end_1a641799d:;
	};
	_68617_d.get()._field_Kind.get()._field_Generic=_67636_ta.get()._field_Generic;
	return _68617_d;;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc80ebe_evalDef(_1acc78e73_Eval* _self_, jule::Any _71230_def, jule::Ptr<_2097d15d8_Token> _71240_ident) {
	{
		auto &_match_expr{ _71230_def };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a641b7c6:;
			{
				return _1acc80760_evalVar(_self_, _71230_def.cast_ptr<_1abd1497c_Var>(&__jule_any_type8), _71240_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1a641b83c:;
			{
				return _1acc7ce22_evalEnum(_self_, _71230_def.cast_ptr<_1acb36b88_Enum>(&__jule_any_type68), _71240_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1a641b8a3:;
			{
				return _1acc7d5d7_evalTypeEnum(_self_, _71230_def.cast_ptr<_1acb38283_TypeEnum>(&__jule_any_type69), _71240_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1a641b92a:;
			{
				return _1acc7dc9c_evalStruct(_self_, _1acb07483_instance(_71230_def.cast_ptr<_1acb07021_Struct>(&__jule_any_type66)), _71240_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1a641b991:;
			{
				jule::Ptr<_1acb221d4_Fn> _72321_f = _71230_def.cast_ptr<_1acb221d4_Fn>(&__jule_any_type65);;
				if ((!_72321_f.get()._field_Ident.equal("init", 4))) {
					return _1acc7e781_evalFn(_self_, _72321_f, _71240_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a641ba07:;
			{
				return _1acc7e0aa_evalFnIns(_self_, _71230_def.cast_ptr<_1acb24d85_FnIns>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1a641ba7e:;
			{
				return _1acc80b17_evalTypeAlias(_self_, _71230_def.cast_ptr<_1acca3e59_TypeAlias>(&__jule_any_type67), _71240_ident);;
			}
		}
		_match_end_1a641b6d8:;
	};
	_1acc79490_pushErr(_self_, _71240_ident, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any(_71240_ident.get()._field_Kind, &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc812cc_evalIdent(_1acc78e73_Eval* _self_, jule::Ptr<_1acadd04b_IdentExpr> _73628_ident) {
	jule::Any _73717_def = _1acc7c4d7_getDef(_self_, _73628_ident.get()._field_Ident, _73628_ident.get()._field_Binded);;
	return _1acc80ebe_evalDef(_self_, _73717_def, _73628_ident.get()._field_Token);;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc815da_evalUnary(jule::Ptr<_1acc78e73_Eval> _self_, jule::Ptr<_1acadd755_UnaryExpr> _74133_u) {
	_1acc95e07_unaryEval _74217_unary = static__1acc96336_new(_self_);;
	return _1acc97612_eval(&_74217_unary, _74133_u);;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc818e8_evalVariadic(jule::Ptr<_1acc78e73_Eval> _self_, jule::Ptr<_1acaddb0c_VariadicExpr> _74636_v) {
	if ((_74636_v.get()._field_Expr == nullptr)) {
		_1acc79490_pushErr(_self_.ptr(), _74636_v.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1acca4ba2_TypeKind> _75217_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_75217_prefix;
	});;
	jule::Ptr<_1abd5dc4b_Data> _75617_d = _1acc95984_evalExpr(_self_, _74636_v.get()._field_Expr);;
	if ((_75617_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1acca715a_Variadicable(_75617_d.get()._field_Kind.ptr())))) {
		_1acc79490_pushErr(_self_.ptr(), _74636_v.get()._field_Token, jule::Str("type @ is not variadicable", 26), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_75617_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1accb15b5_Slc> _76613_slc = _1acca8348_Slc(_75617_d.get()._field_Kind.ptr());;
	_75617_d.get()._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_BindIdent=_76613_slc.get()._field_Elem.get()._field_BindIdent, ._field_Generic=_76613_slc.get()._field_Elem.get()._field_Generic, ._field_Variadic=true, ._field_Kind=_76613_slc.get()._field_Elem.get()._field_Kind});
	return _75617_d;;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc81c06_evalUnsafe(jule::Ptr<_1acc78e73_Eval> _self_, jule::Ptr<_1acadcac8_UnsafeExpr> _77634_u) {
	jule::Bool _77713_unsafety = _self_.get()._field_unsafety;;
	_self_.get()._field_unsafety=true;
	jule::Ptr<_1abd5dc4b_Data> _77917_d = _1acc95984_evalExpr(_self_, _77634_u.get()._field_Expr);;
	_self_.get()._field_unsafety=_77713_unsafety;
	return _77917_d;;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc82014_evalArr(jule::Ptr<_1acc78e73_Eval> _self_, jule::Ptr<_1acae2a9a_SliceExpr> _78431_s) {
	jule::Ptr<_1accb3760_Arr> _78617_pt = _1acca80d4_Arr(_self_.get()._field_prefix.ptr());;
	jule::Ptr<_1accb3760_Arr> _78817_arr = jule::new_ptr<_1accb3760_Arr>(_1accb3760_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=_78617_pt.get()._field_Elem});;
	jule::Bool _79417_filled = false;;
	if ((_78431_s.get()._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ _78431_s.get()._field_Exprs[1LL].get()._field_Kind };
			
			if (_match_expr.type == &__jule_any_type81) {
				_case_begin_1a642a032:;
				{
					if ((_78431_s.get()._field_Exprs[1LL].get()._field_Kind.cast_ptr<_1acaddb0c_VariadicExpr>(&__jule_any_type81).get()._field_Expr != nullptr)) {
						goto _match_end_1a6429ecc;
					};
					if (_78617_pt.get()._field_Auto) {
						_1acc79490_pushErr(_self_.ptr(), _78431_s.get()._field_Token, jule::Str("auto-sized arrays cannot filled", 31), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_79417_filled=true;
					_78431_s.get()._field_Exprs=_78431_s.get()._field_Exprs.slice(0LL, 1LL);
				}
			}
			_match_end_1a6429ecc:;
		};
	};
	_78817_arr.get()._field_N=static_cast<jule::I64>(_78431_s.get()._field_Exprs.len());
	if ((!(_78617_pt.get()._field_Auto))) {
		if ((_78817_arr.get()._field_N > _78617_pt.get()._field_N)) {
			_1acc79490_pushErr(_self_.ptr(), _78431_s.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else if ((_78817_arr.get()._field_N < _78617_pt.get()._field_N)) {
			_78817_arr.get()._field_N=_78617_pt.get()._field_N;
		};
	};
	jule::Ptr<_1acb1414e_ArrayExprModel> _82317_model = jule::new_ptr<_1acb1414e_ArrayExprModel>(_1acb1414e_ArrayExprModel{._field_Kind=_78817_arr, });;
	if (_79417_filled) {
		_82317_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL, 2LL, jule::Any(nullptr));
	} else {
		_82317_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _78431_s.get()._field_Exprs.len(), jule::Any(nullptr));
	};
	jule::Ptr<_1acca4ba2_TypeKind> _83217_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_78817_arr.get()._field_Elem;
	{
		auto expr = &(_78431_s.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a642ed28:;
		if (it != expr_end) {
			jule::Ptr<_1acadb456_Expr> _83421_elem = *it;
			{
				jule::Ptr<_1abd5dc4b_Data> _83521_d = _1acc95984_evalExpr(_self_, _83421_elem);;
				if ((_83521_d == nullptr)) {
					goto _iter_next_1a642ed28;
				};
				_1abcee291_checkAssignType(_self_.get()._field_s, false, &(_78817_arr.get()._field_Elem), &(_83521_d), _78431_s.get()._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = _82317_model.get()._field_Elems; __jule_push_dest.push(_83521_d.get()._field_Model); };
			}
			_iter_next_1a642ed28:;
			++it;
			goto _iter_begin_1a642ed28;
		}
		_iter_end_1a642ed28:;
	};
	_self_.get()._field_prefix=_83217_prefix;
	if (_79417_filled) {
		{ jule::Slice<jule::Any> &__jule_push_dest = _82317_model.get()._field_Elems; __jule_push_dest.push(nullptr); };
	};
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(_78817_arr, 25)}), ._field_Mutable=true, ._field_Model=jule::Any(_82317_model, &__jule_any_type90), });;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc82465_evalExpSlc(jule::Ptr<_1acc78e73_Eval> _self_, jule::Ptr<_1acae2a9a_SliceExpr> _85834_s, jule::Ptr<_1acca4ba2_TypeKind> _85853_t, jule::Any _85871_first) {
	jule::Ptr<_1accb15b5_Slc> _85917_slc = jule::new_ptr<_1accb15b5_Slc>(_1accb15b5_Slc{._field_Elem=_85853_t});;
	jule::I64 _86317_i = 0LL;;
	jule::Ptr<_1acb11426_SliceExprModel> _86417_model = jule::new_ptr<_1acb11426_SliceExprModel>(_1acb11426_SliceExprModel{._field_ElemKind=_85853_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _85834_s.get()._field_Exprs.len(), jule::Any(nullptr))});;
	if ((_85871_first != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = _86417_model.get()._field_Elems; __jule_push_dest.push(_85871_first); };
		_86317_i=1LL;
	};
	jule::Ptr<_1acca4ba2_TypeKind> _87317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_85917_slc.get()._field_Elem;
	{
		auto expr = _85834_s.get()._field_Exprs.slice(_86317_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a6434ec6:;
		if (it != expr_end) {
			jule::Ptr<_1acadb456_Expr> _87521_elem = *it;
			{
				jule::Ptr<_1abd5dc4b_Data> _87621_d = _1acc95984_evalExpr(_self_, _87521_elem);;
				if ((_87621_d == nullptr)) {
					goto _iter_next_1a6434ec6;
				};
				_1abcee291_checkAssignType(_self_.get()._field_s, false, &(_85917_slc.get()._field_Elem), &(_87621_d), _85834_s.get()._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = _86417_model.get()._field_Elems; __jule_push_dest.push(_87621_d.get()._field_Model); };
			}
			_iter_next_1a6434ec6:;
			++it;
			goto _iter_begin_1a6434ec6;
		}
		_iter_end_1a6434ec6:;
	};
	_self_.get()._field_prefix=_87317_prefix;
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(_85917_slc, 22)}), ._field_Mutable=true, ._field_Model=jule::Any(_86417_model, &__jule_any_type82), });;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc82773_evalSliceExpr(jule::Ptr<_1acc78e73_Eval> _self_, jule::Ptr<_1acae2a9a_SliceExpr> _89437_s) {
	if ((_self_.get()._field_prefix != nullptr)) {
		{
			
			if ((_1acca80d4_Arr(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1a6437baa:;
				{
					return _1acc82014_evalArr(_self_, _89437_s);;
				}
			}
			else if ((_1acca8348_Slc(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1a6437c32:;
				{
					jule::Ptr<_1accb15b5_Slc> _90025_pt = _1acca8348_Slc(_self_.get()._field_prefix.ptr());;
					return _1acc82465_evalExpSlc(_self_, _89437_s, _90025_pt.get()._field_Elem, nullptr);;
				}
			}
			_match_end_1a6437a9a:;
		};
	};
	jule::Ptr<_1acca4ba2_TypeKind> _90517_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	if ((_89437_s.get()._field_Exprs.len() == 0LL)) {
		_1acc79490_pushErr(_self_.ptr(), _89437_s.get()._field_Token, jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1abd5dc4b_Data> _91317_firstElem = _1acc95984_evalExpr(_self_, _89437_s.get()._field_Exprs[0LL]);;
	if ((_91317_firstElem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1abd5dc4b_Data> _91817_d = _1acc82465_evalExpSlc(_self_, _89437_s, _91317_firstElem.get()._field_Kind, _91317_firstElem.get()._field_Model);;
	_self_.get()._field_prefix=_90517_prefix;
	return _91817_d;;
}



inline void _1acc82ab4_checkIntegerIndexingByData(_1acc78e73_Eval* _self_, jule::Ptr<_1abd5dc4b_Data>* _92450_d, jule::Ptr<_2097d15d8_Token> _92460_token) {
	jule::Str _92513_err_key = _1acca1110_checkDataForIntegerIndexing(_92450_d);;
	{
		auto &_match_expr{ _92513_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1a643c71a:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_1a643d320:;
			{
				_1acc79490_pushErr(_self_, _92460_token, _92513_err_key, jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str((*(_92450_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
			}
		}
		else {
			_case_begin_1a643ca8e:;
			{
				_1acc79490_pushErr(_self_, _92460_token, _92513_err_key, jule::Slice<jule::Any>());
			}
		}
		_match_end_1a643c9b2:;
	};
}



inline void _1acc82e8d_indexingPtr(_1acc78e73_Eval* _self_, jule::Ptr<_1abd5dc4b_Data>* _93635_d, jule::Ptr<_1abd5dc4b_Data>* _93650_index, jule::Ptr<_1acae3408_IndexingExpr>* _93665_i) {
	_1acc82ab4_checkIntegerIndexingByData(_self_, _93650_index, (*(_93665_i)).get()._field_Token);
	jule::Ptr<_1accb41bc_Ptr> _93917_ptr = _1acca7897_Ptr((*(_93635_d)).get()._field_Kind.ptr());;
	{
		
		if (_1accb4b90_IsUnsafe(_93917_ptr.ptr())) {
			_case_begin_1a6440102:;
			{
				_1acc79490_pushErr(_self_, (*(_93665_i)).get()._field_Token, jule::Str("unsafe pointers are not supports indexing", 41), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1acc79dca_isUnsafe(_self_)))) {
			_case_begin_1a6440168:;
			{
				_1acc79490_pushErr(_self_, (*(_93665_i)).get()._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a643eee2:;
	};
	(*(_93635_d)).get()._field_Kind=_93917_ptr.get()._field_Elem;
}



inline void _1acc83356_indexingArr(_1acc78e73_Eval* _self_, jule::Ptr<_1abd5dc4b_Data>* _95135_d, jule::Ptr<_1abd5dc4b_Data>* _95150_index, jule::Ptr<_1acae3408_IndexingExpr>* _95165_i) {
	jule::Ptr<_1accb3760_Arr> _95217_arr = _1acca80d4_Arr((*(_95135_d)).get()._field_Kind.ptr());;
	(*(_95135_d)).get()._field_Kind=_95217_arr.get()._field_Elem;
	_1acc82ab4_checkIntegerIndexingByData(_self_, _95150_index, (*(_95165_i)).get()._field_Token);
	if ((_1abd5e5ba_IsConst((*(_95150_index)).ptr()) && (_1ddeb7603_AsF64((*(_95150_index)).get()._field_Constant.ptr()) >= static_cast<jule::F64>(_95217_arr.get()._field_N)))) {
		_1acc79490_pushErr(_self_, (*(_95165_i)).get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
	};
}



inline void _1acc8371e_indexingSlc(_1acc78e73_Eval* _self_, jule::Ptr<_1abd5dc4b_Data>* _96035_d, jule::Ptr<_1abd5dc4b_Data>* _96050_index, jule::Ptr<_1acae3408_IndexingExpr>* _96065_i) {
	jule::Ptr<_1accb15b5_Slc> _96117_slc = _1acca8348_Slc((*(_96035_d)).get()._field_Kind.ptr());;
	(*(_96035_d)).get()._field_Kind=_96117_slc.get()._field_Elem;
	_1acc82ab4_checkIntegerIndexingByData(_self_, _96050_index, (*(_96065_i)).get()._field_Token);
	if ((!(_1abd5e5ba_IsConst((*(_96050_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_96035_d)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1a6445426:;
			{
				jule::Ptr<_1acb11426_SliceExprModel> _97121_m = (*(_96035_d)).get()._field_Model.cast_ptr<_1acb11426_SliceExprModel>(&__jule_any_type82);;
				jule::F64 _97217_indx = _1ddeb7603_AsF64((*(_96050_index)).get()._field_Constant.ptr());;
				if ((_97217_indx >= static_cast<jule::F64>(_97121_m.get()._field_Elems.len()))) {
					_1acc79490_pushErr(_self_, (*(_96065_i)).get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
				} else {
					(*(_96035_d)).get()._field_Model=_97121_m.get()._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_97217_indx))];
					(*(_96035_d)).get()._field_Decl=true;
				};
			}
		}
		_match_end_1a644538d:;
	};
}



inline void _1acc83ad7_indexingMap(_1acc78e73_Eval* _self_, jule::Ptr<_1abd5dc4b_Data>* _98235_d, jule::Ptr<_1abd5dc4b_Data>* _98250_index, jule::Ptr<_1acae3408_IndexingExpr>* _98269_i) {
	if (((*(_98250_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_1accb2b6b_Map> _98617_m = _1acca8ce9_Map((*(_98235_d)).get()._field_Kind.ptr());;
	_1abd492db_assignTypeChecker _98717_atc = _1abd492db_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=_98617_m.get()._field_Key, ._field_d=(*(_98250_index)), ._field_errorToken=(*(_98269_i)).get()._field_Token};;
	_1abd4a463_check(&_98717_atc);
	(*(_98235_d)).get()._field_Kind=_98617_m.get()._field_Val;
}



inline void _1acc83ea0_indexingStr(_1acc78e73_Eval* _self_, jule::Ptr<_1abd5dc4b_Data>* _99735_d, jule::Ptr<_1abd5dc4b_Data>* _99750_index, jule::Ptr<_1acae3408_IndexingExpr>* _99765_i) {
	(*(_99735_d)).get()._field_Kind=_1acd6ac35_primU8;
	if (((*(_99750_index)) == nullptr)) {
		return;;
	};
	_1acc82ab4_checkIntegerIndexingByData(_self_, _99750_index, (*(_99765_i)).get()._field_Token);
	if ((!(_1abd5e5ba_IsConst((*(_99750_index)).ptr())))) {
		(*(_99735_d)).get()._field_Constant=nullptr;
		return;;
	};
	if (_1abd5e5ba_IsConst((*(_99735_d)).ptr())) {
		jule::Ptr<_2097d15d8_Token> _101217_errorToken = (*(_99765_i)).get()._field_Token;;
		jule::I64 _101317_j = _1ddeb712a_AsI64((*(_99750_index)).get()._field_Constant.ptr());;
		jule::Str _101417_s = _1ddeb6b52_ReadStr((*(_99735_d)).get()._field_Constant.ptr());;
		if ((static_cast<jule::I64>(_101317_j) >= _101417_s.len())) {
			_1acc79490_pushErr(_self_, _101217_errorToken, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else {
			_1ddeb7aed_SetU64((*(_99735_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_101417_s[_101317_j])));
		};
	};
}



inline void _1acc84368_toIndexing(_1acc78e73_Eval* _self_, jule::Ptr<_1abd5dc4b_Data>* _102334_d, jule::Ptr<_1abd5dc4b_Data>* _102349_index, jule::Ptr<_1acae3408_IndexingExpr>* _102368_i) {
	{
		
		if ((_1acca7897_Ptr((*(_102334_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a644dcc0:;
			{
				_1acc82e8d_indexingPtr(_self_, _102334_d, _102349_index, _102368_i);
				return;;
			}
		}
		else if ((_1acca80d4_Arr((*(_102334_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a644dd47:;
			{
				_1acc83356_indexingArr(_self_, _102334_d, _102349_index, _102368_i);
				return;;
			}
		}
		else if ((_1acca8348_Slc((*(_102334_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a644ddbe:;
			{
				_1acc8371e_indexingSlc(_self_, _102334_d, _102349_index, _102368_i);
				return;;
			}
		}
		else if ((_1acca8ce9_Map((*(_102334_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a644de46:;
			{
				_1acc83ad7_indexingMap(_self_, _102334_d, _102349_index, _102368_i);
				return;;
			}
		}
		else if ((_1acca73be_Prim((*(_102334_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a644debd:;
			{
				jule::Ptr<_1accac407_Prim> _103817_prim = _1acca73be_Prim((*(_102334_d)).get()._field_Kind.ptr());;
				{
					
					if (_1accb0608_IsStr(_103817_prim.ptr())) {
						_case_begin_1a6452664:;
						{
							_1acc83ea0_indexingStr(_self_, _102334_d, _102349_index, _102368_i);
							return;;
						}
					}
					_match_end_1a64525ba:;
				};
			}
		}
		_match_end_1a644db7c:;
	};
	_1acc79490_pushErr(_self_, (*(_102368_i)).get()._field_Token, jule::Str("type @ is not support indexing", 30), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str((*(_102334_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
}



inline jule::Bool _1acc847db_pushGenericsFromExprSubIdent(jule::Ptr<_1acc78e73_Eval> _self_, jule::Ptr<_1acade7de_SubIdentExpr>* _104853_sexpr, jule::Slice<jule::Ptr<_1acad72cb_TypeDecl>>* _104914_generics, jule::Ptr<_1acadb456_Expr>* _104942_expr) {
	jule::Ptr<_1acad7b7d_SubIdentTypeDecl> _105017_t = jule::new_ptr<_1acad7b7d_SubIdentTypeDecl>();;
	if ((!(_1acca1dd0_pushSubIdentFromExpr(jule::Any((*(_104853_sexpr)), &__jule_any_type91), &(_105017_t))))) {
		_1acc79490_pushErr(_self_.ptr(), (*(_104942_expr)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	{ jule::Slice<jule::Ptr<_1acad72cb_TypeDecl>> &__jule_push_dest = (*(_104914_generics)); __jule_push_dest.push(jule::new_ptr<_1acad72cb_TypeDecl>(_1acad72cb_TypeDecl{._field_Kind=jule::Any(_105017_t, &__jule_any_type92)})); };
	return true;;
}



inline jule::Bool _1acc84ba4_pushGenericsFromData(jule::Ptr<_1acc78e73_Eval> _self_, jule::Slice<jule::Ptr<_1acad72cb_TypeDecl>>* _105945_generics, jule::Ptr<_1acadb456_Expr>* _105973_expr) {
	{
		auto &_match_expr{ (*(_105973_expr)).get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1a6455e70:;
			{
				jule::Ptr<_1acadd755_UnaryExpr> _106221_u = (*(_105973_expr)).get()._field_Kind.cast_ptr<_1acadd755_UnaryExpr>(&__jule_any_type93);;
				{
					auto &_match_expr{ _106221_u.get()._field_Op.get()._field_Kind };
					
					if (_match_expr == jule::Str("*", 1)) {
						_case_begin_1a64568cc:;
						{
							jule::Ptr<_1acad8cb1_PtrTypeDecl> _106525_kind = jule::new_ptr<_1acad8cb1_PtrTypeDecl>();;
							jule::Slice<jule::Ptr<_1acad72cb_TypeDecl>> _106625__generics = jule::Slice<jule::Ptr<_1acad72cb_TypeDecl>>::alloc(0LL, 1LL);;
							_1acc84ba4_pushGenericsFromData(_self_, &(_106625__generics), &(_106221_u.get()._field_Expr));
							_106525_kind.get()._field_Elem=_106625__generics[0LL];
							{ jule::Slice<jule::Ptr<_1acad72cb_TypeDecl>> &__jule_push_dest = (*(_105945_generics)); __jule_push_dest.push(jule::new_ptr<_1acad72cb_TypeDecl>(_1acad72cb_TypeDecl{._field_Token=(*(_105973_expr)).get()._field_Token, ._field_Kind=jule::Any(_106525_kind, &__jule_any_type77)})); };
						}
					}
					else if (_match_expr == jule::Str("&", 1)) {
						_case_begin_1a6457625:;
						{
							jule::Ptr<_1acad82dd_SptrTypeDecl> _107425_kind = jule::new_ptr<_1acad82dd_SptrTypeDecl>();;
							jule::Slice<jule::Ptr<_1acad72cb_TypeDecl>> _107525__generics = jule::Slice<jule::Ptr<_1acad72cb_TypeDecl>>::alloc(0LL, 1LL);;
							_1acc84ba4_pushGenericsFromData(_self_, &(_107525__generics), &(_106221_u.get()._field_Expr));
							_107425_kind.get()._field_Elem=_107525__generics[0LL];
							{ jule::Slice<jule::Ptr<_1acad72cb_TypeDecl>> &__jule_push_dest = (*(_105945_generics)); __jule_push_dest.push(jule::new_ptr<_1acad72cb_TypeDecl>(_1acad72cb_TypeDecl{._field_Token=(*(_105973_expr)).get()._field_Token, ._field_Kind=jule::Any(_107425_kind, &__jule_any_type78)})); };
						}
					}
					else {
						_case_begin_1a64570c5:;
						{
							_1acc79490_pushErr(_self_.ptr(), _106221_u.get()._field_Op, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1a6456d50:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1a64561e5:;
			{
				{ jule::Slice<jule::Ptr<_1acad72cb_TypeDecl>> &__jule_push_dest = (*(_105945_generics)); __jule_push_dest.push((*(_105973_expr)).get()._field_Kind.cast_ptr<_1acad72cb_TypeDecl>(&__jule_any_type94)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1a64560e6:;
			{
				jule::Ptr<_1acade7de_SubIdentExpr> _108921_sexpr = (*(_105973_expr)).get()._field_Kind.cast_ptr<_1acade7de_SubIdentExpr>(&__jule_any_type91);;
				return _1acc847db_pushGenericsFromExprSubIdent(_self_, &(_108921_sexpr), _105945_generics, _105973_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1a6455755:;
			{
				jule::Ptr<_1acadd04b_IdentExpr> _109221_ident = (*(_105973_expr)).get()._field_Kind.cast_ptr<_1acadd04b_IdentExpr>(&__jule_any_type85);;
				{ jule::Slice<jule::Ptr<_1acad72cb_TypeDecl>> &__jule_push_dest = (*(_105945_generics)); __jule_push_dest.push(jule::new_ptr<_1acad72cb_TypeDecl>(_1acad72cb_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1acad7892_IdentTypeDecl>(_1acad7892_IdentTypeDecl{._field_Token=_109221_ident.get()._field_Token, ._field_Ident=_109221_ident.get()._field_Ident, ._field_Binded=_109221_ident.get()._field_Binded, }), &__jule_any_type20)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1a64557bb:;
			{
				{
					auto expr = &((*(_105973_expr)).get()._field_Kind.cast_ptr<_1acadc0d3_TupleExpr>(&__jule_any_type86).get()._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a645ca8c:;
					if (it != expr_end) {
						jule::Ptr<_1acadb456_Expr> _110125_texpr = *it;
						{
							if ((!(_1acc84ba4_pushGenericsFromData(_self_, _105945_generics, &(_110125_texpr))))) {
								return false;;
							};
						}
						_iter_next_1a645ca8c:;
						++it;
						goto _iter_begin_1a645ca8c;
					}
					_iter_end_1a645ca8c:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1a6455832:;
			{
				jule::Ptr<_1acade36b_NsSelectionExpr> _110721_ns = (*(_105973_expr)).get()._field_Kind.cast_ptr<_1acade36b_NsSelectionExpr>(&__jule_any_type95);;
				jule::Ptr<_1acad7892_IdentTypeDecl> _110821_decl = jule::new_ptr<_1acad7892_IdentTypeDecl>(_1acad7892_IdentTypeDecl{._field_Token=_110721_ns.get()._field_Ident, ._field_Ident=_110721_ns.get()._field_Ident.get()._field_Kind, });;
				{ jule::Slice<jule::Ptr<_1acad72cb_TypeDecl>> &__jule_push_dest = (*(_105945_generics)); __jule_push_dest.push(jule::new_ptr<_1acad72cb_TypeDecl>(_1acad72cb_TypeDecl{._field_Token=_110821_decl.get()._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1acad8002_NamespaceTypeDecl>(_1acad8002_NamespaceTypeDecl{._field_Idents=_110721_ns.get()._field_Ns, ._field_Kind=jule::new_ptr<_1acad72cb_TypeDecl>(_1acad72cb_TypeDecl{._field_Token=_110821_decl.get()._field_Token, ._field_Kind=jule::Any(_110821_decl, &__jule_any_type20)})}), &__jule_any_type96)})); };
			}
		}
		else {
			_case_begin_1a64556ab:;
			{
				_1acc79490_pushErr(_self_.ptr(), (*(_105973_expr)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1a6455513:;
	};
	return true;;
}



inline void _1acc84ee5_evalIdentDeclFromIndexing(jule::Ptr<_1acc78e73_Eval> _self_, jule::Ptr<_1abd5dc4b_Data>* _112950_d, jule::Ptr<_1acae3408_IndexingExpr>* _112965_i) {
	jule::Ptr<_1acb09d37_StructIns> _113017_s = _1acca8821_Struct((*(_112950_d)).get()._field_Kind.ptr());;
	if ((_113017_s == nullptr)) {
		_1acc79490_pushErr(_self_.ptr(), (*(_112965_i)).get()._field_Expr.get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str((*(_112950_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
		(*(_112950_d))=nullptr;
		return;;
	};
	jule::Ptr<_1acad7892_IdentTypeDecl> _113717_decl = nullptr;;
	{
		auto &_match_expr{ (*(_112965_i)).get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1a6462b3b:;
			{
				jule::Ptr<_1acadd04b_IdentExpr> _114021_expr = (*(_112965_i)).get()._field_Expr.get()._field_Kind.cast_ptr<_1acadd04b_IdentExpr>(&__jule_any_type85);;
				_113717_decl=jule::new_ptr<_1acad7892_IdentTypeDecl>(_1acad7892_IdentTypeDecl{._field_Token=_114021_expr.get()._field_Token, ._field_Ident=_114021_expr.get()._field_Ident, ._field_Binded=_114021_expr.get()._field_Binded, });
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1a6463b81:;
			{
				jule::Ptr<_1acade36b_NsSelectionExpr> _114721_expr = (*(_112965_i)).get()._field_Expr.get()._field_Kind.cast_ptr<_1acade36b_NsSelectionExpr>(&__jule_any_type95);;
				_113717_decl=jule::new_ptr<_1acad7892_IdentTypeDecl>(_1acad7892_IdentTypeDecl{._field_Token=_114721_expr.get()._field_Ident, ._field_Ident=_114721_expr.get()._field_Ident.get()._field_Kind, });
			}
		}
		else {
			_case_begin_1a6463059:;
			{
				_1acc79490_pushErr(_self_.ptr(), (*(_112965_i)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				(*(_112950_d))=nullptr;
				return;;
			}
		}
		_match_end_1a6463004:;
	};
	if ((!(_1acc84ba4_pushGenericsFromData(_self_, &(_113717_decl.get()._field_Generics), &((*(_112965_i)).get()._field_Index))))) {
		(*(_112950_d))=nullptr;
		return;;
	};
	_113017_s=({ auto _wrap_copy = _1acc8b24e_typeChecker(_self_.ptr()); _1accb9a52_fromStruct(&_wrap_copy, &(_113717_decl), &(_113017_s.get()._field_Decl)); });
	if ((_113017_s == nullptr)) {
		(*(_112950_d))=nullptr;
		return;;
	};
	(*(_112950_d)).get()._field_Kind.get()._field_Kind=jule::Trait<_1acca4740_Kind>(_113017_s, 0);
}



inline jule::Bool _1acc85457_checkGenericFn(jule::Ptr<_1acc78e73_Eval> _self_, jule::Ptr<_1acb24d85_FnIns>* _117239_f, jule::Ptr<_2097d15d8_Token>* _117255_et, jule::Any* _117272_model) {
	jule::Bool _117313_ok = _1abd0165b_reloadFnInsTypes(_self_.get()._field_s, (*(_117239_f)));;
	(*(_117239_f)).get()._field_reloaded=true;
	if ((!(_117313_ok))) {
		return false;;
	};
	jule::Ptr<_1acb24d85_FnIns> _117817_existInstance = _1acb23b0e_appendInstance((*(_117239_f)).get()._field_Decl.ptr(), _117239_f);;
	if ((!(_1abd007c0_checkConstraintsFn(_self_.get()._field_s, _117239_f, _117255_et, _117817_existInstance)))) {
		return false;;
	};
	if ((_117817_existInstance != nullptr)) {
		(*(_117239_f))=_117817_existInstance;
		_1acca1b8d_updateModelToGenericIns(_117272_model, &(_117817_existInstance));
	} else {
		_1abd0eb75_checkFnInsCaller(_self_.get()._field_s, _117239_f, (*(_117255_et)));
	};
	return true;;
}



inline void _1acc85798_evalFnGenericFromIndexing(jule::Ptr<_1acc78e73_Eval> _self_, jule::Ptr<_1abd5dc4b_Data>* _119750_d, jule::Ptr<_1acae3408_IndexingExpr>* _119765_i) {
	jule::Slice<jule::Ptr<_1acad72cb_TypeDecl>> _119817_generics = jule::Slice<jule::Ptr<_1acad72cb_TypeDecl>>::alloc(0LL, 8LLU);;
	if ((!(_1acc84ba4_pushGenericsFromData(_self_, &(_119817_generics), &((*(_119765_i)).get()._field_Index))))) {
		(*(_119750_d))=nullptr;
		return;;
	};
	jule::Ptr<_1acb24d85_FnIns> _120417_f = _1acca85ac_Fn((*(_119750_d)).get()._field_Kind.ptr());;
	jule::I64 _120517_genericsLen = 0LL;;
	if ((_120417_f.get()._field_Decl != nullptr)) {
		_120517_genericsLen=static_cast<jule::I64>(_120417_f.get()._field_Decl.get()._field_Generics.len());
	};
	if ((!(_1abce839a_checkGenericQuantity(_self_.get()._field_s.ptr(), _120517_genericsLen, static_cast<jule::I64>(_119817_generics.len()), (*(_119765_i)).get()._field_Expr.get()._field_Token)))) {
		(*(_119750_d))=nullptr;
		return;;
	};
	_120417_f.get()._field_Generics=jule::Slice<jule::Ptr<_1acca3420_InsGeneric>>::alloc(0LL, _120417_f.get()._field_Decl.get()._field_Generics.len());
	{
		auto expr = &(_119817_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a64729c5:;
		if (it != expr_end) {
			jule::Ptr<_1acad72cb_TypeDecl> _121621_g = *it;
			{
				jule::Ptr<_1abd5dc4b_Data> _121721_k = _1acc8b55c_evalType(_self_.ptr(), _121621_g);;
				if ((_121721_k == nullptr)) {
					(*(_119750_d))=nullptr;
					return;;
				};
				{ jule::Slice<jule::Ptr<_1acca3420_InsGeneric>> &__jule_push_dest = _120417_f.get()._field_Generics; __jule_push_dest.push(jule::new_ptr<_1acca3420_InsGeneric>(_1acca3420_InsGeneric{._field_Kind=_121721_k.get()._field_Kind, })); };
			}
			_iter_next_1a64729c5:;
			++it;
			goto _iter_begin_1a64729c5;
		}
		_iter_end_1a64729c5:;
	};
	if (_1acb2621b_IsBuiltin(_120417_f.ptr())) {
		return;;
	};
	if (_1acc85457_checkGenericFn(_self_, &(_120417_f), &((*(_119765_i)).get()._field_Expr.get()._field_Token), &((*(_119750_d)).get()._field_Model))) {
		(*(_119750_d)).get()._field_Kind.get()._field_Kind=jule::Trait<_1acca4740_Kind>(_120417_f, 1);
	} else {
		(*(_119750_d))=nullptr;
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc85ab7_evalIndexing(jule::Ptr<_1acc78e73_Eval> _self_, jule::Ptr<_1acae3408_IndexingExpr> _123636_i) {
	jule::Ptr<_1acca4ba2_TypeKind> _123717_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_123717_prefix;
	});;
	jule::Ptr<_1abd5dc4b_Data> _124117_d = _1acc94c4c_evalExprKind(_self_, _123636_i.get()._field_Expr.get()._field_Kind);;
	if ((_124117_d == nullptr)) {
		return nullptr;;
	};
	if (_124117_d.get()._field_Decl) {
		_1acc84ee5_evalIdentDeclFromIndexing(_self_, &(_124117_d), &(_123636_i));
		return _124117_d;;
	};
	if ((_1acca85ac_Fn(_124117_d.get()._field_Kind.ptr()) != nullptr)) {
		_1acc85798_evalFnGenericFromIndexing(_self_, &(_124117_d), &(_123636_i));
		return _124117_d;;
	};
	_1abd5dc4b_Data _125717_old_d = (*(_124117_d));;
	jule::Ptr<_1abd5dc4b_Data> _125917_index = _1acc95984_evalExpr(_self_, _123636_i.get()._field_Index);;
	if ((_125917_index == nullptr)) {
		return nullptr;;
	};
	_124117_d.get()._field_Decl=false;
	_1acc84368_toIndexing(_self_.ptr(), &(_124117_d), &(_125917_index), &(_123636_i));
	if (_1abd5e5ba_IsConst(_124117_d.ptr())) {
		_124117_d.get()._field_Decl=false;
		_124117_d.get()._field_Model=jule::Any(_124117_d.get()._field_Constant, &__jule_any_type19);
	} else if (_124117_d.get()._field_Decl) {
		_124117_d.get()._field_Decl=false;
	} else {
		_124117_d.get()._field_Model=jule::Any(jule::new_ptr<_1acb11899_IndexingExprModel>(_1acb11899_IndexingExprModel{._field_Token=_123636_i.get()._field_Token, ._field_Expr=jule::new_ptr<_1abd5dc4b_Data>(_125717_old_d), ._field_Index=_125917_index}), &__jule_any_type46);
	};
	return _124117_d;;
}



inline __jule_tuple_x_1abd5dc4b_Data__jule_tuple_x_1abd5dc4b_Data _1acc85dc5_evalSlicingExprs(jule::Ptr<_1acc78e73_Eval> _self_, jule::Ptr<_1acae3a13_SlicingExpr>* _129041_s) {
	__jule_tuple_x_1abd5dc4b_Data__jule_tuple_x_1abd5dc4b_Data __jule_func_result;
	jule::Ptr<_1acca4ba2_TypeKind> _129117_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_129117_prefix;
	});;
	jule::Ptr<_1abd5dc4b_Data> _129517_l = nullptr;;
	jule::Ptr<_1abd5dc4b_Data> _129617_r = nullptr;;
	if (((*(_129041_s)).get()._field_Start != nullptr)) {
		_129517_l=_1acc95984_evalExpr(_self_, (*(_129041_s)).get()._field_Start);
		if ((_129517_l != nullptr)) {
			_1acc82ab4_checkIntegerIndexingByData(_self_.ptr(), &(_129517_l), (*(_129041_s)).get()._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_129517_l=jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd69c45_primInt, ._field_Constant=static__1ddeb504b_NewI64(0LL)});
		_129517_l.get()._field_Constant.get()._field_Kind=jule::Str("int", 3);
		_129517_l.get()._field_Model=jule::Any(_129517_l.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_129041_s)).get()._field_To != nullptr)) {
		_129617_r=_1acc95984_evalExpr(_self_, (*(_129041_s)).get()._field_To);
		if ((_129617_r != nullptr)) {
			_1acc82ab4_checkIntegerIndexingByData(_self_.ptr(), &(_129617_r), (*(_129041_s)).get()._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _129517_l;
	__jule_func_result.__jule_result_arg1 = _129617_r;
	return __jule_func_result;;
}



inline void _1acc8614a_slicingArr(_1acc78e73_Eval* _self_, jule::Ptr<_1abd5dc4b_Data>* _132630_d) {
	jule::Ptr<_1acca4ba2_TypeKind> _132717_elemType = _1acca80d4_Arr((*(_132630_d)).get()._field_Kind.ptr()).get()._field_Elem;;
	(*(_132630_d)).get()._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(jule::new_ptr<_1accb15b5_Slc>(_1accb15b5_Slc{._field_Elem=_132717_elemType}), 22)});
	(*(_132630_d)).get()._field_Lvalue=false;
	(*(_132630_d)).get()._field_Mutable=((*(_132630_d)).get()._field_Mutable || (!(_1acca6445_Mutable(_132717_elemType.ptr()))));
}



inline void _1acc86513_slicingStr(_1acc78e73_Eval* _self_, jule::Ptr<_1abd5dc4b_Data>* _134130_d, jule::Ptr<_1abd5dc4b_Data>* _134141_l, jule::Ptr<_1abd5dc4b_Data>* _134152_r) {
	(*(_134130_d)).get()._field_Lvalue=false;
	(*(_134130_d)).get()._field_Mutable=true;
	if ((!(_1abd5e5ba_IsConst((*(_134130_d)).ptr())))) {
		return;;
	};
	if ((((*(_134141_l)) == nullptr) || ((*(_134152_r)) == nullptr))) {
		(*(_134130_d)).get()._field_Constant=nullptr;
		return;;
	};
	if ((_1abd5e5ba_IsConst((*(_134141_l)).ptr()) && _1abd5e5ba_IsConst((*(_134152_r)).ptr()))) {
		jule::I64 _135417_left = _1ddeb712a_AsI64((*(_134141_l)).get()._field_Constant.ptr());;
		if ((_135417_left < 0LL)) {
			return;;
		};
		jule::Str _135917_s = _1ddeb6b52_ReadStr((*(_134130_d)).get()._field_Constant.ptr());;
		jule::I64 _136021_right = 0LL;;
		if (((*(_134152_r)) == nullptr)) {
			_136021_right=static_cast<jule::I64>(static_cast<jule::I64>(_135917_s.len()));
		} else {
			_136021_right=static_cast<jule::I64>(_1ddeb712a_AsI64((*(_134152_r)).get()._field_Constant.ptr()));
		};
		if ((_135417_left > _136021_right)) {
			return;;
		};
		_1ddeb80e8_SetStr((*(_134130_d)).get()._field_Constant.ptr(), _135917_s.slice(_135417_left, _136021_right));
		(*(_134130_d)).get()._field_Decl=true;
	} else {
		(*(_134130_d)).get()._field_Constant=nullptr;
	};
}



inline void _1acc86975_checkSlicing(_1acc78e73_Eval* _self_, jule::Ptr<_1abd5dc4b_Data>* _137736_d, jule::Ptr<_1abd5dc4b_Data>* _137747_l, jule::Ptr<_1abd5dc4b_Data>* _137758_r, jule::Ptr<_1acae3a13_SlicingExpr>* _137769_s) {
	{
		
		if ((_1acca80d4_Arr((*(_137736_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a64883c0:;
			{
				_1acc8614a_slicingArr(_self_, _137736_d);
				return;;
			}
		}
		else if ((_1acca8348_Slc((*(_137736_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6488447:;
			{
				return;;
			}
		}
		else if ((_1acca73be_Prim((*(_137736_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a64884be:;
			{
				jule::Ptr<_1accac407_Prim> _138517_prim = _1acca73be_Prim((*(_137736_d)).get()._field_Kind.ptr());;
				{
					
					if (_1accb0608_IsStr(_138517_prim.ptr())) {
						_case_begin_1a648a57b:;
						{
							_1acc86513_slicingStr(_self_, _137736_d, _137747_l, _137758_r);
							return;;
						}
					}
					_match_end_1a648a4d2:;
				};
			}
		}
		_match_end_1a648829e:;
	};
	_1acc79490_pushErr(_self_, (*(_137769_s)).get()._field_Token, jule::Str("type @ is not support slicing", 29), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str((*(_137736_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc86c83_evalSlicing(jule::Ptr<_1acc78e73_Eval> _self_, jule::Ptr<_1acae3a13_SlicingExpr> _139635_s) {
	jule::Ptr<_1abd5dc4b_Data> _139717_d = _1acc95984_evalExpr(_self_, _139635_s.get()._field_Expr);;
	if ((_139717_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1abd5dc4b_Data> _140218_l;;
	jule::Ptr<_1abd5dc4b_Data> _140225_r;;
	({
		__jule_tuple_x_1abd5dc4b_Data__jule_tuple_x_1abd5dc4b_Data __jule_assign_result = _1acc85dc5_evalSlicingExprs(_self_, &(_139635_s));
		_140218_l = __jule_assign_result.__jule_result_arg0;
		_140225_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_140218_l == nullptr)) {
		return _139717_d;;
	};
	_139717_d.get()._field_Decl=false;
	_1acc86975_checkSlicing(_self_.ptr(), &(_139717_d), &(_140218_l), &(_140225_r), &(_139635_s));
	if (_1abd5e5ba_IsConst(_139717_d.ptr())) {
		_139717_d.get()._field_Decl=false;
		_139717_d.get()._field_Model=jule::Any(_139717_d.get()._field_Constant, &__jule_any_type19);
	} else if (_139717_d.get()._field_Decl) {
		_139717_d.get()._field_Decl=false;
	} else {
		jule::Ptr<_1acb12aba_SlicingExprModel> _142021_model = jule::new_ptr<_1acb12aba_SlicingExprModel>(_1acb12aba_SlicingExprModel{._field_Token=_139635_s.get()._field_Token, ._field_Expr=_139717_d.get()._field_Model, ._field_Left=_140218_l.get()._field_Model, });;
		if ((_140225_r != nullptr)) {
			_142021_model.get()._field_Right=_140225_r.get()._field_Model;
		};
		_139717_d.get()._field_Model=jule::Any(_142021_model, &__jule_any_type97);
	};
	return _139717_d;;
}



inline void _1acc8714b_castPtr(_1acc78e73_Eval* _self_, jule::Ptr<_1acca4ba2_TypeKind> _143330_t, jule::Ptr<_1abd5dc4b_Data> _143348_d, jule::Ptr<_2097d15d8_Token> _143358_errorToken) {
	_143348_d.get()._field_Constant=nullptr;
	jule::Ptr<_1accb0b58_Sptr> _143513_sptr = _1acca7633_Sptr(_143348_d.get()._field_Kind.ptr());;
	if ((_143513_sptr != nullptr)) {
		if ((!(_1acca5367_Equal(_1acca7897_Ptr(_143330_t.ptr()).get()._field_Elem, _143513_sptr.get()._field_Elem)))) {
			_1acc79490_pushErr(_self_, _143358_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_143348_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1acca5059_Str(_143330_t.ptr()), &__jule_any_type5)}));
		};
		return;;
	};
	if ((!(_1acc79dca_isUnsafe(_self_)))) {
		_1acc79490_pushErr(_self_, _143358_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1accac407_Prim> _144813_prim = _1acca73be_Prim(_143348_d.get()._field_Kind.ptr());;
	if (((_1acca7897_Ptr(_143348_d.get()._field_Kind.ptr()) == nullptr) && ((_144813_prim == nullptr) || (!(_1ddeb404a_IsInt(_1accac737_Str(_144813_prim.ptr()))))))) {
		_1acc79490_pushErr(_self_, _143358_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_143348_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1acca5059_Str(_143330_t.ptr()), &__jule_any_type5)}));
	};
}



inline void _1acc87514_castStruct(_1acc78e73_Eval* _self_, jule::Ptr<_1acca4ba2_TypeKind> _145433_t, jule::Ptr<_1abd5dc4b_Data> _145451_d, jule::Ptr<_2097d15d8_Token> _145461_errorToken) {
	_145451_d.get()._field_Constant=nullptr;
	jule::Ptr<_1acb34405_Trait> _145617_tr = _1acca8a85_Trait(_145451_d.get()._field_Kind.ptr());;
	if ((_145617_tr == nullptr)) {
		_1acc79490_pushErr(_self_, _145461_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_145451_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1acca5059_Str(_145433_t.ptr()), &__jule_any_type5)}));
		return;;
	};
	jule::Ptr<_1acb09d37_StructIns> _146217_s = _1acca8821_Struct(_145433_t.ptr());;
	_1a64973bd_pushReference(_self_, &(_146217_s));
	if ((!(_1acb0853e_IsImplements(_146217_s.get()._field_Decl.ptr(), _145617_tr)))) {
		_1acc79490_pushErr(_self_, _145461_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_145451_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1acca5059_Str(_145433_t.ptr()), &__jule_any_type5)}));
	};
}



inline void _1acc878cc_castRef(_1acc78e73_Eval* _self_, jule::Ptr<_1acca4ba2_TypeKind> _147030_t, jule::Ptr<_1abd5dc4b_Data> _147048_d, jule::Ptr<_2097d15d8_Token> _147058_errorToken) {
	_147048_d.get()._field_Constant=nullptr;
	jule::Ptr<_1accb0b58_Sptr> _147217_sptr = _1acca7633_Sptr(_147030_t.ptr());;
	jule::Ptr<_1accb41bc_Ptr> _147417_ptr = _1acca7897_Ptr(_147048_d.get()._field_Kind.ptr());;
	if (((_147417_ptr != nullptr) && _1acca5367_Equal(_147217_sptr.get()._field_Elem, _147417_ptr.get()._field_Elem))) {
		if ((!(_1acc79dca_isUnsafe(_self_)))) {
			_1acc79490_pushErr(_self_, _147058_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1acca8821_Struct(_147217_sptr.get()._field_Elem.ptr()) != nullptr)) {
		_1acc87514_castStruct(_self_, _147217_sptr.get()._field_Elem, _147048_d, _147058_errorToken);
		return;;
	};
	_1acc79490_pushErr(_self_, _147058_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_147048_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1acca5059_Str(_147030_t.ptr()), &__jule_any_type5)}));
}



inline void _1acc87c95_castSlc(_1acc78e73_Eval* _self_, jule::Ptr<_1acca4ba2_TypeKind> _149230_t, jule::Ptr<_1abd5dc4b_Data> _149248_d, jule::Ptr<_2097d15d8_Token> _149258_errorToken) {
	jule::Ptr<_1ddeb4b1c_Const> _149313_c = _149248_d.get()._field_Constant;;
	_149248_d.get()._field_Constant=nullptr;
	if ((_1acca7b0b_Enum(_149248_d.get()._field_Kind.ptr()) != nullptr)) {
		if (((_1acca73be_Prim(_1acca7b0b_Enum(_149248_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_1accb0608_IsStr(_1acca73be_Prim(_1acca7b0b_Enum(_149248_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).ptr()))))) {
			_1acc79490_pushErr(_self_, _149258_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_149248_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1acca5059_Str(_149230_t.ptr()), &__jule_any_type5)}));
			return;;
		};
	} else if (((_1acca73be_Prim(_149248_d.get()._field_Kind.ptr()) == nullptr) || (!(_1accb0608_IsStr(_1acca73be_Prim(_149248_d.get()._field_Kind.ptr()).ptr()))))) {
		_1acc79490_pushErr(_self_, _149258_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_149248_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1acca5059_Str(_149230_t.ptr()), &__jule_any_type5)}));
		return;;
	};
	_149230_t=_1acca8348_Slc(_149230_t.ptr()).get()._field_Elem;
	jule::Ptr<_1accac407_Prim> _150713_prim = _1acca73be_Prim(_149230_t.ptr());;
	if (((_150713_prim == nullptr) || ((!(_1accadbcd_IsU8(_150713_prim.ptr()))) && (!(_1accad705_IsI32(_150713_prim.ptr())))))) {
		_1acc79490_pushErr(_self_, _149258_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_149248_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1acca5059_Str(_149230_t.ptr()), &__jule_any_type5)}));
		return;;
	};
	if ((_149313_c != nullptr)) {
		{
			
			if (_1accadbcd_IsU8(_150713_prim.ptr())) {
				_case_begin_1a64a8984:;
				{
					jule::Slice<jule::U8> _151721_bytes = static_cast<jule::Slice<jule::U8>>(_1ddeb6b52_ReadStr(_149313_c.ptr()));;
					jule::Ptr<_1acb11426_SliceExprModel> _151825_model = jule::new_ptr<_1acb11426_SliceExprModel>(_1acb11426_SliceExprModel{._field_ElemKind=_149230_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _151721_bytes.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_151721_bytes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a64aa018:;
						if (it != expr_end) {
							jule::U8 *_152224_b = it;
							{
								jule::Ptr<_1ddeb4b1c_Const> _152329_bc = static__1ddeb52e3_NewU64(static_cast<jule::U64>(static_cast<jule::U64>((*(_152224_b)))));;
								_152329_bc.get()._field_Kind=_150713_prim.get()._field_Kind;
								{ jule::Slice<jule::Any> &__jule_push_dest = _151825_model.get()._field_Elems; __jule_push_dest.push(jule::Any(_152329_bc, &__jule_any_type19)); };
							}
							_iter_next_1a64aa018:;
							++it;
							goto _iter_begin_1a64aa018;
						}
						_iter_end_1a64aa018:;
					};
					_149248_d.get()._field_Model=jule::Any(_151825_model, &__jule_any_type82);
					_149248_d.get()._field_Decl=true;
				}
			}
			else if (_1accad705_IsI32(_150713_prim.ptr())) {
				_case_begin_1a64a8a0b:;
				{
					jule::Slice<jule::I32> _153021_runes = static_cast<jule::Slice<jule::I32>>(_1ddeb6b52_ReadStr(_149313_c.ptr()));;
					jule::Ptr<_1acb11426_SliceExprModel> _153125_model = jule::new_ptr<_1acb11426_SliceExprModel>(_1acb11426_SliceExprModel{._field_ElemKind=_149230_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _153021_runes.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_153021_runes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a64ac955:;
						if (it != expr_end) {
							jule::I32 *_153524_r = it;
							{
								jule::Ptr<_1ddeb4b1c_Const> _153629_rc = static__1ddeb504b_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_153524_r)))));;
								_153629_rc.get()._field_Kind=_150713_prim.get()._field_Kind;
								{ jule::Slice<jule::Any> &__jule_push_dest = _153125_model.get()._field_Elems; __jule_push_dest.push(jule::Any(_153629_rc, &__jule_any_type19)); };
							}
							_iter_next_1a64ac955:;
							++it;
							goto _iter_begin_1a64ac955;
						}
						_iter_end_1a64ac955:;
					};
					_149248_d.get()._field_Model=jule::Any(_153125_model, &__jule_any_type82);
					_149248_d.get()._field_Decl=true;
				}
			}
			_match_end_1a64a8874:;
		};
	};
}



inline void _1acc880b4_castStr(_1acc78e73_Eval* _self_, jule::Ptr<_1abd5dc4b_Data> _154630_d, jule::Ptr<_2097d15d8_Token> _154640_errorToken) {
	if ((_1acca7b0b_Enum(_154630_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1acb36b88_Enum> _154821_e = _1acca7b0b_Enum(_154630_d.get()._field_Kind.ptr());;
		if (((_1acca73be_Prim(_154821_e.get()._field_Kind.get()._field_Kind.ptr()) != nullptr) && _1accb0608_IsStr(_1acca73be_Prim(_154821_e.get()._field_Kind.get()._field_Kind.ptr()).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1ddeb4b1c_Const> _155413_c = _154630_d.get()._field_Constant;;
	_154630_d.get()._field_Constant=nullptr;
	if ((_1acca73be_Prim(_154630_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1accac407_Prim> _155717_prim = _1acca73be_Prim(_154630_d.get()._field_Kind.ptr());;
		if (((!(_1accadbcd_IsU8(_155717_prim.ptr()))) && (!(_1accad705_IsI32(_155717_prim.ptr()))))) {
			_1acc79490_pushErr(_self_, _154640_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_1acca5059_Str(_154630_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return;;
		};
		if ((_155413_c != nullptr)) {
			{
				
				if (_1accadbcd_IsU8(_155717_prim.ptr())) {
					_case_begin_1a64b353d:;
					{
						_154630_d.get()._field_Constant=static__1ddeb5832_NewStr(jule::Str::from_byte(static_cast<jule::U8>(_1ddeb738e_AsU64(_155413_c.ptr()))));
						_154630_d.get()._field_Model=jule::Any(_154630_d.get()._field_Constant, &__jule_any_type19);
						_154630_d.get()._field_Decl=true;
					}
				}
				else if (_1accad705_IsI32(_155717_prim.ptr())) {
					_case_begin_1a64b35b5:;
					{
						_154630_d.get()._field_Constant=static__1ddeb5832_NewStr(jule::Str::from_rune(static_cast<jule::I32>(_1ddeb712a_AsI64(_155413_c.ptr()))));
						_154630_d.get()._field_Model=jule::Any(_154630_d.get()._field_Constant, &__jule_any_type19);
						_154630_d.get()._field_Decl=true;
					}
				}
				_match_end_1a64b342d:;
			};
		};
		return;;
	};
	jule::Ptr<_1accb15b5_Slc> _157817_s = _1acca8348_Slc(_154630_d.get()._field_Kind.ptr());;
	if ((_157817_s == nullptr)) {
		_1acc79490_pushErr(_self_, _154640_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_1acca5059_Str(_154630_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return;;
	};
	jule::Ptr<_1acca4ba2_TypeKind> _158417_t = _157817_s.get()._field_Elem;;
	jule::Ptr<_1accac407_Prim> _158513_prim = _1acca73be_Prim(_158417_t.ptr());;
	if (((_158513_prim == nullptr) || ((!(_1accadbcd_IsU8(_158513_prim.ptr()))) && (!(_1accad705_IsI32(_158513_prim.ptr())))))) {
		_1acc79490_pushErr(_self_, _154640_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_1acca5059_Str(_154630_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return;;
	};
}



inline void _1acc8847c_castInt(_1acc78e73_Eval* _self_, jule::Ptr<_1acca4ba2_TypeKind> _159230_t, jule::Ptr<_1abd5dc4b_Data> _159248_d, jule::Ptr<_2097d15d8_Token> _159258_errorToken) {
	if (_1abd5e5ba_IsConst(_159248_d.ptr())) {
		jule::Ptr<_1accac407_Prim> _159417_prim = _1acca73be_Prim(_159230_t.ptr());;
		{
			
			if (_1ddeb39b7_IsSigInt(_159417_prim.get()._field_Kind)) {
				_case_begin_1a64b9ad8:;
				{
					_1ddeb7878_SetI64(_159248_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1ddeb712a_AsI64(_159248_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1ddeb3ca3_IsUnsigInt(_159417_prim.get()._field_Kind)) {
				_case_begin_1a64b9b60:;
				{
					_1ddeb7aed_SetU64(_159248_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1ddeb738e_AsU64(_159248_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1a64b9a2d:;
		};
	} else {
		_159248_d.get()._field_Constant=nullptr;
	};
	if ((_1acca7b0b_Enum(_159248_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1acb36b88_Enum> _160617_e = _1acca7b0b_Enum(_159248_d.get()._field_Kind.ptr());;
		if (_1ddeb4611_IsNum(_1acca5059_Str(_160617_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1acca7633_Sptr(_159248_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1accac407_Prim> _161317_prim = _1acca73be_Prim(_159230_t.ptr());;
		if ((!(_1accb0130_IsUintptr(_161317_prim.ptr())))) {
			_1acc79490_pushErr(_self_, _159258_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_159248_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1acca5059_Str(_159230_t.ptr()), &__jule_any_type5)}));
		};
		return;;
	};
	if ((_1acca7897_Ptr(_159248_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1accac407_Prim> _162017_prim = _1acca73be_Prim(_159230_t.ptr());;
		if (_1accb0130_IsUintptr(_162017_prim.ptr())) {
		} else if ((!(_1acc79dca_isUnsafe(_self_)))) {
			_1acc79490_pushErr(_self_, _159258_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1accac407_Prim> _162913_prim = _1acca73be_Prim(_159248_d.get()._field_Kind.ptr());;
	if (((_162913_prim != nullptr) && _1ddeb4611_IsNum(_1accac737_Str(_162913_prim.ptr())))) {
		return;;
	};
	_1acc79490_pushErr(_self_, _159258_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_159248_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1acca5059_Str(_159230_t.ptr()), &__jule_any_type5)}));
}



inline void _1acc88845_castNum(_1acc78e73_Eval* _self_, jule::Ptr<_1acca4ba2_TypeKind> _163730_t, jule::Ptr<_1abd5dc4b_Data> _163748_d, jule::Ptr<_2097d15d8_Token> _163758_errorToken) {
	if (_1abd5e5ba_IsConst(_163748_d.ptr())) {
		jule::Ptr<_1accac407_Prim> _163917_prim = _1acca73be_Prim(_163730_t.ptr());;
		{
			
			if (_1ddeb4369_IsFloat(_163917_prim.get()._field_Kind)) {
				_case_begin_1a64c30a8:;
				{
					_1ddeb836d_SetF64(_163748_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1ddeb7603_AsF64(_163748_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1ddeb39b7_IsSigInt(_163917_prim.get()._field_Kind)) {
				_case_begin_1a64c3130:;
				{
					_1ddeb7878_SetI64(_163748_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1ddeb712a_AsI64(_163748_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1ddeb3ca3_IsUnsigInt(_163917_prim.get()._field_Kind)) {
				_case_begin_1a64c31a7:;
				{
					_1ddeb7aed_SetU64(_163748_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1ddeb738e_AsU64(_163748_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1a64c2edc:;
		};
	} else {
		_163748_d.get()._field_Constant=nullptr;
	};
	if ((_1acca7b0b_Enum(_163748_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1acb36b88_Enum> _165317_e = _1acca7b0b_Enum(_163748_d.get()._field_Kind.ptr());;
		if (_1ddeb4611_IsNum(_1acca5059_Str(_165317_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1accac407_Prim> _165913_prim = _1acca73be_Prim(_163748_d.get()._field_Kind.ptr());;
	if (((_165913_prim != nullptr) && _1ddeb4611_IsNum(_1accac737_Str(_165913_prim.ptr())))) {
		return;;
	};
	_1acc79490_pushErr(_self_, _163758_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_163748_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1acca5059_Str(_163730_t.ptr()), &__jule_any_type5)}));
}



inline void _1acc88c0d_castPrim(_1acc78e73_Eval* _self_, jule::Ptr<_1acca4ba2_TypeKind> _166731_t, jule::Ptr<_1abd5dc4b_Data> _166749_d, jule::Ptr<_2097d15d8_Token> _166759_errorToken) {
	jule::Ptr<_1accac407_Prim> _166813_prim = _1acca73be_Prim(_166731_t.ptr());;
	{
		
		if (_1accb086c_IsAny(_166813_prim.ptr())) {
			_case_begin_1a64c8696:;
			{
				_166749_d.get()._field_Constant=nullptr;
			}
		}
		else if (_1accb0608_IsStr(_166813_prim.ptr())) {
			_case_begin_1a64c8b5d:;
			{
				_1acc880b4_castStr(_self_, _166749_d, _166759_errorToken);
			}
		}
		else if (_1ddeb404a_IsInt(_1accac737_Str(_166813_prim.ptr()))) {
			_case_begin_1a64c8bc4:;
			{
				_1acc8847c_castInt(_self_, _166731_t, _166749_d, _166759_errorToken);
			}
		}
		else if (_1ddeb4611_IsNum(_1accac737_Str(_166813_prim.ptr()))) {
			_case_begin_1a64c8c4b:;
			{
				_1acc88845_castNum(_self_, _166731_t, _166749_d, _166759_errorToken);
			}
		}
		else {
			_case_begin_1a64c8ae7:;
			{
				_1acc79490_pushErr(_self_, _166759_errorToken, jule::Str("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_166731_t.ptr()), &__jule_any_type5)}));
			}
		}
		_match_end_1a64c8a81:;
	};
}



inline void _1acc8902c_castConstant(_1acc78e73_Eval* _self_, jule::Ptr<_1acca4ba2_TypeKind>* _168436_t, jule::Ptr<_1abd5dc4b_Data>* _168455_d) {
	if ((((*(_168455_d)) == nullptr) || (!(_1abd5e5ba_IsConst((*(_168455_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1accac407_Prim> _168813_prim = _1acca73be_Prim((*(_168436_t)).ptr());;
	_1acca1682_castConstByType(&(_168813_prim.get()._field_Kind), _168455_d);
	(*(_168455_d)).get()._field_Model=jule::Any((*(_168455_d)).get()._field_Constant, &__jule_any_type19);
}



inline void _1acc893e5_castTypeEnum(_1acc78e73_Eval* _self_, jule::Ptr<_1acca4ba2_TypeKind>* _169336_t, jule::Ptr<_1abd5dc4b_Data>* _169355_d, jule::Ptr<_2097d15d8_Token>* _169370_errorToken) {
	jule::I64 _169413_n = (*(_self_))._field_s.get()._field_errors.len();;
	if ((!(_1abcee6e2_checkTypeCompatibility((*(_self_))._field_s, &((*(_169355_d)).get()._field_Kind), _169336_t, _169370_errorToken)))) {
		(*(_self_))._field_s.get()._field_errors=(*(_self_))._field_s.get()._field_errors.slice(0LL, _169413_n);
		_1acc79490_pushErr(_self_, (*(_169370_errorToken)), jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str((*(_169355_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1acca5059_Str((*(_169336_t)).ptr()), &__jule_any_type5)}));
	};
	(*(_169355_d)).get()._field_Constant=nullptr;
}



inline void _1acc897ad_castTypeEnumT(_1acc78e73_Eval* _self_, jule::Ptr<_1acca4ba2_TypeKind>* _170237_t, jule::Ptr<_1abd5dc4b_Data>* _170256_d, jule::Ptr<_2097d15d8_Token>* _170271_errorToken) {
	jule::I64 _170313_n = (*(_self_))._field_s.get()._field_errors.len();;
	if ((!(_1abcee6e2_checkTypeCompatibility((*(_self_))._field_s, _170237_t, &((*(_170256_d)).get()._field_Kind), _170271_errorToken)))) {
		(*(_self_))._field_s.get()._field_errors=(*(_self_))._field_s.get()._field_errors.slice(0LL, _170313_n);
		_1acc79490_pushErr(_self_, (*(_170271_errorToken)), jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str((*(_170256_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1acca5059_Str((*(_170237_t)).ptr()), &__jule_any_type5)}));
	};
	(*(_170256_d)).get()._field_Constant=nullptr;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc89c0e_evalCastByTypeNData(_1acc78e73_Eval* _self_, jule::Ptr<_1acca4ba2_TypeKind> _171142_t, jule::Ptr<_1abd5dc4b_Data> _171160_d, jule::Ptr<_2097d15d8_Token> _171174_errorToken) {
	if (((_171160_d != nullptr) && _171160_d.get()._field_Decl)) {
		_1acc79490_pushErr(_self_, _171174_errorToken, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_1abd5e0e2_IsNil(_171160_d.ptr())) {
			_case_begin_1a64d43e9:;
			{
				if ((!(_1acca691d_NilCompatible(_171142_t.ptr())))) {
					_1acc79490_pushErr(_self_, _171174_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("<nil>", 5), &__jule_any_type5),jule::Any(_1acca5059_Str(_171142_t.ptr()), &__jule_any_type5)}));
				};
				_171160_d.get()._field_Constant=nullptr;
			}
		}
		else if (((_1acca73be_Prim(_171160_d.get()._field_Kind.ptr()) != nullptr) && _1accb086c_IsAny(_1acca73be_Prim(_171160_d.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1a64d3b35:;
			{
				if ((_1acca7b0b_Enum(_171142_t.ptr()) != nullptr)) {
					_1acc79490_pushErr(_self_, _171174_errorToken, jule::Str("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
					_1acc797ae_pushSuggestion(_self_, jule::Str("try cast to type of enum fields instead of enum", 47), jule::Slice<jule::Any>());
				} else if ((_1acca7d70_TypeEnum(_171142_t.ptr()) != nullptr)) {
					_1acc79490_pushErr(_self_, _171174_errorToken, jule::Str("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
				};
				_171160_d.get()._field_Constant=nullptr;
			}
		}
		else if ((_1acca7d70_TypeEnum(_171160_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a64d3937:;
			{
				_1acc893e5_castTypeEnum(_self_, &(_171142_t), &(_171160_d), &(_171174_errorToken));
			}
		}
		else if ((_1acca7d70_TypeEnum(_171142_t.ptr()) != nullptr)) {
			_case_begin_1a64d399d:;
			{
				_1acc897ad_castTypeEnumT(_self_, &(_171142_t), &(_171160_d), &(_171174_errorToken));
			}
		}
		else if ((_1acca7897_Ptr(_171142_t.ptr()) != nullptr)) {
			_case_begin_1a64d453c:;
			{
				_1acc8714b_castPtr(_self_, _171142_t, _171160_d, _171174_errorToken);
			}
		}
		else if ((_1acca7633_Sptr(_171142_t.ptr()) != nullptr)) {
			_case_begin_1a64d45a3:;
			{
				_1acc878cc_castRef(_self_, _171142_t, _171160_d, _171174_errorToken);
			}
		}
		else if ((_1acca8348_Slc(_171142_t.ptr()) != nullptr)) {
			_case_begin_1a64d4619:;
			{
				_1acc87c95_castSlc(_self_, _171142_t, _171160_d, _171174_errorToken);
			}
		}
		else if ((_1acca8821_Struct(_171142_t.ptr()) != nullptr)) {
			_case_begin_1a64d4680:;
			{
				_1acc87514_castStruct(_self_, _171142_t, _171160_d, _171174_errorToken);
			}
		}
		else if ((_1acca73be_Prim(_171142_t.ptr()) != nullptr)) {
			_case_begin_1a64d46e6:;
			{
				_1acc88c0d_castPrim(_self_, _171142_t, _171160_d, _171174_errorToken);
				_1acc8902c_castConstant(_self_, &(_171142_t), &(_171160_d));
			}
		}
		else {
			_case_begin_1a64d3052:;
			{
				_1acc79490_pushErr(_self_, _171174_errorToken, jule::Str("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_171142_t.ptr()), &__jule_any_type5)}));
				_171160_d=nullptr;
			}
		}
		_match_end_1a64d3184:;
	};
	if ((_171160_d == nullptr)) {
		return nullptr;;
	};
	_171160_d.get()._field_Mutable=(_171160_d.get()._field_Mutable || ((!(_1acca6445_Mutable(_171160_d.get()._field_Kind.ptr()))) && _1acca6445_Mutable(_171142_t.ptr())));
	if (((!(_171160_d.get()._field_Decl)) && ((_1acca7b0b_Enum(_171160_d.get()._field_Kind.ptr()) == nullptr) || (!(_1acca5367_Equal(_1acca7b0b_Enum(_171160_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind, _171142_t)))))) {
		_1acca0b48_applyCastKind(&(_171160_d), &(_171142_t));
		_171160_d.get()._field_Model.cast_ptr<_1acb106bc_CastingExprModel>(&__jule_any_type98).get()._field_Token=_171174_errorToken;
	} else {
		_171160_d.get()._field_Kind=_171142_t;
	};
	_171160_d.get()._field_Decl=false;
	_171160_d.get()._field_Lvalue=false;
	_171160_d.get()._field_untyped=false;
	if (_1abd5e5ba_IsConst(_171160_d.ptr())) {
		_171160_d.get()._field_Constant.get()._field_Kind=_1acca73be_Prim(_171142_t.ptr()).get()._field_Kind;
	};
	return _171160_d;;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc8a160_evalCastT(jule::Ptr<_1acc78e73_Eval> _self_, jule::Ptr<_1acca4ba2_TypeKind>* _178234_t, jule::Ptr<_1acadb456_Expr>* _178253_e, jule::Ptr<_2097d15d8_Token>* _178268_et) {
	jule::Ptr<_1acca4ba2_TypeKind> _178317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_178317_prefix;
	});;
	if ((_1acca8348_Slc((*(_178234_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*(_178253_e)).get()._field_Kind };
			
			if (_match_expr.type == &__jule_any_type99) {
				_case_begin_1a64e1109:;
				{
					_self_.get()._field_prefix=(*(_178234_t));
				}
			}
			_match_end_1a64e1060:;
		};
	};
	jule::Ptr<_1abd5dc4b_Data> _179217_d = _1acc95984_evalExpr(_self_, (*(_178253_e)));;
	if (((_179217_d == nullptr) || (_self_.get()._field_prefix != nullptr))) {
		return _179217_d;;
	};
	return _1acc89c0e_evalCastByTypeNData(_self_.ptr(), (*(_178234_t)), _179217_d, (*(_178268_et)));;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc8a46d_evalCast(jule::Ptr<_1acc78e73_Eval> _self_, jule::Ptr<_1acaddeb4_CastExpr> _179932_c) {
	jule::Ptr<_1accaba55_TypeSymbol> _180017_t = _1acb29472_buildType(_179932_c.get()._field_Kind);;
	jule::Bool _180113_ok = _1abcec613_checkType(_self_.get()._field_s, &(_180017_t), _self_.get()._field_lookup);;
	if ((!(_180113_ok))) {
		return nullptr;;
	};
	return _1acc8a160_evalCastT(_self_, &(_180017_t.get()._field_Kind), &(_179932_c.get()._field_Expr), &(_179932_c.get()._field_Kind.get()._field_Token));;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc8a77b_evalNsSelection(_1acc78e73_Eval* _self_, jule::Ptr<_1acade36b_NsSelectionExpr> _180834_s) {
	jule::Str _180913_path = _1accc0294_buildLinkPathByTokens(&(_180834_s.get()._field_Ns));;
	jule::Ptr<_1abcdb39e_ImportInfo> _181017_imp = _1accc2ecd_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1accc1493_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1abcdb39e_ImportInfo>)>([=](jule::Ptr<_1abcdb39e_ImportInfo> _181052_imp) mutable -> jule::Bool {
		if (((_180834_s.get()._field_Ns.len() == 1LL) && (_181052_imp.get()._field_Alias == _180913_path))) {
			return true;;
		};
		return ((_181052_imp.get()._field_LinkPath == _180913_path) && _1abcddbdc_isAccessibleViaSelection(_181052_imp.ptr()));;
	}));;
	if ((_181017_imp == nullptr)) {
		_1acc79490_pushErr(_self_, _180834_s.get()._field_Ns[0LL], jule::Str("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_180913_path, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Trait<_1accc2ecd_Lookup> _182217_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1accc2ecd_Lookup>(_181017_imp, 1);
	;
	_1acc79b66_disallowBuiltin(_self_);
	jule::Any _182717_def = _1acc7c4d7_getDef(_self_, _180834_s.get()._field_Ident.get()._field_Kind, false);;
	_1acc7998a_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_182217_lookup;
	jule::Ptr<_1abd5dc4b_Data> _183017_d = _1acc80ebe_evalDef(_self_, _182717_def, _180834_s.get()._field_Ident);;
	return _183017_d;;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc8abcc_evalStructLitExplicit(jule::Ptr<_1acc78e73_Eval> _self_, jule::Ptr<_1acb09d37_StructIns> _183445_s, jule::Slice<jule::Ptr<_1acadb456_Expr>> _183513_exprs, jule::Ptr<_2097d15d8_Token> _183533_errorToken) {
	jule::Bool _183613_ok = _1abce839a_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_183445_s.get()._field_Decl.get()._field_Generics.len()), static_cast<jule::I64>(_183445_s.get()._field_Generics.len()), _183533_errorToken);;
	if ((!(_183613_ok))) {
		return nullptr;;
	};
	if (((_self_.get()._field_field != nullptr) && (_self_.get()._field_field.get()._field_Decl.get()._field_Owner == _183445_s.get()._field_Decl))) {
		_1acc79490_pushErr(_self_.ptr(), _183533_errorToken, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_183445_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
	};
	_1a64973bd_pushReference(_self_.ptr(), &(_183445_s));
	_1acc7e3c9_checkDeprecated(_self_.ptr(), &(_183445_s.get()._field_Decl.get()._field_Directives), _183533_errorToken);
	_1abd53092_structLitChecker _184917_slc = _1abd53092_structLitChecker{._field_e=_self_, ._field_errorToken=_183533_errorToken, ._field_s=_183445_s, };;
	_1abd54637_check(&_184917_slc, &(_183513_exprs));
	jule::Ptr<_1abd5dc4b_Data> _185617_d = jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(_183445_s, 0)}), ._field_Mutable=(!(_self_.get()._field_immutable)), ._field_Model=jule::Any(jule::new_ptr<_1acb0ed5e_StructLitExprModel>(_1acb0ed5e_StructLitExprModel{._field_Strct=_183445_s, ._field_Args=_184917_slc._field_args}), &__jule_any_type100), });;
	if (_183445_s.get()._field_Decl.get()._field_Binded) {
		_185617_d.get()._field_Kind.get()._field_BindIdent=_183445_s.get()._field_Decl.get()._field_Ident;
	};
	return _185617_d;;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc8aeda_evalStructLit(jule::Ptr<_1acc78e73_Eval> _self_, jule::Ptr<_1acae15c1_StructLit> _187237_lit) {
	jule::Ptr<_1accaba55_TypeSymbol> _187317_t = _1acb29472_buildType(_187237_lit.get()._field_Kind);;
	jule::Bool _187413_ok = _1abcec613_checkType(_self_.get()._field_s, &(_187317_t), _self_.get()._field_lookup);;
	if ((!(_187413_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1acb09d37_StructIns> _187917_s = _1acca8821_Struct(_187317_t.get()._field_Kind.ptr());;
	if ((_187917_s == nullptr)) {
		if ((_1acca7633_Sptr(_187317_t.get()._field_Kind.ptr()) != nullptr)) {
			_187917_s=_1acca8821_Struct(_1acca7633_Sptr(_187317_t.get()._field_Kind.ptr()).get()._field_Elem.ptr());
			if ((_187917_s != nullptr)) {
				goto _julec_label_eval;
			};
		};
		_1acc79490_pushErr(_self_.ptr(), _187237_lit.get()._field_Kind.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_eval:;
	jule::Ptr<_1abd5dc4b_Data> _189217_d = _1acc8abcc_evalStructLitExplicit(_self_, _187917_s, _187237_lit.get()._field_Exprs, _187237_lit.get()._field_Kind.get()._field_Token);;
	if ((_1acca7633_Sptr(_187317_t.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1acb0ed5e_StructLitExprModel> _189421_model = _189217_d.get()._field_Model.cast_ptr<_1acb0ed5e_StructLitExprModel>(&__jule_any_type100);;
		_1acc9e509_makeStructLitAlloc(&(_189217_d), &(_189421_model));
	};
	return _189217_d;;
}



inline _1accb5ee3_typeChecker _1acc8b24e_typeChecker(_1acc78e73_Eval* _self_) {
	return _1abceb502_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc8b55c_evalType(_1acc78e73_Eval* _self_, jule::Ptr<_1acad72cb_TypeDecl> _190431_t) {
	jule::Ptr<_1accaba55_TypeSymbol> _190517_tk = _1acb29472_buildType(_190431_t);;
	jule::Bool _190613_ok = _1abcec613_checkType((*(_self_))._field_s, &(_190517_tk), (*(_self_))._field_lookup);;
	if ((!(_190613_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_190517_tk.get()._field_Kind, ._field_Model=jule::Any(_190517_tk.get()._field_Kind, &__jule_any_type89), ._field_Decl=true, });;
}



inline void _1acc8b87b_callTypeFn(jule::Ptr<_1acc78e73_Eval> _self_, jule::Ptr<_1acae036c_FnCallExpr>* _191735_fc, jule::Ptr<_1abd5dc4b_Data>* _191757_d) {
	if (((*(_191735_fc)).get()._field_Args.len() < 1LL)) {
		_1acc79490_pushErr(_self_.ptr(), (*(_191735_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1), &__jule_any_type5)}));
	} else if (((*(_191735_fc)).get()._field_Args.len() > 1LL)) {
		_1acc79490_pushErr(_self_.ptr(), (*(_191735_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str((*(_191757_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
	} else if ((*(_191735_fc)).get()._field_IsCo) {
		_1acc79490_pushErr(_self_.ptr(), (*(_191735_fc)).get()._field_Token, jule::Str("concurrent calls are not allowed for type-cast calls", 52), jule::Slice<jule::Any>());
		(*(_191757_d))=nullptr;
		return;;
	} else if (((*(_191735_fc)).get()._field_Exception != nullptr)) {
		_1acc79490_pushErr(_self_.ptr(), (*(_191735_fc)).get()._field_Token, jule::Str("exceptionals are not supported for type-cast call", 49), jule::Slice<jule::Any>());
		(*(_191757_d))=nullptr;
		return;;
	};
	if (((*(_191735_fc)).get()._field_Args.len() > 0LL)) {
		jule::Ptr<_1acadb456_Expr> _193321_arg = (*(_191735_fc)).get()._field_Args[0LL];;
		(*(_191757_d))=_1acc8a160_evalCastT(_self_, &((*(_191757_d)).get()._field_Kind), &(_193321_arg), &(_193321_arg.get()._field_Token));
		return;;
	};
	if (((*(_191757_d)) != nullptr)) {
		(*(_191757_d)).get()._field_Decl=false;
	};
}



inline void _1acc8bb9a_callBuiltinFn(jule::Ptr<_1acc78e73_Eval> _self_, jule::Ptr<_1acae036c_FnCallExpr>* _194338_fc, jule::Ptr<_1abd5dc4b_Data>* _194360_d) {
	if ((!(_1acae06d0_Unhandled((*(_194338_fc)).ptr())))) {
		_1acc79490_pushErr(_self_.ptr(), (*(_194338_fc)).get()._field_Token, jule::Str("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	(*(_194360_d))=_1acca85ac_Fn((*(_194360_d)).get()._field_Kind.ptr()).get()._field_caller(&(_self_), _194338_fc, _194360_d);
	if (((*(_194360_d)) == nullptr)) {
		return;;
	};
	(*(_194360_d)).get()._field_Mutable=true;
}



inline void _1acc8bedb_checkFnOfConcurrentCall(_1acc78e73_Eval* _self_, jule::Ptr<_1acb24d85_FnIns>* _195543_f, jule::Ptr<_2097d15d8_Token> _195554_errorToken) {
	if (_1acc79dca_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*(_195543_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a650ea40:;
		if (it != expr_end) {
			jule::Ptr<_1acb23eb6_ParamIns> *_195916_p = it;
			{
				if (_1acb20e80_IsSelf((*(_195916_p)).get()._field_Decl.ptr())) {
					if ((!(_1acb211e4_IsRef((*(_195916_p)).get()._field_Decl.ptr())))) {
						_1acc79490_pushErr(_self_, _195554_errorToken, jule::Str("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97), jule::Slice<jule::Any>());
						_1acc797ae_pushSuggestion(_self_, jule::Str("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99), jule::Slice<jule::Any>());
					};
				};
				if ((*(_195916_p)).get()._field_Decl.get()._field_Reference) {
					_1acc79490_pushErr(_self_, _195554_errorToken, jule::Str("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96), jule::Slice<jule::Any>());
					_1acc797ae_pushSuggestion(_self_, jule::Str("use Unsafe Jule with unsafe {} scope to make concurrent call", 60), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1a650ea40:;
			++it;
			goto _iter_begin_1a650ea40;
		}
		_iter_end_1a650ea40:;
	};
}



inline void _1acc8c3d7_processExceptionalHandler(_1acc78e73_Eval* _self_, jule::Ptr<_1acb24d85_FnIns>* _197449_f, jule::Ptr<_1acae036c_FnCallExpr>* _197465_fc, jule::Ptr<_1abd5dc4b_Data>* _197487_d) {
	jule::Bool _197513_resultNeeded = ((!(_1acb22646_IsVoid((*(_197449_f)).get()._field_Decl.ptr()))) && ((*(_self_))._field_arg || (!((*(_self_))._field_ignored))));;
	jule::Ptr<_1abcc4563_scopeChecker> _197617_csc = nullptr;;
	jule::Ptr<_1abcbc935_Scope> _197717_ch = nullptr;;
	jule::Ptr<_1acb1106e_FnCallExprModel> _197917_model = (*(_197487_d)).get()._field_Model.cast_ptr<_1acb1106e_FnCallExprModel>(&__jule_any_type35);;
	jule::Ptr<_1abcc4563_scopeChecker> _198317_sc = (*(_self_))._field_lookup.cast_ptr<_1abcc4563_scopeChecker>(0);;
	_197617_csc=_1abcd471b_newChildChecker(_198317_sc);
	if (_197513_resultNeeded) {
		_197617_csc.get()._field_result=(*(_197449_f));
	};
	_197717_ch=_1abcc8b3e_getChild(_198317_sc.ptr());
	(*(_197465_fc)).get()._field_Exception.get()._field_Parent=_198317_sc.get()._field_tree;
	{ jule::Slice<jule::Ptr<_1abd1497c_Var>> &__jule_push_dest = _197617_csc.get()._field_table.get()._field_Vars; __jule_push_dest.push(_1acc9e84a_buildErrorVar(&(_197717_ch), _197465_fc)); };
	_1abcc9007_checkChildSsc(_198317_sc, &((*(_197465_fc)).get()._field_Exception), &(_197717_ch), &(_197617_csc));
	_197917_model.get()._field_Assigned=_197513_resultNeeded;
	_197917_model.get()._field_Except=_197717_ch;
	if ((_197513_resultNeeded && (_197617_csc.get()._field_result != nullptr))) {
		_1acc79490_pushErr(_self_, (*(_197465_fc)).get()._field_Token, jule::Str("exceptional returns an expression, therefore else block should return expression", 80), jule::Slice<jule::Any>());
	};
}



inline void _1acc8c717_callFn(jule::Ptr<_1acc78e73_Eval> _self_, jule::Ptr<_1acae036c_FnCallExpr>* _200131_fc, jule::Ptr<_1abd5dc4b_Data>* _200153_d) {
	jule::Ptr<_1acb24d85_FnIns> _200217_f = _1acca85ac_Fn((*(_200153_d)).get()._field_Kind.ptr());;
	if (_1acb2621b_IsBuiltin(_200217_f.ptr())) {
		_1acc8bb9a_callBuiltinFn(_self_, _200131_fc, _200153_d);
		return;;
	};
	if ((_1acc7a13e_isGlobal(_self_.ptr()) && _200217_f.get()._field_Decl.get()._field_Exceptional)) {
		_1acc79490_pushErr(_self_.ptr(), (*(_200131_fc)).get()._field_Token, jule::Str("exceptionals are not allowed in global scope", 44), jule::Slice<jule::Any>());
		_1acc797ae_pushSuggestion(_self_.ptr(), jule::Str("wrap exceptional with a non-exceptional function", 48), jule::Slice<jule::Any>());
		(*(_200153_d))=nullptr;
		return;;
	};
	if (((!(_1acb228aa_IsMethod(_200217_f.get()._field_Decl.ptr()))) && _1accbe3e7_hasDirective(&(_200217_f.get()._field_Decl.get()._field_Directives), jule::Str("test", 4)))) {
		_1acc79490_pushErr(_self_.ptr(), (*(_200131_fc)).get()._field_Token, jule::Str("you cannot call test functions", 30), jule::Slice<jule::Any>());
		(*(_200153_d))=nullptr;
		return;;
	};
	if (((((!((*(_200153_d)).get()._field_Mutable)) && _1acb228aa_IsMethod(_200217_f.get()._field_Decl.ptr())) && (!(_200217_f.get()._field_Decl.get()._field_Statically))) && _200217_f.get()._field_Decl.get()._field_Params[0LL].get()._field_Mutable)) {
		_1acc79490_pushErr(_self_.ptr(), (*(_200131_fc)).get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	} else if (((!(_1acc79dca_isUnsafe(_self_.ptr()))) && _200217_f.get()._field_Decl.get()._field_Unsafety)) {
		_1acc79490_pushErr(_self_.ptr(), (*(_200131_fc)).get()._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	jule::Bool _202617_dynamicAnnotation = (((_200217_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_200217_f.get()._field_Generics.len() == 0LL)) && (_200217_f.get()._field_Params.len() > 0LL));;
	if (_202617_dynamicAnnotation) {
		_200217_f.get()._field_Generics=jule::Slice<jule::Ptr<_1acca3420_InsGeneric>>::alloc(_200217_f.get()._field_Decl.get()._field_Generics.len(), _200217_f.get()._field_Decl.get()._field_Generics.len());
	} else if ((_200217_f.get()._field_Generics.len() != _200217_f.get()._field_Decl.get()._field_Generics.len())) {
		_1abce839a_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_200217_f.get()._field_Decl.get()._field_Generics.len()), static_cast<jule::I64>(_200217_f.get()._field_Generics.len()), (*(_200131_fc)).get()._field_Token);
		(*(_200153_d))=nullptr;
		return;;
	};
	jule::Ptr<_1abce4671_Sema> _203517_old = _self_.get()._field_s;;
	if ((_200217_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		_self_.get()._field_s=_200217_f.get()._field_Decl.get()._field_Owner.get()._field_sema;
	};
	__JULE_DEFER({
		if ((_203517_old != _self_.get()._field_s)) {
			(_203517_old.get()._field_errors).append(_self_.get()._field_s.get()._field_errors);;
			_self_.get()._field_s.get()._field_errors=nullptr;
		};
		_self_.get()._field_s=_203517_old;
	});;
	_1abd506bb_fnCallArgChecker _204817_fcac = _1abd506bb_fnCallArgChecker{._field_e=_self_, ._field_args=(*(_200131_fc)).get()._field_Args, ._field_errorToken=(*(_200131_fc)).get()._field_Token, ._field_dynamicAnnotation=_202617_dynamicAnnotation, };;
	if ((!(_202617_dynamicAnnotation))) {
		if ((!(_200217_f.get()._field_reloaded))) {
			jule::Bool _205721_ok = _1abd0165b_reloadFnInsTypes(_self_.get()._field_s, _200217_f);;
			_200217_f.get()._field_reloaded=true;
			if ((!(_205721_ok))) {
				(*(_200153_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_1acb24d85_FnIns> _206421_existInstance = _1acb23b0e_appendInstance(_200217_f.get()._field_Decl.ptr(), &(_200217_f));;
		if ((_206421_existInstance != nullptr)) {
			_200217_f=_206421_existInstance;
		};
	} else if ((!(_1abd00050_buildFnNonGenericTypeKinds(_self_.get()._field_s, &(_200217_f), &(_204817_fcac._field_ignored))))) {
		(*(_200153_d))=nullptr;
		return;;
	};
	_204817_fcac._field_f=_200217_f;
	jule::Bool _207517_ok = false;;
	if ((_200217_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		({
			jule::Ptr<_1abce4671_Sema> ___jule_assign_arg = _self_.get()._field_s;
			jule::Ptr<_1abce4671_Sema> _1___jule_assign_arg = _203517_old;
			_203517_old = ___jule_assign_arg;
			_self_.get()._field_s = _1___jule_assign_arg;
		});
		_207517_ok=_1abd52a53_check(&_204817_fcac);
		({
			jule::Ptr<_1abce4671_Sema> ___jule_assign_arg = _self_.get()._field_s;
			jule::Ptr<_1abce4671_Sema> _1___jule_assign_arg = _203517_old;
			_203517_old = ___jule_assign_arg;
			_self_.get()._field_s = _1___jule_assign_arg;
		});
	} else {
		_207517_ok=_1abd52a53_check(&_204817_fcac);
	};
	if (_202617_dynamicAnnotation) {
		if ((!(_207517_ok))) {
			(*(_200153_d))=nullptr;
			return;;
		};
		if ((!(_1acc85457_checkGenericFn(_self_, &(_200217_f), &((*(_200131_fc)).get()._field_Token), &((*(_200153_d)).get()._field_Model))))) {
			(*(_200153_d))=nullptr;
			return;;
		};
	};
	jule::Any _209517_callModel = (*(_200153_d)).get()._field_Model;;
	if (_1acb22646_IsVoid(_200217_f.get()._field_Decl.ptr())) {
		(*(_200153_d))=_1acca0d46_buildVoidData();
	} else {
		(*(_200153_d)).get()._field_Kind=_200217_f.get()._field_Result;
		(*(_200153_d)).get()._field_Lvalue=false;
	};
	jule::Ptr<_1acb1106e_FnCallExprModel> _210417_model = jule::new_ptr<_1acb1106e_FnCallExprModel>(_1acb1106e_FnCallExprModel{._field_Token=(*(_200131_fc)).get()._field_Token, ._field_Func=_200217_f, ._field_IsCo=(*(_200131_fc)).get()._field_IsCo, ._field_Expr=_209517_callModel, ._field_Args=_204817_fcac._field_argModels, });;
	(*(_200153_d)).get()._field_Model=jule::Any(_210417_model, &__jule_any_type35);
	(*(_200153_d)).get()._field_Mutable=true;
	if (_200217_f.get()._field_Decl.get()._field_Exceptional) {
		if ((*(_200131_fc)).get()._field_IsCo) {
			_1abce7003_pushErr(_self_.get()._field_s.ptr(), (*(_200131_fc)).get()._field_Token, jule::Str("concurrent calls not supports exceptionals", 42), jule::Slice<jule::Any>());
			_1abce7322_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63), jule::Slice<jule::Any>());
		};
		{
			
			if (_1acae06d0_Unhandled((*(_200131_fc)).ptr())) {
				_case_begin_1a652abb0:;
				{
					_1acc79490_pushErr(_self_.ptr(), (*(_200131_fc)).get()._field_Token, jule::Str("exceptionals must be handled", 28), jule::Slice<jule::Any>());
					_1acc797ae_pushSuggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47), jule::Slice<jule::Any>());
				}
			}
			else if (_1acae0944_Ignored((*(_200131_fc)).ptr())) {
				_case_begin_1a652a60a:;
				{
					goto _match_end_1a6529d02;
				}
			}
			else {
				_case_begin_1a6529a5a:;
				{
					_1acc8c3d7_processExceptionalHandler(_self_.ptr(), &(_200217_f), _200131_fc, _200153_d);
				}
			}
			_match_end_1a6529d02:;
		};
	} else if ((!(_1acae06d0_Unhandled((*(_200131_fc)).ptr())))) {
		_1acc79490_pushErr(_self_.ptr(), (*(_200131_fc)).get()._field_Token, jule::Str("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	if ((*(_200131_fc)).get()._field_IsCo) {
		_1acc8bedb_checkFnOfConcurrentCall(_self_.ptr(), &(_210417_model.get()._field_Func), (*(_200131_fc)).get()._field_Token);
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc8ca25_evalFnCall(jule::Ptr<_1acc78e73_Eval> _self_, jule::Ptr<_1acae036c_FnCallExpr> _213934_fc) {
	jule::Ptr<_1acca4ba2_TypeKind> _214017_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_214017_prefix;
	});;
	{
		auto &_match_expr{ _213934_fc.get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1a652d465:;
			{
				if (_213934_fc.get()._field_Expr.get()._field_Token.get()._field_Kind.equal("error", 5)) {
					return _1acd6e211_builtinCallerError(&(_self_), &(_213934_fc));;
				};
			}
		}
		_match_end_1a652d410:;
	};
	jule::Ptr<_1abd5dc4b_Data> _215317_d = _1acc94c4c_evalExprKind(_self_, _213934_fc.get()._field_Expr.get()._field_Kind);;
	if ((_215317_d == nullptr)) {
		return nullptr;;
	};
	if (_215317_d.get()._field_Decl) {
		_1acc8b87b_callTypeFn(_self_, &(_213934_fc), &(_215317_d));
		return _215317_d;;
	};
	if ((_1acca85ac_Fn(_215317_d.get()._field_Kind.ptr()) == nullptr)) {
		_1acc79490_pushErr(_self_.ptr(), _213934_fc.get()._field_Token, jule::Str("attempting to call a non-function", 33), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1acc8c717_callFn(_self_, &(_213934_fc), &(_215317_d));
	return _215317_d;;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc8cdcc_evalEnumStatic(_1acc78e73_Eval* _self_, jule::Ptr<_1acb36b88_Enum> _217237_enm, jule::Ptr<_2097d15d8_Token> _217249_ident) {
	jule::Ptr<_1acb36193_EnumItem> _217317_item = _1acb37705_FindItem(_217237_enm.ptr(), _217249_ident.get()._field_Kind);;
	if ((_217317_item == nullptr)) {
		_1acc79490_pushErr(_self_, _217249_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_217237_enm.get()._field_Ident, &__jule_any_type5),jule::Any(_217249_ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _1acca24b8_evalEnumStatic(&(_217237_enm), &(_217317_item));;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc8d284_evalTypeEnumStatic(_1acc78e73_Eval* _self_, jule::Ptr<_1acb38283_TypeEnum> _218041_enm, jule::Ptr<_2097d15d8_Token> _218057_ident) {
	jule::Ptr<_1acb37c00_TypeEnumItem> _218117_item = _1acb38cbc_FindItem(_218041_enm.ptr(), _218057_ident.get()._field_Kind);;
	if ((_218117_item == nullptr)) {
		_1acc79490_pushErr(_self_, _218057_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_218041_enm.get()._field_Ident, &__jule_any_type5),jule::Any(_218057_ident.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		
		if ((_1acca7b0b_Enum(_218117_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6534a65:;
			{
				return _1acc7ca6a__evalEnum(_self_, _1acca7b0b_Enum(_218117_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else if ((_1acca7d70_TypeEnum(_218117_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6535208:;
			{
				return _1acc7d230__evalTypeEnum(_self_, _1acca7d70_TypeEnum(_218117_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else if ((_1acca8821_Struct(_218117_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6534636:;
			{
				return _1acc7d8e5__evalStruct(_self_, _1acca8821_Struct(_218117_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else {
			_case_begin_1a653447c:;
			{
				jule::Ptr<_1abd5dc4b_Data> _219421_d = jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_218117_item.get()._field_Kind.get()._field_Kind, ._field_Decl=true, });;
				_219421_d.get()._field_Model=jule::Any(_219421_d.get()._field_Kind, &__jule_any_type89);
				return _219421_d;;
			}
		}
		_match_end_1a6533404:;
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc8d63b_evalStructStatic(_1acc78e73_Eval* _self_, jule::Ptr<_1acb09d37_StructIns> _220339_s, jule::Ptr<_2097d15d8_Token> _220354_ident) {
	jule::Ptr<_1abd5dc4b_Data> _220417_d = jule::new_ptr<_1abd5dc4b_Data>();;
	;
	jule::Ptr<_1acb221d4_Fn> _220817_method = _1acb0acd3_FindMethod(_220339_s.ptr(), _220354_ident.get()._field_Kind, true);;
	if ((_220817_method != nullptr)) {
		if ((!(_1abce76c9_isAccessibleDefine((*(_self_))._field_s.ptr(), _220817_method.get()._field_Public, _220817_method.get()._field_Token)))) {
			_1acc79490_pushErr(_self_, _220354_ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_220354_ident.get()._field_Kind, &__jule_any_type5)}));
			_1acc797ae_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1acb24d85_FnIns> _221521_ins = _1acb23834_instance(_220817_method);;
		_221521_ins.get()._field_Owner=_220339_s;
		_1a63e4e64_pushReference(_self_, &(_221521_ins));
		_220417_d.get()._field_Model=jule::Any(jule::new_ptr<_1acb13c86_StructStaticIdentExprModel>(_1acb13c86_StructStaticIdentExprModel{._field_Structure=_220339_s, ._field_Expr=_220417_d.get()._field_Model, ._field_Method=_221521_ins}), &__jule_any_type101);
		_220417_d.get()._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(_221521_ins, 1)});
		return _220417_d;;
	};
	jule::Ptr<_1abd1497c_Var> _222917_sttc = _1acb0b3ee_FindStatic(_220339_s.ptr(), _220354_ident.get()._field_Kind);;
	if ((_222917_sttc != nullptr)) {
		return _1acc80760_evalVar(_self_, _222917_sttc, _220354_ident);;
	};
	_1acc79490_pushErr(_self_, _220354_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_220339_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5),jule::Any(_220354_ident.get()._field_Kind, &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc8da8c_evalTraitSubIdent(_1acc78e73_Eval* _self_, jule::Ptr<_1abd5dc4b_Data> _223840_d, jule::Ptr<_1acb34405_Trait> _223854_trt, jule::Ptr<_2097d15d8_Token> _223871_ident) {
	jule::Ptr<_1acb221d4_Fn> _223917_f = _1acb352a2_FindMethod(_223854_trt.ptr(), _223871_ident.get()._field_Kind);;
	if ((_223917_f == nullptr)) {
		_1acc79490_pushErr(_self_, _223871_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_223854_trt.get()._field_Ident, &__jule_any_type5),jule::Any(_223871_ident.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(_1acb23834_instance(_223917_f), 1)}), ._field_Model=jule::Any(jule::new_ptr<_1acb13109_TraitSubIdentExprModel>(_1acb13109_TraitSubIdentExprModel{._field_Token=_223871_ident, ._field_Expr=_223840_d.get()._field_Model, ._field_Method=_223917_f, ._field_Trt=_223854_trt}), &__jule_any_type70), });;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc8e0a9_evalStructSubIdentField(_1acc78e73_Eval* _self_, jule::Ptr<_1abd5dc4b_Data>* _225847_d, jule::Ptr<_1acb09d37_StructIns>* _225862_s, jule::Ptr<_2097d15d8_Token>* _225882_tok, jule::Ptr<_1acb09342_FieldIns>* _2258100_f) {
	jule::Ptr<_1acb138e0_StructSubIdentExprModel> _225917_model = jule::new_ptr<_1acb138e0_StructSubIdentExprModel>(_1acb138e0_StructSubIdentExprModel{._field_Token=(*(_225882_tok)), ._field_Expr=jule::new_ptr<_1abd5dc4b_Data>((*((*(_225847_d))))), ._field_Field=(*(_2258100_f)), ._field_Owner=(*(_225862_s))});;
	(*(_225847_d)).get()._field_Model=jule::Any(_225917_model, &__jule_any_type71);
	(*(_225847_d)).get()._field_Kind=(*(_2258100_f)).get()._field_Kind;
	(*(_225847_d)).get()._field_Lvalue=true;
	if (((*(_2258100_f)).get()._field_Decl.get()._field_Mutable && (!((*(_225847_d)).get()._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_1a6542c82:;
				{
					jule::Ptr<_1abcc4563_scopeChecker> _227321_scope = _1abcc738a_getRoot((*(_self_))._field_lookup.cast_ptr<_1abcc4563_scopeChecker>(0));;
					(*(_225847_d)).get()._field_Mutable=((_227321_scope.get()._field_owner != nullptr) && (_227321_scope.get()._field_owner.get()._field_Owner == (*(_225862_s))));
				}
			}
			_match_end_1a6542c2c:;
		};
	};
	return (*(_225847_d));;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc8e5b5_evalStructSubIdent(_1acc78e73_Eval* _self_, jule::Ptr<_1abd5dc4b_Data> _228141_d, jule::Ptr<_1acb09d37_StructIns> _228155_s, jule::Ptr<_1acade7de_SubIdentExpr> _228174_si, jule::Bool _228193_ref) {
	jule::Ptr<_1acb09342_FieldIns> _228217_f = _1acb0b0e1_FindField(_228155_s.ptr(), _228174_si.get()._field_Ident.get()._field_Kind);;
	if ((_228217_f != nullptr)) {
		if ((!(_1abce76c9_isAccessibleDefine((*(_self_))._field_s.ptr(), _228217_f.get()._field_Decl.get()._field_Public, _228217_f.get()._field_Decl.get()._field_Token)))) {
			_1acc79490_pushErr(_self_, _228174_si.get()._field_Ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_228217_f.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
			_1acc797ae_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		return _1acc8e0a9_evalStructSubIdentField(_self_, &(_228141_d), &(_228155_s), &(_228174_si.get()._field_Ident), &(_228217_f));;
	};
	;
	jule::Ptr<_1acb221d4_Fn> _229217_m = _1acb0acd3_FindMethod(_228155_s.ptr(), _228174_si.get()._field_Ident.get()._field_Kind, false);;
	if ((_229217_m == nullptr)) {
		_1acc79490_pushErr(_self_, _228174_si.get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_228155_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5),jule::Any(_228174_si.get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	if ((!(_1abce76c9_isAccessibleDefine((*(_self_))._field_s.ptr(), _229217_m.get()._field_Public, _229217_m.get()._field_Token)))) {
		_1acc79490_pushErr(_self_, _228174_si.get()._field_Ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_229217_m.get()._field_Ident, &__jule_any_type5)}));
		_1acc797ae_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	if ((_1acb211e4_IsRef(_229217_m.get()._field_Params[0LL].ptr()) && (!(_228193_ref)))) {
		_1acc79490_pushErr(_self_, _228174_si.get()._field_Ident, jule::Str("reference method cannot use with non-reference instance", 55), jule::Slice<jule::Any>());
	};
	_1acc7e3c9_checkDeprecated(_self_, &(_229217_m.get()._field_Directives), _228174_si.get()._field_Ident);
	jule::Ptr<_1acb24d85_FnIns> _230817_ins = _1acb23834_instance(_229217_m);;
	_230817_ins.get()._field_Owner=_228155_s;
	_1a63e4e64_pushReference(_self_, &(_230817_ins));
	jule::Ptr<_1abd5dc4b_Data> _231117_model = jule::new_ptr<_1abd5dc4b_Data>((*(_228141_d)));;
	_228141_d.get()._field_Model=jule::Any(jule::new_ptr<_1acb138e0_StructSubIdentExprModel>(_1acb138e0_StructSubIdentExprModel{._field_Token=_228174_si.get()._field_Ident, ._field_Expr=_231117_model, ._field_Method=_230817_ins, ._field_Owner=_228155_s}), &__jule_any_type71);
	_228141_d.get()._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(_230817_ins, 1)});
	return _228141_d;;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc8e96c_evalSliceSubIdent(_1acc78e73_Eval* _self_, jule::Ptr<_1abd5dc4b_Data> _232240_d, jule::Ptr<_2097d15d8_Token> _232254_ident) {
	{
		auto &_match_expr{ _232254_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1a654d452:;
			{
				return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_Params=jule::Slice<jule::Ptr<_1acb23eb6_ParamIns>>::make({jule::new_ptr<_1acb23eb6_ParamIns>(_1acb23eb6_ParamIns{._field_Decl=jule::new_ptr<_1acb20897_Param>(_1acb20897_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=_1abd58130_lenKind()}),jule::new_ptr<_1acb23eb6_ParamIns>(_1acb23eb6_ParamIns{._field_Decl=jule::new_ptr<_1acb20897_Param>(_1acb20897_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=_1abd58130_lenKind()})}), ._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>(_1acd6ddc0_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_232240_d.get()._field_Mutable, ._field_Model=jule::Any(jule::new_ptr<_1acb1499b_CommonSubIdentExprModel>(_1acb1499b_CommonSubIdentExprModel{._field_ExprKind=_232240_d.get()._field_Kind, ._field_Expr=_232240_d.get()._field_Model, ._field_Token=_232254_ident, ._field_Ident=jule::Str("swap", 4)}), &__jule_any_type73), });;
			}
		}
		else {
			_case_begin_1a654d72c:;
			{
				_1acc79490_pushErr(_self_, _232254_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_232240_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_232254_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a654d4da:;
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc8ed24_evalArraySubIdent(_1acc78e73_Eval* _self_, jule::Ptr<_1abd5dc4b_Data> _235940_d, jule::Ptr<_2097d15d8_Token> _235954_ident) {
	{
		auto &_match_expr{ _235954_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1a654d92a:;
			{
				return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_Params=jule::Slice<jule::Ptr<_1acb23eb6_ParamIns>>::make({jule::new_ptr<_1acb23eb6_ParamIns>(_1acb23eb6_ParamIns{._field_Decl=jule::new_ptr<_1acb20897_Param>(_1acb20897_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=_1abd58130_lenKind()}),jule::new_ptr<_1acb23eb6_ParamIns>(_1acb23eb6_ParamIns{._field_Decl=jule::new_ptr<_1acb20897_Param>(_1acb20897_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=_1abd58130_lenKind()})}), ._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>(_1acd6ddc0_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_235940_d.get()._field_Mutable, ._field_Model=jule::Any(jule::new_ptr<_1acb1499b_CommonSubIdentExprModel>(_1acb1499b_CommonSubIdentExprModel{._field_ExprKind=_235940_d.get()._field_Kind, ._field_Expr=_235940_d.get()._field_Model, ._field_Token=_235954_ident, ._field_Ident=jule::Str("swap", 4)}), &__jule_any_type73), });;
			}
		}
		else {
			_case_begin_1a6551433:;
			{
				_1acc79490_pushErr(_self_, _235954_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_235940_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_235954_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a654d9b3:;
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc90132_evalIntTypeStatic(_1acc78e73_Eval* _self_, jule::Ptr<_2097d15d8_Token> _239636_ident) {
	;
	{
		auto &_match_expr{ _239636_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a6554e70:;
			{
				jule::Ptr<_1ddeb4b1c_Const> _240021_c = static__1ddeb504b_NewI64(static_cast<jule::I64>(_1ddead341_MaxI(jule::Str("int", 3))));;
				_240021_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd69c45_primInt, ._field_Model=jule::Any(_240021_c, &__jule_any_type19), ._field_Constant=_240021_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1a6554216:;
			{
				jule::Ptr<_1ddeb4b1c_Const> _240821_c = static__1ddeb504b_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1ddead7e7_Min(jule::Str("int", 3)))));;
				_240821_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd69c45_primInt, ._field_Model=jule::Any(_240821_c, &__jule_any_type19), ._field_Constant=_240821_c});;
			}
		}
		else {
			_case_begin_1a655449c:;
			{
				_1acc79490_pushErr(_self_, _239636_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("int", 3), &__jule_any_type5),jule::Any(_239636_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a6554403:;
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc90440_evalUintTypeStatic(_1acc78e73_Eval* _self_, jule::Ptr<_2097d15d8_Token> _242137_ident) {
	;
	{
		auto &_match_expr{ _242137_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a6557181:;
			{
				jule::Ptr<_1ddeb4b1c_Const> _242521_c = static__1ddeb52e3_NewU64(static_cast<jule::U64>(_1ddead5d8_MaxU(jule::Str("uint", 4))));;
				_242521_c.get()._field_Kind=jule::Str("uint", 4);
				return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd6997b_primUint, ._field_Model=jule::Any(_242521_c, &__jule_any_type19), ._field_Constant=_242521_c});;
			}
		}
		else {
			_case_begin_1a6557659:;
			{
				_1acc79490_pushErr(_self_, _242137_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("uint", 4), &__jule_any_type5),jule::Any(_242137_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a6557604:;
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc9074d_evalI8TypeStatic(_1acc78e73_Eval* _self_, jule::Ptr<_2097d15d8_Token> _243835_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _243835_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a6559936:;
			{
				jule::Ptr<_1ddeb4b1c_Const> _244421_c = static__1ddeb504b_NewI64(127LL);;
				_244421_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd6a11e_primI8, ._field_Model=jule::Any(_244421_c, &__jule_any_type19), ._field_Constant=_244421_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1a655abce:;
			{
				jule::Ptr<_1ddeb4b1c_Const> _245221_c = static__1ddeb504b_NewI64(-128LL);;
				_245221_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd6a11e_primI8, ._field_Model=jule::Any(_245221_c, &__jule_any_type19), ._field_Constant=_245221_c});;
			}
		}
		else {
			_case_begin_1a655a1b7:;
			{
				_1acc79490_pushErr(_self_, _243835_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i8", 2), &__jule_any_type5),jule::Any(_243835_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a655a0b8:;
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc90a5b_evalI16TypeStatic(_1acc78e73_Eval* _self_, jule::Ptr<_2097d15d8_Token> _246536_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _246536_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a655d0aa:;
			{
				jule::Ptr<_1ddeb4b1c_Const> _247121_c = static__1ddeb504b_NewI64(32767LL);;
				_247121_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd6a3d8_primI16, ._field_Model=jule::Any(_247121_c, &__jule_any_type19), ._field_Constant=_247121_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1a655e375:;
			{
				jule::Ptr<_1ddeb4b1c_Const> _247921_c = static__1ddeb504b_NewI64(-32768LL);;
				_247921_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd6a3d8_primI16, ._field_Model=jule::Any(_247921_c, &__jule_any_type19), ._field_Constant=_247921_c});;
			}
		}
		else {
			_case_begin_1a655d85d:;
			{
				_1acc79490_pushErr(_self_, _246536_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i16", 3), &__jule_any_type5),jule::Any(_246536_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a655d75e:;
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc90d69_evalI32TypeStatic(_1acc78e73_Eval* _self_, jule::Ptr<_2097d15d8_Token> _249236_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _249236_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a6561751:;
			{
				jule::Ptr<_1ddeb4b1c_Const> _249821_c = static__1ddeb504b_NewI64(2147483647LL);;
				_249821_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd6a6a2_primI32, ._field_Model=jule::Any(_249821_c, &__jule_any_type19), ._field_Constant=_249821_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1a6562a1b:;
			{
				jule::Ptr<_1ddeb4b1c_Const> _250621_c = static__1ddeb504b_NewI64(-2147483648LL);;
				_250621_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd6a6a2_primI32, ._field_Model=jule::Any(_250621_c, &__jule_any_type19), ._field_Constant=_250621_c});;
			}
		}
		else {
			_case_begin_1a6562004:;
			{
				_1acc79490_pushErr(_self_, _249236_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i32", 3), &__jule_any_type5),jule::Any(_249236_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a6561e05:;
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc91177_evalI64TypeStatic(_1acc78e73_Eval* _self_, jule::Ptr<_2097d15d8_Token> _251936_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _251936_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a6564de7:;
			{
				jule::Ptr<_1ddeb4b1c_Const> _252521_c = static__1ddeb504b_NewI64(jule::MAX_I64);;
				_252521_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd6a96b_primI64, ._field_Model=jule::Any(_252521_c, &__jule_any_type19), ._field_Constant=_252521_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1a65661b2:;
			{
				jule::Ptr<_1ddeb4b1c_Const> _253321_c = static__1ddeb504b_NewI64(jule::MIN_I64);;
				_253321_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd6a96b_primI64, ._field_Model=jule::Any(_253321_c, &__jule_any_type19), ._field_Constant=_253321_c});;
			}
		}
		else {
			_case_begin_1a656569a:;
			{
				_1acc79490_pushErr(_self_, _251936_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i64", 3), &__jule_any_type5),jule::Any(_251936_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a656559b:;
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc91485_evalU8TypeStatic(_1acc78e73_Eval* _self_, jule::Ptr<_2097d15d8_Token> _254635_ident) {
	;
	;
	{
		auto &_match_expr{ _254635_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a656936e:;
			{
				jule::Ptr<_1ddeb4b1c_Const> _255121_c = static__1ddeb52e3_NewU64(255LLU);;
				_255121_c.get()._field_Kind=jule::Str("u8", 2);
				return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd6ac35_primU8, ._field_Model=jule::Any(_255121_c, &__jule_any_type19), ._field_Constant=_255121_c});;
			}
		}
		else {
			_case_begin_1a656858d:;
			{
				_1acc79490_pushErr(_self_, _254635_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u8", 2), &__jule_any_type5),jule::Any(_254635_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a65686e2:;
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc91793_evalU16TypeStatic(_1acc78e73_Eval* _self_, jule::Ptr<_2097d15d8_Token> _256436_ident) {
	;
	;
	{
		auto &_match_expr{ _256436_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a656b23e:;
			{
				jule::Ptr<_1ddeb4b1c_Const> _256921_c = static__1ddeb52e3_NewU64(65535LLU);;
				_256921_c.get()._field_Kind=jule::Str("u16", 3);
				return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd6aeee_primU16, ._field_Model=jule::Any(_256921_c, &__jule_any_type19), ._field_Constant=_256921_c});;
			}
		}
		else {
			_case_begin_1a656a6d3:;
			{
				_1acc79490_pushErr(_self_, _256436_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u16", 3), &__jule_any_type5),jule::Any(_256436_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a656ad10:;
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc91aa1_evalU32TypeStatic(_1acc78e73_Eval* _self_, jule::Ptr<_2097d15d8_Token> _258236_ident) {
	;
	;
	{
		auto &_match_expr{ _258236_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a656de01:;
			{
				jule::Ptr<_1ddeb4b1c_Const> _258721_c = static__1ddeb52e3_NewU64(4294967295LLU);;
				_258721_c.get()._field_Kind=jule::Str("u32", 3);
				return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd6b2b8_primU32, ._field_Model=jule::Any(_258721_c, &__jule_any_type19), ._field_Constant=_258721_c});;
			}
		}
		else {
			_case_begin_1a656d0dc:;
			{
				_1acc79490_pushErr(_self_, _258236_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u32", 3), &__jule_any_type5),jule::Any(_258236_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a656d274:;
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc91dae_evalU64TypeStatic(_1acc78e73_Eval* _self_, jule::Ptr<_2097d15d8_Token> _260036_ident) {
	;
	;
	{
		auto &_match_expr{ _260036_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a6570cc1:;
			{
				jule::Ptr<_1ddeb4b1c_Const> _260521_c = static__1ddeb52e3_NewU64(jule::MAX_U64);;
				_260521_c.get()._field_Kind=jule::Str("u64", 3);
				return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd6b582_primU64, ._field_Model=jule::Any(_260521_c, &__jule_any_type19), ._field_Constant=_260521_c});;
			}
		}
		else {
			_case_begin_1a6570265:;
			{
				_1acc79490_pushErr(_self_, _260036_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u64", 3), &__jule_any_type5),jule::Any(_260036_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a6570892:;
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc921bc_evalF32TypeStatic(_1acc78e73_Eval* _self_, jule::Ptr<_2097d15d8_Token> _261836_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _261836_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a65742be:;
			{
				jule::Ptr<_1ddeb4b1c_Const> _262521_c = static__1ddeb5ac9_NewF64(340282346638528860000000000000000000000.0);;
				_262521_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd6ba05_primF32, ._field_Model=jule::Any(_262521_c, &__jule_any_type19), ._field_Constant=_262521_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1a6573c2a:;
			{
				jule::Ptr<_1ddeb4b1c_Const> _263321_c = static__1ddeb5ac9_NewF64(-340282346638528860000000000000000000000.0);;
				_263321_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd6ba05_primF32, ._field_Model=jule::Any(_263321_c, &__jule_any_type19), ._field_Constant=_263321_c});;
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1a65743ac:;
			{
				jule::Ptr<_1ddeb4b1c_Const> _264121_c = static__1ddeb5ac9_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				_264121_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd6ba05_primF32, ._field_Model=jule::Any(_264121_c, &__jule_any_type19), ._field_Constant=_264121_c});;
			}
		}
		else {
			_case_begin_1a65736db:;
			{
				_1acc79490_pushErr(_self_, _261836_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("f32", 3), &__jule_any_type5),jule::Any(_261836_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a6573686:;
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc924ca_evalF64TypeStatic(_1acc78e73_Eval* _self_, jule::Ptr<_2097d15d8_Token> _265436_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _265436_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a6578a54:;
			{
				jule::Ptr<_1ddeb4b1c_Const> _266121_c = static__1ddeb5ac9_NewF64(jule::MAX_F64);;
				_266121_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd6bcbe_primF64, ._field_Model=jule::Any(_266121_c, &__jule_any_type19), ._field_Constant=_266121_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1a65784b0:;
			{
				jule::Ptr<_1ddeb4b1c_Const> _266921_c = static__1ddeb5ac9_NewF64(jule::MIN_F64);;
				_266921_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd6bcbe_primF64, ._field_Model=jule::Any(_266921_c, &__jule_any_type19), ._field_Constant=_266921_c});;
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1a6578b42:;
			{
				jule::Ptr<_1ddeb4b1c_Const> _267721_c = static__1ddeb5ac9_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				_267721_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd6bcbe_primF64, ._field_Model=jule::Any(_267721_c, &__jule_any_type19), ._field_Constant=_267721_c});;
			}
		}
		else {
			_case_begin_1a6577e71:;
			{
				_1acc79490_pushErr(_self_, _265436_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("f64", 3), &__jule_any_type5),jule::Any(_265436_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a6577e1b:;
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc92882_evalPrimStatic(_1acc78e73_Eval* _self_, jule::Str _269033_kind, jule::Ptr<_2097d15d8_Token> _269044_ident) {
	{
		auto &_match_expr{ _269033_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1a657c1b7:;
			{
				return _1acc90132_evalIntTypeStatic(_self_, _269044_ident);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1a657b051:;
			{
				return _1acc90440_evalUintTypeStatic(_self_, _269044_ident);;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1a657c2e9:;
			{
				return _1acc9074d_evalI8TypeStatic(_self_, _269044_ident);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1a657c3e8:;
			{
				return _1acc90a5b_evalI16TypeStatic(_self_, _269044_ident);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1a657c45e:;
			{
				return _1acc90d69_evalI32TypeStatic(_self_, _269044_ident);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1a657ba13:;
			{
				return _1acc91177_evalI64TypeStatic(_self_, _269044_ident);;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1a657ba79:;
			{
				return _1acc91485_evalU8TypeStatic(_self_, _269044_ident);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1a657c4c5:;
			{
				return _1acc91793_evalU16TypeStatic(_self_, _269044_ident);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1a657c53b:;
			{
				return _1acc91aa1_evalU32TypeStatic(_self_, _269044_ident);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1a657c5a2:;
			{
				return _1acc91dae_evalU64TypeStatic(_self_, _269044_ident);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1a657c618:;
			{
				return _1acc921bc_evalF32TypeStatic(_self_, _269044_ident);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1a657c67e:;
			{
				return _1acc924ca_evalF64TypeStatic(_self_, _269044_ident);;
			}
		}
		else {
			_case_begin_1a657b848:;
			{
				_1acc79490_pushErr(_self_, _269044_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_269033_kind, &__jule_any_type5),jule::Any(_269044_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a657b370:;
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc92c39_evalTypeStatic(_1acc78e73_Eval* _self_, jule::Ptr<_1abd5dc4b_Data> _272237_d, jule::Ptr<_1acade7de_SubIdentExpr> _272251_si) {
	{
		
		if ((_1acca73be_Prim(_272237_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6582475:;
			{
				return _1acc92882_evalPrimStatic(_self_, _1accac737_Str(_1acca73be_Prim(_272237_d.get()._field_Kind.ptr()).ptr()), _272251_si.get()._field_Ident);;
			}
		}
		else if ((_1acca7b0b_Enum(_272237_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a65824db:;
			{
				return _1acc8cdcc_evalEnumStatic(_self_, _1acca7b0b_Enum(_272237_d.get()._field_Kind.ptr()), _272251_si.get()._field_Ident);;
			}
		}
		else if ((_1acca7d70_TypeEnum(_272237_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a65822dd:;
			{
				return _1acc8d284_evalTypeEnumStatic(_self_, _1acca7d70_TypeEnum(_272237_d.get()._field_Kind.ptr()), _272251_si.get()._field_Ident);;
			}
		}
		else if ((_1acca8821_Struct(_272237_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6582354:;
			{
				return _1acc8d63b_evalStructStatic(_self_, _1acca8821_Struct(_272237_d.get()._field_Kind.ptr()), _272251_si.get()._field_Ident);;
			}
		}
		else {
			_case_begin_1a6581595:;
			{
				_1acc79490_pushErr(_self_, _272251_si.get()._field_Ident, jule::Str("type @ is not supports sub-defines", 34), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_272237_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a657e42d:;
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1a6587d60_comptimeObjSubIdent(_1acc78e73_Eval* _self_, jule::Ptr<_1acb49184_comptimeTypeInfo>* _273857_ct, jule::Ptr<_1abd5dc4b_Data>* _273877_d, jule::Ptr<_1acade7de_SubIdentExpr>* _273888_si) {
	jule::Ptr<_1abd5dc4b_Data> _273917_cd = _1acb4e893_subIdent((*(_273857_ct)), (*(_273888_si)).get()._field_Ident.get()._field_Kind);;
	if ((_273917_cd == nullptr)) {
		_1acc79490_pushErr(_self_, (*(_273888_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str((*(_273877_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_273888_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _273917_cd;;
}

inline jule::Ptr<_1abd5dc4b_Data> _1a658b528_comptimeObjSubIdent(_1acc78e73_Eval* _self_, jule::Ptr<_1acb3adce_comptimeStructField>* _273857_ct, jule::Ptr<_1abd5dc4b_Data>* _273877_d, jule::Ptr<_1acade7de_SubIdentExpr>* _273888_si) {
	jule::Ptr<_1abd5dc4b_Data> _273917_cd = _1acb3c595_subIdent((*(_273857_ct)), (*(_273888_si)).get()._field_Ident.get()._field_Kind);;
	if ((_273917_cd == nullptr)) {
		_1acc79490_pushErr(_self_, (*(_273888_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str((*(_273877_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_273888_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _273917_cd;;
}

inline jule::Ptr<_1abd5dc4b_Data> _1a658eb9c_comptimeObjSubIdent(_1acc78e73_Eval* _self_, jule::Ptr<_1acb41dd5_comptimeEnumField>* _273857_ct, jule::Ptr<_1abd5dc4b_Data>* _273877_d, jule::Ptr<_1acade7de_SubIdentExpr>* _273888_si) {
	jule::Ptr<_1abd5dc4b_Data> _273917_cd = _1acb42d1a_subIdent((*(_273857_ct)), (*(_273888_si)).get()._field_Ident.get()._field_Kind);;
	if ((_273917_cd == nullptr)) {
		_1acc79490_pushErr(_self_, (*(_273888_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str((*(_273877_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_273888_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _273917_cd;;
}

inline jule::Ptr<_1abd5dc4b_Data> _1a6593442_comptimeObjSubIdent(_1acc78e73_Eval* _self_, jule::Ptr<_1acb44657_comptimeParam>* _273857_ct, jule::Ptr<_1abd5dc4b_Data>* _273877_d, jule::Ptr<_1acade7de_SubIdentExpr>* _273888_si) {
	jule::Ptr<_1abd5dc4b_Data> _273917_cd = _1acb461d6_subIdent((*(_273857_ct)), (*(_273888_si)).get()._field_Ident.get()._field_Kind);;
	if ((_273917_cd == nullptr)) {
		_1acc79490_pushErr(_self_, (*(_273888_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str((*(_273877_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_273888_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _273917_cd;;
}

inline jule::Ptr<_1abd5dc4b_Data> _1a6596b2c_comptimeObjSubIdent(_1acc78e73_Eval* _self_, jule::Ptr<_1acb3ddd2_comptimeStatic>* _273857_ct, jule::Ptr<_1abd5dc4b_Data>* _273877_d, jule::Ptr<_1acade7de_SubIdentExpr>* _273888_si) {
	jule::Ptr<_1abd5dc4b_Data> _273917_cd = _1acb40598_subIdent((*(_273857_ct)), (*(_273888_si)).get()._field_Ident.get()._field_Kind);;
	if ((_273917_cd == nullptr)) {
		_1acc79490_pushErr(_self_, (*(_273888_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str((*(_273877_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_273888_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _273917_cd;;
}

inline jule::Ptr<_1abd5dc4b_Data> _1a659a2a1_comptimeObjSubIdent(_1acc78e73_Eval* _self_, jule::Ptr<_1acb4eb7e_comptimeValue>* _273857_ct, jule::Ptr<_1abd5dc4b_Data>* _273877_d, jule::Ptr<_1acade7de_SubIdentExpr>* _273888_si) {
	jule::Ptr<_1abd5dc4b_Data> _273917_cd = _1acb51e8e_subIdent((*(_273857_ct)), (*(_273888_si)).get()._field_Ident.get()._field_Kind);;
	if ((_273917_cd == nullptr)) {
		_1acc79490_pushErr(_self_, (*(_273888_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str((*(_273877_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_273888_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _273917_cd;;
}

inline jule::Ptr<_1abd5dc4b_Data> _1a659d925_comptimeObjSubIdent(_1acc78e73_Eval* _self_, jule::Ptr<_1acb53743_comptimeFile>* _273857_ct, jule::Ptr<_1abd5dc4b_Data>* _273877_d, jule::Ptr<_1acade7de_SubIdentExpr>* _273888_si) {
	jule::Ptr<_1abd5dc4b_Data> _273917_cd = _1acb54e09_subIdent((*(_273857_ct)), (*(_273888_si)).get()._field_Ident.get()._field_Kind);;
	if ((_273917_cd == nullptr)) {
		_1acc79490_pushErr(_self_, (*(_273888_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str((*(_273877_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_273888_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _273917_cd;;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc93542_evalObjSubIdent(_1acc78e73_Eval* _self_, jule::Ptr<_1abd5dc4b_Data> _274638_d, jule::Ptr<_1acade7de_SubIdentExpr> _274652_si) {
	if (_2097d3d7c_IsIgnoreIdent(_274652_si.get()._field_Ident.get()._field_Kind)) {
		_1acc79490_pushErr(_self_, _274652_si.get()._field_Ident, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if ((_1accaa988_comptimeTypeInfo(_274638_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6585bd7:;
			{
				jule::Ptr<_1acb49184_comptimeTypeInfo> _275421_ct = _1accaa988_comptimeTypeInfo(_274638_d.get()._field_Kind.ptr());;
				return _1a6587d60_comptimeObjSubIdent(_self_, &(_275421_ct), &(_274638_d), &(_274652_si));;
			}
		}
		else if ((_1acca979a_comptimeStructField(_274638_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6586578:;
			{
				jule::Ptr<_1acb3adce_comptimeStructField> _275721_ct = _1acca979a_comptimeStructField(_274638_d.get()._field_Kind.ptr());;
				return _1a658b528_comptimeObjSubIdent(_self_, &(_275721_ct), &(_274638_d), &(_274652_si));;
			}
		}
		else if ((_1acca9c73_comptimeEnumField(_274638_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a65865de:;
			{
				jule::Ptr<_1acb41dd5_comptimeEnumField> _276021_ct = _1acca9c73_comptimeEnumField(_274638_d.get()._field_Kind.ptr());;
				return _1a658eb9c_comptimeObjSubIdent(_self_, &(_276021_ct), &(_274638_d), &(_274652_si));;
			}
		}
		else if ((_1accaa24b_comptimeParam(_274638_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6586655:;
			{
				jule::Ptr<_1acb44657_comptimeParam> _276321_ct = _1accaa24b_comptimeParam(_274638_d.get()._field_Kind.ptr());;
				return _1a6593442_comptimeObjSubIdent(_self_, &(_276321_ct), &(_274638_d), &(_274652_si));;
			}
		}
		else if ((_1accaae61_comptimeStatic(_274638_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a65866bb:;
			{
				jule::Ptr<_1acb3ddd2_comptimeStatic> _276621_ct = _1accaae61_comptimeStatic(_274638_d.get()._field_Kind.ptr());;
				return _1a6596b2c_comptimeObjSubIdent(_self_, &(_276621_ct), &(_274638_d), &(_274652_si));;
			}
		}
		else if ((_1accab1c5_comptimeValue(_274638_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6586732:;
			{
				jule::Ptr<_1acb4eb7e_comptimeValue> _276921_ct = _1accab1c5_comptimeValue(_274638_d.get()._field_Kind.ptr());;
				return _1a659a2a1_comptimeObjSubIdent(_self_, &(_276921_ct), &(_274638_d), &(_274652_si));;
			}
		}
		else if ((_1accab439_comptimeFile(_274638_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6586798:;
			{
				jule::Ptr<_1acb53743_comptimeFile> _277221_ct = _1accab439_comptimeFile(_274638_d.get()._field_Kind.ptr());;
				return _1a659d925_comptimeObjSubIdent(_self_, &(_277221_ct), &(_274638_d), &(_274652_si));;
			}
		}
		_match_end_1a6585ca3:;
	};
	jule::Ptr<_1acca4ba2_TypeKind> _277617_kind = _274638_d.get()._field_Kind;;
	{
		
		if ((_1acca7897_Ptr(_274638_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6599e0a:;
			{
				jule::Ptr<_1accb41bc_Ptr> _277917_ptr = _1acca7897_Ptr(_274638_d.get()._field_Kind.ptr());;
				if (_1accb4b90_IsUnsafe(_277917_ptr.ptr())) {
					goto _match_end_1a6586853;
				};
				if (((!(_274652_si.get()._field_IsSelf)) && (!(_1acc79dca_isUnsafe(_self_))))) {
					_1acc79490_pushErr(_self_, _274652_si.get()._field_Ident, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				_277617_kind=_1acca7897_Ptr(_274638_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else if ((_1acca7633_Sptr(_274638_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a65a052b:;
			{
				_277617_kind=_1acca7633_Sptr(_274638_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		_match_end_1a6586853:;
	};
	{
		
		if ((_1acca8a85_Trait(_274638_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a65a38e7:;
			{
				return _1acc8da8c_evalTraitSubIdent(_self_, _274638_d, _1acca8a85_Trait(_274638_d.get()._field_Kind.ptr()), _274652_si.get()._field_Ident);;
			}
		}
		else if ((_1acca8821_Struct(_277617_kind.ptr()) != nullptr)) {
			_case_begin_1a65a396e:;
			{
				jule::Ptr<_1acb09d37_StructIns> _279517_s = _1acca8821_Struct(_277617_kind.ptr());;
				if (_1acca02da_isInstancedStruct(_279517_s)) {
					jule::Bool _279725_usedReferenceElem = (_1acca7633_Sptr(_274638_d.get()._field_Kind.ptr()) != nullptr);;
					return _1acc8e5b5_evalStructSubIdent(_self_, _274638_d, _1acca8821_Struct(_277617_kind.ptr()), _274652_si, _279725_usedReferenceElem);;
				};
			}
		}
		else if ((_1acca8348_Slc(_277617_kind.ptr()) != nullptr)) {
			_case_begin_1a65a39e6:;
			{
				return _1acc8e96c_evalSliceSubIdent(_self_, _274638_d, _274652_si.get()._field_Ident);;
			}
		}
		else if ((_1acca80d4_Arr(_277617_kind.ptr()) != nullptr)) {
			_case_begin_1a65a3a6d:;
			{
				return _1acc8ed24_evalArraySubIdent(_self_, _274638_d, _274652_si.get()._field_Ident);;
			}
		}
		_match_end_1a65a381a:;
	};
	_1acc79490_pushErr(_self_, _274652_si.get()._field_Ident, jule::Str("object @ is not supports sub-defines", 36), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_274638_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc93850_evalSubIdent(jule::Ptr<_1acc78e73_Eval> _self_, jule::Ptr<_1acade7de_SubIdentExpr> _280936_si) {
	jule::Ptr<_1acca4ba2_TypeKind> _281017_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_281017_prefix;
	});;
	jule::Ptr<_1abd5dc4b_Data> _281317_d = _1acc94c4c_evalExprKind(_self_, _280936_si.get()._field_Expr.get()._field_Kind);;
	if ((_281317_d == nullptr)) {
		return nullptr;;
	};
	if (_281317_d.get()._field_Decl) {
		return _1acc92c39_evalTypeStatic(_self_.ptr(), _281317_d, _280936_si);;
	};
	return _1acc93542_evalObjSubIdent(_self_.ptr(), _281317_d, _280936_si);;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc93b5d_evalTuple(jule::Ptr<_1acc78e73_Eval> _self_, jule::Ptr<_1acadc0d3_TupleExpr> _282333_tup) {
	jule::Ptr<_1accb21ba_Tuple> _282417_tupT = jule::new_ptr<_1accb21ba_Tuple>();;
	_282417_tupT.get()._field_Types=jule::Slice<jule::Ptr<_1acca4ba2_TypeKind>>::alloc(0LL, _282333_tup.get()._field_Expr.len());
	jule::Ptr<_1acb14c98_TupleExprModel> _282717_model = jule::new_ptr<_1acb14c98_TupleExprModel>(_1acb14c98_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_1abd5dc4b_Data>>::alloc(0LL, _282333_tup.get()._field_Expr.len())});;
	jule::Bool _283117_ok = true;;
	{
		auto expr = &(_282333_tup.get()._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a65abe3e:;
		if (it != expr_end) {
			jule::Ptr<_1acadb456_Expr> _283221_expr = *it;
			{
				jule::Ptr<_1abd5dc4b_Data> _283321_d = _1acc95984_evalExpr(_self_, _283221_expr);;
				if ((_283321_d == nullptr)) {
					_283117_ok=false;
					goto _iter_next_1a65abe3e;
				};
				{ jule::Slice<jule::Ptr<_1acca4ba2_TypeKind>> &__jule_push_dest = _282417_tupT.get()._field_Types; __jule_push_dest.push(_283321_d.get()._field_Kind); };
				{ jule::Slice<jule::Ptr<_1abd5dc4b_Data>> &__jule_push_dest = _282717_model.get()._field_Datas; __jule_push_dest.push(_283321_d); };
			}
			_iter_next_1a65abe3e:;
			++it;
			goto _iter_begin_1a65abe3e;
		}
		_iter_end_1a65abe3e:;
	};
	if ((!(_283117_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(_282417_tupT, 23)}), ._field_Model=jule::Any(_282717_model, &__jule_any_type87), });;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc94015_evalMap(jule::Ptr<_1acc78e73_Eval> _self_, jule::Ptr<_1accb2b6b_Map> _285231_m, jule::Ptr<_1acae1a44_BraceLit> _285244_lit) {
	jule::Ptr<_1acb1257b_MapExprModel> _285317_model = jule::new_ptr<_1acb1257b_MapExprModel>(_1acb1257b_MapExprModel{._field_KeyKind=_285231_m.get()._field_Key, ._field_ValKind=_285231_m.get()._field_Val, });;
	{
		auto expr = &(_285244_lit.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a65aed54:;
		if (it != expr_end) {
			jule::Ptr<_1acadb456_Expr> _285821_expr = *it;
			{
				{
					auto &_match_expr{ _285821_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type84) {
						_case_begin_1a65b056e:;
						{
							goto _match_end_1a65b0618;
						}
					}
					else {
						_case_begin_1a65b07a0:;
						{
							_1acc79490_pushErr(_self_.ptr(), _285244_lit.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1a65b0618:;
				};
				jule::Ptr<_1acae2429_KeyValPair> _286821_pair = _285821_expr.get()._field_Kind.cast_ptr<_1acae2429_KeyValPair>(&__jule_any_type84);;
				jule::Ptr<_1abd5dc4b_Data> _287021_key = _1acc95984_evalExpr(_self_, _286821_pair.get()._field_Key);;
				if ((_287021_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1abd5dc4b_Data> _287521_val = _1acc95984_evalExpr(_self_, _286821_pair.get()._field_Val);;
				if ((_287521_val == nullptr)) {
					return nullptr;;
				};
				_1abcee291_checkAssignType(_self_.get()._field_s, false, &(_285231_m.get()._field_Key), &(_287021_key), _286821_pair.get()._field_Colon);
				_1abcee291_checkAssignType(_self_.get()._field_s, false, &(_285231_m.get()._field_Val), &(_287521_val), _286821_pair.get()._field_Colon);
				{ jule::Slice<jule::Ptr<_1acb12108_KeyValPairExprModel>> &__jule_push_dest = _285317_model.get()._field_Entries; __jule_push_dest.push(jule::new_ptr<_1acb12108_KeyValPairExprModel>(_1acb12108_KeyValPairExprModel{._field_Key=_287021_key.get()._field_Model, ._field_Val=_287521_val.get()._field_Model})); };
			}
			_iter_next_1a65aed54:;
			++it;
			goto _iter_begin_1a65aed54;
		}
		_iter_end_1a65aed54:;
	};
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(_285231_m, 24)}), ._field_Mutable=true, ._field_Model=jule::Any(_285317_model, &__jule_any_type102), });;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc94323_evalBraceLit(jule::Ptr<_1acc78e73_Eval> _self_, jule::Ptr<_1acae1a44_BraceLit> _289636_lit) {
	{
		
		if ((_self_.get()._field_prefix == nullptr)) {
			_case_begin_1a65b5057:;
			{
				_1acc79490_pushErr(_self_.ptr(), _289636_lit.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1acca8ce9_Map(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1a65b540e:;
			{
				return _1acc94015_evalMap(_self_, _1acca8ce9_Map(_self_.get()._field_prefix.ptr()), _289636_lit);;
			}
		}
		else if ((_1acca8821_Struct(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1a65b550d:;
			{
				return _1acc8abcc_evalStructLitExplicit(_self_, _1acca8821_Struct(_self_.get()._field_prefix.ptr()), _289636_lit.get()._field_Exprs, _289636_lit.get()._field_Token);;
			}
		}
		else {
			_case_begin_1a65b492a:;
			{
				_1acc79490_pushErr(_self_.ptr(), _289636_lit.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a65b4881:;
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc94631_evalAnonFn(jule::Ptr<_1acc78e73_Eval> _self_, jule::Ptr<_1acae8908_FnDecl> _291134_decl) {
	_1accb5ee3_typeChecker _291217_tc = _1accb5ee3_typeChecker{._field_s=_self_.get()._field_s, ._field_rootLookup=_self_.get()._field_lookup, ._field_lookup=_self_.get()._field_lookup, };;
	jule::Ptr<_1acb24d85_FnIns> _291717_ins = _1accbc516_buildFn(&_291217_tc, _291134_decl);;
	if ((_291717_ins == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _self_.get()._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1a65b8d3b:;
			{
				jule::Ptr<_1abcc4563_scopeChecker> _292321_sc = _self_.get()._field_lookup.cast_ptr<_1abcc4563_scopeChecker>(0);;
				jule::Ptr<_1abcc4563_scopeChecker> _292421_scc = _1abcd471b_newChildChecker(_292321_sc);;
				_292421_scc.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1abcc32cb_scopeLabel>>>(nullptr);
				_292421_scc.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1abcc374e_scopeGoto>>>(nullptr);
				_292421_scc.get()._field_owner=nullptr;
				_292421_scc.get()._field_childIndex=0LL;
				_292421_scc.get()._field_it=0LLU;
				_292421_scc.get()._field_cse=0LLU;
				_292421_scc.get()._field_owner=_291717_ins;
				_1abd0e856_checkFnInsSc(_self_.get()._field_s.ptr(), &(_291717_ins), &(_292421_scc));
			}
		}
		else {
			_case_begin_1a65b8be8:;
			{
				_1abd0edea_checkFnIns(_self_.get()._field_s, &(_291717_ins));
			}
		}
		_match_end_1a65b8b93:;
	};
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(_291717_ins, 1)}), ._field_Model=jule::Any(jule::new_ptr<_1acb11c51_AnonFnExprModel>(_1acb11c51_AnonFnExprModel{._field_Func=_291717_ins, ._field_Global=_1acc7a13e_isGlobal(_self_.ptr())}), &__jule_any_type103), });;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc9493e_evalBinop(jule::Ptr<_1acc78e73_Eval> _self_, jule::Ptr<_1acadec62_BinopExpr> _294633_op) {
	_1acc97bd9_binaryEval _294717_bs = static__1acc982b1_newPlain(_self_);;
	if ((_self_.get()._field_prefix != nullptr)) {
		jule::Ptr<_1accac407_Prim> _295017_prim = _1acca73be_Prim(_self_.get()._field_prefix.ptr());;
		if (((_295017_prim == nullptr) || (!(_1ddeb4611_IsNum(_1accac737_Str(_295017_prim.ptr())))))) {
			jule::Ptr<_1acca4ba2_TypeKind> _295225_prefix = _self_.get()._field_prefix;;
			_self_.get()._field_prefix=nullptr;
			__JULE_DEFER({
				_self_.get()._field_prefix=_295225_prefix;
			});;
			return _1acc9d76c_eval(&_294717_bs, &(_294633_op));;
		};
	};
	return _1acc9d76c_eval(&_294717_bs, &(_294633_op));;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc94c4c_evalExprKind(jule::Ptr<_1acc78e73_Eval> _self_, jule::Any _296136_kind) {
	{
		auto &_match_expr{ _296136_kind };
		
		if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1a65c001d:;
			{
				jule::Ptr<_1acadb742_RangeExpr> _296421_e = _296136_kind.cast_ptr<_1acadb742_RangeExpr>(&__jule_any_type104);;
				return _1acc94c4c_evalExprKind(_self_, _296421_e.get()._field_Expr.get()._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1a65c0bab:;
			{
				return _1acc7bd22_evalLit(_self_.ptr(), _296136_kind.cast_ptr<_1acadc48a_LitExpr>(&__jule_any_type105));;
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1a65c0c22:;
			{
				return _1acc812cc_evalIdent(_self_.ptr(), _296136_kind.cast_ptr<_1acadd04b_IdentExpr>(&__jule_any_type85));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1a65c0705:;
			{
				return _1acc815da_evalUnary(_self_, _296136_kind.cast_ptr<_1acadd755_UnaryExpr>(&__jule_any_type93));;
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1a65c076b:;
			{
				return _1acc818e8_evalVariadic(_self_, _296136_kind.cast_ptr<_1acaddb0c_VariadicExpr>(&__jule_any_type81));;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1a65c07e3:;
			{
				return _1acc81c06_evalUnsafe(_self_, _296136_kind.cast_ptr<_1acadcac8_UnsafeExpr>(&__jule_any_type106));;
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1a65c086a:;
			{
				return _1acc82773_evalSliceExpr(_self_, _296136_kind.cast_ptr<_1acae2a9a_SliceExpr>(&__jule_any_type99));;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1a65c0c99:;
			{
				return _1acc85ab7_evalIndexing(_self_, _296136_kind.cast_ptr<_1acae3408_IndexingExpr>(&__jule_any_type107));;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1a65c0d21:;
			{
				return _1acc86c83_evalSlicing(_self_, _296136_kind.cast_ptr<_1acae3a13_SlicingExpr>(&__jule_any_type108));;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1a65c0d98:;
			{
				return _1acc8a46d_evalCast(_self_, _296136_kind.cast_ptr<_1acaddeb4_CastExpr>(&__jule_any_type109));;
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1a65c0e20:;
			{
				return _1acc8a77b_evalNsSelection(_self_.ptr(), _296136_kind.cast_ptr<_1acade36b_NsSelectionExpr>(&__jule_any_type95));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1a65c0e97:;
			{
				return _1acc8aeda_evalStructLit(_self_, _296136_kind.cast_ptr<_1acae15c1_StructLit>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1a65c101e:;
			{
				return _1acc8b55c_evalType(_self_.ptr(), _296136_kind.cast_ptr<_1acad72cb_TypeDecl>(&__jule_any_type94));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1a65c1096:;
			{
				return _1acc8ca25_evalFnCall(_self_, _296136_kind.cast_ptr<_1acae036c_FnCallExpr>(&__jule_any_type111));;
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1a65c111d:;
			{
				return _1acc93850_evalSubIdent(_self_, _296136_kind.cast_ptr<_1acade7de_SubIdentExpr>(&__jule_any_type91));;
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1a65c1195:;
			{
				return _1acc93b5d_evalTuple(_self_, _296136_kind.cast_ptr<_1acadc0d3_TupleExpr>(&__jule_any_type86));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1a65c121c:;
			{
				return _1acc94323_evalBraceLit(_self_, _296136_kind.cast_ptr<_1acae1a44_BraceLit>(&__jule_any_type112));;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1a65c1294:;
			{
				return _1acc94631_evalAnonFn(_self_, _296136_kind.cast_ptr<_1acae8908_FnDecl>(&__jule_any_type14));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1a65c131b:;
			{
				return _1acc9493e_evalBinop(_self_, _296136_kind.cast_ptr<_1acadec62_BinopExpr>(&__jule_any_type113));;
			}
		}
		else {
			_case_begin_1a65c0606:;
			{
				return nullptr;;
			}
		}
		_match_end_1a65c05a1:;
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc9505a_eval1(jule::Ptr<_1acc78e73_Eval> _self_, jule::Ptr<_1acadb456_Expr> _300929_expr) {
	jule::Ptr<_1abd5dc4b_Data> _301017_d = _1acc94c4c_evalExprKind(_self_, _300929_expr.get()._field_Kind);;
	if (((_301017_d == nullptr) || (_301017_d.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1acca85ac_Fn(_301017_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a65d0380:;
			{
				jule::Ptr<_1acb24d85_FnIns> _301721_f = _1acca85ac_Fn(_301017_d.get()._field_Kind.ptr());;
				if (_1acb2621b_IsBuiltin(_301721_f.ptr())) {
					_1abce7003_pushErr(_self_.get()._field_s.ptr(), _300929_expr.get()._field_Token, jule::Str("built-in functions should be invoked", 36), jule::Slice<jule::Any>());
					goto _match_end_1a65cec97;
				};
				if ((_301721_f.get()._field_Generics.len() != _301721_f.get()._field_Decl.get()._field_Generics.len())) {
					_1abce7003_pushErr(_self_.get()._field_s.ptr(), _300929_expr.get()._field_Token, jule::Str("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				};
				if (((!(_301721_f.get()._field_Decl.get()._field_Statically)) && _1acb228aa_IsMethod(_301721_f.get()._field_Decl.ptr()))) {
					_1abce7003_pushErr(_self_.get()._field_s.ptr(), _300929_expr.get()._field_Token, jule::Str("methods should be invoked", 25), jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1a65cec97:;
	};
	return _301017_d;;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc95368_eval(jule::Ptr<_1acc78e73_Eval> _self_, jule::Ptr<_1acadb456_Expr> _303628_expr) {
	jule::Ptr<_1abd5dc4b_Data> _303717_d = _1acc9505a_eval1(_self_, _303628_expr);;
	if ((_303717_d == nullptr)) {
		return nullptr;;
	};
	if ((((_self_.get()._field_owner == nullptr) || (!(_self_.get()._field_owner.get()._field_Constant))) && _1acca92c2_comptime(_303717_d.get()._field_Kind.ptr()))) {
		_1abce7003_pushErr(_self_.get()._field_s.ptr(), _303628_expr.get()._field_Token, jule::Str("compile-time evaluations cannot used as expression", 50), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _303717_d;;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc95676_evalExpr1(jule::Ptr<_1acc78e73_Eval> _self_, jule::Ptr<_1acadb456_Expr> _305133_expr) {
	jule::Ptr<_1abd5dc4b_Data> _305217_d = _1acc9505a_eval1(_self_, _305133_expr);;
	{
		
		if ((_305217_d == nullptr)) {
			_case_begin_1a65d6045:;
			{
				return nullptr;;
			}
		}
		else if (_305217_d.get()._field_Decl) {
			_case_begin_1a65d60bc:;
			{
				_1acc79490_pushErr(_self_.ptr(), _305133_expr.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1a65d5e9b:;
			{
				return _305217_d;;
			}
		}
		_match_end_1a65d5e13:;
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc95984_evalExpr(jule::Ptr<_1acc78e73_Eval> _self_, jule::Ptr<_1acadb456_Expr> _306732_expr) {
	jule::Ptr<_1abd5dc4b_Data> _306817_d = _1acc95368_eval(_self_, _306732_expr);;
	{
		
		if ((_306817_d == nullptr)) {
			_case_begin_1a65d7a4c:;
			{
				return nullptr;;
			}
		}
		else if (_306817_d.get()._field_Decl) {
			_case_begin_1a65d7ac4:;
			{
				_1acc79490_pushErr(_self_.ptr(), _306732_expr.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1a65d79a3:;
			{
				return _306817_d;;
			}
		}
		_match_end_1a65d7909:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1acc78e73_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1acc95e07_unaryEval static__1acc96336_new(jule::Ptr<_1acc78e73_Eval> _308823_e) {
	return _1acc95e07_unaryEval{._field_e=_308823_e, };;
}



inline void _1acc96512_minus(_1acc95e07_unaryEval* _self_) {
	{
		
		if (((*(_self_))._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1a65d939a:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1acca73be_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a65d97b8:;
			{
				if ((!(_1ddeb4611_IsNum(_1acca5059_Str((*(_self_))._field_d.get()._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1acca8821_Struct((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a65d909d:;
			{
				if ((_1acca8821_Struct((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1a65d9037:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1a65d8da0:;
	};
	if (_1abd5e5ba_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1ddeb925e_IsF64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1a65dc656:;
				{
					_1ddeb836d_SetF64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((-(_1ddeb6db6_ReadF64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1ddeb87ad_IsI64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1a65dc6cd:;
				{
					_1ddeb7878_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_1ddeb6415_ReadI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1ddeb8a22_IsU64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1a65dc755:;
				{
					_1ddeb7878_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_1ddeb712a_AsI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1a65dc568:;
		};
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1acb0e5ab_UnaryExprModel>(_1acb0e5ab_UnaryExprModel{._field_Expr=jule::new_ptr<_1abd5dc4b_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _1acc966dd_plus(_1acc95e07_unaryEval* _self_) {
	{
		
		if (((*(_self_))._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1a65e1704:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1acca73be_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a65e13c4:;
			{
				if ((!(_1ddeb4611_IsNum(_1acca5059_Str((*(_self_))._field_d.get()._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1acca8821_Struct((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a65e143a:;
			{
				if ((_1acca8821_Struct((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1a65e135d:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1a65e1292:;
	};
	if (_1abd5e5ba_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1ddeb925e_IsF64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1a65e49d2:;
				{
					_1ddeb836d_SetF64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((+(_1ddeb6db6_ReadF64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1ddeb87ad_IsI64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1a65e4a59:;
				{
					_1ddeb7878_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_1ddeb6415_ReadI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1ddeb8a22_IsU64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1a65e4ad1:;
				{
					_1ddeb7878_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_1ddeb712a_AsI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1a65e48e4:;
		};
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1acb0e5ab_UnaryExprModel>(_1acb0e5ab_UnaryExprModel{._field_Expr=jule::new_ptr<_1abd5dc4b_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _1acc968b9_caret(_1acc95e07_unaryEval* _self_) {
	{
		
		if (((*(_self_))._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1a65e8a80:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1acca73be_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a65e8750:;
			{
				if ((!(_1ddeb404a_IsInt(_1acca5059_Str((*(_self_))._field_d.get()._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1acca8821_Struct((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a65e87b6:;
			{
				if ((_1acca8821_Struct((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1a65e86d9:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1a65e861d:;
	};
	if (_1abd5e5ba_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1ddeb87ad_IsI64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1a65ebd4c:;
				{
					_1ddeb7878_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((~(_1ddeb6415_ReadI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1ddeb8a22_IsU64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1a65ebdc4:;
				{
					_1ddeb7aed_SetU64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::U64>((~(_1ddeb6679_ReadU64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1a65ebc70:;
		};
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1acb0e5ab_UnaryExprModel>(_1acb0e5ab_UnaryExprModel{._field_Expr=jule::new_ptr<_1abd5dc4b_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _1acc96a95_excl(_1acc95e07_unaryEval* _self_) {
	jule::Ptr<_1accac407_Prim> _320713_t = _1acca73be_Prim((*(_self_))._field_d.get()._field_Kind.ptr());;
	if (((_320713_t == nullptr) || (!(_1accb0394_IsBool(_320713_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	if (_1abd5e5ba_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1ddeb8c86_IsBool((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1a660123b:;
				{
					_1ddeb7d73_SetBool((*(_self_))._field_d.get()._field_Constant.ptr(), (!(_1ddeb68dd_ReadBool((*(_self_))._field_d.get()._field_Constant.ptr()))));
				}
			}
			_match_end_1a660113c:;
		};
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1acb0e5ab_UnaryExprModel>(_1acb0e5ab_UnaryExprModel{._field_Expr=jule::new_ptr<_1abd5dc4b_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _1acc96c71_star(_1acc95e07_unaryEval* _self_) {
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1acb0e5ab_UnaryExprModel>(_1acb0e5ab_UnaryExprModel{._field_Expr=jule::new_ptr<_1abd5dc4b_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
	{
		
		if ((_1acca7897_Ptr((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6603ded:;
			{
				if ((!(_1acc79dca_isUnsafe((*(_self_))._field_e.ptr())))) {
					_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_u.get()._field_Op, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1accb41bc_Ptr> _323921_t = _1acca7897_Ptr((*(_self_))._field_d.get()._field_Kind.ptr());;
				if (_1accb4b90_IsUnsafe(_323921_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*(_self_))._field_d.get()._field_Kind=_323921_t.get()._field_Elem;
			}
		}
		else if ((_1acca7633_Sptr((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6603ae0:;
			{
				(*(_self_))._field_d.get()._field_Kind=_1acca7633_Sptr((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else {
			_case_begin_1a6603a79:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1a6602e85:;
	};
	(*(_self_))._field_d.get()._field_Constant=nullptr;
	(*(_self_))._field_d.get()._field_Lvalue=true;
}



inline void _1acc96e4c_amper(_1acc95e07_unaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1a66083ec:;
			{
				jule::Ptr<_1acb0ed5e_StructLitExprModel> _325921_lit = (*(_self_))._field_d.get()._field_Model.cast_ptr<_1acb0ed5e_StructLitExprModel>(&__jule_any_type100);;
				_1acc9e509_makeStructLitAlloc(&((*(_self_))._field_d), &(_325921_lit));
			}
		}
		else {
			_case_begin_1a6607d8b:;
			{
				{
					
					if (_1accbe68e_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_1a660893b:;
						{
							(*(_self_))._field_d.get()._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(jule::new_ptr<_1accb41bc_Ptr>(_1accb41bc_Ptr{._field_Elem=(*(_self_))._field_d.get()._field_Kind}), 26)});
							(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1acb0e5ab_UnaryExprModel>(_1acb0e5ab_UnaryExprModel{._field_Expr=jule::new_ptr<_1abd5dc4b_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
						}
					}
					else {
						_case_begin_1a6608386:;
						{
							(*(_self_))._field_d=nullptr;
						}
					}
					_match_end_1a66082ba:;
				};
			}
		}
		_match_end_1a6607d14:;
	};
	if (((*(_self_))._field_d != nullptr)) {
		(*(_self_))._field_d.get()._field_Constant=nullptr;
		(*(_self_))._field_d.get()._field_Lvalue=false;
	};
}



inline void _1acc97128_typeDecl(_1acc95e07_unaryEval* _self_) {
	_1accb5ee3_typeChecker _328317_tc = _1accb5ee3_typeChecker{._field_s=(*(_self_))._field_e.get()._field_s, ._field_rootLookup=(*(_self_))._field_e.get()._field_lookup, ._field_lookup=(*(_self_))._field_e.get()._field_lookup, ._field_errorToken=(*(_self_))._field_u.get()._field_Op, };;
	{
		auto &_match_expr{ (*(_self_))._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1a660b851:;
			{
				(*(_self_))._field_d.get()._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(_1accbada5_buildPtrFromType(&_328317_tc, &((*(_self_))._field_d.get()._field_Kind)), 26)});
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1a660dd81:;
			{
				(*(_self_))._field_d.get()._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(_1accba789_buildSptrFromType(&_328317_tc, &((*(_self_))._field_d.get()._field_Kind)), 21)});
			}
		}
		else {
			_case_begin_1a660c7ec:;
			{
				_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_u.get()._field_Op, jule::Str("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_u.get()._field_Op.get()._field_Kind, &__jule_any_type5),jule::Any(_1acca5059_Str((*(_self_))._field_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1a660c797:;
	};
	(*(_self_))._field_d.get()._field_Decl=true;
}



inline void _1acc97304_evalData(_1acc95e07_unaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1a661113b:;
			{
				jule::Ptr<_1acca4ba2_TypeKind> _330621_prefix = (*(_self_))._field_e.get()._field_prefix;;
				(*(_self_))._field_e.get()._field_prefix=nullptr;
				(*(_self_))._field_d=_1acc95368_eval((*(_self_))._field_e, (*(_self_))._field_u.get()._field_Expr);
				(*(_self_))._field_e.get()._field_prefix=_330621_prefix;
			}
		}
		else {
			_case_begin_1a6610c0c:;
			{
				(*(_self_))._field_d=_1acc95368_eval((*(_self_))._field_e, (*(_self_))._field_u.get()._field_Expr);
			}
		}
		_match_end_1a6610ba7:;
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc97612_eval(_1acc95e07_unaryEval* _self_, jule::Ptr<_1acadd755_UnaryExpr> _331527_u) {
	(*(_self_))._field_u=_331527_u;
	_1acc97304_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_self_))._field_d.get()._field_Decl) {
		_1acc97128_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_1acca4ba2_TypeKind> _332613_kind = (*(_self_))._field_d.get()._field_Kind;;
	{
		auto &_match_expr{ (*(_self_))._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1a6614eca:;
			{
				_1acc96512_minus(_self_);
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1a66149be:;
			{
				_1acc966dd_plus(_self_);
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1a6614a35:;
			{
				_1acc968b9_caret(_self_);
			}
		}
		else if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1a6614a9b:;
			{
				_1acc96a95_excl(_self_);
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1a6614b12:;
			{
				_1acc96c71_star(_self_);
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1a6615173:;
			{
				_1acc96e4c_amper(_self_);
			}
		}
		else {
			_case_begin_1a6614958:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_1a6614903:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1a66151d9:;
			{
				_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_u.get()._field_Op, jule::Str("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_u.get()._field_Op.get()._field_Kind, &__jule_any_type5),jule::Any(_1acca5059_Str(_332613_kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		else if (_1abd5e5ba_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_1a6616b9c:;
			{
				(*(_self_))._field_d.get()._field_Model=jule::Any((*(_self_))._field_d.get()._field_Constant, &__jule_any_type19);
			}
		}
		_match_end_1a6616b47:;
	};
	(*(_self_))._field_d.get()._field_Mutable=true;
	return (*(_self_))._field_d;;
}







std::ostream &operator<<(std::ostream &_Stream, _1acc95e07_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1acc97bd9_binaryEval static__1acc982b1_newPlain(jule::Ptr<_1acc78e73_Eval> _336428_e) {
	return _1acc97bd9_binaryEval{._field_e=_336428_e, };;
}



inline _1acc97bd9_binaryEval static__1acc98602_new(jule::Ptr<_1acc78e73_Eval> _337023_e, jule::Ptr<_2097d15d8_Token> _337037_op) {
	return _1acc97bd9_binaryEval{._field_e=_337023_e, ._field_op=_337037_op};;
}



inline jule::Bool _1acc98866_checkTypeCompatibility(_1acc97bd9_binaryEval* _self_) {
	return _1abcee6e2_checkTypeCompatibility((*(_self_))._field_e.get()._field_s, &((*(_self_))._field_l.get()._field_Kind), &((*(_self_))._field_r.get()._field_Kind), &((*(_self_))._field_op));;
}



inline jule::Bool _1acc98b0d_checkStructCommonOperatorCompatibility(_1acc97bd9_binaryEval* _self_) {
	jule::Ptr<_1acb24d85_FnIns> _338417_overload = nullptr;;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1a661c0d1:;
			{
				_338417_overload=_1acca8821_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1a661a9c5:;
			{
				_338417_overload=_1acca8821_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1a661bed2:;
			{
				_338417_overload=_1acca8821_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Add;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1a661b036:;
			{
				_338417_overload=_1acca8821_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1a661b09c:;
			{
				_338417_overload=_1acca8821_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Div;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1a661c147:;
			{
				_338417_overload=_1acca8821_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1a661c1ad:;
			{
				_338417_overload=_1acca8821_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1a661c224:;
			{
				_338417_overload=_1acca8821_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1a661c28a:;
			{
				_338417_overload=_1acca8821_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1a661c301:;
			{
				_338417_overload=_1acca8821_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1a661ae04:;
			{
				_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1acca5059_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return false;;
			}
		}
		_match_end_1a661ad7c:;
	};
	if ((_338417_overload == nullptr)) {
		_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1acca5059_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return false;;
	};
	jule::Ptr<_1acb23eb6_ParamIns> _341617_p = _338417_overload.get()._field_Params[1LL];;
	return _1abcee291_checkAssignType((*(_self_))._field_e.get()._field_s, _341617_p.get()._field_Decl.get()._field_Reference, &(_341617_p.get()._field_Kind), &((*(_self_))._field_r), (*(_self_))._field_op);;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc98da5_evalComptimeTypeInfo(_1acc97bd9_binaryEval* _self_) {
	jule::Ptr<_1acb49184_comptimeTypeInfo> _342117_r = _1accaa988_comptimeTypeInfo((*(_self_))._field_r.get()._field_Kind.ptr());;
	if ((_342117_r == nullptr)) {
		_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("comptimeTypeInfo", 16), &__jule_any_type5),jule::Any(_1acca5059_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1acb49184_comptimeTypeInfo> _342617_l = _1accaa988_comptimeTypeInfo((*(_self_))._field_l.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1a6505739:;
			{
				jule::Ptr<_1ddeb4b1c_Const> _342921_constant = static__1ddeb558a_NewBool(_1acca5367_Equal(_342617_l.get()._field_base, _342117_r.get()._field_base));;
				return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd693e8_primBool, ._field_Model=jule::Any(_342921_constant, &__jule_any_type19), ._field_Constant=_342921_constant});;
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1a662799e:;
			{
				jule::Ptr<_1ddeb4b1c_Const> _343621_constant = static__1ddeb558a_NewBool((!(_1acca5367_Equal(_342617_l.get()._field_base, _342117_r.get()._field_base))));;
				return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd693e8_primBool, ._field_Model=jule::Any(_343621_constant, &__jule_any_type19), ._field_Constant=_343621_constant});;
			}
		}
		else {
			_case_begin_1a6626915:;
			{
				_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1acca5059_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a66268b0:;
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc99119_evalNil(_1acc97bd9_binaryEval* _self_) {
	if ((!(_1acca691d_NilCompatible((*(_self_))._field_r.get()._field_Kind.ptr())))) {
		_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("nil", 3), &__jule_any_type5),jule::Any(_1acca5059_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a6629682:;
			{
				return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd693e8_primBool, });;
			}
		}
		else {
			_case_begin_1a662aab2:;
			{
				_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("nil", 3), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a662aa18:;
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc9937d_evalEnum(_1acc97bd9_binaryEval* _self_) {
	jule::Ptr<_1acb36b88_Enum> _346717_enm = _1acca7b0b_Enum((*(_self_))._field_l.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a662c83e:;
			{
				jule::Ptr<_1acca4ba2_TypeKind> _347121_rkind = (*(_self_))._field_r.get()._field_Kind;;
				if ((_1acca7b0b_Enum((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
					_347121_rkind=_1acca7b0b_Enum((*(_self_))._field_r.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind;
				};
				if ((!(_1abcee6e2_checkTypeCompatibility((*(_self_))._field_e.get()._field_s, &(_346717_enm.get()._field_Kind.get()._field_Kind), &(_347121_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd693e8_primBool, });;
			}
		}
		_match_end_1a662c7b7:;
	};
	if (((_1acca7b0b_Enum((*(_self_))._field_r.get()._field_Kind.ptr()) == nullptr) || (_346717_enm != _1acca7b0b_Enum((*(_self_))._field_r.get()._field_Kind.ptr())))) {
		_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_346717_enm.get()._field_Ident, &__jule_any_type5),jule::Any(_1acca5059_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1a662bbc3:;
			{
				if ((!(_1ddeb4611_IsNum(_1acca5059_Str(_346717_enm.get()._field_Kind.get()._field_Kind.ptr()))))) {
					_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_346717_enm.get()._field_Ident, &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd693e8_primBool, });;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1a66324ae:;
			{
				jule::Ptr<_1acb36193_EnumItem> _350117_first = _346717_enm.get()._field_Items[0LL];;
				{
					
					if (_1ddeb87ad_IsI64(_350117_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr())) {
						_case_begin_1a6634c20:;
						{
							if ((_1ddeb6415_ReadI64(_350117_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()) == 0LL)) {
								goto _julec_label_next;
							};
							goto _julec_label_err;
						}
					}
					else if (_1ddeb8a22_IsU64(_350117_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr())) {
						_case_begin_1a663437e:;
						{
							if ((_1ddeb6679_ReadU64(_350117_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()) == 0LLU)) {
								goto _julec_label_next;
							};
							goto _julec_label_err;
						}
					}
					else {
						_case_begin_1a6634879:;
						{
							jule::panic(jule::Str("unimplemented enum type, this panic call should be unreachable", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:3514:17"));;
						}
					}
					_match_end_1a6634813:;
				};
				_julec_label_err:;
				_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("the @ enum type is not supports @ operator", 42), jule::Slice<jule::Any>::make({jule::Any(_346717_enm.get()._field_Ident, &__jule_any_type5),jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5)}));
				_1acc797ae_pushSuggestion((*(_self_))._field_e.ptr(), jule::Str("define default enum field (the first one is default) with zero value to use & operator", 86), jule::Slice<jule::Any>());
				_julec_label_next:;
				goto _case_begin_1a6632525;
			}
		}
		else if (_match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1a6632525:;
			{
				if (((_1acca73be_Prim(_346717_enm.get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_1ddeb404a_IsInt(_1accac737_Str(_1acca73be_Prim(_346717_enm.get()._field_Kind.get()._field_Kind.ptr()).ptr())))))) {
					_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_346717_enm.get()._field_Ident, &__jule_any_type5)}));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1a66315ac:;
			{
				_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_346717_enm.get()._field_Ident, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a66314be:;
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc995e2_evalTypeEnum(_1acc97bd9_binaryEval* _self_) {
	jule::Ptr<_1acb38283_TypeEnum> _353417_enm = _1acca7d70_TypeEnum((*(_self_))._field_l.get()._field_Kind.ptr());;
	if ((!(_1acc98866_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a663bd26:;
			{
				return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd693e8_primBool, });;
			}
		}
		else {
			_case_begin_1a663b8d6:;
			{
				_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1acb385b3_Str(_353417_enm.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a663b5a6:;
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc99856_evalSptr(_1acc97bd9_binaryEval* _self_) {
	if ((!(_1acc98866_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a663d564:;
			{
				return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd693e8_primBool, });;
			}
		}
		else {
			_case_begin_1a663ce6a:;
			{
				_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1acca5059_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a663ce15:;
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc99aba_evalPtr(_1acc97bd9_binaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1a663ea2c:;
			{
				if ((!(_1acc98866_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd693e8_primBool, });;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1)) {
			_case_begin_1a6641105:;
			{
				if ((_1acca7897_Ptr((*(_self_))._field_l.get()._field_Kind.ptr()) == nullptr)) {
					({
						jule::Ptr<_1abd5dc4b_Data> ___jule_assign_arg = (*(_self_))._field_r;
						jule::Ptr<_1abd5dc4b_Data> _1___jule_assign_arg = (*(_self_))._field_l;
						(*(_self_))._field_l = ___jule_assign_arg;
						(*(_self_))._field_r = _1___jule_assign_arg;
					});
				};
				if (_1accb4b90_IsUnsafe(_1acca7897_Ptr((*(_self_))._field_l.get()._field_Kind.ptr()).ptr())) {
					_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1acca5059_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				};
				if ((!(_1acca064d_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is incompatible to use for pointer arithmetic", 52), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1a663ec3b:;
			{
				_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1acca5059_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a663e7c9:;
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc99d2e_evalArr(_1acc97bd9_binaryEval* _self_) {
	if ((!(_1acc98866_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a6645acc:;
			{
				return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd693e8_primBool, });;
			}
		}
		else {
			_case_begin_1a6645ba9:;
			{
				_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1acca5059_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a6641963:;
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc9a093_evalSlc(_1acc97bd9_binaryEval* _self_) {
	if ((!(_1acc98866_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a664789d:;
			{
				return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd693e8_primBool, });;
			}
		}
		else {
			_case_begin_1a66472a4:;
			{
				_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1acca5059_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a664724e:;
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc9a307_evalStruct(_1acc97bd9_binaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1a66490db:;
			{
				if ((_1acca8821_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Gt == nullptr)) {
					_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1acca5059_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd693e8_primBool, });;
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1a6649152:;
			{
				if ((_1acca8821_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_GtEq == nullptr)) {
					_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1acca5059_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd693e8_primBool, });;
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1a6649482:;
			{
				if ((_1acca8821_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Lt == nullptr)) {
					_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1acca5059_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd693e8_primBool, });;
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1a66494e8:;
			{
				if ((_1acca8821_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_LtEq == nullptr)) {
					_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1acca5059_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd693e8_primBool, });;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a664955e:;
			{
				if ((!(_1acc98866_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd693e8_primBool, });;
			}
		}
		_match_end_1a6648b13:;
	};
	if ((!(_1acc98b0d_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc9a56b_evalTrait(_1acc97bd9_binaryEval* _self_) {
	if ((!(_1acc98866_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a6652226:;
			{
				return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd693e8_primBool, });;
			}
		}
		else {
			_case_begin_1a6652347:;
			{
				_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1acca5059_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a665206c:;
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc9a7d0_evalAny(_1acc97bd9_binaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a66536de:;
			{
				return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd693e8_primBool, });;
			}
		}
		else {
			_case_begin_1a66538ed:;
			{
				_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("any", 3), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a665347a:;
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc9aa44_evalBool(_1acc97bd9_binaryEval* _self_) {
	if ((!(_1acc98866_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("&&", 2) || _match_expr == jule::Str("||", 2)) {
			_case_begin_1a6655603:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1a6655009:;
			{
				_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1acca5059_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a6654ea4:;
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc9aca8_evalStr(_1acc97bd9_binaryEval* _self_) {
	jule::Str _373317_rk = _1acca5059_Str((*(_self_))._field_r.get()._field_Kind.ptr());;
	if ((!_373317_rk.equal("str", 3))) {
		_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_373317_rk, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1a66570c7:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1a66593e8:;
			{
				return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd693e8_primBool, });;
			}
		}
		else {
			_case_begin_1a6657935:;
			{
				_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("str", 3), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a66578d0:;
	};
}



inline void _1acc9ae84_setTypeToGreater(_1acc97bd9_binaryEval* _self_) {
	jule::Ptr<_1accac407_Prim> _375813_lp = _1acca73be_Prim((*(_self_))._field_l.get()._field_Kind.ptr());;
	jule::Ptr<_1accac407_Prim> _375913_rp = _1acca73be_Prim((*(_self_))._field_r.get()._field_Kind.ptr());;
	if (_1abd5e5ba_IsConst((*(_self_))._field_l.ptr())) {
		if ((!(_1abd5e5ba_IsConst((*(_self_))._field_r.ptr())))) {
			(*(_self_))._field_l.get()._field_Kind=(*(_self_))._field_r.get()._field_Kind;
			(*(_self_))._field_l.get()._field_Constant.get()._field_Kind=_375913_rp.get()._field_Kind;
			return;;
		};
		goto _julec_label_set;
	};
	if (_1abd5e5ba_IsConst((*(_self_))._field_r.ptr())) {
		(*(_self_))._field_r.get()._field_Constant.get()._field_Kind=_375813_lp.get()._field_Kind;
		return;;
	};
	_julec_label_set:;
	if (((*(_self_))._field_l.get()._field_untyped && (!((*(_self_))._field_r.get()._field_untyped)))) {
		(*(_self_))._field_l.get()._field_Kind=(*(_self_))._field_r.get()._field_Kind;
		if (_1abd5e5ba_IsConst((*(_self_))._field_l.ptr())) {
			(*(_self_))._field_l.get()._field_Constant.get()._field_Kind=_375913_rp.get()._field_Kind;
		};
		(*(_self_))._field_l.get()._field_untyped=false;
		return;;
	} else if (((!((*(_self_))._field_l.get()._field_untyped)) && (*(_self_))._field_r.get()._field_untyped)) {
		return;;
	};
	if (_1ddeb2983_IsGreater(_375913_rp.get()._field_Kind, _375813_lp.get()._field_Kind)) {
		(*(_self_))._field_l.get()._field_Kind=(*(_self_))._field_r.get()._field_Kind;
		if (_1abd5e5ba_IsConst((*(_self_))._field_l.ptr())) {
			(*(_self_))._field_l.get()._field_Constant.get()._field_Kind=_375913_rp.get()._field_Kind;
		};
	};
}



inline void _1acc9b1c6_checkModData(_1acc97bd9_binaryEval* _self_, jule::Ptr<_1abd5dc4b_Data>* _379136_d) {
	if ((!(_1abd5e5ba_IsConst((*(_379136_d)).ptr())))) {
		if (((_1acca73be_Prim((*(_379136_d)).get()._field_Kind.ptr()) == nullptr) || (!(_1ddeb404a_IsInt(_1acca73be_Prim((*(_379136_d)).get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1abd46a36_sigAssignable(jule::Str("i64", 3), _379136_d)) {
			_case_begin_1a6663622:;
			{
				_1ddeb7878_SetI64((*(_379136_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1ddeb712a_AsI64((*(_379136_d)).get()._field_Constant.ptr())));
			}
		}
		else if (_1abd46dbb_unsigAssignable(jule::Str("u64", 3), _379136_d)) {
			_case_begin_1a6663325:;
			{
				_1ddeb7aed_SetU64((*(_379136_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1ddeb738e_AsU64((*(_379136_d)).get()._field_Constant.ptr())));
			}
		}
		else {
			_case_begin_1a6661da1:;
			{
				_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a6661d4b:;
	};
}



inline void _1acc9b3a2_mod(_1acc97bd9_binaryEval* _self_) {
	_1acc9b1c6_checkModData(_self_, &((*(_self_))._field_l));
	_1acc9b1c6_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _1acc9b759_numbersAreCompatibile(_1acc97bd9_binaryEval* _self_, jule::Str* _381337_lk, jule::Str* _381347_rk) {
	if ((!(_1ddeb4611_IsNum((*(_381347_rk)))))) {
		return false;;
	};
	if ((_1abd5e5ba_IsConst((*(_self_))._field_l.ptr()) && (*(_self_))._field_l.get()._field_untyped)) {
		return true;;
	};
	if ((*(_381337_lk)).equal("f32", 3)) {
		if ((_1abd5e5ba_IsConst((*(_self_))._field_r.ptr()) && (*(_self_))._field_r.get()._field_untyped)) {
			return true;;
		};
		return (*(_381347_rk)).equal("f32", 3);;
	};
	if ((*(_381337_lk)).equal("f64", 3)) {
		if ((_1abd5e5ba_IsConst((*(_self_))._field_r.ptr()) && (*(_self_))._field_r.get()._field_untyped)) {
			return true;;
		};
		return (*(_381347_rk)).equal("f64", 3);;
	};
	if ((_1abd5e5ba_IsConst((*(_self_))._field_r.ptr()) && (*(_self_))._field_r.get()._field_untyped)) {
		return true;;
	};
	return ((*(_381337_lk)) == (*(_381347_rk)));;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc9b9bd_evalFloat(_1acc97bd9_binaryEval* _self_) {
	jule::Str _383913_lk = _1acca73be_Prim((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _384013_rk = _1acca73be_Prim((*(_self_))._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	if ((!(_1acc9b759_numbersAreCompatibile(_self_, &(_383913_lk), &(_384013_rk))))) {
		_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_383913_lk, &__jule_any_type5),jule::Any(_384013_rk, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1a666b0b9:;
			{
				if (((!(_1abd5e5ba_IsConst((*(_self_))._field_l.ptr()))) || (!(_1abd4720c_intAssignable(jule::Str("i64", 3), &((*(_self_))._field_l)))))) {
					_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_383913_lk, &__jule_any_type5),jule::Any(_384013_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				if (((!(_1abd5e5ba_IsConst((*(_self_))._field_r.ptr()))) || (!(_1abd4720c_intAssignable(jule::Str("u64", 3), &((*(_self_))._field_r)))))) {
					_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_383913_lk, &__jule_any_type5),jule::Any(_384013_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				_1ddeb7878_SetI64((*(_self_))._field_l.get()._field_Constant.ptr(), static_cast<jule::I64>(_1ddeb712a_AsI64((*(_self_))._field_l.get()._field_Constant.ptr())));
				_1ddeb7aed_SetU64((*(_self_))._field_r.get()._field_Constant.ptr(), static_cast<jule::U64>(_1ddeb738e_AsU64((*(_self_))._field_r.get()._field_Constant.ptr())));
				if ((!(_1acc9ee33_isOkForShifting(&((*(_self_))._field_r))))) {
					_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1a666a580:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1a6670640:;
			{
				_1acc9ae84_setTypeToGreater(_self_);
				return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd693e8_primBool, });;
			}
		}
		_match_end_1a66704a8:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1)) {
			_case_begin_1a666a382:;
			{
				_1acc9ae84_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1a6672213:;
			{
				if ((!(_1ddeb404a_IsInt(_384013_rk)))) {
					_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_383913_lk, &__jule_any_type5),jule::Any(_384013_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				_1acc9b3a2_mod(_self_);
				_1acc9ae84_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_1a6671652:;
			{
				_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for floating-point type(s)", 52), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a6671157:;
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc9bc32_evalInt(_1acc97bd9_binaryEval* _self_) {
	jule::Str _390313_lk = _1acca73be_Prim((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _390413_rk = _1acca73be_Prim((*(_self_))._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1a6672301:;
			{
				if (((!(_1ddeb404a_IsInt(_390313_lk))) || (!(_1ddeb404a_IsInt(_390413_rk))))) {
					_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_390313_lk, &__jule_any_type5),jule::Any(_390413_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				if ((!(_1acc9ee33_isOkForShifting(&((*(_self_))._field_r))))) {
					_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1a667515b:;
	};
	if ((!(_1acc9b759_numbersAreCompatibile(_self_, &(_390313_lk), &(_390413_rk))))) {
		_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_390313_lk, &__jule_any_type5),jule::Any(_390413_rk, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1a6677d51:;
			{
				return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd693e8_primBool, });;
			}
		}
		_match_end_1a667747c:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1a667528d:;
			{
				_1acc9ae84_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1a6679858:;
			{
				_1acc9b3a2_mod(_self_);
				_1acc9ae84_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1a6678b43:;
			{
				_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for integer type(s)", 45), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a6678add:;
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc9be96_evalPrim(_1acc97bd9_binaryEval* _self_) {
	jule::Ptr<_1accac407_Prim> _396013_prim = _1acca73be_Prim((*(_self_))._field_l.get()._field_Kind.ptr());;
	{
		
		if (_1accb0394_IsBool(_396013_prim.ptr())) {
			_case_begin_1a667b6a1:;
			{
				return _1acc9aa44_evalBool(_self_);;
			}
		}
		else if (_1accb0608_IsStr(_396013_prim.ptr())) {
			_case_begin_1a667b728:;
			{
				return _1acc9aca8_evalStr(_self_);;
			}
		}
		_match_end_1a667b5e6:;
	};
	if ((_1acca73be_Prim((*(_self_))._field_r.get()._field_Kind.ptr()) == nullptr)) {
		_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1accac737_Str(_396013_prim.ptr()), &__jule_any_type5),jule::Any(_1acca5059_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	{
		
		if (_1ddeb4369_IsFloat(_396013_prim.get()._field_Kind)) {
			_case_begin_1a667dcbe:;
			{
				return _1acc9b9bd_evalFloat(_self_);;
			}
		}
		else if (_1ddeb404a_IsInt(_396013_prim.get()._field_Kind)) {
			_case_begin_1a667d692:;
			{
				return _1acc9bc32_evalInt(_self_);;
			}
		}
		else {
			_case_begin_1a667d62b:;
			{
				return nullptr;;
			}
		}
		_match_end_1a667a738:;
	};
}



inline void _1acc9c172_checkSpecialCases(_1acc97bd9_binaryEval* _self_) {
	if (((!(_1acca61d1_Comparable((*(_self_))._field_l.get()._field_Kind.ptr()))) && (!(_1acca5c08_IsNil((*(_self_))._field_r.get()._field_Kind.ptr()))))) {
		_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
	} else if (((!(_1acca61d1_Comparable((*(_self_))._field_r.get()._field_Kind.ptr()))) && (!(_1acca5c08_IsNil((*(_self_))._field_l.get()._field_Kind.ptr()))))) {
		_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc9c3d6_evalOp(_1acc97bd9_binaryEval* _self_) {
	_1acc9c172_checkSpecialCases(_self_);
	{
		
		if (_1acca5e6c_Void((*(_self_))._field_l.get()._field_Kind.ptr())) {
			_case_begin_1a668291b:;
			{
				_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("void", 4), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		else if ((_1accaa988_comptimeTypeInfo((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6682300:;
			{
				({
					jule::Ptr<_1abd5dc4b_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1abd5dc4b_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1a6683884;
			}
		}
		else if ((_1accaa988_comptimeTypeInfo((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6683884:;
			{
				return _1acc98da5_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_1acca73be_Prim((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr) && _1accb086c_IsAny(_1acca73be_Prim((*(_self_))._field_r.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1a6683972:;
			{
				({
					jule::Ptr<_1abd5dc4b_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1abd5dc4b_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1a6683a3d;
			}
		}
		else if (_1acca5c08_IsNil((*(_self_))._field_r.get()._field_Kind.ptr())) {
			_case_begin_1a6683a3d:;
			{
				({
					jule::Ptr<_1abd5dc4b_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1abd5dc4b_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1a6683aa4;
			}
		}
		else if (_1acca5c08_IsNil((*(_self_))._field_l.get()._field_Kind.ptr())) {
			_case_begin_1a6683aa4:;
			{
				return _1acc99119_evalNil(_self_);;
			}
		}
		else if (((_1acca73be_Prim((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr) && _1accb086c_IsAny(_1acca73be_Prim((*(_self_))._field_l.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1a6683b1a:;
			{
				return _1acc9a7d0_evalAny(_self_);;
			}
		}
		else if ((_1acca7d70_TypeEnum((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6683b81:;
			{
				({
					jule::Ptr<_1abd5dc4b_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1abd5dc4b_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1a6683be7;
			}
		}
		else if ((_1acca7d70_TypeEnum((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6683be7:;
			{
				return _1acc995e2_evalTypeEnum(_self_);;
			}
		}
		else if ((_1acca7b0b_Enum((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6683c5d:;
			{
				({
					jule::Ptr<_1abd5dc4b_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1abd5dc4b_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1a6683cc4;
			}
		}
		else if ((_1acca7b0b_Enum((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6683cc4:;
			{
				return _1acc9937d_evalEnum(_self_);;
			}
		}
		else if ((_1acca7633_Sptr((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6683d3a:;
			{
				({
					jule::Ptr<_1abd5dc4b_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1abd5dc4b_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1a6683da1;
			}
		}
		else if ((_1acca7633_Sptr((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6683da1:;
			{
				return _1acc99856_evalSptr(_self_);;
			}
		}
		else if ((_1acca7897_Ptr((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6683e17:;
			{
				({
					jule::Ptr<_1abd5dc4b_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1abd5dc4b_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1a6683e7d;
			}
		}
		else if ((_1acca7897_Ptr((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6683e7d:;
			{
				return _1acc99aba_evalPtr(_self_);;
			}
		}
		else if ((_1acca80d4_Arr((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6683ee4:;
			{
				return _1acc99d2e_evalArr(_self_);;
			}
		}
		else if ((_1acca8348_Slc((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a668405a:;
			{
				return _1acc9a093_evalSlc(_self_);;
			}
		}
		else if ((_1acca8a85_Trait((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a66840c1:;
			{
				({
					jule::Ptr<_1abd5dc4b_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1abd5dc4b_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1a6684137;
			}
		}
		else if ((_1acca8a85_Trait((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6684137:;
			{
				return _1acc9a56b_evalTrait(_self_);;
			}
		}
		else if ((_1acca8821_Struct((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a668419d:;
			{
				return _1acc9a307_evalStruct(_self_);;
			}
		}
		else if ((_1acca73be_Prim((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6684214:;
			{
				return _1acc9be96_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_1a668271d:;
			{
				_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1acca5059_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a66826a7:;
	};
}



inline void _1acc9c65b_evalConst(_1acc97bd9_binaryEval* _self_, jule::Ptr<_1abd5dc4b_Data>* _405133_d) {
	{
		
		if (((*(_405133_d)) == nullptr) || ((*(_self_))._field_l.get()._field_Model == nullptr) || ((*(_self_))._field_r.get()._field_Model == nullptr)) {
			_case_begin_1a6693861:;
			{
				return;;
			}
		}
		else if ((!(_1abd5e5ba_IsConst((*(_self_))._field_l.ptr()))) || (!(_1abd5e5ba_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_1a6693e5a:;
			{
				(*(_405133_d)).get()._field_Constant=nullptr;
				return;;
			}
		}
		_match_end_1a6693751:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1a6695b2c:;
			{
				(*(_405133_d)).get()._field_Constant=static__1ddeb558a_NewBool(_1ddeba20a_Eq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1a6695b93:;
			{
				(*(_405133_d)).get()._field_Constant=static__1ddeb558a_NewBool((!(_1ddeba20a_Eq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))))));
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1a6695c09:;
			{
				(*(_405133_d)).get()._field_Constant=static__1ddeb558a_NewBool(_1ddeb9dec_Or((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1a6695c70:;
			{
				(*(_405133_d)).get()._field_Constant=static__1ddeb558a_NewBool(_1ddeb9ade_And((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1a6695cd6:;
			{
				(*(_405133_d)).get()._field_Constant=static__1ddeb558a_NewBool(_1ddebab34_Gt((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1a6695d4c:;
			{
				(*(_405133_d)).get()._field_Constant=static__1ddeb558a_NewBool(_1ddeba518_Lt((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1a6695db3:;
			{
				(*(_405133_d)).get()._field_Constant=static__1ddeb558a_NewBool(_1ddebae42_GtEq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1a6695e29:;
			{
				(*(_405133_d)).get()._field_Constant=static__1ddeb558a_NewBool(_1ddeba826_LtEq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1a6695e90:;
			{
				_1ddebb250_Add((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_405133_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1a6696006:;
			{
				_1ddebb55d_Sub((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_405133_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1a669606c:;
			{
				_1ddebb86b_Mul((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_405133_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1a66960d3:;
			{
				jule::Bool _409017_ok = _1ddebbb79_Div((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));;
				if (((!(_409017_ok)) && (_1ddeb7603_AsF64((*(_self_))._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*(_405133_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
				jule::Ptr<_1accac407_Prim> _409521_prim = _1acca73be_Prim((*(_405133_d)).get()._field_Kind.ptr());;
				{
					
					if (_1ddeb39b7_IsSigInt(_409521_prim.get()._field_Kind)) {
						_case_begin_1a66a2430:;
						{
							_1ddeb7878_SetI64((*(_405133_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1ddeb712a_AsI64((*(_405133_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_1ddeb3ca3_IsUnsigInt(_409521_prim.get()._field_Kind)) {
						_case_begin_1a66a24a7:;
						{
							_1ddeb7aed_SetU64((*(_405133_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1ddeb738e_AsU64((*(_405133_d)).get()._field_Constant.ptr())));
						}
					}
					_match_end_1a66a2375:;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1a669615a:;
			{
				jule::Bool _410317_ok = _1ddebbe87_Mod((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));;
				if (((!(_410317_ok)) && (_1ddeb7603_AsF64((*(_self_))._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*(_405133_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1a66961d2:;
			{
				_1ddebc5a3_BitwiseOr((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_405133_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1a6696259:;
			{
				_1ddebc295_BitwiseAnd((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_405133_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1a66962d1:;
			{
				_1ddebc8b1_Xor((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_405133_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1a6696358:;
			{
				_1ddebcbbe_Lshift((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_405133_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1a66963d0:;
			{
				_1ddebcecc_Rshift((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_405133_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		_match_end_1a66953e0:;
	};
	(*(_405133_d)).get()._field_Model=jule::Any((*(_405133_d)).get()._field_Constant, &__jule_any_type19);
	_1acca13c9_applyCastModelByEnum(_405133_d, _1acca7b0b_Enum((*(_405133_d)).get()._field_Kind.ptr()));
}



inline void _1acc9c8d1_checkData(_1acc97bd9_binaryEval* _self_, jule::Ptr<_1abd5dc4b_Data>* _412833_d) {
	jule::Ptr<_1acb24d85_FnIns> _412913_f = _1acca85ac_Fn((*(_412833_d)).get()._field_Kind.ptr());;
	if ((((_412913_f != nullptr) && (_412913_f.get()._field_Decl != nullptr)) && _1acb228aa_IsMethod(_412913_f.get()._field_Decl.ptr()))) {
		_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("invalid expression used for binary operation", 44), jule::Slice<jule::Any>());
	};
}



inline void _1acc9caac_checkDatas(_1acc97bd9_binaryEval* _self_) {
	_1acc9c8d1_checkData(_self_, &((*(_self_))._field_l));
	_1acc9c8d1_checkData(_self_, &((*(_self_))._field_r));
}



inline void _1acc9cd32_setModel(_1acc97bd9_binaryEval* _self_, jule::Ptr<_1abd5dc4b_Data>* _414032_d) {
	if (_1abd5e5ba_IsConst((*(_414032_d)).ptr())) {
		if (((_1abd5e5ba_IsConst((*(_self_))._field_l.ptr()) && _1abd5e5ba_IsConst((*(_self_))._field_r.ptr())) || (((*(_self_))._field_l.get()._field_Model == nullptr) && ((*(_self_))._field_r.get()._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_1abd5dc4b_Data> _414918_l;;
	jule::Ptr<_1abd5dc4b_Data> _414925_r;;
	({
		jule::Ptr<_1abd5dc4b_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_1abd5dc4b_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_414918_l = ___jule_assign_arg;
		_414925_r = _1___jule_assign_arg;
	});
	if ((!(_1abd5e8c8_GoodOperand(_414918_l.ptr(), &(_414925_r))))) {
		({
			jule::Ptr<_1abd5dc4b_Data> ___jule_assign_arg = _414925_r;
			jule::Ptr<_1abd5dc4b_Data> _1___jule_assign_arg = _414918_l;
			_414918_l = ___jule_assign_arg;
			_414925_r = _1___jule_assign_arg;
		});
	};
	(*(_414032_d)).get()._field_Model=jule::Any(jule::new_ptr<_1acb0e204_BinopExprModel>(_1acb0e204_BinopExprModel{._field_Left=jule::new_ptr<_1acb0dc3c_OperandExprModel>(_1acb0dc3c_OperandExprModel{._field_Kind=_414918_l.get()._field_Kind, ._field_Model=_414918_l.get()._field_Model}), ._field_Right=jule::new_ptr<_1acb0dc3c_OperandExprModel>(_1acb0dc3c_OperandExprModel{._field_Kind=_414925_r.get()._field_Kind, ._field_Model=_414925_r.get()._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type114);
}



inline void _1acc9d0a7_postEval(_1acc97bd9_binaryEval* _self_, jule::Ptr<_1abd5dc4b_Data>* _416732_d) {
	(*(_416732_d)).get()._field_Lvalue=false;
	_1acc9cd32_setModel(_self_, _416732_d);
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc9d45e_solveExplicit(_1acc97bd9_binaryEval* _self_, jule::Ptr<_1abd5dc4b_Data>* _417237_l, jule::Ptr<_1abd5dc4b_Data>* _417252_r) {
	({
		jule::Ptr<_1abd5dc4b_Data> ___jule_assign_arg = (*(_417237_l));
		jule::Ptr<_1abd5dc4b_Data> _1___jule_assign_arg = (*(_417252_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1acc9caac_checkDatas(_self_);
	jule::Ptr<_1abd5dc4b_Data> _417717_d = _1acc9c3d6_evalOp(_self_);;
	({
		jule::Ptr<_1abd5dc4b_Data> ___jule_assign_arg = (*(_417237_l));
		jule::Ptr<_1abd5dc4b_Data> _1___jule_assign_arg = (*(_417252_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1acc9c65b_evalConst(_self_, &(_417717_d));
	if ((_417717_d != nullptr)) {
		_417717_d.get()._field_Mutable=true;
		_1acc9d0a7_postEval(_self_, &(_417717_d));
	};
	return _417717_d;;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acc9d76c_eval(_1acc97bd9_binaryEval* _self_, jule::Ptr<_1acadec62_BinopExpr>* _419228_op) {
	if ((*(_419228_op)).get()._field_Op.get()._field_Kind.equal("=", 1)) {
		_1acc79490_pushErr((*(_self_))._field_e.ptr(), (*(_419228_op)).get()._field_Op, jule::Str("assignments not available for expressions", 41), jule::Slice<jule::Any>());
		_1acc797ae_pushSuggestion((*(_self_))._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1abd5dc4b_Data> _419917_l = _1acc95676_evalExpr1((*(_self_))._field_e, (*(_419228_op)).get()._field_Left);;
	if (((_419917_l == nullptr) || (_419917_l.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1acca4ba2_TypeKind> _420417_prefix = (*(_self_))._field_e.get()._field_prefix;;
	(*(_self_))._field_e.get()._field_prefix=_419917_l.get()._field_Kind;
	__JULE_DEFER({
		(*(_self_))._field_e.get()._field_prefix=_420417_prefix;
	});;
	jule::Ptr<_1abd5dc4b_Data> _420717_r = _1acc95676_evalExpr1((*(_self_))._field_e, (*(_419228_op)).get()._field_Right);;
	if (((_420717_r == nullptr) || (_420717_r.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*(_419228_op)).get()._field_Op;
	jule::Ptr<_1abd5dc4b_Data> _421417_d = _1acc9d45e_solveExplicit(_self_, &(_419917_l), &(_420717_r));;
	if ((((_421417_d != nullptr) && _419917_l.get()._field_IsRune) && _420717_r.get()._field_IsRune)) {
		_421417_d.get()._field_IsRune=true;
	};
	return _421417_d;;
}







std::ostream &operator<<(std::ostream &_Stream, _1acc97bd9_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acca3420_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acca3e59_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1acca5059_Str(_1acca4ba2_TypeKind* _self_) {
	if (_1acca5c08_IsNil(_self_)) {
		return jule::Str("nil", 3);;
	};
	jule::Str _7417_kind = jule::Str();;
	if ((*(_self_))._field_Variadic) {
		(_7417_kind).append("...", 3);
	};
	if (_1acca5994_Binded(_self_)) {
		(_7417_kind).append("cpp.", 4);
		_7417_kind+=(*(_self_))._field_BindIdent;
	} else {
		_7417_kind+=_1acca4740_Kind_mptr_data[((*(_self_))._field_Kind).type_offset]._1acca42de_Str((*(_self_))._field_Kind);
	};
	return _7417_kind;;
}



inline jule::Bool _1acca5367_Equal(jule::Ptr<_1acca4ba2_TypeKind> _self_, jule::Ptr<_1acca4ba2_TypeKind> _9021_other) {
	if (_1acca5c08_IsNil(_self_.ptr())) {
		return _1acca5c08_IsNil(_9021_other.ptr());;
	};
	if (_1acca5994_Binded(_self_.ptr())) {
		return (_1acca5994_Binded(_9021_other.ptr()) && (_self_.get()._field_BindIdent == _9021_other.get()._field_BindIdent));;
	};
	return _1acca4740_Kind_mptr_data[(_self_.get()._field_Kind).type_offset]._1acca45ec_Equal(_self_.get()._field_Kind, _9021_other);;
}



inline jule::Bool _1acca5994_Binded(_1acca4ba2_TypeKind* _self_) {
	return ((*(_self_))._field_BindIdent.len() != 0LL);;
}



inline jule::Bool _1acca5c08_IsNil(_1acca4ba2_TypeKind* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _1acca5e6c_Void(_1acca4ba2_TypeKind* _self_) {
	jule::Ptr<_1accac407_Prim> _11013_prim = _1acca73be_Prim(_self_);;
	return ((_11013_prim != nullptr) && _11013_prim.get()._field_Kind.equal("void", 4));;
}



inline jule::Bool _1acca61d1_Comparable(_1acca4ba2_TypeKind* _self_) {
	{
		_1acca4ba2_TypeKind* _11721__self = (&((*(_self_))));;
		if ((_1acca8821_Struct(_11721__self) != nullptr)) {
			return _1acca8821_Struct(_11721__self).get()._field_Comparable;;
		};
		return (((_1acca8ce9_Map(_11721__self) == nullptr) && (_1acca8348_Slc(_11721__self) == nullptr)) && (_1acca85ac_Fn(_11721__self) == nullptr));;
	};
}



inline jule::Bool _1acca6445_Mutable(_1acca4ba2_TypeKind* _self_) {
	{
		_1acca4ba2_TypeKind* _12821__self = (&((*(_self_))));;
		if ((_1acca8821_Struct(_12821__self) != nullptr)) {
			return _1acca8821_Struct(_12821__self).get()._field_Mutable;;
		};
		if ((_1acca8a85_Trait(_12821__self) != nullptr)) {
			return _1acca8a85_Trait(_12821__self).get()._field_Mutable;;
		};
		if ((_1acca73be_Prim(_12821__self) != nullptr)) {
			jule::Ptr<_1accac407_Prim> _13621_p = _1acca73be_Prim(_12821__self);;
			return _1accb086c_IsAny(_13621_p.ptr());;
		};
		if ((_1acca80d4_Arr(_12821__self) != nullptr)) {
			return _1acca6445_Mutable(_1acca80d4_Arr(_12821__self).get()._field_Elem.ptr());;
		};
		return (((_1acca8348_Slc(_12821__self) != nullptr) || (_1acca7897_Ptr(_12821__self) != nullptr)) || (_1acca7633_Sptr(_12821__self) != nullptr));;
	};
}



inline jule::Bool _1acca66a9_Ordered(_1acca4ba2_TypeKind* _self_) {
	{
		_1acca4ba2_TypeKind* _15121__self = (&((*(_self_))));;
		jule::Ptr<_1accac407_Prim> _15217_prim = _1acca73be_Prim(_15121__self);;
		if ((_15217_prim != nullptr)) {
			return (_1ddeb4611_IsNum(_15217_prim.get()._field_Kind) || _1accb0608_IsStr(_15217_prim.ptr()));;
		};
		if ((_1acca7897_Ptr(_15121__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_1acb09d37_StructIns> _15917_s = _1acca8821_Struct(_15121__self);;
		if ((_15917_s != nullptr)) {
			return ((((_15917_s.get()._field_Operators._field_Gt != nullptr) && (_15917_s.get()._field_Operators._field_GtEq != nullptr)) && (_15917_s.get()._field_Operators._field_Lt != nullptr)) && (_15917_s.get()._field_Operators._field_LtEq != nullptr));;
		};
		jule::Ptr<_1acb36b88_Enum> _16617_enm = _1acca7b0b_Enum(_15121__self);;
		if ((_16617_enm != nullptr)) {
			return _1ddeb4611_IsNum(_1acca5059_Str(_16617_enm.get()._field_Kind.get()._field_Kind.ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _1acca691d_NilCompatible(_1acca4ba2_TypeKind* _self_) {
	{
		_1acca4ba2_TypeKind* _17721__self = (&((*(_self_))));;
		jule::Ptr<_1accac407_Prim> _17917_prim = _1acca73be_Prim(_17721__self);;
		if (((_17917_prim != nullptr) && _1accb086c_IsAny(_17917_prim.ptr()))) {
			return true;;
		};
		return (((((((_1acca5c08_IsNil(_17721__self) || (_1acca85ac_Fn(_17721__self) != nullptr)) || (_1acca7633_Sptr(_17721__self) != nullptr)) || (_1acca7897_Ptr(_17721__self) != nullptr)) || (_1acca8a85_Trait(_17721__self) != nullptr)) || (_1acca8348_Slc(_17721__self) != nullptr)) || (_1acca8ce9_Map(_17721__self) != nullptr)) || (_1acca7d70_TypeEnum(_17721__self) != nullptr));;
	};
}



inline jule::Bool _1acca6b82_PerformsRC(_1acca4ba2_TypeKind* _self_) {
	{
		_1acca4ba2_TypeKind* _19821__self = (&((*(_self_))));;
		jule::Ptr<_1accac407_Prim> _19917_prim = _1acca73be_Prim(_19821__self);;
		if ((_19917_prim != nullptr)) {
			return _1accb086c_IsAny(_19917_prim.ptr());;
		};
		return (((_1acca7633_Sptr(_19821__self) != nullptr) || (_1acca8348_Slc(_19821__self) != nullptr)) || (_1acca8a85_Trait(_19821__self) != nullptr));;
	};
}



inline jule::Bool _1acca6de6_SupportsCloning(_1acca4ba2_TypeKind* _self_) {
	{
		_1acca4ba2_TypeKind* _21021__self = (&((*(_self_))));;
		{
			
			if ((_1acca73be_Prim(_21021__self) != nullptr)) {
				_case_begin_1a66e03b3:;
				{
					return (!(_1accb086c_IsAny(_1acca73be_Prim(_21021__self).ptr())));;
				}
			}
			else if ((_1acca7b0b_Enum(_21021__self) != nullptr)) {
				_case_begin_1a66e0d0e:;
				{
					return true;;
				}
			}
			else if ((_1acca85ac_Fn(_21021__self) != nullptr)) {
				_case_begin_1a66e0d75:;
				{
					return true;;
				}
			}
			else if ((_1acca7897_Ptr(_21021__self) != nullptr)) {
				_case_begin_1a66e087a:;
				{
					return true;;
				}
			}
			else if ((_1acca8348_Slc(_21021__self) != nullptr)) {
				_case_begin_1a66e08e1:;
				{
					return _1acca6de6_SupportsCloning(_1acca8348_Slc(_21021__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_1acca8ce9_Map(_21021__self) != nullptr)) {
				_case_begin_1a66e0957:;
				{
					jule::Ptr<_1accb2b6b_Map> _22321_m = _1acca8ce9_Map(_21021__self);;
					return (_1acca6de6_SupportsCloning(_22321_m.get()._field_Key.ptr()) && _1acca6de6_SupportsCloning(_22321_m.get()._field_Val.ptr()));;
				}
			}
			else if ((_1acca80d4_Arr(_21021__self) != nullptr)) {
				_case_begin_1a66e09bd:;
				{
					return _1acca6de6_SupportsCloning(_1acca80d4_Arr(_21021__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_1acca7633_Sptr(_21021__self) != nullptr)) {
				_case_begin_1a66e0eb8:;
				{
					return _1acca6de6_SupportsCloning(_1acca7633_Sptr(_21021__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_1acca8821_Struct(_21021__self) != nullptr)) {
				_case_begin_1a66e102e:;
				{
					jule::Ptr<_1acb09d37_StructIns> _23025_s = _1acca8821_Struct(_21021__self);;
					return (((_23025_s.get()._field_Decl != nullptr) && (!(_23025_s.get()._field_Decl.get()._field_Binded))) && _1acb0884c_IsDerives(_23025_s.get()._field_Decl.ptr(), jule::Str("Clone", 5)));;
				}
			}
			else {
				_case_begin_1a66e0814:;
				{
					return false;;
				}
			}
			_match_end_1a66e079d:;
		};
	};
}



inline jule::Bool _1acca715a_Variadicable(_1acca4ba2_TypeKind* _self_) {
	{
		_1acca4ba2_TypeKind* _24121__self = (&((*(_self_))));;
		return (_1acca8348_Slc(_24121__self) != nullptr);;
	};
}



inline jule::Ptr<_1accac407_Prim> _1acca73be_Prim(_1acca4ba2_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 20)) {
			_case_begin_1a66e77a5:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1accac407_Prim>(20);;
			}
		}
		else {
			_case_begin_1a66d59b3:;
			{
				return nullptr;;
			}
		}
		_match_end_1a66d595d:;
	};
}



inline jule::Ptr<_1accb0b58_Sptr> _1acca7633_Sptr(_1acca4ba2_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 21)) {
			_case_begin_1a66e7a3b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1accb0b58_Sptr>(21);;
			}
		}
		else {
			_case_begin_1a66e818a:;
			{
				return nullptr;;
			}
		}
		_match_end_1a66e8135:;
	};
}



inline jule::Ptr<_1accb41bc_Ptr> _1acca7897_Ptr(_1acca4ba2_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 26)) {
			_case_begin_1a66e8223:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1accb41bc_Ptr>(26);;
			}
		}
		else {
			_case_begin_1a66e8d06:;
			{
				return nullptr;;
			}
		}
		_match_end_1a66e9235:;
	};
}



inline jule::Ptr<_1acb36b88_Enum> _1acca7b0b_Enum(_1acca4ba2_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1a66e8db1:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1acb36b88_Enum>(3);;
			}
		}
		else {
			_case_begin_1a66e99c7:;
			{
				return nullptr;;
			}
		}
		_match_end_1a66e9e06:;
	};
}



inline jule::Ptr<_1acb38283_TypeEnum> _1acca7d70_TypeEnum(_1acca4ba2_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1a66e9a82:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1acb38283_TypeEnum>(4);;
			}
		}
		else {
			_case_begin_1a66ea698:;
			{
				return nullptr;;
			}
		}
		_match_end_1a66eaac7:;
	};
}



inline jule::Ptr<_1accb3760_Arr> _1acca80d4_Arr(_1acca4ba2_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 25)) {
			_case_begin_1a66ea753:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1accb3760_Arr>(25);;
			}
		}
		else {
			_case_begin_1a66eb369:;
			{
				return nullptr;;
			}
		}
		_match_end_1a66eb798:;
	};
}



inline jule::Ptr<_1accb15b5_Slc> _1acca8348_Slc(_1acca4ba2_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 22)) {
			_case_begin_1a66eb424:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1accb15b5_Slc>(22);;
			}
		}
		else {
			_case_begin_1a66ec03a:;
			{
				return nullptr;;
			}
		}
		_match_end_1a66ec469:;
	};
}



inline jule::Ptr<_1acb24d85_FnIns> _1acca85ac_Fn(_1acca4ba2_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 1)) {
			_case_begin_1a66ec0e5:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1acb24d85_FnIns>(1);;
			}
		}
		else {
			_case_begin_1a66ecc0b:;
			{
				return nullptr;;
			}
		}
		_match_end_1a66ed13a:;
	};
}



inline jule::Ptr<_1acb09d37_StructIns> _1acca8821_Struct(_1acca4ba2_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1a66eccb6:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1acb09d37_StructIns>(0);;
			}
		}
		else {
			_case_begin_1a66ed8cc:;
			{
				return nullptr;;
			}
		}
		_match_end_1a66edd0b:;
	};
}



inline jule::Ptr<_1acb34405_Trait> _1acca8a85_Trait(_1acca4ba2_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 2)) {
			_case_begin_1a66ed987:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1acb34405_Trait>(2);;
			}
		}
		else {
			_case_begin_1a66ee59d:;
			{
				return nullptr;;
			}
		}
		_match_end_1a66ee9cc:;
	};
}



inline jule::Ptr<_1accb2b6b_Map> _1acca8ce9_Map(_1acca4ba2_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 24)) {
			_case_begin_1a66ee658:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1accb2b6b_Map>(24);;
			}
		}
		else {
			_case_begin_1a670026e:;
			{
				return nullptr;;
			}
		}
		_match_end_1a670069d:;
	};
}



inline jule::Ptr<_1accb21ba_Tuple> _1acca905d_Tup(_1acca4ba2_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 23)) {
			_case_begin_1a6700329:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1accb21ba_Tuple>(23);;
			}
		}
		else {
			_case_begin_1a6700e40:;
			{
				return nullptr;;
			}
		}
		_match_end_1a670136e:;
	};
}



inline jule::Bool _1acca92c2_comptime(_1acca4ba2_TypeKind* _self_) {
	return ((((((((((((((_1accaa724_comptimeTypeInfos(_self_) != nullptr) || (_1accaa988_comptimeTypeInfo(_self_) != nullptr)) || (_1acca9536_comptimeStructFields(_self_) != nullptr)) || (_1acca979a_comptimeStructField(_self_) != nullptr)) || (_1acca9a0e_comptimeEnumFields(_self_) != nullptr)) || (_1acca9c73_comptimeEnumField(_self_) != nullptr)) || (_1accaabec_comptimeStatics(_self_) != nullptr)) || (_1accaae61_comptimeStatic(_self_) != nullptr)) || (_1acca9ed7_comptimeParams(_self_) != nullptr)) || (_1accaa24b_comptimeParam(_self_) != nullptr)) || (_1accaa4b0_comptimeRange(_self_) != nullptr)) || (_1accab1c5_comptimeValue(_self_) != nullptr)) || (_1accab69d_comptimeFiles(_self_) != nullptr)) || (_1accab439_comptimeFile(_self_) != nullptr));;
}



inline jule::Ptr<_1acb3c908_comptimeStructFields> _1acca9536_comptimeStructFields(_1acca4ba2_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 7)) {
			_case_begin_1a6706396:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1acb3c908_comptimeStructFields>(7);;
			}
		}
		else {
			_case_begin_1a6705cad:;
			{
				return nullptr;;
			}
		}
		_match_end_1a6705c58:;
	};
}



inline jule::Ptr<_1acb3adce_comptimeStructField> _1acca979a_comptimeStructField(_1acca4ba2_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 6)) {
			_case_begin_1a6706055:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1acb3adce_comptimeStructField>(6);;
			}
		}
		else {
			_case_begin_1a670660a:;
			{
				return nullptr;;
			}
		}
		_match_end_1a6706462:;
	};
}



inline jule::Ptr<_1acb43106_comptimeEnumFields> _1acca9a0e_comptimeEnumFields(_1acca4ba2_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 11)) {
			_case_begin_1a6706693:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1acb43106_comptimeEnumFields>(11);;
			}
		}
		else {
			_case_begin_1a670730e:;
			{
				return nullptr;;
			}
		}
		_match_end_1a67072a9:;
	};
}



inline jule::Ptr<_1acb41dd5_comptimeEnumField> _1acca9c73_comptimeEnumField(_1acca4ba2_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 10)) {
			_case_begin_1a6707397:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1acb41dd5_comptimeEnumField>(10);;
			}
		}
		else {
			_case_begin_1a6707ed0:;
			{
				return nullptr;;
			}
		}
		_match_end_1a6707e7a:;
	};
}



inline jule::Ptr<_1acb46703_comptimeParams> _1acca9ed7_comptimeParams(_1acca4ba2_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 13)) {
			_case_begin_1a6708068:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1acb46703_comptimeParams>(13);;
			}
		}
		else {
			_case_begin_1a6708ba1:;
			{
				return nullptr;;
			}
		}
		_match_end_1a6708b4b:;
	};
}



inline jule::Ptr<_1acb44657_comptimeParam> _1accaa24b_comptimeParam(_1acca4ba2_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 12)) {
			_case_begin_1a6708c39:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1acb44657_comptimeParam>(12);;
			}
		}
		else {
			_case_begin_1a6709872:;
			{
				return nullptr;;
			}
		}
		_match_end_1a670981c:;
	};
}



inline jule::Ptr<_1acb3a3d9_comptimeRange> _1accaa4b0_comptimeRange(_1acca4ba2_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 5)) {
			_case_begin_1a670990a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1acb3a3d9_comptimeRange>(5);;
			}
		}
		else {
			_case_begin_1a670a543:;
			{
				return nullptr;;
			}
		}
		_match_end_1a670a4dd:;
	};
}



inline jule::Ptr<_1acb47bbb_comptimeTypeInfos> _1accaa724_comptimeTypeInfos(_1acca4ba2_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 14)) {
			_case_begin_1a670a5cb:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1acb47bbb_comptimeTypeInfos>(14);;
			}
		}
		else {
			_case_begin_1a670b214:;
			{
				return nullptr;;
			}
		}
		_match_end_1a670b1ae:;
	};
}



inline jule::Ptr<_1acb49184_comptimeTypeInfo> _1accaa988_comptimeTypeInfo(_1acca4ba2_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 15)) {
			_case_begin_1a670b29c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1acb49184_comptimeTypeInfo>(15);;
			}
		}
		else {
			_case_begin_1a670bdd5:;
			{
				return nullptr;;
			}
		}
		_match_end_1a670bd80:;
	};
}



inline jule::Ptr<_1acb40994_comptimeStatics> _1accaabec_comptimeStatics(_1acca4ba2_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 9)) {
			_case_begin_1a670be6d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1acb40994_comptimeStatics>(9);;
			}
		}
		else {
			_case_begin_1a670caa6:;
			{
				return nullptr;;
			}
		}
		_match_end_1a670ca51:;
	};
}



inline jule::Ptr<_1acb3ddd2_comptimeStatic> _1accaae61_comptimeStatic(_1acca4ba2_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 8)) {
			_case_begin_1a670cb3e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1acb3ddd2_comptimeStatic>(8);;
			}
		}
		else {
			_case_begin_1a670d777:;
			{
				return nullptr;;
			}
		}
		_match_end_1a670d722:;
	};
}



inline jule::Ptr<_1acb4eb7e_comptimeValue> _1accab1c5_comptimeValue(_1acca4ba2_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 16)) {
			_case_begin_1a670d810:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1acb4eb7e_comptimeValue>(16);;
			}
		}
		else {
			_case_begin_1a670e448:;
			{
				return nullptr;;
			}
		}
		_match_end_1a670e3e3:;
	};
}



inline jule::Ptr<_1acb53743_comptimeFile> _1accab439_comptimeFile(_1acca4ba2_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 18)) {
			_case_begin_1a670e4d1:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1acb53743_comptimeFile>(18);;
			}
		}
		else {
			_case_begin_1a6710119:;
			{
				return nullptr;;
			}
		}
		_match_end_1a67100b4:;
	};
}



inline jule::Ptr<_1acb5227a_comptimeFiles> _1accab69d_comptimeFiles(_1acca4ba2_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 17)) {
			_case_begin_1a67101a2:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1acb5227a_comptimeFiles>(17);;
			}
		}
		else {
			_case_begin_1a6710cda:;
			{
				return nullptr;;
			}
		}
		_match_end_1a6710c85:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1acca4ba2_TypeKind _Src) {
	_Stream << _1acca5059_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1accabdb8_checked(_1accaba55_TypeSymbol* _self_) {
	return ((*(_self_))._field_Kind != nullptr);;
}



inline void _1accac094_removeKind(_1accaba55_TypeSymbol* _self_) {
	(*(_self_))._field_Kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1accaba55_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1accac737_Str(_1accac407_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1accaca45_Equal(jule::Ptr<_1accac407_Prim> _self_, jule::Ptr<_1acca4ba2_TypeKind> _53821_other) {
	jule::Ptr<_1accac407_Prim> _53913_prim = _1acca73be_Prim(_53821_other.ptr());;
	if ((_53913_prim == nullptr)) {
		return false;;
	};
	return (_self_.get()._field_Kind == _53913_prim.get()._field_Kind);;
}



inline jule::Bool _1accaceb8_IsConstraint(_1accac407_Prim* _self_) {
	return ((((!(_1accb0608_IsStr(_self_))) && (!(_1accb086c_IsAny(_self_)))) && (!(_1accb0394_IsBool(_self_)))) && (!(_1ddeb4611_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _1accad22c_IsI8(_1accac407_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i8", 2);;
}



inline jule::Bool _1accad491_IsI16(_1accac407_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i16", 3);;
}



inline jule::Bool _1accad705_IsI32(_1accac407_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i32", 3);;
}



inline jule::Bool _1accad969_IsI64(_1accac407_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i64", 3);;
}



inline jule::Bool _1accadbcd_IsU8(_1accac407_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u8", 2);;
}



inline jule::Bool _1accade42_IsU16(_1accac407_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u16", 3);;
}



inline jule::Bool _1accae1a6_IsU32(_1accac407_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u32", 3);;
}



inline jule::Bool _1accae41a_IsU64(_1accac407_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u64", 3);;
}



inline jule::Bool _1accae67e_IsF32(_1accac407_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f32", 3);;
}



inline jule::Bool _1accae8e3_IsF64(_1accac407_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f64", 3);;
}



inline jule::Bool _1accaeb57_IsInt(_1accac407_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("int", 3);;
}



inline jule::Bool _1accaedbb_IsUint(_1accac407_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uint", 4);;
}



inline jule::Bool _1accb0130_IsUintptr(_1accac407_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uintptr", 7);;
}



inline jule::Bool _1accb0394_IsBool(_1accac407_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("bool", 4);;
}



inline jule::Bool _1accb0608_IsStr(_1accac407_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("str", 3);;
}



inline jule::Bool _1accb086c_IsAny(_1accac407_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("any", 3);;
}







std::ostream &operator<<(std::ostream &_Stream, _1accac407_Prim _Src) {
	_Stream << _1accac737_Str(&_Src);
	return _Stream;
}



inline jule::Str _1accb0ebb_Str(_1accb0b58_Sptr* _self_) {
	return (jule::Str("&", 1) + _1acca5059_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1accb12c9_Equal(jule::Ptr<_1accb0b58_Sptr> _self_, jule::Ptr<_1acca4ba2_TypeKind> _61521_other) {
	jule::Ptr<_1accb0b58_Sptr> _61613_sptr = _1acca7633_Sptr(_61521_other.ptr());;
	if ((_61613_sptr == nullptr)) {
		return false;;
	};
	return _1acca5367_Equal(_self_.get()._field_Elem, _61613_sptr.get()._field_Elem);;
}







std::ostream &operator<<(std::ostream &_Stream, _1accb0b58_Sptr _Src) {
	_Stream << _1accb0ebb_Str(&_Src);
	return _Stream;
}



inline jule::Str _1accb1a38_Str(_1accb15b5_Slc* _self_) {
	return (jule::Str("[]", 2) + _1acca5059_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1accb1d46_Equal(jule::Ptr<_1accb15b5_Slc> _self_, jule::Ptr<_1acca4ba2_TypeKind> _63421_other) {
	jule::Ptr<_1accb15b5_Slc> _63513_slc = _1acca8348_Slc(_63421_other.ptr());;
	if ((_63513_slc == nullptr)) {
		return false;;
	};
	return _1acca5367_Equal(_self_.get()._field_Elem, _63513_slc.get()._field_Elem);;
}







std::ostream &operator<<(std::ostream &_Stream, _1accb15b5_Slc _Src) {
	_Stream << _1accb1a38_Str(&_Src);
	return _Stream;
}



inline jule::Str _1accb252d_Str(_1accb21ba_Tuple* _self_) {
	jule::Str _65117_s = jule::Str("(", 1);;
	_65117_s+=_1acca5059_Str((*(_self_))._field_Types[0LL].ptr());
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a671eee7:;
		if (it != expr_end) {
			jule::Ptr<_1acca4ba2_TypeKind> *_65316_t = it;
			{
				(_65117_s).append(",", 1);
				_65117_s+=_1acca5059_Str((*(_65316_t)).ptr());
			}
			_iter_next_1a671eee7:;
			++it;
			goto _iter_begin_1a671eee7;
		}
		_iter_end_1a671eee7:;
	};
	(_65117_s).append(")", 1);
	return _65117_s;;
}



inline jule::Bool _1accb283b_Equal(jule::Ptr<_1accb21ba_Tuple> _self_, jule::Ptr<_1acca4ba2_TypeKind> _66221_other) {
	jule::Ptr<_1accb21ba_Tuple> _66313_tup = _1acca905d_Tup(_66221_other.ptr());;
	if ((_66313_tup == nullptr)) {
		return false;;
	};
	if ((_self_.get()._field_Types.len() != _66313_tup.get()._field_Types.len())) {
		return false;;
	};
	jule::I64 _67017_i = 0LL;;
	for (; (_67017_i < _self_.get()._field_Types.len()); (_67017_i)++) {
		{
			if ((!(_1acca5367_Equal(_self_.get()._field_Types[_67017_i], _66313_tup.get()._field_Types[_67017_i])))) {
				return false;;
			};
		}
	_iter_next_1a6722604:;
	}
	_iter_end_1a6722604:;;
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1accb21ba_Tuple _Src) {
	_Stream << _1accb252d_Str(&_Src);
	return _Stream;
}



inline jule::Str _1accb2ece_Str(_1accb2b6b_Map* _self_) {
	jule::Str _69017_s = jule::Str("map[", 4);;
	_69017_s+=_1acca5059_Str((*(_self_))._field_Key.ptr());
	(_69017_s).append("]", 1);
	_69017_s+=_1acca5059_Str((*(_self_))._field_Val.ptr());
	return _69017_s;;
}



inline jule::Bool _1accb32dc_Equal(jule::Ptr<_1accb2b6b_Map> _self_, jule::Ptr<_1acca4ba2_TypeKind> _69821_other) {
	jule::Ptr<_1accb2b6b_Map> _69913_m = _1acca8ce9_Map(_69821_other.ptr());;
	if ((_69913_m == nullptr)) {
		return false;;
	};
	return (_1acca5367_Equal(_self_.get()._field_Key, _69913_m.get()._field_Key) && _1acca5367_Equal(_self_.get()._field_Val, _69913_m.get()._field_Val));;
}







std::ostream &operator<<(std::ostream &_Stream, _1accb2b6b_Map _Src) {
	_Stream << _1accb2ece_Str(&_Src);
	return _Stream;
}



inline jule::Str _1accb3ac3_Str(_1accb3760_Arr* _self_) {
	jule::Str _71717_s = jule::Str("[", 1);;
	_71717_s+=_1ddea4ea3_Itoa((*(_self_))._field_N);
	(_71717_s).append("]", 1);
	_71717_s+=_1acca5059_Str((*(_self_))._field_Elem.ptr());
	return _71717_s;;
}



inline jule::Bool _1accb3dd1_Equal(jule::Ptr<_1accb3760_Arr> _self_, jule::Ptr<_1acca4ba2_TypeKind> _72521_other) {
	jule::Ptr<_1accb3760_Arr> _72613_arr = _1acca80d4_Arr(_72521_other.ptr());;
	if ((_72613_arr == nullptr)) {
		return false;;
	};
	return ((_self_.get()._field_N == _72613_arr.get()._field_N) && _1acca5367_Equal(_self_.get()._field_Elem, _72613_arr.get()._field_Elem));;
}







std::ostream &operator<<(std::ostream &_Stream, _1accb3760_Arr _Src) {
	_Stream << _1accb3ac3_Str(&_Src);
	return _Stream;
}



inline jule::Str _1accb4530_Str(_1accb41bc_Ptr* _self_) {
	if (_1accb4b90_IsUnsafe(_self_)) {
		return jule::Str("*unsafe", 7);;
	};
	return (jule::Str("*", 1) + _1acca5059_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1accb483d_Equal(jule::Ptr<_1accb41bc_Ptr> _self_, jule::Ptr<_1acca4ba2_TypeKind> _74921_other) {
	jule::Ptr<_1accb41bc_Ptr> _75013_ptr = _1acca7897_Ptr(_74921_other.ptr());;
	if ((_75013_ptr == nullptr)) {
		return false;;
	};
	return _1acca5367_Equal(_self_.get()._field_Elem, _75013_ptr.get()._field_Elem);;
}



inline jule::Bool _1accb4b90_IsUnsafe(_1accb41bc_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1accb41bc_Ptr _Src) {
	_Stream << _1accb4530_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1accb5113_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1accb66db_pushErr(_1accb5ee3_typeChecker* _self_, jule::Ptr<_2097d15d8_Token> _83526_token, jule::Str _83541_fmt, jule::Slice<jule::Any> _83554_args) {
	_1abce7003_pushErr((*(_self_))._field_s.ptr(), _83526_token, _83541_fmt, _83554_args);
}



inline void _1accb68b7_allowBuiltin(_1accb5ee3_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1accb6a93_disallowBuiltin(_1accb5ee3_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline void _1a672dd4c_pushReference(_1accb5ee3_typeChecker* _self_, jule::Ptr<_1acb09d37_StructIns>* _84740_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1a6499d2c_Exist((*(_self_))._field_refers.ptr(), (*(_84740_t)))) {
		return;;
	};
	_1acb2895a_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_84740_t)), &__jule_any_type9));
}

inline void _1a67367d3_pushReference(_1accb5ee3_typeChecker* _self_, jule::Ptr<_1acb34405_Trait>* _84740_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1a673841c_Exist((*(_self_))._field_refers.ptr(), (*(_84740_t)))) {
		return;;
	};
	_1acb2895a_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_84740_t)), &__jule_any_type10));
}



inline void _1accb708d_pushReferenceByKind(_1accb5ee3_typeChecker* _self_, jule::Ptr<_1acca4ba2_TypeKind>* _85743_k) {
	{
		
		if ((_1acca8821_Struct((*(_85743_k)).ptr()) != nullptr)) {
			_case_begin_1a672caa4:;
			{
				jule::Ptr<_1acb09d37_StructIns> _86021_t = _1acca8821_Struct((*(_85743_k)).ptr());;
				_1a672dd4c_pushReference(_self_, &(_86021_t));
			}
		}
		else if ((_1acca8a85_Trait((*(_85743_k)).ptr()) != nullptr)) {
			_case_begin_1a672cb2b:;
			{
				jule::Ptr<_1acb34405_Trait> _86321_t = _1acca8a85_Trait((*(_85743_k)).ptr());;
				_1a67367d3_pushReference(_self_, &(_86321_t));
			}
		}
		_match_end_1a672c994:;
	};
}



inline void _1accb7456_pushCycleError(_1accb5ee3_typeChecker* _self_, jule::Any _86829_def1, jule::Any _86840_def2, jule::Str* _86856_message) {
	;
	jule::Fn<jule::Str(jule::Any*)> _87013_getIdent = jule::Fn<jule::Str(jule::Any*)>([=](jule::Any* _87028_def) mutable -> jule::Str {
		{
			auto &_match_expr{ (*(_87028_def)) };
			
			if (_match_expr.type == &__jule_any_type67) {
				_case_begin_1a673ae47:;
				{
					return (*(_87028_def)).cast_ptr<_1acca3e59_TypeAlias>(&__jule_any_type67).get()._field_Ident;;
				}
			}
			else if (_match_expr.type == &__jule_any_type66) {
				_case_begin_1a673b4ec:;
				{
					return (*(_87028_def)).cast_ptr<_1acb07021_Struct>(&__jule_any_type66).get()._field_Ident;;
				}
			}
			else {
				_case_begin_1a673b0bd:;
				{
					return jule::Str();;
				}
			}
			_match_end_1a673aee1:;
		};
	});;
	jule::Str _88013_def1Ident = _87013_getIdent(&(_86829_def1));;
	jule::Str _88113_def2Ident = _87013_getIdent(&(_86840_def2));;
	jule::Str _88213_refersTo = _20943de7c_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_88013_def1Ident, &__jule_any_type5),jule::Any(_88113_def2Ident, &__jule_any_type5)}));;
	((*(_86856_message))).buffer.insert(0, (((_20939c649_Repeat(jule::Str(" ", 1), 7LL) + _88213_refersTo) + jule::Str("\n", 1))));;
}



inline jule::Bool _1accb780d_checkCrossCycle(_1accb5ee3_typeChecker* _self_, jule::Any _88630_decl, jule::Str* _88646_message) {
	{
		auto &_match_expr{ _88630_decl };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1a673d80c:;
			{
				jule::Ptr<_1acca3e59_TypeAlias> _88917_ta = _88630_decl.cast_ptr<_1acca3e59_TypeAlias>(&__jule_any_type67);;
				{
					auto expr = &(_88917_ta.get()._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a673e28b:;
					if (it != expr_end) {
						jule::Any *_89020_d = it;
						{
							{
								
								if (((*(_89020_d)) == (*(_self_))._field_referencer.get()._field_owner)) {
									_case_begin_1a673edd5:;
									{
										_1accb7456_pushCycleError(_self_, jule::Any(_88917_ta, &__jule_any_type67), (*(_89020_d)), _88646_message);
										return false;;
									}
								}
								else if ((!(_1accb780d_checkCrossCycle(_self_, (*(_89020_d)), _88646_message)))) {
									_case_begin_1a673ee5c:;
									{
										_1accb7456_pushCycleError(_self_, jule::Any(_88917_ta, &__jule_any_type67), (*(_89020_d)), _88646_message);
										return false;;
									}
								}
								_match_end_1a673ecc5:;
							};
						}
						_iter_next_1a673e28b:;
						++it;
						goto _iter_begin_1a673e28b;
					}
					_iter_end_1a673e28b:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1a673d873:;
			{
				jule::Ptr<_1acb07021_Struct> _90117_s = _88630_decl.cast_ptr<_1acb07021_Struct>(&__jule_any_type66);;
				{
					auto expr = &(_90117_s.get()._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a673eb0a:;
					if (it != expr_end) {
						jule::Ptr<_1acb07021_Struct> *_90220_d = it;
						{
							{
								
								if ((__jule_any_type66_compare((*(_self_))._field_referencer.get()._field_owner, (*(_90220_d))))) {
									_case_begin_1a6741e2b:;
									{
										_1accb7456_pushCycleError(_self_, jule::Any(_90117_s, &__jule_any_type66), jule::Any((*(_90220_d)), &__jule_any_type66), _88646_message);
										return false;;
									}
								}
								else if ((!(_1accb780d_checkCrossCycle(_self_, jule::Any((*(_90220_d)), &__jule_any_type66), _88646_message)))) {
									_case_begin_1a6741ea3:;
									{
										_1accb7456_pushCycleError(_self_, jule::Any(_90117_s, &__jule_any_type66), jule::Any((*(_90220_d)), &__jule_any_type66), _88646_message);
										return false;;
									}
								}
								_match_end_1a6741d1b:;
							};
						}
						_iter_next_1a673eb0a:;
						++it;
						goto _iter_begin_1a673eb0a;
					}
					_iter_end_1a673eb0a:;
				};
			}
		}
		_match_end_1a673d7a7:;
	};
	return true;;
}



inline jule::Bool _1accb7bb5_checkIllegalCycles(_1accb5ee3_typeChecker* _self_, jule::Ptr<_1acad7892_IdentTypeDecl>* _92038_ident, jule::Any _92065_decl) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_referencer == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _92065_decl };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1a6743a32:;
			{
				if (((*(_self_))._field_notPlain || _92065_decl.cast_ptr<_1acb07021_Struct>(&__jule_any_type66).get()._field_Binded)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1a6743bca:;
			{
				if (_92065_decl.cast_ptr<_1acca3e59_TypeAlias>(&__jule_any_type67).get()._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1a6743900:;
	};
	if ((_92065_decl == (*(_self_))._field_referencer.get()._field_owner)) {
		_1accb66db_pushErr(_self_, (*(_92038_ident)).get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_referencer.get()._field_ident, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _94317_message = jule::Str();;
	if ((!(_1accb780d_checkCrossCycle(_self_, _92065_decl, &(_94317_message))))) {
		jule::Str _94621_errMsg = _94317_message;;
		_94317_message=jule::Str();
		_1accb7456_pushCycleError(_self_, (*(_self_))._field_referencer.get()._field_owner, _92065_decl, &(_94317_message));
		_94621_errMsg+=_94317_message;
		_1accb66db_pushErr(_self_, (*(_92038_ident)).get()._field_Token, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_94621_errMsg, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_referencer.get()._field_owner };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1a67460c8:;
			{
				{
					{ jule::Slice<jule::Any> *__jule_push_dest = (*(_self_))._field_referencer.get()._field_refs; __jule_push_dest->push(_92065_decl); };
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1a6747728:;
			{
				{
					auto &_match_expr{ _92065_decl };
					
					if (_match_expr.type == &__jule_any_type66) {
						_case_begin_1a6747e76:;
						{
							jule::Ptr<_1acb07021_Struct> _96225_s = (*(_self_))._field_referencer.get()._field_owner.cast_ptr<_1acb07021_Struct>(&__jule_any_type66);;
							{ jule::Slice<jule::Ptr<_1acb07021_Struct>> &__jule_push_dest = _96225_s.get()._field_Depends; __jule_push_dest.push(_92065_decl.cast_ptr<_1acb07021_Struct>(&__jule_any_type66)); };
						}
					}
					_match_end_1a6747d88:;
				};
			}
		}
		_match_end_1a67475d5:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait<_1acca4740_Kind> _1accb806c_fromTypeAlias(_1accb5ee3_typeChecker* _self_, jule::Ptr<_1acad7892_IdentTypeDecl>* _97033_decl, jule::Ptr<_1acca3e59_TypeAlias>* _97060_ta) {
	if ((!(_1abce76c9_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_97060_ta)).get()._field_Public, (*(_97060_ta)).get()._field_Token)))) {
		_1accb66db_pushErr(_self_, (*(_97033_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_97033_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	(*(_97060_ta)).get()._field_Used=true;
	if (((*(_97033_decl)).get()._field_Generics.len() > 0LL)) {
		_1accb66db_pushErr(_self_, (*(_97033_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_97033_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a674c002:;
			if (it != expr_end) {
				jule::Ptr<_1acca3e59_TypeAlias> _98720_bg = *it;
				{
					if (((_98720_bg == (*(_97060_ta))) || (((*(_97060_ta)).get()._field_Kind.get()._field_Kind != nullptr) && _1acca5367_Equal((*(_97060_ta)).get()._field_Kind.get()._field_Kind, _98720_bg.get()._field_Kind.get()._field_Kind)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_1a674c002;
					};
				}
				_iter_next_1a674c002:;
				++it;
				goto _iter_begin_1a674c002;
			}
			_iter_end_1a674c002:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a674da70:;
			if (it != expr_end) {
				jule::Ptr<_1acca3e59_TypeAlias> _99820_bg = *it;
				{
					if ((_99820_bg == (*(_97060_ta)))) {
						_1accb66db_pushErr(_self_, (*(_97033_decl)).get()._field_Token, jule::Str("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*(_97033_decl)).get()._field_Ident, &__jule_any_type5)}));
						return nullptr;;
					};
					{
						auto expr = &((*(_97060_ta)).get()._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a675006b:;
						if (it != expr_end) {
							jule::Ptr<_1acca3e59_TypeAlias> _100324_dg = *it;
							{
								if ((_99820_bg == _100324_dg)) {
									_1accb66db_pushErr(_self_, (*(_97033_decl)).get()._field_Token, jule::Str("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*(_97033_decl)).get()._field_Ident, &__jule_any_type5)}));
									return nullptr;;
								};
							}
							_iter_next_1a675006b:;
							++it;
							goto _iter_begin_1a675006b;
						}
						_iter_end_1a675006b:;
					};
				}
				_iter_next_1a674da70:;
				++it;
				goto _iter_begin_1a674da70;
			}
			_iter_end_1a674da70:;
		};
	};
	jule::Bool _101217_ok = _1accb7bb5_checkIllegalCycles(_self_, _97033_decl, jule::Any((*(_97060_ta)), &__jule_any_type67));;
	if ((!(_101217_ok))) {
		return nullptr;;
	};
	if (((*(_97060_ta)).get()._field_Kind.get()._field_Kind == nullptr)) {
		_101217_ok=_1abd0256e_checkTypeAliasDeclKind((*(_self_))._field_s, _97060_ta, (*(_self_))._field_lookup);
		if ((!(_101217_ok))) {
			return nullptr;;
		};
	};
	if (((*(_97060_ta)).get()._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		{ jule::Slice<jule::Ptr<_1acca3e59_TypeAlias>> &__jule_push_dest = (*(_self_))._field_ownerAlias.get()._field_Generics; __jule_push_dest.push((*(_97060_ta))); };
	};
	jule::Ptr<_1acca4ba2_TypeKind> _103117_tk = jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Generic=(*(_97060_ta)).get()._field_Generic, ._field_Kind=(*(_97060_ta)).get()._field_Kind.get()._field_Kind.get()._field_Kind});;
	_1accb708d_pushReferenceByKind(_self_, &(_103117_tk));
	if ((*(_97060_ta)).get()._field_Binded) {
		_103117_tk.get()._field_BindIdent=(*(_97060_ta)).get()._field_Ident;
	} else {
		_103117_tk.get()._field_BindIdent=(*(_97060_ta)).get()._field_Kind.get()._field_Kind.get()._field_BindIdent;
	};
	return jule::Trait<_1acca4740_Kind>(_103117_tk, 19);;
}



inline jule::Ptr<_1acb36b88_Enum> _1accb8424_fromEnum(_1accb5ee3_typeChecker* _self_, jule::Ptr<_1acad7892_IdentTypeDecl>* _104428_decl, jule::Ptr<_1acb36b88_Enum>* _104455_e) {
	if ((!(_1abce76c9_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_104455_e)).get()._field_Public, (*(_104455_e)).get()._field_Token)))) {
		_1accb66db_pushErr(_self_, (*(_104428_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_104428_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_104428_decl)).get()._field_Generics.len() > 0LL)) {
		_1accb66db_pushErr(_self_, (*(_104428_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_104428_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	return (*(_104455_e));;
}



inline jule::Ptr<_1acb38283_TypeEnum> _1accb87cb_fromTypeEnum(_1accb5ee3_typeChecker* _self_, jule::Ptr<_1acad7892_IdentTypeDecl>* _105632_decl, jule::Ptr<_1acb38283_TypeEnum>* _105659_e) {
	if ((!(_1abce76c9_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_105659_e)).get()._field_Public, (*(_105659_e)).get()._field_Token)))) {
		_1accb66db_pushErr(_self_, (*(_105632_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_105632_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_105632_decl)).get()._field_Generics.len() > 0LL)) {
		_1accb66db_pushErr(_self_, (*(_105632_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_105632_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	return (*(_105659_e));;
}



inline jule::Ptr<_1acb34405_Trait> _1accb8b83_fromTrait(_1accb5ee3_typeChecker* _self_, jule::Ptr<_1acad7892_IdentTypeDecl>* _106829_decl, jule::Ptr<_1acb34405_Trait>* _106856_t) {
	if ((!(_1abce76c9_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_106856_t)).get()._field_Public, (*(_106856_t)).get()._field_Token)))) {
		_1accb66db_pushErr(_self_, (*(_106829_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_106829_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_106829_decl)).get()._field_Generics.len() > 0LL)) {
		_1accb66db_pushErr(_self_, (*(_106829_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_106829_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	_1a67367d3_pushReference(_self_, _106856_t);
	return (*(_106856_t));;
}



inline jule::Bool _1accb903a_checkStructIns(_1accb5ee3_typeChecker* _self_, jule::Ptr<_1acb09d37_StructIns>* _108138_ins, jule::Ptr<_2097d15d8_Token>* _108160_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*(_108138_ins)).get()._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*(_108138_ins)).get()._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (__jule_any_type66_compare((*(_self_))._field_referencer.get()._field_owner, (*(_108138_ins)).get()._field_Decl)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1abd0d3d2_precheckStructIns((*(_self_))._field_s, _108138_ins, (*(_108160_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*(_108138_ins)).get()._field_Generics.len() > 0LL)) {
		_1abd0dd50_checkStructInsOperators((*(_self_))._field_s, (*(_108138_ins)));
		_1abd0d657_checkStructIns((*(_self_))._field_s, _108138_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1accb92d2_appendUsedStructReference(_1accb5ee3_typeChecker* _self_, jule::Ptr<_1acb07021_Struct>* _110249_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_referencer.get()._field_owner };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1a675e355:;
			{
				jule::Ptr<_1acb07021_Struct> _110821_refS = (*(_self_))._field_referencer.get()._field_owner.cast_ptr<_1acb07021_Struct>(&__jule_any_type66);;
				if ((!(_1acb08b5a_IsUses(_110821_refS.ptr(), (*(_110249_s)))))) {
					{ jule::Slice<jule::Ptr<_1acb07021_Struct>> &__jule_push_dest = _110821_refS.get()._field_Uses; __jule_push_dest.push((*(_110249_s))); };
				};
			}
		}
		_match_end_1a675e300:;
	};
}



inline jule::Ptr<_1acb09d37_StructIns> _1accb969a_buildStructInstance(_1accb5ee3_typeChecker* _self_, jule::Ptr<_1acad7892_IdentTypeDecl>* _111543_decl, jule::Ptr<_1acb07021_Struct>* _111570_s) {
	jule::Ptr<_1accb5113_referencer> _111717_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1acca3e59_TypeAlias>> _111917_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_1a6761e29:;
				{
					jule::Ptr<_1abcc4563_scopeChecker> _112625_sc = (*(_self_))._field_lookup.cast_ptr<_1abcc4563_scopeChecker>(0);;
					jule::Ptr<_1abcc4563_scopeChecker> _112725_hard = _1abcc75ee_getHardRoot(_112625_sc);;
					if (((_112725_hard.get()._field_owner.get()._field_Owner == nullptr) || (_112725_hard.get()._field_owner.get()._field_Owner.get()._field_Decl != (*(_111570_s))))) {
						goto _match_end_1a6761dc4;
					};
					jule::I64 _113121_n = (_112725_hard.get()._field_owner.get()._field_Generics.len() + _112725_hard.get()._field_owner.get()._field_Owner.get()._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=_112725_hard.get()._field_table.get()._field_TypeAliases.slice(0LL, _113121_n);
				}
			}
			_match_end_1a6761dc4:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait<_1accc2ecd_Lookup> _114117_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_1acb09d37_StructIns> _114517_ins = _1acb07483_instance((*(_111570_s)));;
	_114517_ins.get()._field_Generics=jule::Slice<jule::Ptr<_1acca3420_InsGeneric>>::alloc(0LL, (*(_111543_decl)).get()._field_Generics.len());
	{
		auto expr = &((*(_111543_decl)).get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6765526:;
		if (it != expr_end) {
			jule::Ptr<_1acad72cb_TypeDecl> _114721_g = *it;
			{
				jule::Ptr<_1acca4ba2_TypeKind> _114821_kind = _1accbcb32_build(_self_, &(_114721_g.get()._field_Kind));;
				if ((_114821_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1acca3420_InsGeneric>> &__jule_push_dest = _114517_ins.get()._field_Generics; __jule_push_dest.push(jule::new_ptr<_1acca3420_InsGeneric>(_1acca3420_InsGeneric{._field_Kind=_114821_kind, })); };
			}
			_iter_next_1a6765526:;
			++it;
			goto _iter_begin_1a6765526;
		}
		_iter_end_1a6765526:;
	};
	(*(_self_))._field_lookup=_114117_lookup;
	(*(_self_))._field_bannedGenerics=_111917_bannedGenerics;
	(*(_self_))._field_referencer=_111717_referencer;
	return _114517_ins;;
}



inline jule::Ptr<_1acb09d37_StructIns> _1accb9a52_fromStruct(_1accb5ee3_typeChecker* _self_, jule::Ptr<_1acad7892_IdentTypeDecl>* _116334_decl, jule::Ptr<_1acb07021_Struct>* _116361_s) {
	if ((!(_1abce76c9_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_116361_s)).get()._field_Public, (*(_116361_s)).get()._field_Token)))) {
		_1accb66db_pushErr(_self_, (*(_116334_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_116334_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*(_116334_decl)).get()._field_Generics.len() > 0LL)) {
			_1accb66db_pushErr(_self_, (*(_116334_decl)).get()._field_Token, jule::Str("generics are not allowed in this scope", 38), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1acb09d37_StructIns>(_1acb09d37_StructIns{._field_Decl=(*(_116361_s)), });;
	};
	jule::Bool _118117_ok = ((*(_self_))._field_notPlain || _1accb7bb5_checkIllegalCycles(_self_, _116334_decl, jule::Any((*(_116361_s)), &__jule_any_type66)));;
	if ((!(_118117_ok))) {
		return nullptr;;
	};
	_1accb92d2_appendUsedStructReference(_self_, _116361_s);
	jule::Ptr<_1acb09d37_StructIns> _118717_ins = _1accb969a_buildStructInstance(_self_, _116334_decl, _116361_s);;
	if ((_118717_ins == nullptr)) {
		return nullptr;;
	};
	_118117_ok=_1abce839a_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I64>(_118717_ins.get()._field_Decl.get()._field_Generics.len()), static_cast<jule::I64>(_118717_ins.get()._field_Generics.len()), (*(_116334_decl)).get()._field_Token);
	if ((!(_118117_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1acb09d37_StructIns> _119717_existInstance = _1acb0775d_appendInstance((*(_116361_s)).ptr(), &(_118717_ins));;
	if ((_119717_existInstance != nullptr)) {
		if ((!(_1abd00c21_checkConstraintsStruct((*(_self_))._field_s, &(_118717_ins), &((*(_116334_decl)).get()._field_Token), _119717_existInstance)))) {
			return nullptr;;
		};
		_1a672dd4c_pushReference(_self_, &(_119717_existInstance));
		return _119717_existInstance;;
	};
	if ((!(_1accb903a_checkStructIns(_self_, &(_118717_ins), &((*(_116334_decl)).get()._field_Token))))) {
		return nullptr;;
	};
	_1a672dd4c_pushReference(_self_, &(_118717_ins));
	return _118717_ins;;
}



inline jule::Trait<_1acca4740_Kind> _1accb9d60_getDef(_1accb5ee3_typeChecker* _self_, jule::Ptr<_1acad7892_IdentTypeDecl>* _122130_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a676ee7b:;
		if (it != expr_end) {
			jule::Ptr<_1acae4272_GenericDecl> _122216_g = *it;
			{
				if ((_122216_g.get()._field_Ident == (*(_122130_decl)).get()._field_Ident)) {
					return jule::Trait<_1acca4740_Kind>(_1accc064b_buildPrimType(_122216_g.get()._field_Ident), 20);;
				};
			}
			_iter_next_1a676ee7b:;
			++it;
			goto _iter_begin_1a676ee7b;
		}
		_iter_end_1a676ee7b:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6770773:;
		if (it != expr_end) {
			jule::Ptr<_1acca3e59_TypeAlias> _122821_g = *it;
			{
				if ((_122821_g.get()._field_Ident == (*(_122130_decl)).get()._field_Ident)) {
					if (((*(_122130_decl)).get()._field_Generics.len() > 0LL)) {
						_1accb66db_pushErr(_self_, (*(_122130_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_122130_decl)).get()._field_Ident, &__jule_any_type5)}));
						return nullptr;;
					};
					jule::Ptr<_1acb09d37_StructIns> _123425_st = _1acca8821_Struct(_122821_g.get()._field_Kind.get()._field_Kind.ptr());;
					if ((_123425_st != nullptr)) {
						jule::Bool _123625_ok = _1accb7bb5_checkIllegalCycles(_self_, _122130_decl, jule::Any(_123425_st.get()._field_Decl, &__jule_any_type66));;
						if ((!(_123625_ok))) {
							return nullptr;;
						};
					};
					return _122821_g.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
				};
			}
			_iter_next_1a6770773:;
			++it;
			goto _iter_begin_1a6770773;
		}
		_iter_end_1a6770773:;
	};
	if ((!((*(_122130_decl)).get()._field_Binded))) {
		jule::Ptr<_1acb36b88_Enum> _124621_e = _1accc2ecd_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1accc2a7c_FindEnum((*(_self_))._field_lookup, (*(_122130_decl)).get()._field_Ident);;
		if ((_124621_e != nullptr)) {
			return jule::Trait<_1acca4740_Kind>(_1accb8424_fromEnum(_self_, _122130_decl, &(_124621_e)), 3);;
		};
		jule::Ptr<_1acb38283_TypeEnum> _125121_te = _1accc2ecd_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1accc2d8a_FindTypeEnum((*(_self_))._field_lookup, (*(_122130_decl)).get()._field_Ident);;
		if ((_125121_te != nullptr)) {
			return jule::Trait<_1acca4740_Kind>(_1accb87cb_fromTypeEnum(_self_, _122130_decl, &(_125121_te)), 4);;
		};
		jule::Ptr<_1acb34405_Trait> _125621_t = _1accc2ecd_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1accc276e_FindTrait((*(_self_))._field_lookup, (*(_122130_decl)).get()._field_Ident);;
		if ((_125621_t != nullptr)) {
			return jule::Trait<_1acca4740_Kind>(_1accb8b83_fromTrait(_self_, _122130_decl, &(_125621_t)), 2);;
		};
	} else if ((*(_self_))._field_selection) {
		_1accb66db_pushErr(_self_, (*(_122130_decl)).get()._field_Token, jule::Str("binded definitions are not allowed in this scope", 48), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1acb07021_Struct> _126517_s = _1accc2ecd_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1accc20a9_FindStruct((*(_self_))._field_lookup, (*(_122130_decl)).get()._field_Ident, (*(_122130_decl)).get()._field_Binded);;
	if ((_126517_s != nullptr)) {
		return jule::Trait<_1acca4740_Kind>(_1accb9a52_fromStruct(_self_, _122130_decl, &(_126517_s)), 0);;
	};
	jule::Ptr<_1acca3e59_TypeAlias> _127017_ta = _1accc2ecd_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1accc1c02_FindTypeAlias((*(_self_))._field_lookup, (*(_122130_decl)).get()._field_Ident, (*(_122130_decl)).get()._field_Binded);;
	if (((_127017_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_127017_ta=_1acd6c033_findBuiltinTypeAlias((*(_122130_decl)).get()._field_Ident);
	};
	if ((_127017_ta != nullptr)) {
		return _1accb806c_fromTypeAlias(_self_, _122130_decl, &(_127017_ta));;
	};
	_1accb66db_pushErr(_self_, (*(_122130_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_122130_decl)).get()._field_Ident, &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Trait<_1acca4740_Kind> _1accba16d_buildIdent(_1accb5ee3_typeChecker* _self_, jule::Ptr<_1acad7892_IdentTypeDecl> _128233_decl) {
	return _1accb9d60_getDef(_self_, &(_128233_decl));;
}



inline jule::Trait<_1acca4740_Kind> _1accba47b_buildSubIdent(_1accb5ee3_typeChecker* _self_, jule::Ptr<_1acad7b7d_SubIdentTypeDecl> _128636_decl) {
	jule::Trait<_1acca4740_Kind> _128717_ident = _1accba16d_buildIdent(_self_, _128636_decl.get()._field_Idents[0LL]);;
	if ((_128717_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _128717_ident };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1a677b40a:;
			{
				goto _match_end_1a677b1da;
			}
		}
		else {
			_case_begin_1a677ae32:;
			{
				_1accb66db_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a677b1da:;
	};
	jule::Ptr<_1acb38283_TypeEnum> _129817_t = _128717_ident.cast_ptr<_1acb38283_TypeEnum>(4);;
	jule::Slice<jule::Ptr<_1acad7892_IdentTypeDecl>> _129917_idents = _128636_decl.get()._field_Idents.slice(1LL);;
	{
		auto expr = &(_129917_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a677c780:;
		if (it != expr_end) {
			jule::I64 _130013_i = it - expr->begin();
			jule::Ptr<_1acad7892_IdentTypeDecl> _130016_id = *it;
			{
				jule::Ptr<_1acb37c00_TypeEnumItem> _130121_item = _1acb38cbc_FindItem(_129817_t.ptr(), _130016_id.get()._field_Ident);;
				if ((_130121_item == nullptr)) {
					_1accb66db_pushErr(_self_, _130016_id.get()._field_Token, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_129817_t.get()._field_Ident, &__jule_any_type5),jule::Any(_130016_id.get()._field_Ident, &__jule_any_type5)}));
					return nullptr;;
				};
				if (((_129917_idents.len() - _130013_i) == 1LL)) {
					_1accb708d_pushReferenceByKind(_self_, &(_130121_item.get()._field_Kind.get()._field_Kind));
					return jule::Trait<_1acca4740_Kind>(_130121_item.get()._field_Kind.get()._field_Kind, 19);;
				};
				_129817_t=_1acca7d70_TypeEnum(_130121_item.get()._field_Kind.get()._field_Kind.ptr());
				if ((_129817_t == nullptr)) {
					_1accb66db_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1a677c780:;
			++it;
			_130013_i++;
			goto _iter_begin_1a677c780;
		}
		_iter_end_1a677c780:;
	};
	return nullptr;;
}



inline jule::Ptr<_1accb0b58_Sptr> _1accba789_buildSptrFromType(_1accb5ee3_typeChecker* _self_, jule::Ptr<_1acca4ba2_TypeKind>* _132041_elem) {
	{
		
		if (((*(_132041_elem)) == nullptr)) {
			_case_begin_1a6781135:;
			{
				return nullptr;;
			}
		}
		else if ((_1acca8821_Struct((*(_132041_elem)).ptr()) != nullptr)) {
			_case_begin_1a67811ac:;
			{
				jule::Ptr<_1acb09d37_StructIns> _132617_s = _1acca8821_Struct((*(_132041_elem)).ptr());;
				if (((_132617_s.get()._field_Decl != nullptr) && _132617_s.get()._field_Decl.get()._field_Binded)) {
					_1accb66db_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_1acca80d4_Arr((*(_132041_elem)).ptr()) != nullptr) && _1acca80d4_Arr((*(_132041_elem)).ptr()).get()._field_Auto)) {
			_case_begin_1a6781234:;
			{
				_1accb66db_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a677d055:;
	};
	return jule::new_ptr<_1accb0b58_Sptr>(_1accb0b58_Sptr{._field_Elem=(*(_132041_elem))});;
}



inline jule::Ptr<_1accb0b58_Sptr> _1accbaa97_buildSptr(_1accb5ee3_typeChecker* _self_, jule::Ptr<_1acad82dd_SptrTypeDecl> _134032_decl) {
	jule::Bool _134113_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_134113_notPlain;
	});;
	jule::Ptr<_1acca4ba2_TypeKind> _134517_elem = _1accbce40_checkDecl(_self_, &(_134032_decl.get()._field_Elem));;
	return _1accba789_buildSptrFromType(_self_, &(_134517_elem));;
}



inline jule::Ptr<_1accb41bc_Ptr> _1accbada5_buildPtrFromType(_1accb5ee3_typeChecker* _self_, jule::Ptr<_1acca4ba2_TypeKind>* _134940_elem) {
	{
		
		if (((*(_134940_elem)) == nullptr)) {
			_case_begin_1a67858cb:;
			{
				return nullptr;;
			}
		}
		else if (((_1acca80d4_Arr((*(_134940_elem)).ptr()) != nullptr) && _1acca80d4_Arr((*(_134940_elem)).ptr()).get()._field_Auto)) {
			_case_begin_1a6785953:;
			{
				_1accb66db_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return jule::new_ptr<_1accb41bc_Ptr>();;
			}
		}
		_match_end_1a67857bb:;
	};
	return jule::new_ptr<_1accb41bc_Ptr>(_1accb41bc_Ptr{._field_Elem=(*(_134940_elem))});;
}



inline jule::Ptr<_1accb41bc_Ptr> _1accbb1b3_buildPtr(_1accb5ee3_typeChecker* _self_, jule::Ptr<_1acad8cb1_PtrTypeDecl> _136431_decl) {
	jule::Bool _136513_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_136513_notPlain;
	});;
	jule::Ptr<_1acca4ba2_TypeKind> _136917_elem = nullptr;;
	if ((!(_1acad9113_IsUnsafe(_136431_decl.ptr())))) {
		_136917_elem=_1accbce40_checkDecl(_self_, &(_136431_decl.get()._field_Elem));
		return _1accbada5_buildPtrFromType(_self_, &(_136917_elem));;
	};
	return jule::new_ptr<_1accb41bc_Ptr>(_1accb41bc_Ptr{._field_Elem=_136917_elem});;
}



inline jule::Ptr<_1accb15b5_Slc> _1accbb4c1_buildSlc(_1accb5ee3_typeChecker* _self_, jule::Ptr<_1acad86d9_SlcTypeDecl> _138131_decl) {
	jule::Bool _138213_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_138213_notPlain;
	});;
	jule::Ptr<_1acca4ba2_TypeKind> _138617_elem = _1accbce40_checkDecl(_self_, &(_138131_decl.get()._field_Elem));;
	{
		
		if ((_138617_elem == nullptr)) {
			_case_begin_1a678a491:;
			{
				return nullptr;;
			}
		}
		else if (((_1acca80d4_Arr(_138617_elem.ptr()) != nullptr) && _1acca80d4_Arr(_138617_elem.ptr()).get()._field_Auto)) {
			_case_begin_1a678a518:;
			{
				_1accb66db_pushErr(_self_, _138131_decl.get()._field_Elem.get()._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a678a3d6:;
	};
	return jule::new_ptr<_1accb15b5_Slc>(_1accb15b5_Slc{._field_Elem=_138617_elem});;
}



inline jule::Ptr<_1accb3760_Arr> _1accbb7ce_buildArr(_1accb5ee3_typeChecker* _self_, jule::Ptr<_1acad9487_ArrTypeDecl> _140231_decl) {
	jule::Bool _140313_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_140313_notPlain;
	});;
	jule::I64 _140717_n = 0LL;;
	if ((!(_1acad97d9_AutoSized(_140231_decl.ptr())))) {
		jule::Ptr<_1abd5dc4b_Data> _141021_size = _1acc95984_evalExpr(_1abcedc96_eval((*(_self_))._field_s, (*(_self_))._field_lookup), _140231_decl.get()._field_Size);;
		if ((_141021_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1abd5e5ba_IsConst(_141021_size.ptr())))) {
			_1accb66db_pushErr(_self_, _140231_decl.get()._field_Size.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1acca73be_Prim(_141021_size.get()._field_Kind.ptr()) == nullptr) || (!(_1ddeb404a_IsInt(_1acca73be_Prim(_141021_size.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1accb66db_pushErr(_self_, _140231_decl.get()._field_Size.get()._field_Token, jule::Str("array size must be integer", 26), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_140717_n=static_cast<jule::I64>(static_cast<jule::I64>(_1ddeb712a_AsI64(_141021_size.get()._field_Constant.ptr())));
		if ((_140717_n < 0LL)) {
			_1accb66db_pushErr(_self_, _140231_decl.get()._field_Elem.get()._field_Token, jule::Str("array size must be positive integer", 35), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _142821_max = _1ddead341_MaxI(jule::Str("int", 3));;
			if (((_1ddea623a_BitSize != 64LL) && (static_cast<jule::I64>(_140717_n) > _142821_max))) {
				_1accb66db_pushErr(_self_, _140231_decl.get()._field_Size.get()._field_Token, jule::Str("array with size @ overflows limit (@) of the system", 51), jule::Slice<jule::Any>::make({jule::Any(_1acca2177_constoa(&(_141021_size.get()._field_Constant)), &__jule_any_type5),jule::Any(_1ddea4c0b_FmtInt(_142821_max, 10LL), &__jule_any_type5)}));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_1acca4ba2_TypeKind> _143717_elem = _1accbce40_checkDecl(_self_, &(_140231_decl.get()._field_Elem));;
	{
		
		if ((_143717_elem == nullptr)) {
			_case_begin_1a6793994:;
			{
				return nullptr;;
			}
		}
		else if (((_1acca80d4_Arr(_143717_elem.ptr()) != nullptr) && _1acca80d4_Arr(_143717_elem.ptr()).get()._field_Auto)) {
			_case_begin_1a6793a0a:;
			{
				_1accb66db_pushErr(_self_, _140231_decl.get()._field_Elem.get()._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a678cdde:;
	};
	return jule::new_ptr<_1accb3760_Arr>(_1accb3760_Arr{._field_Auto=_1acad97d9_AutoSized(_140231_decl.ptr()), ._field_N=_140717_n, ._field_Elem=_143717_elem});;
}



inline jule::Ptr<_1accb2b6b_Map> _1accbbadc_buildMap(_1accb5ee3_typeChecker* _self_, jule::Ptr<_1acad9b91_MapTypeDecl> _145531_decl) {
	jule::Bool _145613_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_145613_notPlain;
	});;
	jule::Ptr<_1acca4ba2_TypeKind> _146017_key = _1accbce40_checkDecl(_self_, &(_145531_decl.get()._field_Key));;
	if ((_146017_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1acca4ba2_TypeKind> _146517_val = _1accbce40_checkDecl(_self_, &(_145531_decl.get()._field_Val));;
	if ((_146517_val == nullptr)) {
		return nullptr;;
	};
	if ((_1acca7b0b_Enum(_146517_val.ptr()) != nullptr)) {
		_1accb66db_pushErr(_self_, _145531_decl.get()._field_Val.get()._field_Token, jule::Str("maps do not support enums as map key type", 41), jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1accb2b6b_Map>(_1accb2b6b_Map{._field_Key=_146017_key, ._field_Val=_146517_val});;
}



inline jule::Ptr<_1accb21ba_Tuple> _1accbbdea_buildTuple(_1accb5ee3_typeChecker* _self_, jule::Ptr<_1acad89c5_TupleTypeDecl> _147933_decl) {
	jule::Slice<jule::Ptr<_1acca4ba2_TypeKind>> _148017_types = jule::Slice<jule::Ptr<_1acca4ba2_TypeKind>>::alloc(0LL, _147933_decl.get()._field_Types.len());;
	{
		auto expr = &(_147933_decl.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a67989ee:;
		if (it != expr_end) {
			jule::Ptr<_1acad72cb_TypeDecl> _148121_t = *it;
			{
				jule::Ptr<_1acca4ba2_TypeKind> _148221_kind = _1accbce40_checkDecl(_self_, &(_148121_t));;
				if ((_148221_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1acca4ba2_TypeKind>> &__jule_push_dest = _148017_types; __jule_push_dest.push(_148221_kind); };
			}
			_iter_next_1a67989ee:;
			++it;
			goto _iter_begin_1a67989ee;
		}
		_iter_end_1a67989ee:;
	};
	return jule::new_ptr<_1accb21ba_Tuple>(_1accb21ba_Tuple{._field_Types=_148017_types});;
}



inline jule::Bool _1accbc208_checkFnTypes(_1accb5ee3_typeChecker* _self_, jule::Ptr<_1acb24d85_FnIns>* _149236_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_149236_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a679a9ac:;
		if (it != expr_end) {
			jule::Ptr<_1acb23eb6_ParamIns> _149321_p = *it;
			{
				_149321_p.get()._field_Kind=_1accbcb32_build(_self_, &(_149321_p.get()._field_Decl.get()._field_Kind.get()._field_Decl.get()._field_Kind));
				__jule_func_result=(_149321_p.get()._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1abd0134d_checkFnParamKind((*(_self_))._field_s, &(_149321_p));
			}
			_iter_next_1a679a9ac:;
			++it;
			goto _iter_begin_1a679a9ac;
		}
		_iter_end_1a679a9ac:;
	};
	if ((!(_1acb22646_IsVoid((*(_149236_f)).get()._field_Decl.ptr())))) {
		(*(_149236_f)).get()._field_Result=_1accbcb32_build(_self_, &((*(_149236_f)).get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl.get()._field_Kind));
		__jule_func_result = ((*(_149236_f)).get()._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1acb24d85_FnIns> _1accbc516_buildFn(_1accb5ee3_typeChecker* _self_, jule::Ptr<_1acae8908_FnDecl> _151030_decl) {
	if ((_151030_decl.get()._field_Generics.len() > 0LL)) {
		_1accb66db_pushErr(_self_, _151030_decl.get()._field_Token, jule::Str("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1acb221d4_Fn> _151617_f = _1acb2aebd_buildFn(_151030_decl);;
	jule::I64 _151813_n = (*(_self_))._field_s.get()._field_errors.len();;
	_1abd098b7_checkAnonFnDecl((*(_self_))._field_s, &(_151617_f));
	if ((_151813_n != (*(_self_))._field_s.get()._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1acb24d85_FnIns> _152417_ins = _1acb235c0_instanceForce(_151617_f);;
	_152417_ins.get()._field_Anon=true;
	jule::Bool _152713_ok = _1accbc208_checkFnTypes(_self_, &(_152417_ins));;
	if ((!(_152713_ok))) {
		return nullptr;;
	};
	return _152417_ins;;
}



inline jule::Trait<_1acca4740_Kind> _1accbc824_buildByNamespace(_1accb5ee3_typeChecker* _self_, jule::Ptr<_1acad8002_NamespaceTypeDecl> _153539_decl) {
	jule::Str _153613_path = _1accc0294_buildLinkPathByTokens(&(_153539_decl.get()._field_Idents));;
	jule::Ptr<_1abcdb39e_ImportInfo> _153717_imp = _1accc2ecd_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1accc1493_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1abcdb39e_ImportInfo>)>([=](jule::Ptr<_1abcdb39e_ImportInfo> _153752_imp) mutable -> jule::Bool {
		if (((_153539_decl.get()._field_Idents.len() == 1LL) && (_153752_imp.get()._field_Alias == _153613_path))) {
			return true;;
		};
		return ((_153752_imp.get()._field_LinkPath == _153613_path) && _1abcddbdc_isAccessibleViaSelection(_153752_imp.ptr()));;
	}));;
	if (((_153717_imp == nullptr) || (!(_1abcdd648_isLookupable(_153717_imp.ptr(), jule::Str("self", 4)))))) {
		_1accb66db_pushErr(_self_, _153539_decl.get()._field_Idents[0LL], jule::Str("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_153613_path, &__jule_any_type5)}));
		return nullptr;;
	};
	_1accb6a93_disallowBuiltin(_self_);
	jule::Trait<_1accc2ecd_Lookup> _155017_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1accc2ecd_Lookup>(_153717_imp, 1);
	jule::Ptr<_1acca4ba2_TypeKind> _155217_kind = _1accbce40_checkDecl(_self_, &(_153539_decl.get()._field_Kind));;
	(*(_self_))._field_lookup=_155017_lookup;
	_1accb68b7_allowBuiltin(_self_);
	return jule::Trait<_1acca4740_Kind>(_155217_kind, 19);;
}



inline jule::Ptr<_1acca4ba2_TypeKind> _1accbcb32_build(_1accb5ee3_typeChecker* _self_, jule::Any* _155829_declKind) {
	jule::Trait<_1acca4740_Kind> _155917_kind = nullptr;;
	{
		auto &_match_expr{ (*(_155829_declKind)) };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1a67a6864:;
			{
				jule::Trait<_1acca4740_Kind> _156221_t = _1accba16d_buildIdent(_self_, (*(_155829_declKind)).cast_ptr<_1acad7892_IdentTypeDecl>(&__jule_any_type20));;
				if ((_156221_t != nullptr)) {
					_155917_kind=_156221_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1a67a76de:;
			{
				jule::Trait<_1acca4740_Kind> _156721_t = _1accba47b_buildSubIdent(_self_, (*(_155829_declKind)).cast_ptr<_1acad7b7d_SubIdentTypeDecl>(&__jule_any_type92));;
				if ((_156721_t != nullptr)) {
					_155917_kind=_156721_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1a67a7755:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1accb0b58_Sptr> _157321_t = _1accbaa97_buildSptr(_self_, (*(_155829_declKind)).cast_ptr<_1acad82dd_SptrTypeDecl>(&__jule_any_type78));;
				if ((_157321_t != nullptr)) {
					_155917_kind=jule::Trait<_1acca4740_Kind>(_157321_t, 21);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1a67a6d3c:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1accb41bc_Ptr> _157921_t = _1accbb1b3_buildPtr(_self_, (*(_155829_declKind)).cast_ptr<_1acad8cb1_PtrTypeDecl>(&__jule_any_type77));;
				if ((_157921_t != nullptr)) {
					_155917_kind=jule::Trait<_1acca4740_Kind>(_157921_t, 26);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1a67a6da3:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1accb15b5_Slc> _158521_t = _1accbb4c1_buildSlc(_self_, (*(_155829_declKind)).cast_ptr<_1acad86d9_SlcTypeDecl>(&__jule_any_type76));;
				if ((_158521_t != nullptr)) {
					_155917_kind=jule::Trait<_1acca4740_Kind>(_158521_t, 22);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1a67a6e19:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1accb3760_Arr> _159121_t = _1accbb7ce_buildArr(_self_, (*(_155829_declKind)).cast_ptr<_1acad9487_ArrTypeDecl>(&__jule_any_type75));;
				if ((_159121_t != nullptr)) {
					_155917_kind=jule::Trait<_1acca4740_Kind>(_159121_t, 25);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1a67a6e80:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1accb2b6b_Map> _159721_t = _1accbbadc_buildMap(_self_, (*(_155829_declKind)).cast_ptr<_1acad9b91_MapTypeDecl>(&__jule_any_type79));;
				if ((_159721_t != nullptr)) {
					_155917_kind=jule::Trait<_1acca4740_Kind>(_159721_t, 24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1a67a77bb:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1accb21ba_Tuple> _160321_t = _1accbbdea_buildTuple(_self_, (*(_155829_declKind)).cast_ptr<_1acad89c5_TupleTypeDecl>(&__jule_any_type80));;
				if ((_160321_t != nullptr)) {
					_155917_kind=jule::Trait<_1acca4740_Kind>(_160321_t, 23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1a67a7832:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1acb24d85_FnIns> _160921_t = _1accbc516_buildFn(_self_, (*(_155829_declKind)).cast_ptr<_1acae8908_FnDecl>(&__jule_any_type14));;
				if ((_160921_t != nullptr)) {
					_155917_kind=jule::Trait<_1acca4740_Kind>(_160921_t, 1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1a67a7898:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait<_1acca4740_Kind> _161521_t = _1accbc824_buildByNamespace(_self_, (*(_155829_declKind)).cast_ptr<_1acad8002_NamespaceTypeDecl>(&__jule_any_type96));;
				if ((_161521_t != nullptr)) {
					_155917_kind=_161521_t;
				};
			}
		}
		else {
			_case_begin_1a67a6bd8:;
			{
				_1accb66db_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a67a6aea:;
	};
	if ((_155917_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _155917_kind };
		
		if (_match_expr.type_is(true, 19)) {
			_case_begin_1a67b5884:;
			{
				return _155917_kind.cast_ptr<_1acca4ba2_TypeKind>(19);;
			}
		}
		else {
			_case_begin_1a67b2cd2:;
			{
				jule::Ptr<_1acca4ba2_TypeKind> _163021_tk = jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=_155917_kind});;
				{
					auto &_match_expr{ _155917_kind };
					
					if (_match_expr.type_is(true, 20)) {
						_case_begin_1a67b3bc3:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									{ jule::Slice<jule::Ptr<_1acca4ba2_TypeKind>> *__jule_push_dest = (*(_self_))._field_ignoredGenerics; __jule_push_dest->push(_163021_tk); };
								};
							};
						}
					}
					else if (_match_expr.type_is(true, 0)) {
						_case_begin_1a67b3c4a:;
						{
							jule::Ptr<_1acb09d37_StructIns> _163721_s = _155917_kind.cast_ptr<_1acb09d37_StructIns>(0);;
							if (((_163721_s.get()._field_Decl != nullptr) && _163721_s.get()._field_Decl.get()._field_Binded)) {
								_163021_tk.get()._field_BindIdent=_163721_s.get()._field_Decl.get()._field_Ident;
							};
						}
					}
					_match_end_1a67b3ab3:;
				};
				return _163021_tk;;
			}
		}
		_match_end_1a67a7b62:;
	};
}



inline jule::Ptr<_1acca4ba2_TypeKind> _1accbce40_checkDecl(_1accb5ee3_typeChecker* _self_, jule::Ptr<_1acad72cb_TypeDecl>* _164633_decl) {
	jule::Ptr<_2097d15d8_Token> _164817_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*(_164633_decl)).get()._field_Token;
	jule::Ptr<_1acca4ba2_TypeKind> _165117_kind = _1accbcb32_build(_self_, &((*(_164633_decl)).get()._field_Kind));;
	(*(_self_))._field_errorToken=_164817_errorToken;
	return _165117_kind;;
}



inline void _1accbd1b5_check(_1accb5ee3_typeChecker* _self_, jule::Ptr<_1accaba55_TypeSymbol>* _165729_t) {
	if (((*(_165729_t)).get()._field_Decl == nullptr)) {
		return;;
	};
	jule::Ptr<_1acca4ba2_TypeKind> _166117_kind = _1accbce40_checkDecl(_self_, &((*(_165729_t)).get()._field_Decl));;
	if ((_166117_kind == nullptr)) {
		_1accac094_removeKind((*(_165729_t)).ptr());
		return;;
	};
	(*(_165729_t)).get()._field_Kind=_166117_kind;
}







std::ostream &operator<<(std::ostream &_Stream, _1accb5ee3_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "ignoredGenerics:" << _Src._field_ignoredGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "notPlain:" << _Src._field_notPlain << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1accbd825_prim(jule::Str* _167321_ident, jule::Ptr<_1accac407_Prim> _167333_t) {
	return (_167333_t.get()._field_Kind == (*(_167321_ident)));;
}



inline jule::Bool static__1accbdb66_exist(jule::Str* _167722_ident, jule::Ptr<_1acca4ba2_TypeKind>* _167739_k) {
	{
		
		if ((_1acca73be_Prim((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_1a67b9888:;
			{
				return static__1accbd825_prim(_167722_ident, _1acca73be_Prim((*(_167739_k)).ptr()));;
			}
		}
		else if ((_1acca7633_Sptr((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_1a67b98ee:;
			{
				jule::Ptr<_1accb0b58_Sptr> _168221_sptr = _1acca7633_Sptr((*(_167739_k)).ptr());;
				return static__1accbdb66_exist(_167722_ident, &(_168221_sptr.get()._field_Elem));;
			}
		}
		else if ((_1acca7897_Ptr((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_1a67b9965:;
			{
				jule::Ptr<_1accb41bc_Ptr> _168521_ptr = _1acca7897_Ptr((*(_167739_k)).ptr());;
				return static__1accbdb66_exist(_167722_ident, &(_168521_ptr.get()._field_Elem));;
			}
		}
		else if ((_1acca8348_Slc((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_1a67b9ba7:;
			{
				jule::Ptr<_1accb15b5_Slc> _168821_slc = _1acca8348_Slc((*(_167739_k)).ptr());;
				return static__1accbdb66_exist(_167722_ident, &(_168821_slc.get()._field_Elem));;
			}
		}
		else if ((_1acca80d4_Arr((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_1a67b9c1d:;
			{
				jule::Ptr<_1accb3760_Arr> _169121_arr = _1acca80d4_Arr((*(_167739_k)).ptr());;
				return static__1accbdb66_exist(_167722_ident, &(_169121_arr.get()._field_Elem));;
			}
		}
		else if ((_1acca8ce9_Map((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_1a67b9c95:;
			{
				jule::Ptr<_1accb2b6b_Map> _169421_m = _1acca8ce9_Map((*(_167739_k)).ptr());;
				return (static__1accbdb66_exist(_167722_ident, &(_169421_m.get()._field_Key)) || static__1accbdb66_exist(_167722_ident, &(_169421_m.get()._field_Val)));;
			}
		}
		else if ((_1acca8821_Struct((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_1a67b9d1c:;
			{
				jule::Ptr<_1acb09d37_StructIns> _169821_s = _1acca8821_Struct((*(_167739_k)).ptr());;
				{
					auto expr = &(_169821_s.get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a67c0817:;
					if (it != expr_end) {
						jule::Ptr<_1acca3420_InsGeneric> _169925_g = *it;
						{
							if (static__1accbdb66_exist(_167722_ident, &(_169925_g.get()._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1a67c0817:;
						++it;
						goto _iter_begin_1a67c0817;
					}
					_iter_end_1a67c0817:;
				};
				return false;;
			}
		}
		else if ((_1acca85ac_Fn((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_1a67b9ea4:;
			{
				jule::Ptr<_1acb24d85_FnIns> _170621_f = _1acca85ac_Fn((*(_167739_k)).ptr());;
				{
					auto expr = &(_170621_f.get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a67c1e67:;
					if (it != expr_end) {
						jule::Ptr<_1acb23eb6_ParamIns> _170725_p = *it;
						{
							if (_1acb20e80_IsSelf(_170725_p.get()._field_Decl.ptr())) {
								goto _iter_next_1a67c1e67;
							};
							if (static__1accbdb66_exist(_167722_ident, &(_170725_p.get()._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1a67c1e67:;
						++it;
						goto _iter_begin_1a67c1e67;
					}
					_iter_end_1a67c1e67:;
				};
				if ((_170621_f.get()._field_Result != nullptr)) {
					return static__1accbdb66_exist(_167722_ident, &(_170621_f.get()._field_Result));;
				};
				return false;;
			}
		}
		else if ((_1acca905d_Tup((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_1a67ba01a:;
			{
				jule::Ptr<_1accb21ba_Tuple> _172021_tup = _1acca905d_Tup((*(_167739_k)).ptr());;
				{
					auto expr = &(_172021_tup.get()._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a67c4002:;
					if (it != expr_end) {
						jule::Ptr<_1acca4ba2_TypeKind> _172125_t = *it;
						{
							if (static__1accbdb66_exist(_167722_ident, &(_172125_t))) {
								return true;;
							};
						}
						_iter_next_1a67c4002:;
						++it;
						goto _iter_begin_1a67c4002;
					}
					_iter_end_1a67c4002:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1a67b9767:;
			{
				return false;;
			}
		}
		_match_end_1a67b969b:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1accbd3d5_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3d9ceb3_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3de5538_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1a3de64a1_stop(_1a3de5d63_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1a3de6715_stopped(_1a3de5d63_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1a3de6979_finished(_1a3de5d63_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1a3de6bdd_isLastSt(_1a3de5d63_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1a3de700c_pushErr(_1a3de5d63_scopeParser* _self_, jule::Ptr<_2097d15d8_Token> _19126_token, jule::Str _19141_fmt) {
	_1a3e12e90_pushErr((*(_self_))._field_p.ptr(), _19126_token, _19141_fmt, jule::Slice<jule::Any>());
}



inline void _1a3de732b_pushSuggestion(_1a3de5d63_scopeParser* _self_, jule::Str _19633_fmt, jule::Slice<jule::Any> _19646_args) {
	_1a3e132ae_pushSuggestion((*(_self_))._field_p.ptr(), _19633_fmt, _19646_args);
}



inline void _1a3de75a1_insertAsNext(_1a3de5d63_scopeParser* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _20036_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1a3de5538_stmt>(_1a3de5538_stmt{._field_tokens=(*(_20036_tokens)), });
}



inline jule::Ptr<_1a3de5538_stmt> _1a3de7815_next(_1a3de5d63_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_1acae6e12_ScopeTree> _1a3de7bbc_buildScope(_1a3de5d63_scopeParser* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _21034_tokens, jule::Ptr<_2097d15d8_Token> _21056_end) {
	jule::Ptr<_1acae6e12_ScopeTree> _21117_s = _1a3de4438_newScope();;
	_21117_s.get()._field_Parent=(*(_self_))._field_s;
	_21117_s.get()._field_End=_21056_end;
	_1a3de5d63_scopeParser _21417_ssp = _1a3de5d63_scopeParser{._field_p=(*(_self_))._field_p, };;
	_1a3e018a7_build(&_21417_ssp, _21034_tokens, &(_21117_s));
	return _21117_s;;
}



inline jule::Ptr<_1acae98d7_VarDecl> _1a3de7eca_buildVarSt(_1a3de5d63_scopeParser* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _22134_tokens) {
	jule::Ptr<_1acae98d7_VarDecl> _22217_v = _1a3e159cb_buildVar((*(_self_))._field_p, (*(_22134_tokens)));;
	_22217_v.get()._field_Scope=(*(_self_))._field_s;
	return _22217_v;;
}



inline jule::Ptr<_1acae9c8e_RetSt> _1a3de82d8_buildRetSt(_1a3de5d63_scopeParser* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>> _22733_tokens) {
	jule::Ptr<_1acae9c8e_RetSt> _22817_st = jule::new_ptr<_1acae9c8e_RetSt>(_1acae9c8e_RetSt{._field_Token=_22733_tokens[0LL], });;
	if ((_22733_tokens.len() > 1LL)) {
		_22733_tokens=_22733_tokens.slice(1LL);
		_22817_st.get()._field_Expr=_1a3e135bc_buildExpr((*(_self_))._field_p, &(_22733_tokens));
	};
	return _22817_st;;
}



inline jule::Ptr<_1acaea3ee_Iter> _1a3de85e6_buildWhileNextIter(_1a3de5d63_scopeParser* _self_, jule::Ptr<_1a3de5538_stmt>* _23842_s) {
	jule::Ptr<_1acaea3ee_Iter> _23917_it = jule::new_ptr<_1acaea3ee_Iter>(_1acaea3ee_Iter{._field_Token=(*(_23842_s)).get()._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _24217_tokens = (*(_23842_s)).get()._field_tokens.slice(1LL);;
	jule::Ptr<_1acaeabc4_WhileKind> _24317_kind = jule::new_ptr<_1acaeabc4_WhileKind>();;
	if ((_24217_tokens.len() > 0LL)) {
		_24317_kind.get()._field_Expr=_1a3e135bc_buildExpr((*(_self_))._field_p, &(_24217_tokens));
	};
	if (_1a3de6bdd_isLastSt(_self_)) {
		_1a3de700c_pushErr(_self_, _23917_it.get()._field_Token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	_24217_tokens=_1a3de7815_next(_self_).get()._field_tokens;
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _25517_stTokens = _1a3e0c64e_getBlockExpr(&(_24217_tokens));;
	if ((_25517_stTokens.len() > 0LL)) {
		jule::Ptr<_1a3de5538_stmt> _25721_stmt = jule::new_ptr<_1a3de5538_stmt>(_1a3de5538_stmt{._field_tokens=_25517_stTokens, ._field_terminated=(*(_23842_s)).get()._field_terminated});;
		_24317_kind.get()._field_NextToken=_25517_stTokens[0LL];
		_24317_kind.get()._field_Next=_1a3e01588_buildSt(_self_, &(_25721_stmt));
	};
	jule::I64 _26517_i = _25517_stTokens.len();;
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _26617_blockTokens = _1a3e1071d_range(&(_26517_i), jule::Str("{", 1), jule::Str("}", 1), &(_24217_tokens));;
	if ((_26617_blockTokens == nullptr)) {
		_1a3de64a1_stop(_self_);
		_1a3de700c_pushErr(_self_, _23917_it.get()._field_Token, jule::Str("body is not exist", 17));
		_1a3de732b_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_26517_i < _24217_tokens.len())) {
		_1a3de700c_pushErr(_self_, _24217_tokens[_26517_i], jule::Str("invalid syntax", 14));
	};
	_23917_it.get()._field_Scope=_1a3de7bbc_buildScope(_self_, &(_26617_blockTokens), _24217_tokens[(_26517_i - 1LL)]);
	_23917_it.get()._field_Kind=jule::Any(_24317_kind, &__jule_any_type38);
	return _23917_it;;
}



inline jule::Ptr<_1acaeabc4_WhileKind> _1a3de8904_buildWhileIterKind(_1a3de5d63_scopeParser* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _28342_tokens) {
	return jule::new_ptr<_1acaeabc4_WhileKind>(_1acaeabc4_WhileKind{._field_Expr=_1a3e135bc_buildExpr((*(_self_))._field_p, _28342_tokens), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>> _1a3de8c12_getRangeKindKeysTokens(_1a3de5d63_scopeParser* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _28946_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>> _29018_vars;;
	jule::Slice<_20943da3c_Log> _29024_errs;;
	({
		__jule_tuple_ssx_2097d15d8_Token__jule_tuple_s_20943da3c_Log __jule_assign_result = _1a3e1128a_parts(_28946_toks, static_cast<jule::U64>(7LLU), true);
		_29018_vars = __jule_assign_result.__jule_result_arg0;
		_29024_errs = __jule_assign_result.__jule_result_arg1;
	});
	((*(_self_))._field_p.get()._field_errors).append(_29024_errs);;
	return _29018_vars;;
}



inline jule::Ptr<_1acae98d7_VarDecl> _1a3de9020_buildRangeKindKey(_1a3de5d63_scopeParser* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _29541_tokens) {
	if (((*(_29541_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1acae98d7_VarDecl> _29917_key = jule::new_ptr<_1acae98d7_VarDecl>(_1acae98d7_VarDecl{._field_Token=(*(_29541_tokens))[0LL], });;
	if ((_29917_key.get()._field_Token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		_29917_key.get()._field_Mutable=true;
		if (((*(_29541_tokens)).len() == 1LL)) {
			_1a3de700c_pushErr(_self_, _29917_key.get()._field_Token, jule::Str("invalid syntax", 14));
		};
		_29917_key.get()._field_Token=(*(_29541_tokens))[1LL];
	} else if (((*(_29541_tokens)).len() > 1LL)) {
		_1a3de700c_pushErr(_self_, (*(_29541_tokens))[1LL], jule::Str("invalid syntax", 14));
	};
	if ((_29917_key.get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a3de700c_pushErr(_self_, _29917_key.get()._field_Token, jule::Str("invalid syntax", 14));
		_1a3de732b_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_29917_key.get()._field_Ident=_29917_key.get()._field_Token.get()._field_Kind;
	return _29917_key;;
}



inline jule::Slice<jule::Ptr<_1acae98d7_VarDecl>> _1a3de932d_buildRangeKindKeys(_1a3de5d63_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>>* _32042_parts) {
	jule::Slice<jule::Ptr<_1acae98d7_VarDecl>> _32117_keys = nullptr;;
	{
		auto expr = _32042_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6963c52:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_2097d15d8_Token>> _32221_tokens = *it;
			{
				{ jule::Slice<jule::Ptr<_1acae98d7_VarDecl>> &__jule_push_dest = _32117_keys; __jule_push_dest.push(_1a3de9020_buildRangeKindKey(_self_, &(_32221_tokens))); };
			}
			_iter_next_1a6963c52:;
			++it;
			goto _iter_begin_1a6963c52;
		}
		_iter_end_1a6963c52:;
	};
	return _32117_keys;;
}



inline void _1a3de966e_setupRangeKindKeysPlain(_1a3de5d63_scopeParser* _self_, jule::Ptr<_1acaeb565_RangeKind>* _32847_rng, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _32869_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>> _32917_keyTokens = _1a3de8c12_getRangeKindKeysTokens(_self_, _32869_tokens);;
	if ((_32917_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_32917_keyTokens.len() > 2LL)) {
		_1a3de700c_pushErr(_self_, (*(_32847_rng)).get()._field_InToken, jule::Str("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1acae98d7_VarDecl>> _33617_keys = _1a3de932d_buildRangeKindKeys(_self_, &(_32917_keyTokens));;
	(*(_32847_rng)).get()._field_KeyA=_33617_keys[0LL];
	if ((_33617_keys.len() > 1LL)) {
		(*(_32847_rng)).get()._field_KeyB=_33617_keys[1LL];
	};
}



inline void _1a3de99c1_setupRangeKindKeysExplicit(_1a3de5d63_scopeParser* _self_, jule::Ptr<_1acaeb565_RangeKind>* _34350_rng, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _34372_tokens) {
	jule::I64 _34417_i = 0LL;;
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _34517_rang = _1a3e1071d_range(&(_34417_i), jule::Str("(", 1), jule::Str(")", 1), _34372_tokens);;
	if ((_34417_i < (*(_34372_tokens)).len())) {
		_1a3de700c_pushErr(_self_, (*(_34350_rng)).get()._field_InToken, jule::Str("invalid syntax", 14));
	};
	_1a3de966e_setupRangeKindKeysPlain(_self_, _34350_rng, &(_34517_rang));
}



inline void _1a3de9d01_setupRangeKindKeys(_1a3de5d63_scopeParser* _self_, jule::Ptr<_1acaeb565_RangeKind>* _35242_rng, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _35264_tokens) {
	if (((*(_35264_tokens))[0LL].get()._field_Id == static_cast<jule::U64>(2LLU))) {
		if ((!(*(_35264_tokens))[0LL].get()._field_Kind.equal("(", 1))) {
			_1a3de700c_pushErr(_self_, (*(_35264_tokens))[0LL], jule::Str("invalid syntax", 14));
			return;;
		};
		_1a3de99c1_setupRangeKindKeysExplicit(_self_, _35242_rng, _35264_tokens);
		return;;
	};
	_1a3de966e_setupRangeKindKeysPlain(_self_, _35242_rng, _35264_tokens);
}



inline jule::Ptr<_1acaeb565_RangeKind> _1a3dea252_buildRangeIterKind(_1a3de5d63_scopeParser* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _36442_var_tokens, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _36514_exprTokens, jule::Ptr<_2097d15d8_Token>* _36541_inToken) {
	jule::Ptr<_1acaeb565_RangeKind> _36617_rng = jule::new_ptr<_1acaeb565_RangeKind>(_1acaeb565_RangeKind{._field_InToken=(*(_36541_inToken)), });;
	if (((*(_36514_exprTokens)).len() == 0LL)) {
		_1a3de700c_pushErr(_self_, _36617_rng.get()._field_InToken, jule::Str("expression missing", 18));
		return _36617_rng;;
	};
	_36617_rng.get()._field_Expr=_1a3e135bc_buildExpr((*(_self_))._field_p, _36514_exprTokens);
	if (((*(_36442_var_tokens)).len() > 0LL)) {
		_1a3de9d01_setupRangeKindKeys(_self_, &(_36617_rng), _36442_var_tokens);
	};
	return _36617_rng;;
}



inline jule::Any _1a3dea609_buildCommonIterKind(_1a3de5d63_scopeParser* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _38043_tokens, jule::Ptr<_2097d15d8_Token>* _38062_err_tok) {
	jule::I64 _38117_braceN = 0LL;;
	{
		auto expr = _38043_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a696d575:;
		if (it != expr_end) {
			jule::I64 _38214_i = it - expr->begin();
			jule::Ptr<_2097d15d8_Token> _38221_tok = *it;
			{
				if ((_38221_tok.get()._field_Id == static_cast<jule::U64>(2LLU))) {
					{
						auto &_match_expr{ _38221_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a696e3ab:;
							{
								(_38117_braceN)++;
								goto _iter_next_1a696d575;
							}
						}
						else {
							_case_begin_1a696e686:;
							{
								(_38117_braceN)--;
							}
						}
						_match_end_1a696e477:;
					};
				};
				if ((_38117_braceN != 0LL)) {
					goto _iter_next_1a696d575;
				};
				{
					auto &_match_expr{ _38221_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(14LLU)) {
						_case_begin_1a696e28a:;
						{
							jule::Slice<jule::Ptr<_2097d15d8_Token>> _39925_declTokens = (*(_38043_tokens)).slice(0LL, _38214_i);;
							jule::Slice<jule::Ptr<_2097d15d8_Token>> _40025_exprTokens = (*(_38043_tokens)).slice((_38214_i + 1LL));;
							return jule::Any(_1a3dea252_buildRangeIterKind(_self_, &(_39925_declTokens), &(_40025_exprTokens), &(_38221_tok)), &__jule_any_type40);;
						}
					}
					_match_end_1a6970379:;
				};
			}
			_iter_next_1a696d575:;
			++it;
			_38214_i++;
			goto _iter_begin_1a696d575;
		}
		_iter_end_1a696d575:;
	};
	return jule::Any(_1a3de8904_buildWhileIterKind(_self_, _38043_tokens), &__jule_any_type38);;
}



inline jule::Ptr<_1acaea3ee_Iter> _1a3dea917_buildCommonIter(_1a3de5d63_scopeParser* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>> _40738_tokens) {
	jule::Ptr<_1acaea3ee_Iter> _40817_it = jule::new_ptr<_1acaea3ee_Iter>(_1acaea3ee_Iter{._field_Token=_40738_tokens[0LL], });;
	_40738_tokens=_40738_tokens.slice(1LL);
	if ((_40738_tokens.len() == 0LL)) {
		_1a3de64a1_stop(_self_);
		_1a3de700c_pushErr(_self_, _40817_it.get()._field_Token, jule::Str("body is not exist", 17));
		_1a3de732b_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _41817_exprTokens = _1a3e0c64e_getBlockExpr(&(_40738_tokens));;
	if ((_41817_exprTokens.len() > 0LL)) {
		_40817_it.get()._field_Kind=_1a3dea609_buildCommonIterKind(_self_, &(_41817_exprTokens), &(_40817_it.get()._field_Token));
	};
	jule::I64 _42217_i = _41817_exprTokens.len();;
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _42317_scopeTokens = _1a3e1071d_range(&(_42217_i), jule::Str("{", 1), jule::Str("}", 1), &(_40738_tokens));;
	if ((_42317_scopeTokens == nullptr)) {
		_1a3de64a1_stop(_self_);
		_1a3de700c_pushErr(_self_, _40817_it.get()._field_Token, jule::Str("body is not exist", 17));
		_1a3de732b_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_42217_i < _40738_tokens.len())) {
		_1a3de700c_pushErr(_self_, _40738_tokens[_42217_i], jule::Str("invalid syntax", 14));
	};
	_40817_it.get()._field_Scope=_1a3de7bbc_buildScope(_self_, &(_42317_scopeTokens), _40738_tokens[(_42217_i - 1LL)]);
	return _40817_it;;
}



inline jule::Ptr<_1acaea3ee_Iter> _1a3deac25_buildIterSt(_1a3de5d63_scopeParser* _self_, jule::Ptr<_1a3de5538_stmt>* _43735_st) {
	if ((*(_43735_st)).get()._field_terminated) {
		return _1a3de85e6_buildWhileNextIter(_self_, _43735_st);;
	};
	return _1a3dea917_buildCommonIter(_self_, (*(_43735_st)).get()._field_tokens);;
}



inline jule::Ptr<_1acaeb91c_BreakSt> _1a3deb033_buildBreakSt(_1a3de5d63_scopeParser* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _44436_tokens) {
	jule::Ptr<_1acaeb91c_BreakSt> _44517_brk = jule::new_ptr<_1acaeb91c_BreakSt>(_1acaeb91c_BreakSt{._field_Token=(*(_44436_tokens))[0LL], });;
	if (((*(_44436_tokens)).len() > 1LL)) {
		if (((*(_44436_tokens))[1LL].get()._field_Id != static_cast<jule::U64>(1LLU))) {
			_1a3de700c_pushErr(_self_, (*(_44436_tokens))[1LL], jule::Str("invalid syntax", 14));
			_1a3de732b_pushSuggestion(_self_, jule::Str("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			_44517_brk.get()._field_Label=(*(_44436_tokens))[1LL];
			if (((*(_44436_tokens)).len() > 2LL)) {
				_1a3de700c_pushErr(_self_, (*(_44436_tokens))[1LL], jule::Str("invalid syntax", 14));
			};
		};
	};
	return _44517_brk;;
}



inline jule::Ptr<_1acaebcc4_ContSt> _1a3deb341_buildContSt(_1a3de5d63_scopeParser* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _46235_tokens) {
	jule::Ptr<_1acaebcc4_ContSt> _46317_cont = jule::new_ptr<_1acaebcc4_ContSt>(_1acaebcc4_ContSt{._field_Token=(*(_46235_tokens))[0LL], });;
	if (((*(_46235_tokens)).len() > 1LL)) {
		if (((*(_46235_tokens))[1LL].get()._field_Id != static_cast<jule::U64>(1LLU))) {
			_1a3de700c_pushErr(_self_, (*(_46235_tokens))[1LL], jule::Str("invalid syntax", 14));
			_1a3de732b_pushSuggestion(_self_, jule::Str("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			_46317_cont.get()._field_Label=(*(_46235_tokens))[1LL];
			if (((*(_46235_tokens)).len() > 2LL)) {
				_1a3de700c_pushErr(_self_, (*(_46235_tokens))[1LL], jule::Str("invalid syntax", 14));
			};
		};
	};
	return _46317_cont;;
}



inline jule::Ptr<_1acaec247_If> _1a3deb64e_buildIf(_1a3de5d63_scopeParser* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _48031_tokens) {
	jule::Ptr<_1acaec247_If> _48117_model = jule::new_ptr<_1acaec247_If>(_1acaec247_If{._field_Token=(*(_48031_tokens))[0LL], });;
	(*(_48031_tokens))=(*(_48031_tokens)).slice(1LL);
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _48517_exprTokens = _1a3e0c64e_getBlockExpr(_48031_tokens);;
	jule::I64 _48617_i = 0LL;;
	if ((_48517_exprTokens.len() == 0LL)) {
		_1a3de700c_pushErr(_self_, _48117_model.get()._field_Token, jule::Str("expression missing", 18));
	} else {
		_48617_i=static_cast<jule::I64>(_48517_exprTokens.len());
	};
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _49217_scopeTokens = _1a3e1071d_range(&(_48617_i), jule::Str("{", 1), jule::Str("}", 1), _48031_tokens);;
	if ((_49217_scopeTokens == nullptr)) {
		_1a3de64a1_stop(_self_);
		_1a3de700c_pushErr(_self_, _48117_model.get()._field_Token, jule::Str("body is not exist", 17));
		_1a3de732b_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_2097d15d8_Token> _49917_end = (*(_48031_tokens))[(_48617_i - 1LL)];;
	if ((_48617_i < (*(_48031_tokens)).len())) {
		if (((*(_48031_tokens))[_48617_i].get()._field_Id == static_cast<jule::U64>(16LLU))) {
			(*(_48031_tokens))=(*(_48031_tokens)).slice(_48617_i);
		} else {
			_1a3de700c_pushErr(_self_, (*(_48031_tokens))[_48617_i], jule::Str("invalid syntax", 14));
			(*(_48031_tokens))=nullptr;
		};
	};
	_48117_model.get()._field_Expr=_1a3e135bc_buildExpr((*(_self_))._field_p, &(_48517_exprTokens));
	_48117_model.get()._field_Scope=_1a3de7bbc_buildScope(_self_, &(_49217_scopeTokens), _49917_end);
	return _48117_model;;
}



inline jule::Ptr<_1acaec5ee_Else> _1a3deb95c_buildElse(_1a3de5d63_scopeParser* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _51333_tokens) {
	jule::Ptr<_1acaec5ee_Else> _51417_els = jule::new_ptr<_1acaec5ee_Else>(_1acaec5ee_Else{._field_Token=(*(_51333_tokens))[0LL], });;
	(*(_51333_tokens))=(*(_51333_tokens)).slice(1LL);
	jule::I64 _51817_i = 0LL;;
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _51917_scopeTokens = _1a3e1071d_range(&(_51817_i), jule::Str("{", 1), jule::Str("}", 1), _51333_tokens);;
	if ((_51917_scopeTokens == nullptr)) {
		if ((_51817_i < (*(_51333_tokens)).len())) {
			_1a3de700c_pushErr(_self_, _51417_els.get()._field_Token, jule::Str("else's cannot have any expression", 33));
		} else {
			_1a3de64a1_stop(_self_);
			_1a3de700c_pushErr(_self_, _51417_els.get()._field_Token, jule::Str("body is not exist", 17));
			_1a3de732b_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_51817_i < (*(_51333_tokens)).len())) {
		_1a3de700c_pushErr(_self_, (*(_51333_tokens))[_51817_i], jule::Str("invalid syntax", 14));
	};
	_51417_els.get()._field_Scope=_1a3de7bbc_buildScope(_self_, &(_51917_scopeTokens), (*(_51333_tokens))[(_51817_i - 1LL)]);
	return _51417_els;;
}



inline jule::Ptr<_1acaeca72_Conditional> _1a3debc6a_buildIfElseChain(_1a3de5d63_scopeParser* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>> _53739_tokens) {
	jule::Ptr<_1acaeca72_Conditional> _53817_chain = jule::new_ptr<_1acaeca72_Conditional>(_1acaeca72_Conditional{._field_Head=_1a3deb64e_buildIf(_self_, &(_53739_tokens)), });;
	if ((_53817_chain.get()._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53739_tokens.len() != 0LL)) {
		{
			if ((_53739_tokens[0LL].get()._field_Id != static_cast<jule::U64>(16LLU))) {
				goto _iter_end_1a6988073;
			};
			if (((_53739_tokens.len() > 1LL) && (_53739_tokens[1LL].get()._field_Id == static_cast<jule::U64>(15LLU)))) {
				_53739_tokens=_53739_tokens.slice(1LL);
				jule::Ptr<_1acaec247_If> _55025_elif = _1a3deb64e_buildIf(_self_, &(_53739_tokens));;
				{ jule::Slice<jule::Ptr<_1acaec247_If>> &__jule_push_dest = _53817_chain.get()._field_Tail; __jule_push_dest.push(_55025_elif); };
				goto _iter_next_1a6988073;
			};
			_53817_chain.get()._field_Default=_1a3deb95c_buildElse(_self_, &(_53739_tokens));
			goto _iter_end_1a6988073;
		}
	_iter_next_1a6988073:;
	}
	_iter_end_1a6988073:;;
	return _53817_chain;;
}



inline jule::Ptr<_1acadb456_Expr> _1a3dec078_buildCoCallSt(_1a3de5d63_scopeParser* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>> _56036_tokens) {
	jule::Ptr<_2097d15d8_Token> _56113_token = _56036_tokens[0LL];;
	_56036_tokens=_56036_tokens.slice(1LL);
	jule::Ptr<_1acadb456_Expr> _56317_e = _1a3e135bc_buildExpr((*(_self_))._field_p, &(_56036_tokens));;
	if ((_56317_e == nullptr)) {
		return _56317_e;;
	};
	{
		auto &_match_expr{ _56317_e.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1a698c0cc:;
			{
				_56317_e.get()._field_Kind.cast_ptr<_1acae036c_FnCallExpr>(&__jule_any_type111).get()._field_IsCo=true;
			}
		}
		else {
			_case_begin_1a698bc14:;
			{
				_1a3de700c_pushErr(_self_, _56113_token, jule::Str("statement must have function call expression", 44));
			}
		}
		_match_end_1a698bbae:;
	};
	return _56317_e;;
}



inline jule::Ptr<_1acae49d1_GotoSt> _1a3dec386_buildGotoSt(_1a3de5d63_scopeParser* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _57635_tokens) {
	jule::Ptr<_1acae49d1_GotoSt> _57717_gt = jule::new_ptr<_1acae49d1_GotoSt>(_1acae49d1_GotoSt{._field_Token=(*(_57635_tokens))[0LL], });;
	if (((*(_57635_tokens)).len() == 1LL)) {
		_1a3de700c_pushErr(_self_, _57717_gt.get()._field_Token, jule::Str("missing label identifier for goto statement", 43));
		return nullptr;;
	} else if (((*(_57635_tokens)).len() > 2LL)) {
		_1a3de700c_pushErr(_self_, (*(_57635_tokens))[2LL], jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_2097d15d8_Token> _58617_identToken = (*(_57635_tokens))[1LL];;
	if ((_58617_identToken.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a3de700c_pushErr(_self_, _58617_identToken, jule::Str("invalid syntax", 14));
		_1a3de732b_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return _57717_gt;;
	};
	_57717_gt.get()._field_Label=_58617_identToken;
	return _57717_gt;;
}



inline jule::Ptr<_1acae4cbc_FallSt> _1a3dec694_buildFallSt(_1a3de5d63_scopeParser* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _59635_tokens) {
	jule::Ptr<_1acae4cbc_FallSt> _59717_fll = jule::new_ptr<_1acae4cbc_FallSt>(_1acae4cbc_FallSt{._field_Token=(*(_59635_tokens))[0LL]});;
	if (((*(_59635_tokens)).len() > 1LL)) {
		_1a3de700c_pushErr(_self_, (*(_59635_tokens))[1LL], jule::Str("invalid syntax", 14));
	};
	return _59717_fll;;
}



inline jule::Ptr<_1acaed248_TypeAliasDecl> _1a3dec9a2_buildTypeAliasSt(_1a3de5d63_scopeParser* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _60640_tokens) {
	jule::Ptr<_1acaed248_TypeAliasDecl> _60717_tad = _1a3e14bb7_buildTypeAliasDecl((*(_self_))._field_p, _60640_tokens);;
	_60717_tad.get()._field_Scope=(*(_self_))._field_s;
	return _60717_tad;;
}



inline void _1a3dece14_pushCaseExpr(_1a3de5d63_scopeParser* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>> _61235_tokens, jule::Ptr<_2097d15d8_Token> _61257_token, jule::Bool _6139_typeMatch, jule::Slice<jule::Ptr<_1acadb456_Expr>>* _61331_exprs) {
	if ((_61235_tokens.len() == 0LL)) {
		return;;
	};
	if (_6139_typeMatch) {
		jule::I64 _61921_i = 0LL;;
		jule::Ptr<_1acad72cb_TypeDecl> _62022_t;;
		jule::Bool _62025_ok = false;;
		({
			__jule_tuple_x_1acad72cb_TypeDecl__jule_tuple_bool __jule_assign_result = _1a3e148a9_buildType((*(_self_))._field_p, &(_61235_tokens), (&(_61921_i)), true);
			_62022_t = __jule_assign_result.__jule_result_arg0;
			_62025_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62025_ok) {
			{ jule::Slice<jule::Ptr<_1acadb456_Expr>> &__jule_push_dest = (*(_61331_exprs)); __jule_push_dest.push(jule::new_ptr<_1acadb456_Expr>(_1acadb456_Expr{._field_Token=_61235_tokens[0LL], ._field_End=_61235_tokens[(_61235_tokens.len() - 1LL)], ._field_Kind=jule::Any(_62022_t, &__jule_any_type94)})); };
			if ((_61921_i < _61235_tokens.len())) {
				_1a3de700c_pushErr(_self_, _61235_tokens[_61921_i], jule::Str("invalid syntax", 14));
			};
		};
		return;;
	};
	{ jule::Slice<jule::Ptr<_1acadb456_Expr>> &__jule_push_dest = (*(_61331_exprs)); __jule_push_dest.push(_1a3e135bc_buildExpr((*(_self_))._field_p, &(_61235_tokens))); };
}



inline jule::Slice<jule::Ptr<_1acadb456_Expr>> _1a3ded365_buildCaseExprs(_1a3de5d63_scopeParser* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _63638_tokens, jule::Ptr<_2097d15d8_Token>* _63661_colon, jule::Bool _63676_typeMatch) {
	jule::Slice<jule::Ptr<_1acadb456_Expr>> _63717_exprs = jule::Slice<jule::Ptr<_1acadb456_Expr>>::alloc(0LL, 1LL);;
	jule::I64 _63917_braceN = 0LL;;
	jule::I64 _64017_j = 0LL;;
	{
		auto expr = _63638_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6996da6:;
		if (it != expr_end) {
			jule::I64 _64114_i = it - expr->begin();
			jule::Ptr<_2097d15d8_Token> _64121_tok = *it;
			{
				if ((_64121_tok.get()._field_Id == static_cast<jule::U64>(2LLU))) {
					{
						auto &_match_expr{ _64121_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
							_case_begin_1a69988d0:;
							{
								(_63917_braceN)++;
							}
						}
						else {
							_case_begin_1a6998baa:;
							{
								(_63917_braceN)--;
							}
						}
						_match_end_1a699899b:;
					};
					goto _iter_next_1a6996da6;
				} else if ((_63917_braceN != 0LL)) {
					goto _iter_next_1a6996da6;
				};
				{
					
					if (((_64121_tok.get()._field_Id == static_cast<jule::U64>(6LLU)) && _64121_tok.get()._field_Kind.equal("|", 1))) {
						_case_begin_1a69995c3:;
						{
							jule::Slice<jule::Ptr<_2097d15d8_Token>> _65721_exprTokens = (*(_63638_tokens)).slice(_64017_j, _64114_i);;
							if ((_65721_exprTokens.len() == 0LL)) {
								_1a3de700c_pushErr(_self_, _64121_tok, jule::Str("expression missing", 18));
							} else {
								_1a3dece14_pushCaseExpr(_self_, (*(_63638_tokens)).slice(_64017_j, _64114_i), _64121_tok, _63676_typeMatch, &(_63717_exprs));
							};
							_64017_j=static_cast<jule::I64>((_64114_i + 1LL));
						}
					}
					else if ((_64121_tok.get()._field_Id == static_cast<jule::U64>(10LLU))) {
						_case_begin_1a699964a:;
						{
							(*(_63661_colon))=_64121_tok;
							_1a3dece14_pushCaseExpr(_self_, (*(_63638_tokens)).slice(_64017_j, _64114_i), _64121_tok, _63676_typeMatch, &(_63717_exprs));
							(*(_63638_tokens))=(*(_63638_tokens)).slice((_64114_i + 1LL));
							return _63717_exprs;;
						}
					}
					_match_end_1a6999529:;
				};
			}
			_iter_next_1a6996da6:;
			++it;
			_64114_i++;
			goto _iter_begin_1a6996da6;
		}
		_iter_end_1a6996da6:;
	};
	_1a3de700c_pushErr(_self_, (*(_63638_tokens))[0LL], jule::Str("invalid syntax", 14));
	(*(_63638_tokens))=nullptr;
	return nullptr;;
}



inline jule::Ptr<_1acae6e12_ScopeTree> _1a3ded673_buildCaseScope(_1a3de5d63_scopeParser* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _67638_tokens) {
	jule::I64 _67717_n = 0LL;;
	for (;;) {
		{
			jule::I64 _67921_i = 0LL;;
			jule::Slice<jule::Ptr<_2097d15d8_Token>> _68022_next;;
			({
				__jule_tuple_sx_2097d15d8_Token__jule_tuple_bool __jule_assign_result = _1a3de523b_skipSt(&(_67921_i), (*(_67638_tokens)).slice(_67717_n));
				_68022_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_68022_next.len() == 0LL)) {
				goto _iter_end_1a699cb26;
			};
			jule::Ptr<_2097d15d8_Token> _68417_tok = _68022_next[0LL];;
			if (((_68417_tok.get()._field_Id != static_cast<jule::U64>(6LLU)) || (!_68417_tok.get()._field_Kind.equal("|", 1)))) {
				_67717_n+=_67921_i;
				goto _iter_next_1a699cb26;
			};
			jule::Slice<jule::Ptr<_2097d15d8_Token>> _68921_scopeTokens = (*(_67638_tokens)).slice(0LL, _67717_n);;
			jule::Ptr<_1acae6e12_ScopeTree> _69021_scope = _1a3de7bbc_buildScope(_self_, &(_68921_scopeTokens), (*(_67638_tokens))[_67717_n]);;
			(*(_67638_tokens))=(*(_67638_tokens)).slice(_67717_n);
			return _69021_scope;;
		}
	_iter_next_1a699cb26:;
	}
	_iter_end_1a699cb26:;;
	jule::Ptr<_2097d15d8_Token> _69417_end;;
	if (((*(_67638_tokens)).len() > 0LL)) {
		_69417_end=(*(_67638_tokens))[((*(_67638_tokens)).len() - 1LL)];
	};
	jule::Ptr<_1acae6e12_ScopeTree> _69817_scope = _1a3de7bbc_buildScope(_self_, _67638_tokens, _69417_end);;
	(*(_67638_tokens))=nullptr;
	return _69817_scope;;
}



inline __jule_tuple_x_1acaed6bb_Case__jule_tuple_bool _1a3deda2a_buildCase(_1a3de5d63_scopeParser* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _70333_tokens, jule::Bool _70351_typeMatch) {
	__jule_tuple_x_1acaed6bb_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1acaed6bb_Case> _70417_c = jule::new_ptr<_1acaed6bb_Case>(_1acaed6bb_Case{._field_Token=(*(_70333_tokens))[0LL], });;
	(*(_70333_tokens))=(*(_70333_tokens)).slice(1LL);
	jule::Ptr<_2097d15d8_Token> _70817_colon = nullptr;;
	_70417_c.get()._field_Exprs=_1a3ded365_buildCaseExprs(_self_, _70333_tokens, &(_70817_colon), _70351_typeMatch);
	_70417_c.get()._field_Scope=_1a3ded673_buildCaseScope(_self_, _70333_tokens);
	if ((_70417_c.get()._field_Scope.get()._field_End == nullptr)) {
		_70417_c.get()._field_Scope.get()._field_End=_70817_colon;
	};
	jule::Bool _71413_isDefault = (_70417_c.get()._field_Exprs.len() == 0LL);;
	__jule_func_result.__jule_result_arg0 = _70417_c;
	__jule_func_result.__jule_result_arg1 = _71413_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1acaed6bb_Case__jule_tuple_x_1acaec5ee_Else _1a3deddd2_buildCases(_1a3de5d63_scopeParser* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>> _71833_tokens, jule::Bool _71851_typeMatch) {
	__jule_tuple_sx_1acaed6bb_Case__jule_tuple_x_1acaec5ee_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1acaed6bb_Case>> _71917_cases = nullptr;;
	jule::Ptr<_1acaec5ee_Else> _72017_def = nullptr;;
	jule::Bool _72117_defNotLast = false;;
	while ((_71833_tokens.len() > 0LL)) {
		{
			jule::Ptr<_2097d15d8_Token> _72321_tok = _71833_tokens[0LL];;
			if (((_72321_tok.get()._field_Id != static_cast<jule::U64>(6LLU)) || (!_72321_tok.get()._field_Kind.equal("|", 1)))) {
				_1a3de700c_pushErr(_self_, _72321_tok, jule::Str("invalid syntax", 14));
				goto _iter_end_1a69a5b2e;
			};
			jule::Ptr<_1acaed6bb_Case> _72822_c;;
			jule::Bool _72825_isDefault = false;;
			({
				__jule_tuple_x_1acaed6bb_Case__jule_tuple_bool __jule_assign_result = _1a3deda2a_buildCase(_self_, &(_71833_tokens), _71851_typeMatch);
				_72822_c = __jule_assign_result.__jule_result_arg0;
				_72825_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72825_isDefault) {
				_72822_c.get()._field_Token=_72321_tok;
				if ((_72017_def == nullptr)) {
					_72017_def=jule::new_ptr<_1acaec5ee_Else>(_1acaec5ee_Else{._field_Token=_72822_c.get()._field_Token, ._field_Scope=_72822_c.get()._field_Scope});
				} else {
					_1a3de700c_pushErr(_self_, _72321_tok, jule::Str("invalid syntax", 14));
				};
			} else {
				_72117_defNotLast=(_72117_defNotLast || (_72017_def != nullptr));
				{ jule::Slice<jule::Ptr<_1acaed6bb_Case>> &__jule_push_dest = _71917_cases; __jule_push_dest.push(_72822_c); };
			};
		}
	_iter_next_1a69a5b2e:;
	}
	_iter_end_1a69a5b2e:;;
	if (_72117_defNotLast) {
		_1a3de700c_pushErr(_self_, _72017_def.get()._field_Token, jule::Str("default case should be last case", 32));
	};
	__jule_func_result.__jule_result_arg0 = _71917_cases;
	__jule_func_result.__jule_result_arg1 = _72017_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1acaedd92_MatchCase> _1a3dee1e0_buildMatchCase(_1a3de5d63_scopeParser* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>> _75237_tokens) {
	jule::Ptr<_1acaedd92_MatchCase> _75317_m = jule::new_ptr<_1acaedd92_MatchCase>(_1acaedd92_MatchCase{._field_Token=_75237_tokens[0LL], });;
	_75237_tokens=_75237_tokens.slice(1LL);
	if (((_75237_tokens.len() > 0LL) && (_75237_tokens[0LL].get()._field_Id == static_cast<jule::U64>(9LLU)))) {
		_75317_m.get()._field_TypeMatch=true;
		_75237_tokens=_75237_tokens.slice(1LL);
	};
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _76317_exprTokens = _1a3e0c64e_getBlockExpr(&(_75237_tokens));;
	if ((_76317_exprTokens.len() > 0LL)) {
		_75317_m.get()._field_Expr=_1a3e135bc_buildExpr((*(_self_))._field_p, &(_76317_exprTokens));
	} else if (_75317_m.get()._field_TypeMatch) {
		_1a3de700c_pushErr(_self_, _75317_m.get()._field_Token, jule::Str("expression missing", 18));
	};
	jule::I64 _77017_i = _76317_exprTokens.len();;
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _77117_blockToks = _1a3e1071d_range(&(_77017_i), jule::Str("{", 1), jule::Str("}", 1), &(_75237_tokens));;
	if ((_77117_blockToks == nullptr)) {
		_1a3de64a1_stop(_self_);
		_1a3de700c_pushErr(_self_, _75317_m.get()._field_Token, jule::Str("body is not exist", 17));
		_1a3de732b_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_77017_i < _75237_tokens.len())) {
		_1a3de700c_pushErr(_self_, _75237_tokens[_77017_i], jule::Str("invalid syntax", 14));
	};
	_75317_m.get()._field_End=_75237_tokens[(_77017_i - 1LL)];
	({
		__jule_tuple_sx_1acaed6bb_Case__jule_tuple_x_1acaec5ee_Else __jule_assign_result = _1a3deddd2_buildCases(_self_, _77117_blockToks, _75317_m.get()._field_TypeMatch);
		_75317_m.get()._field_Cases = __jule_assign_result.__jule_result_arg0;
		_75317_m.get()._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _75317_m;;
}



inline jule::Ptr<_1acae6e12_ScopeTree> _1a3dee4ed_buildScopeSt(_1a3de5d63_scopeParser* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>> _78535_tokens) {
	jule::Bool _78617_isUnsafe = false;;
	jule::Bool _78717_isDeferred = false;;
	jule::Ptr<_2097d15d8_Token> _78817_token = _78535_tokens[0LL];;
	if ((_78817_token.get()._field_Id == static_cast<jule::U64>(33LLU))) {
		_78617_isUnsafe=true;
		_78535_tokens=_78535_tokens.slice(1LL);
		if ((_78535_tokens.len() == 0LL)) {
			_1a3de700c_pushErr(_self_, _78817_token, jule::Str("invalid syntax", 14));
			return nullptr;;
		};
		_78817_token=_78535_tokens[0LL];
		if ((_78817_token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
			_78717_isDeferred=true;
			_78535_tokens=_78535_tokens.slice(1LL);
			if ((_78535_tokens.len() == 0LL)) {
				_1a3de700c_pushErr(_self_, _78817_token, jule::Str("invalid syntax", 14));
				return nullptr;;
			};
		};
	} else if ((_78817_token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_78717_isDeferred=true;
		_78535_tokens=_78535_tokens.slice(1LL);
		if ((_78535_tokens.len() == 0LL)) {
			_1a3de700c_pushErr(_self_, _78817_token, jule::Str("invalid syntax", 14));
			return nullptr;;
		};
	};
	jule::I64 _81417_i = 0LL;;
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _81517_scopeTokens = _1a3e1071d_range(&(_81417_i), jule::Str("{", 1), jule::Str("}", 1), &(_78535_tokens));;
	if ((_81517_scopeTokens == nullptr)) {
		_1a3de700c_pushErr(_self_, _78817_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	} else if ((_81417_i < _78535_tokens.len())) {
		_1a3de700c_pushErr(_self_, _78535_tokens[_81417_i], jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1acae6e12_ScopeTree> _82217_scope = _1a3de7bbc_buildScope(_self_, &(_81517_scopeTokens), _78535_tokens[(_81417_i - 1LL)]);;
	_82217_scope.get()._field_Unsafety=_78617_isUnsafe;
	_82217_scope.get()._field_Deferred=_78717_isDeferred;
	return _82217_scope;;
}



inline jule::Ptr<_1acae4629_LabelSt> _1a3dee80b_buildLabelSt(_1a3de5d63_scopeParser* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _82836_tokens) {
	jule::Ptr<_1acae4629_LabelSt> _82917_lbl = jule::new_ptr<_1acae4629_LabelSt>(_1acae4629_LabelSt{._field_Token=(*(_82836_tokens))[0LL], ._field_Ident=(*(_82836_tokens))[0LL].get()._field_Kind});;
	if (((*(_82836_tokens)).len() > 2LL)) {
		(*(_82836_tokens))=(*(_82836_tokens)).slice(2LL);
		_1a3de75a1_insertAsNext(_self_, _82836_tokens);
	};
	return _82917_lbl;;
}



inline __jule_tuple__1acae65c6_StmtData__jule_tuple_bool _1a3deeb19_buildIdSt(_1a3de5d63_scopeParser* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _84333_tokens) {
	__jule_tuple__1acae65c6_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_84333_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_2097d15d8_Token> _84817_token = (*(_84333_tokens))[1LL];;
	{
		auto &_match_expr{ _84817_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1a69b9abb:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1a3dee80b_buildLabelSt(_self_, _84333_tokens), &__jule_any_type57);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a69b9a66:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1a3e0db7d_assignInfo> _1a3deee27_buildAssignInfo(_1a3de5d63_scopeParser* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _85739_tokens) {
	jule::Ptr<_1a3e0db7d_assignInfo> _85817_info = jule::new_ptr<_1a3e0db7d_assignInfo>(_1a3e0db7d_assignInfo{._field_ok=true});;
	jule::I64 _86117_braceN = 0LL;;
	{
		auto expr = _85739_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a69bb1d8:;
		if (it != expr_end) {
			jule::I64 _86214_i = it - expr->begin();
			jule::Ptr<_2097d15d8_Token> _86221_token = *it;
			{
				if ((_86221_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
					{
						auto &_match_expr{ _86221_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a69bc041:;
							{
								(_86117_braceN)++;
							}
						}
						else {
							_case_begin_1a69bc31b:;
							{
								(_86117_braceN)--;
							}
						}
						_match_end_1a69bc10c:;
					};
				};
				{
					
					if ((_86117_braceN > 0LL)) {
						_case_begin_1a69bc9c0:;
						{
							goto _iter_next_1a69bb1d8;
						}
					}
					else if ((_86221_token.get()._field_Id != static_cast<jule::U64>(6LLU))) {
						_case_begin_1a69bca36:;
						{
							goto _iter_next_1a69bb1d8;
						}
					}
					else if ((!(_2097d61c0_IsAssignOp(_86221_token.get()._field_Kind)))) {
						_case_begin_1a69bca9c:;
						{
							goto _iter_next_1a69bb1d8;
						}
					}
					_match_end_1a69bbe53:;
				};
				_85817_info.get()._field_l=(*(_85739_tokens)).slice(0LL, _86214_i);
				if ((_85817_info.get()._field_l.len() == 0LL)) {
					_85817_info.get()._field_ok=false;
				};
				_85817_info.get()._field_setter=_86221_token;
				if (((_86214_i + 1LL) >= (*(_85739_tokens)).len())) {
					_85817_info.get()._field_r=nullptr;
					_85817_info.get()._field_ok=_2097d5e28_IsPostfixOp(_85817_info.get()._field_setter.get()._field_Kind);
					goto _iter_end_1a69bb1d8;
				};
				_85817_info.get()._field_r=(*(_85739_tokens)).slice((_86214_i + 1LL));
				if (_2097d5e28_IsPostfixOp(_85817_info.get()._field_setter.get()._field_Kind)) {
					if ((_85817_info.get()._field_r.len() > 0LL)) {
						_1a3de700c_pushErr(_self_, _85817_info.get()._field_r[0LL], jule::Str("invalid syntax", 14));
						_85817_info.get()._field_r=nullptr;
					};
				};
				goto _iter_end_1a69bb1d8;
			}
			_iter_next_1a69bb1d8:;
			++it;
			_86214_i++;
			goto _iter_begin_1a69bb1d8;
		}
		_iter_end_1a69bb1d8:;
	};
	return _85817_info;;
}



inline jule::Ptr<_1acae53c7_AssignLeft> _1a3e00235_buildAssignL(_1a3de5d63_scopeParser* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _90536_tokens) {
	jule::Ptr<_1acae53c7_AssignLeft> _90617_l = jule::new_ptr<_1acae53c7_AssignLeft>(_1acae53c7_AssignLeft{._field_Token=(*(_90536_tokens))[0LL], });;
	if (((*(_90536_tokens))[0LL].get()._field_Id == static_cast<jule::U64>(1LLU))) {
		_90617_l.get()._field_Ident=_90617_l.get()._field_Token.get()._field_Kind;
	};
	_90617_l.get()._field_Expr=_1a3e135bc_buildExpr((*(_self_))._field_p, _90536_tokens);
	return _90617_l;;
}



inline jule::Slice<jule::Ptr<_1acae53c7_AssignLeft>> _1a3e00543_buildAssignLs(_1a3de5d63_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>>* _91637_parts) {
	jule::Slice<jule::Ptr<_1acae53c7_AssignLeft>> _91717_lefts = nullptr;;
	{
		auto expr = _91637_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a69c3de4:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_2097d15d8_Token>> _91821_part = *it;
			{
				jule::Ptr<_1acae53c7_AssignLeft> _91921_l = _1a3e00235_buildAssignL(_self_, &(_91821_part));;
				{ jule::Slice<jule::Ptr<_1acae53c7_AssignLeft>> &__jule_push_dest = _91717_lefts; __jule_push_dest.push(_91921_l); };
			}
			_iter_next_1a69c3de4:;
			++it;
			goto _iter_begin_1a69c3de4;
		}
		_iter_end_1a69c3de4:;
	};
	return _91717_lefts;;
}



inline __jule_tuple_x_1acae5916_AssignSt__jule_tuple_bool _1a3e00851_buildPlainAssign(_1a3de5d63_scopeParser* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _92640_tokens) {
	__jule_tuple_x_1acae5916_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a3e0db7d_assignInfo> _92717_info = _1a3deee27_buildAssignInfo(_self_, _92640_tokens);;
	if ((!(_92717_info.get()._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1acae5916_AssignSt> _93217_assign = jule::new_ptr<_1acae5916_AssignSt>(_1acae5916_AssignSt{._field_Setter=_92717_info.get()._field_setter, });;
	jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>> _93618_parts;;
	jule::Slice<_20943da3c_Log> _93625_errs;;
	({
		__jule_tuple_ssx_2097d15d8_Token__jule_tuple_s_20943da3c_Log __jule_assign_result = _1a3e1128a_parts(&(_92717_info.get()._field_l), static_cast<jule::U64>(7LLU), true);
		_93618_parts = __jule_assign_result.__jule_result_arg0;
		_93625_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_93625_errs.len() > 0LL)) {
		((*(_self_))._field_p.get()._field_errors).append(_93625_errs);;
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_93217_assign.get()._field_Left=_1a3e00543_buildAssignLs(_self_, &(_93618_parts));
	if ((_92717_info.get()._field_r != nullptr)) {
		_93217_assign.get()._field_Right=_1a3e135bc_buildExpr((*(_self_))._field_p, &(_92717_info.get()._field_r));
	};
	__jule_func_result.__jule_result_arg0 = _93217_assign;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1acae5916_AssignSt__jule_tuple_bool _1a3e00b5e_buildDeclAssign(_1a3de5d63_scopeParser* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>> _95038_tokens) {
	__jule_tuple_x_1acae5916_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_95038_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_95038_tokens=_95038_tokens.slice(1LL);
	jule::Ptr<_2097d15d8_Token> _95617_token = _95038_tokens[0LL];;
	if (((_95617_token.get()._field_Id != static_cast<jule::U64>(2LLU)) || (!_95617_token.get()._field_Kind.equal("(", 1)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1acae5916_AssignSt> _96117_assign = jule::new_ptr<_1acae5916_AssignSt>(_1acae5916_AssignSt{._field_Declarative=true, });;
	jule::I64 _96517_i = 0LL;;
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _96617_rang = _1a3e1071d_range(&(_96517_i), jule::Str("(", 1), jule::Str(")", 1), &(_95038_tokens));;
	if ((_96617_rang == nullptr)) {
		_1a3de700c_pushErr(_self_, _95617_token, jule::Str("invalid syntax", 14));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_96517_i + 1LL) < _95038_tokens.len())) {
		_96117_assign.get()._field_Setter=_95038_tokens[_96517_i];
		(_96517_i)++;
		jule::Slice<jule::Ptr<_2097d15d8_Token>> _97321_exprTokens = _95038_tokens.slice(_96517_i);;
		_96117_assign.get()._field_Right=_1a3e135bc_buildExpr((*(_self_))._field_p, &(_97321_exprTokens));
	};
	jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>> _97818_parts;;
	jule::Slice<_20943da3c_Log> _97825_errs;;
	({
		__jule_tuple_ssx_2097d15d8_Token__jule_tuple_s_20943da3c_Log __jule_assign_result = _1a3e1128a_parts(&(_96617_rang), static_cast<jule::U64>(7LLU), true);
		_97818_parts = __jule_assign_result.__jule_result_arg0;
		_97825_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_97825_errs.len() > 0LL)) {
		((*(_self_))._field_p.get()._field_errors).append(_97825_errs);;
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto expr = &(_97818_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a69ce3d8:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_2097d15d8_Token>> _98421_part = *it;
			{
				jule::Bool _98521_isMut = false;;
				jule::Bool _98621_isRef = false;;
				_95617_token=_98421_part[0LL];
				if ((_95617_token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
					_98521_isMut=true;
					_98421_part=_98421_part.slice(1LL);
					if ((_98421_part.len() == 0LL)) {
						_1a3de700c_pushErr(_self_, _95617_token, jule::Str("invalid syntax", 14));
						goto _iter_next_1a69ce3d8;
					};
				};
				if (((_98421_part[0LL].get()._field_Id == static_cast<jule::U64>(6LLU)) && _98421_part[0LL].get()._field_Kind.equal("&", 1))) {
					_98621_isRef=true;
					_98421_part=_98421_part.slice(1LL);
					if ((_98421_part.len() == 0LL)) {
						_1a3de700c_pushErr(_self_, _95617_token, jule::Str("invalid syntax", 14));
						goto _iter_next_1a69ce3d8;
					};
				};
				if ((((_98421_part[0LL].get()._field_Id != static_cast<jule::U64>(1LLU)) && (_98421_part[0LL].get()._field_Id != static_cast<jule::U64>(2LLU))) && (!_98421_part[0LL].get()._field_Kind.equal("(", 1)))) {
					_1a3de700c_pushErr(_self_, _95617_token, jule::Str("invalid syntax", 14));
					goto _iter_next_1a69ce3d8;
				};
				jule::Ptr<_1acae53c7_AssignLeft> _101421_l = _1a3e00235_buildAssignL(_self_, &(_98421_part));;
				_101421_l.get()._field_Mutable=_98521_isMut;
				_101421_l.get()._field_Reference=_98621_isRef;
				{ jule::Slice<jule::Ptr<_1acae53c7_AssignLeft>> &__jule_push_dest = _96117_assign.get()._field_Left; __jule_push_dest.push(_101421_l); };
			}
			_iter_next_1a69ce3d8:;
			++it;
			goto _iter_begin_1a69ce3d8;
		}
		_iter_end_1a69ce3d8:;
	};
	__jule_func_result.__jule_result_arg0 = _96117_assign;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1acae5916_AssignSt__jule_tuple_bool _1a3e00e6c_buildAssignSt(_1a3de5d63_scopeParser* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _102337_tokens) {
	__jule_tuple_x_1acae5916_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1a3e0e024_checkAssignTokens(_102337_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*(_102337_tokens))[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1a69d66dc:;
			{
				({
					__jule_tuple_x_1acae5916_AssignSt__jule_tuple_bool __jule_assign_result = _1a3e00b5e_buildDeclAssign(_self_, (*(_102337_tokens)));
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1a69d6302:;
			{
				({
					__jule_tuple_x_1acae5916_AssignSt__jule_tuple_bool __jule_assign_result = _1a3e00851_buildPlainAssign(_self_, _102337_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1a69d629c:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1acadbce7_UseExpr> _1a3e0127a_buildUseExpr(_1a3de5d63_scopeParser* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _103836_tokens) {
	if (((*(_103836_tokens)).len() == 1LL)) {
		_1a3de700c_pushErr(_self_, (*(_103836_tokens))[0LL], jule::Str("expression missing", 18));
		return nullptr;;
	};
	jule::Ptr<_1acadbce7_UseExpr> _104317_ue = jule::new_ptr<_1acadbce7_UseExpr>(_1acadbce7_UseExpr{._field_Token=(*(_103836_tokens))[0LL], });;
	(*(_103836_tokens))=(*(_103836_tokens)).slice(1LL);
	_104317_ue.get()._field_Expr=_1a3e135bc_buildExpr((*(_self_))._field_p, _103836_tokens);
	return _104317_ue;;
}



inline jule::Any _1a3e01588_buildSt(_1a3de5d63_scopeParser* _self_, jule::Ptr<_1a3de5538_stmt>* _105131_st) {
	jule::Ptr<_2097d15d8_Token> _105217_token = (*(_105131_st)).get()._field_tokens[0LL];;
	if ((_105217_token.get()._field_Id == static_cast<jule::U64>(1LLU))) {
		jule::Any _105422_s = jule::Any(nullptr);;
		jule::Bool _105425_ok = false;;
		({
			__jule_tuple__1acae65c6_StmtData__jule_tuple_bool __jule_assign_result = _1a3deeb19_buildIdSt(_self_, &((*(_105131_st)).get()._field_tokens));
			_105422_s = __jule_assign_result.__jule_result_arg0;
			_105425_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_105425_ok) {
			return _105422_s;;
		};
	};
	jule::Ptr<_1acae5916_AssignSt> _106018_s;;
	jule::Bool _106021_ok = false;;
	({
		__jule_tuple_x_1acae5916_AssignSt__jule_tuple_bool __jule_assign_result = _1a3e00e6c_buildAssignSt(_self_, &((*(_105131_st)).get()._field_tokens));
		_106018_s = __jule_assign_result.__jule_result_arg0;
		_106021_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_106021_ok) {
		return jule::Any(_106018_s, &__jule_any_type59);;
	};
	{
		auto &_match_expr{ _105217_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(18LLU)) {
			_case_begin_1a69db4c2:;
			{
				return jule::Any(_1a3e0127a_buildUseExpr(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type64);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(36LLU) || _match_expr == static_cast<jule::U64>(8LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1a69db2a2:;
			{
				return jule::Any(_1a3de7eca_buildVarSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a69db318:;
			{
				return jule::Any(_1a3de82d8_buildRetSt(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type63);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1a69db37e:;
			{
				return jule::Any(_1a3deac25_buildIterSt(_self_, _105131_st), &__jule_any_type55);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(12LLU)) {
			_case_begin_1a69db5d2:;
			{
				return jule::Any(_1a3deb033_buildBreakSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1a69db648:;
			{
				return jule::Any(_1a3deb341_buildContSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type56);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(15LLU)) {
			_case_begin_1a69db6ae:;
			{
				return jule::Any(_1a3debc6a_buildIfElseChain(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_1a69db736:;
			{
				return jule::Any(_1a3dec078_buildCoCallSt(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1a69db7ad:;
			{
				return jule::Any(_1a3dec386_buildGotoSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type58);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1a69db835:;
			{
				return jule::Any(_1a3dec694_buildFallSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1a69db8ac:;
			{
				return jule::Any(_1a3dec9a2_buildTypeAliasSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1a69db934:;
			{
				return jule::Any(_1a3dee1e0_buildMatchCase(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1a69db9ab:;
			{
				return jule::Any(_1a3dee4ed_buildScopeSt(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1a69dba33:;
			{
				if (_105217_token.get()._field_Kind.equal("{", 1)) {
					return jule::Any(_1a3dee4ed_buildScopeSt(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type52);;
				};
			}
		}
		_match_end_1a69daea5:;
	};
	jule::Ptr<_1acadb456_Expr> _110117_expr = _1a3e135bc_buildExpr((*(_self_))._field_p, &((*(_105131_st)).get()._field_tokens));;
	if ((_110117_expr != nullptr)) {
		return jule::Any(_110117_expr, &__jule_any_type53);;
	};
	_1a3de700c_pushErr(_self_, _105217_token, jule::Str("invalid syntax", 14));
	return nullptr;;
}



inline void _1a3e018a7_build(_1a3de5d63_scopeParser* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _110929_tokens, jule::Ptr<_1acae6e12_ScopeTree>* _110952_s) {
	if (((*(_110952_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1a3de58ce_splitStmts(_110929_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_110952_s));
	while (((!(_1a3de6bdd_isLastSt(_self_))) && (!(_1a3de6979_finished(_self_))))) {
		{
			jule::Ptr<_1a3de5538_stmt> _111721_st = _1a3de7815_next(_self_);;
			jule::Any _111821_data = _1a3e01588_buildSt(_self_, &(_111721_st));;
			if ((_111821_data != nullptr)) {
				{ jule::Slice<_1acae6807_Stmt> &__jule_push_dest = (*(_self_))._field_s.get()._field_Stmts; __jule_push_dest.push(_1acae6807_Stmt{._field_Token=_111721_st.get()._field_tokens[0LL], ._field_Data=_111821_data}); };
			};
			if (_1a3de6715_stopped(_self_)) {
				goto _iter_end_1a69e4be5;
			};
		}
	_iter_next_1a69e4be5:;
	}
	_iter_end_1a69e4be5:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3de5d63_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _1a3e02ac8_pushErr(_1a3e02347_exprBuilder* _self_, jule::Ptr<_2097d15d8_Token> _4426_token, jule::Str _4441_fmt, jule::Slice<jule::Any> _4454_args) {
	_1a3e12e90_pushErr((*(_self_))._field_p.ptr(), _4426_token, _4441_fmt, _4454_args);
}



inline void _1a3e02de7_pushSuggestion(_1a3e02347_exprBuilder* _self_, jule::Str _4933_fmt, jule::Slice<jule::Any> _4946_args) {
	_1a3e132ae_pushSuggestion((*(_self_))._field_p.ptr(), _4933_fmt, _4946_args);
}



inline jule::Ptr<_1acadc0d3_TupleExpr> _1a3e03205_buildTuple(_1a3e02347_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>>* _5334_parts) {
	jule::Ptr<_1acadc0d3_TupleExpr> _5417_tuple = jule::new_ptr<_1acadc0d3_TupleExpr>(_1acadc0d3_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_1acadb456_Expr>>::alloc(0LL, (*(_5334_parts)).len())});;
	{
		auto expr = _5334_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6a17586:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_2097d15d8_Token>> _5721_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1acadb456_Expr>> &__jule_push_dest = _5417_tuple.get()._field_Expr; __jule_push_dest.push(_1a3e0bc25_buildFromTokens(_self_, _5721_part)); };
			}
			_iter_next_1a6a17586:;
			++it;
			goto _iter_begin_1a6a17586;
		}
		_iter_end_1a6a17586:;
	};
	return _5417_tuple;;
}



inline jule::Ptr<_1acadc48a_LitExpr> _1a3e03513_buildLit(_1a3e02347_exprBuilder* _self_, jule::Ptr<_2097d15d8_Token> _6327_token) {
	return jule::new_ptr<_1acadc48a_LitExpr>(_1acadc48a_LitExpr{._field_Token=_6327_token, ._field_Value=_6327_token.get()._field_Kind});;
}



inline jule::Ptr<_1acad72cb_TypeDecl> _1a3e03821_buildPrimitiveType(_1a3e02347_exprBuilder* _self_, jule::Ptr<_2097d15d8_Token>* _7038_token) {
	return _1a3e22d18_buildPrimType((*(_7038_token)));;
}



inline jule::Any _1a3e03b2e_buildSingle(_1a3e02347_exprBuilder* _self_, jule::Ptr<_2097d15d8_Token> _7434_token) {
	{
		auto &_match_expr{ _7434_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(5LLU)) {
			_case_begin_1a6a19049:;
			{
				return jule::Any(_1a3e03513_buildLit(_self_, _7434_token), &__jule_any_type105);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1a6a190b0:;
			{
				if (_7434_token.get()._field_Kind.equal("...", 3)) {
					return jule::Any(jule::new_ptr<_1acaddb0c_VariadicExpr>(_1acaddb0c_VariadicExpr{._field_Token=_7434_token, }), &__jule_any_type81);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(26LLU) || _match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_1a6a19126:;
			{
				return jule::Any(_1a3e0d023_buildIdentExpr(&(_7434_token)), &__jule_any_type85);;
			}
		}
		_match_end_1a6a18e8e:;
	};
	_1a3e02ac8_pushErr(_self_, _7434_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1acadd04b_IdentExpr> _1a3e03e3c_buildBindIdent(_1a3e02347_exprBuilder* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _9338_tokens) {
	if (((*(_9338_tokens))[0LL].get()._field_Id != static_cast<jule::U64>(29LLU))) {
		return nullptr;;
	} else if (((*(_9338_tokens))[1LL].get()._field_Id != static_cast<jule::U64>(19LLU))) {
		_1a3e02ac8_pushErr(_self_, (*(_9338_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a3e02de7_pushSuggestion(_self_, jule::Str("use dot (.) to access binded defines", 36), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_2097d15d8_Token> _10117_token = (*(_9338_tokens))[2LL];;
	if ((_10117_token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a3e02ac8_pushErr(_self_, (*(_9338_tokens))[2LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a3e02de7_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1acadd04b_IdentExpr> _10717_expr = _1a3e0d023_buildIdentExpr(&(_10117_token));;
	_10717_expr.get()._field_Binded=true;
	return _10717_expr;;
}



inline jule::Ptr<_1acadd755_UnaryExpr> _1a3e0424a_buildUnary(_1a3e02347_exprBuilder* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>> _11233_tokens) {
	jule::Ptr<_2097d15d8_Token> _11317_op = _11233_tokens[0LL];;
	if ((_11233_tokens.len() == 1LL)) {
		_1a3e02ac8_pushErr(_self_, _11317_op, jule::Str("missing expression for unary operator", 37), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_2097d1ce2_IsUnaryOp(_11317_op.get()._field_Kind)))) {
		_1a3e02ac8_pushErr(_self_, _11317_op, jule::Str("invalid unary operator: @", 25), jule::Slice<jule::Any>::make({jule::Any(_11317_op.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	_11233_tokens=_11233_tokens.slice(1LL);
	return jule::new_ptr<_1acadd755_UnaryExpr>(_1acadd755_UnaryExpr{._field_Op=_11317_op, ._field_Expr=_1a3e0bc25_buildFromTokens(_self_, _11233_tokens)});;
}



inline jule::Ptr<_1acade7de_SubIdentExpr> _1a3e04558_buildObjSubIdent(_1a3e02347_exprBuilder* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>> _13339_tokens) {
	jule::I64 _13417_i = (_13339_tokens.len() - 1LL);;
	jule::Ptr<_2097d15d8_Token> _13517_identToken = _13339_tokens[_13417_i];;
	(_13417_i)--;
	_13339_tokens=_13339_tokens.slice(0LL, _13417_i);
	if ((_13339_tokens.len() == 0LL)) {
		_1a3e02ac8_pushErr(_self_, _13517_identToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1acade7de_SubIdentExpr>(_1acade7de_SubIdentExpr{._field_Expr=_1a3e0bc25_buildFromTokens(_self_, _13339_tokens), ._field_Ident=_13517_identToken});;
}



inline jule::Ptr<_1acade36b_NsSelectionExpr> _1a3e04866_buildNsSubIdent(_1a3e02347_exprBuilder* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _14839_tokens) {
	jule::Ptr<_1acade36b_NsSelectionExpr> _14917_ns = jule::new_ptr<_1acade36b_NsSelectionExpr>();;
	{
		auto expr = _14839_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6a23c24:;
		if (it != expr_end) {
			jule::I64 _15014_i = it - expr->begin();
			jule::Ptr<_2097d15d8_Token> _15021_token = *it;
			{
				if (((_15014_i & 1LL) == 0LL)) {
					if ((_15021_token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
						_1a3e02ac8_pushErr(_self_, _15021_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
						_1a3e02de7_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					};
					{ jule::Slice<jule::Ptr<_2097d15d8_Token>> &__jule_push_dest = _14917_ns.get()._field_Ns; __jule_push_dest.push(_15021_token); };
				} else if ((_15021_token.get()._field_Id != static_cast<jule::U64>(21LLU))) {
					_1a3e02ac8_pushErr(_self_, _15021_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					_1a3e02de7_pushSuggestion(_self_, jule::Str("expected double colon \"::\"", 26), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1a6a23c24:;
			++it;
			_15014_i++;
			goto _iter_begin_1a6a23c24;
		}
		_iter_end_1a6a23c24:;
	};
	_14917_ns.get()._field_Ident=_14917_ns.get()._field_Ns[(_14917_ns.get()._field_Ns.len() - 1LL)];
	_14917_ns.get()._field_Ns=_14917_ns.get()._field_Ns.slice(0LL, (_14917_ns.get()._field_Ns.len() - 1LL));
	return _14917_ns;;
}



inline jule::Ptr<_1acad72cb_TypeDecl> _1a3e04b74_buildType(_1a3e02347_exprBuilder* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _16733_tokens) {
	jule::I64 _16817_i = 0LL;;
	jule::Ptr<_1acad72cb_TypeDecl> _16918_t;;
	jule::Bool _16921_ok = false;;
	({
		__jule_tuple_x_1acad72cb_TypeDecl__jule_tuple_bool __jule_assign_result = _1a3e148a9_buildType((*(_self_))._field_p, _16733_tokens, (&(_16817_i)), false);
		_16918_t = __jule_assign_result.__jule_result_arg0;
		_16921_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_16921_ok))) {
		_1a3e02ac8_pushErr(_self_, (*(_16733_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_16817_i < (*(_16733_tokens)).len())) {
		_1a3e02ac8_pushErr(_self_, (*(_16733_tokens))[_16817_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	return _16918_t;;
}



inline jule::Any _1a3e04e82_buildSubIdent(_1a3e02347_exprBuilder* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _18137_tokens) {
	jule::I64 _18213_i = ((*(_18137_tokens)).len() - 2LL);;
	jule::Ptr<_2097d15d8_Token> _18313_token = (*(_18137_tokens))[_18213_i];;
	{
		auto &_match_expr{ _18313_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1a6a2aa50:;
			{
				return jule::Any(_1a3e04558_buildObjSubIdent(_self_, (*(_18137_tokens))), &__jule_any_type91);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1a6a29ea0:;
			{
				return jule::Any(_1a3e04866_buildNsSubIdent(_self_, _18137_tokens), &__jule_any_type95);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1a6a2ab82:;
			{
				if (_18313_token.get()._field_Kind.equal("]", 1)) {
					return jule::Any(_1a3e04b74_buildType(_self_, _18137_tokens), &__jule_any_type94);;
				};
			}
		}
		_match_end_1a6a2a9ea:;
	};
	_1a3e02ac8_pushErr(_self_, _18313_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1acaddb0c_VariadicExpr> _1a3e05290_buildVariadic(_1a3e02347_exprBuilder* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>> _19936_tokens) {
	jule::Ptr<_2097d15d8_Token> _20017_token = _19936_tokens[(_19936_tokens.len() - 1LL)];;
	_19936_tokens=_19936_tokens.slice(0LL, (_19936_tokens.len() - 1LL));
	return jule::new_ptr<_1acaddb0c_VariadicExpr>(_1acaddb0c_VariadicExpr{._field_Token=_20017_token, ._field_Expr=_1a3e0bc25_buildFromTokens(_self_, _19936_tokens)});;
}



inline jule::Any _1a3e0559d_buildOpRight(_1a3e02347_exprBuilder* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _20836_tokens) {
	jule::Ptr<_2097d15d8_Token> _20917_token = (*(_20836_tokens))[((*(_20836_tokens)).len() - 1LL)];;
	{
		auto &_match_expr{ _20917_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1a6a2e823:;
			{
				(*(_20836_tokens))=(*(_20836_tokens)).slice(0LL, ((*(_20836_tokens)).len() - 1LL));
				jule::Any _21321_d = _1a3e0b609_build(_self_, _20836_tokens);;
				if ((_21321_d == nullptr)) {
					return nullptr;;
				};
				{
					auto &_match_expr{ _21321_d };
					
					if (_match_expr.type == &__jule_any_type111) {
						_case_begin_1a6a30a99:;
						{
							_21321_d.cast_ptr<_1acae036c_FnCallExpr>(&__jule_any_type111).get()._field_Exception=jule::new_ptr<_1acae6e12_ScopeTree>(_1acae6e12_ScopeTree{._field_Deferred=true, });
							return _21321_d;;
						}
					}
					_match_end_1a6a30d41:;
				};
			}
		}
		_match_end_1a6a2e669:;
	};
	_1a3e02ac8_pushErr(_self_, _20917_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1acadb742_RangeExpr> _1a3e058cd_buildBetweenParentheses(_1a3e02347_exprBuilder* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>> _22946_tokens) {
	if ((_22946_tokens.len() == 2LL)) {
		_1a3e02ac8_pushErr(_self_, _22946_tokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		_1a3e02de7_pushSuggestion(_self_, jule::Str("empty parentheses are not valid expression, must include an expression in range", 79), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_22946_tokens=_22946_tokens.slice(1LL, (_22946_tokens.len() - 1LL));
	return jule::new_ptr<_1acadb742_RangeExpr>(_1acadb742_RangeExpr{._field_Expr=_1a3e0bc25_buildFromTokens(_self_, _22946_tokens)});;
}



inline jule::Ptr<_1acaddeb4_CastExpr> _1a3e05bec_tryBuildCast(_1a3e02347_exprBuilder* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _24136_tokens) {
	jule::I64 _24217_rangeN = 0LL;;
	{
		auto expr = _24136_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6a33be0:;
		if (it != expr_end) {
			jule::I64 _24313_i = it - expr->begin();
			jule::Ptr<_2097d15d8_Token> _24316_token = *it;
			{
				if ((_24316_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
					{
						auto &_match_expr{ _24316_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a6a34a04:;
							{
								(_24217_rangeN)++;
								goto _iter_next_1a6a33be0;
							}
						}
						else {
							_case_begin_1a6a34cce:;
							{
								(_24217_rangeN)--;
							}
						}
						_match_end_1a6a34ac0:;
					};
				};
				if ((_24217_rangeN > 0LL)) {
					goto _iter_next_1a6a33be0;
				} else if (((_24313_i + 1LL) == (*(_24136_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_2097d15d8_Token>> _26221_typeTokens = (*(_24136_tokens)).slice(0LL, (_24313_i + 1LL));;
				jule::Slice<jule::Ptr<_2097d15d8_Token>> _26321_exprTokens = (*(_24136_tokens)).slice((_24313_i + 1LL));;
				if ((_26321_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_2097d15d8_Token> _27017_tok = _26321_exprTokens[0LL];;
				if (((_27017_tok.get()._field_Id != static_cast<jule::U64>(2LLU)) || (!_27017_tok.get()._field_Kind.equal("(", 1)))) {
					return nullptr;;
				};
				jule::Ptr<_1acaddeb4_CastExpr> _27521_cast = jule::new_ptr<_1acaddeb4_CastExpr>(_1acaddeb4_CastExpr{});;
				if ((_26321_exprTokens.len() == 2LL)) {
					_1a3e02ac8_pushErr(_self_, _26321_exprTokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
					_1a3e02de7_pushSuggestion(_self_, jule::Str("give an expression for casting", 30), jule::Slice<jule::Any>());
				};
				if ((_26221_typeTokens.len() == 2LL)) {
					_1a3e02ac8_pushErr(_self_, _26221_typeTokens[0LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
					_1a3e02de7_pushSuggestion(_self_, jule::Str("type declaration expected for casting", 37), jule::Slice<jule::Any>());
				} else {
					_26221_typeTokens=_26221_typeTokens.slice(1LL, (_26221_typeTokens.len() - 1LL));
					jule::I64 _28925_typeIndex = 0LL;;
					jule::Ptr<_1acad72cb_TypeDecl> _29026_t;;
					jule::Bool _29029_ok = false;;
					({
						__jule_tuple_x_1acad72cb_TypeDecl__jule_tuple_bool __jule_assign_result = _1a3e148a9_buildType((*(_self_))._field_p, &(_26221_typeTokens), (&(_28925_typeIndex)), true);
						_29026_t = __jule_assign_result.__jule_result_arg0;
						_29029_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_29029_ok && (_28925_typeIndex < _26221_typeTokens.len()))) {
						_1a3e02ac8_pushErr(_self_, _26221_typeTokens[_28925_typeIndex], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					} else if ((!(_29029_ok))) {
						return _27521_cast;;
					};
					_27521_cast.get()._field_Kind=_29026_t;
					if ((_26321_exprTokens.len() > 2LL)) {
						jule::I64 _30029_j = 0LL;;
						_1a3e1071d_range(&(_30029_j), jule::Str("(", 1), jule::Str(")", 1), &(_26321_exprTokens));
						if ((_30029_j < _26321_exprTokens.len())) {
							return nullptr;;
						};
						_26321_exprTokens=_26321_exprTokens.slice(0LL, _30029_j);
						_27521_cast.get()._field_Expr=_1a3e0bc25_buildFromTokens(_self_, _26321_exprTokens);
					};
				};
				return _27521_cast;;
			}
			_iter_next_1a6a33be0:;
			++it;
			_24313_i++;
			goto _iter_begin_1a6a33be0;
		}
		_iter_end_1a6a33be0:;
	};
	return nullptr;;
}



inline void _1a3e060b5_pushArg(_1a3e02347_exprBuilder* _self_, jule::Slice<jule::Ptr<_1acadb456_Expr>>* _31531_args, jule::Slice<jule::Ptr<_2097d15d8_Token>> _31550_tokens, jule::Ptr<_2097d15d8_Token> _31568_err_token) {
	if ((_31550_tokens.len() == 0LL)) {
		_1a3e02ac8_pushErr(_self_, _31568_err_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a3e02de7_pushSuggestion(_self_, jule::Str("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Ptr<_1acadb456_Expr>> &__jule_push_dest = (*(_31531_args)); __jule_push_dest.push(_1a3e0bc25_buildFromTokens(_self_, _31550_tokens)); };
}



inline jule::Slice<jule::Ptr<_1acadb456_Expr>> _1a3e063c3_buildArgs(_1a3e02347_exprBuilder* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>> _32432_tokens) {
	if ((_32432_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1acadb456_Expr>> _33017_args = nullptr;;
	jule::I64 _33117_last = 0LL;;
	jule::I64 _33217_rangeN = 0LL;;
	_32432_tokens=_32432_tokens.slice(1LL, (_32432_tokens.len() - 1LL));
	{
		auto expr = &(_32432_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6a4125d:;
		if (it != expr_end) {
			jule::I64 _33413_i = it - expr->begin();
			jule::Ptr<_2097d15d8_Token> _33416_token = *it;
			{
				if ((_33416_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
					{
						auto &_match_expr{ _33416_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a6a42391:;
							{
								(_33217_rangeN)++;
							}
						}
						else {
							_case_begin_1a6a4266b:;
							{
								(_33217_rangeN)--;
							}
						}
						_match_end_1a6a4245c:;
					};
				};
				if (((_33217_rangeN > 0LL) || (_33416_token.get()._field_Id != static_cast<jule::U64>(7LLU)))) {
					goto _iter_next_1a6a4125d;
				};
				_1a3e060b5_pushArg(_self_, &(_33017_args), _32432_tokens.slice(_33117_last, _33413_i), _33416_token);
				_33117_last=static_cast<jule::I64>((_33413_i + 1LL));
			}
			_iter_next_1a6a4125d:;
			++it;
			_33413_i++;
			goto _iter_begin_1a6a4125d;
		}
		_iter_end_1a6a4125d:;
	};
	if ((_33117_last < _32432_tokens.len())) {
		if ((_33117_last == 0LL)) {
			if ((_32432_tokens.len() > 0LL)) {
				_1a3e060b5_pushArg(_self_, &(_33017_args), _32432_tokens.slice(_33117_last), _32432_tokens[_33117_last]);
			};
		} else {
			_1a3e060b5_pushArg(_self_, &(_33017_args), _32432_tokens.slice(_33117_last), _32432_tokens[(_33117_last - 1LL)]);
		};
	};
	return _33017_args;;
}



inline jule::Slice<jule::Ptr<_1acad72cb_TypeDecl>> _1a3e066d1_buildCallGenerics(_1a3e02347_exprBuilder* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>> _36640_tokens) {
	if ((_36640_tokens.len() == 0LL)) {
		return nullptr;;
	};
	_36640_tokens=_36640_tokens.slice(1LL, (_36640_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>> _37218_parts;;
	jule::Slice<_20943da3c_Log> _37225_errs;;
	({
		__jule_tuple_ssx_2097d15d8_Token__jule_tuple_s_20943da3c_Log __jule_assign_result = _1a3e1128a_parts(&(_36640_tokens), static_cast<jule::U64>(7LLU), true);
		_37218_parts = __jule_assign_result.__jule_result_arg0;
		_37225_errs = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1acad72cb_TypeDecl>> _37317_generics = jule::Slice<jule::Ptr<_1acad72cb_TypeDecl>>::alloc(0LL, _37218_parts.len());;
	((*(_self_))._field_p.get()._field_errors).append(_37225_errs);;
	{
		auto expr = &(_37218_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6a46b59:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_2097d15d8_Token>> _37521_part = *it;
			{
				if ((_37521_part.len() == 0LL)) {
					goto _iter_next_1a6a46b59;
				};
				jule::I64 _37921_j = 0LL;;
				jule::Ptr<_1acad72cb_TypeDecl> _38022_generic;;
				({
					__jule_tuple_x_1acad72cb_TypeDecl__jule_tuple_bool __jule_assign_result = _1a3e148a9_buildType((*(_self_))._field_p, &(_37521_part), (&(_37921_j)), true);
					_38022_generic = __jule_assign_result.__jule_result_arg0;
				});
				if ((_37921_j < _37521_part.len())) {
					_1a3e02ac8_pushErr(_self_, _37521_part[_37921_j], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1acad72cb_TypeDecl>> &__jule_push_dest = _37317_generics; __jule_push_dest.push(_38022_generic); };
			}
			_iter_next_1a6a46b59:;
			++it;
			goto _iter_begin_1a6a46b59;
		}
		_iter_end_1a6a46b59:;
	};
	return _37317_generics;;
}



inline jule::Ptr<_1acae036c_FnCallExpr> _1a3e06b32_buildFnCall(_1a3e02347_exprBuilder* _self_, jule::Ptr<_2097d15d8_Token>* _39035_token, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _39055_expr, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _39076_args) {
	return jule::new_ptr<_1acae036c_FnCallExpr>(_1acae036c_FnCallExpr{._field_Token=(*(_39035_token)), ._field_Expr=_1a3e0bc25_buildFromTokens(_self_, (*(_39055_expr))), ._field_Args=_1a3e063c3_buildArgs(_self_, (*(_39076_args))), });;
}



inline jule::Any _1a3e06e40_buildParenthesesRange(_1a3e02347_exprBuilder* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _39845_tokens) {
	jule::Ptr<_2097d15d8_Token> _39917_token = (*(_39845_tokens))[0LL];;
	{
		auto &_match_expr{ _39917_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1a6a4ade4:;
			{
				{
					auto &_match_expr{ _39917_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1a6a4b763:;
						{
							jule::Ptr<_1acaddeb4_CastExpr> _40425_expr = _1a3e05bec_tryBuildCast(_self_, _39845_tokens);;
							if ((_40425_expr != nullptr)) {
								return jule::Any(_40425_expr, &__jule_any_type109);;
							};
						}
					}
					_match_end_1a6a4b598:;
				};
			}
		}
		_match_end_1a6a4ac3a:;
	};
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _41018_exprTokens;;
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _41034_args_tokens;;
	({
		__jule_tuple_sx_2097d15d8_Token__jule_tuple_sx_2097d15d8_Token __jule_assign_result = _1a3e109b5_rangeLast(_39845_tokens);
		_41018_exprTokens = __jule_assign_result.__jule_result_arg0;
		_41034_args_tokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_41018_exprTokens.len() == 0LL)) {
		return jule::Any(_1a3e058cd_buildBetweenParentheses(_self_, _41034_args_tokens), &__jule_any_type104);;
	};
	return jule::Any(_1a3e06b32_buildFnCall(_self_, &(_39917_token), &(_41018_exprTokens), &(_41034_args_tokens)), &__jule_any_type111);;
}



inline jule::Ptr<_1acadcac8_UnsafeExpr> _1a3e0724d_buildUnsafeExpr(_1a3e02347_exprBuilder* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>> _41938_tokens) {
	jule::Ptr<_2097d15d8_Token> _42017_token = _41938_tokens[0LL];;
	_41938_tokens=_41938_tokens.slice(1LL);
	jule::I64 _42217_i = 0LL;;
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _42317_rangeTokens = _1a3e1071d_range(&(_42217_i), jule::Str("{", 1), jule::Str("}", 1), &(_41938_tokens));;
	if ((_42317_rangeTokens.len() == 0LL)) {
		_1a3e02ac8_pushErr(_self_, _41938_tokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1acadcac8_UnsafeExpr>(_1acadcac8_UnsafeExpr{._field_Token=_42017_token, ._field_Expr=_1a3e0bc25_buildFromTokens(_self_, _42317_rangeTokens)});;
}



inline jule::Ptr<_1acae8908_FnDecl> _1a3e0755b_buildAnonFn(_1a3e02347_exprBuilder* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _43435_tokens) {
	jule::Ptr<_1acae8908_FnDecl> _43517_f = _1a3e18a01_buildFn((*(_self_))._field_p, _43435_tokens, false, false);;
	if ((!(_1acae8c5a_IsAnon(_43517_f.ptr())))) {
		_1a3e02ac8_pushErr(_self_, _43517_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a3e02de7_pushSuggestion(_self_, jule::Str("anonymous function expected, remove identifier of function", 58), jule::Slice<jule::Any>());
	};
	return _43517_f;;
}



inline jule::Any _1a3e07869_buildUnsafe(_1a3e02347_exprBuilder* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _44335_tokens) {
	{
		auto &_match_expr{ (*(_44335_tokens))[1LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1a6a5225d:;
			{
				return jule::Any(_1a3e0755b_buildAnonFn(_self_, _44335_tokens), &__jule_any_type14);;
			}
		}
		else {
			_case_begin_1a6a52637:;
			{
				return jule::Any(_1a3e0724d_buildUnsafeExpr(_self_, (*(_44335_tokens))), &__jule_any_type106);;
			}
		}
		_match_end_1a6a525b0:;
	};
}



inline void _1a3e07c32_pushRangeLitPart(_1a3e02347_exprBuilder* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>> _45339_part, jule::Ptr<_2097d15d8_Token> _4549_errorToken, jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>>* _45434_parts) {
	if ((_45339_part.len() == 0LL)) {
		_1a3e02ac8_pushErr(_self_, _4549_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a3e02de7_pushSuggestion(_self_, jule::Str("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>> &__jule_push_dest = (*(_45434_parts)); __jule_push_dest.push(_45339_part); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>> _1a3e08062_getBraceRangeLitExprParts(_1a3e02347_exprBuilder* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>> _46448_tokens) {
	if ((_46448_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>> _47017_parts = nullptr;;
	jule::I64 _47217_last = 0LL;;
	jule::I64 _47317_rangeN = 0LL;;
	_46448_tokens=_46448_tokens.slice(1LL, (_46448_tokens.len() - 1LL));
	{
		auto expr = &(_46448_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6a561a7:;
		if (it != expr_end) {
			jule::I64 _47513_i = it - expr->begin();
			jule::Ptr<_2097d15d8_Token> _47516_token = *it;
			{
				if ((_47516_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
					{
						auto &_match_expr{ _47516_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a6a572da:;
							{
								(_47317_rangeN)++;
							}
						}
						else {
							_case_begin_1a6a575b5:;
							{
								(_47317_rangeN)--;
							}
						}
						_match_end_1a6a573a6:;
					};
				};
				if (((_47317_rangeN > 0LL) || (_47516_token.get()._field_Id != static_cast<jule::U64>(7LLU)))) {
					goto _iter_next_1a6a561a7;
				};
				_1a3e07c32_pushRangeLitPart(_self_, _46448_tokens.slice(_47217_last, _47513_i), _47516_token, &(_47017_parts));
				_47217_last=static_cast<jule::I64>((_47513_i + 1LL));
			}
			_iter_next_1a6a561a7:;
			++it;
			_47513_i++;
			goto _iter_begin_1a6a561a7;
		}
		_iter_end_1a6a561a7:;
	};
	if ((_47217_last < _46448_tokens.len())) {
		if ((_47217_last == 0LL)) {
			if ((_46448_tokens.len() > 0LL)) {
				_1a3e07c32_pushRangeLitPart(_self_, _46448_tokens.slice(_47217_last), _46448_tokens[_47217_last], &(_47017_parts));
			};
		} else {
			_1a3e07c32_pushRangeLitPart(_self_, _46448_tokens.slice(_47217_last), _46448_tokens[(_47217_last - 1LL)], &(_47017_parts));
		};
	};
	return _47017_parts;;
}



inline jule::Ptr<_1acae0ceb_FieldExprPair> _1a3e08381_buildFieldExprPair(_1a3e02347_exprBuilder* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>> _50641_tokens) {
	if (((_50641_tokens.len() - 2LL) == 0LL)) {
		_1a3e02ac8_pushErr(_self_, _50641_tokens[1LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1acae0ceb_FieldExprPair> _51117_pair = jule::new_ptr<_1acae0ceb_FieldExprPair>(_1acae0ceb_FieldExprPair{._field_Field=_50641_tokens[0LL], });;
	_50641_tokens=_50641_tokens.slice(2LL);
	_51117_pair.get()._field_Expr=_1a3e0bc25_buildFromTokens(_self_, _50641_tokens);
	return _51117_pair;;
}



inline jule::Ptr<_1acadb456_Expr> _1a3e0868e_buildStructLitExpr(_1a3e02347_exprBuilder* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _51942_tokens) {
	jule::Ptr<_2097d15d8_Token> _52017_token = (*(_51942_tokens))[0LL];;
	if (((_52017_token.get()._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_51942_tokens)).len() > 1LL))) {
		_52017_token=(*(_51942_tokens))[1LL];
		if ((_52017_token.get()._field_Id == static_cast<jule::U64>(10LLU))) {
			return jule::new_ptr<_1acadb456_Expr>(_1acadb456_Expr{._field_Token=_52017_token, ._field_End=(*(_51942_tokens))[((*(_51942_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_1a3e08381_buildFieldExprPair(_self_, (*(_51942_tokens))), &__jule_any_type83)});;
		};
	};
	return _1a3e0bc25_buildFromTokens(_self_, (*(_51942_tokens)));;
}



inline jule::Slice<jule::Ptr<_1acadb456_Expr>> _1a3e0899c_buildStructLitExprs(_1a3e02347_exprBuilder* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _53443_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>> _53517_parts = _1a3e08062_getBraceRangeLitExprParts(_self_, (*(_53443_tokens)));;
	if ((_53517_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1acadb456_Expr>> _54017_pairs = jule::Slice<jule::Ptr<_1acadb456_Expr>>::alloc(0LL, _53517_parts.len());;
	{
		auto expr = &(_53517_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6a5ec60:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_2097d15d8_Token>> _54121_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1acadb456_Expr>> &__jule_push_dest = _54017_pairs; __jule_push_dest.push(_1a3e0868e_buildStructLitExpr(_self_, &(_54121_part))); };
			}
			_iter_next_1a6a5ec60:;
			++it;
			goto _iter_begin_1a6a5ec60;
		}
		_iter_end_1a6a5ec60:;
	};
	return _54017_pairs;;
}



inline jule::Ptr<_1acae15c1_StructLit> _1a3e08ccc_buildTypedStructLiteral(_1a3e02347_exprBuilder* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>> _54746_tokens) {
	jule::I64 _54817_i = 0LL;;
	jule::Ptr<_1acad72cb_TypeDecl> _54918_t;;
	jule::Bool _54921_ok = false;;
	({
		__jule_tuple_x_1acad72cb_TypeDecl__jule_tuple_bool __jule_assign_result = _1a3e148a9_buildType((*(_self_))._field_p, &(_54746_tokens), (&(_54817_i)), true);
		_54918_t = __jule_assign_result.__jule_result_arg0;
		_54921_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_54921_ok))) {
		return nullptr;;
	} else if ((_54817_i >= _54746_tokens.len())) {
		_1a3e02ac8_pushErr(_self_, _54746_tokens[_54817_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_54746_tokens=_54746_tokens.slice(_54817_i);
	jule::Ptr<_2097d15d8_Token> _55813_token = _54746_tokens[0LL];;
	if (((_55813_token.get()._field_Id != static_cast<jule::U64>(2LLU)) || (!_55813_token.get()._field_Kind.equal("{", 1)))) {
		_1a3e02ac8_pushErr(_self_, _55813_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1acae15c1_StructLit>(_1acae15c1_StructLit{._field_End=_54746_tokens[(_54746_tokens.len() - 1LL)], ._field_Kind=_54918_t, ._field_Exprs=_1a3e0899c_buildStructLitExprs(_self_, &(_54746_tokens))});;
}



inline jule::Ptr<_1acadb456_Expr> _1a3e090eb_buildBraceLitPart(_1a3e02347_exprBuilder* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _57141_tokens) {
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _57218_l;;
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _57225_r;;
	({
		__jule_tuple_sx_2097d15d8_Token__jule_tuple_sx_2097d15d8_Token __jule_assign_result = _1a3e0c9d4_splitDelim(_57141_tokens, static_cast<jule::U64>(10LLU));
		_57218_l = __jule_assign_result.__jule_result_arg0;
		_57225_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_57218_l != nullptr)) {
		return jule::new_ptr<_1acadb456_Expr>(_1acadb456_Expr{._field_Token=(*(_57141_tokens))[0LL], ._field_End=(*(_57141_tokens))[((*(_57141_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1acae2429_KeyValPair>(_1acae2429_KeyValPair{._field_Key=_1a3e0bc25_buildFromTokens(_self_, _57218_l), ._field_Val=_1a3e0bc25_buildFromTokens(_self_, _57225_r), ._field_Colon=(*(_57141_tokens))[_57218_l.len()]}), &__jule_any_type84)});;
	};
	return _1a3e0bc25_buildFromTokens(_self_, (*(_57141_tokens)));;
}



inline jule::Ptr<_1acae1a44_BraceLit> _1a3e09409_buildBraceLit(_1a3e02347_exprBuilder* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _58837_tokens) {
	jule::Ptr<_1acae1a44_BraceLit> _58917_lit = jule::new_ptr<_1acae1a44_BraceLit>(_1acae1a44_BraceLit{._field_Token=(*(_58837_tokens))[0LL], ._field_End=(*(_58837_tokens))[((*(_58837_tokens)).len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>> _59417_parts = _1a3e08062_getBraceRangeLitExprParts(_self_, (*(_58837_tokens)));;
	if ((_59417_parts == nullptr)) {
		return _58917_lit;;
	};
	_58917_lit.get()._field_Exprs=jule::Slice<jule::Ptr<_1acadb456_Expr>>::alloc(0LL, _59417_parts.len());
	{
		auto expr = &(_59417_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6a6895b:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_2097d15d8_Token>> _60021_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1acadb456_Expr>> &__jule_push_dest = _58917_lit.get()._field_Exprs; __jule_push_dest.push(_1a3e090eb_buildBraceLitPart(_self_, &(_60021_part))); };
			}
			_iter_next_1a6a6895b:;
			++it;
			goto _iter_begin_1a6a6895b;
		}
		_iter_end_1a6a6895b:;
	};
	return _58917_lit;;
}



inline jule::Any _1a3e09717_buildBraceRange(_1a3e02347_exprBuilder* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _60739_tokens) {
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _60818_exprTokens;;
	jule::I64 _60830_rangeN = 0;;
	({
		__jule_tuple_sx_2097d15d8_Token__jule_tuple_int __jule_assign_result = _1a3e0d2ba_getRangeExprTokens(_60739_tokens);
		_60818_exprTokens = __jule_assign_result.__jule_result_arg0;
		_60830_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_60818_exprTokens.len() == 0LL)) {
			_case_begin_1a6a6a2ed:;
			{
				return jule::Any(_1a3e09409_buildBraceLit(_self_, _60739_tokens), &__jule_any_type112);;
			}
		}
		else if ((_60830_rangeN > 0LL)) {
			_case_begin_1a6a6a5a6:;
			{
				_1a3e02ac8_pushErr(_self_, (*(_60739_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a6a699d4:;
	};
	jule::Ptr<_2097d15d8_Token> _61913_elseToken = _60818_exprTokens[(_60818_exprTokens.len() - 1LL)];;
	if ((_60818_exprTokens[(_60818_exprTokens.len() - 1LL)].get()._field_Id == static_cast<jule::U64>(16LLU))) {
		_60818_exprTokens=_60818_exprTokens.slice(0LL, (_60818_exprTokens.len() - 1LL));
		jule::Any _62221_d = _1a3e0b609_build(_self_, &(_60818_exprTokens));;
		if ((_62221_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _62221_d };
			
			if (_match_expr.type == &__jule_any_type111) {
				_case_begin_1a6a6d389:;
				{
					(*(_60739_tokens))=(*(_60739_tokens)).slice((_60818_exprTokens.len() + 1LL));
					jule::I64 _62925_i = 0LL;;
					jule::Slice<jule::Ptr<_2097d15d8_Token>> _63025_rangeTokens = _1a3e1071d_range(&(_62925_i), jule::Str("{", 1), jule::Str("}", 1), _60739_tokens);;
					jule::Ptr<_1acae036c_FnCallExpr> _63125_model = _62221_d.cast_ptr<_1acae036c_FnCallExpr>(&__jule_any_type111);;
					if (_1acae0944_Ignored(_63125_model.ptr())) {
						_1a3e02ac8_pushErr(_self_, _61913_elseToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
						_1a3e02de7_pushSuggestion(_self_, jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72), jule::Slice<jule::Any>());
					};
					_63125_model.get()._field_Exception=_1a3e14007_buildScope((*(_self_))._field_p, &(_63025_rangeTokens), (*(_60739_tokens))[(_62925_i - 1LL)]);
					return _62221_d;;
				}
			}
			else {
				_case_begin_1a6a6cdc2:;
				{
					_1a3e02ac8_pushErr(_self_, _60818_exprTokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1a6a6d169:;
		};
	};
	{
		auto &_match_expr{ _60818_exprTokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1a6a72613:;
			{
				return _1a3e07869_buildUnsafe(_self_, _60739_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1a6a72679:;
			{
				return jule::Any(_1a3e0755b_buildAnonFn(_self_, _60739_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1a6a7249d:;
			{
				return jule::Any(_1a3e08ccc_buildTypedStructLiteral(_self_, (*(_60739_tokens))), &__jule_any_type110);;
			}
		}
		else {
			_case_begin_1a6a6dbc5:;
			{
				_1a3e02ac8_pushErr(_self_, _60818_exprTokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a6a6c003:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>> _1a3e09a25_getEnumerableParts(_1a3e02347_exprBuilder* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>> _65941_tokens) {
	_65941_tokens=_65941_tokens.slice(1LL, (_65941_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>> _66118_parts;;
	jule::Slice<_20943da3c_Log> _66125_errors;;
	({
		__jule_tuple_ssx_2097d15d8_Token__jule_tuple_s_20943da3c_Log __jule_assign_result = _1a3e1128a_parts(&(_65941_tokens), static_cast<jule::U64>(7LLU), true);
		_66118_parts = __jule_assign_result.__jule_result_arg0;
		_66125_errors = __jule_assign_result.__jule_result_arg1;
	});
	((*(_self_))._field_p.get()._field_errors).append(_66125_errors);;
	return _66118_parts;;
}



inline jule::Ptr<_1acae2a9a_SliceExpr> _1a3e09d33_buildSlice(_1a3e02347_exprBuilder* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>> _66633_tokens) {
	jule::Ptr<_1acae2a9a_SliceExpr> _66717_slc = jule::new_ptr<_1acae2a9a_SliceExpr>(_1acae2a9a_SliceExpr{._field_Token=_66633_tokens[0LL], ._field_End=_66633_tokens[(_66633_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>> _67217_parts = _1a3e09a25_getEnumerableParts(_self_, _66633_tokens);;
	if ((_67217_parts.len() == 0LL)) {
		return _66717_slc;;
	};
	_66717_slc.get()._field_Exprs=jule::Slice<jule::Ptr<_1acadb456_Expr>>::alloc(0LL, _67217_parts.len());
	{
		auto expr = &(_67217_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6a76738:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_2097d15d8_Token>> _67821_p = *it;
			{
				if ((_67821_p.len() == 0LL)) {
					goto _iter_next_1a6a76738;
				};
				{ jule::Slice<jule::Ptr<_1acadb456_Expr>> &__jule_push_dest = _66717_slc.get()._field_Exprs; __jule_push_dest.push(_1a3e0bc25_buildFromTokens(_self_, _67821_p)); };
			}
			_iter_next_1a6a76738:;
			++it;
			goto _iter_begin_1a6a76738;
		}
		_iter_end_1a6a76738:;
	};
	return _66717_slc;;
}



inline jule::Ptr<_1acae3408_IndexingExpr> _1a3e0a284_buildIndexing(_1a3e02347_exprBuilder* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>> _68836_exprTokens, jule::Slice<jule::Ptr<_2097d15d8_Token>> _68913_tokens, jule::Ptr<_2097d15d8_Token> _68935_errorToken) {
	jule::Ptr<_2097d15d8_Token> _69017_end = _68913_tokens[(_68913_tokens.len() - 1LL)];;
	_68913_tokens=_68913_tokens.slice(1LL, (_68913_tokens.len() - 1LL));
	if ((_68913_tokens.len() == 0LL)) {
		_1a3e02ac8_pushErr(_self_, _68935_errorToken, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1acadb456_Expr> _69617_expr = _1a3e0bc25_buildFromTokens(_self_, _68836_exprTokens);;
	if ((_69617_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1acadb456_Expr> _70017_index = _1a3e0bc25_buildFromTokens(_self_, _68913_tokens);;
	if ((_70017_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1acae3408_IndexingExpr>(_1acae3408_IndexingExpr{._field_Token=_68935_errorToken, ._field_End=_69017_end, ._field_Expr=_69617_expr, ._field_Index=_70017_index});;
}



inline jule::Ptr<_1acae3a13_SlicingExpr> _1a3e0a828_buildSlicing(_1a3e02347_exprBuilder* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _71236_exprTokens, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _71263_start, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _71314_to, jule::Ptr<_2097d15d8_Token>* _71333_errorToken, jule::Ptr<_2097d15d8_Token> _71357_end) {
	jule::Ptr<_1acae3a13_SlicingExpr> _71417_slc = jule::new_ptr<_1acae3a13_SlicingExpr>(_1acae3a13_SlicingExpr{._field_Token=(*(_71333_errorToken)), ._field_End=_71357_end, ._field_Expr=_1a3e0bc25_buildFromTokens(_self_, (*(_71236_exprTokens))), });;
	if (((*(_71263_start)).len() > 0LL)) {
		_71417_slc.get()._field_Start=_1a3e0bc25_buildFromTokens(_self_, (*(_71263_start)));
	};
	if (((*(_71314_to)).len() > 0LL)) {
		_71417_slc.get()._field_To=_1a3e0bc25_buildFromTokens(_self_, (*(_71314_to)));
	};
	return _71417_slc;;
}



inline jule::Any _1a3e0ab36_buildBracketRange(_1a3e02347_exprBuilder* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>> _72840_tokens) {
	jule::Ptr<_2097d15d8_Token> _72917_errorToken = _72840_tokens[0LL];;
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _73018_exprTokens;;
	jule::I64 _73030_rangeN = 0;;
	({
		__jule_tuple_sx_2097d15d8_Token__jule_tuple_int __jule_assign_result = _1a3e0d2ba_getRangeExprTokens(&(_72840_tokens));
		_73018_exprTokens = __jule_assign_result.__jule_result_arg0;
		_73030_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_73018_exprTokens.len() == 0LL)) {
		return jule::Any(_1a3e09d33_buildSlice(_self_, _72840_tokens), &__jule_any_type99);;
	} else if ((_73030_rangeN > 0LL)) {
		_1a3e02ac8_pushErr(_self_, _72917_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_72840_tokens=_72840_tokens.slice(_73018_exprTokens.len());
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _74517_splitTokens = _72840_tokens.slice(1LL, (_72840_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _74618_start;;
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _74629_to;;
	({
		__jule_tuple_sx_2097d15d8_Token__jule_tuple_sx_2097d15d8_Token __jule_assign_result = _1a3e0c9d4_splitDelim(&(_74517_splitTokens), static_cast<jule::U64>(10LLU));
		_74618_start = __jule_assign_result.__jule_result_arg0;
		_74629_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_74618_start != nullptr) || (_74629_to != nullptr))) {
		return jule::Any(_1a3e0a828_buildSlicing(_self_, &(_73018_exprTokens), &(_74618_start), &(_74629_to), &(_72917_errorToken), _72840_tokens[(_72840_tokens.len() - 1LL)]), &__jule_any_type108);;
	};
	return jule::Any(_1a3e0a284_buildIndexing(_self_, _73018_exprTokens, _72840_tokens, _72917_errorToken), &__jule_any_type107);;
}



inline jule::Any _1a3e0ae44_buildData(_1a3e02347_exprBuilder* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _75333_tokens) {
	{
		auto _match_expr{ (*(_75333_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1a6a82a85:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1a6a82aeb:;
			{
				return _1a3e03b2e_buildSingle(_self_, (*(_75333_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1a6a82bc8:;
			{
				if (((*(_75333_tokens))[0LL].get()._field_Id == static_cast<jule::U64>(29LLU))) {
					return jule::Any(_1a3e03e3c_buildBindIdent(_self_, _75333_tokens), &__jule_any_type85);;
				};
			}
		}
		_match_end_1a6a82678:;
	};
	jule::Ptr<_2097d15d8_Token> _76517_token = (*(_75333_tokens))[((*(_75333_tokens)).len() - 1LL)];;
	if (((_76517_token.get()._field_Id == static_cast<jule::U64>(6LLU)) && _76517_token.get()._field_Kind.equal("...", 3))) {
		return jule::Any(_1a3e05290_buildVariadic(_self_, (*(_75333_tokens))), &__jule_any_type81);;
	};
	_76517_token=(*(_75333_tokens))[0LL];
	{
		auto &_match_expr{ _76517_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1a6a85758:;
			{
				if ((((*(_75333_tokens)).len() > 1LL) && _76517_token.get()._field_Kind.equal("*", 1))) {
					_76517_token=(*(_75333_tokens))[1LL];
					if ((_76517_token.get()._field_Id == static_cast<jule::U64>(33LLU))) {
						return jule::Any(_1a3e04b74_buildType(_self_, _75333_tokens), &__jule_any_type94);;
					};
				};
				return jule::Any(_1a3e0424a_buildUnary(_self_, (*(_75333_tokens))), &__jule_any_type93);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1a6a857d0:;
			{
				if (((*(_75333_tokens)).len() < 3LL)) {
					goto _match_end_1a6a8567b;
				};
				if (((*(_75333_tokens)).len() > 3LL)) {
					jule::Ptr<_2097d15d8_Token> _78721_t = (*(_75333_tokens))[((*(_75333_tokens)).len() - 1LL)];;
					if (((_78721_t.get()._field_Id == static_cast<jule::U64>(2LLU)) && _78721_t.get()._field_Kind.equal(")", 1))) {
						goto _match_end_1a6a8567b;
					};
				};
				jule::Ptr<_2097d15d8_Token> _79317_next = (*(_75333_tokens))[1LL];;
				if (((_79317_next.get()._field_Id != static_cast<jule::U64>(2LLU)) || (!_79317_next.get()._field_Kind.equal("]", 1)))) {
					goto _match_end_1a6a8567b;
				};
				return jule::Any(_1a3e04b74_buildType(_self_, _75333_tokens), &__jule_any_type94);;
			}
		}
		_match_end_1a6a8567b:;
	};
	_76517_token=(*(_75333_tokens))[((*(_75333_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ _76517_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1a6a85c31:;
			{
				return _1a3e04e82_buildSubIdent(_self_, _75333_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1a6a85c97:;
			{
				return _1a3e0559d_buildOpRight(_self_, _75333_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1a6a8a41c:;
			{
				{
					auto &_match_expr{ _76517_token.get()._field_Kind };
					
					if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1a6a8b682:;
						{
							return _1a3e06e40_buildParenthesesRange(_self_, _75333_tokens);;
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1a6a8b709:;
						{
							return _1a3e09717_buildBraceRange(_self_, _75333_tokens);;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1a6a8b781:;
						{
							return _1a3e0ab36_buildBracketRange(_self_, (*(_75333_tokens)));;
						}
					}
					_match_end_1a6a8b52d:;
				};
			}
		}
		_match_end_1a6a85bba:;
	};
	if ((_76517_token.get()._field_Id == static_cast<jule::U64>(31LLU))) {
		return jule::Any(_1a3e04b74_buildType(_self_, _75333_tokens), &__jule_any_type94);;
	};
	_1a3e02ac8_pushErr(_self_, _76517_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1a3e0b2eb_buildBinop(_1a3e02347_exprBuilder* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _82634_tokens, jule::I64 _82652_i) {
	jule::Ptr<_2097d15d8_Token> _82717_op = (*(_82634_tokens))[_82652_i];;
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _82817_leftTokens = (*(_82634_tokens)).slice(0LL, _82652_i);;
	if ((_1a3e0c0bb_isTypeOp(&(_82717_op.get()._field_Kind)) && _1a3e0c3a7_isTypeRange(&(_82817_leftTokens)))) {
		return jule::Any(_1a3e04b74_buildType(_self_, _82634_tokens), &__jule_any_type94);;
	};
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _83317_rightTokens = (*(_82634_tokens)).slice((_82652_i + 1LL));;
	if ((_82817_leftTokens.len() == 0LL)) {
		_1a3e02ac8_pushErr(_self_, (*(_82634_tokens))[_82652_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a3e02de7_pushSuggestion(_self_, jule::Str("left operand expected for binary operator", 41), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_83317_rightTokens.len() == 0LL)) {
		_1a3e02ac8_pushErr(_self_, (*(_82634_tokens))[_82652_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a3e02de7_pushSuggestion(_self_, jule::Str("right operand expected for binary operator", 42), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1acadec62_BinopExpr>(_1acadec62_BinopExpr{._field_Left=_1a3e0bc25_buildFromTokens(_self_, _82817_leftTokens), ._field_Right=_1a3e0bc25_buildFromTokens(_self_, _83317_rightTokens), ._field_Op=_82717_op}), &__jule_any_type113);;
}



inline jule::Any _1a3e0b609_build(_1a3e02347_exprBuilder* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _85129_tokens) {
	if (((*(_85129_tokens))[0LL].get()._field_Id == static_cast<jule::U64>(39LLU))) {
		return jule::Any(_1a3e04b74_buildType(_self_, _85129_tokens), &__jule_any_type94);;
	};
	jule::I64 _85513_i = _1a3e0cc7b_findLowestPrecOp(_85129_tokens);;
	if ((_85513_i == -1LL)) {
		return _1a3e0ae44_buildData(_self_, _85129_tokens);;
	};
	return _1a3e0b2eb_buildBinop(_self_, _85129_tokens, _85513_i);;
}



inline jule::Any _1a3e0b917_buildKind(_1a3e02347_exprBuilder* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _86233_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>> _86318_parts;;
	jule::Slice<_20943da3c_Log> _86325_errors;;
	({
		__jule_tuple_ssx_2097d15d8_Token__jule_tuple_s_20943da3c_Log __jule_assign_result = _1a3e1128a_parts(_86233_tokens, static_cast<jule::U64>(7LLU), true);
		_86318_parts = __jule_assign_result.__jule_result_arg0;
		_86325_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_86325_errors != nullptr)) {
		((*(_self_))._field_p.get()._field_errors).append(_86325_errors);;
		return nullptr;;
	} else if ((_86318_parts.len() > 1LL)) {
		return jule::Any(_1a3e03205_buildTuple(_self_, &(_86318_parts)), &__jule_any_type86);;
	};
	return _1a3e0b609_build(_self_, _86233_tokens);;
}



inline jule::Ptr<_1acadb456_Expr> _1a3e0bc25_buildFromTokens(_1a3e02347_exprBuilder* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>> _87338_tokens) {
	if ((_87338_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _87717_kind = _1a3e0b917_buildKind(_self_, &(_87338_tokens));;
	if ((_87717_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1acadb456_Expr>(_1acadb456_Expr{._field_Token=_87338_tokens[0LL], ._field_End=_87338_tokens[(_87338_tokens.len() - 1LL)], ._field_Kind=_87717_kind});;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e02347_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e0db7d_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1a3e12863_stop(_1a3e12577_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _1a3e12ac7_stopped(_1a3e12577_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _1a3e12e90_pushErr(_1a3e12577_parser* _self_, jule::Ptr<_2097d15d8_Token> _28326_token, jule::Str _28341_fmt, jule::Slice<jule::Any> _28354_args) {
	{ jule::Slice<_20943da3c_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1a3e1191c_compilerErr(&(_28326_token), &(_28341_fmt), _28354_args)); };
}



inline void _1a3e132ae_pushSuggestion(_1a3e12577_parser* _self_, jule::Str _28833_fmt, jule::Slice<jule::Any> _28846_args) {
	{
		_1a3e11d4b_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _28833_fmt, _28846_args);
	};
}



inline jule::Ptr<_1acadb456_Expr> _1a3e135bc_buildExpr(jule::Ptr<_1a3e12577_parser> _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _29234_tokens) {
	return _1a3e0bc25_buildFromTokens(_self_.get()._field_ep.ptr(), (*(_29234_tokens)));;
}



inline jule::Ptr<_1acaa47b5_Directive> _1a3e138ca_buildDirective(_1a3e12577_parser* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>> _29637_tokens) {
	if ((_29637_tokens.len() == 1LL)) {
		_1a3e12e90_pushErr(_self_, _29637_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_29637_tokens[1LL].get()._field_Column != (_29637_tokens[0LL].get()._field_Column + 1LL))) {
		_1a3e12e90_pushErr(_self_, _29637_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1acaa47b5_Directive>(_1acaa47b5_Directive{._field_Tag=_29637_tokens[1LL], ._field_Args=_29637_tokens.slice(2LL)});;
}



inline void _1a3e13b50_pushDirective(_1a3e12577_parser* _self_, jule::Ptr<_1acaa47b5_Directive> _31136_d) {
	if ((_31136_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6abc7a1:;
		if (it != expr_end) {
			jule::Ptr<_1acaa47b5_Directive> _31616_pd = *it;
			{
				if ((_31136_d.get()._field_Tag.get()._field_Kind == _31616_pd.get()._field_Tag.get()._field_Kind)) {
					return;;
				};
			}
			_iter_next_1a6abc7a1:;
			++it;
			goto _iter_begin_1a6abc7a1;
		}
		_iter_end_1a6abc7a1:;
	};
	{ jule::Slice<jule::Ptr<_1acaa47b5_Directive>> &__jule_push_dest = (*(_self_))._field_directives; __jule_push_dest.push(_31136_d); };
}



inline jule::Ptr<_1acae6e12_ScopeTree> _1a3e14007_buildScope(jule::Ptr<_1a3e12577_parser> _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _32435_tokens, jule::Ptr<_2097d15d8_Token> _32457_end) {
	jule::Ptr<_1acae6e12_ScopeTree> _32517_s = _1a3de4438_newScope();;
	_32517_s.get()._field_End=_32457_end;
	_1a3de5d63_scopeParser _32717_sp = _1a3de5d63_scopeParser{._field_p=_self_, };;
	_1a3e018a7_build(&_32717_sp, _32435_tokens, &(_32517_s));
	return _32517_s;;
}



inline __jule_tuple_x_1acad72cb_TypeDecl__jule_tuple_bool _1a3e14458__buildType(jule::Ptr<_1a3e12577_parser> _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _33442_tokens, jule::I64* _33513_i, jule::Bool _33522_err) {
	__jule_tuple_x_1acad72cb_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1a3e2329c_typeBuilder _33617_tb = _1a3e2329c_typeBuilder{._field_p=_self_, ._field_tokens=(*(_33442_tokens)), ._field_i=_33513_i, ._field_err=_33522_err};;
	jule::Ptr<_1acad72cb_TypeDecl> _34218_decl;;
	jule::Bool _34224_ok = false;;
	({
		__jule_tuple_x_1acad72cb_TypeDecl__jule_tuple_bool __jule_assign_result = _1a3e2627d_build(&_33617_tb);
		_34218_decl = __jule_assign_result.__jule_result_arg0;
		_34224_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _34218_decl;
	__jule_func_result.__jule_result_arg1 = _34224_ok;
	return __jule_func_result;;
}



inline __jule_tuple_x_1acad72cb_TypeDecl__jule_tuple_bool _1a3e148a9_buildType(jule::Ptr<_1a3e12577_parser> _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _34741_tokens, jule::I64* _34813_i, jule::Bool _34822_err) {
	__jule_tuple_x_1acad72cb_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_2097d15d8_Token> _34913_token = (*(_34741_tokens))[(*(_34813_i))];;
	jule::Ptr<_1acad72cb_TypeDecl> _35018_t;;
	jule::Bool _35021_ok = false;;
	({
		__jule_tuple_x_1acad72cb_TypeDecl__jule_tuple_bool __jule_assign_result = _1a3e14458__buildType(_self_, _34741_tokens, _34813_i, _34822_err);
		_35018_t = __jule_assign_result.__jule_result_arg0;
		_35021_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_34822_err && (!(_35021_ok)))) {
		_1a3e12e90_pushErr(_self_.ptr(), _34913_token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _35018_t;
	__jule_func_result.__jule_result_arg1 = _35021_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1acaed248_TypeAliasDecl> _1a3e14bb7_buildTypeAliasDecl(jule::Ptr<_1a3e12577_parser> _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _35743_tokens) {
	jule::I64 _35817_i = 1LL;;
	if ((_35817_i >= (*(_35743_tokens)).len())) {
		_1a3e12e90_pushErr(_self_.ptr(), (*(_35743_tokens))[(_35817_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1acaed248_TypeAliasDecl> _36317_tad = jule::new_ptr<_1acaed248_TypeAliasDecl>(_1acaed248_TypeAliasDecl{._field_Token=(*(_35743_tokens))[1LL], ._field_Ident=(*(_35743_tokens))[1LL].get()._field_Kind, });;
	jule::Ptr<_2097d15d8_Token> _36717_token = (*(_35743_tokens))[_35817_i];;
	if ((_36717_token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a3e12e90_pushErr(_self_.ptr(), _36717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a3e132ae_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_35817_i)++;
	if ((_35817_i >= (*(_35743_tokens)).len())) {
		_1a3e12e90_pushErr(_self_.ptr(), (*(_35743_tokens))[(_35817_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return _36317_tad;;
	};
	_36717_token=(*(_35743_tokens))[_35817_i];
	if ((_36717_token.get()._field_Id != static_cast<jule::U64>(10LLU))) {
		_1a3e12e90_pushErr(_self_.ptr(), (*(_35743_tokens))[(_35817_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a3e132ae_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18), jule::Slice<jule::Any>());
		return _36317_tad;;
	};
	(_35817_i)++;
	if ((_35817_i >= (*(_35743_tokens)).len())) {
		_1a3e12e90_pushErr(_self_.ptr(), (*(_35743_tokens))[(_35817_i - 1LL)], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return _36317_tad;;
	};
	jule::Ptr<_1acad72cb_TypeDecl> _38818_t;;
	jule::Bool _38821_ok = false;;
	({
		__jule_tuple_x_1acad72cb_TypeDecl__jule_tuple_bool __jule_assign_result = _1a3e148a9_buildType(_self_, _35743_tokens, (&(_35817_i)), true);
		_38818_t = __jule_assign_result.__jule_result_arg0;
		_38821_ok = __jule_assign_result.__jule_result_arg1;
	});
	_36317_tad.get()._field_Kind=_38818_t;
	if ((_38821_ok && (_35817_i < (*(_35743_tokens)).len()))) {
		_1a3e12e90_pushErr(_self_.ptr(), (*(_35743_tokens))[_35817_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_36317_tad.get()._field_Public=_1a3e22235_isPub(&(_36317_tad.get()._field_Ident));
	return _36317_tad;;
}



inline void _1a3e14ed6_buildVarTypeAndExpr(jule::Ptr<_1a3e12577_parser> _self_, jule::Ptr<_1acae98d7_VarDecl>* _39744_v, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _39762_tokens) {
	jule::I64 _39817_i = 0LL;;
	jule::Ptr<_2097d15d8_Token> _39917_tok = (*(_39762_tokens))[_39817_i];;
	if ((_39917_tok.get()._field_Id == static_cast<jule::U64>(10LLU))) {
		(_39817_i)++;
		if (((_39817_i >= (*(_39762_tokens)).len()) || (((*(_39762_tokens))[_39817_i].get()._field_Id == static_cast<jule::U64>(6LLU)) && (*(_39762_tokens))[_39817_i].get()._field_Kind.equal("=", 1)))) {
			_1a3e12e90_pushErr(_self_.ptr(), _39917_tok, jule::Str("type missing", 12), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1acad72cb_TypeDecl> _40722_t;;
		jule::Bool _40725_ok = false;;
		({
			__jule_tuple_x_1acad72cb_TypeDecl__jule_tuple_bool __jule_assign_result = _1a3e148a9_buildType(_self_, _39762_tokens, (&(_39817_i)), true);
			_40722_t = __jule_assign_result.__jule_result_arg0;
			_40725_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_40725_ok) {
			(*(_39744_v)).get()._field_Kind=_40722_t;
			if ((_39817_i >= (*(_39762_tokens)).len())) {
				return;;
			};
			_39917_tok=(*(_39762_tokens))[_39817_i];
		};
	};
	if ((_39917_tok.get()._field_Id == static_cast<jule::U64>(6LLU))) {
		if ((!_39917_tok.get()._field_Kind.equal("=", 1))) {
			_1a3e12e90_pushErr(_self_.ptr(), _39917_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return;;
		};
		jule::Slice<jule::Ptr<_2097d15d8_Token>> _42221_exprTokens = (*(_39762_tokens)).slice((_39817_i + 1LL));;
		if ((_42221_exprTokens.len() == 0LL)) {
			_1a3e12e90_pushErr(_self_.ptr(), _39917_tok, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
			return;;
		};
		(*(_39744_v)).get()._field_Expr=_1a3e135bc_buildExpr(_self_, &(_42221_exprTokens));
	} else {
		_1a3e12e90_pushErr(_self_.ptr(), _39917_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1a3e15305_buildVarCommon(jule::Ptr<_1a3e12577_parser> _self_, jule::Ptr<_1acae98d7_VarDecl>* _43339_v, jule::Slice<jule::Ptr<_2097d15d8_Token>> _43356_tokens) {
	(*(_43339_v)).get()._field_Token=_43356_tokens[0LL];
	if (((*(_43339_v)).get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a3e12e90_pushErr(_self_.ptr(), (*(_43339_v)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a3e132ae_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	(*(_43339_v)).get()._field_Ident=(*(_43339_v)).get()._field_Token.get()._field_Kind;
	(*(_43339_v)).get()._field_Public=_1a3e22235_isPub(&((*(_43339_v)).get()._field_Ident));
	(*(_43339_v)).get()._field_Kind=nullptr;
	if ((_43356_tokens.len() > 1LL)) {
		_43356_tokens=_43356_tokens.slice(1LL);
		_1a3e14ed6_buildVarTypeAndExpr(_self_, _43339_v, &(_43356_tokens));
	};
}



inline void _1a3e156bd_buildVarBegin(_1a3e12577_parser* _self_, jule::Ptr<_1acae98d7_VarDecl>* _44937_v, jule::I64* _44955_i, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _44964_tokens) {
	jule::Ptr<_2097d15d8_Token> _45013_tok = (*(_44964_tokens))[(*(_44955_i))];;
	{
		auto &_match_expr{ _45013_tok.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1a6ad4a71:;
			{
				(*(_44937_v)).get()._field_Statically=true;
				goto _case_begin_1a6ad580d;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1a6ad580d:;
			{
				((*(_44955_i)))++;
				if (((*(_44955_i)) >= (*(_44964_tokens)).len())) {
					_1a3e12e90_pushErr(_self_, _45013_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				if (((*(_44964_tokens))[(*(_44955_i))].get()._field_Id == static_cast<jule::U64>(34LLU))) {
					(*(_44937_v)).get()._field_Mutable=true;
					((*(_44955_i)))++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1a6ad508d:;
			{
				((*(_44955_i)))++;
				(*(_44937_v)).get()._field_Constant=true;
			}
		}
		else {
			_case_begin_1a6ad4ed3:;
			{
				_1a3e12e90_pushErr(_self_, _45013_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1a6ad4d5c:;
	};
	if (((*(_44955_i)) >= (*(_44964_tokens)).len())) {
		_1a3e12e90_pushErr(_self_, _45013_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1acae98d7_VarDecl> _1a3e159cb_buildVar(jule::Ptr<_1a3e12577_parser> _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>> _47932_tokens) {
	jule::I64 _48017_i = 0LL;;
	jule::Ptr<_1acae98d7_VarDecl> _48117_v = jule::new_ptr<_1acae98d7_VarDecl>(_1acae98d7_VarDecl{._field_Token=_47932_tokens[0LL], });;
	_1a3e156bd_buildVarBegin(_self_.ptr(), &(_48117_v), &(_48017_i), &(_47932_tokens));
	if ((_48017_i >= _47932_tokens.len())) {
		return nullptr;;
	};
	_47932_tokens=_47932_tokens.slice(_48017_i);
	if (((_47932_tokens[0LL].get()._field_Id == static_cast<jule::U64>(6LLU)) && _47932_tokens[0LL].get()._field_Kind.equal("&", 1))) {
		_48117_v.get()._field_Reference=true;
		if ((_47932_tokens.len() == 1LL)) {
			return nullptr;;
		};
		_47932_tokens=_47932_tokens.slice(1LL);
	};
	_1a3e15305_buildVarCommon(_self_, &(_48117_v), _47932_tokens);
	return _48117_v;;
}



inline jule::Ptr<_1acae4272_GenericDecl> _1a3e15cd9_buildGeneric(jule::Ptr<_1a3e12577_parser> _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _50137_tokens) {
	jule::Ptr<_1acae4272_GenericDecl> _50217_g = jule::new_ptr<_1acae4272_GenericDecl>(_1acae4272_GenericDecl{._field_Token=(*(_50137_tokens))[0LL], });;
	if ((_50217_g.get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a3e12e90_pushErr(_self_.ptr(), _50217_g.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a3e132ae_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_50217_g.get()._field_Ident=_50217_g.get()._field_Token.get()._field_Kind;
	if (((*(_50137_tokens)).len() > 1LL)) {
		if (((*(_50137_tokens))[1LL].get()._field_Id != static_cast<jule::U64>(10LLU))) {
			_1a3e12e90_pushErr(_self_.ptr(), (*(_50137_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_50137_tokens)).len() == 2LL)) {
			_1a3e12e90_pushErr(_self_.ptr(), (*(_50137_tokens))[1LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_2097d15d8_Token>> _51921_constraintTokens = (*(_50137_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>> _52022_parts;;
		jule::Slice<_20943da3c_Log> _52029_errors;;
		({
			__jule_tuple_ssx_2097d15d8_Token__jule_tuple_s_20943da3c_Log __jule_assign_result = _1a3e10da0_partsKind(&(_51921_constraintTokens), jule::Str("|", 1), true);
			_52022_parts = __jule_assign_result.__jule_result_arg0;
			_52029_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_52029_errors.len() > 0LL)) {
			(_self_.get()._field_errors).append(_52029_errors);;
			return nullptr;;
		};
		_50217_g.get()._field_Constraint=jule::new_ptr<_1acae3cee_Constraint>(_1acae3cee_Constraint{._field_Mask=jule::Slice<jule::Ptr<_1acad72cb_TypeDecl>>::alloc(0LL, _52022_parts.len())});
		{
			auto expr = &(_52022_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a6ae063c:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_2097d15d8_Token>> _52625_part = *it;
				{
					jule::I64 _52725_i = 0LL;;
					jule::Ptr<_1acad72cb_TypeDecl> _52826_kind;;
					({
						__jule_tuple_x_1acad72cb_TypeDecl__jule_tuple_bool __jule_assign_result = _1a3e148a9_buildType(_self_, &(_52625_part), (&(_52725_i)), true);
						_52826_kind = __jule_assign_result.__jule_result_arg0;
					});
					{ jule::Slice<jule::Ptr<_1acad72cb_TypeDecl>> &__jule_push_dest = _50217_g.get()._field_Constraint.get()._field_Mask; __jule_push_dest.push(_52826_kind); };
					if ((_52725_i < _52625_part.len())) {
						_1a3e12e90_pushErr(_self_.ptr(), _52625_part[_52725_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1a6ae063c:;
				++it;
				goto _iter_begin_1a6ae063c;
			}
			_iter_end_1a6ae063c:;
		};
	};
	return _50217_g;;
}



inline jule::Slice<jule::Ptr<_1acae4272_GenericDecl>> _1a3e16191_buildGenerics(jule::Ptr<_1a3e12577_parser> _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _53838_tokens, jule::Ptr<_2097d15d8_Token>* _53857_errorToken) {
	if (((*(_53838_tokens)).len() == 0LL)) {
		_1a3e12e90_pushErr(_self_.ptr(), (*(_53857_errorToken)), jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>> _54418_parts;;
	jule::Slice<_20943da3c_Log> _54425_errors;;
	({
		__jule_tuple_ssx_2097d15d8_Token__jule_tuple_s_20943da3c_Log __jule_assign_result = _1a3e1128a_parts(_53838_tokens, static_cast<jule::U64>(7LLU), true);
		_54418_parts = __jule_assign_result.__jule_result_arg0;
		_54425_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_54425_errors.len() > 0LL)) {
		(_self_.get()._field_errors).append(_54425_errors);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1acae4272_GenericDecl>> _55017_generics = jule::Slice<jule::Ptr<_1acae4272_GenericDecl>>::alloc(0LL, _54418_parts.len());;
	{
		auto expr = &(_54418_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6ae507b:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_2097d15d8_Token>> _55121_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1acae4272_GenericDecl>> &__jule_push_dest = _55017_generics; __jule_push_dest.push(_1a3e15cd9_buildGeneric(_self_, &(_55121_part))); };
			}
			_iter_next_1a6ae507b:;
			++it;
			goto _iter_begin_1a6ae507b;
		}
		_iter_end_1a6ae507b:;
	};
	return _55017_generics;;
}



inline jule::Ptr<_1acae75d8_ParamDecl> _1a3e1649e_buildSelfParam(_1a3e12577_parser* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>> _55837_tokens) {
	if ((_55837_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1acae75d8_ParamDecl> _56317_param = jule::new_ptr<_1acae75d8_ParamDecl>();;
	jule::I64 _56617_i = 0LL;;
	if ((_55837_tokens[_56617_i].get()._field_Id == static_cast<jule::U64>(34LLU))) {
		_56317_param.get()._field_Mutable=true;
		(_56617_i)++;
		if ((_56617_i >= _55837_tokens.len())) {
			_1a3e12e90_pushErr(_self_, _55837_tokens[(_56617_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if (_55837_tokens[_56617_i].get()._field_Kind.equal("&", 1)) {
		_56317_param.get()._field_Ident=jule::Str("&", 1);
		(_56617_i)++;
		if ((_56617_i >= _55837_tokens.len())) {
			_1a3e12e90_pushErr(_self_, _55837_tokens[(_56617_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if ((_55837_tokens[_56617_i].get()._field_Id == static_cast<jule::U64>(26LLU))) {
		(_56317_param.get()._field_Ident).append("self", 4);
		_56317_param.get()._field_Token=_55837_tokens[_56617_i];
		(_56617_i)++;
		if ((_56617_i < _55837_tokens.len())) {
			_1a3e12e90_pushErr(_self_, _55837_tokens[_56617_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	};
	return _56317_param;;
}



inline void _1a3e16867_paramTypeBegin(_1a3e12577_parser* _self_, jule::Ptr<_1acae75d8_ParamDecl>* _59738_param, jule::I64* _59762_i, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _59771_tokens) {
	for (; ((*(_59762_i)) < (*(_59771_tokens)).len()); ((*(_59762_i)))++) {
		{
			jule::Ptr<_2097d15d8_Token> _59917_token = (*(_59771_tokens))[(*(_59762_i))];;
			if ((_59917_token.get()._field_Id != static_cast<jule::U64>(6LLU))) {
				return;;
			} else if ((!_59917_token.get()._field_Kind.equal("...", 3))) {
				return;;
			};
			if ((*(_59738_param)).get()._field_Variadic) {
				_1a3e12e90_pushErr(_self_, _59917_token, jule::Str("define is already variadic", 26), jule::Slice<jule::Any>());
				goto _iter_next_1a6aeb66a;
			};
			(*(_59738_param)).get()._field_Variadic=true;
		}
	_iter_next_1a6aeb66a:;
	}
	_iter_end_1a6aeb66a:;;
}



inline void _1a3e16b86_buildParamType(jule::Ptr<_1a3e12577_parser> _self_, jule::Ptr<_1acae75d8_ParamDecl>* _61439_param, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _61463_tokens) {
	jule::I64 _61517_i = 0LL;;
	_1a3e16867_paramTypeBegin(_self_.ptr(), _61439_param, &(_61517_i), _61463_tokens);
	if ((_61517_i >= (*(_61463_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_1acad72cb_TypeDecl__jule_tuple_bool __jule_assign_result = _1a3e148a9_buildType(_self_, _61463_tokens, (&(_61517_i)), true);
		(*(_61439_param)).get()._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_61517_i < (*(_61463_tokens)).len())) {
		_1a3e12e90_pushErr(_self_.ptr(), (*(_61463_tokens))[_61517_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1a3e16ea5_buildParamBody(jule::Ptr<_1a3e12577_parser> _self_, jule::Ptr<_1acae75d8_ParamDecl>* _62739_param, jule::Slice<jule::Ptr<_2097d15d8_Token>> _62762_tokens) {
	jule::Ptr<_2097d15d8_Token> _62817_tok = _62762_tokens[0LL];;
	if ((_62762_tokens.len() == 1LL)) {
		(*(_62739_param)).get()._field_Ident=_62817_tok.get()._field_Kind;
		return;;
	} else if ((_62762_tokens.len() < 3LL)) {
		_1a3e12e90_pushErr(_self_.ptr(), _62817_tok, jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return;;
	};
	if ((_62762_tokens[1LL].get()._field_Id != static_cast<jule::U64>(10LLU))) {
		(*(_62739_param)).get()._field_Ident=jule::Str("<anonymous>", 11);
		_1a3e16b86_buildParamType(_self_, _62739_param, &(_62762_tokens));
		return;;
	};
	(*(_62739_param)).get()._field_Ident=_62817_tok.get()._field_Kind;
	_62762_tokens=_62762_tokens.slice(2LL);
	_1a3e16b86_buildParamType(_self_, _62739_param, &(_62762_tokens));
}



inline jule::Ptr<_1acae75d8_ParamDecl> _1a3e172b3_buildParam(jule::Ptr<_1a3e12577_parser> _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>> _64734_tokens) {
	jule::Ptr<_1acae75d8_ParamDecl> _64817_param = jule::new_ptr<_1acae75d8_ParamDecl>(_1acae75d8_ParamDecl{._field_Token=_64734_tokens[0LL], });;
	if ((_64817_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		_64817_param.get()._field_Mutable=true;
		if ((_64734_tokens.len() == 1LL)) {
			_1a3e12e90_pushErr(_self_.ptr(), _64734_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_64734_tokens=_64734_tokens.slice(1LL);
		_64817_param.get()._field_Token=_64734_tokens[0LL];
	};
	if ((_64734_tokens.len() >= 3LL)) {
		if (((_64817_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(6LLU)) && _64817_param.get()._field_Token.get()._field_Kind.equal("&", 1))) {
			if ((_64734_tokens.len() == 1LL)) {
				_1a3e12e90_pushErr(_self_.ptr(), _64734_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if (((_64734_tokens[1LL].get()._field_Id == static_cast<jule::U64>(1LLU)) && (_64734_tokens[2LL].get()._field_Id == static_cast<jule::U64>(10LLU)))) {
				_64817_param.get()._field_Reference=true;
				_64734_tokens=_64734_tokens.slice(1LL);
				_64817_param.get()._field_Token=_64734_tokens[0LL];
			};
		};
	};
	if ((_64817_param.get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_64817_param.get()._field_Ident=jule::Str("<anonymous>", 11);
		_1a3e16b86_buildParamType(_self_, &(_64817_param), &(_64734_tokens));
	} else {
		_1a3e16ea5_buildParamBody(_self_, &(_64817_param), _64734_tokens);
	};
	return _64817_param;;
}



inline void _1a3e17538_checkParams(_1a3e12577_parser* _self_, jule::Slice<jule::Ptr<_1acae75d8_ParamDecl>>* _69035_params) {
	{
		auto expr = _69035_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6b090d4:;
		if (it != expr_end) {
			jule::Ptr<_1acae75d8_ParamDecl> _69121_param = *it;
			{
				if ((_1acae794b_IsSelf(_69121_param.ptr()) || (_69121_param.get()._field_Kind != nullptr))) {
					goto _iter_next_1a6b090d4;
				};
				if ((_69121_param.get()._field_Token == nullptr)) {
					_1a3e12e90_pushErr(_self_, _69121_param.get()._field_Token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
				} else {
					_69121_param.get()._field_Kind=jule::new_ptr<_1acad72cb_TypeDecl>(_1acad72cb_TypeDecl{._field_Token=_69121_param.get()._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1acad7892_IdentTypeDecl>(_1acad7892_IdentTypeDecl{._field_Token=_69121_param.get()._field_Token, ._field_Ident=_69121_param.get()._field_Token.get()._field_Kind, }), &__jule_any_type20)});
					_69121_param.get()._field_Ident=jule::Str("<anonymous>", 11);
				};
			}
			_iter_next_1a6b090d4:;
			++it;
			goto _iter_begin_1a6b090d4;
		}
		_iter_end_1a6b090d4:;
	};
}



inline jule::Slice<jule::Ptr<_1acae75d8_ParamDecl>> _1a3e178e0_buildParams(jule::Ptr<_1a3e12577_parser> _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _71036_tokens, jule::Bool _71054_method) {
	jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>> _71118_parts;;
	jule::Slice<_20943da3c_Log> _71125_errs;;
	({
		__jule_tuple_ssx_2097d15d8_Token__jule_tuple_s_20943da3c_Log __jule_assign_result = _1a3e1128a_parts(_71036_tokens, static_cast<jule::U64>(7LLU), true);
		_71118_parts = __jule_assign_result.__jule_result_arg0;
		_71125_errs = __jule_assign_result.__jule_result_arg1;
	});
	(_self_.get()._field_errors).append(_71125_errs);;
	if ((_71118_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1acae75d8_ParamDecl>> _71717_params = nullptr;;
	if ((_71054_method && (_71118_parts.len() > 0LL))) {
		jule::Ptr<_1acae75d8_ParamDecl> _71921_param = _1a3e1649e_buildSelfParam(_self_.ptr(), _71118_parts[0LL]);;
		if (((_71921_param != nullptr) && _1acae794b_IsSelf(_71921_param.ptr()))) {
			{ jule::Slice<jule::Ptr<_1acae75d8_ParamDecl>> &__jule_push_dest = _71717_params; __jule_push_dest.push(_71921_param); };
			_71118_parts=_71118_parts.slice(1LL);
		};
	};
	{
		auto expr = &(_71118_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6b0d47e:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_2097d15d8_Token>> _72621_part = *it;
			{
				jule::Ptr<_1acae75d8_ParamDecl> _72721_param = _1a3e172b3_buildParam(_self_, _72621_part);;
				if ((_72721_param != nullptr)) {
					{ jule::Slice<jule::Ptr<_1acae75d8_ParamDecl>> &__jule_push_dest = _71717_params; __jule_push_dest.push(_72721_param); };
				};
			}
			_iter_next_1a6b0d47e:;
			++it;
			goto _iter_begin_1a6b0d47e;
		}
		_iter_end_1a6b0d47e:;
	};
	_1a3e17538_checkParams(_self_.ptr(), &(_71717_params));
	return _71717_params;;
}



inline __jule_tuple_x_1acada048_RetTypeDecl__jule_tuple_bool _1a3e17c97_buildMultiRetType(jule::Ptr<_1a3e12577_parser> _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _73742_tokens, jule::I64* _73765_i) {
	__jule_tuple_x_1acada048_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1acada048_RetTypeDecl>();
	((*(_73765_i)))++;
	if (((*(_73765_i)) >= (*(_73742_tokens)).len())) {
		((*(_73765_i)))--;
		({
			__jule_tuple_x_1acad72cb_TypeDecl__jule_tuple_bool __jule_assign_result = _1a3e148a9_buildType(_self_, _73742_tokens, (&((*(_73765_i)))), false);
			__jule_func_result.__jule_result_arg0.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_73765_i)))--;
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _74717_rangeTokens = _1a3e1071d_range(_73765_i, jule::Str("(", 1), jule::Str(")", 1), _73742_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>> _74918_parts;;
	jule::Slice<_20943da3c_Log> _74925_errs;;
	({
		__jule_tuple_ssx_2097d15d8_Token__jule_tuple_s_20943da3c_Log __jule_assign_result = _1a3e1128a_parts(&(_74717_rangeTokens), static_cast<jule::U64>(7LLU), true);
		_74918_parts = __jule_assign_result.__jule_result_arg0;
		_74925_errs = __jule_assign_result.__jule_result_arg1;
	});
	(_self_.get()._field_errors).append(_74925_errs);;
	if ((_74918_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1acad72cb_TypeDecl>> _75517_types = jule::Slice<jule::Ptr<_1acad72cb_TypeDecl>>::alloc(0LL, _74918_parts.len());;
	__jule_func_result.__jule_result_arg0.get()._field_Idents=jule::Slice<jule::Ptr<_2097d15d8_Token>>::alloc(0LL, _74918_parts.len());
	{
		auto expr = &(_74918_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6b14584:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_2097d15d8_Token>> _75721_part = *it;
			{
				jule::Ptr<_2097d15d8_Token> _75821_token = _75721_part[0LL];;
				jule::I64 _75921_offset = 0LL;;
				if ((_75721_part.len() > 1LL)) {
					_75821_token=_75721_part[1LL];
					if ((_75821_token.get()._field_Id == static_cast<jule::U64>(10LLU))) {
						_75921_offset=2LL;
						if ((_75721_part.len() < 3LL)) {
							_1a3e12e90_pushErr(_self_.ptr(), _75821_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
							goto _iter_next_1a6b14584;
						};
					};
				};
				_75821_token=_75721_part[0LL];
				if ((_75921_offset != 2LL)) {
					jule::Ptr<_2097d15d8_Token> _77525_newToken = jule::new_ptr<_2097d15d8_Token>((*(_75821_token)));;
					_77525_newToken.get()._field_Kind=jule::Str("<anonymous>", 11);
					{ jule::Slice<jule::Ptr<_2097d15d8_Token>> &__jule_push_dest = __jule_func_result.__jule_result_arg0.get()._field_Idents; __jule_push_dest.push(_77525_newToken); };
				} else {
					{ jule::Slice<jule::Ptr<_2097d15d8_Token>> &__jule_push_dest = __jule_func_result.__jule_result_arg0.get()._field_Idents; __jule_push_dest.push(_75821_token); };
				};
				jule::Ptr<_1acad72cb_TypeDecl> _78222_tk;;
				({
					__jule_tuple_x_1acad72cb_TypeDecl__jule_tuple_bool __jule_assign_result = _1a3e148a9_buildType(_self_, &(_75721_part), (&(_75921_offset)), true);
					_78222_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_75921_offset < _75721_part.len())) {
					_1a3e12e90_pushErr(_self_.ptr(), _75721_part[_75921_offset], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1acad72cb_TypeDecl>> &__jule_push_dest = _75517_types; __jule_push_dest.push(_78222_tk); };
			}
			_iter_next_1a6b14584:;
			++it;
			goto _iter_begin_1a6b14584;
		}
		_iter_end_1a6b14584:;
	};
	if ((_75517_types.len() > 1LL)) {
		__jule_func_result.__jule_result_arg0.get()._field_Kind=jule::new_ptr<_1acad72cb_TypeDecl>(_1acad72cb_TypeDecl{._field_Token=(*(_73742_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1acad89c5_TupleTypeDecl>(_1acad89c5_TupleTypeDecl{._field_Types=_75517_types}), &__jule_any_type80)});
	} else {
		__jule_func_result.__jule_result_arg0.get()._field_Kind=_75517_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1acada048_RetTypeDecl__jule_tuple_bool _1a3e1814e_buildRetType(jule::Ptr<_1a3e12577_parser> _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _80537_tokens, jule::I64* _80560_i) {
	__jule_tuple_x_1acada048_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1acada048_RetTypeDecl>();
	if (((*(_80560_i)) >= (*(_80537_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_2097d15d8_Token> _81117_token = (*(_80537_tokens))[(*(_80560_i))];;
	{
		auto &_match_expr{ _81117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1a6b1c3e4:;
			{
				if (_81117_token.get()._field_Kind.equal("{", 1)) {
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1a6b1c45a:;
			{
				if (_81117_token.get()._field_Kind.equal("=", 1)) {
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1a6b1c4c1:;
			{
				if ((((*(_80560_i)) + 1LL) >= (*(_80537_tokens)).len())) {
					_1a3e12e90_pushErr(_self_.ptr(), _81117_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_80560_i)))++;
				_81117_token=(*(_80537_tokens))[(*(_80560_i))];
				if ((_81117_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
					{
						auto &_match_expr{ _81117_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1)) {
							_case_begin_1a6b1ebee:;
							{
								({
									__jule_tuple_x_1acada048_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1a3e17c97_buildMultiRetType(_self_, _80537_tokens, _80560_i);
									__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
									__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
								});
								return __jule_func_result;;
							}
						}
						else if (_match_expr == jule::Str("{", 1)) {
							_case_begin_1a6b1ec65:;
							{
								_1a3e12e90_pushErr(_self_.ptr(), _81117_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
								return __jule_func_result;;
							}
						}
						_match_end_1a6b1ea01:;
					};
				};
				({
					__jule_tuple_x_1acad72cb_TypeDecl__jule_tuple_bool __jule_assign_result = _1a3e148a9_buildType(_self_, _80537_tokens, (&((*(_80560_i)))), true);
					__jule_func_result.__jule_result_arg0.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1a6b1c37d:;
	};
	((*(_80560_i)))++;
	_1a3e12e90_pushErr(_self_.ptr(), _81117_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1acae8908_FnDecl> _1a3e185a0_buildFnPrototype(jule::Ptr<_1a3e12577_parser> _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _85041_tokens, jule::I64* _85064_i, jule::Bool _85072_method) {
	jule::Ptr<_1acae8908_FnDecl> _85117_f = jule::new_ptr<_1acae8908_FnDecl>(_1acae8908_FnDecl{._field_Token=(*(_85041_tokens))[(*(_85064_i))], });;
	if ((_85117_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
		_85117_f.get()._field_Statically=true;
		((*(_85064_i)))++;
		if (((*(_85064_i)) >= (*(_85041_tokens)).len())) {
			_1a3e12e90_pushErr(_self_.ptr(), _85117_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85117_f.get()._field_Token=(*(_85041_tokens))[(*(_85064_i))];
	};
	if ((_85117_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(33LLU))) {
		_85117_f.get()._field_Unsafety=true;
		((*(_85064_i)))++;
		if (((*(_85064_i)) >= (*(_85041_tokens)).len())) {
			_1a3e12e90_pushErr(_self_.ptr(), _85117_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85117_f.get()._field_Token=(*(_85041_tokens))[(*(_85064_i))];
	};
	((*(_85064_i)))++;
	if (((*(_85064_i)) >= (*(_85041_tokens)).len())) {
		_1a3e12e90_pushErr(_self_.ptr(), _85117_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_2097d15d8_Token> _88413_tok = (*(_85041_tokens))[(*(_85064_i))];;
	if ((_88413_tok.get()._field_Id == static_cast<jule::U64>(1LLU))) {
		((*(_85064_i)))++;
		if (((*(_85064_i)) >= (*(_85041_tokens)).len())) {
			_1a3e12e90_pushErr(_self_.ptr(), _85117_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85117_f.get()._field_Ident=_88413_tok.get()._field_Kind;
	} else {
		_85117_f.get()._field_Ident=jule::Str("<anonymous>", 11);
	};
	jule::Ptr<_2097d15d8_Token> _89613_errorToken = (*(_85041_tokens))[(*(_85064_i))];;
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _89717_genericsTokens = _1a3e1071d_range(_85064_i, jule::Str("[", 1), jule::Str("]", 1), _85041_tokens);;
	if ((_89717_genericsTokens != nullptr)) {
		_85117_f.get()._field_Generics=_1a3e16191_buildGenerics(_self_, &(_89717_genericsTokens), &(_89613_errorToken));
	};
	if ((!(*(_85041_tokens))[(*(_85064_i))].get()._field_Kind.equal("(", 1))) {
		_1a3e12e90_pushErr(_self_.ptr(), (*(_85041_tokens))[(*(_85064_i))], jule::Str("missing function parentheses", 28), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _90717_paramsToks = _1a3e1071d_range(_85064_i, jule::Str("(", 1), jule::Str(")", 1), _85041_tokens);;
	if ((_90717_paramsToks.len() > 0LL)) {
		_85117_f.get()._field_Params=_1a3e178e0_buildParams(_self_, &(_90717_paramsToks), _85072_method);
	};
	if (((*(_85064_i)) < (*(_85041_tokens)).len())) {
		jule::Ptr<_2097d15d8_Token> _91317_token = (*(_85041_tokens))[(*(_85064_i))];;
		if (((_91317_token.get()._field_Id == static_cast<jule::U64>(6LLU)) && _91317_token.get()._field_Kind.equal("!", 1))) {
			_85117_f.get()._field_Exceptional=true;
			((*(_85064_i)))++;
		};
	};
	_85117_f.get()._field_Public=_1a3e22235_isPub(&(_85117_f.get()._field_Ident));
	({
		__jule_tuple_x_1acada048_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1a3e1814e_buildRetType(_self_, _85041_tokens, _85064_i);
		_85117_f.get()._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _85117_f;;
}



inline jule::Ptr<_1acae8908_FnDecl> _1a3e18a01_buildFn(jule::Ptr<_1a3e12577_parser> _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _92732_tokens, jule::Bool _92750_method, jule::Bool _92764_prototype) {
	jule::I64 _92817_i = 0LL;;
	jule::Ptr<_1acae8908_FnDecl> _92917_f = _1a3e185a0_buildFnPrototype(_self_, _92732_tokens, &(_92817_i), _92750_method);;
	if (_92764_prototype) {
		if ((_92817_i < (*(_92732_tokens)).len())) {
			_1a3e12e90_pushErr(_self_.ptr(), (*(_92732_tokens))[(_92817_i + 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
		return _92917_f;;
	} else if ((_92917_f == nullptr)) {
		return _92917_f;;
	};
	if ((_92817_i >= (*(_92732_tokens)).len())) {
		_1a3e12863_stop(_self_.ptr());
		_1a3e12e90_pushErr(_self_.ptr(), _92917_f.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a3e132ae_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _94517_blockTokens = _1a3e1071d_range(&(_92817_i), jule::Str("{", 1), jule::Str("}", 1), _92732_tokens);;
	if ((_94517_blockTokens != nullptr)) {
		_92917_f.get()._field_Scope=_1a3e14007_buildScope(_self_, &(_94517_blockTokens), (*(_92732_tokens))[(_92817_i - 1LL)]);
		_92917_f.get()._field_Scope.get()._field_Unsafety=_92917_f.get()._field_Unsafety;
		if ((_92817_i < (*(_92732_tokens)).len())) {
			_1a3e12e90_pushErr(_self_.ptr(), (*(_92732_tokens))[_92817_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	} else {
		_1a3e12863_stop(_self_.ptr());
		_1a3e12e90_pushErr(_self_.ptr(), _92917_f.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a3e132ae_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _92917_f;;
}



inline jule::Slice<jule::Ptr<_2097d15d8_Token>> _1a3e18d0e_getUseDeclSelectors(_1a3e12577_parser* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>> _96142_tokens) {
	jule::I64 _96217_i = 0LL;;
	_96142_tokens=_1a3e1071d_range(&(_96217_i), jule::Str("{", 1), jule::Str("}", 1), &(_96142_tokens));
	jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>> _96418_parts;;
	jule::Slice<_20943da3c_Log> _96425_errs;;
	({
		__jule_tuple_ssx_2097d15d8_Token__jule_tuple_s_20943da3c_Log __jule_assign_result = _1a3e1128a_parts(&(_96142_tokens), static_cast<jule::U64>(7LLU), true);
		_96418_parts = __jule_assign_result.__jule_result_arg0;
		_96425_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_96425_errs.len() > 0LL)) {
		((*(_self_))._field_errors).append(_96425_errs);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _97017_selectors = jule::Slice<jule::Ptr<_2097d15d8_Token>>::alloc(0LL, _96418_parts.len());;
	{
		auto expr = &(_96418_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6b33a37:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_2097d15d8_Token>> _97121_part = *it;
			{
				if ((_97121_part.len() > 1LL)) {
					_1a3e12e90_pushErr(_self_, _97121_part[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				jule::Ptr<_2097d15d8_Token> _97521_tok = _97121_part[0LL];;
				if (((_97521_tok.get()._field_Id != static_cast<jule::U64>(1LLU)) && (_97521_tok.get()._field_Id != static_cast<jule::U64>(26LLU)))) {
					_1a3e12e90_pushErr(_self_, _97521_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					_1a3e132ae_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					goto _iter_next_1a6b33a37;
				};
				{ jule::Slice<jule::Ptr<_2097d15d8_Token>> &__jule_push_dest = _97017_selectors; __jule_push_dest.push(_97521_tok); };
			}
			_iter_next_1a6b33a37:;
			++it;
			goto _iter_begin_1a6b33a37;
		}
		_iter_end_1a6b33a37:;
	};
	return _97017_selectors;;
}



inline void _1a3e1912d_buildBindUseDecl(_1a3e12577_parser* _self_, jule::Ptr<_1acaee634_UseDecl>* _98640_decl, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _98657_tokens) {
	if (((*(_98657_tokens)).len() > 1LL)) {
		_1a3e12e90_pushErr(_self_, (*(_98657_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	jule::Ptr<_2097d15d8_Token> _99013_token = (*(_98657_tokens))[0LL];;
	if (((_99013_token.get()._field_Id != static_cast<jule::U64>(5LLU)) || ((_99013_token.get()._field_Kind[0LL] != '`') && (_99013_token.get()._field_Kind[0LL] != '\"')))) {
		_1a3e12e90_pushErr(_self_, _99013_token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*(_98640_decl)).get()._field_Binded=true;
	(*(_98640_decl)).get()._field_LinkPath=_99013_token.get()._field_Kind.slice(1LL, (_99013_token.get()._field_Kind.len() - 1LL));
}



inline void _1a3e1944c_buildStdUseDecl(_1a3e12577_parser* _self_, jule::Ptr<_1acaee634_UseDecl>* _99939_decl, jule::Slice<jule::Ptr<_2097d15d8_Token>> _99959_tokens) {
	(*(_99939_decl)).get()._field_Std=true;
	jule::Ptr<_2097d15d8_Token> _100217_token = _99959_tokens[0LL];;
	if ((_99959_tokens.len() < 3LL)) {
		_1a3e12e90_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	_99959_tokens=_99959_tokens.slice(2LL);
	_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _100217_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1a6b3b7ed:;
			{
				_1a3e12e90_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1a6b3b875:;
			{
				if ((!_100217_token.get()._field_Kind.equal("}", 1))) {
					_1a3e12e90_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_2097d15d8_Token>> _101921_selectors = nullptr;;
				({
					__jule_tuple_sx_2097d15d8_Token__jule_tuple_sx_2097d15d8_Token __jule_assign_result = _1a3e109b5_rangeLast(&(_99959_tokens));
					_99959_tokens = __jule_assign_result.__jule_result_arg0;
					_101921_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*(_99939_decl)).get()._field_Selected=_1a3e18d0e_getUseDeclSelectors(_self_, _101921_selectors);
				if ((_99959_tokens.len() == 0LL)) {
					_1a3e12e90_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
				if ((_100217_token.get()._field_Id != static_cast<jule::U64>(21LLU))) {
					_1a3e12e90_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL, (_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_1a3e12e90_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1a6b3b8ec:;
			{
				if ((!_100217_token.get()._field_Kind.equal("*", 1))) {
					_1a3e12e90_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL, (_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_1a3e12e90_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
				if ((_100217_token.get()._field_Id != static_cast<jule::U64>(21LLU))) {
					_1a3e12e90_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL, (_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_1a3e12e90_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*(_99939_decl)).get()._field_Full=true;
			}
		}
		_match_end_1a6b3b776:;
	};
	(*(_99939_decl)).get()._field_LinkPath=(jule::Str("std::", 5) + _1a3e120e3_tokstoa(&(_99959_tokens)));
}



inline void _1a3e1976b_buildIdentUseDecl(_1a3e12577_parser* _self_, jule::Ptr<_1acaee634_UseDecl>* _106141_decl, jule::Slice<jule::Ptr<_2097d15d8_Token>> _106161_tokens) {
	(*(_106141_decl)).get()._field_Std=false;
	jule::Ptr<_2097d15d8_Token> _106417_token = _106161_tokens[(_106161_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _106417_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1a6b45076:;
			{
				_1a3e12e90_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1a6b455a4:;
			{
				if ((!_106417_token.get()._field_Kind.equal("}", 1))) {
					_1a3e12e90_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_2097d15d8_Token>> _107521_selectors = nullptr;;
				({
					__jule_tuple_sx_2097d15d8_Token__jule_tuple_sx_2097d15d8_Token __jule_assign_result = _1a3e109b5_rangeLast(&(_106161_tokens));
					_106161_tokens = __jule_assign_result.__jule_result_arg0;
					_107521_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*(_106141_decl)).get()._field_Selected=_1a3e18d0e_getUseDeclSelectors(_self_, _107521_selectors);
				if ((_106161_tokens.len() == 0LL)) {
					_1a3e12e90_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106417_token=_106161_tokens[(_106161_tokens.len() - 1LL)];
				if ((_106417_token.get()._field_Id != static_cast<jule::U64>(21LLU))) {
					_1a3e12e90_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL, (_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_1a3e12e90_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1a6b4574c:;
			{
				if ((!_106417_token.get()._field_Kind.equal("*", 1))) {
					_1a3e12e90_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL, (_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_1a3e12e90_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106417_token=_106161_tokens[(_106161_tokens.len() - 1LL)];
				if ((_106417_token.get()._field_Id != static_cast<jule::U64>(21LLU))) {
					_1a3e12e90_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL, (_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_1a3e12e90_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*(_106141_decl)).get()._field_Full=true;
			}
		}
		_match_end_1a6b4554e:;
	};
	(*(_106141_decl)).get()._field_LinkPath=_1a3e120e3_tokstoa(&(_106161_tokens));
}



inline void _1a3e19a8a_parseUseDecl(_1a3e12577_parser* _self_, jule::Ptr<_1acaee634_UseDecl>* _112436_decl, jule::Slice<jule::Ptr<_2097d15d8_Token>> _112456_tokens) {
	if ((*(_112436_decl)).get()._field_Binded) {
		_1a3e1912d_buildBindUseDecl(_self_, _112436_decl, &(_112456_tokens));
		return;;
	};
	jule::Ptr<_2097d15d8_Token> _113017_token = _112456_tokens[0LL];;
	if ((_113017_token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a3e12e90_pushErr(_self_, _113017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a3e132ae_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	if (((_112456_tokens.len() > 2LL) && (_112456_tokens[1LL].get()._field_Id == static_cast<jule::U64>(11LLU)))) {
		(*(_112436_decl)).get()._field_Alias=_113017_token.get()._field_Kind;
		if ((_112456_tokens[2LL].get()._field_Id != static_cast<jule::U64>(1LLU))) {
			_1a3e12e90_pushErr(_self_, _113017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			_1a3e132ae_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			return;;
		};
		_112456_tokens=_112456_tokens.slice(2LL);
		_113017_token=_112456_tokens[0LL];
	};
	;
	{
		
		if (_113017_token.get()._field_Kind.equal("std", 3)) {
			_case_begin_1a6b50900:;
			{
				_1a3e1944c_buildStdUseDecl(_self_, _112436_decl, _112456_tokens);
			}
		}
		else {
			_case_begin_1a6b52308:;
			{
				_1a3e1976b_buildIdentUseDecl(_self_, _112436_decl, _112456_tokens);
			}
		}
		_match_end_1a6b52292:;
	};
}



inline jule::Ptr<_1acaee634_UseDecl> _1a3e19e42_buildUseDecl(_1a3e12577_parser* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>> _115835_tokens, jule::Bool _115853_binded) {
	jule::Ptr<_1acaee634_UseDecl> _115917_decl = jule::new_ptr<_1acaee634_UseDecl>(_1acaee634_UseDecl{._field_Token=_115835_tokens[0LL], ._field_Binded=_115853_binded, });;
	if ((_115835_tokens.len() < 2LL)) {
		_1a3e12e90_pushErr(_self_, _115917_decl.get()._field_Token, jule::Str("missing path of use statement", 29), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_115835_tokens=_115835_tokens.slice(1LL);
	_1a3e19a8a_parseUseDecl(_self_, &(_115917_decl), _115835_tokens);
	return _115917_decl;;
}



inline jule::Ptr<_1acad72cb_TypeDecl> _1a3e1a2e9_buildTypeEnumItemKind(jule::Ptr<_1a3e12577_parser> _self_, jule::I64* _117246_i, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _117259_tokens) {
	jule::I64 _117317_braceN = 0LL;;
	jule::I64 _117413_exprStart = (*(_117246_i));;
	for (; ((*(_117246_i)) < (*(_117259_tokens)).len()); ((*(_117246_i)))++) {
		{
			jule::Ptr<_2097d15d8_Token> _117617_t = (*(_117259_tokens))[(*(_117246_i))];;
			if ((_117617_t.get()._field_Id == static_cast<jule::U64>(2LLU))) {
				{
					auto &_match_expr{ _117617_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1a6b5ae49:;
						{
							(_117317_braceN)++;
							goto _iter_next_1a6b5a773;
						}
					}
					else {
						_case_begin_1a6b5b80c:;
						{
							(_117317_braceN)--;
						}
					}
					_match_end_1a6b5b5ed:;
				};
			};
			if ((_117317_braceN > 0LL)) {
				goto _iter_next_1a6b5a773;
			};
			if (((_117617_t.get()._field_Id == static_cast<jule::U64>(7LLU)) || (((*(_117246_i)) + 1LL) >= (*(_117259_tokens)).len()))) {
				jule::Slice<jule::Ptr<_2097d15d8_Token>> _119225_kindTokens = nullptr;;
				if ((_117617_t.get()._field_Id == static_cast<jule::U64>(7LLU))) {
					_119225_kindTokens=(*(_117259_tokens)).slice(_117413_exprStart, (*(_117246_i)));
				} else {
					_119225_kindTokens=(*(_117259_tokens)).slice(_117413_exprStart);
				};
				jule::I64 _119825_j = 0LL;;
				jule::Ptr<_1acad72cb_TypeDecl> _119926_kind;;
				({
					__jule_tuple_x_1acad72cb_TypeDecl__jule_tuple_bool __jule_assign_result = _1a3e148a9_buildType(_self_, &(_119225_kindTokens), (&(_119825_j)), true);
					_119926_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_119825_j < _119225_kindTokens.len())) {
					_1a3e12e90_pushErr(_self_.ptr(), _119225_kindTokens[_119825_j], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				return _119926_kind;;
			};
		}
	_iter_next_1a6b5a773:;
	}
	_iter_end_1a6b5a773:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1acb00da5_TypeEnumItemDecl>> _1a3e1a607_buildTypeEnumItems(jule::Ptr<_1a3e12577_parser> _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _120943_tokens) {
	jule::Slice<jule::Ptr<_1acb00da5_TypeEnumItemDecl>> _121017_items = jule::Slice<jule::Ptr<_1acb00da5_TypeEnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _121117_i = 0LL;;
	for (; (_121117_i < (*(_120943_tokens)).len()); (_121117_i)++) {
		{
			jule::Ptr<_2097d15d8_Token> _121321_t = (*(_120943_tokens))[_121117_i];;
			jule::Ptr<_1acb00da5_TypeEnumItemDecl> _121421_item = jule::new_ptr<_1acb00da5_TypeEnumItemDecl>();;
			_121421_item.get()._field_Token=_121321_t;
			if (((_121421_item.get()._field_Token.get()._field_Id == static_cast<jule::U64>(1LLU)) && (((*(_120943_tokens)).len() - _121117_i) > 2LL))) {
				_121321_t=(*(_120943_tokens))[(_121117_i + 1LL)];
				if ((_121321_t.get()._field_Id == static_cast<jule::U64>(10LLU))) {
					_121421_item.get()._field_Ident=_121421_item.get()._field_Token.get()._field_Kind;
					_121117_i+=2LL;
					if (((_121117_i >= (*(_120943_tokens)).len()) || ((*(_120943_tokens))[_121117_i].get()._field_Id == static_cast<jule::U64>(7LLU)))) {
						_1a3e12e90_pushErr(_self_.ptr(), _121321_t, jule::Str("type missing", 12), jule::Slice<jule::Any>());
						goto _iter_next_1a6b60e93;
					};
				};
			};
			_121421_item.get()._field_Kind=_1a3e1a2e9_buildTypeEnumItemKind(_self_, &(_121117_i), _120943_tokens);
			{ jule::Slice<jule::Ptr<_1acb00da5_TypeEnumItemDecl>> &__jule_push_dest = _121017_items; __jule_push_dest.push(_121421_item); };
		}
	_iter_next_1a6b60e93:;
	}
	_iter_end_1a6b60e93:;;
	return _121017_items;;
}



inline jule::Ptr<_1acb014b0_TypeEnumDecl> _1a3e1a915_buildTypeEnumDecl(jule::Ptr<_1a3e12577_parser> _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _123342_tokens) {
	jule::I64 _123417_i = 1LL;;
	jule::Ptr<_1acb014b0_TypeEnumDecl> _123517_e = jule::new_ptr<_1acb014b0_TypeEnumDecl>(_1acb014b0_TypeEnumDecl{._field_Token=(*(_123342_tokens))[_123417_i], });;
	if ((_123517_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a3e12e90_pushErr(_self_.ptr(), _123517_e.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a3e132ae_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_123517_e.get()._field_Ident=_123517_e.get()._field_Token.get()._field_Kind;
	_123417_i+=3LL;
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _124517_itemTokens = _1a3e1071d_range(&(_123417_i), jule::Str("{", 1), jule::Str("}", 1), _123342_tokens);;
	if ((_124517_itemTokens == nullptr)) {
		_1a3e12863_stop(_self_.ptr());
		_1a3e12e90_pushErr(_self_.ptr(), _123517_e.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a3e132ae_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _123517_e;;
	} else if ((_123417_i < (*(_123342_tokens)).len())) {
		_1a3e12e90_pushErr(_self_.ptr(), (*(_123342_tokens))[_123417_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_123517_e.get()._field_Public=_1a3e22235_isPub(&(_123517_e.get()._field_Ident));
	_123517_e.get()._field_End=(*(_123342_tokens))[(_123417_i - 1LL)];
	_123517_e.get()._field_Items=_1a3e1a607_buildTypeEnumItems(_self_, &(_124517_itemTokens));
	return _123517_e;;
}



inline jule::Ptr<_1acadb456_Expr> _1a3e1acbc_buildEnumItemExpr(jule::Ptr<_1a3e12577_parser> _self_, jule::I64* _126042_i, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _126055_tokens) {
	jule::I64 _126117_braceN = 0LL;;
	jule::I64 _126213_exprStart = (*(_126042_i));;
	for (; ((*(_126042_i)) < (*(_126055_tokens)).len()); ((*(_126042_i)))++) {
		{
			jule::Ptr<_2097d15d8_Token> _126417_t = (*(_126055_tokens))[(*(_126042_i))];;
			if ((_126417_t.get()._field_Id == static_cast<jule::U64>(2LLU))) {
				{
					auto &_match_expr{ _126417_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1a6b6ab7e:;
						{
							(_126117_braceN)++;
							goto _iter_next_1a6b6a4a8;
						}
					}
					else {
						_case_begin_1a6b6b542:;
						{
							(_126117_braceN)--;
						}
					}
					_match_end_1a6b6b333:;
				};
			};
			if ((_126117_braceN > 0LL)) {
				goto _iter_next_1a6b6a4a8;
			};
			if (((_126417_t.get()._field_Id == static_cast<jule::U64>(7LLU)) || (((*(_126042_i)) + 1LL) >= (*(_126055_tokens)).len()))) {
				jule::Slice<jule::Ptr<_2097d15d8_Token>> _128025_exprTokens = nullptr;;
				if ((_126417_t.get()._field_Id == static_cast<jule::U64>(7LLU))) {
					_128025_exprTokens=(*(_126055_tokens)).slice(_126213_exprStart, (*(_126042_i)));
				} else {
					_128025_exprTokens=(*(_126055_tokens)).slice(_126213_exprStart);
				};
				return _1a3e135bc_buildExpr(_self_, &(_128025_exprTokens));;
			};
		}
	_iter_next_1a6b6a4a8:;
	}
	_iter_end_1a6b6a4a8:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1acaeeaa7_EnumItemDecl>> _1a3e1b0ca_buildEnumItems(jule::Ptr<_1a3e12577_parser> _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _129239_tokens) {
	jule::Slice<jule::Ptr<_1acaeeaa7_EnumItemDecl>> _129317_items = jule::Slice<jule::Ptr<_1acaeeaa7_EnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _129417_i = 0LL;;
	for (; (_129417_i < (*(_129239_tokens)).len()); (_129417_i)++) {
		{
			jule::Ptr<_2097d15d8_Token> _129621_t = (*(_129239_tokens))[_129417_i];;
			jule::Ptr<_1acaeeaa7_EnumItemDecl> _129721_item = jule::new_ptr<_1acaeeaa7_EnumItemDecl>();;
			_129721_item.get()._field_Token=_129621_t;
			if ((_129721_item.get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
				_1a3e12e90_pushErr(_self_.ptr(), _129721_item.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				_1a3e132ae_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			};
			_129721_item.get()._field_Ident=_129721_item.get()._field_Token.get()._field_Kind;
			if ((((_129417_i + 1LL) >= (*(_129239_tokens)).len()) || ((*(_129239_tokens))[(_129417_i + 1LL)].get()._field_Id == static_cast<jule::U64>(7LLU)))) {
				if (((_129417_i + 1LL) < (*(_129239_tokens)).len())) {
					(_129417_i)++;
				};
				{ jule::Slice<jule::Ptr<_1acaeeaa7_EnumItemDecl>> &__jule_push_dest = _129317_items; __jule_push_dest.push(_129721_item); };
				goto _iter_next_1a6b6ea40;
			};
			(_129417_i)++;
			_129621_t=(*(_129239_tokens))[_129417_i];
			(_129417_i)++;
			if ((_129621_t.get()._field_Id != static_cast<jule::U64>(10LLU))) {
				_1a3e12e90_pushErr(_self_.ptr(), _129621_t, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				_1a3e132ae_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\" for assignment", 33), jule::Slice<jule::Any>());
				goto _iter_next_1a6b6ea40;
			};
			if (((_129417_i >= (*(_129239_tokens)).len()) || ((*(_129239_tokens))[_129417_i].get()._field_Id == static_cast<jule::U64>(7LLU)))) {
				_1a3e12e90_pushErr(_self_.ptr(), _129621_t, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
				goto _iter_next_1a6b6ea40;
			};
			_129721_item.get()._field_Expr=_1a3e1acbc_buildEnumItemExpr(_self_, &(_129417_i), _129239_tokens);
			{ jule::Slice<jule::Ptr<_1acaeeaa7_EnumItemDecl>> &__jule_push_dest = _129317_items; __jule_push_dest.push(_129721_item); };
		}
	_iter_next_1a6b6ea40:;
	}
	_iter_end_1a6b6ea40:;;
	return _129317_items;;
}



inline jule::Ptr<_1acb005d0_EnumDecl> _1a3e1b3d8_buildEnumDecl(jule::Ptr<_1a3e12577_parser> _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _132938_tokens) {
	if (((*(_132938_tokens)).len() < 3LL)) {
		_1a3e12e90_pushErr(_self_.ptr(), (*(_132938_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1acb005d0_EnumDecl> _133417_e = jule::new_ptr<_1acb005d0_EnumDecl>(_1acb005d0_EnumDecl{._field_Token=(*(_132938_tokens))[1LL], });;
	if ((_133417_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a3e12e90_pushErr(_self_.ptr(), _133417_e.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a3e132ae_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_133417_e.get()._field_Ident=_133417_e.get()._field_Token.get()._field_Kind;
	jule::I64 _134217_i = 2LL;;
	if (((*(_132938_tokens))[_134217_i].get()._field_Id == static_cast<jule::U64>(10LLU))) {
		(_134217_i)++;
		if ((_134217_i >= (*(_132938_tokens)).len())) {
			_1a3e12e90_pushErr(_self_.ptr(), (*(_132938_tokens))[(_134217_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return _133417_e;;
		};
		({
			__jule_tuple_x_1acad72cb_TypeDecl__jule_tuple_bool __jule_assign_result = _1a3e148a9_buildType(_self_, _132938_tokens, (&(_134217_i)), true);
			_133417_e.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_134217_i >= (*(_132938_tokens)).len())) {
			_1a3e12863_stop(_self_.ptr());
			_1a3e12e90_pushErr(_self_.ptr(), _133417_e.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
			_1a3e132ae_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
			return _133417_e;;
		};
	} else {
		_133417_e.get()._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _135917_itemTokens = _1a3e1071d_range(&(_134217_i), jule::Str("{", 1), jule::Str("}", 1), _132938_tokens);;
	if ((_135917_itemTokens == nullptr)) {
		_1a3e12863_stop(_self_.ptr());
		_1a3e12e90_pushErr(_self_.ptr(), _133417_e.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a3e132ae_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _133417_e;;
	} else if ((_134217_i < (*(_132938_tokens)).len())) {
		_1a3e12e90_pushErr(_self_.ptr(), (*(_132938_tokens))[_134217_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_133417_e.get()._field_Public=_1a3e22235_isPub(&(_133417_e.get()._field_Ident));
	_133417_e.get()._field_End=(*(_132938_tokens))[(_134217_i - 1LL)];
	_133417_e.get()._field_Items=_1a3e1b0ca_buildEnumItems(_self_, &(_135917_itemTokens));
	return _133417_e;;
}



inline jule::Any _1a3e1b6e6_buildNodeEnumDecl(jule::Ptr<_1a3e12577_parser> _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _137442_tokens) {
	if ((((*(_137442_tokens)).len() > 3LL) && ((*(_137442_tokens))[2LL].get()._field_Id == static_cast<jule::U64>(10LLU)))) {
		if (((*(_137442_tokens))[3LL].get()._field_Id == static_cast<jule::U64>(9LLU))) {
			return jule::Any(_1a3e1a915_buildTypeEnumDecl(_self_, _137442_tokens), &__jule_any_type18);;
		};
	};
	return jule::Any(_1a3e1b3d8_buildEnumDecl(_self_, _137442_tokens), &__jule_any_type17);;
}



inline jule::Ptr<_1acb01724_FieldDecl> _1a3e1ba04_buildField(jule::Ptr<_1a3e12577_parser> _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>> _138334_tokens) {
	jule::Ptr<_1acb01724_FieldDecl> _138417_f = jule::new_ptr<_1acb01724_FieldDecl>();;
	_138417_f.get()._field_Mutable=(_138334_tokens[0LL].get()._field_Id == static_cast<jule::U64>(34LLU));
	if (_138417_f.get()._field_Mutable) {
		if ((_138334_tokens.len() == 1LL)) {
			_1a3e12e90_pushErr(_self_.ptr(), _138334_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_138334_tokens=_138334_tokens.slice(1LL);
	};
	_138417_f.get()._field_Token=_138334_tokens[0LL];
	if ((_138417_f.get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a3e12e90_pushErr(_self_.ptr(), _138417_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a3e132ae_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_138417_f.get()._field_Ident=_138417_f.get()._field_Token.get()._field_Kind;
	if ((_138334_tokens.len() == 1LL)) {
		_1a3e12e90_pushErr(_self_.ptr(), _138334_tokens[0LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_138334_tokens[1LL].get()._field_Id != static_cast<jule::U64>(10LLU))) {
		_1a3e12e90_pushErr(_self_.ptr(), _138334_tokens[1LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_138334_tokens=_138334_tokens.slice(2LL);
	jule::I64 _141217_i = 0LL;;
	({
		__jule_tuple_x_1acad72cb_TypeDecl__jule_tuple_bool __jule_assign_result = _1a3e148a9_buildType(_self_, &(_138334_tokens), (&(_141217_i)), true);
		_138417_f.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_141217_i < _138334_tokens.len())) {
		jule::Ptr<_2097d15d8_Token> _141517_token = _138334_tokens[_141217_i];;
		if (((_141517_token.get()._field_Id != static_cast<jule::U64>(6LLU)) || (!_141517_token.get()._field_Kind.equal("=", 1)))) {
			_1a3e12e90_pushErr(_self_.ptr(), _138334_tokens[_141217_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_141217_i)++;
		if ((_141217_i >= _138334_tokens.len())) {
			_1a3e12e90_pushErr(_self_.ptr(), _141517_token, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_138334_tokens=_138334_tokens.slice(_141217_i);
		_138417_f.get()._field_Default=_1a3e135bc_buildExpr(_self_, &(_138334_tokens));
	};
	_138417_f.get()._field_Public=_1a3e22235_isPub(&(_138417_f.get()._field_Ident));
	return _138417_f;;
}



inline jule::Slice<jule::Ptr<_1acb01724_FieldDecl>> _1a3e1bd12_buildStructDeclFields(jule::Ptr<_1a3e12577_parser> _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>> _143245_tokens) {
	jule::Slice<jule::Ptr<_1acb01724_FieldDecl>> _143317_fields = nullptr;;
	jule::Slice<jule::Ptr<_1a3de5538_stmt>> _143417_stmts = _1a3de58ce_splitStmts(&(_143245_tokens));;
	{
		auto expr = &(_143417_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6b8884a:;
		if (it != expr_end) {
			jule::Ptr<_1a3de5538_stmt> _143521_stmt = *it;
			{
				_143245_tokens=_143521_stmt.get()._field_tokens;
				jule::Ptr<_1acb01724_FieldDecl> _143721_f = _1a3e1ba04_buildField(_self_, _143245_tokens);;
				{ jule::Slice<jule::Ptr<_1acb01724_FieldDecl>> &__jule_push_dest = _143317_fields; __jule_push_dest.push(_143721_f); };
			}
			_iter_next_1a6b8884a:;
			++it;
			goto _iter_begin_1a6b8884a;
		}
		_iter_end_1a6b8884a:;
	};
	return _143317_fields;;
}



inline jule::Ptr<_1acb02071_StructDecl> _1a3e1c120_buildStructDecl(jule::Ptr<_1a3e12577_parser> _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _144340_tokens) {
	if (((*(_144340_tokens)).len() < 3LL)) {
		_1a3e12e90_pushErr(_self_.ptr(), (*(_144340_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _144917_i = 1LL;;
	jule::Ptr<_1acb02071_StructDecl> _145017_s = jule::new_ptr<_1acb02071_StructDecl>(_1acb02071_StructDecl{._field_Token=(*(_144340_tokens))[_144917_i], });;
	if ((_145017_s.get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a3e12e90_pushErr(_self_.ptr(), _145017_s.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a3e132ae_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_144917_i)++;
	if ((_144917_i >= (*(_144340_tokens)).len())) {
		_1a3e12e90_pushErr(_self_.ptr(), (*(_144340_tokens))[_144917_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return _145017_s;;
	};
	_145017_s.get()._field_Ident=_145017_s.get()._field_Token.get()._field_Kind;
	jule::Ptr<_2097d15d8_Token> _146413_errorToken = (*(_144340_tokens))[_144917_i];;
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _146517_genericsTokens = _1a3e1071d_range(&(_144917_i), jule::Str("[", 1), jule::Str("]", 1), _144340_tokens);;
	if ((_146517_genericsTokens != nullptr)) {
		_145017_s.get()._field_Generics=_1a3e16191_buildGenerics(_self_, &(_146517_genericsTokens), &(_146413_errorToken));
	};
	if ((_144917_i >= (*(_144340_tokens)).len())) {
		_1a3e12e90_pushErr(_self_.ptr(), (*(_144340_tokens))[(_144917_i - 1LL)], jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a3e132ae_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _145017_s;;
	};
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _147517_bodyTokens = _1a3e1071d_range(&(_144917_i), jule::Str("{", 1), jule::Str("}", 1), _144340_tokens);;
	if ((_147517_bodyTokens == nullptr)) {
		_1a3e12863_stop(_self_.ptr());
		_1a3e12e90_pushErr(_self_.ptr(), _145017_s.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a3e132ae_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _145017_s;;
	};
	if ((_144917_i < (*(_144340_tokens)).len())) {
		_1a3e12e90_pushErr(_self_.ptr(), (*(_144340_tokens))[_144917_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_145017_s.get()._field_Public=_1a3e22235_isPub(&(_145017_s.get()._field_Ident));
	_145017_s.get()._field_Fields=_1a3e1bd12_buildStructDeclFields(_self_, _147517_bodyTokens);
	_145017_s.get()._field_End=(*(_144340_tokens))[(_144917_i - 1LL)];
	return _145017_s;;
}



inline void _1a3e1c395_checkMethodReceiver(_1a3e12577_parser* _self_, jule::Ptr<_1acae8908_FnDecl>* _149139_f) {
	if ((*(_149139_f)).get()._field_Statically) {
		if ((((*(_149139_f)).get()._field_Params.len() > 0LL) && _1acae794b_IsSelf((*(_149139_f)).get()._field_Params[0LL].ptr()))) {
			_1a3e12e90_pushErr(_self_, (*(_149139_f)).get()._field_Token, jule::Str("static functions cannot have receiver parameter", 47), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*(_149139_f)).get()._field_Params.len() == 0LL)) {
		_1a3e12e90_pushErr(_self_, (*(_149139_f)).get()._field_Token, jule::Str("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1acae75d8_ParamDecl> _150313_param = (*(_149139_f)).get()._field_Params[0LL];;
	if ((!(_1acae794b_IsSelf(_150313_param.ptr())))) {
		_1a3e12e90_pushErr(_self_, (*(_149139_f)).get()._field_Token, jule::Str("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1a3e1c6b4_buildTraitBody(jule::Ptr<_1a3e12577_parser> _self_, jule::Ptr<_1acb02747_TraitDecl>* _151039_t, jule::Slice<jule::Ptr<_2097d15d8_Token>> _151058_tokens) {
	jule::Slice<jule::Ptr<_1a3de5538_stmt>> _151117_stmts = _1a3de58ce_splitStmts(&(_151058_tokens));;
	{
		auto expr = &(_151117_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6b9625e:;
		if (it != expr_end) {
			jule::Ptr<_1a3de5538_stmt> _151221_stmt = *it;
			{
				_151058_tokens=_151221_stmt.get()._field_tokens;
				if ((_151058_tokens.len() == 0LL)) {
					goto _iter_next_1a6b9625e;
				};
				{
					auto &_match_expr{ _151058_tokens[0LL].get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1a6b989c0:;
						{
							jule::Ptr<_1acae8908_FnDecl> _151925_f = _1a3e18a01_buildFn(_self_, &(_151058_tokens), true, true);;
							if ((_151925_f == nullptr)) {
								goto _match_end_1a6b9735e;
							};
							_1a3e1c395_checkMethodReceiver(_self_.ptr(), &(_151925_f));
							if ((_151925_f.get()._field_Generics.len() > 0LL)) {
								_1a3e12e90_pushErr(_self_.ptr(), _151925_f.get()._field_Token, jule::Str("trait methods cannot have generics", 34), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1acae8908_FnDecl>> &__jule_push_dest = (*(_151039_t)).get()._field_Methods; __jule_push_dest.push(_151925_f); };
						}
					}
					else {
						_case_begin_1a6b96ca9:;
						{
							jule::I64 _152925_i = 0LL;;
							jule::Ptr<_1acad72cb_TypeDecl> _153026_ti;;
							jule::Bool _153030_ok = false;;
							({
								__jule_tuple_x_1acad72cb_TypeDecl__jule_tuple_bool __jule_assign_result = _1a3e148a9_buildType(_self_, &(_151058_tokens), (&(_152925_i)), true);
								_153026_ti = __jule_assign_result.__jule_result_arg0;
								_153030_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_153030_ok))) {
								goto _match_end_1a6b9735e;
							};
							if ((_152925_i < _151058_tokens.len())) {
								_1a3e12e90_pushErr(_self_.ptr(), _151058_tokens[_152925_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1acad72cb_TypeDecl>> &__jule_push_dest = (*(_151039_t)).get()._field_Inherits; __jule_push_dest.push(_153026_ti); };
						}
					}
					_match_end_1a6b9735e:;
				};
			}
			_iter_next_1a6b9625e:;
			++it;
			goto _iter_begin_1a6b9625e;
		}
		_iter_end_1a6b9625e:;
	};
}



inline jule::Ptr<_1acb02747_TraitDecl> _1a3e1c9c2_buildTraitDecl(jule::Ptr<_1a3e12577_parser> _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _154239_tokens) {
	if (((*(_154239_tokens)).len() < 3LL)) {
		_1a3e12e90_pushErr(_self_.ptr(), (*(_154239_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1acb02747_TraitDecl> _154717_t = jule::new_ptr<_1acb02747_TraitDecl>(_1acb02747_TraitDecl{._field_Token=(*(_154239_tokens))[1LL], });;
	if ((_154717_t.get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a3e12e90_pushErr(_self_.ptr(), _154717_t.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a3e132ae_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_154717_t.get()._field_Ident=_154717_t.get()._field_Token.get()._field_Kind;
	jule::I64 _155517_i = 2LL;;
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _155617_bodyTokens = _1a3e1071d_range(&(_155517_i), jule::Str("{", 1), jule::Str("}", 1), _154239_tokens);;
	if ((_155617_bodyTokens == nullptr)) {
		_1a3e12863_stop(_self_.ptr());
		_1a3e12e90_pushErr(_self_.ptr(), _154717_t.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a3e132ae_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_155517_i < (*(_154239_tokens)).len())) {
		_1a3e12e90_pushErr(_self_.ptr(), (*(_154239_tokens))[_155517_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_154717_t.get()._field_Public=_1a3e22235_isPub(&(_154717_t.get()._field_Ident));
	_1a3e1c6b4_buildTraitBody(_self_, &(_154717_t), _155617_bodyTokens);
	_154717_t.get()._field_End=(*(_154239_tokens))[(_155517_i - 1LL)];
	return _154717_t;;
}



inline jule::Ptr<_1acae8908_FnDecl> _1a3e1ccd0_buildBindFn(jule::Ptr<_1a3e12577_parser> _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>> _157235_tokens) {
	_157235_tokens=_157235_tokens.slice(1LL);
	jule::Ptr<_1acae8908_FnDecl> _157417_f = _1a3e18a01_buildFn(_self_, &(_157235_tokens), false, true);;
	if ((_157417_f != nullptr)) {
		_157417_f.get()._field_Public=false;
		_157417_f.get()._field_Binded=true;
	};
	return _157417_f;;
}



inline jule::Ptr<_1acae98d7_VarDecl> _1a3e1d0dd_buildBindVar(jule::Ptr<_1a3e12577_parser> _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>> _158236_tokens) {
	_158236_tokens=_158236_tokens.slice(1LL);
	jule::Ptr<_1acae98d7_VarDecl> _158417_v = _1a3e159cb_buildVar(_self_, _158236_tokens);;
	if ((_158417_v != nullptr)) {
		_158417_v.get()._field_Public=false;
		_158417_v.get()._field_Binded=true;
		if ((_158417_v.get()._field_Expr != nullptr)) {
			_1a3e12e90_pushErr(_self_.ptr(), _158417_v.get()._field_Token, jule::Str("binded variables cannot have expression", 39), jule::Slice<jule::Any>());
		};
	};
	return _158417_v;;
}



inline jule::Ptr<_1acb02071_StructDecl> _1a3e1d3eb_buildBindStruct(jule::Ptr<_1a3e12577_parser> _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>> _159539_tokens) {
	_159539_tokens=_159539_tokens.slice(1LL);
	jule::Ptr<_1acb02071_StructDecl> _159717_s = _1a3e1c120_buildStructDecl(_self_, &(_159539_tokens));;
	if ((_159717_s != nullptr)) {
		_159717_s.get()._field_Public=false;
		{
			auto expr = &(_159717_s.get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a6ba5b20:;
			if (it != expr_end) {
				jule::Ptr<_1acb01724_FieldDecl> _160025_f = *it;
				{
					_160025_f.get()._field_Public=true;
				}
				_iter_next_1a6ba5b20:;
				++it;
				goto _iter_begin_1a6ba5b20;
			}
			_iter_end_1a6ba5b20:;
		};
		_159717_s.get()._field_Binded=true;
	};
	return _159717_s;;
}



inline jule::Ptr<_1acaed248_TypeAliasDecl> _1a3e1d709_buildBindTypeAlias(jule::Ptr<_1a3e12577_parser> _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>> _160942_tokens) {
	_160942_tokens=_160942_tokens.slice(1LL);
	jule::Ptr<_1acaed248_TypeAliasDecl> _161117_t = _1a3e14bb7_buildTypeAliasDecl(_self_, &(_160942_tokens));;
	if ((_161117_t != nullptr)) {
		_161117_t.get()._field_Public=false;
		_161117_t.get()._field_Binded=true;
	};
	return _161117_t;;
}



inline jule::Ptr<_1acaee634_UseDecl> _1a3e1da17_buildBindUse(jule::Ptr<_1a3e12577_parser> _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>> _161936_tokens) {
	if ((_161936_tokens.len() == 1LL)) {
		_1a3e12e90_pushErr(_self_.ptr(), _161936_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_161936_tokens=_161936_tokens.slice(1LL);
	;
	return _1a3e19e42_buildUseDecl(_self_.ptr(), _161936_tokens, true);;
}



inline jule::Any _1a3e1dd25_buildBind(jule::Ptr<_1a3e12577_parser> _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _163034_tokens) {
	jule::Ptr<_2097d15d8_Token> _163117_token = (*(_163034_tokens))[0LL];;
	if (((*(_163034_tokens)).len() == 1LL)) {
		_1a3e12e90_pushErr(_self_.ptr(), _163117_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_163117_token=(*(_163034_tokens))[1LL];
	{
		auto &_match_expr{ _163117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU) || _match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1a6baa141:;
			{
				return jule::Any(_1a3e1ccd0_buildBindFn(_self_, (*(_163034_tokens))), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(8LLU) || _match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1a6baab14:;
			{
				return jule::Any(_1a3e1d0dd_buildBindVar(_self_, (*(_163034_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1a6baab7a:;
			{
				return jule::Any(_1a3e1d3eb_buildBindStruct(_self_, (*(_163034_tokens))), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1a6baabe1:;
			{
				return jule::Any(_1a3e1d709_buildBindTypeAlias(_self_, (*(_163034_tokens))), &__jule_any_type12);;
			}
		}
		else {
			_case_begin_1a6baaa9d:;
			{
				_1a3e12e90_pushErr(_self_.ptr(), _163117_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a6baaa48:;
	};
	return nullptr;;
}



inline jule::Ptr<_1acae8908_FnDecl> _1a3e1e133_getMethod(jule::Ptr<_1a3e12577_parser> _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _165434_tokens) {
	jule::I64 _165517_i = 0LL;;
	jule::Ptr<_2097d15d8_Token> _165617_token = (*(_165434_tokens))[_165517_i];;
	if ((_165617_token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
		if (((_165517_i + 1LL) >= (*(_165434_tokens)).len())) {
			_1a3e12e90_pushErr(_self_.ptr(), _165617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_165517_i)++;
		_165617_token=(*(_165434_tokens))[_165517_i];
	};
	if ((_165617_token.get()._field_Id == static_cast<jule::U64>(33LLU))) {
		if (((_165517_i + 1LL) >= (*(_165434_tokens)).len())) {
			_1a3e12e90_pushErr(_self_.ptr(), _165617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_165517_i)++;
		_165617_token=(*(_165434_tokens))[_165517_i];
	};
	if ((_165617_token.get()._field_Id != static_cast<jule::U64>(31LLU))) {
		_1a3e12e90_pushErr(_self_.ptr(), _165617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1a3e18a01_buildFn(_self_, _165434_tokens, true, false);;
}



inline void _1a3e1e452_parseImplBody(jule::Ptr<_1a3e12577_parser> _self_, jule::Ptr<_1acb02d52_Impl>* _168338_ipl, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _168355_tokens) {
	jule::Slice<jule::Ptr<_1a3de5538_stmt>> _168417_stmts = _1a3de58ce_splitStmts(_168355_tokens);;
	{
		auto expr = &(_168417_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6bb2511:;
		if (it != expr_end) {
			jule::Ptr<_1a3de5538_stmt> _168521_stmt = *it;
			{
				(*(_168355_tokens))=_168521_stmt.get()._field_tokens;
				jule::Ptr<_2097d15d8_Token> _168721_token = (*(_168355_tokens))[0LL];;
				{
					auto &_match_expr{ _168721_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(37LLU)) {
						_case_begin_1a6bb359a:;
						{
							_1a3e13b50_pushDirective(_self_.ptr(), _1a3e138ca_buildDirective(_self_.ptr(), (*(_168355_tokens))));
							goto _iter_next_1a6bb2511;
						}
					}
					_match_end_1a6bb3545:;
				};
				{
					auto &_match_expr{ _168721_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(8LLU)) {
						_case_begin_1a6bb36ee:;
						{
							jule::Ptr<_1acae98d7_VarDecl> _169625_v = _1a3e159cb_buildVar(_self_, (*(_168355_tokens)));;
							if ((_169625_v != nullptr)) {
								{ jule::Slice<jule::Ptr<_1acae98d7_VarDecl>> &__jule_push_dest = (*(_168338_ipl)).get()._field_Statics; __jule_push_dest.push(_169625_v); };
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(36LLU) || _match_expr == static_cast<jule::U64>(31LLU) || _match_expr == static_cast<jule::U64>(33LLU)) {
						_case_begin_1a6bb4315:;
						{
							jule::Ptr<_1acae8908_FnDecl> _170325_f = _1a3e1e133_getMethod(_self_, _168355_tokens);;
							if ((_170325_f != nullptr)) {
								_1a3e1c395_checkMethodReceiver(_self_.ptr(), &(_170325_f));
								_1a3e1ece3_applyFnMeta(_self_.ptr(), &(_170325_f));
								{ jule::Slice<jule::Ptr<_1acae8908_FnDecl>> &__jule_push_dest = (*(_168338_ipl)).get()._field_Methods; __jule_push_dest.push(_170325_f); };
							};
						}
					}
					else {
						_case_begin_1a6bb3ab7:;
						{
							_1a3e12e90_pushErr(_self_.ptr(), _168721_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							goto _iter_next_1a6bb2511;
						}
					}
					_match_end_1a6bb3a62:;
				};
			}
			_iter_next_1a6bb2511:;
			++it;
			goto _iter_begin_1a6bb2511;
		}
		_iter_end_1a6bb2511:;
	};
}



inline jule::Ptr<_1acb02d52_Impl> _1a3e1e760_buildImpl(jule::Ptr<_1a3e12577_parser> _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>> _171633_tokens) {
	jule::Ptr<_2097d15d8_Token> _171717_token = _171633_tokens[0LL];;
	if ((_171633_tokens.len() < 2LL)) {
		_1a3e12e90_pushErr(_self_.ptr(), _171717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _172317_i = 1LL;;
	jule::Ptr<_1acad72cb_TypeDecl> _172518_base;;
	jule::Bool _172528_ok = false;;
	({
		__jule_tuple_x_1acad72cb_TypeDecl__jule_tuple_bool __jule_assign_result = _1a3e148a9_buildType(_self_, &(_171633_tokens), (&(_172317_i)), true);
		_172518_base = __jule_assign_result.__jule_result_arg0;
		_172528_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_172528_ok))) {
		return nullptr;;
	};
	if ((_172317_i >= _171633_tokens.len())) {
		_1a3e12e90_pushErr(_self_.ptr(), _171717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1acb02d52_Impl> _173417_ipl = jule::new_ptr<_1acb02d52_Impl>(_1acb02d52_Impl{._field_Base=_172518_base, });;
	_171717_token=_171633_tokens[_172317_i];
	if ((_171717_token.get()._field_Id != static_cast<jule::U64>(11LLU))) {
		if (((_171717_token.get()._field_Id == static_cast<jule::U64>(2LLU)) && _171717_token.get()._field_Kind.equal("{", 1))) {
			({
				jule::Ptr<_1acad72cb_TypeDecl> ___jule_assign_arg = _173417_ipl.get()._field_Dest;
				jule::Ptr<_1acad72cb_TypeDecl> _1___jule_assign_arg = _173417_ipl.get()._field_Base;
				_173417_ipl.get()._field_Base = ___jule_assign_arg;
				_173417_ipl.get()._field_Dest = _1___jule_assign_arg;
			});
			goto _julec_label_body;
		};
		_1a3e12863_stop(_self_.ptr());
		_1a3e12e90_pushErr(_self_.ptr(), _171717_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a3e132ae_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_172317_i)++;
	if ((_172317_i >= _171633_tokens.len())) {
		_1a3e12863_stop(_self_.ptr());
		_1a3e12e90_pushErr(_self_.ptr(), _171717_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a3e132ae_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1acad72cb_TypeDecl__jule_tuple_bool __jule_assign_result = _1a3e148a9_buildType(_self_, &(_171633_tokens), (&(_172317_i)), true);
		_173417_ipl.get()._field_Dest = __jule_assign_result.__jule_result_arg0;
		_172528_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_172528_ok))) {
		return nullptr;;
	};
	if ((_172317_i >= _171633_tokens.len())) {
		_1a3e12863_stop(_self_.ptr());
		_1a3e12e90_pushErr(_self_.ptr(), _171717_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a3e132ae_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_body:;
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _177217_bodyTokens = _1a3e1071d_range(&(_172317_i), jule::Str("{", 1), jule::Str("}", 1), &(_171633_tokens));;
	if ((_177217_bodyTokens == nullptr)) {
		_1a3e12863_stop(_self_.ptr());
		_1a3e12e90_pushErr(_self_.ptr(), _171717_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a3e132ae_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_172317_i < _171633_tokens.len())) {
		_1a3e12e90_pushErr(_self_.ptr(), _171633_tokens[_172317_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_173417_ipl.get()._field_End=_171633_tokens[(_172317_i - 1LL)];
	_1a3e1e452_parseImplBody(_self_, &(_173417_ipl), &(_177217_bodyTokens));
	return _173417_ipl;;
}



inline jule::Any _1a3e1ea6d_buildNodeData(jule::Ptr<_1a3e12577_parser> _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _178738_tokens) {
	jule::Ptr<_2097d15d8_Token> _178817_token = (*(_178738_tokens))[0LL];;
	{
		auto &_match_expr{ _178817_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU) || _match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1a6bc2730:;
			{
				jule::Ptr<_1acae8908_FnDecl> _179221_f = _1a3e18a01_buildFn(_self_, _178738_tokens, false, false);;
				if ((_179221_f != nullptr)) {
					_179221_f.get()._field_Global=true;
				};
				return jule::Any(_179221_f, &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(8LLU) || _match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1a6bc3555:;
			{
				return jule::Any(_1a3e159cb_buildVar(_self_, (*(_178738_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1a6bc35bb:;
			{
				return jule::Any(_1a3e14bb7_buildTypeAliasDecl(_self_, _178738_tokens), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1a6bc2d07:;
			{
				return _1a3e1b6e6_buildNodeEnumDecl(_self_, _178738_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1a6bc2d6d:;
			{
				return jule::Any(_1a3e1c120_buildStructDecl(_self_, _178738_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1a6bc2dd4:;
			{
				return jule::Any(_1a3e1c9c2_buildTraitDecl(_self_, _178738_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_1a6bc2e4a:;
			{
				return jule::Any(_1a3e1e760_buildImpl(_self_, (*(_178738_tokens))), &__jule_any_type11);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1a6bc3797:;
			{
				return _1a3e1dd25_buildBind(_self_, _178738_tokens);;
			}
		}
		else {
			_case_begin_1a6bc2c6e:;
			{
				_1a3e12e90_pushErr(_self_.ptr(), _178817_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a6bc2ac6:;
	};
}



inline void _1a3e1ece3_applyFnMeta(_1a3e12577_parser* _self_, jule::Ptr<_1acae8908_FnDecl>* _182035_f) {
	(*(_182035_f)).get()._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1a3e20068_applyMeta(_1a3e12577_parser* _self_, _1acaa43b9_Node* _182533_node) {
	{
		auto &_match_expr{ (*(_182533_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1a6bc846c:;
			{
				jule::Ptr<_1acae98d7_VarDecl> _182821_v = (*(_182533_node))._field_Data.cast_ptr<_1acae98d7_VarDecl>(&__jule_any_type16);;
				if ((_182821_v == nullptr)) {
					return;;
				};
				_182821_v.get()._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1a6bc84d3:;
			{
				jule::Ptr<_1acae8908_FnDecl> _183521_f = (*(_182533_node))._field_Data.cast_ptr<_1acae8908_FnDecl>(&__jule_any_type14);;
				if ((_183521_f == nullptr)) {
					return;;
				};
				_1a3e1ece3_applyFnMeta(_self_, &(_183521_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1a6bc8549:;
			{
				jule::Ptr<_1acb02071_StructDecl> _184121_sd = (*(_182533_node))._field_Data.cast_ptr<_1acb02071_StructDecl>(&__jule_any_type13);;
				if ((_184121_sd == nullptr)) {
					return;;
				};
				_184121_sd.get()._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_1a6bc825d:;
	};
}



inline void _1a3e202dd_pushUseDecl(jule::Ptr<_1a3e12577_parser> _self_, jule::Ptr<_1acaee634_UseDecl>* _185036_decl) {
	{ jule::Slice<jule::Ptr<_1acaee634_UseDecl>> &__jule_push_dest = _self_.get()._field_ast.get()._field_UseDecls; __jule_push_dest.push((*(_185036_decl))); };
	if ((_self_.get()._field_ast.get()._field_Nodes.len() > 0LL)) {
		_1a3e12e90_pushErr(_self_.ptr(), (*(_185036_decl)).get()._field_Token, jule::Str("use declarations must declared top of source code", 49), jule::Slice<jule::Any>());
		_1a3e132ae_pushSuggestion(_self_.ptr(), jule::Str("move this use declaration to top of source file", 47), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1a3e205eb_pushMetaNodes(jule::Ptr<_1a3e12577_parser> _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _185838_tokens) {
	{
		auto &_match_expr{ (*(_185838_tokens))[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(18LLU)) {
			_case_begin_1a6bcdad2:;
			{
				;
				jule::Ptr<_1acaee634_UseDecl> _186221_decl = _1a3e19e42_buildUseDecl(_self_.ptr(), (*(_185838_tokens)), false);;
				_1a3e202dd_pushUseDecl(_self_, &(_186221_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1a6bcdb59:;
			{
				if ((((*(_185838_tokens)).len() > 1LL) && ((*(_185838_tokens))[1LL].get()._field_Id == static_cast<jule::U64>(18LLU)))) {
					jule::Ptr<_1acaee634_UseDecl> _186725_decl = _1a3e1da17_buildBindUse(_self_, (*(_185838_tokens)));;
					_1a3e202dd_pushUseDecl(_self_, &(_186725_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1a6bcdbd1:;
			{
				_1a3e13b50_pushDirective(_self_.ptr(), _1a3e138ca_buildDirective(_self_.ptr(), (*(_185838_tokens))));
				return true;;
			}
		}
		_match_end_1a6bcda05:;
	};
	return false;;
}



inline _1acaa43b9_Node _1a3e20909_parseNode(jule::Ptr<_1a3e12577_parser> _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _187834_st) {
	_1acaa43b9_Node _187917_node = _1acaa43b9_Node{._field_Token=(*(_187834_st))[0LL], };;
	if (_1a3e205eb_pushMetaNodes(_self_, _187834_st)) {
		return _187917_node;;
	};
	jule::Any _188717_data = _1a3e1ea6d_buildNodeData(_self_, _187834_st);;
	if ((_188717_data == nullptr)) {
		return _187917_node;;
	};
	_187917_node._field_Data=_188717_data;
	_1a3e20068_applyMeta(_self_.ptr(), &(_187917_node));
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1a3e12e90_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag, jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
	_self_.get()._field_directives=nullptr;
	return _187917_node;;
}



inline void _1a3e20b7e_appendNode(jule::Ptr<_1a3e12577_parser> _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _190235_st) {
	if (((*(_190235_st)).len() == 0LL)) {
		return;;
	};
	_1acaa43b9_Node _190617_node = _1a3e20909_parseNode(_self_, _190235_st);;
	if (((_190617_node._field_Data == nullptr) || _1a3e12ac7_stopped(_self_.ptr()))) {
		return;;
	};
	{ jule::Slice<_1acaa43b9_Node> &__jule_push_dest = _self_.get()._field_ast.get()._field_Nodes; __jule_push_dest.push(_190617_node); };
}



inline void _1a3e210e1_removeRange(_1a3e12577_parser* _self_, jule::I64 _191330_i, jule::Str _191338_kind, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _191350_tokens, jule::Slice<jule::I64>* _191373_ranges) {
	jule::Str _191413_close = _1a3e11532_getCloseKindOfBrace(_191338_kind);;
	for (; (_191330_i >= 0LL); (_191330_i)--) {
		{
			jule::Ptr<_2097d15d8_Token> _191617_tok = (*(_191350_tokens))[(*(_191373_ranges))[_191330_i]];;
			if ((_191617_tok.get()._field_Kind != _191413_close)) {
				goto _iter_next_1a6bd7646;
			};
			(*(_191373_ranges))=jule::append((*(_191373_ranges)).slice(0LL, _191330_i),(*(_191373_ranges)).slice((_191330_i + 1LL)));
			goto _iter_end_1a6bd7646;
		}
	_iter_next_1a6bd7646:;
	}
	_iter_end_1a6bd7646:;;
}



inline void _1a3e214a9_pushWrongOrderCloseErr(_1a3e12577_parser* _self_, jule::Ptr<_2097d15d8_Token>* _192542_t, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _192554_tokens, jule::Slice<jule::I64>* _192573_ranges) {
	{
		auto &_match_expr{ (*(_192554_tokens))[(*(_192573_ranges))[((*(_192573_ranges)).len() - 1LL)]].get()._field_Kind };
		
		if (_match_expr == jule::Str("(", 1)) {
			_case_begin_1a6bd9637:;
			{
				_1a3e12e90_pushErr(_self_, (*(_192542_t)), jule::Str("was expected parentheses close", 30), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("{", 1)) {
			_case_begin_1a6bd96ae:;
			{
				_1a3e12e90_pushErr(_self_, (*(_192542_t)), jule::Str("was expected brace close", 24), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("[", 1)) {
			_case_begin_1a6bd9736:;
			{
				_1a3e12e90_pushErr(_self_, (*(_192542_t)), jule::Str("was expected bracket close", 26), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a6bd9516:;
	};
}



inline void _1a3e2191b_pushRangeClose(_1a3e12577_parser* _self_, jule::Ptr<_2097d15d8_Token> _193633_t, jule::Str _193644_left, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _193656_tokens, jule::Slice<jule::I64>* _193679_ranges) {
	jule::I64 _193713_n = (*(_193679_ranges)).len();;
	if ((_193713_n == 0LL)) {
		{
			auto &_match_expr{ _193633_t.get()._field_Kind };
			
			if (_match_expr == jule::Str("]", 1)) {
				_case_begin_1a6bdbe86:;
				{
					_1a3e12e90_pushErr(_self_, _193633_t, jule::Str("extra closed brackets", 21), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str("}", 1)) {
				_case_begin_1a6bdc00d:;
				{
					_1a3e12e90_pushErr(_self_, _193633_t, jule::Str("extra closed braces", 19), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str(")", 1)) {
				_case_begin_1a6bdc085:;
				{
					_1a3e12e90_pushErr(_self_, _193633_t, jule::Str("extra closed parentheses", 24), jule::Slice<jule::Any>());
				}
			}
			_match_end_1a6bdbc55:;
		};
		return;;
	} else if (((*(_193656_tokens))[(*(_193679_ranges))[(_193713_n - 1LL)]].get()._field_Kind != _193644_left)) {
		_1a3e214a9_pushWrongOrderCloseErr(_self_, &(_193633_t), _193656_tokens, _193679_ranges);
	};
	_1a3e210e1_removeRange(_self_, static_cast<jule::I64>((_193713_n - 1LL)), _193633_t.get()._field_Kind, _193656_tokens, _193679_ranges);
}



inline void _1a3e21b91_checkRanges(_1a3e12577_parser* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _195431_tokens) {
	jule::Slice<jule::I64> _195517_ranges = nullptr;;
	{
		auto expr = _195431_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6bdec25:;
		if (it != expr_end) {
			jule::I64 _195713_i = it - expr->begin();
			jule::Ptr<_2097d15d8_Token> *_195716_token = it;
			{
				if (((*(_195716_token)).get()._field_Id != static_cast<jule::U64>(2LLU))) {
					goto _iter_next_1a6bdec25;
				};
				{
					auto &_match_expr{ (*(_195716_token)).get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
						_case_begin_1a6be0e57:;
						{
							{ jule::Slice<jule::I64> &__jule_push_dest = _195517_ranges; __jule_push_dest.push(_195713_i); };
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1a6be0ebd:;
						{
							_1a3e2191b_pushRangeClose(_self_, (*(_195716_token)), jule::Str("(", 1), _195431_tokens, &(_195517_ranges));
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1a6be1034:;
						{
							_1a3e2191b_pushRangeClose(_self_, (*(_195716_token)), jule::Str("{", 1), _195431_tokens, &(_195517_ranges));
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1a6be109a:;
						{
							_1a3e2191b_pushRangeClose(_self_, (*(_195716_token)), jule::Str("[", 1), _195431_tokens, &(_195517_ranges));
						}
					}
					_match_end_1a6be0d47:;
				};
			}
			_iter_next_1a6bdec25:;
			++it;
			_195713_i++;
			goto _iter_begin_1a6bdec25;
		}
		_iter_end_1a6bdec25:;
	};
	{
		auto expr = &(_195517_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6be2200:;
		if (it != expr_end) {
			jule::I64 _197516_i = *it;
			{
				jule::Ptr<_2097d15d8_Token> _197617_token = (*(_195431_tokens))[_197516_i];;
				{
					auto &_match_expr{ _197617_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1a6be3377:;
						{
							_1a3e12e90_pushErr(_self_, _197617_token, jule::Str("parentheses waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("{", 1)) {
						_case_begin_1a6be33ee:;
						{
							_1a3e12e90_pushErr(_self_, _197617_token, jule::Str("brace waiting to close", 22), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1a6be3476:;
						{
							_1a3e12e90_pushErr(_self_, _197617_token, jule::Str("bracket are waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					_match_end_1a6be319b:;
				};
			}
			_iter_next_1a6be2200:;
			++it;
			goto _iter_begin_1a6be2200;
		}
		_iter_end_1a6be2200:;
	};
}



inline void _1a3e21e16_parse(jule::Ptr<_1a3e12577_parser> _self_, jule::Ptr<_2097d6973_File>* _198830_f) {
	_self_.get()._field_ast=jule::new_ptr<_1acaa352d_Ast>(_1acaa352d_Ast{._field_File=(*(_198830_f)), });
	_self_.get()._field_ep=jule::new_ptr<_1a3e02347_exprBuilder>(_1a3e02347_exprBuilder{._field_p=_self_});
	_1a3e21b91_checkRanges(_self_.ptr(), &((*(_198830_f)).get()._field_Tokens));
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a3de5538_stmt>> _200117_stmts = _1a3de58ce_splitStmts(&((*(_198830_f)).get()._field_Tokens));;
	jule::I64 _200417_i = 0LL;;
	for (; (_200417_i < _200117_stmts.len()); (_200417_i)++) {
		{
			jule::Ptr<_1a3de5538_stmt> _200621_stmt = _200117_stmts[_200417_i];;
			if ((_200621_stmt.get()._field_tokens.len() < 2LL)) {
				return;;
			};
			if ((_200621_stmt.get()._field_tokens[0LL].get()._field_Id != static_cast<jule::U64>(37LLU))) {
				goto _iter_end_1a6be6369;
			};
			if ((!(_20944091d_IsTopDirective(_200621_stmt.get()._field_tokens[1LL].get()._field_Kind)))) {
				goto _iter_end_1a6be6369;
			};
			{ jule::Slice<jule::Ptr<_1acaa47b5_Directive>> &__jule_push_dest = _self_.get()._field_ast.get()._field_TopDirectives; __jule_push_dest.push(_1a3e138ca_buildDirective(_self_.ptr(), _200621_stmt.get()._field_tokens)); };
		}
	_iter_next_1a6be6369:;
	}
	_iter_end_1a6be6369:;;
	_self_.get()._field_errors=nullptr;
	for (; (_200417_i < _200117_stmts.len()); (_200417_i)++) {
		{
			jule::Ptr<_1a3de5538_stmt> _202321_stmt = _200117_stmts[_200417_i];;
			_1a3e20b7e_appendNode(_self_, &(_202321_stmt.get()._field_tokens));
			if (_1a3e12ac7_stopped(_self_.ptr())) {
				goto _iter_end_1a6be66bb;
			};
		}
	_iter_next_1a6be66bb:;
	}
	_iter_end_1a6be66bb:;;
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1a3e12e90_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag, jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e12577_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ep:" << _Src._field_ep;
	_Stream << "}";
	return _Stream;
}



inline void _1a3e2381e_pushErr(_1a3e2329c_typeBuilder* _self_, jule::Ptr<_2097d15d8_Token> _4126_token, jule::Str _4141_fmt) {
	if ((*(_self_))._field_err) {
		_1a3e12e90_pushErr((*(_self_))._field_p.ptr(), _4126_token, _4141_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1a3e23b3d_pushSuggestion(_1a3e2329c_typeBuilder* _self_, jule::Str _4833_fmt, jule::Slice<jule::Any> _4846_args) {
	if ((*(_self_))._field_err) {
		_1a3e132ae_pushSuggestion((*(_self_))._field_p.ptr(), _4833_fmt, _4846_args);
	};
}



inline jule::Ptr<_1acad72cb_TypeDecl> _1a3e23da2_buildNamespace(_1a3e2329c_typeBuilder* _self_) {
	jule::Ptr<_1acad72cb_TypeDecl> _5517_t = jule::new_ptr<_1acad72cb_TypeDecl>(_1acad72cb_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], });;
	jule::Ptr<_1acad8002_NamespaceTypeDecl> _5917_nst = jule::new_ptr<_1acad8002_NamespaceTypeDecl>();;
	jule::I64 _6017_n = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_2097d15d8_Token> _6221_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if (((_6017_n & 1LL) == 0LL)) {
				if ((_6221_token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
					_1a3e2381e_pushErr(_self_, _6221_token, jule::Str("invalid syntax", 14));
					_1a3e23b3d_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_2097d15d8_Token>> &__jule_push_dest = _5917_nst.get()._field_Idents; __jule_push_dest.push(_6221_token); };
			} else if ((_6221_token.get()._field_Id != static_cast<jule::U64>(21LLU))) {
				goto _iter_end_1a6bed78e;
			};
			(_6017_n)++;
		}
	_iter_next_1a6bed78e:;
	}
	_iter_end_1a6bed78e:;;
	_5917_nst.get()._field_Idents=_5917_nst.get()._field_Idents.slice(0LL, (_5917_nst.get()._field_Idents.len() - 1LL));
	((*((*(_self_))._field_i)))--;
	_5917_nst.get()._field_Kind=_1a3e245de_buildIdent(_self_);
	_5517_t.get()._field_Kind=jule::Any(_5917_nst, &__jule_any_type96);
	return _5517_t;;
}



inline jule::Slice<jule::Ptr<_1acad72cb_TypeDecl>> _1a3e24116_buildGenerics(_1a3e2329c_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_2097d15d8_Token> _8813_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((_8813_token.get()._field_Id != static_cast<jule::U64>(2LLU)) || (!_8813_token.get()._field_Kind.equal("[", 1)))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>> _9317_parts = _1a3e2437a_identGenerics(_self_);;
	if ((_9317_parts.len() == 0LL)) {
		_1a3e2381e_pushErr(_self_, _8813_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1acad72cb_TypeDecl>> _9917_types = jule::Slice<jule::Ptr<_1acad72cb_TypeDecl>>::alloc(0LL, _9317_parts.len());;
	{
		auto expr = &(_9317_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6c055dc:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_2097d15d8_Token>> _10021_part = *it;
			{
				jule::I64 _10121_j = 0LL;;
				jule::Ptr<_1acad72cb_TypeDecl> _10222_t;;
				({
					__jule_tuple_x_1acad72cb_TypeDecl__jule_tuple_bool __jule_assign_result = _1a3e148a9_buildType((*(_self_))._field_p, &(_10021_part), (&(_10121_j)), true);
					_10222_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_10121_j < _10021_part.len())) {
					_1a3e2381e_pushErr(_self_, _10021_part[_10121_j], jule::Str("invalid syntax", 14));
				};
				{ jule::Slice<jule::Ptr<_1acad72cb_TypeDecl>> &__jule_push_dest = _9917_types; __jule_push_dest.push(_10222_t); };
			}
			_iter_next_1a6c055dc:;
			++it;
			goto _iter_begin_1a6c055dc;
		}
		_iter_end_1a6c055dc:;
	};
	return _9917_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>> _1a3e2437a_identGenerics(_1a3e2329c_typeBuilder* _self_) {
	jule::I64 _11213_first = (*((*(_self_))._field_i));;
	jule::I64 _11317_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_2097d15d8_Token> _11517_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if ((_11517_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
				{
					auto &_match_expr{ _11517_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1a6c0902a:;
						{
							(_11317_rangeN)++;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1a6c090a2:;
						{
							(_11317_rangeN)--;
						}
					}
					_match_end_1a6c08d0a:;
				};
			};
			if ((_11317_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_1a6c07c3d;
			};
		}
	_iter_next_1a6c07c3d:;
	}
	_iter_end_1a6c07c3d:;;
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _12917_tokens = (*(_self_))._field_tokens.slice((_11213_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>> _13018_parts;;
	jule::Slice<_20943da3c_Log> _13025_errors;;
	({
		__jule_tuple_ssx_2097d15d8_Token__jule_tuple_s_20943da3c_Log __jule_assign_result = _1a3e1128a_parts(&(_12917_tokens), static_cast<jule::U64>(7LLU), true);
		_13018_parts = __jule_assign_result.__jule_result_arg0;
		_13025_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		((*(_self_))._field_p.get()._field_errors).append(_13025_errors);;
	};
	return _13018_parts;;
}



inline jule::Ptr<_1acad72cb_TypeDecl> _1a3e245de_buildIdent(_1a3e2329c_typeBuilder* _self_) {
	jule::Bool _13817_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_13817_next && ((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)].get()._field_Id == static_cast<jule::U64>(21LLU)))) {
		return _1a3e23da2_buildNamespace(_self_);;
	};
	jule::Ptr<_2097d15d8_Token> _14217_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1acad7892_IdentTypeDecl> _14317_it = jule::new_ptr<_1acad7892_IdentTypeDecl>(_1acad7892_IdentTypeDecl{._field_Token=_14217_token, ._field_Ident=_14217_token.get()._field_Kind, ._field_Binded=false, });;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1acad72cb_TypeDecl> _14917_itd = jule::new_ptr<_1acad72cb_TypeDecl>(_1acad72cb_TypeDecl{._field_Token=_14217_token, ._field_Kind=jule::Any(_14317_it, &__jule_any_type20)});;
	if (((!(_13817_next)) || ((*(_self_))._field_tokens[(*((*(_self_))._field_i))].get()._field_Id != static_cast<jule::U64>(19LLU)))) {
		_14317_it.get()._field_Generics=_1a3e24116_buildGenerics(_self_);
		return _14917_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1a3e2381e_pushErr(_self_, _14217_token, jule::Str("invalid syntax", 14));
		return _14917_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens[(*((*(_self_))._field_i))].get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a3e2381e_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("invalid syntax", 14));
		return _14917_itd;;
	};
	jule::Ptr<_1acad7b7d_SubIdentTypeDecl> _16617_sit = jule::new_ptr<_1acad7b7d_SubIdentTypeDecl>();;
	{ jule::Slice<jule::Ptr<_1acad7892_IdentTypeDecl>> &__jule_push_dest = _16617_sit.get()._field_Idents; __jule_push_dest.push(_14317_it); };
	jule::Ptr<_1acad72cb_TypeDecl> _16817_ident = _1a3e245de_buildIdent(_self_);;
	{
		auto &_match_expr{ _16817_ident.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1a6c137c6:;
			{
				{ jule::Slice<jule::Ptr<_1acad7892_IdentTypeDecl>> &__jule_push_dest = _16617_sit.get()._field_Idents; __jule_push_dest.push(_16817_ident.get()._field_Kind.cast_ptr<_1acad7892_IdentTypeDecl>(&__jule_any_type20)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1a6c1384d:;
			{
				(_16617_sit.get()._field_Idents).append(_16817_ident.get()._field_Kind.cast_ptr<_1acad7b7d_SubIdentTypeDecl>(&__jule_any_type92).get()._field_Idents);;
			}
		}
		_match_end_1a6c1370a:;
	};
	return jule::new_ptr<_1acad72cb_TypeDecl>(_1acad72cb_TypeDecl{._field_Token=_14217_token, ._field_Kind=jule::Any(_16617_sit, &__jule_any_type92)});;
}



inline jule::Ptr<_1acad72cb_TypeDecl> _1a3e24853_buildCppLink(_1a3e2329c_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)].get()._field_Id != static_cast<jule::U64>(19LLU)))) {
		_1a3e2381e_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_1acad72cb_TypeDecl> _18717_t = _1a3e245de_buildIdent(_self_);;
	_18717_t.get()._field_Kind.cast_ptr<_1acad7892_IdentTypeDecl>(&__jule_any_type20).get()._field_Binded=true;
	return _18717_t;;
}



inline jule::Ptr<_1acad72cb_TypeDecl> _1a3e24ab7_buildFn(_1a3e2329c_typeBuilder* _self_) {
	jule::Ptr<_2097d15d8_Token> _19317_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1acae8908_FnDecl> _19417_f = _1a3e185a0_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_19417_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1acae8c5a_IsAnon(_19417_f.ptr())))) {
		_1a3e2381e_pushErr(_self_, _19417_f.get()._field_Token, jule::Str("invalid syntax", 14));
	};
	return jule::new_ptr<_1acad72cb_TypeDecl>(_1acad72cb_TypeDecl{._field_Token=_19317_token, ._field_Kind=jule::Any(_19417_f, &__jule_any_type14)});;
}



inline jule::Ptr<_1acad72cb_TypeDecl> _1a3e24d2b_buildPtr(_1a3e2329c_typeBuilder* _self_) {
	jule::Ptr<_2097d15d8_Token> _20817_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1a3e2381e_pushErr(_self_, _20817_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens[(*((*(_self_))._field_i))].get()._field_Id == static_cast<jule::U64>(33LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_1acad72cb_TypeDecl>(_1acad72cb_TypeDecl{._field_Token=_20817_token, ._field_Kind=jule::Any(jule::new_ptr<_1acad8cb1_PtrTypeDecl>(_1acad8cb1_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type77)});;
	};
	jule::Ptr<_1acad72cb_TypeDecl> _22517_elem = _1a3e26019_step(_self_);;
	if ((_22517_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1acad72cb_TypeDecl>(_1acad72cb_TypeDecl{._field_Token=_20817_token, ._field_Kind=jule::Any(jule::new_ptr<_1acad8cb1_PtrTypeDecl>(_1acad8cb1_PtrTypeDecl{._field_Elem=_22517_elem}), &__jule_any_type77)});;
}



inline jule::Ptr<_1acad72cb_TypeDecl> _1a3e25090_buildSptr(_1a3e2329c_typeBuilder* _self_) {
	jule::Ptr<_2097d15d8_Token> _23917_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1a3e2381e_pushErr(_self_, _23917_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1acad72cb_TypeDecl> _24617_elem = _1a3e26019_step(_self_);;
	if ((_24617_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1acad72cb_TypeDecl>(_1acad72cb_TypeDecl{._field_Token=_23917_token, ._field_Kind=jule::Any(jule::new_ptr<_1acad82dd_SptrTypeDecl>(_1acad82dd_SptrTypeDecl{._field_Elem=_24617_elem}), &__jule_any_type78)});;
}



inline jule::Ptr<_1acad72cb_TypeDecl> _1a3e25304_buildOp(_1a3e2329c_typeBuilder* _self_) {
	jule::Ptr<_2097d15d8_Token> _26017_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ _26017_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1a6c20607:;
			{
				return _1a3e24d2b_buildPtr(_self_);;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1a6c2175c:;
			{
				return _1a3e25090_buildSptr(_self_);;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1a6c2184a:;
			{
				return jule::new_ptr<_1acad72cb_TypeDecl>(_1acad72cb_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1acad82dd_SptrTypeDecl>(_1acad82dd_SptrTypeDecl{._field_Elem=_1a3e25090_buildSptr(_self_)}), &__jule_any_type78)});;
			}
		}
		else {
			_case_begin_1a6c20e76:;
			{
				_1a3e2381e_pushErr(_self_, _26017_token, jule::Str("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1a6c20d00:;
	};
}



inline jule::Ptr<_1acad72cb_TypeDecl> _1a3e25568_buildSlc(_1a3e2329c_typeBuilder* _self_) {
	jule::Ptr<_2097d15d8_Token> _27917_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1acad72cb_TypeDecl> _28117_elem = _1a3e26019_step(_self_);;
	if ((_28117_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1acad72cb_TypeDecl>(_1acad72cb_TypeDecl{._field_Token=_27917_token, ._field_Kind=jule::Any(jule::new_ptr<_1acad86d9_SlcTypeDecl>(_1acad86d9_SlcTypeDecl{._field_Elem=_28117_elem}), &__jule_any_type76)});;
}



inline jule::Ptr<_1acad72cb_TypeDecl> _1a3e257cc_buildArr(_1a3e2329c_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _29417_exprTokens = _1a3e1071d_range(&((*((*(_self_))._field_i))), jule::Str("[", 1), jule::Str("]", 1), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1a3e2381e_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1acad72cb_TypeDecl> _30017_elem = _1a3e26019_step(_self_);;
	if ((_30017_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1acad9487_ArrTypeDecl> _30517_arrt = jule::new_ptr<_1acad9487_ArrTypeDecl>(_1acad9487_ArrTypeDecl{._field_Elem=_30017_elem, });;
	jule::Ptr<_2097d15d8_Token> _30917_token = _29417_exprTokens[0LL];;
	if ((((_29417_exprTokens.len() == 1LL) && (_30917_token.get()._field_Id == static_cast<jule::U64>(6LLU))) && _30917_token.get()._field_Kind.equal("...", 3))) {
	} else {
		_30517_arrt.get()._field_Size=_1a3e135bc_buildExpr((*(_self_))._field_p, &(_29417_exprTokens));
	};
	return jule::new_ptr<_1acad72cb_TypeDecl>(_1acad72cb_TypeDecl{._field_Token=_30917_token, ._field_Kind=jule::Any(_30517_arrt, &__jule_any_type75)});;
}



inline jule::Ptr<_1acad72cb_TypeDecl> _1a3e25a41_buildMap(_1a3e2329c_typeBuilder* _self_) {
	jule::Ptr<_2097d15d8_Token> _32317_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1a3e2381e_pushErr(_self_, _32317_mapToken, jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _33117_keyTokens = _1a3e1071d_range(&((*((*(_self_))._field_i))), jule::Str("[", 1), jule::Str("]", 1), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1a3e2381e_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("type missing", 12));
		return nullptr;;
	} else if ((_33117_keyTokens.len() == 0LL)) {
		_1a3e2381e_pushErr(_self_, _32317_mapToken, jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1acad9b91_MapTypeDecl> _34017_mapt = jule::new_ptr<_1acad9b91_MapTypeDecl>();;
	jule::I64 _34117_j = 0LL;;
	jule::Ptr<_1acad72cb_TypeDecl> _34218_keyt;;
	jule::Bool _34228_ok = false;;
	({
		__jule_tuple_x_1acad72cb_TypeDecl__jule_tuple_bool __jule_assign_result = _1a3e148a9_buildType((*(_self_))._field_p, &(_33117_keyTokens), (&(_34117_j)), (*(_self_))._field_err);
		_34218_keyt = __jule_assign_result.__jule_result_arg0;
		_34228_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34228_ok))) {
		return nullptr;;
	} else if ((_34117_j < _33117_keyTokens.len())) {
		_1a3e2381e_pushErr(_self_, _33117_keyTokens[_34117_j], jule::Str("invalid syntax", 14));
	};
	_34017_mapt.get()._field_Key=_34218_keyt;
	jule::Ptr<_1acad72cb_TypeDecl> _35018_valt;;
	({
		__jule_tuple_x_1acad72cb_TypeDecl__jule_tuple_bool __jule_assign_result = _1a3e148a9_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_35018_valt = __jule_assign_result.__jule_result_arg0;
		_34228_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34228_ok))) {
		return nullptr;;
	};
	_34017_mapt.get()._field_Val=_35018_valt;
	return jule::new_ptr<_1acad72cb_TypeDecl>(_1acad72cb_TypeDecl{._field_Token=_32317_mapToken, ._field_Kind=jule::Any(_34017_mapt, &__jule_any_type79)});;
}



inline jule::Ptr<_1acad72cb_TypeDecl> _1a3e25ca5_buildEnumerable(_1a3e2329c_typeBuilder* _self_) {
	jule::Ptr<_2097d15d8_Token> _36217_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len()) || (_36217_token.get()._field_Id != static_cast<jule::U64>(2LLU))) || (!_36217_token.get()._field_Kind.equal("[", 1)))) {
		_1a3e2381e_pushErr(_self_, _36217_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_36217_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((_36217_token.get()._field_Id == static_cast<jule::U64>(2LLU)) && _36217_token.get()._field_Kind.equal("]", 1))) {
		return _1a3e25568_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1a3e257cc_buildArr(_self_);;
}



inline jule::Ptr<_1acad72cb_TypeDecl> _1a3e26019_step(_1a3e2329c_typeBuilder* _self_) {
	jule::Ptr<_2097d15d8_Token> _37913_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ _37913_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1a6c33c7a:;
			{
				return _1a3e245de_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1a6c340bb:;
			{
				return _1a3e24853_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1a6c34132:;
			{
				return _1a3e24ab7_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1a6c34198:;
			{
				return _1a3e25304_buildOp(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1a6c33582:;
			{
				return _1a3e25ca5_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1a6c335e8:;
			{
				return _1a3e25a41_buildMap(_self_);;
			}
		}
		else {
			_case_begin_1a6c3351b:;
			{
				((*((*(_self_))._field_i)))++;
				_1a3e2381e_pushErr(_self_, _37913_token, jule::Str("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1a6c33395:;
	};
}



inline __jule_tuple_x_1acad72cb_TypeDecl__jule_tuple_bool _1a3e2627d_build(_1a3e2329c_typeBuilder* _self_) {
	__jule_tuple_x_1acad72cb_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1acad72cb_TypeDecl> _40317_root = _1a3e26019_step(_self_);;
	if ((_40317_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1a3e22ac6_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _40317_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e2329c_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ace622c1_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _1ace63b30_pushErr(_1ace63624_directiveEval* _self_, jule::Ptr<_2097d15d8_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	{ jule::Slice<_20943da3c_Log> &__jule_push_dest = (*(_self_))._field_logs; __jule_push_dest.push(_20943da3c_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_2126_t.get()._field_Row, ._field_Column=_2126_t.get()._field_Column, ._field_Path=_2126_t.get()._field_File.get()._field_Path, ._field_Text=_20943de7c_Logf(_2137_fmt, _2150_args), }); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>> _1ace63ed7_splitOperans(_1ace63624_directiveEval* _self_, jule::Str _3331_op, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _3351_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>> _3417_parts = jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>>::alloc(0LL, 10LL);;
	jule::I64 _3617_i = 0LL;;
	jule::I64 _3717_rangeN = 0LL;;
	jule::I64 _3817_last = 0LL;;
	for (; (_3617_i < ((*(_3351_tokens)).len() - 1LL)); (_3617_i)++) {
		{
			jule::Ptr<_2097d15d8_Token> _4017_b = (*(_3351_tokens))[_3617_i];;
			if ((_4017_b.get()._field_Id == static_cast<jule::U64>(2LLU))) {
				{
					auto &_match_expr{ _4017_b.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1a6c571aa:;
						{
							(_3717_rangeN)++;
							goto _iter_next_1a6c553d9;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1a6c57221:;
						{
							(_3717_rangeN)--;
						}
					}
					_match_end_1a6c56e8a:;
				};
			};
			if (((_3717_rangeN > 0LL) || (_4017_b.get()._field_Id != static_cast<jule::U64>(6LLU)))) {
				goto _iter_next_1a6c553d9;
			};
			if ((_4017_b.get()._field_Kind == _3331_op)) {
				{ jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>> &__jule_push_dest = _3417_parts; __jule_push_dest.push((*(_3351_tokens)).slice(_3817_last, _3617_i)); };
				_3817_last=static_cast<jule::I64>((_3617_i + 1LL));
			};
		}
	_iter_next_1a6c553d9:;
	}
	_iter_end_1a6c553d9:;;
	if ((_3817_last < (*(_3351_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>> &__jule_push_dest = _3417_parts; __jule_push_dest.push((*(_3351_tokens)).slice(_3817_last)); };
	} else {
		_1ace63b30_pushErr(_self_, (*(_3351_tokens))[(_3817_last - 1LL)], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _3417_parts;;
}



inline jule::Bool _1ace642e5_evalDirectiveIdent(_1ace63624_directiveEval* _self_, jule::Str _7333_ident) {
	if (_7333_ident.empty()) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6c5a103:;
		if (it != expr_end) {
			jule::Str *_7716_var = it;
			{
				if (((*(_7716_var)) == _7333_ident)) {
					return true;;
				};
			}
			_iter_next_1a6c5a103:;
			++it;
			goto _iter_begin_1a6c5a103;
		}
		_iter_end_1a6c5a103:;
	};
	return false;;
}



inline jule::Bool _1ace64603_evalDirectivePart(_1ace63624_directiveEval* _self_, jule::Slice<jule::Ptr<_2097d15d8_Token>> _8740_part) {
	jule::Bool _8813_logicalNot = ((_8740_part[0LL].get()._field_Id == static_cast<jule::U64>(6LLU)) && _8740_part[0LL].get()._field_Kind.equal("!", 1));;
	if (_8813_logicalNot) {
		_8740_part=_8740_part.slice(1LL);
	};
	if ((_8740_part.len() > 1LL)) {
		_1ace63b30_pushErr(_self_, _8740_part[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _9817_result = _1ace642e5_evalDirectiveIdent(_self_, _8740_part[0LL].get()._field_Kind);;
	if (_8813_logicalNot) {
		_9817_result=(!(_9817_result));
	};
	return _9817_result;;
}



inline jule::Bool _1ace64867_eval(_1ace63624_directiveEval* _self_) {
	if (((*(_self_))._field_d.get()._field_Args.len() == 0LL)) {
		_1ace63b30_pushErr(_self_, (*(_self_))._field_d.get()._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _11117_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>> _11317_logicalOrParts = _1ace63ed7_splitOperans(_self_, jule::Str("||", 2), &((*(_self_))._field_d.get()._field_Args));;
	if ((_11317_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_11317_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6c6068b:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_2097d15d8_Token>> _11821_part = *it;
			{
				jule::Bool _11921_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>> _12021_logicalAndParts = _1ace63ed7_splitOperans(_self_, jule::Str("&&", 2), &(_11821_part));;
				if ((_12021_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_12021_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a6c61b21:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_2097d15d8_Token>> _12525_andPart = *it;
						{
							jule::Ptr<_2097d15d8_Token> _12621_first = _12525_andPart[0LL];;
							if (((_12621_first.get()._field_Id == static_cast<jule::U64>(2LLU)) && _12621_first.get()._field_Kind.equal("(", 1))) {
								jule::Ptr<_2097d15d8_Token> _12825_end = _12525_andPart[(_12525_andPart.len() - 1LL)];;
								if (((_12825_end.get()._field_Id != static_cast<jule::U64>(2LLU)) || (!_12825_end.get()._field_Kind.equal(")", 1)))) {
									_1ace63b30_pushErr(_self_, _12621_first, jule::Str("parentheses waiting to close", 28), jule::Slice<jule::Any>());
									return false;;
								};
								_12525_andPart=_12525_andPart.slice(1LL, (_12525_andPart.len() - 1LL));
							};
							_11921_and=(_11921_and && _1ace64603_evalDirectivePart(_self_, _12525_andPart));
						}
						_iter_next_1a6c61b21:;
						++it;
						goto _iter_begin_1a6c61b21;
					}
					_iter_end_1a6c61b21:;
				};
				_11117_result=(_11117_result || _11921_and);
			}
			_iter_next_1a6c6068b:;
			++it;
			goto _iter_begin_1a6c6068b;
		}
		_iter_end_1a6c6068b:;
	};
	return _11117_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ace63624_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a3e27290_JuleImporter> static__1a3e2767a_New(_1ace622c1_CompileInfo _5819_info) {
	jule::Ptr<_1a3e27290_JuleImporter> _5917_imp = jule::new_ptr<_1a3e27290_JuleImporter>(_1a3e27290_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_2094d2c79_PathStdlib}), });;
	_1ace62ada_initVars(&(_5917_imp.get()._field_vars), &(_5819_info));
	return _5917_imp;;
}



inline jule::Slice<jule::Ptr<_1abcdb39e_ImportInfo>> _1a3e278de_AllPackages(_1a3e27290_JuleImporter* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _1a3e27ceb_SetModPath(_1a3e27290_JuleImporter* _self_, jule::Str _7529_path) {
	(*(_self_))._field_mod=_7529_path;
}



inline jule::Str _1a3e28060_GetModPath(_1a3e27290_JuleImporter* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _1a3e2836d_ModById(_1a3e27290_JuleImporter* _self_, jule::I64 _8322_id) {
	return (*(_self_))._field_mods[_8322_id];;
}



inline jule::Ptr<_1abcdb39e_ImportInfo> _1a3e2867b_GetImport(_1a3e27290_JuleImporter* _self_, jule::Str _8728_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6c68441:;
		if (it != expr_end) {
			jule::Ptr<_1abcdb39e_ImportInfo> _8821_p = *it;
			{
				if ((_8821_p.get()._field_Path == _8728_path)) {
					return _8821_p;;
				};
			}
			_iter_next_1a6c68441:;
			++it;
			goto _iter_begin_1a6c68441;
		}
		_iter_end_1a6c68441:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1acaa352d_Ast__jule_tuple_s_20943da3c_Log _1a3e28a33_ImportPackage(_1a3e27290_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod) {
	__jule_tuple_sx_1acaa352d_Ast__jule_tuple_s_20943da3c_Log __jule_func_result;
	jule::Slice<jule::Ptr<_2082a94ad_DirEntry>> _9717_dirents = ({
		auto except = static__2093a8e80_Read(_9632_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = jule::Slice<_20943da3c_Log>::make({_1a3e26d0b_flatCompilerErr((jule::Str("connot read package directory: ", 31) + _9632_path))});
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_2082a94ad_DirEntry>>(nullptr);});
	});;
	if (_9643_update_mod) {
		jule::Str _10217_newMod = _1ace73832_FindModuleFileDeep(_9632_path);;
		if ((_10217_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_10217_newMod;
			jule::Slice<_20943da3c_Log> _10525_errs = _1ace73a30_CheckModuleFile((*(_self_))._field_mod);;
			if ((_10525_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _10525_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1acaa352d_Ast>> _11217_asts = jule::Slice<jule::Ptr<_1acaa352d_Ast>>::alloc(0LL, _9717_dirents.len());;
	{
		auto expr = &(_9717_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6c6994d:;
		if (it != expr_end) {
			jule::Ptr<_2082a94ad_DirEntry> _11316_dirent = *it;
			{
				if ((_2082b8be8_IsDir(_11316_dirent.get()._field_Stat.ptr()) || (!(_20939d639_HasSuffix(_11316_dirent.get()._field_Name, jule::Str(".jule", 5)))))) {
					goto _iter_next_1a6c6994d;
				};
				jule::Str _11917__path = _2093a7b3d_Join(jule::Slice<jule::Str>::make({_9632_path,_11316_dirent.get()._field_Name}));;
				jule::Ptr<_2097d6973_File> _12021_file = _2097d7c2c_NewFileSet(_11917__path);;
				_2097d6d3b_Fill(_12021_file.ptr(), _1a3e26a53_readBuff(_12021_file.get()._field_Path));
				jule::Slice<_20943da3c_Log> _12221_errors = _2097e35c8_Lex(_12021_file, static_cast<jule::I64>(0LL));;
				if ((_12221_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12221_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1a3d9ceb3_FileInfo> _12721_finfo = _1a3de347b_ParseFile(_12021_file);;
				if ((_12721_finfo.get()._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12721_finfo.get()._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1ace479e3_isPassFileAnnotation(_11316_dirent.get()._field_Name)))) {
					goto _iter_next_1a6c6994d;
				};
				jule::Bool _13718_r = false;;
				jule::Slice<_20943da3c_Log> _13725_logs;;
				({
					__jule_tuple_bool__jule_tuple_s_20943da3c_Log __jule_assign_result = _1a3e291a4_isPassBuildDirectives(_self_, &(_12721_finfo.get()._field_Ast));
					_13718_r = __jule_assign_result.__jule_result_arg0;
					_13725_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13725_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13725_logs;
					return __jule_func_result;;
				};
				if ((!(_13718_r))) {
					goto _iter_next_1a6c6994d;
				};
				{ jule::Slice<jule::Ptr<_1acaa352d_Ast>> &__jule_push_dest = _11217_asts; __jule_push_dest.push(_12721_finfo.get()._field_Ast); };
			}
			_iter_next_1a6c6994d:;
			++it;
			goto _iter_begin_1a6c6994d;
		}
		_iter_end_1a6c6994d:;
	};
	__jule_func_result.__jule_result_arg0 = _11217_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1a3e28ca8_Imported(_1a3e27290_JuleImporter* _self_, jule::Ptr<_1abcdb39e_ImportInfo> _15331_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6c6c643:;
		if (it != expr_end) {
			jule::Ptr<_1abcdb39e_ImportInfo> _15516_p = *it;
			{
				if (((_15516_p.get()._field_Binded == _15331_imp.get()._field_Binded) && (_15516_p.get()._field_LinkPath == _15331_imp.get()._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_1a6c6c643:;
			++it;
			goto _iter_begin_1a6c6c643;
		}
		_iter_end_1a6c6c643:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a6c73c87:;
			if (it != expr_end) {
				jule::I64 _16217_i = it - expr->begin();
				jule::Str _16220_mod = *it;
				{
					if (((*(_self_))._field_mod == _16220_mod)) {
						_15331_imp.get()._field_ModId=_16217_i;
						goto _julec_label_setted;
					};
				}
				_iter_next_1a6c73c87:;
				++it;
				_16217_i++;
				goto _iter_begin_1a6c73c87;
			}
			_iter_end_1a6c73c87:;
		};
		_15331_imp.get()._field_ModId=static_cast<jule::I64>((*(_self_))._field_mods.len());
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_mods; __jule_push_dest.push((*(_self_))._field_mod); };
		_julec_label_setted:;
	};
	{ jule::Slice<jule::Ptr<_1abcdb39e_ImportInfo>> &__jule_push_dest = (*(_self_))._field_pkgs; __jule_push_dest.push(_15331_imp); };
}



inline __jule_tuple_bool__jule_tuple_s_20943da3c_Log _1a3e291a4_isPassBuildDirectives(_1a3e27290_JuleImporter* _self_, jule::Ptr<_1acaa352d_Ast>* _17945_file) {
	__jule_tuple_bool__jule_tuple_s_20943da3c_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*(_17945_file)).get()._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6c76be1:;
		if (it != expr_end) {
			jule::Ptr<_1acaa47b5_Directive> _18021_td = *it;
			{
				if ((!_18021_td.get()._field_Tag.get()._field_Kind.equal("build", 5))) {
					goto _iter_next_1a6c76be1;
				};
				_1ace63624_directiveEval _18421_de = _1ace63624_directiveEval{._field_d=_18021_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _18817_result = _1ace64867_eval(&_18421_de);;
				if ((_18421_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _18421_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_18817_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1a6c76be1:;
			++it;
			goto _iter_begin_1a6c76be1;
		}
		_iter_end_1a6c76be1:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e27290_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e2c042_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a6c9665b_isCommonOrdered(jule::Slice<jule::Ptr<_1acb07021_Struct>> _1834_s, jule::Ptr<_1acb07021_Struct> _1842_t) {
	{
		auto expr = &(_1842_t.get()._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6c9765c:;
		if (it != expr_end) {
			jule::Ptr<_1acb07021_Struct> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a6c97e76:;
					if (it != expr_end) {
						jule::Ptr<_1acb07021_Struct> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1a6c97e76:;
						++it;
						goto _iter_begin_1a6c97e76;
					}
					_iter_end_1a6c97e76:;
				};
			}
			_iter_next_1a6c9765c:;
			++it;
			goto _iter_begin_1a6c9765c;
		}
		_iter_end_1a6c9765c:;
	};
	return true;;
}

inline jule::Bool _1a6c9b056_isCommonOrdered(jule::Slice<jule::Ptr<_1abd1497c_Var>> _1834_s, jule::Ptr<_1abd1497c_Var> _1842_t) {
	{
		auto expr = &(_1842_t.get()._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6c9c013:;
		if (it != expr_end) {
			jule::Ptr<_1abd1497c_Var> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a6c9c82c:;
					if (it != expr_end) {
						jule::Ptr<_1abd1497c_Var> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1a6c9c82c:;
						++it;
						goto _iter_begin_1a6c9c82c;
					}
					_iter_end_1a6c9c82c:;
				};
			}
			_iter_next_1a6c9c013:;
			++it;
			goto _iter_begin_1a6c9c013;
		}
		_iter_end_1a6c9c013:;
	};
	return true;;
}



inline void _1a6c9327e_orderCommon(jule::Slice<jule::Ptr<_1acb07021_Struct>>* _3135_s) {
	jule::I64 _3217_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6c946e2:;
		if (it != expr_end) {
			{
				jule::Bool _3421_swapped = false;;
				jule::I64 _3521_k = 0LL;;
				for (; (_3521_k < _3217_n); (_3521_k)++) {
					{
						if ((!(_1a6c9665b_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3521_k])))) {
							(*(_3135_s)).swap(_3521_k, static_cast<jule::I64>((_3521_k + 1LL)));
							_3421_swapped=true;
						};
					}
				_iter_next_1a6c953d5:;
				}
				_iter_end_1a6c953d5:;;
				if ((!(_3421_swapped))) {
					goto _iter_end_1a6c946e2;
				};
				(_3217_n)--;
			}
			_iter_next_1a6c946e2:;
			++it;
			goto _iter_begin_1a6c946e2;
		}
		_iter_end_1a6c946e2:;
	};
}

inline void _1a6c93aba_orderCommon(jule::Slice<jule::Ptr<_1abd1497c_Var>>* _3135_s) {
	jule::I64 _3217_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6c990dc:;
		if (it != expr_end) {
			{
				jule::Bool _3421_swapped = false;;
				jule::I64 _3521_k = 0LL;;
				for (; (_3521_k < _3217_n); (_3521_k)++) {
					{
						if ((!(_1a6c9b056_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3521_k])))) {
							(*(_3135_s)).swap(_3521_k, static_cast<jule::I64>((_3521_k + 1LL)));
							_3421_swapped=true;
						};
					}
				_iter_next_1a6c99cd0:;
				}
				_iter_end_1a6c99cd0:;;
				if ((!(_3421_swapped))) {
					goto _iter_end_1a6c990dc;
				};
				(_3217_n)--;
			}
			_iter_next_1a6c990dc:;
			++it;
			goto _iter_begin_1a6c990dc;
		}
		_iter_end_1a6c990dc:;
	};
}



inline void static__1a3e2cb36_orderStructures(jule::Slice<jule::Ptr<_1acb07021_Struct>>* _5136_structs) {
	_1a6c9327e_orderCommon(_5136_structs);
}



inline void static__1a3e2cd45_orderVars(jule::Slice<jule::Ptr<_1abd1497c_Var>>* _5730_vars) {
	_1a6c93aba_orderCommon(_5730_vars);
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e2c2a6_defineOrderer _Src) {
	_Stream << "defineOrderer{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4024b95_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _1a405adb8_optimizeChild(jule::Ptr<_1a405a934_scopeDeadCode> _self_, jule::Ptr<_1abcbc935_Scope>* _3938_s) {
	jule::Ptr<_1a405a934_scopeDeadCode> _4017_sdc = jule::new_ptr<_1a405a934_scopeDeadCode>(_1a405a934_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_3938_s)), ._field_stmts=(&((*(_3938_s)).get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1a405d508_optimizeStmts(_4017_sdc);
	};
}



inline void _1a405b160_optimizeBodyChildExceptional(jule::Ptr<_1a405a934_scopeDeadCode> _self_, jule::Ptr<_1abcbc935_Scope>* _5053_s) {
	jule::Ptr<_1a405a934_scopeDeadCode> _5117_sdc = jule::new_ptr<_1a405a934_scopeDeadCode>(_1a405a934_scopeDeadCode{._field_s=(*(_5053_s)), ._field_stmts=(&((*(_5053_s)).get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, ._field_except=true});;
	{
		_1a405d508_optimizeStmts(_5117_sdc);
	};
}



inline void _1a405b3e6_optimizeBodyChild(jule::Ptr<_1a405a934_scopeDeadCode> _self_, jule::Ptr<_1abcbc935_Scope>* _6142_s) {
	jule::Ptr<_1a405a934_scopeDeadCode> _6217_sdc = jule::new_ptr<_1a405a934_scopeDeadCode>(_1a405a934_scopeDeadCode{._field_s=(*(_6142_s)), ._field_stmts=(&((*(_6142_s)).get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1a405d508_optimizeStmts(_6217_sdc);
	};
}



inline void _1a405b66b_optimizeExprModel(jule::Ptr<_1a405a934_scopeDeadCode> _self_, jule::Any* _7142_model) {
	_1a405e88e_exprDeadCode _7213_edc = static__1a405ee77_new(&(_self_));;
	_1a4065b92_optimize(&_7213_edc, _7142_model);
}



inline void _1a405b847_eliminateFollowed(_1a405a934_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		(*((*(_self_))._field_stmts))=(*((*(_self_))._field_stmts)).slice(0LL, ((*(_self_))._field_i + 1LL));
	};
	jule::Ptr<_1a405a934_scopeDeadCode> _8317_parent = (*(_self_))._field_parent;;
	while ((_8317_parent != nullptr)) {
		{
			{
				(*(_8317_parent.get()._field_stmts))=(*(_8317_parent.get()._field_stmts)).slice(0LL, (_8317_parent.get()._field_i + 1LL));
			};
			_8317_parent=_8317_parent.get()._field_parent;
		}
	_iter_next_1a6d18a96:;
	}
	_iter_end_1a6d18a96:;;
}



inline void _1a405babc_pushGoto(jule::Ptr<_1a405a934_scopeDeadCode> _self_, jule::Ptr<_1abcc0460_GotoSt> _9232_gt) {
	jule::I64 _9317_i = 0LL;;
	for (; (_9317_i < (*(_self_.get()._field_labels)).len()); (_9317_i)++) {
		{
			if ((_9232_gt.get()._field_Ident == (*(_self_.get()._field_labels))[_9317_i].get()._field_Ident)) {
				return;;
			};
		}
	_iter_next_1a6d1b9cd:;
	}
	_iter_end_1a6d1b9cd:;;
	{ jule::Slice<jule::Ptr<_1abcc0460_GotoSt>> &__jule_push_dest = (*(_self_.get()._field_gotos)); __jule_push_dest.push(_9232_gt); };
}



inline void _1a405bd42_pushLabel(jule::Ptr<_1a405a934_scopeDeadCode> _self_, jule::Ptr<_1abcc0174_Label> _10233_l) {
	jule::I64 _10317_i = 0LL;;
	while ((_10317_i < (*(_self_.get()._field_gotos)).len())) {
		{
			if ((_10233_l.get()._field_Ident == (*(_self_.get()._field_gotos))[_10317_i].get()._field_Ident)) {
				jule::copy(((*(_self_.get()._field_gotos)).slice(_10317_i)), ((*(_self_.get()._field_gotos)).slice((_10317_i + 1LL))));
				(*(_self_.get()._field_gotos))=(*(_self_.get()._field_gotos)).slice(0LL, ((*(_self_.get()._field_gotos)).len() - 1LL));
				goto _iter_next_1a6d1d0ea;
			};
			(_10317_i)++;
		}
	_iter_next_1a6d1d0ea:;
	}
	_iter_end_1a6d1d0ea:;;
	{ jule::Slice<jule::Ptr<_1abcc0174_Label>> &__jule_push_dest = (*(_self_.get()._field_labels)); __jule_push_dest.push(_10233_l); };
}



inline void _1a405c0b7_optimizeRangeIter(jule::Ptr<_1a405a934_scopeDeadCode> _self_, jule::Ptr<_1abcbe5d5_RangeIter> _11541_it) {
	_1a405b66b_optimizeExprModel(_self_, &(_11541_it.get()._field_Expr.get()._field_Model));
	_1a405b3e6_optimizeBodyChild(_self_, &(_11541_it.get()._field_Scope));
}



inline void _1a405c33c_optimizeWhileIter(jule::Ptr<_1a405a934_scopeDeadCode> _self_, jule::Ptr<_1abcbdc00_WhileIter> _12041_it) {
	_1a405b66b_optimizeExprModel(_self_, &(_12041_it.get()._field_Expr));
	if ((_12041_it.get()._field_Next != nullptr)) {
		_1a405d32c_optimizeStmt(_self_, _12041_it.get()._field_Next);
	};
	_1a405b3e6_optimizeBodyChild(_self_, &(_12041_it.get()._field_Scope));
}



inline void _1a405c5b2_optimizeInfIter(jule::Ptr<_1a405a934_scopeDeadCode> _self_, jule::Ptr<_1abcbd77c_InfIter> _12839_it) {
	_1a405b3e6_optimizeBodyChild(_self_, &(_12839_it.get()._field_Scope));
}



inline void _1a405c837_optimizeConditional(jule::Ptr<_1a405a934_scopeDeadCode> _self_, jule::Ptr<_1abcbd491_Conditional> _13243_c) {
	{
		auto expr = &(_13243_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d239d5:;
		if (it != expr_end) {
			jule::Ptr<_1abcbcd31_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_1a405b66b_optimizeExprModel(_self_, &(_13321_case.get()._field_Expr));
					_1a405b3e6_optimizeBodyChild(_self_, &(_13321_case.get()._field_Scope));
				};
			}
			_iter_next_1a6d239d5:;
			++it;
			goto _iter_begin_1a6d239d5;
		}
		_iter_end_1a6d239d5:;
	};
	if ((_13243_c.get()._field_Default != nullptr)) {
		if ((_13243_c.get()._field_Elifs.len() == 0LL)) {
			_1a405adb8_optimizeChild(_self_, &(_13243_c.get()._field_Default.get()._field_Scope));
		} else {
			_1a405b3e6_optimizeBodyChild(_self_, &(_13243_c.get()._field_Default.get()._field_Scope));
		};
	};
}



inline void _1a405caac_optimizeMatch(jule::Ptr<_1a405a934_scopeDeadCode> _self_, jule::Ptr<_1abcc174c_Match> _15037_m) {
	{
		auto expr = &(_15037_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d26224:;
		if (it != expr_end) {
			jule::Ptr<_1abcc2297_Case> _15121_case = *it;
			{
				{
					auto expr = &(_15121_case.get()._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a6d26a4e:;
					if (it != expr_end) {
						jule::Ptr<_1abd5dc4b_Data> _15225_expr = *it;
						{
							_1a405b66b_optimizeExprModel(_self_, &(_15225_expr.get()._field_Model));
						}
						_iter_next_1a6d26a4e:;
						++it;
						goto _iter_begin_1a6d26a4e;
					}
					_iter_end_1a6d26a4e:;
				};
				_1a405b3e6_optimizeBodyChild(_self_, &(_15121_case.get()._field_Scope));
			}
			_iter_next_1a6d26224:;
			++it;
			goto _iter_begin_1a6d26224;
		}
		_iter_end_1a6d26224:;
	};
	if ((_15037_m.get()._field_Default != nullptr)) {
		if ((_15037_m.get()._field_Cases.len() == 0LL)) {
			_1a405adb8_optimizeChild(_self_, &(_15037_m.get()._field_Default.get()._field_Scope));
		} else {
			_1a405b3e6_optimizeBodyChild(_self_, &(_15037_m.get()._field_Default.get()._field_Scope));
		};
	};
}



inline void _1a405cd32_optimizeAssign(jule::Ptr<_1a405a934_scopeDeadCode> _self_, jule::Ptr<_1abcc0c8a_Assign> _16838_assign) {
	_1a405b66b_optimizeExprModel(_self_, &(_16838_assign.get()._field_L.get()._field_Model));
	_1a405b66b_optimizeExprModel(_self_, &(_16838_assign.get()._field_R.get()._field_Model));
}



inline void _1a405d0a7_optimizeMultiAssign(jule::Ptr<_1a405a934_scopeDeadCode> _self_, jule::Ptr<_1abcc1142_MultiAssign> _17343_assign) {
	{
		auto expr = &(_17343_assign.get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d29964:;
		if (it != expr_end) {
			jule::Ptr<_1abd5dc4b_Data> _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_1a405b66b_optimizeExprModel(_self_, &(_17421_l.get()._field_Model));
				};
			}
			_iter_next_1a6d29964:;
			++it;
			goto _iter_begin_1a6d29964;
		}
		_iter_end_1a6d29964:;
	};
	_1a405b66b_optimizeExprModel(_self_, &(_17343_assign.get()._field_R));
}



inline void _1a405d32c_optimizeStmt(jule::Ptr<_1a405a934_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1a6d2aea4:;
			{
				jule::Ptr<_1abcbc935_Scope> _18521_scope = _18236_st.cast_ptr<_1abcbc935_Scope>(&__jule_any_type22);;
				if (_18521_scope.get()._field_Deferred) {
					_1a405d838_eliminateDeadCodeOfScope(_18521_scope);
				} else {
					_1a405adb8_optimizeChild(_self_, &(_18521_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1a6d2b12a:;
			{
				_1a405c0b7_optimizeRangeIter(_self_, _18236_st.cast_ptr<_1abcbe5d5_RangeIter>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1a6d2b191:;
			{
				_1a405c33c_optimizeWhileIter(_self_, _18236_st.cast_ptr<_1abcbdc00_WhileIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1a6d2b207:;
			{
				_1a405c5b2_optimizeInfIter(_self_, _18236_st.cast_ptr<_1abcbd77c_InfIter>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1a6d2b27e:;
			{
				_1a405c837_optimizeConditional(_self_, _18236_st.cast_ptr<_1abcbd491_Conditional>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1a6d2b306:;
			{
				_1a405caac_optimizeMatch(_self_, _18236_st.cast_ptr<_1abcc174c_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1a6d2b37d:;
			{
				_1a405cd32_optimizeAssign(_self_, _18236_st.cast_ptr<_1abcc0c8a_Assign>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1a6d2b405:;
			{
				_1a405d0a7_optimizeMultiAssign(_self_, _18236_st.cast_ptr<_1abcc1142_MultiAssign>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1a6d2b47c:;
			{
				jule::Ptr<_1abd5dc4b_Data> _20621_d = _18236_st.cast_ptr<_1abd5dc4b_Data>(&__jule_any_type24);;
				if (_self_.get()._field_except) {
					goto _match_end_1a6d2b0b4;
				};
				{
					auto &_match_expr{ _20621_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type30) {
						_case_begin_1a6d318a0:;
						{
							_1a405b847_eliminateFollowed(_self_.ptr());
						}
					}
					else {
						_case_begin_1a6d31273:;
						{
							_1a405b66b_optimizeExprModel(_self_, &(_20621_d.get()._field_Model));
						}
					}
					_match_end_1a6d3121d:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1a6d2b504:;
			{
				_1a405b847_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1a6d2b57b:;
			{
				_1a405babc_pushGoto(_self_, _18236_st.cast_ptr<_1abcc0460_GotoSt>(&__jule_any_type43));
				_1a405b847_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1a6d2b603:;
			{
				_1a405bd42_pushLabel(_self_, _18236_st.cast_ptr<_1abcc0174_Label>(&__jule_any_type21));
			}
		}
		_match_end_1a6d2b0b4:;
	};
}



inline void _1a405d508_optimizeStmts(jule::Ptr<_1a405a934_scopeDeadCode> _self_) {
	_self_.get()._field_i=0LL;
	for (; (_self_.get()._field_i < (*(_self_.get()._field_stmts)).len()); (_self_.get()._field_i)++) {
		{
			_1a405d32c_optimizeStmt(_self_, (*(_self_.get()._field_stmts))[_self_.get()._field_i]);
		}
	_iter_next_1a6d32c36:;
	}
	_iter_end_1a6d32c36:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a405a934_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _1a405e88e_exprDeadCode static__1a405ee77_new(jule::Ptr<_1a405a934_scopeDeadCode>* _5024_s) {
	return _1a405e88e_exprDeadCode{._field_s=(*(_5024_s))};;
}



inline void _1a40601ec_binary(_1a405e88e_exprDeadCode* _self_, jule::Ptr<_1acb0e204_BinopExprModel> _5625_m) {
	_1a4065b92_optimize(_self_, &(_5625_m.get()._field_Left.get()._field_Model));
	_1a4065b92_optimize(_self_, &(_5625_m.get()._field_Right.get()._field_Model));
}



inline void _1a4060472_unary(_1a405e88e_exprDeadCode* _self_, jule::Ptr<_1acb0e5ab_UnaryExprModel> _6124_m) {
	_1a4065b92_optimize(_self_, &(_6124_m.get()._field_Expr.get()._field_Model));
}



inline void _1a40606e7_structureLit(_1a405e88e_exprDeadCode* _self_, jule::Ptr<_1acb0ed5e_StructLitExprModel> _6531_m) {
	{
		auto expr = &(_6531_m.get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d3607a:;
		if (it != expr_end) {
			jule::Ptr<_1acb0e9a7_StructArgExprModel> _6621_arg = *it;
			{
				_1a4065b92_optimize(_self_, &(_6621_arg.get()._field_Expr));
			}
			_iter_next_1a6d3607a:;
			++it;
			goto _iter_begin_1a6d3607a;
		}
		_iter_end_1a6d3607a:;
	};
}



inline void _1a406096c_allocStructure(_1a405e88e_exprDeadCode* _self_, jule::Ptr<_1acb1016c_AllocStructLitExprModel> _7133_m) {
	_1a40606e7_structureLit(_self_, _7133_m.get()._field_Lit);
}



inline void _1a4060be2_casting(_1a405e88e_exprDeadCode* _self_, jule::Ptr<_1acb106bc_CastingExprModel> _7526_m) {
	_1a4065b92_optimize(_self_, &(_7526_m.get()._field_Expr));
}



inline void _1a4060e67_args(_1a405e88e_exprDeadCode* _self_, jule::Slice<jule::Any>* _7924_args) {
	{
		auto expr = _7924_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d3807c:;
		if (it != expr_end) {
			jule::Any _8021_arg = *it;
			{
				_1a4065b92_optimize(_self_, &(_8021_arg));
			}
			_iter_next_1a6d3807c:;
			++it;
			goto _iter_begin_1a6d3807c;
		}
		_iter_end_1a6d3807c:;
	};
}



inline void _1a40611dc_funcCall(_1a405e88e_exprDeadCode* _self_, jule::Ptr<_1acb1106e_FnCallExprModel> _8527_m) {
	_1a4065b92_optimize(_self_, &(_8527_m.get()._field_Expr));
	_1a4060e67_args(_self_, &(_8527_m.get()._field_Args));
	if ((_8527_m.get()._field_Except != nullptr)) {
		_1a405b160_optimizeBodyChildExceptional((*(_self_))._field_s, &(_8527_m.get()._field_Except));
	};
}



inline void _1a4061462_slice(_1a405e88e_exprDeadCode* _self_, jule::Ptr<_1acb11426_SliceExprModel> _9324_m) {
	_1a4060e67_args(_self_, &(_9324_m.get()._field_Elems));
}



inline void _1a40616d7_array(_1a405e88e_exprDeadCode* _self_, jule::Ptr<_1acb1414e_ArrayExprModel> _9724_m) {
	if (((_9724_m.get()._field_Elems.len() == 2LL) && (_9724_m.get()._field_Elems[1LL] == nullptr))) {
		_1a4065b92_optimize(_self_, &(_9724_m.get()._field_Elems[0LL]));
	};
	_1a4060e67_args(_self_, &(_9724_m.get()._field_Elems));
}



inline void _1a406195c_indexing(_1a405e88e_exprDeadCode* _self_, jule::Ptr<_1acb11899_IndexingExprModel> _10427_m) {
	_1a4065b92_optimize(_self_, &(_10427_m.get()._field_Expr.get()._field_Model));
	_1a4065b92_optimize(_self_, &(_10427_m.get()._field_Index.get()._field_Model));
}



inline void _1a4061bd2_anonFunc(_1a405e88e_exprDeadCode* _self_, jule::Ptr<_1acb11c51_AnonFnExprModel> _10927_m) {
	_1a405d838_eliminateDeadCodeOfScope(_10927_m.get()._field_Func.get()._field_Scope);
}



inline void _1a4061e57_mapExpr(_1a405e88e_exprDeadCode* _self_, jule::Ptr<_1acb1257b_MapExprModel> _11326_m) {
	{
		auto expr = &(_11326_m.get()._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d3d3d4:;
		if (it != expr_end) {
			jule::Ptr<_1acb12108_KeyValPairExprModel> _11421_pair = *it;
			{
				_1a4065b92_optimize(_self_, &(_11421_pair.get()._field_Key));
				_1a4065b92_optimize(_self_, &(_11421_pair.get()._field_Val));
			}
			_iter_next_1a6d3d3d4:;
			++it;
			goto _iter_begin_1a6d3d3d4;
		}
		_iter_end_1a6d3d3d4:;
	};
}



inline void _1a40621cc_slicing(_1a405e88e_exprDeadCode* _self_, jule::Ptr<_1acb12aba_SlicingExprModel> _12026_m) {
	_1a4065b92_optimize(_self_, &(_12026_m.get()._field_Expr));
	_1a4065b92_optimize(_self_, &(_12026_m.get()._field_Left));
	if ((_12026_m.get()._field_Right != nullptr)) {
		_1a4065b92_optimize(_self_, &(_12026_m.get()._field_Right));
	};
}



inline void _1a4062452_traitSub(_1a405e88e_exprDeadCode* _self_, jule::Ptr<_1acb13109_TraitSubIdentExprModel> _12827_m) {
	_1a4065b92_optimize(_self_, &(_12827_m.get()._field_Expr));
}



inline void _1a40626c7_structureSub(_1a405e88e_exprDeadCode* _self_, jule::Ptr<_1acb138e0_StructSubIdentExprModel> _13231_m) {
	_1a4065b92_optimize(_self_, &(_13231_m.get()._field_Expr.get()._field_Model));
}



inline void _1a406294c_commonSub(_1a405e88e_exprDeadCode* _self_, jule::Ptr<_1acb1499b_CommonSubIdentExprModel> _13628_m) {
	_1a4065b92_optimize(_self_, &(_13628_m.get()._field_Expr));
}



inline void _1a4062bc2_tuple(_1a405e88e_exprDeadCode* _self_, jule::Ptr<_1acb14c98_TupleExprModel> _14024_m) {
	{
		auto expr = &(_14024_m.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d42262:;
		if (it != expr_end) {
			jule::Ptr<_1abd5dc4b_Data> _14121_d = *it;
			{
				_1a4065b92_optimize(_self_, &(_14121_d.get()._field_Model));
			}
			_iter_next_1a6d42262:;
			++it;
			goto _iter_begin_1a6d42262;
		}
		_iter_end_1a6d42262:;
	};
}



inline void _1a4062e47_newCall(_1a405e88e_exprDeadCode* _self_, jule::Ptr<_1acb15c66_BuiltinNewCallExprModel> _14626_m) {
	if ((_14626_m.get()._field_Init != nullptr)) {
		_1a4065b92_optimize(_self_, &(_14626_m.get()._field_Init));
	};
}



inline void _1a40631bc_outCall(_1a405e88e_exprDeadCode* _self_, jule::Ptr<_1acb15172_BuiltinOutCallExprModel> _15226_m) {
	_1a4065b92_optimize(_self_, &(_15226_m.get()._field_Expr));
}



inline void _1a4063442_outlnCall(_1a405e88e_exprDeadCode* _self_, jule::Ptr<_1acb1555c_BuiltinOutlnCallExprModel> _15628_m) {
	_1a4065b92_optimize(_self_, &(_15628_m.get()._field_Expr));
}



inline void _1a40636b7_panicCall(_1a405e88e_exprDeadCode* _self_, jule::Ptr<_1acb16151_BuiltinPanicCallExprModel> _16028_m) {
	_1a4065b92_optimize(_self_, &(_16028_m.get()._field_Expr));
}



inline void _1a406393c_assertCall(_1a405e88e_exprDeadCode* _self_, jule::Ptr<_1acb16607_BuiltinAssertCallExprModel> _16429_m) {
	_1a4065b92_optimize(_self_, &(_16429_m.get()._field_Expr));
}



inline void _1a4063bb2_errorCall(_1a405e88e_exprDeadCode* _self_, jule::Ptr<_1acb1d345_BuiltinErrorCallExprModel> _16828_m) {
	_1a4065b92_optimize(_self_, &(_16828_m.get()._field_Err.get()._field_Model));
}



inline void _1a4063e37_makeCall(_1a405e88e_exprDeadCode* _self_, jule::Ptr<_1acb16aad_BuiltinMakeCallExprModel> _17227_m) {
	if ((_17227_m.get()._field_Len != nullptr)) {
		_1a4065b92_optimize(_self_, &(_17227_m.get()._field_Len));
	};
	if ((_17227_m.get()._field_Cap != nullptr)) {
		_1a4065b92_optimize(_self_, &(_17227_m.get()._field_Cap));
	};
}



inline void _1a40641ac_appendCall(_1a405e88e_exprDeadCode* _self_, jule::Ptr<_1acb16e98_BuiltinAppendCallExprModel> _18129_m) {
	_1a4065b92_optimize(_self_, &(_18129_m.get()._field_Dest));
	_1a4065b92_optimize(_self_, &(_18129_m.get()._field_Elements));
}



inline void _1a4064432_lenCall(_1a405e88e_exprDeadCode* _self_, jule::Ptr<_1acb172b7_BuiltinLenCallExprModel> _18626_m) {
	_1a4065b92_optimize(_self_, &(_18626_m.get()._field_Expr.get()._field_Model));
}



inline void _1a40646a7_capCall(_1a405e88e_exprDeadCode* _self_, jule::Ptr<_1acb175d6_BuiltinCapCallExprModel> _19026_m) {
	_1a4065b92_optimize(_self_, &(_19026_m.get()._field_Expr.get()._field_Model));
}



inline void _1a406492c_cloneCall(_1a405e88e_exprDeadCode* _self_, jule::Ptr<_1acb1587b_BuiltinCloneCallExprModel> _19428_m) {
	_1a4065b92_optimize(_self_, &(_19428_m.get()._field_Expr));
}



inline void _1a4064ba2_deleteCall(_1a405e88e_exprDeadCode* _self_, jule::Ptr<_1acb1cb19_BuiltinDeleteCallExprModel> _19829_m) {
	_1a4065b92_optimize(_self_, &(_19829_m.get()._field_Dest.get()._field_Model));
	if ((_19829_m.get()._field_Key != nullptr)) {
		_1a4065b92_optimize(_self_, &(_19829_m.get()._field_Key.get()._field_Model));
	};
}



inline void _1a4064e27_sizeof(_1a405e88e_exprDeadCode* _self_, jule::Ptr<_1acb1d642_SizeofExprModel> _20525_m) {
	_1a4065b92_optimize(_self_, &(_20525_m.get()._field_Expr));
}



inline void _1a406519c_alignof(_1a405e88e_exprDeadCode* _self_, jule::Ptr<_1acb1d92d_AlignofExprModel> _20926_m) {
	_1a4065b92_optimize(_self_, &(_20926_m.get()._field_Expr));
}



inline void _1a4065422_integratedToStr(_1a405e88e_exprDeadCode* _self_, jule::Ptr<_1acb1e027_IntegratedToStrExprModel> _21334_m) {
	_1a4065b92_optimize(_self_, &(_21334_m.get()._field_Expr));
}



inline void _1a4065697_free(_1a405e88e_exprDeadCode* _self_, jule::Ptr<_1acb1e6cb_FreeExprModel> _21723_m) {
	_1a4065b92_optimize(_self_, &(_21723_m.get()._field_Expr));
}



inline void _1a406591c_backendEmit(_1a405e88e_exprDeadCode* _self_, jule::Ptr<_1acb1e3e0_BackendEmitExprModel> _22130_m) {
	_1a4060e67_args(_self_, &(_22130_m.get()._field_Exprs));
}



inline void _1a4065b92_optimize(_1a405e88e_exprDeadCode* _self_, jule::Any* _22528_model) {
	{
		auto &_match_expr{ (*(_22528_model)) };
		
		if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1a6d4db42:;
			{
				_1a40601ec_binary(_self_, (*(_22528_model)).cast_ptr<_1acb0e204_BinopExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1a6d4dbb9:;
			{
				_1a4060472_unary(_self_, (*(_22528_model)).cast_ptr<_1acb0e5ab_UnaryExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1a6d4dc41:;
			{
				_1a40606e7_structureLit(_self_, (*(_22528_model)).cast_ptr<_1acb0ed5e_StructLitExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1a6d4e11a:;
			{
				_1a406096c_allocStructure(_self_, (*(_22528_model)).cast_ptr<_1acb1016c_AllocStructLitExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1a6d4e181:;
			{
				_1a4060be2_casting(_self_, (*(_22528_model)).cast_ptr<_1acb106bc_CastingExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1a6d4e208:;
			{
				_1a40611dc_funcCall(_self_, (*(_22528_model)).cast_ptr<_1acb1106e_FnCallExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1a6d4e280:;
			{
				_1a4061462_slice(_self_, (*(_22528_model)).cast_ptr<_1acb11426_SliceExprModel>(&__jule_any_type82));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1a6d4e307:;
			{
				_1a40616d7_array(_self_, (*(_22528_model)).cast_ptr<_1acb1414e_ArrayExprModel>(&__jule_any_type90));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1a6d4e37e:;
			{
				_1a406195c_indexing(_self_, (*(_22528_model)).cast_ptr<_1acb11899_IndexingExprModel>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1a6d4e406:;
			{
				_1a4061bd2_anonFunc(_self_, (*(_22528_model)).cast_ptr<_1acb11c51_AnonFnExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1a6d4e47d:;
			{
				_1a4061e57_mapExpr(_self_, (*(_22528_model)).cast_ptr<_1acb1257b_MapExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1a6d4e505:;
			{
				_1a40621cc_slicing(_self_, (*(_22528_model)).cast_ptr<_1acb12aba_SlicingExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1a6d4e57c:;
			{
				_1a4062452_traitSub(_self_, (*(_22528_model)).cast_ptr<_1acb13109_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1a6d4e604:;
			{
				_1a40626c7_structureSub(_self_, (*(_22528_model)).cast_ptr<_1acb138e0_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1a6d4e67b:;
			{
				_1a406294c_commonSub(_self_, (*(_22528_model)).cast_ptr<_1acb1499b_CommonSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1a6d4e703:;
			{
				_1a4062bc2_tuple(_self_, (*(_22528_model)).cast_ptr<_1acb14c98_TupleExprModel>(&__jule_any_type87));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1a6d4e77a:;
			{
				_1a40631bc_outCall(_self_, (*(_22528_model)).cast_ptr<_1acb15172_BuiltinOutCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1a6d4e802:;
			{
				_1a4063442_outlnCall(_self_, (*(_22528_model)).cast_ptr<_1acb1555c_BuiltinOutlnCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1a6d4e879:;
			{
				_1a4062e47_newCall(_self_, (*(_22528_model)).cast_ptr<_1acb15c66_BuiltinNewCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1a6d4e901:;
			{
				_1a40636b7_panicCall(_self_, (*(_22528_model)).cast_ptr<_1acb16151_BuiltinPanicCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1a6d4e978:;
			{
				_1a406393c_assertCall(_self_, (*(_22528_model)).cast_ptr<_1acb16607_BuiltinAssertCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1a6d4ea00:;
			{
				_1a4063bb2_errorCall(_self_, (*(_22528_model)).cast_ptr<_1acb1d345_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1a6d4ea77:;
			{
				_1a4063e37_makeCall(_self_, (*(_22528_model)).cast_ptr<_1acb16aad_BuiltinMakeCallExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1a6d4eaee:;
			{
				_1a40641ac_appendCall(_self_, (*(_22528_model)).cast_ptr<_1acb16e98_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1a6d4eb76:;
			{
				_1a4064432_lenCall(_self_, (*(_22528_model)).cast_ptr<_1acb172b7_BuiltinLenCallExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1a6d4ebed:;
			{
				_1a40646a7_capCall(_self_, (*(_22528_model)).cast_ptr<_1acb175d6_BuiltinCapCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1a6d4ec75:;
			{
				_1a406492c_cloneCall(_self_, (*(_22528_model)).cast_ptr<_1acb1587b_BuiltinCloneCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1a6d4ecec:;
			{
				_1a4064ba2_deleteCall(_self_, (*(_22528_model)).cast_ptr<_1acb1cb19_BuiltinDeleteCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1a6d4ed74:;
			{
				_1a4064e27_sizeof(_self_, (*(_22528_model)).cast_ptr<_1acb1d642_SizeofExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1a6d4edeb:;
			{
				_1a406519c_alignof(_self_, (*(_22528_model)).cast_ptr<_1acb1d92d_AlignofExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1a6d4ee73:;
			{
				_1a4065422_integratedToStr(_self_, (*(_22528_model)).cast_ptr<_1acb1e027_IntegratedToStrExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1a6d4eeea:;
			{
				_1a4065697_free(_self_, (*(_22528_model)).cast_ptr<_1acb1e6cb_FreeExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1a6d50072:;
			{
				_1a406591c_backendEmit(_self_, (*(_22528_model)).cast_ptr<_1acb1e3e0_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_1a6d4dd40:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a405e88e_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acd78e1e_StrCompExprModel _Src) {
	_Stream << "StrCompExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "NotEq:" << _Src._field_NotEq;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acd792d7_StrAppendExprModel _Src) {
	_Stream << "StrAppendExprModel{";
	_Stream << "Str:" << _Src._field_Str << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acd795c3_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acd79958_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acd79cdd_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acd7a195_AppendToSliceExprModel _Src) {
	_Stream << "AppendToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Slice:" << _Src._field_Slice;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acd7a6d4_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acd7abbd_StrInsertBeginExprModel _Src) {
	_Stream << "StrInsertBeginExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1acd7bcbd_scopeOptimizer> static__1acd7c2da_new(jule::Ptr<_1abcbc935_Scope> _4623_scope) {
	return jule::new_ptr<_1acd7bcbd_scopeOptimizer>(_1acd7bcbd_scopeOptimizer{._field_scope=_4623_scope});;
}



inline void _1acd7c560_setCurrentStmt(_1acd7bcbd_scopeOptimizer* _self_, jule::Any _5237_stmt) {
	(*(_self_))._field_scope.get()._field_Stmts[(*(_self_))._field_i]=(*(((jule::Any*)((&(_5237_stmt))))));
}



inline void _1acd7c7d5_optimizeData(_1acd7bcbd_scopeOptimizer* _self_, jule::Ptr<_1abd5dc4b_Data> _5635_d) {
	{
		auto &_match_expr{ _5635_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1a6d8996e:;
			{
				jule::Ptr<_1acb1106e_FnCallExprModel> _5921_m = _5635_d.get()._field_Model.cast_ptr<_1acb1106e_FnCallExprModel>(&__jule_any_type35);;
				if (_207305560_Production) {
					if (((!(_1acb2621b_IsBuiltin(_5921_m.get()._field_Func.ptr()))) && _1acd80992_isStdPackage(_5921_m.get()._field_Func.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path, jule::Str("debug", 5)))) {
						_1acd7c560_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
			}
		}
		_match_end_1a6d89760:;
	};
	static__1acd82bb4_optimize(&(_5635_d.get()._field_Model));
}



inline void _1acd7ca5a_optimizeVar(_1acd7bcbd_scopeOptimizer* _self_, jule::Ptr<_1abd1497c_Var> _7134_v) {
	if ((_7134_v.get()._field_Value != nullptr)) {
		static__1acd82bb4_optimize(&(_7134_v.get()._field_Value.get()._field_Data.get()._field_Model));
	};
}



inline void _1acd7ccd0_optimizeConditional(_1acd7bcbd_scopeOptimizer* _self_, jule::Ptr<_1abcbd491_Conditional> _7742_c) {
	{
		auto expr = &(_7742_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d8c664:;
		if (it != expr_end) {
			jule::Ptr<_1abcbcd31_If> _7821_elif = *it;
			{
				static__1acd82bb4_optimize(&(_7821_elif.get()._field_Expr));
				_1acd80376_optimizeChild(_self_, _7821_elif.get()._field_Scope);
			}
			_iter_next_1a6d8c664:;
			++it;
			goto _iter_begin_1a6d8c664;
		}
		_iter_end_1a6d8c664:;
	};
	if ((_7742_c.get()._field_Default != nullptr)) {
		_1acd80376_optimizeChild(_self_, _7742_c.get()._field_Default.get()._field_Scope);
	};
	if ((!(_1acd8b492_Cond))) {
		return;;
	};
	jule::Bool _9017_constCase = false;;
	{
		auto expr = &(_7742_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d8e2d1:;
		if (it != expr_end) {
			jule::I64 _9314_i = it - expr->begin();
			jule::Ptr<_1abcbcd31_If> _9321_elif = *it;
			{
				if ((!(_1acd80ca0_isConstantValidConditionalCase(&(_9321_elif))))) {
					goto _iter_next_1a6d8e2d1;
				};
				_9017_constCase=true;
				_7742_c.get()._field_Elifs=_7742_c.get()._field_Elifs.slice(0LL, _9314_i);
				_7742_c.get()._field_Default=jule::new_ptr<_1abcbd11c_Else>(_1abcbd11c_Else{._field_Scope=_9321_elif.get()._field_Scope});
				goto _iter_end_1a6d8e2d1;
			}
			_iter_next_1a6d8e2d1:;
			++it;
			_9314_i++;
			goto _iter_begin_1a6d8e2d1;
		}
		_iter_end_1a6d8e2d1:;
	};
	if ((_7742_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1abcbcd31_If>* _11017_i = (&(_7742_c.get()._field_Elifs[0LL]));;
	jule::Ptr<_1abcbcd31_If>* _11113_end = (&(_7742_c.get()._field_Elifs[(_7742_c.get()._field_Elifs.len() - 1LL)]));;
	for (; (_11017_i <= _11113_end); (_11017_i)++) {
		{
			{
				if (_1acd81641_isUnreachableConditionalCase(&((*(_11017_i))))) {
					(*(_11017_i))=nullptr;
				};
			};
		}
	_iter_next_1a6d920d6:;
	}
	_iter_end_1a6d920d6:;;
	if ((_7742_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_9017_constCase))) {
		return;;
	};
	jule::I64 _12917_only = -1LL;;
	{
		auto expr = &(_7742_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d935e3:;
		if (it != expr_end) {
			jule::I64 _13013_j = it - expr->begin();
			jule::Ptr<_1abcbcd31_If> _13016_elif = *it;
			{
				if ((_13016_elif != nullptr)) {
					if ((_12917_only != -1LL)) {
						return;;
					};
					_12917_only=_13013_j;
				};
			}
			_iter_next_1a6d935e3:;
			++it;
			_13013_j++;
			goto _iter_begin_1a6d935e3;
		}
		_iter_end_1a6d935e3:;
	};
	if ((_12917_only != -1LL)) {
		_1acd7c560_setCurrentStmt(_self_, jule::Any(_7742_c.get()._field_Elifs[_12917_only].get()._field_Scope, &__jule_any_type22));
	};
}



inline void _1acd7d1ba_buildDefaultConstantTrueCase(_1acd7bcbd_scopeOptimizer* _self_, jule::Ptr<_1abcc2297_Case> _14651_case, jule::I64* _14669_i, jule::Ptr<_1abcc174c_Match>* _14682_m) {
	_14651_case.get()._field_Exprs=nullptr;
	jule::I64 _14813_start = (*(_14669_i));;
	_julec_label_loop:;
	for (;;) {
		{
			if ((_14651_case.get()._field_Scope.get()._field_Stmts.len() == 0LL)) {
				goto _iter_end_1a6d95dba;
			};
			jule::Any *_15422_stmt = &(_14651_case.get()._field_Scope.get()._field_Stmts[(_14651_case.get()._field_Scope.get()._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_15422_stmt)) };
				
				if (_match_expr.type == &__jule_any_type49) {
					_case_begin_1a6d9655d:;
					{
						((*(_14669_i)))++;
						if (((*(_14669_i)) >= (*(_14682_m)).get()._field_Cases.len())) {
							(*(_15422_stmt))=jule::Any((*(_14682_m)).get()._field_Default.get()._field_Scope, &__jule_any_type22);
							goto _iter_end_1a6d95dba;
						};
						_14651_case=(*(_14682_m)).get()._field_Cases[(*(_14669_i))];
						(*(_15422_stmt))=jule::Any(_14651_case.get()._field_Scope, &__jule_any_type22);
					}
				}
				else {
					_case_begin_1a6d977d4:;
					{
						goto _iter_end_1a6d95dba;
					}
				}
				_match_end_1a6d976e6:;
			};
		}
	_iter_next_1a6d95dba:;
	}
	_iter_end_1a6d95dba:;;
	(*(_14682_m)).get()._field_Default=(*(_14682_m)).get()._field_Cases[_14813_start];
	(*(_14682_m)).get()._field_Cases=(*(_14682_m)).get()._field_Cases.slice(0LL, _14813_start);
}



inline void _1acd7d3c9_optimizeMatch(_1acd7bcbd_scopeOptimizer* _self_, jule::Ptr<_1abcc174c_Match> _17236_m) {
	{
		auto expr = &(_17236_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d99770:;
		if (it != expr_end) {
			jule::Ptr<_1abcc2297_Case> _17321_case = *it;
			{
				{
					auto expr = &(_17321_case.get()._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a6d9a0ab:;
					if (it != expr_end) {
						jule::Ptr<_1abd5dc4b_Data> _17425_expr = *it;
						{
							static__1acd82bb4_optimize(&(_17425_expr.get()._field_Model));
						}
						_iter_next_1a6d9a0ab:;
						++it;
						goto _iter_begin_1a6d9a0ab;
					}
					_iter_end_1a6d9a0ab:;
				};
				_1acd80376_optimizeChild(_self_, _17321_case.get()._field_Scope);
			}
			_iter_next_1a6d99770:;
			++it;
			goto _iter_begin_1a6d99770;
		}
		_iter_end_1a6d99770:;
	};
	if ((_17236_m.get()._field_Default != nullptr)) {
		_1acd80376_optimizeChild(_self_, _17236_m.get()._field_Default.get()._field_Scope);
	};
	if ((!(_1acd8b492_Cond))) {
		return;;
	};
	jule::Bool _18717_constCase = false;;
	{
		auto expr = &(_17236_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d9b92b:;
		if (it != expr_end) {
			jule::I64 _19018_i = it - expr->begin();
			jule::Ptr<_1abcc2297_Case> _19025_case = *it;
			{
				if ((!(_1acd81399_isConstantValidMatchCase(&(_19025_case))))) {
					goto _iter_next_1a6d9b92b;
				};
				_18717_constCase=true;
				_1acd7d1ba_buildDefaultConstantTrueCase(_self_, _19025_case, &(_19018_i), &(_17236_m));
				goto _iter_end_1a6d9b92b;
			}
			_iter_next_1a6d9b92b:;
			++it;
			_19018_i++;
			goto _iter_begin_1a6d9b92b;
		}
		_iter_end_1a6d9b92b:;
	};
	if ((_17236_m.get()._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1abcc2297_Case>* _20417_i = (&(_17236_m.get()._field_Cases[0LL]));;
	jule::Ptr<_1abcc2297_Case>* _20513_end = (&(_17236_m.get()._field_Cases[(_17236_m.get()._field_Cases.len() - 1LL)]));;
	for (; (_20417_i <= _20513_end); (_20417_i)++) {
		{
			{
				if (_1acd818e9_isUnreachableMatchCase(&((*(_20417_i))))) {
					(*(_20417_i))=nullptr;
				};
			};
		}
	_iter_next_1a6d9e1c0:;
	}
	_iter_end_1a6d9e1c0:;;
	if ((!(_18717_constCase))) {
		return;;
	};
	jule::I64 _21917_only = -1LL;;
	{
		auto expr = &(_17236_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6da01d2:;
		if (it != expr_end) {
			jule::I64 _22013_j = it - expr->begin();
			jule::Ptr<_1abcc2297_Case> _22016_case = *it;
			{
				if ((_22016_case != nullptr)) {
					if ((_21917_only != -1LL)) {
						return;;
					};
					_21917_only=_22013_j;
				};
			}
			_iter_next_1a6da01d2:;
			++it;
			_22013_j++;
			goto _iter_begin_1a6da01d2;
		}
		_iter_end_1a6da01d2:;
	};
	if ((_21917_only != -1LL)) {
		_1acd7c560_setCurrentStmt(_self_, jule::Any(_17236_m.get()._field_Cases[_21917_only].get()._field_Scope, &__jule_any_type22));
	};
}



inline void _1acd7d64e_optimizeRangeIter(_1acd7bcbd_scopeOptimizer* _self_, jule::Ptr<_1abcbe5d5_RangeIter> _23640_it) {
	static__1acd82bb4_optimize(&(_23640_it.get()._field_Expr.get()._field_Model));
	_1acd80376_optimizeChild(_self_, _23640_it.get()._field_Scope);
}



inline void _1acd7d8c4_optimizeWhileIter(_1acd7bcbd_scopeOptimizer* _self_, jule::Ptr<_1abcbdc00_WhileIter> _24140_it) {
	static__1acd82bb4_optimize(&(_24140_it.get()._field_Expr));
	_1acd80101_optimizeStmt(_self_, _24140_it.get()._field_Next);
	_1acd80376_optimizeChild(_self_, _24140_it.get()._field_Scope);
}



inline jule::Bool _1acd7dbd2_substr(_1acd7bcbd_scopeOptimizer* _self_, jule::Ptr<_1abcc0c8a_Assign> _24729_a) {
	if ((!_24729_a.get()._field_Op.get()._field_Kind.equal("=", 1))) {
		return false;;
	};
	{
		auto &_match_expr{ _24729_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1a6da436d:;
			{
				jule::Ptr<_1acb12aba_SlicingExprModel> _25321_sem = _24729_a.get()._field_R.get()._field_Model.cast_ptr<_1acb12aba_SlicingExprModel>(&__jule_any_type97);;
				if ((_25321_sem.get()._field_Expr == _24729_a.get()._field_L.get()._field_Model)) {
					_1acd7c560_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1acd7a6d4_MutSlicingExprModel>(_1acd7a6d4_MutSlicingExprModel{._field_Token=_25321_sem.get()._field_Token, ._field_Expr=_25321_sem.get()._field_Expr, ._field_Left=_25321_sem.get()._field_Left, ._field_Right=_25321_sem.get()._field_Right}), &__jule_any_type123));
					return true;;
				};
			}
		}
		_match_end_1a6da4318:;
	};
	return false;;
}



inline jule::Bool _1acd7dee0_strInsert(_1acd7bcbd_scopeOptimizer* _self_, jule::Ptr<_1abcc0c8a_Assign> _26732_a) {
	if ((!_26732_a.get()._field_Op.get()._field_Kind.equal("=", 1))) {
		return false;;
	};
	{
		auto &_match_expr{ _26732_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1a6da6c11:;
			{
				jule::Ptr<_1acb0e204_BinopExprModel> _27321_m = _26732_a.get()._field_R.get()._field_Model.cast_ptr<_1acb0e204_BinopExprModel>(&__jule_any_type114);;
				if ((_27321_m.get()._field_Right.get()._field_Model == _26732_a.get()._field_L.get()._field_Model)) {
					_1acd7c560_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1acd7abbd_StrInsertBeginExprModel>(_1acd7abbd_StrInsertBeginExprModel{._field_Dest=_26732_a.get()._field_L.get()._field_Model, ._field_Expr=_27321_m.get()._field_Left.get()._field_Model}), &__jule_any_type124));
					return true;;
				};
			}
		}
		_match_end_1a6da6bab:;
	};
	return false;;
}



inline jule::Bool _1acd7e2ed_strAppend(_1acd7bcbd_scopeOptimizer* _self_, jule::Ptr<_1abcc0c8a_Assign> _28532_a) {
	if ((!_28532_a.get()._field_Op.get()._field_Kind.equal("+=", 2))) {
		return false;;
	};
	{
		auto &_match_expr{ _28532_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a6da95a4:;
			{
				_1acd7c560_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1acd792d7_StrAppendExprModel>(_1acd792d7_StrAppendExprModel{._field_Str=_28532_a.get()._field_L.get()._field_Model, ._field_Expr=_28532_a.get()._field_R.get()._field_Model}), &__jule_any_type125));
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1a6da961a:;
			{
				jule::Ptr<_1acb106bc_CastingExprModel> _30021_c = _28532_a.get()._field_R.get()._field_Model.cast_ptr<_1acb106bc_CastingExprModel>(&__jule_any_type98);;
				jule::Ptr<_1accac407_Prim> _30121_prim = _1acca73be_Prim(_30021_c.get()._field_ExprKind.ptr());;
				if (((_30121_prim == nullptr) && (_1acca8348_Slc(_30021_c.get()._field_ExprKind.ptr()) != nullptr))) {
					_30121_prim=_1acca73be_Prim(_1acca8348_Slc(_30021_c.get()._field_ExprKind.ptr()).get()._field_Elem.ptr());
				};
				if (((_30121_prim == nullptr) || ((!(_1accadbcd_IsU8(_30121_prim.ptr()))) && (!(_1accad705_IsI32(_30121_prim.ptr())))))) {
					goto _match_end_1a6da954e;
				};
				_1acd7c560_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1acd792d7_StrAppendExprModel>(_1acd792d7_StrAppendExprModel{._field_Str=_28532_a.get()._field_L.get()._field_Model, ._field_Expr=_30021_c.get()._field_Expr}), &__jule_any_type125));
				return true;;
			}
		}
		_match_end_1a6da954e:;
	};
	return false;;
}



inline jule::Bool _1acd7e60b_strAssign(_1acd7bcbd_scopeOptimizer* _self_, jule::Ptr<_1abcc0c8a_Assign> _31732_a) {
	if ((!(_1acd8b75b_Str))) {
		return false;;
	};
	jule::Ptr<_1accac407_Prim> _32113_lp = _1acca73be_Prim(_31732_a.get()._field_L.get()._field_Kind.ptr());;
	if (((_32113_lp == nullptr) || (!(_1accb0608_IsStr(_32113_lp.ptr()))))) {
		return false;;
	};
	{
		
		if (_1acd7dbd2_substr(_self_, _31732_a) || _1acd7dee0_strInsert(_self_, _31732_a) || _1acd7e2ed_strAppend(_self_, _31732_a)) {
			_case_begin_1a6daed18:;
			{
				return true;;
			}
		}
		_match_end_1a6daecb3:;
	};
	return false;;
}



inline void _1acd7e881_optimizeAssign(_1acd7bcbd_scopeOptimizer* _self_, jule::Ptr<_1abcc0c8a_Assign> _33437_assign) {
	if (_1acd7e60b_strAssign(_self_, _33437_assign)) {
		return;;
	};
	static__1acd82bb4_optimize(&(_33437_assign.get()._field_L.get()._field_Model));
	static__1acd82bb4_optimize(&(_33437_assign.get()._field_R.get()._field_Model));
	{
		auto &_match_expr{ _33437_assign.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/=", 2) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1a6db1be9:;
			{
				if ((_1acd8a76b_Math && (_1acca8821_Struct(_33437_assign.get()._field_L.get()._field_Kind.ptr()) == nullptr))) {
					_33437_assign.get()._field_Op.get()._field_Kind=_33437_assign.get()._field_Op.get()._field_Kind.slice(0LL, (_33437_assign.get()._field_Op.get()._field_Kind.len() - 1LL));
					jule::Any _34725_model = jule::Any(jule::new_ptr<_1acb0e204_BinopExprModel>(_1acb0e204_BinopExprModel{._field_Left=_33437_assign.get()._field_L, ._field_Right=_33437_assign.get()._field_R, ._field_Op=_33437_assign.get()._field_Op}), &__jule_any_type114);;
					static__1acd82bb4_optimize(&(_34725_model));
					{
						auto &_match_expr{ _34725_model };
						
						if (_match_expr.type == &__jule_any_type114) {
							_case_begin_1a6db416e:;
							{
								_33437_assign.get()._field_R=jule::new_ptr<_1acb0dc3c_OperandExprModel>((*(_33437_assign.get()._field_R)));
								_33437_assign.get()._field_Op.get()._field_Kind=jule::Str("=", 1);
								_33437_assign.get()._field_R.get()._field_Model=_34725_model;
								return;;
							}
						}
						_match_end_1a6db401a:;
					};
					(_33437_assign.get()._field_Op.get()._field_Kind).append("=", 1);
					return;;
				};
			}
		}
		_match_end_1a6db1aea:;
	};
	if (_1acd8a45d_Append) {
		{
			auto &_match_expr{ _33437_assign.get()._field_R.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type26) {
				_case_begin_1a6db588a:;
				{
					jule::Ptr<_1acb16e98_BuiltinAppendCallExprModel> _36825_m = _33437_assign.get()._field_R.get()._field_Model.cast_ptr<_1acb16e98_BuiltinAppendCallExprModel>(&__jule_any_type26);;
					if ((!(_1acd8967c_areSameLvalueExprModel(&(_33437_assign.get()._field_L.get()._field_Model), &(_36825_m.get()._field_Dest))))) {
						return;;
					};
					{
						auto &_match_expr{ _36825_m.get()._field_Elements };
						
						if (_match_expr.type == &__jule_any_type82) {
							_case_begin_1a6db6b11:;
							{
								_1acd7c560_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1acd79cdd_PushToSliceExprModel>(_1acd79cdd_PushToSliceExprModel{._field_Dest=_36825_m.get()._field_Dest, ._field_Elems=_36825_m.get()._field_Elements.cast_ptr<_1acb11426_SliceExprModel>(&__jule_any_type82)}), &__jule_any_type126));
							}
						}
						else {
							_case_begin_1a6db6e30:;
							{
								_1acd7c560_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1acd7a195_AppendToSliceExprModel>(_1acd7a195_AppendToSliceExprModel{._field_Dest=_33437_assign.get()._field_L.get()._field_Model, ._field_Slice=_36825_m.get()._field_Elements}), &__jule_any_type127));
							}
						}
						_match_end_1a6db6dca:;
					};
				}
			}
			_match_end_1a6db35be:;
		};
	};
}



inline void _1acd7eb06_optimizeMultiAssign(_1acd7bcbd_scopeOptimizer* _self_, jule::Ptr<_1abcc1142_MultiAssign> _39042_assign) {
	{
		auto expr = &(_39042_assign.get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6db8030:;
		if (it != expr_end) {
			jule::Ptr<_1abd5dc4b_Data> _39121_l = *it;
			{
				if ((_39121_l != nullptr)) {
					static__1acd82bb4_optimize(&(_39121_l.get()._field_Model));
				};
			}
			_iter_next_1a6db8030:;
			++it;
			goto _iter_begin_1a6db8030;
		}
		_iter_end_1a6db8030:;
	};
	static__1acd82bb4_optimize(&(_39042_assign.get()._field_R));
}



inline void _1acd7ed7b_optimizeRet(_1acd7bcbd_scopeOptimizer* _self_, jule::Ptr<_1abcc2bc1_RetSt> _39934_r) {
	static__1acd82bb4_optimize(&(_39934_r.get()._field_Expr));
}



inline void _1acd80101_optimizeStmt(_1acd7bcbd_scopeOptimizer* _self_, jule::Any _40335_stmt) {
	{
		auto &_match_expr{ _40335_stmt };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1a6db9cce:;
			{
				_1acd80376_optimizeChild(_self_, _40335_stmt.cast_ptr<_1abcbc935_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1a6db9d45:;
			{
				_1acd7c7d5_optimizeData(_self_, _40335_stmt.cast_ptr<_1abd5dc4b_Data>(&__jule_any_type24));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a6db9dab:;
			{
				_1acd7ca5a_optimizeVar(_self_, _40335_stmt.cast_ptr<_1abd1497c_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1a6db9e22:;
			{
				_1acd7ccd0_optimizeConditional(_self_, _40335_stmt.cast_ptr<_1abcbd491_Conditional>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1a6db9e88:;
			{
				_1acd7d64e_optimizeRangeIter(_self_, _40335_stmt.cast_ptr<_1abcbe5d5_RangeIter>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1a6db9eee:;
			{
				_1acd7d8c4_optimizeWhileIter(_self_, _40335_stmt.cast_ptr<_1abcbdc00_WhileIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1a6dba065:;
			{
				_1acd80376_optimizeChild(_self_, _40335_stmt.cast_ptr<_1abcbd77c_InfIter>(&__jule_any_type37).get()._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1a6dba0cb:;
			{
				_1acd7e881_optimizeAssign(_self_, _40335_stmt.cast_ptr<_1abcc0c8a_Assign>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1a6dba142:;
			{
				_1acd7eb06_optimizeMultiAssign(_self_, _40335_stmt.cast_ptr<_1abcc1142_MultiAssign>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1a6dba1b9:;
			{
				_1acd7d3c9_optimizeMatch(_self_, _40335_stmt.cast_ptr<_1abcc174c_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1a6dba241:;
			{
				_1acd7ed7b_optimizeRet(_self_, _40335_stmt.cast_ptr<_1abcc2bc1_RetSt>(&__jule_any_type51));
			}
		}
		_match_end_1a6db9b7a:;
	};
}



inline void _1acd80376_optimizeChild(_1acd7bcbd_scopeOptimizer* _self_, jule::Ptr<_1abcbc935_Scope> _43036_child) {
	jule::Ptr<_1acd7bcbd_scopeOptimizer> _43117_so = static__1acd7c2da_new(_43036_child);;
	_1acd80552_optimize(_43117_so.ptr());
}



inline void _1acd80552_optimize(_1acd7bcbd_scopeOptimizer* _self_) {
	{
		auto expr = &((*(_self_))._field_scope.get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6dc09e9:;
		if (it != expr_end) {
			jule::I64 _43714_i = it - expr->begin();
			jule::Any _43721_stmt = *it;
			{
				(*(_self_))._field_i=_43714_i;
				_1acd80101_optimizeStmt(_self_, _43721_stmt);
			}
			_iter_next_1a6dc09e9:;
			++it;
			_43714_i++;
			goto _iter_begin_1a6dc09e9;
		}
		_iter_end_1a6dc09e9:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1acd7bcbd_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__1acd82bb4_optimize(jule::Any* _5829_model) {
	if (_1a406628b_exprEnabled) {
		jule::Ptr<_1acd826b9_exprOptimizer> _6121_exop = jule::new_ptr<_1acd826b9_exprOptimizer>(_1acd826b9_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)((&((*(_5829_model))))))});;
		_1acd88da7_do(_6121_exop.ptr());
	};
}



inline jule::Bool _1acd82eb1_strCond(_1acd826b9_exprOptimizer* _self_, jule::Ptr<_1acb0e204_BinopExprModel> _6826_m) {
	jule::Ptr<_1accac407_Prim> _6913_lp = _1acca73be_Prim(_6826_m.get()._field_Left.get()._field_Kind.ptr());;
	if (((_6913_lp == nullptr) || (!(_1accb0608_IsStr(_6913_lp.ptr()))))) {
		return false;;
	};
	if (((!_6826_m.get()._field_Op.get()._field_Kind.equal("==", 2)) && (!_6826_m.get()._field_Op.get()._field_Kind.equal("!=", 2)))) {
		return false;;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Left.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a6dcd6a5:;
			{
				({
					jule::Ptr<_1acb0dc3c_OperandExprModel> ___jule_assign_arg = _6826_m.get()._field_Right;
					jule::Ptr<_1acb0dc3c_OperandExprModel> _1___jule_assign_arg = _6826_m.get()._field_Left;
					_6826_m.get()._field_Left = ___jule_assign_arg;
					_6826_m.get()._field_Right = _1___jule_assign_arg;
				});
				goto _julec_label_opt;
			}
		}
		_match_end_1a6dcd650:;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a6dcca17:;
			{
				goto _match_end_1a6dce442;
			}
		}
		else {
			_case_begin_1a6dce783:;
			{
				return true;;
			}
		}
		_match_end_1a6dce442:;
	};
	_julec_label_opt:;
	jule::Ptr<_1ddeb4b1c_Const> _8817_c = _6826_m.get()._field_Right.get()._field_Model.cast_ptr<_1ddeb4b1c_Const>(&__jule_any_type19);;
	{
		auto &_match_expr{ _6826_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1a6dd0850:;
			{
				if (_1ddeb6b52_ReadStr(_8817_c.ptr()).empty()) {
					(*((*(_self_))._field_model))=jule::Any(jule::new_ptr<_1acb1499b_CommonSubIdentExprModel>(_1acb1499b_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}), &__jule_any_type73);
					goto _match_end_1a6dd07ea;
				};
				jule::Any _9921_model = jule::Any(jule::new_ptr<_1acd78e1e_StrCompExprModel>(_1acd78e1e_StrCompExprModel{._field_Left=_6826_m.get()._field_Left.get()._field_Model, ._field_Right=_8817_c, ._field_NotEq=false}), &__jule_any_type128);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_9921_model))))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1a6dd08b6:;
			{
				if (_1ddeb6b52_ReadStr(_8817_c.ptr()).empty()) {
					jule::Ptr<_2097d15d8_Token> _10725_op = _6826_m.get()._field_Op;;
					_10725_op.get()._field_Kind=jule::Str("!", 1);
					(*((*(_self_))._field_model))=jule::Any(jule::new_ptr<_1acb0e5ab_UnaryExprModel>(_1acb0e5ab_UnaryExprModel{._field_Expr=jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Model=jule::Any(jule::new_ptr<_1acb1499b_CommonSubIdentExprModel>(_1acb1499b_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}), &__jule_any_type73), }), ._field_Op=_10725_op}), &__jule_any_type74);
					goto _match_end_1a6dd07ea;
				};
				jule::Any _12121_model = jule::Any(jule::new_ptr<_1acd78e1e_StrCompExprModel>(_1acd78e1e_StrCompExprModel{._field_Left=_6826_m.get()._field_Left.get()._field_Model, ._field_Right=_8817_c, ._field_NotEq=true}), &__jule_any_type128);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_12121_model))))));
			}
		}
		_match_end_1a6dd07ea:;
	};
	return true;;
}



inline void _1acd83236_binary(_1acd826b9_exprOptimizer* _self_, jule::Ptr<_1acb0e204_BinopExprModel> _13125_m) {
	static__1acd82bb4_optimize(&(_13125_m.get()._field_Left.get()._field_Model));
	static__1acd82bb4_optimize(&(_13125_m.get()._field_Right.get()._field_Model));
	{
		auto &_match_expr{ _13125_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a6dd714d:;
			{
				goto _match_end_1a6dd6b75;
			}
		}
		else {
			_case_begin_1a6dd6c1e:;
			{
				return;;
			}
		}
		_match_end_1a6dd6b75:;
	};
	if ((_1acd8b492_Cond && _1acd82eb1_strCond(_self_, _13125_m))) {
		return;;
	};
	if ((!(_1acd8a76b_Math))) {
		return;;
	};
	{
		auto &_match_expr{ _13125_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1a6dd7c31:;
			{
				jule::Bool _15118_ok = false;;
				jule::U64 _15122_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1acd892e7_checkForBitShiftOpt(&(_13125_m.get()._field_Left), &(_13125_m.get()._field_Right));
					_15118_ok = __jule_assign_result.__jule_result_arg0;
					_15122_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_15118_ok) {
					_13125_m.get()._field_Op.get()._field_Kind=jule::Str("<<", 2);
					jule::Ptr<_1ddeb4b1c_Const> _15425_c = _13125_m.get()._field_Right.get()._field_Model.cast_ptr<_1ddeb4b1c_Const>(&__jule_any_type19);;
					_1ddeb7aed_SetU64(_15425_c.ptr(), _15122_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1a6dd7c97:;
			{
				jule::Bool _15918_ok = false;;
				jule::U64 _15922_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1acd892e7_checkForBitShiftOpt(&(_13125_m.get()._field_Left), &(_13125_m.get()._field_Right));
					_15918_ok = __jule_assign_result.__jule_result_arg0;
					_15922_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_15918_ok) {
					_13125_m.get()._field_Op.get()._field_Kind=jule::Str(">>", 2);
					jule::Ptr<_1ddeb4b1c_Const> _16225_c = _13125_m.get()._field_Right.get()._field_Model.cast_ptr<_1ddeb4b1c_Const>(&__jule_any_type19);;
					_1ddeb7aed_SetU64(_16225_c.ptr(), _15922_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1a6dd7d1e:;
			{
				jule::Ptr<_1ddeb4b1c_Const> _16721_c = _13125_m.get()._field_Right.get()._field_Model.cast_ptr<_1ddeb4b1c_Const>(&__jule_any_type19);;
				jule::F64 _16817_d = _1ddeb7603_AsF64(_16721_c.ptr());;
				if ((_16817_d == 2LL)) {
					_13125_m.get()._field_Op.get()._field_Kind=jule::Str("&", 1);
					_1ddeb7878_SetI64(_16721_c.ptr(), 1LL);
				};
			}
		}
		_match_end_1a6dd7bcb:;
	};
	jule::Any _17417_model = jule::Any(jule::new_ptr<_1acd795c3_UnsafeBinopExprModel>(_1acd795c3_UnsafeBinopExprModel{._field_Node=_13125_m}), &__jule_any_type129);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_17417_model))))));
}



inline void _1acd834ab_unary(_1acd826b9_exprOptimizer* _self_, jule::Ptr<_1acb0e5ab_UnaryExprModel> _17824_m) {
	static__1acd82bb4_optimize(&(_17824_m.get()._field_Expr.get()._field_Model));
	if ((_1acd8b0b8_Ptr && _17824_m.get()._field_Op.get()._field_Kind.equal("*", 1))) {
		{
			auto &_match_expr{ _17824_m.get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type74) {
				_case_begin_1a6dde81a:;
				{
					jule::Ptr<_1acb0e5ab_UnaryExprModel> _18325_um = _17824_m.get()._field_Expr.get()._field_Model.cast_ptr<_1acb0e5ab_UnaryExprModel>(&__jule_any_type74);;
					if (_18325_um.get()._field_Op.get()._field_Kind.equal("&", 1)) {
						(*((*(_self_))._field_model))=_18325_um.get()._field_Expr.get()._field_Model;
					};
				}
			}
			_match_end_1a6dde7b5:;
		};
	};
}



inline void _1acd83731_structureLit(_1acd826b9_exprOptimizer* _self_, jule::Ptr<_1acb0ed5e_StructLitExprModel> _19131_m) {
	{
		auto expr = &(_19131_m.get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6de1289:;
		if (it != expr_end) {
			jule::Ptr<_1acb0e9a7_StructArgExprModel> _19221_arg = *it;
			{
				static__1acd82bb4_optimize(&(_19221_arg.get()._field_Expr));
			}
			_iter_next_1a6de1289:;
			++it;
			goto _iter_begin_1a6de1289;
		}
		_iter_end_1a6de1289:;
	};
}



inline void _1acd839a6_allocStructure(_1acd826b9_exprOptimizer* _self_, jule::Ptr<_1acb1016c_AllocStructLitExprModel> _19733_m) {
	_1acd83731_structureLit(_self_, _19733_m.get()._field_Lit);
}



inline void _1acd83c2b_casting(_1acd826b9_exprOptimizer* _self_, jule::Ptr<_1acb106bc_CastingExprModel> _20126_m) {
	static__1acd82bb4_optimize(&(_20126_m.get()._field_Expr));
}



inline void _1acd83ea1_args(_1acd826b9_exprOptimizer* _self_, jule::Slice<jule::Any>* _20524_args) {
	{
		auto expr = _20524_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6de2a60:;
		if (it != expr_end) {
			jule::I64 _20614_i = it - expr->begin();
			jule::Any _20621_arg = *it;
			{
				static__1acd82bb4_optimize(&(_20621_arg));
				(*(_20524_args))[_20614_i]=_20621_arg;
			}
			_iter_next_1a6de2a60:;
			++it;
			_20614_i++;
			goto _iter_begin_1a6de2a60;
		}
		_iter_end_1a6de2a60:;
	};
}



inline void _1acd84226_scope(_1acd826b9_exprOptimizer* _self_, jule::Ptr<_1abcbc935_Scope>* _21225_s) {
	jule::Ptr<_1acd7bcbd_scopeOptimizer> _21317_scopt = static__1acd7c2da_new((*(_21225_s)));;
	_1acd80552_optimize(_21317_scopt.ptr());
}



inline void _1acd8449b_funcCall(_1acd826b9_exprOptimizer* _self_, jule::Ptr<_1acb1106e_FnCallExprModel> _21727_m) {
	static__1acd82bb4_optimize(&(_21727_m.get()._field_Expr));
	_1acd83ea1_args(_self_, &(_21727_m.get()._field_Args));
	if ((_21727_m.get()._field_Except != nullptr)) {
		_1acd84226_scope(_self_, &(_21727_m.get()._field_Except));
	};
}



inline void _1acd84721_slice(_1acd826b9_exprOptimizer* _self_, jule::Ptr<_1acb11426_SliceExprModel> _22524_m) {
	_1acd83ea1_args(_self_, &(_22524_m.get()._field_Elems));
}



inline void _1acd84996_array(_1acd826b9_exprOptimizer* _self_, jule::Ptr<_1acb1414e_ArrayExprModel> _22924_m) {
	if (((_22924_m.get()._field_Elems.len() == 2LL) && (_22924_m.get()._field_Elems[1LL] == nullptr))) {
		jule::Any _23121_elem = _22924_m.get()._field_Elems[0LL];;
		static__1acd82bb4_optimize(&(_23121_elem));
		_22924_m.get()._field_Elems[0LL]=_23121_elem;
	};
	_1acd83ea1_args(_self_, &(_22924_m.get()._field_Elems));
}



inline void _1acd84c1b_indexing(_1acd826b9_exprOptimizer* _self_, jule::Ptr<_1acb11899_IndexingExprModel> _23827_m) {
	static__1acd82bb4_optimize(&(_23827_m.get()._field_Expr.get()._field_Model));
	static__1acd82bb4_optimize(&(_23827_m.get()._field_Index.get()._field_Model));
	if ((!(_1acd8aa35_Access))) {
		return;;
	};
	jule::Bool _24413_array = (_1acca80d4_Arr(_23827_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr);;
	if ((_24413_array && _1abd5e5ba_IsConst(_23827_m.get()._field_Index.ptr()))) {
		jule::Any _24721_model = jule::Any(jule::new_ptr<_1acd79958_UnsafeIndexingExprModel>(_1acd79958_UnsafeIndexingExprModel{._field_Node=_23827_m}), &__jule_any_type130);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_24721_model))))));
		return;;
	};
	{
		auto &_match_expr{ _23827_m.get()._field_Index.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a6dea54b:;
			{
				jule::Ptr<_1abd1497c_Var> _25317_i = _23827_m.get()._field_Index.get()._field_Model.cast_ptr<_1abd1497c_Var>(&__jule_any_type8);;
				if ((_25317_i.get()._field_Mutable || (_25317_i.get()._field_IterRelation == nullptr))) {
					goto _match_end_1a6dea3e7;
				};
				{
					auto &_match_expr{ _23827_m.get()._field_Expr.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1a6debc12:;
						{
							jule::Ptr<_1abd1497c_Var> _25921_r = _23827_m.get()._field_Expr.get()._field_Model.cast_ptr<_1abd1497c_Var>(&__jule_any_type8);;
							if ((_25317_i.get()._field_IterRelation.get()._field_Range == _25921_r)) {
								jule::Any _26229_model = jule::Any(jule::new_ptr<_1acd79958_UnsafeIndexingExprModel>(_1acd79958_UnsafeIndexingExprModel{._field_Node=_23827_m}), &__jule_any_type130);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_26229_model))))));
							};
						}
					}
					_match_end_1a6deb8e3:;
				};
			}
		}
		_match_end_1a6dea3e7:;
	};
}



inline void _1acd84e91_anonFunc(_1acd826b9_exprOptimizer* _self_, jule::Ptr<_1acb11c51_AnonFnExprModel> _26927_m) {
	_1acd84226_scope(_self_, &(_26927_m.get()._field_Func.get()._field_Scope));
}



inline void _1acd85216_mapExpr(_1acd826b9_exprOptimizer* _self_, jule::Ptr<_1acb1257b_MapExprModel> _27326_m) {
	{
		auto expr = &(_27326_m.get()._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6dee1ed:;
		if (it != expr_end) {
			jule::Ptr<_1acb12108_KeyValPairExprModel> _27421_pair = *it;
			{
				static__1acd82bb4_optimize(&(_27421_pair.get()._field_Key));
				static__1acd82bb4_optimize(&(_27421_pair.get()._field_Val));
			}
			_iter_next_1a6dee1ed:;
			++it;
			goto _iter_begin_1a6dee1ed;
		}
		_iter_end_1a6dee1ed:;
	};
}



inline void _1acd8548b_slicing(_1acd826b9_exprOptimizer* _self_, jule::Ptr<_1acb12aba_SlicingExprModel> _28026_m) {
	static__1acd82bb4_optimize(&(_28026_m.get()._field_Expr));
	static__1acd82bb4_optimize(&(_28026_m.get()._field_Left));
	if ((_28026_m.get()._field_Right != nullptr)) {
		static__1acd82bb4_optimize(&(_28026_m.get()._field_Right));
	};
}



inline void _1acd85711_traitSub(_1acd826b9_exprOptimizer* _self_, jule::Ptr<_1acb13109_TraitSubIdentExprModel> _28827_m) {
	static__1acd82bb4_optimize(&(_28827_m.get()._field_Expr));
}



inline void _1acd85986_structureSub(_1acd826b9_exprOptimizer* _self_, jule::Ptr<_1acb138e0_StructSubIdentExprModel> _29231_m) {
	static__1acd82bb4_optimize(&(_29231_m.get()._field_Expr.get()._field_Model));
}



inline void _1acd85c0b_commonSub(_1acd826b9_exprOptimizer* _self_, jule::Ptr<_1acb1499b_CommonSubIdentExprModel> _29628_m) {
	static__1acd82bb4_optimize(&(_29628_m.get()._field_Expr));
}



inline void _1acd85e81_tuple(_1acd826b9_exprOptimizer* _self_, jule::Ptr<_1acb14c98_TupleExprModel> _30024_m) {
	{
		auto expr = &(_30024_m.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6e01ed1:;
		if (it != expr_end) {
			jule::Ptr<_1abd5dc4b_Data> _30121_d = *it;
			{
				static__1acd82bb4_optimize(&(_30121_d.get()._field_Model));
			}
			_iter_next_1a6e01ed1:;
			++it;
			goto _iter_begin_1a6e01ed1;
		}
		_iter_end_1a6e01ed1:;
	};
}



inline void _1acd86206_newCall(_1acd826b9_exprOptimizer* _self_, jule::Ptr<_1acb15c66_BuiltinNewCallExprModel> _30626_m) {
	if ((_30626_m.get()._field_Init != nullptr)) {
		static__1acd82bb4_optimize(&(_30626_m.get()._field_Init));
	};
}



inline void _1acd8647b_outCall(_1acd826b9_exprOptimizer* _self_, jule::Ptr<_1acb15172_BuiltinOutCallExprModel> _31226_m) {
	static__1acd82bb4_optimize(&(_31226_m.get()._field_Expr));
}



inline void _1acd86701_outlnCall(_1acd826b9_exprOptimizer* _self_, jule::Ptr<_1acb1555c_BuiltinOutlnCallExprModel> _31628_m) {
	static__1acd82bb4_optimize(&(_31628_m.get()._field_Expr));
}



inline void _1acd86976_panicCall(_1acd826b9_exprOptimizer* _self_, jule::Ptr<_1acb16151_BuiltinPanicCallExprModel> _32028_m) {
	static__1acd82bb4_optimize(&(_32028_m.get()._field_Expr));
}



inline void _1acd86beb_assertCall(_1acd826b9_exprOptimizer* _self_, jule::Ptr<_1acb16607_BuiltinAssertCallExprModel> _32429_m) {
	static__1acd82bb4_optimize(&(_32429_m.get()._field_Expr));
}



inline void _1acd86e71_errorCall(_1acd826b9_exprOptimizer* _self_, jule::Ptr<_1acb1d345_BuiltinErrorCallExprModel> _32828_m) {
	static__1acd82bb4_optimize(&(_32828_m.get()._field_Err.get()._field_Model));
}



inline void _1acd871e6_makeCall(_1acd826b9_exprOptimizer* _self_, jule::Ptr<_1acb16aad_BuiltinMakeCallExprModel> _33227_m) {
	if ((_33227_m.get()._field_Len != nullptr)) {
		static__1acd82bb4_optimize(&(_33227_m.get()._field_Len));
	};
	if ((_33227_m.get()._field_Cap != nullptr)) {
		static__1acd82bb4_optimize(&(_33227_m.get()._field_Cap));
	};
}



inline void _1acd8746b_appendCall(_1acd826b9_exprOptimizer* _self_, jule::Ptr<_1acb16e98_BuiltinAppendCallExprModel> _34129_m) {
	static__1acd82bb4_optimize(&(_34129_m.get()._field_Dest));
	static__1acd82bb4_optimize(&(_34129_m.get()._field_Elements));
}



inline void _1acd876e1_lenCall(_1acd826b9_exprOptimizer* _self_, jule::Ptr<_1acb172b7_BuiltinLenCallExprModel> _34626_m) {
	static__1acd82bb4_optimize(&(_34626_m.get()._field_Expr.get()._field_Model));
}



inline void _1acd87966_capCall(_1acd826b9_exprOptimizer* _self_, jule::Ptr<_1acb175d6_BuiltinCapCallExprModel> _35026_m) {
	static__1acd82bb4_optimize(&(_35026_m.get()._field_Expr.get()._field_Model));
}



inline void _1acd87bdb_cloneCall(_1acd826b9_exprOptimizer* _self_, jule::Ptr<_1acb1587b_BuiltinCloneCallExprModel> _35428_m) {
	static__1acd82bb4_optimize(&(_35428_m.get()._field_Expr));
}



inline void _1acd87e61_deleteCall(_1acd826b9_exprOptimizer* _self_, jule::Ptr<_1acb1cb19_BuiltinDeleteCallExprModel> _35829_m) {
	static__1acd82bb4_optimize(&(_35829_m.get()._field_Dest.get()._field_Model));
	if ((_35829_m.get()._field_Key != nullptr)) {
		static__1acd82bb4_optimize(&(_35829_m.get()._field_Key.get()._field_Model));
	};
}



inline void _1acd881d6_sizeof(_1acd826b9_exprOptimizer* _self_, jule::Ptr<_1acb1d642_SizeofExprModel> _36525_m) {
	static__1acd82bb4_optimize(&(_36525_m.get()._field_Expr));
}



inline void _1acd8845b_alignof(_1acd826b9_exprOptimizer* _self_, jule::Ptr<_1acb1d92d_AlignofExprModel> _36926_m) {
	static__1acd82bb4_optimize(&(_36926_m.get()._field_Expr));
}



inline void _1acd886d1_integratedToStr(_1acd826b9_exprOptimizer* _self_, jule::Ptr<_1acb1e027_IntegratedToStrExprModel> _37334_m) {
	static__1acd82bb4_optimize(&(_37334_m.get()._field_Expr));
}



inline void _1acd88956_free(_1acd826b9_exprOptimizer* _self_, jule::Ptr<_1acb1e6cb_FreeExprModel> _37723_m) {
	static__1acd82bb4_optimize(&(_37723_m.get()._field_Expr));
}



inline void _1acd88bcb_backendEmit(_1acd826b9_exprOptimizer* _self_, jule::Ptr<_1acb1e3e0_BackendEmitExprModel> _38130_m) {
	_1acd83ea1_args(_self_, &(_38130_m.get()._field_Exprs));
}



inline void _1acd88da7_do(_1acd826b9_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_model)) };
		
		if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1a6e0a490:;
			{
				_1acd83236_binary(_self_, (*((*(_self_))._field_model)).cast_ptr<_1acb0e204_BinopExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1a6e0a78c:;
			{
				_1acd834ab_unary(_self_, (*((*(_self_))._field_model)).cast_ptr<_1acb0e5ab_UnaryExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1a6e0a803:;
			{
				_1acd83731_structureLit(_self_, (*((*(_self_))._field_model)).cast_ptr<_1acb0ed5e_StructLitExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1a6e0a869:;
			{
				_1acd839a6_allocStructure(_self_, (*((*(_self_))._field_model)).cast_ptr<_1acb1016c_AllocStructLitExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1a6e0a8d0:;
			{
				_1acd83c2b_casting(_self_, (*((*(_self_))._field_model)).cast_ptr<_1acb106bc_CastingExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1a6e0a957:;
			{
				_1acd8449b_funcCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1acb1106e_FnCallExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1a6e0a9ce:;
			{
				_1acd84721_slice(_self_, (*((*(_self_))._field_model)).cast_ptr<_1acb11426_SliceExprModel>(&__jule_any_type82));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1a6e0aa56:;
			{
				_1acd84996_array(_self_, (*((*(_self_))._field_model)).cast_ptr<_1acb1414e_ArrayExprModel>(&__jule_any_type90));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1a6e0aacd:;
			{
				_1acd84c1b_indexing(_self_, (*((*(_self_))._field_model)).cast_ptr<_1acb11899_IndexingExprModel>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1a6e0ab55:;
			{
				_1acd84e91_anonFunc(_self_, (*((*(_self_))._field_model)).cast_ptr<_1acb11c51_AnonFnExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1a6e0abcc:;
			{
				_1acd85216_mapExpr(_self_, (*((*(_self_))._field_model)).cast_ptr<_1acb1257b_MapExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1a6e0ac54:;
			{
				_1acd8548b_slicing(_self_, (*((*(_self_))._field_model)).cast_ptr<_1acb12aba_SlicingExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1a6e0accb:;
			{
				_1acd85711_traitSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1acb13109_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1a6e0ad53:;
			{
				_1acd85986_structureSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1acb138e0_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1a6e0adca:;
			{
				_1acd85c0b_commonSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1acb1499b_CommonSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1a6e0ae52:;
			{
				_1acd85e81_tuple(_self_, (*((*(_self_))._field_model)).cast_ptr<_1acb14c98_TupleExprModel>(&__jule_any_type87));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1a6e0aec9:;
			{
				_1acd8647b_outCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1acb15172_BuiltinOutCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1a6e0b051:;
			{
				_1acd86701_outlnCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1acb1555c_BuiltinOutlnCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1a6e0b0c8:;
			{
				_1acd86206_newCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1acb15c66_BuiltinNewCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1a6e0b150:;
			{
				_1acd86976_panicCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1acb16151_BuiltinPanicCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1a6e0b1c7:;
			{
				_1acd86beb_assertCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1acb16607_BuiltinAssertCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1a6e0b24e:;
			{
				_1acd86e71_errorCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1acb1d345_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1a6e0b2c6:;
			{
				_1acd871e6_makeCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1acb16aad_BuiltinMakeCallExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1a6e0b34d:;
			{
				_1acd8746b_appendCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1acb16e98_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1a6e0b3c5:;
			{
				_1acd876e1_lenCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1acb172b7_BuiltinLenCallExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1a6e0b44c:;
			{
				_1acd87966_capCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1acb175d6_BuiltinCapCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1a6e0b4c4:;
			{
				_1acd87bdb_cloneCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1acb1587b_BuiltinCloneCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1a6e0b54b:;
			{
				_1acd87e61_deleteCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1acb1cb19_BuiltinDeleteCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1a6e0b5c3:;
			{
				_1acd881d6_sizeof(_self_, (*((*(_self_))._field_model)).cast_ptr<_1acb1d642_SizeofExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1a6e0b64a:;
			{
				_1acd8845b_alignof(_self_, (*((*(_self_))._field_model)).cast_ptr<_1acb1d92d_AlignofExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1a6e0b6c2:;
			{
				_1acd886d1_integratedToStr(_self_, (*((*(_self_))._field_model)).cast_ptr<_1acb1e027_IntegratedToStrExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1a6e0b749:;
			{
				_1acd88956_free(_self_, (*((*(_self_))._field_model)).cast_ptr<_1acb1e6cb_FreeExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1a6e0b7c1:;
			{
				_1acd88bcb_backendEmit(_self_, (*((*(_self_))._field_model)).cast_ptr<_1acb1e3e0_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_1a6e0a43a:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1acd826b9_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a4066654_Optimizer> static__1a4066ab6_New(jule::Ptr<_1a3e29a01_IR>* _2524_ir) {
	return jule::new_ptr<_1a4066654_Optimizer>(_1a4066654_Optimizer{._field_ir=(*(_2524_ir))});;
}



inline void _1a4066d3b_optimizeGlobal(_1a4066654_Optimizer* _self_, jule::Ptr<_1abd1497c_Var>* _3138_v) {
	if ((!((*(_3138_v)).get()._field_Binded))) {
		static__1acd82bb4_optimize(&((*(_3138_v)).get()._field_Value.get()._field_Data.get()._field_Model));
	};
}



inline void _1a40670b1_optimizeFunction(_1a4066654_Optimizer* _self_, jule::Ptr<_1acb221d4_Fn>* _3740_func) {
	if ((*(_3740_func)).get()._field_Binded) {
		return;;
	};
	{
		auto expr = &((*(_3740_func)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6e26b2c:;
		if (it != expr_end) {
			jule::Ptr<_1acb24d85_FnIns> _4121_ins = *it;
			{
				jule::Ptr<_1acd7bcbd_scopeOptimizer> _4221_so = static__1acd7c2da_new(_4121_ins.get()._field_Scope);;
				_1acd80552_optimize(_4221_so.ptr());
			}
			_iter_next_1a6e26b2c:;
			++it;
			goto _iter_begin_1a6e26b2c;
		}
		_iter_end_1a6e26b2c:;
	};
}



inline void _1a4067336_optimizeStruct(_1a4066654_Optimizer* _self_, jule::Ptr<_1acb07021_Struct>* _4738_s) {
	if ((*(_4738_s)).get()._field_Binded) {
		return;;
	};
	{
		auto expr = &((*(_4738_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6e2804b:;
		if (it != expr_end) {
			jule::Ptr<_1acb09d37_StructIns> _5121_ins = *it;
			{
				{
					auto expr = &(_5121_ins.get()._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a6e28755:;
					if (it != expr_end) {
						jule::Ptr<_1acb09342_FieldIns> _5225_f = *it;
						{
							if ((_5225_f.get()._field_Default != nullptr)) {
								static__1acd82bb4_optimize(&(_5225_f.get()._field_Default.get()._field_Model));
							};
						}
						_iter_next_1a6e28755:;
						++it;
						goto _iter_begin_1a6e28755;
					}
					_iter_end_1a6e28755:;
				};
				{
					auto expr = &(_5121_ins.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a6e295be:;
					if (it != expr_end) {
						jule::Ptr<_1acb221d4_Fn> _5725_m = *it;
						{
							_1a40670b1_optimizeFunction(_self_, &(_5725_m));
						}
						_iter_next_1a6e295be:;
						++it;
						goto _iter_begin_1a6e295be;
					}
					_iter_end_1a6e295be:;
				};
			}
			_iter_next_1a6e2804b:;
			++it;
			goto _iter_begin_1a6e2804b;
		}
		_iter_end_1a6e2804b:;
	};
}



inline void _1a40675ab_optimizeGlobals(_1a4066654_Optimizer* _self_, jule::Ptr<_1abcdded9_Package>* _6339_p) {
	{
		auto expr = &((*(_6339_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6e299cb:;
		if (it != expr_end) {
			jule::Ptr<_1abd59241_SymbolTable> _6421_f = *it;
			{
				{
					auto expr = &(_6421_f.get()._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a6e2a713:;
					if (it != expr_end) {
						jule::Ptr<_1abd1497c_Var> _6525_v = *it;
						{
							_1a4066d3b_optimizeGlobal(_self_, &(_6525_v));
						}
						_iter_next_1a6e2a713:;
						++it;
						goto _iter_begin_1a6e2a713;
					}
					_iter_end_1a6e2a713:;
				};
			}
			_iter_next_1a6e299cb:;
			++it;
			goto _iter_begin_1a6e299cb;
		}
		_iter_end_1a6e299cb:;
	};
}



inline void _1a4067831_optimizeFunctions(_1a4066654_Optimizer* _self_, jule::Ptr<_1abcdded9_Package>* _7141_p) {
	{
		auto expr = &((*(_7141_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6e2ac1e:;
		if (it != expr_end) {
			jule::Ptr<_1abd59241_SymbolTable> _7221_f = *it;
			{
				{
					auto expr = &(_7221_f.get()._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a6e2b934:;
					if (it != expr_end) {
						jule::Ptr<_1acb221d4_Fn> _7325_func = *it;
						{
							_1a40670b1_optimizeFunction(_self_, &(_7325_func));
						}
						_iter_next_1a6e2b934:;
						++it;
						goto _iter_begin_1a6e2b934;
					}
					_iter_end_1a6e2b934:;
				};
			}
			_iter_next_1a6e2ac1e:;
			++it;
			goto _iter_begin_1a6e2ac1e;
		}
		_iter_end_1a6e2ac1e:;
	};
}



inline void _1a4067aa6_optimizeStructs(_1a4066654_Optimizer* _self_, jule::Ptr<_1abcdded9_Package>* _7939_p) {
	{
		auto expr = &((*(_7939_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6e2be40:;
		if (it != expr_end) {
			jule::Ptr<_1abd59241_SymbolTable> _8021_f = *it;
			{
				{
					auto expr = &(_8021_f.get()._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a6e2cb55:;
					if (it != expr_end) {
						jule::Ptr<_1acb07021_Struct> _8125_s = *it;
						{
							_1a4067336_optimizeStruct(_self_, &(_8125_s));
						}
						_iter_next_1a6e2cb55:;
						++it;
						goto _iter_begin_1a6e2cb55;
					}
					_iter_end_1a6e2cb55:;
				};
			}
			_iter_next_1a6e2be40:;
			++it;
			goto _iter_begin_1a6e2be40;
		}
		_iter_end_1a6e2be40:;
	};
}



inline void _1a4067d2b_optimizePackage(_1a4066654_Optimizer* _self_, jule::Ptr<_1abcdded9_Package>* _8739_p) {
	_1a40675ab_optimizeGlobals(_self_, _8739_p);
	_1a4067831_optimizeFunctions(_self_, _8739_p);
	_1a4067aa6_optimizeStructs(_self_, _8739_p);
}



inline void _1a4068007_Optimize(_1a4066654_Optimizer* _self_) {
	_1a406826b_detectEnabled();
	if (_1acd8a194_Deadcode) {
		_1a4059515_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1a40664ab_scopeEnabled || _1a406628b_exprEnabled)) {
		{
			auto expr = &((*(_self_))._field_ir.get()._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a6e2e5e6:;
			if (it != expr_end) {
				jule::Ptr<_1abcdb39e_ImportInfo> _10325_u = *it;
				{
					if ((!(_10325_u.get()._field_Binded))) {
						_1a4067d2b_optimizePackage(_self_, &(_10325_u.get()._field_Package));
					};
				}
				_iter_next_1a6e2e5e6:;
				++it;
				goto _iter_begin_1a6e2e5e6;
			}
			_iter_end_1a6e2e5e6:;
		};
		_1a4067d2b_optimizePackage(_self_, &((*(_self_))._field_ir.get()._field_Main));
	};
	if (_1acd8a194_Deadcode) {
		_1a405e2b7_EliminateScopes(&((*(_self_))._field_ir));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a4066654_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1a4068898_Reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__1a4087a3d_Print(jule::Str _1921_escape, jule::Str _1934_text) {
	jule::out(_1921_escape);
	jule::out(_1934_text);
	static__1a4068898_Reset();
}







std::ostream &operator<<(std::ostream &_Stream, _1a4088ac7_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1a408a39d_LogFlat(_20943da3c_Log* _1424_l) {
	jule::outln((*(_1424_l))._field_Text);
}



inline void static__1a408a5ac_LogError(_20943da3c_Log* _1925_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out((*(_1925_l))._field_Text);
	static__1a4068898_Reset();
	if (((*(_1925_l))._field_Path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out((*(_1925_l))._field_Path);
	};
	if ((((*(_1925_l))._field_Row != 0LL) && ((*(_1925_l))._field_Column != 0LL))) {
		jule::out(jule::Str(":", 1));
		jule::out(_1ddea4ea3_Itoa((*(_1925_l))._field_Row));
		jule::out(jule::Str(":", 1));
		jule::out(_1ddea4ea3_Itoa((*(_1925_l))._field_Column));
	};
	if (((*(_1925_l))._field_Line.len() != 0LL)) {
		jule::Str _3621_line = _2093a4e6a_TrimLeft((*(_1925_l))._field_Line, jule::Str("\r\n\v\b ", 5));;
		jule::I64 _3721_offset = (((*(_1925_l))._field_Line.len() - _3621_line.len()) + 1LL);;
		jule::I64 _3821_oldLen = _3621_line.len();;
		_3621_line=_2093a4e6a_TrimLeft(_3621_line, jule::Str("\t", 1));
		if ((_3821_oldLen != _3621_line.len())) {
			_3721_offset+=((_3821_oldLen - _3621_line.len()) << 3LLU);
		};
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _1ddea4ea3_Itoa((*(_1925_l))._field_Row);;
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_20939c649_Repeat(jule::Str(" ", 1), static_cast<jule::I64>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_20939c649_Repeat(jule::Str(" ", 1), static_cast<jule::I64>(((*(_1925_l))._field_Column - _3721_offset))));
		jule::out(jule::Str("^", 1));
		if (((*(_1925_l))._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_20939c649_Repeat(jule::Str(" ", 1), static_cast<jule::I64>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__1a4087a3d_Print(jule::Str("\033[95m", 5), jule::Str("suggestion: ", 12));
			jule::out((*(_1925_l))._field_Suggestion);
		};
	};
	jule::outln(jule::Str("\n", 1));
}



inline void static__1a408a7bb_Log(_20943da3c_Log* _6520_l) {
	{
		auto &_match_expr{ (*(_6520_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1a6e3c34b:;
			{
				static__1a408a39d_LogFlat(_6520_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1a6e3c3b2:;
			{
				static__1a408a5ac_LogError(_6520_l);
			}
		}
		_match_end_1a6e3c25d:;
	};
}



inline void static__1a408a9ca_PrintLogs(jule::Slice<_20943da3c_Log>* _7526_logs) {
	{
		auto expr = _7526_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6e3d24d:;
		if (it != expr_end) {
			_20943da3c_Log *_7616_l = it;
			{
				static__1a408a7bb_Log(_7616_l);
			}
			_iter_next_1a6e3d24d:;
			++it;
			goto _iter_begin_1a6e3d24d;
		}
		_iter_end_1a6e3d24d:;
	};
	jule::out(jule::Str("=== ", 4));
	jule::out(_1ddea4ea3_Itoa(static_cast<jule::I64>((*(_7526_logs)).len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _1a408a15b_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _1a48ca88b_Unix(_1a48ca528_AbsTime* _self_) {
	jule::Bool _5617_leap = false;;
	jule::U64 _5717_y = ((*(_self_))._field_Year - 1900LLU);;
	jule::U64 _5817_m = ((*(_self_))._field_Month - 1LLU);;
	if (((_5817_m >= 12LLU) || (_5817_m < 0LLU))) {
		jule::U64 _6021_adj = (_5817_m / 12LLU);;
		_5817_m%=12LL;
		if ((_5817_m < 0LLU)) {
			(_6021_adj)--;
			_5817_m+=12LLU;
		};
		_5717_y+=_6021_adj;
	};
	jule::U64 _6817_t = _1a48cce65_unixYearToSeconds(_5717_y, &(_5617_leap));;
	_6817_t+=_1a48cd2ea_unixMonthToSeconds(_5817_m, _5617_leap);
	_6817_t+=(86400LLU * ((*(_self_))._field_Day - 1LLU));
	_6817_t+=(3600LLU * (*(_self_))._field_Hour);
	_6817_t+=(60LLU * (*(_self_))._field_Minute);
	_6817_t+=(*(_self_))._field_Second;
	return _6817_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a48ca528_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _1a48cabbb_Time static__1a48cb062_Unix(jule::U64 _9120_sec) {
	return _1a48cabbb_Time{._field_sec=_9120_sec};;
}



inline _1a48cabbb_Time static__1a48cb260_Now(void) {
	return static__1a48cb062_Unix(static_cast<jule::U64>(_1a48ccb57_unix()));;
}



inline jule::U64 _1a48cb639_Unix(_1a48cabbb_Time* _self_) {
	return (*(_self_))._field_sec;;
}



inline jule::U64 _1a48cb89d_Day(_1a48cabbb_Time* _self_) {
	return _1a48cc827_Abs(_self_)._field_Day;;
}



inline jule::U64 _1a48cbb12_Month(_1a48cabbb_Time* _self_) {
	return _1a48cc827_Abs(_self_)._field_Month;;
}



inline jule::U64 _1a48cbd76_Year(_1a48cabbb_Time* _self_) {
	return _1a48cc827_Abs(_self_)._field_Year;;
}



inline jule::U64 _1a48cc0da_Second(_1a48cabbb_Time* _self_) {
	return _1a48cc827_Abs(_self_)._field_Second;;
}



inline jule::U64 _1a48cc34e_Minute(_1a48cabbb_Time* _self_) {
	return _1a48cc827_Abs(_self_)._field_Minute;;
}



inline jule::U64 _1a48cc5b3_Hour(_1a48cabbb_Time* _self_) {
	return _1a48cc827_Abs(_self_)._field_Hour;;
}



inline _1a48ca528_AbsTime _1a48cc827_Abs(_1a48cabbb_Time* _self_) {
	jule::U64 _12713_secs = ((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _12817_days = (_12713_secs / 86400LLU);;
	jule::U64 _12917_remSecs = (_12713_secs % 86400LL);;
	if ((_12917_remSecs < 0LLU)) {
		_12917_remSecs+=86400LLU;
		(_12817_days)--;
	};
	jule::U64 _13517_qcCycles = (_12817_days / 146097LLU);;
	jule::U64 _13617_remDays = (_12817_days % 146097LL);;
	if ((_13617_remDays < 0LLU)) {
		_13617_remDays+=146097LLU;
		(_13517_qcCycles)--;
	};
	jule::U64 _14217_cCycles = (_13617_remDays / 36524LLU);;
	if ((_14217_cCycles == 4LLU)) {
		(_14217_cCycles)--;
	};
	_13617_remDays-=(_14217_cCycles * 36524LLU);
	jule::U64 _14817_qCycles = (_13617_remDays / 1461LLU);;
	if ((_14817_qCycles == 25LLU)) {
		(_14817_qCycles)--;
	};
	_13617_remDays-=(_14817_qCycles * 1461LLU);
	jule::U64 _15417_remYears = (_13617_remDays / 365LLU);;
	if ((_15417_remYears == 4LLU)) {
		(_15417_remYears)--;
	};
	_13617_remDays-=(_15417_remYears * 365LLU);
	jule::U64 _16017_leap = static_cast<jule::U64>(0LLU);;
	if (((_15417_remYears == 0LLU) && ((_14817_qCycles > 0LLU) || (_14217_cCycles == 0LLU)))) {
		_16017_leap=1LLU;
	};
	jule::U64 _16417_yDay = (((_13617_remDays + 31LLU) + 28LLU) + _16017_leap);;
	if ((_16417_yDay >= (365LLU + _16017_leap))) {
		_16417_yDay-=(365LLU + _16017_leap);
	};
	jule::U64 _16917_months = 0LLU;;
	for (; (_1a48c9aaa_mdays[static_cast<jule::I64>(_16917_months)] <= _13617_remDays); (_16917_months)++) {
		{
			_13617_remDays-=_1a48c9aaa_mdays[static_cast<jule::I64>(_16917_months)];
		}
	_iter_next_1a6e6ad91:;
	}
	_iter_end_1a6e6ad91:;;
	_1a48ca528_AbsTime _17417_t = _1a48ca528_AbsTime{};;
	_17417_t._field_Year=static_cast<jule::U64>(((((_15417_remYears + (4LLU * _14817_qCycles)) + (100LLU * _14217_cCycles)) + (400LLU * _13517_qcCycles)) + 100LLU));
	_17417_t._field_Month=static_cast<jule::U64>((_16917_months + 2LLU));
	if ((_17417_t._field_Month >= 12LLU)) {
		_17417_t._field_Month-=12LLU;
		(_17417_t._field_Year)++;
	};
	_17417_t._field_Month+=1LLU;
	_17417_t._field_Year+=1900LLU;
	_17417_t._field_Day=static_cast<jule::U64>((_13617_remDays + 1LLU));
	_17417_t._field_WeekDay=static_cast<jule::U64>(((3LLU + _12817_days) % 7LL));
	if ((_17417_t._field_WeekDay < 0LLU)) {
		_17417_t._field_WeekDay+=7LLU;
	};
	_17417_t._field_YearDay=_16417_yDay;
	_17417_t._field_Hour=static_cast<jule::U64>((_12917_remSecs / 3600LLU));
	_17417_t._field_Minute=static_cast<jule::U64>(((_12917_remSecs / 60LLU) % 60LL));
	_17417_t._field_Second=static_cast<jule::U64>((_12917_remSecs % 60LL));
	return _17417_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a48cabbb_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a482044b_scopeCoder> static__1a4820a45_new(jule::Ptr<_1a48d4c4c_ObjectCoder>* _6624_oc) {
	return jule::new_ptr<_1a482044b_scopeCoder>(_1a482044b_scopeCoder{._field_oc=(*(_6624_oc))});;
}



inline void _1a700deab_iterHead(jule::Ptr<_1a482044b_scopeCoder> _self_, jule::Ptr<_1abcbe5d5_RangeIter>* _7332_it, jule::Bool* _7344_ref, jule::Str* _7356_begin) {
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a48d57ec_addIndent(_self_.get()._field_oc);
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("auto expr = ", 12));
	if ((_1acd89d86_Copy && _1a4826111_isCopyOptimizable(&((*(_7332_it)).get()._field_Expr)))) {
		(*(_7344_ref))=true;
		{
			auto &_match_expr{ (*(_7332_it)).get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1a7010650:;
				{
					jule::Ptr<_1abd1497c_Var> _8221_v = (*(_7332_it)).get()._field_Expr.get()._field_Model.cast_ptr<_1abd1497c_Var>(&__jule_any_type8);;
					if (_8221_v.get()._field_Reference) {
						_1a483a6a8_model(_self_.get()._field_oc.get()._field_ec, (*(_7332_it)).get()._field_Expr.get()._field_Model);
						goto _match_end_1a7011d7c;
					};
					goto _case_begin_1a7011dd2;
				}
			}
			else {
				_case_begin_1a7011dd2:;
				{
					_1a48d539b_write(_self_.get()._field_oc, jule::Str("&(", 2));
					_1a483a6a8_model(_self_.get()._field_oc.get()._field_ec, (*(_7332_it)).get()._field_Expr.get()._field_Model);
					_1a48d539b_write(_self_.get()._field_oc, jule::Str(")", 1));
				}
			}
			_match_end_1a7011d7c:;
		};
	} else {
		_1a482b853_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_7332_it)).get()._field_Expr.get()._field_Model);
	};
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("auto it = expr", 14));
	if ((*(_7344_ref))) {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("begin();\n", 9));
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("auto expr_end = expr", 20));
	if ((*(_7344_ref))) {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("end();\n", 7));
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d5621_writeR(_self_.get()._field_oc, _7356_begin);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("if (it != expr_end) {\n", 22));
	_1a48d57ec_addIndent(_self_.get()._field_oc);
	_1a48d5ba4_indent(_self_.get()._field_oc);
}



inline void _1a4821183_rangeIndexIter(jule::Ptr<_1a482044b_scopeCoder> _self_, jule::Ptr<_1abcbe5d5_RangeIter>* _12239_it) {
	jule::Str _12313_begin = static__1a484445e_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12239_it)))));;
	jule::Str _12413_next = static__1a484499d_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12239_it)))));;
	jule::Bool _12617_ref = false;;
	_1a700deab_iterHead(_self_, _12239_it, &(_12617_ref), &(_12313_begin));
	if (((*(_12239_it)).get()._field_KeyA != nullptr)) {
		_1a48dc6e4_varInitExpr(_self_.get()._field_oc, &((*(_12239_it)).get()._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			if (_12617_ref) {
				_1a48d539b_write(_self_.get()._field_oc, jule::Str("it - expr->begin()", 18));
			} else {
				_1a48d539b_write(_self_.get()._field_oc, jule::Str("it - expr.begin()", 17));
			};
		}));
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1a48d5ba4_indent(_self_.get()._field_oc);
	};
	if (((*(_12239_it)).get()._field_KeyB != nullptr)) {
		(*(_12239_it)).get()._field_KeyB.get()._field_Reference=(_1acd89d86_Copy && _1a4826496_isIterCopyOptimizable(&((*(_12239_it)).get()._field_Expr), &((*(_12239_it)).get()._field_KeyB)));
		_1a48dc6e4_varInitExpr(_self_.get()._field_oc, &((*(_12239_it)).get()._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			{
				if ((*(_12239_it)).get()._field_KeyB.get()._field_Reference) {
					_1a48d539b_write(_self_.get()._field_oc, jule::Str("it", 2));
				} else {
					_1a48d539b_write(_self_.get()._field_oc, jule::Str("*it", 3));
				};
			};
		}));
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1a48d5ba4_indent(_self_.get()._field_oc);
	};
	_1a48259e5_scope(_self_, (*(_12239_it)).get()._field_Scope);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d5621_writeR(_self_.get()._field_oc, &(_12413_next));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1a48d5ba4_indent(_self_.get()._field_oc);
	if (((*(_12239_it)).get()._field_KeyA != nullptr)) {
		_1a48d539b_write(_self_.get()._field_oc, static__1a48441b7_var((*(_12239_it)).get()._field_KeyA));
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("++;\n", 4));
		_1a48d5ba4_indent(_self_.get()._field_oc);
	};
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1a48d5621_writeR(_self_.get()._field_oc, &(_12313_begin));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a48d59c8_doneIndent(_self_.get()._field_oc);
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, static__1a4844706_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12239_it))))));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a48d59c8_doneIndent(_self_.get()._field_oc);
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a4821408_rangeHashmapIter(jule::Ptr<_1a482044b_scopeCoder> _self_, jule::Ptr<_1abcbe5d5_RangeIter>* _18541_it) {
	jule::Str _18613_begin = static__1a484445e_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18541_it)))));;
	jule::Str _18713_next = static__1a484499d_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18541_it)))));;
	jule::Bool _18917_ref = false;;
	_1a700deab_iterHead(_self_, _18541_it, &(_18917_ref), &(_18613_begin));
	if (((*(_18541_it)).get()._field_KeyA != nullptr)) {
		_1a48dc6e4_varInitExpr(_self_.get()._field_oc, &((*(_18541_it)).get()._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			_1a48d539b_write(_self_.get()._field_oc, jule::Str("it->first", 9));
		}));
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1a48d5ba4_indent(_self_.get()._field_oc);
	};
	if (((*(_18541_it)).get()._field_KeyB != nullptr)) {
		_1a48dc6e4_varInitExpr(_self_.get()._field_oc, &((*(_18541_it)).get()._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			_1a48d539b_write(_self_.get()._field_oc, jule::Str("it->second", 10));
		}));
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1a48d5ba4_indent(_self_.get()._field_oc);
	};
	_1a48259e5_scope(_self_, (*(_18541_it)).get()._field_Scope);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d5621_writeR(_self_.get()._field_oc, &(_18713_next));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1a48d5621_writeR(_self_.get()._field_oc, &(_18613_begin));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a48d59c8_doneIndent(_self_.get()._field_oc);
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, static__1a4844706_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18541_it))))));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a48d59c8_doneIndent(_self_.get()._field_oc);
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a482167d_ifCase(jule::Ptr<_1a482044b_scopeCoder> _self_, jule::Ptr<_1abcbcd31_If> _22830_i) {
	if ((_22830_i.get()._field_Expr != nullptr)) {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("if (", 4));
		_1a482b853_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _22830_i.get()._field_Expr);
		_1a48d539b_write(_self_.get()._field_oc, jule::Str(") ", 2));
	};
	_1a48259e5_scope(_self_, _22830_i.get()._field_Scope);
}



inline void _1a4821903_conditional(jule::Ptr<_1a482044b_scopeCoder> _self_, jule::Ptr<_1abcbd491_Conditional> _23735_c) {
	jule::Bool _23817_writed = false;;
	{
		auto expr = &(_23735_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7031022:;
		if (it != expr_end) {
			jule::Ptr<_1abcbcd31_If> _23921_elif = *it;
			{
				if ((_23921_elif == nullptr)) {
					goto _iter_next_1a7031022;
				};
				if (_23817_writed) {
					_1a48d539b_write(_self_.get()._field_oc, jule::Str(" else ", 6));
				};
				_23817_writed=true;
				_1a482167d_ifCase(_self_, _23921_elif);
			}
			_iter_next_1a7031022:;
			++it;
			goto _iter_begin_1a7031022;
		}
		_iter_end_1a7031022:;
	};
	if ((_23735_c.get()._field_Default != nullptr)) {
		if (_23817_writed) {
			_1a48d539b_write(_self_.get()._field_oc, jule::Str(" else ", 6));
		};
		_1a48259e5_scope(_self_, _23735_c.get()._field_Default.get()._field_Scope);
	};
}



inline void _1a4821b78_infIter(jule::Ptr<_1a482044b_scopeCoder> _self_, jule::Ptr<_1abcbd77c_InfIter> _25731_it) {
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("for (;;) {\n", 11));
	_1a48d57ec_addIndent(_self_.get()._field_oc);
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48259e5_scope(_self_, _25731_it.get()._field_Scope);
	_1a48d59c8_doneIndent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, static__1a484499d_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_25731_it))));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, static__1a4844706_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_25731_it))));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1a4821ded_whileIter(jule::Ptr<_1a482044b_scopeCoder> _self_, jule::Ptr<_1abcbdc00_WhileIter> _27433_it) {
	if (((_27433_it.get()._field_Expr != nullptr) && (_27433_it.get()._field_Next == nullptr))) {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("while (", 7));
		_1a482b853_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _27433_it.get()._field_Expr);
		_1a48d539b_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	} else {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("for (; ", 7));
		if ((_27433_it.get()._field_Expr != nullptr)) {
			_1a482b853_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _27433_it.get()._field_Expr);
		};
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("; ", 2));
		if ((_27433_it.get()._field_Next != nullptr)) {
			_1a48254ea_st(_self_, _27433_it.get()._field_Next);
		};
		_1a48d539b_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	};
	_1a48d57ec_addIndent(_self_.get()._field_oc);
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48259e5_scope(_self_, _27433_it.get()._field_Scope);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a48d59c8_doneIndent(_self_.get()._field_oc);
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, static__1a484499d_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_27433_it))));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, static__1a4844706_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_27433_it))));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1a4822173_rangeIter(jule::Ptr<_1a482044b_scopeCoder> _self_, jule::Ptr<_1abcbe5d5_RangeIter> _30733_it) {
	{
		
		if ((_1acca8348_Slc(_30733_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a703e151:;
			{
				_1a4821183_rangeIndexIter(_self_, &(_30733_it));
			}
		}
		else if ((_1acca80d4_Arr(_30733_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a703e52a:;
			{
				_1a4821183_rangeIndexIter(_self_, &(_30733_it));
			}
		}
		else if ((_1acca8ce9_Map(_30733_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a703dd21:;
			{
				_1a4821408_rangeHashmapIter(_self_, &(_30733_it));
			}
		}
		else {
			_case_begin_1a703dcaa:;
			{
				_1a4821183_rangeIndexIter(_self_, &(_30733_it));
			}
		}
		_match_end_1a703dbde:;
	};
}



inline void _1a48223e8_cont(jule::Ptr<_1a482044b_scopeCoder> _self_, jule::Ptr<_1abcbe9d1_ContSt> _32024_c) {
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1a48d539b_write(_self_.get()._field_oc, static__1a484499d_iterNext(_32024_c.get()._field_It));
}



inline void _1a482266d_label(jule::Ptr<_1a482044b_scopeCoder> _self_, jule::Ptr<_1abcc0174_Label> _32525_l) {
	_1a48d539b_write(_self_.get()._field_oc, static__1a4844c45_label(&(_32525_l.get()._field_Ident)));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(":", 1));
}



inline void _1a48228e3_gotoSt(jule::Ptr<_1a482044b_scopeCoder> _self_, jule::Ptr<_1abcc0460_GotoSt> _33026_gt) {
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1a48d539b_write(_self_.get()._field_oc, static__1a4844c45_label(&(_33026_gt.get()._field_Ident)));
}



inline void _1a4822b68_postfix(jule::Ptr<_1a482044b_scopeCoder> _self_, jule::Ptr<_1abcc0817_Postfix> _33531_p) {
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a482b853_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _33531_p.get()._field_Expr);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(")", 1));
	_1a48d5621_writeR(_self_.get()._field_oc, &(_33531_p.get()._field_Op));
}



inline void _1a4822ddd_assign(jule::Ptr<_1a482044b_scopeCoder> _self_, jule::Ptr<_1abcc0c8a_Assign> _34230_a) {
	_1a482b853_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34230_a.get()._field_L.get()._field_Model);
	_1a48d5621_writeR(_self_.get()._field_oc, &(_34230_a.get()._field_Op.get()._field_Kind));
	_1a482b853_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34230_a.get()._field_R.get()._field_Model);
}



inline void _1a4823163_mapLookupAssign(jule::Ptr<_1a482044b_scopeCoder> _self_, jule::Ptr<_1abcc1142_MultiAssign>* _34840_a) {
	jule::Ptr<_1acb11899_IndexingExprModel> _34917_iem = (*(_34840_a)).get()._field_R.cast_ptr<_1acb11899_IndexingExprModel>(&__jule_any_type46);;
	_1a482b853_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34917_iem.get()._field_Expr.get()._field_Model);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(".lookup(", 8));
	_1a482b853_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34917_iem.get()._field_Index.get()._field_Model);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(", ", 2));
	if (((*(_34840_a)).get()._field_L[0LL] != nullptr)) {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_1a482b853_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_34840_a)).get()._field_L[0LL].get()._field_Model);
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("), ", 3));
	} else {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("nullptr, ", 9));
	};
	if (((*(_34840_a)).get()._field_L[1LL] != nullptr)) {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_1a482b853_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_34840_a)).get()._field_L[1LL].get()._field_Model);
		_1a48d539b_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
	};
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a48233d8_multiAssignTup(jule::Ptr<_1a482044b_scopeCoder> _self_, jule::Ptr<_1abcc1142_MultiAssign>* _37139_a) {
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1a48d57ec_addIndent(_self_.get()._field_oc);
	jule::Ptr<_1acb14c98_TupleExprModel> _37517_tup = (*(_37139_a)).get()._field_R.cast_ptr<_1acb14c98_TupleExprModel>(&__jule_any_type87);;
	{
		auto expr = &(_37517_tup.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a704cb76:;
		if (it != expr_end) {
			jule::I64 _37714_i = it - expr->begin();
			jule::Ptr<_1abd5dc4b_Data> _37721_r = *it;
			{
				_1a48d5ba4_indent(_self_.get()._field_oc);
				jule::Ptr<_1abd5dc4b_Data> _37921_l = (*(_37139_a)).get()._field_L[_37714_i];;
				if ((_37921_l != nullptr)) {
					{
						auto &_match_expr{ _37921_l.get()._field_Model };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1a7050272:;
							{
								jule::Ptr<_1abd1497c_Var> _38329_v = _37921_l.get()._field_Model.cast_ptr<_1abd1497c_Var>(&__jule_any_type8);;
								if ((_38329_v.get()._field_Reference && (!(_1abd14d01_IsInitialized(_38329_v.ptr()))))) {
									_1a48d539b_write(_self_.get()._field_oc, static__1a48441b7_var(_38329_v));
									_1a48d539b_write(_self_.get()._field_oc, jule::Str(" = &(", 5));
									_1a482b853_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _37721_r.get()._field_Model);
									_1a48d539b_write(_self_.get()._field_oc, jule::Str(");\n", 3));
									(*(_37139_a)).get()._field_L[_37714_i]=nullptr;
									goto _iter_next_1a704cb76;
								};
							}
						}
						_match_end_1a70500b8:;
					};
					_1a48d539b_write(_self_.get()._field_oc, _1a48e8b2e_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _37921_l.get()._field_Kind));
					_1a48d539b_write(_self_.get()._field_oc, jule::Str(" ", 1));
					_1a48d539b_write(_self_.get()._field_oc, static__1a48426c1_toOut(&(_1a481ec86_assignArgName), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_37714_i))));
					_1a48d539b_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				};
				_1a482b853_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _37721_r.get()._field_Model);
				_1a48d539b_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1a704cb76:;
			++it;
			_37714_i++;
			goto _iter_begin_1a704cb76;
		}
		_iter_end_1a704cb76:;
	};
	{
		auto expr = &((*(_37139_a)).get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a705450c:;
		if (it != expr_end) {
			jule::I64 _40414_i = it - expr->begin();
			jule::Ptr<_1abd5dc4b_Data> _40421_l = *it;
			{
				if ((_40421_l == nullptr)) {
					goto _iter_next_1a705450c;
				};
				_1a48d5ba4_indent(_self_.get()._field_oc);
				_1a482b853_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _40421_l.get()._field_Model);
				_1a48d539b_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1a48d539b_write(_self_.get()._field_oc, static__1a48426c1_toOut(&(_1a481ec86_assignArgName), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_40414_i))));
				_1a48d539b_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1a705450c:;
			++it;
			_40414_i++;
			goto _iter_begin_1a705450c;
		}
		_iter_end_1a705450c:;
	};
	_1a48d59c8_doneIndent(_self_.get()._field_oc);
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1a482365d_multiAssignFn(jule::Ptr<_1a482044b_scopeCoder> _self_, jule::Ptr<_1abcc1142_MultiAssign>* _42038_a) {
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1a48d57ec_addIndent(_self_.get()._field_oc);
	_1a48d5ba4_indent(_self_.get()._field_oc);
	jule::Ptr<_1acb1106e_FnCallExprModel> _42517_f = (*(_42038_a)).get()._field_R.cast_ptr<_1acb1106e_FnCallExprModel>(&__jule_any_type35);;
	_1a48ed628_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_42517_f.get()._field_Func.get()._field_Result));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(" __jule_assign_result = ", 24));
	_1a482b853_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_42038_a)).get()._field_R);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	{
		auto expr = &((*(_42038_a)).get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7059de7:;
		if (it != expr_end) {
			jule::I64 _43114_i = it - expr->begin();
			jule::Ptr<_1abd5dc4b_Data> _43121_l = *it;
			{
				if ((_43121_l != nullptr)) {
					_1a48d5ba4_indent(_self_.get()._field_oc);
					_1a482b853_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _43121_l.get()._field_Model);
					_1a48d539b_write(_self_.get()._field_oc, jule::Str(" = __jule_assign_result.__jule_result_arg", 41));
					_1a48d539b_write(_self_.get()._field_oc, _1ddea4ea3_Itoa(_43114_i));
					_1a48d539b_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				};
			}
			_iter_next_1a7059de7:;
			++it;
			_43114_i++;
			goto _iter_begin_1a7059de7;
		}
		_iter_end_1a7059de7:;
	};
	_1a48d59c8_doneIndent(_self_.get()._field_oc);
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1a48238d3_multiAssign(jule::Ptr<_1a482044b_scopeCoder> _self_, jule::Ptr<_1abcc1142_MultiAssign> _44635_a) {
	{
		auto &_match_expr{ _44635_a.get()._field_R };
		
		if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1a705d060:;
			{
				_1a4823163_mapLookupAssign(_self_, &(_44635_a));
				return;;
			}
		}
		_match_end_1a705cd51:;
	};
	{
		auto &_match_expr{ _44635_a.get()._field_R };
		
		if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1a705cc85:;
			{
				_1a48233d8_multiAssignTup(_self_, &(_44635_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1a705d44a:;
			{
				_1a482365d_multiAssignFn(_self_, &(_44635_a));
			}
		}
		else {
			_case_begin_1a705d9ab:;
			{
				jule::panic(jule::Str("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:460:13"));;
			}
		}
		_match_end_1a705d956:;
	};
}



inline jule::Fn<void(void)> _1a4823be1_matchExpr(jule::Ptr<_1a482044b_scopeCoder> _self_, jule::Ptr<_1abcc174c_Match> _46433_m) {
	if ((!(_1abd5e5ba_IsConst(_46433_m.get()._field_Expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1a48d539b_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
		});;
	};
	if (((!(_1ddeb8c86_IsBool(_46433_m.get()._field_Expr.get()._field_Constant.ptr()))) || (!(_1ddeb68dd_ReadBool(_46433_m.get()._field_Expr.get()._field_Constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1a482b853_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _46433_m.get()._field_Expr.get()._field_Model);
		});;
	};
	return nullptr;;
}



inline void _1a4824010_case(jule::Ptr<_1a482044b_scopeCoder> _self_, jule::Ptr<_1abcc174c_Match> _47428_m, jule::Ptr<_1abcc2297_Case> _47443_c) {
	if (((_47443_c.get()._field_Exprs.len() != 0LL) && (!(_47428_m.get()._field_Comptime)))) {
		if (((_47428_m.get()._field_Cases.len() > 0LL) && (_47428_m.get()._field_Cases[0LL] == _47443_c))) {
			_1a48d539b_write(_self_.get()._field_oc, jule::Str("if (", 4));
		} else {
			_1a48d539b_write(_self_.get()._field_oc, jule::Str("else if (", 9));
		};
		{
			auto expr = &(_47443_c.get()._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a7063b6a:;
			if (it != expr_end) {
				jule::I64 _48118_i = it - expr->begin();
				jule::Ptr<_1abd5dc4b_Data> _48125_expr = *it;
				{
					{
						
						if ((!(_47428_m.get()._field_TypeMatch))) {
							_case_begin_1a70697db:;
							{
								jule::Fn<void(void)> _48425_caseExpr = _1a4823be1_matchExpr(_self_, _47428_m);;
								if (_1abd5e8c8_GoodOperand(_47428_m.get()._field_Expr.ptr(), &(_48125_expr))) {
									if ((_48425_caseExpr != nullptr)) {
										_48425_caseExpr();
										_1a48d539b_write(_self_.get()._field_oc, jule::Str(" == ", 4));
									};
									_1a482b853_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _48125_expr.get()._field_Model);
								} else {
									_1a482b853_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _48125_expr.get()._field_Model);
									if ((_48425_caseExpr != nullptr)) {
										_1a48d539b_write(_self_.get()._field_oc, jule::Str(" == ", 4));
										_48425_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1a7064b49:;
							{
								_1a48d539b_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
								jule::Ptr<_1acca4ba2_TypeKind> _50029_tk = _48125_expr.get()._field_Model.cast_ptr<_1acca4ba2_TypeKind>(&__jule_any_type89);;
								if ((_1acca8a85_Trait(_47428_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									_1a48d539b_write(_self_.get()._field_oc, jule::Str(".type_is(", 9));
									_1a4829246_boolean(_self_.get()._field_oc.get()._field_ec, (_1acca7633_Sptr(_48125_expr.get()._field_Kind.ptr()) != nullptr));
									_1a48d539b_write(_self_.get()._field_oc, jule::Str(", ", 2));
									_1a48d539b_write(_self_.get()._field_oc, _1ddea4ea3_Itoa(static_cast<jule::I64>(_1a48d7029_findTypeOffset(_self_.get()._field_oc.ptr(), _1acca8a85_Trait(_47428_m.get()._field_Expr.get()._field_Kind.ptr()), _48125_expr.get()._field_Kind))));
									_1a48d539b_write(_self_.get()._field_oc, jule::Str(")", 1));
								} else {
									jule::I64 _50829_j = _1a48d62c0_pushAnyType(_self_.get()._field_oc, _50029_tk);;
									_1a48d539b_write(_self_.get()._field_oc, jule::Str(".type == &__jule_any_type", 25));
									_1a48d539b_write(_self_.get()._field_oc, _1ddea4ea3_Itoa(_50829_j));
								};
							}
						}
						_match_end_1a7064a7d:;
					};
					if (((_47443_c.get()._field_Exprs.len() - _48118_i) > 1LL)) {
						_1a48d539b_write(_self_.get()._field_oc, jule::Str(" || ", 4));
					};
				}
				_iter_next_1a7063b6a:;
				++it;
				_48118_i++;
				goto _iter_begin_1a7063b6a;
			}
			_iter_end_1a7063b6a:;
		};
		_1a48d539b_write(_self_.get()._field_oc, jule::Str(") ", 2));
	} else if (((_47428_m.get()._field_Default == _47443_c) && (_47428_m.get()._field_Cases.len() != 0LL))) {
		_1a48d5ba4_indent(_self_.get()._field_oc);
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("else ", 5));
	};
	_1a48d57ec_addIndent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, static__1a4845284_caseBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_47443_c))));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	if ((_47443_c.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		_1a48d5ba4_indent(_self_.get()._field_oc);
		_1a48259e5_scope(_self_, _47443_c.get()._field_Scope);
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("\n", 1));
	};
	_1a48d59c8_doneIndent(_self_.get()._field_oc);
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a4824285_matchSt(jule::Ptr<_1a482044b_scopeCoder> _self_, jule::Ptr<_1abcc174c_Match> _54231_m) {
	if (((_54231_m.get()._field_Cases.len() == 0LL) && (_54231_m.get()._field_Default == nullptr))) {
		return;;
	};
	if ((_54231_m.get()._field_Comptime && ((_54231_m.get()._field_Default == nullptr) || (_54231_m.get()._field_Default.get()._field_Scope.get()._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a48d57ec_addIndent(_self_.get()._field_oc);
	_1a48d5ba4_indent(_self_.get()._field_oc);
	if (((!(_54231_m.get()._field_Comptime)) && (!(_1abd5e5ba_IsConst(_54231_m.get()._field_Expr.ptr()))))) {
		if ((_1acd89d86_Copy && _1a4826111_isCopyOptimizable(&(_54231_m.get()._field_Expr)))) {
			_1a48d539b_write(_self_.get()._field_oc, jule::Str("auto &_match_expr{ ", 19));
		} else {
			_1a48d539b_write(_self_.get()._field_oc, jule::Str("auto _match_expr{ ", 18));
		};
		_1a482b853_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _54231_m.get()._field_Expr.get()._field_Model);
		_1a48d539b_write(_self_.get()._field_oc, jule::Str(" };\n", 4));
		_1a48d5ba4_indent(_self_.get()._field_oc);
	};
	if ((_54231_m.get()._field_Cases.len() > 0LL)) {
		{
			auto expr = &(_54231_m.get()._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a707b15a:;
			if (it != expr_end) {
				jule::Ptr<_1abcc2297_Case> _57025_c = *it;
				{
					if ((_57025_c == nullptr)) {
						goto _iter_next_1a707b15a;
					};
					_1a48d539b_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1a48d5ba4_indent(_self_.get()._field_oc);
					_1a4824010_case(_self_, _54231_m, _57025_c);
				}
				_iter_next_1a707b15a:;
				++it;
				goto _iter_begin_1a707b15a;
			}
			_iter_end_1a707b15a:;
		};
	};
	if ((_54231_m.get()._field_Default != nullptr)) {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1a4824010_case(_self_, _54231_m, _54231_m.get()._field_Default);
	};
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, static__1a4844edc_matchEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_54231_m))));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(":;", 2));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a48d59c8_doneIndent(_self_.get()._field_oc);
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a482450a_fallSt(jule::Ptr<_1a482044b_scopeCoder> _self_, jule::Ptr<_1abcc286e_FallSt> _59726_f) {
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1a48d539b_write(_self_.get()._field_oc, static__1a4845284_caseBegin(_59726_f.get()._field_DestCase));
}



inline void _1a4824780_breakSt(jule::Ptr<_1a482044b_scopeCoder> _self_, jule::Ptr<_1abcbed88_BreakSt> _60227_b) {
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	if ((_60227_b.get()._field_It != 0LLU)) {
		_1a48d539b_write(_self_.get()._field_oc, static__1a4844706_iterEnd(_60227_b.get()._field_It));
	} else {
		_1a48d539b_write(_self_.get()._field_oc, static__1a4844edc_matchEnd(_60227_b.get()._field_Mtch));
	};
}



inline void _1a4824a05_setResult(jule::Ptr<_1a482044b_scopeCoder> _self_, jule::Ptr<_1abcc2bc1_RetSt> _61133_r) {
	if ((_61133_r.get()._field_Func.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL)) {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("__jule_func_result = ", 21));
		_1a482b853_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _61133_r.get()._field_Expr);
		_1a48d539b_write(_self_.get()._field_oc, jule::Str(";\n", 2));
		_1a48d5ba4_indent(_self_.get()._field_oc);
		return;;
	};
	jule::Slice<jule::Ptr<_1abd5dc4b_Data>> _61917_datas = _61133_r.get()._field_Expr.cast_ptr<_1acb14c98_TupleExprModel>(&__jule_any_type87).get()._field_Datas;;
	{
		auto expr = &(_61917_datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7085032:;
		if (it != expr_end) {
			jule::I64 _62013_i = it - expr->begin();
			jule::Ptr<_1abd5dc4b_Data> _62016_data = *it;
			{
				_1a48d539b_write(_self_.get()._field_oc, jule::Str("__jule_func_result.__jule_result_arg", 36));
				_1a48d539b_write(_self_.get()._field_oc, _1ddea4ea3_Itoa(_62013_i));
				_1a48d539b_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1a482b853_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _62016_data.get()._field_Model);
				_1a48d539b_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				_1a48d5ba4_indent(_self_.get()._field_oc);
			}
			_iter_next_1a7085032:;
			++it;
			_62013_i++;
			goto _iter_begin_1a7085032;
		}
		_iter_end_1a7085032:;
	};
}



inline void _1a4824c7a_retSt(jule::Ptr<_1a482044b_scopeCoder> _self_, jule::Ptr<_1abcc2bc1_RetSt> _63029_r) {
	if (_1acb22646_IsVoid(_63029_r.get()._field_Func.get()._field_Decl.ptr())) {
		if (_63029_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_1a48d539b_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();", 31));
			return;;
		};
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("return;", 7));
		return;;
	} else if ((_63029_r.get()._field_Func.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 0LL)) {
		if (_63029_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_1a48d539b_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
			_1a48d539b_write(_self_.get()._field_oc, _1a48e8b2e_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _63029_r.get()._field_Func.get()._field_Result));
			_1a48d539b_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), ", 15));
			_1a482b853_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _63029_r.get()._field_Expr);
			_1a48d539b_write(_self_.get()._field_oc, jule::Str(");", 2));
		} else {
			_1a48d539b_write(_self_.get()._field_oc, jule::Str("return ", 7));
			_1a482b853_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _63029_r.get()._field_Expr);
			_1a48d539b_write(_self_.get()._field_oc, jule::Str(";", 1));
		};
		return;;
	};
	if ((_63029_r.get()._field_Expr != nullptr)) {
		_1a4824a05_setResult(_self_, _63029_r);
	};
	if (_63029_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1a48ed628_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_63029_r.get()._field_Func.get()._field_Result));
		_1a48d539b_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), __jule_func_result);", 35));
	} else {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("return __jule_func_result;", 26));
	};
}



inline void _1a4825000_var(jule::Ptr<_1a482044b_scopeCoder> _self_, jule::Ptr<_1abd1497c_Var> _66627_v) {
	if ((!(_66627_v.get()._field_Constant))) {
		_1a48dc969_var(_self_.get()._field_oc, _66627_v);
	};
}



inline void _1a4825275_strAppend(jule::Ptr<_1a482044b_scopeCoder> _self_, jule::Ptr<_1acd792d7_StrAppendExprModel> _67233_m) {
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a482b853_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _67233_m.get()._field_Str);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(").append(", 9));
	{
		auto &_match_expr{ _67233_m.get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a708ee4e:;
			{
				jule::Ptr<_1ddeb4b1c_Const> _67817_c = _67233_m.get()._field_Expr.cast_ptr<_1ddeb4b1c_Const>(&__jule_any_type19);;
				jule::Slice<jule::U8> _67917_bytes = static_cast<jule::Slice<jule::U8>>(_1ddeb6b52_ReadStr(_67817_c.ptr()));;
				_1a48d539b_write(_self_.get()._field_oc, _1a483b676_cstrLit(_67917_bytes));
				_1a48d539b_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1a48d539b_write(_self_.get()._field_oc, _1ddea4c0b_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_67917_bytes.len())), 10LL));
			}
		}
		else {
			_case_begin_1a7090e50:;
			{
				_1a482b853_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _67233_m.get()._field_Expr);
			}
		}
		_match_end_1a7090dea:;
	};
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a48254ea_st(jule::Ptr<_1a482044b_scopeCoder> _self_, jule::Any _69026_st) {
	if ((_69026_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _69026_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1a709442b:;
			{
				_1a48259e5_scope(_self_, _69026_st.cast_ptr<_1abcbc935_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a70942c7:;
			{
				_1a4825000_var(_self_, _69026_st.cast_ptr<_1abd1497c_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1a7094b8a:;
			{
				_1a483a6a8_model(_self_.get()._field_oc.get()._field_ec, _69026_st.cast_ptr<_1abd5dc4b_Data>(&__jule_any_type24).get()._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1a7094c01:;
			{
				_1a4821903_conditional(_self_, _69026_st.cast_ptr<_1abcbd491_Conditional>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1a7094c67:;
			{
				_1a4821b78_infIter(_self_, _69026_st.cast_ptr<_1abcbd77c_InfIter>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1a7094ccd:;
			{
				_1a4821ded_whileIter(_self_, _69026_st.cast_ptr<_1abcbdc00_WhileIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1a7094d44:;
			{
				_1a4822173_rangeIter(_self_, _69026_st.cast_ptr<_1abcbe5d5_RangeIter>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1a7094daa:;
			{
				_1a48223e8_cont(_self_, _69026_st.cast_ptr<_1abcbe9d1_ContSt>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1a7094e21:;
			{
				_1a482266d_label(_self_, _69026_st.cast_ptr<_1abcc0174_Label>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1a7094e87:;
			{
				_1a48228e3_gotoSt(_self_, _69026_st.cast_ptr<_1abcc0460_GotoSt>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1a709500e:;
			{
				_1a4822b68_postfix(_self_, _69026_st.cast_ptr<_1abcc0817_Postfix>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1a7095086:;
			{
				_1a4822ddd_assign(_self_, _69026_st.cast_ptr<_1abcc0c8a_Assign>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1a709510d:;
			{
				_1a48238d3_multiAssign(_self_, _69026_st.cast_ptr<_1abcc1142_MultiAssign>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1a7095185:;
			{
				_1a4824285_matchSt(_self_, _69026_st.cast_ptr<_1abcc174c_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1a709520c:;
			{
				_1a482450a_fallSt(_self_, _69026_st.cast_ptr<_1abcc286e_FallSt>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1a7095284:;
			{
				_1a4824780_breakSt(_self_, _69026_st.cast_ptr<_1abcbed88_BreakSt>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1a709530b:;
			{
				_1a4824c7a_retSt(_self_, _69026_st.cast_ptr<_1abcc2bc1_RetSt>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1a7095383:;
			{
				_1a4838145_pushToSlice(_self_.get()._field_oc.get()._field_ec, _69026_st.cast_ptr<_1acd79cdd_PushToSliceExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1a709540a:;
			{
				_1a48383ba_appendToSlice(_self_.get()._field_oc.get()._field_ec, _69026_st.cast_ptr<_1acd7a195_AppendToSliceExprModel>(&__jule_any_type127));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1a7095482:;
			{
				_1a4839e38_mutSlicing(_self_.get()._field_oc.get()._field_ec, _69026_st.cast_ptr<_1acd7a6d4_MutSlicingExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1a7095509:;
			{
				_1a483a1ad_strInsertBegin(_self_.get()._field_oc.get()._field_ec, _69026_st.cast_ptr<_1acd7abbd_StrInsertBeginExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1a7095581:;
			{
				_1a4825275_strAppend(_self_, _69026_st.cast_ptr<_1acd792d7_StrAppendExprModel>(&__jule_any_type125));
			}
		}
		else {
			_case_begin_1a70943b5:;
			{
				_1a48d539b_write(_self_.get()._field_oc, jule::Str("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1a7094063:;
	};
}



inline void _1a4825770_scopeStmts(jule::Ptr<_1a482044b_scopeCoder> _self_, jule::Ptr<_1abcbc935_Scope>* _74435_s) {
	{
		auto expr = &((*(_74435_s)).get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a70a0239:;
		if (it != expr_end) {
			jule::Any _74521_st = *it;
			{
				_1a48d5ba4_indent(_self_.get()._field_oc);
				_1a48254ea_st(_self_, _74521_st);
				_1a48d539b_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1a70a0239:;
			++it;
			goto _iter_begin_1a70a0239;
		}
		_iter_end_1a70a0239:;
	};
}



inline void _1a48259e5_scope(jule::Ptr<_1a482044b_scopeCoder> _self_, jule::Ptr<_1abcbc935_Scope> _75329_s) {
	_1a48d57ec_addIndent(_self_.get()._field_oc);
	if (_75329_s.get()._field_Deferred) {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("__JULE_DEFER(", 13));
	};
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a4825770_scopeStmts(_self_, &(_75329_s));
	_1a48d59c8_doneIndent(_self_.get()._field_oc);
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("}", 1));
	if (_75329_s.get()._field_Deferred) {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str(");", 2));
	};
}



inline void _1a4825c6a_funcScope(jule::Ptr<_1a482044b_scopeCoder> _self_, jule::Ptr<_1acb24d85_FnIns> _76933_f) {
	if ((_76933_f.get()._field_Scope == nullptr)) {
		return;;
	};
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a48d57ec_addIndent(_self_.get()._field_oc);
	if ((!(_1acb22646_IsVoid(_76933_f.get()._field_Decl.ptr())))) {
		jule::Ptr<_1accb21ba_Tuple> _77621_tup = _1acca905d_Tup(_76933_f.get()._field_Result.ptr());;
		if ((_77621_tup != nullptr)) {
			_1a48d5ba4_indent(_self_.get()._field_oc);
			_1a48eceda_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), _77621_tup);
			_1a48d539b_write(_self_.get()._field_oc, jule::Str(" __jule_func_result;\n", 21));
			{
				auto expr = &(_77621_tup.get()._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1a70a599d:;
				if (it != expr_end) {
					jule::I64 _78122_i = it - expr->begin();
					jule::Ptr<_1acca4ba2_TypeKind> _78129_t = *it;
					{
						if (_1a490095a_shouldInitialized(&(_78129_t))) {
							_1a48d5ba4_indent(_self_.get()._field_oc);
							_1a48d539b_write(_self_.get()._field_oc, jule::Str("__jule_func_result.__jule_result_arg", 36));
							_1a48d539b_write(_self_.get()._field_oc, _1ddea4ea3_Itoa(_78122_i));
							_1a48d539b_write(_self_.get()._field_oc, jule::Str(" = ", 3));
							_1a483a92d_initExpr(_self_.get()._field_oc.get()._field_ec, _78129_t);
							_1a48d539b_write(_self_.get()._field_oc, jule::Str(";\n", 2));
						};
					}
					_iter_next_1a70a599d:;
					++it;
					_78122_i++;
					goto _iter_begin_1a70a599d;
				}
				_iter_end_1a70a599d:;
			};
		} else if ((_76933_f.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL)) {
			_1a48d5ba4_indent(_self_.get()._field_oc);
			_1a48d539b_write(_self_.get()._field_oc, _1a48e8b2e_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _76933_f.get()._field_Result));
			_1a48d539b_write(_self_.get()._field_oc, jule::Str(" __jule_func_result", 19));
			if (_1a490095a_shouldInitialized(&(_76933_f.get()._field_Result))) {
				_1a48d539b_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1a483a92d_initExpr(_self_.get()._field_oc.get()._field_ec, _76933_f.get()._field_Result);
			};
			_1a48d539b_write(_self_.get()._field_oc, jule::Str(";\n", 2));
		};
	};
	_1a4825770_scopeStmts(_self_, &(_76933_f.get()._field_Scope));
	if ((_76933_f.get()._field_Decl.get()._field_Exceptional && _1acb22646_IsVoid(_76933_f.get()._field_Decl.ptr()))) {
		_1a48d5ba4_indent(_self_.get()._field_oc);
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();\n", 32));
	};
	_1a48d59c8_doneIndent(_self_.get()._field_oc);
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("}", 1));
}







std::ostream &operator<<(std::ostream &_Stream, _1a482044b_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a4828894_exprCoder> static__1a4828c4b_new(jule::Ptr<_1a48d4c4c_ObjectCoder>* _11024_oc) {
	return jule::new_ptr<_1a4828894_exprCoder>(_1a4828894_exprCoder{._field_oc=(*(_11024_oc))});;
}



inline void _1a4828ec1_string(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1ddeb4b1c_Const>* _11627_c) {
	jule::Str _11713_content = _1ddeb6b52_ReadStr((*(_11627_c)).ptr());;
	if ((_11713_content.len() == 0LL)) {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		return;;
	};
	jule::Slice<jule::U8> _12213_bytes = static_cast<jule::Slice<jule::U8>>(_11713_content);;
	jule::Str _12313_len = _1ddea4c0b_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_12213_bytes.len())), 10LL);;
	jule::Str _12413_lit = _1a483b676_cstrLit(_12213_bytes);;
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a48d5621_writeR(_self_.get()._field_oc, &(_12413_lit));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1a48d5621_writeR(_self_.get()._field_oc, &(_12313_len));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a4829246_boolean(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Bool _13327_b) {
	if (_13327_b) {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("true", 4));
	} else {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("false", 5));
	};
}



inline void _1a4829422_nilLit(jule::Ptr<_1a4828894_exprCoder> _self_) {
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
}



inline jule::Bool _1a4829730_ftoaSpecialCases(jule::Ptr<_1a4828894_exprCoder> _self_, jule::F64* _14537_x) {
	{
		
		if (_1dde5ad8d_IsNaN((*(_14537_x)))) {
			_case_begin_1a70c5b44:;
			{
				_1a48d539b_write(_self_.get()._field_oc, jule::Str("NAN", 3));
			}
		}
		else if (_1dde5b443_IsInf((*(_14537_x)), 1LL)) {
			_case_begin_1a70c5bbb:;
			{
				_1a48d539b_write(_self_.get()._field_oc, jule::Str("INFINITY", 8));
			}
		}
		else if (_1dde5b443_IsInf((*(_14537_x)), -1LL)) {
			_case_begin_1a70c5c43:;
			{
				_1a48d539b_write(_self_.get()._field_oc, jule::Str("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1a70c5acd:;
			{
				return false;;
			}
		}
		_match_end_1a70c5a12:;
	};
	return true;;
}



inline void _1a48299a5_float32(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1ddeb4b1c_Const>* _15928_c) {
	jule::F64 _16013_x = _1ddeb7603_AsF64((*(_15928_c)).ptr());;
	if (_1a4829730_ftoaSpecialCases(_self_, &(_16013_x))) {
		return;;
	};
	{
		
		if ((_16013_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1a70c887d:;
			{
				_1a48d539b_write(_self_.get()._field_oc, jule::Str("jule::MAX_F32", 13));
			}
		}
		else if ((_16013_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1a70c85b4:;
			{
				_1a48d539b_write(_self_.get()._field_oc, jule::Str("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1a70c854d:;
			{
				_1a48d539b_write(_self_.get()._field_oc, _1a483b984_ftoa(_16013_x, 32LL));
				_1a48d539b_write(_self_.get()._field_oc, jule::Str("f", 1));
			}
		}
		_match_end_1a70c841b:;
	};
}



inline void _1a4829c2a_float64(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1ddeb4b1c_Const>* _17828_c) {
	jule::F64 _17913_x = _1ddeb7603_AsF64((*(_17828_c)).ptr());;
	if (_1a4829730_ftoaSpecialCases(_self_, &(_17913_x))) {
		return;;
	};
	{
		
		if ((_17913_x == jule::MAX_F64)) {
			_case_begin_1a70cb63e:;
			{
				_1a48d539b_write(_self_.get()._field_oc, jule::Str("jule::MAX_F64", 13));
			}
		}
		else if ((_17913_x == jule::MIN_F64)) {
			_case_begin_1a70cb991:;
			{
				_1a48d539b_write(_self_.get()._field_oc, jule::Str("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1a70caece:;
			{
				_1a48d539b_write(_self_.get()._field_oc, _1a483b984_ftoa(_17913_x, 64LL));
			}
		}
		_match_end_1a70cad9c:;
	};
}



inline void _1a4829ea0_constant(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1ddeb4b1c_Const> _19632_c) {
	{
		
		if (_1ddeb8eea_IsStr(_19632_c.ptr())) {
			_case_begin_1a70ccb6d:;
			{
				_1a4828ec1_string(_self_, &(_19632_c));
			}
		}
		else if (_1ddeb8c86_IsBool(_19632_c.ptr())) {
			_case_begin_1a70ccbd4:;
			{
				_1a4829246_boolean(_self_, _1ddeb68dd_ReadBool(_19632_c.ptr()));
			}
		}
		else if (_1ddeb925e_IsF64(_19632_c.ptr())) {
			_case_begin_1a70ccc4a:;
			{
				{
					
					if (_19632_c.get()._field_Kind.equal("f32", 3)) {
						_case_begin_1a70cec91:;
						{
							_1a48299a5_float32(_self_, &(_19632_c));
						}
					}
					else {
						_case_begin_1a70ce8ea:;
						{
							_1a4829c2a_float64(_self_, &(_19632_c));
						}
					}
					_match_end_1a70ce82e:;
				};
			}
		}
		else if (_1ddeb87ad_IsI64(_19632_c.ptr())) {
			_case_begin_1a70cccb1:;
			{
				_1a48d539b_write(_self_.get()._field_oc, _1a483bc2b_itoa(static_cast<jule::I64>(_1ddeb6415_ReadI64(_19632_c.ptr()))));
			}
		}
		else if (_1ddeb8a22_IsU64(_19632_c.ptr())) {
			_case_begin_1a70cd542:;
			{
				_1a48d539b_write(_self_.get()._field_oc, _1a483bec3_utoa(static_cast<jule::U64>(_1ddeb6679_ReadU64(_19632_c.ptr()))));
			}
		}
		else if (_1ddeb94c3_IsNil(_19632_c.ptr())) {
			_case_begin_1a70cd5a8:;
			{
				_1a4829422_nilLit(_self_);
			}
		}
		else {
			_case_begin_1a70ccb07:;
			{
				_1a48d539b_write(_self_.get()._field_oc, jule::Str("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1a70cca3b:;
	};
}



inline void _1a482a368_divByZeroBinary(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_2097d15d8_Token>* _22036_op, jule::Ptr<_1acb0dc3c_OperandExprModel>* _22053_l, jule::Ptr<_1acb0dc3c_OperandExprModel>* _22080_r) {
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("jule::", 6));
	{
		auto &_match_expr{ (*(_22036_op)).get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("/=", 2)) {
			_case_begin_1a70d2a0d:;
			{
				_1a48d539b_write(_self_.get()._field_oc, jule::Str("div(", 4));
			}
		}
		else if (_match_expr == jule::Str("%", 1) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1a70d2a85:;
			{
				_1a48d539b_write(_self_.get()._field_oc, jule::Str("mod(", 4));
			}
		}
		_match_end_1a70d2997:;
	};
	if ((!(_207305560_Production))) {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1a48d75bd_locInfo(_self_.get()._field_oc, _22036_op);
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1a482b853_possibleRefExpr(_self_, (*(_22053_l)).get()._field_Model);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1a482b853_possibleRefExpr(_self_, (*(_22080_r)).get()._field_Model);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a482a5dd_unsafeBinary(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb0e204_BinopExprModel> _24236_m) {
	if ((_24236_m.get()._field_Op.get()._field_Kind.equal("==", 2) || _24236_m.get()._field_Op.get()._field_Kind.equal("!=", 2))) {
		if (_1a483cb1c_isAny(&(_24236_m.get()._field_Left.get()._field_Kind))) {
			if (((!(_1acca5c08_IsNil(_24236_m.get()._field_Right.get()._field_Kind.ptr()))) && (!(_1a483cb1c_isAny(&(_24236_m.get()._field_Right.get()._field_Kind)))))) {
				_1a48d539b_write(_self_.get()._field_oc, jule::Str("(", 1));
				if (_24236_m.get()._field_Op.get()._field_Kind.equal("!=", 2)) {
					_1a48d539b_write(_self_.get()._field_oc, jule::Str("!", 1));
				};
				jule::I64 _25225_i = _1a48d62c0_pushAnyType(_self_.get()._field_oc, _24236_m.get()._field_Right.get()._field_Kind);;
				_1a48d539b_write(_self_.get()._field_oc, jule::Str("__jule_any_type", 15));
				_1a48d539b_write(_self_.get()._field_oc, _1ddea4ea3_Itoa(_25225_i));
				_1a48d539b_write(_self_.get()._field_oc, jule::Str("_compare(", 9));
				_1a482b853_possibleRefExpr(_self_, _24236_m.get()._field_Left.get()._field_Model);
				_1a48d539b_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1a482b853_possibleRefExpr(_self_, _24236_m.get()._field_Right.get()._field_Model);
				_1a48d539b_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			};
		};
	};
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a482b853_possibleRefExpr(_self_, _24236_m.get()._field_Left.get()._field_Model);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1a48d5621_writeR(_self_.get()._field_oc, &(_24236_m.get()._field_Op.get()._field_Kind));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1a482b853_possibleRefExpr(_self_, _24236_m.get()._field_Right.get()._field_Model);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a482a863_binary(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb0e204_BinopExprModel> _27330_m) {
	{
		auto &_match_expr{ _27330_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("%", 1)) {
			_case_begin_1a70dcebe:;
			{
				if ((_1acca8821_Struct(_27330_m.get()._field_Left.get()._field_Kind.ptr()) == nullptr)) {
					_1a482a368_divByZeroBinary(_self_, &(_27330_m.get()._field_Op), &(_27330_m.get()._field_Left), &(_27330_m.get()._field_Right));
					return;;
				};
			}
		}
		_match_end_1a70dce47:;
	};
	_1a482a5dd_unsafeBinary(_self_, _27330_m);
}



inline void _1a482aad8_var(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1abd1497c_Var> _28527_m) {
	if (_28527_m.get()._field_Binded) {
		jule::Ptr<_1acaa47b5_Directive> _28717_d = _1a490032d_findDirective(&(_28527_m.get()._field_Directives), jule::Str("namespace", 9));;
		if ((_28717_d != nullptr)) {
			_1a48d539b_write(_self_.get()._field_oc, _1a48e16e8_concatAllParts(_28717_d.get()._field_Args));
			_1a48d539b_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1a48d539b_write(_self_.get()._field_oc, static__1a48441b7_var(_28527_m));
}



inline void _1a482ad5d_structureIns(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb09d37_StructIns> _29636_m) {
	_1a48d539b_write(_self_.get()._field_oc, _1a48e719e_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _29636_m));
}



inline void _1a482b0d3_unary(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb0e5ab_UnaryExprModel> _30029_m) {
	{
		auto &_match_expr{ _30029_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1a70e26ee:;
			{
				_1a48d539b_write(_self_.get()._field_oc, jule::Str("(~(", 3));
				_1a482b853_possibleRefExpr(_self_, _30029_m.get()._field_Expr.get()._field_Model);
				_1a48d539b_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1a70e2776:;
			{
				if ((_207305560_Production || (_1acca7633_Sptr(_30029_m.get()._field_Expr.get()._field_Kind.ptr()) == nullptr))) {
					goto _match_end_1a70e2666;
				};
				_1a482b853_possibleRefExpr(_self_, _30029_m.get()._field_Expr.get()._field_Model);
				_1a48d539b_write(_self_.get()._field_oc, jule::Str(".get(\"", 6));
				_1a48d75bd_locInfo(_self_.get()._field_oc, &(_30029_m.get()._field_Op));
				_1a48d539b_write(_self_.get()._field_oc, jule::Str("\")", 2));
				return;;
			}
		}
		_match_end_1a70e2666:;
	};
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a48d5621_writeR(_self_.get()._field_oc, &(_30029_m.get()._field_Op.get()._field_Kind));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a482b853_possibleRefExpr(_self_, _30029_m.get()._field_Expr.get()._field_Model);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1a482b358_structureLit(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb0ed5e_StructLitExprModel> _32436_m) {
	if (_32436_m.get()._field_Strct.get()._field_Decl.get()._field_Binded) {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("(", 1));
	};
	_1a48d539b_write(_self_.get()._field_oc, static__1a4843b78_structureIns(&(_32436_m.get()._field_Strct)));
	if (_32436_m.get()._field_Strct.get()._field_Decl.get()._field_Binded) {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("{", 1));
	if ((_32436_m.get()._field_Args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto expr = &(_32436_m.get()._field_Strct.get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a70e8cbb:;
			if (it != expr_end) {
				jule::I64 _33717_i = it - expr->begin();
				jule::Ptr<_1acb09342_FieldIns> _33720_f = *it;
				{
					{
						auto expr = &(_32436_m.get()._field_Args);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a70e9904:;
						if (it != expr_end) {
							jule::Ptr<_1acb0e9a7_StructArgExprModel> _33829_arg = *it;
							{
								if ((_33829_arg.get()._field_Field == _33720_f)) {
									_1a48d539b_write(_self_.get()._field_oc, jule::Str(".", 1));
									_1a48d539b_write(_self_.get()._field_oc, static__1a4843e20_field(&(_33829_arg.get()._field_Field.get()._field_Decl)));
									_1a48d539b_write(_self_.get()._field_oc, jule::Str("=", 1));
									_1a482b853_possibleRefExpr(_self_, _33829_arg.get()._field_Expr);
									if (((_32436_m.get()._field_Strct.get()._field_Fields.len() - _33717_i) > 1LL)) {
										_1a48d539b_write(_self_.get()._field_oc, jule::Str(", ", 2));
									};
									goto _iter_next_1a70e8cbb;
								};
							}
							_iter_next_1a70e9904:;
							++it;
							goto _iter_begin_1a70e9904;
						}
						_iter_end_1a70e9904:;
					};
				}
				_iter_next_1a70e8cbb:;
				++it;
				_33717_i++;
				goto _iter_begin_1a70e8cbb;
			}
			_iter_end_1a70e8cbb:;
		};
	};
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a482b5cd_allocStructure(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb1016c_AllocStructLitExprModel> _35538_m) {
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1a48d539b_write(_self_.get()._field_oc, static__1a4843b78_structureIns(&(_35538_m.get()._field_Lit.get()._field_Strct)));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1a482b358_structureLit(_self_, _35538_m.get()._field_Lit);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a482b853_possibleRefExpr(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Any _36335_expr) {
	{
		auto &_match_expr{ _36335_expr };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a70ee909:;
			{
				jule::Ptr<_1abd1497c_Var> _36617_v = _36335_expr.cast_ptr<_1abd1497c_Var>(&__jule_any_type8);;
				if (_36617_v.get()._field_Reference) {
					_1a48d539b_write(_self_.get()._field_oc, jule::Str("(*(", 3));
					_1a483a6a8_model(_self_, _36335_expr);
					_1a48d539b_write(_self_.get()._field_oc, jule::Str("))", 2));
					return;;
				};
			}
		}
		_match_end_1a70ee80a:;
	};
	_1a483a6a8_model(_self_, _36335_expr);
}



inline void _1a482bc1b_castTraitFromTrait(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb106bc_CastingExprModel>* _37743_m, jule::Ptr<_1acb34405_Trait> _37769_t1, jule::Ptr<_1acb34405_Trait> _37785_t2) {
	_1a482b853_possibleRefExpr(_self_, (*(_37743_m)).get()._field_Expr);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(".mask<", 6));
	_1a48d539b_write(_self_.get()._field_oc, static__1a4843392_traitDecl(_37769_t1));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1a48d7348_pushAndWriteMaskMapper(_self_.get()._field_oc, _37769_t1, _37785_t2);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a482be91_casting(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb106bc_CastingExprModel> _39231_m) {
	{
		
		if (_1a483cb1c_isAny(&(_39231_m.get()._field_Kind))) {
			_case_begin_1a7103974:;
			{
				if (_1acca5c08_IsNil(_39231_m.get()._field_ExprKind.ptr())) {
					_1a48d539b_write(_self_.get()._field_oc, jule::Str("jule::Any()", 11));
					return;;
				};
				if ((_1acca7d70_TypeEnum(_39231_m.get()._field_ExprKind.ptr()) != nullptr)) {
					_1a482b853_possibleRefExpr(_self_, _39231_m.get()._field_Expr);
					return;;
				};
				jule::I64 _40317_i = _1a48d62c0_pushAnyType(_self_.get()._field_oc, _39231_m.get()._field_ExprKind);;
				_1a48d539b_write(_self_.get()._field_oc, jule::Str("jule::Any(", 10));
				{
					auto &_match_expr{ _39231_m.get()._field_Expr };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1a7105503:;
						{
							jule::Ptr<_1accac407_Prim> _40721_prim = _1acca73be_Prim(_39231_m.get()._field_ExprKind.ptr());;
							if (((_40721_prim != nullptr) && _1ddeb404a_IsInt(_40721_prim.get()._field_Kind))) {
								_1a48d539b_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
								_1a48d539b_write(_self_.get()._field_oc, _1a48e43cc_prim(_self_.get()._field_oc.get()._field_tc.ptr(), _40721_prim));
								_1a48d539b_write(_self_.get()._field_oc, jule::Str(">(", 2));
								_1a482b853_possibleRefExpr(_self_, _39231_m.get()._field_Expr);
								_1a48d539b_write(_self_.get()._field_oc, jule::Str(")", 1));
								goto _match_end_1a71061a2;
							};
							goto _case_begin_1a71063e4;
						}
					}
					else {
						_case_begin_1a71063e4:;
						{
							_1a482b853_possibleRefExpr(_self_, _39231_m.get()._field_Expr);
						}
					}
					_match_end_1a71061a2:;
				};
				_1a48d539b_write(_self_.get()._field_oc, jule::Str(", &__jule_any_type", 18));
				_1a48d539b_write(_self_.get()._field_oc, _1ddea4ea3_Itoa(_40317_i));
				_1a48d539b_write(_self_.get()._field_oc, jule::Str(")", 1));
				return;;
			}
		}
		else if (_1a483cb1c_isAny(&(_39231_m.get()._field_ExprKind))) {
			_case_begin_1a71039eb:;
			{
				_1a482b853_possibleRefExpr(_self_, _39231_m.get()._field_Expr);
				_1a48d539b_write(_self_.get()._field_oc, jule::Str(".", 1));
				if ((_1acca7633_Sptr(_39231_m.get()._field_Kind.ptr()) != nullptr)) {
					_1a48d539b_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
					_1a48d539b_write(_self_.get()._field_oc, _1a48e8b2e_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _1acca7633_Sptr(_39231_m.get()._field_Kind.ptr()).get()._field_Elem));
				} else {
					_1a48d539b_write(_self_.get()._field_oc, jule::Str("cast<", 5));
					_1a48d539b_write(_self_.get()._field_oc, _1a48e8b2e_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _39231_m.get()._field_Kind));
				};
				_1a48d539b_write(_self_.get()._field_oc, jule::Str(">(", 2));
				if ((!(_207305560_Production))) {
					_1a48d539b_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1a48d75bd_locInfo(_self_.get()._field_oc, &(_39231_m.get()._field_Token));
					_1a48d539b_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				};
				_1a48d539b_write(_self_.get()._field_oc, jule::Str("&__jule_any_type", 16));
				_1a48d539b_write(_self_.get()._field_oc, _1ddea4ea3_Itoa(static_cast<jule::I64>(_1a48d62c0_pushAnyType(_self_.get()._field_oc, _39231_m.get()._field_Kind))));
				_1a48d539b_write(_self_.get()._field_oc, jule::Str(")", 1));
				return;;
			}
		}
		else if ((_1acca7897_Ptr(_39231_m.get()._field_ExprKind.ptr()) != nullptr) || (_1acca7897_Ptr(_39231_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7103a73:;
			{
				_1a48d539b_write(_self_.get()._field_oc, jule::Str("((", 2));
				_1a48d539b_write(_self_.get()._field_oc, _1a48e8b2e_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _39231_m.get()._field_Kind));
				_1a48d539b_write(_self_.get()._field_oc, jule::Str(")(", 2));
				_1a482b853_possibleRefExpr(_self_, _39231_m.get()._field_Expr);
				_1a48d539b_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if ((_1acca8a85_Trait(_39231_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1a7103aea:;
			{
				if ((_1acca8a85_Trait(_39231_m.get()._field_Kind.ptr()) != nullptr)) {
					_1a482bc1b_castTraitFromTrait(_self_, &(_39231_m), _1acca8a85_Trait(_39231_m.get()._field_Kind.ptr()), _1acca8a85_Trait(_39231_m.get()._field_ExprKind.ptr()));
					return;;
				};
				_1a482b853_possibleRefExpr(_self_, _39231_m.get()._field_Expr);
				_1a48d539b_write(_self_.get()._field_oc, jule::Str(".", 1));
				if ((_1acca7633_Sptr(_39231_m.get()._field_Kind.ptr()) != nullptr)) {
					_1a48d539b_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
					_1a48d539b_write(_self_.get()._field_oc, _1a48e8b2e_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _1acca7633_Sptr(_39231_m.get()._field_Kind.ptr()).get()._field_Elem));
				} else {
					_1a48d539b_write(_self_.get()._field_oc, jule::Str("cast<", 5));
					_1a48d539b_write(_self_.get()._field_oc, _1a48e8b2e_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _39231_m.get()._field_Kind));
				};
				_1a48d539b_write(_self_.get()._field_oc, jule::Str(">(", 2));
				if ((!(_207305560_Production))) {
					_1a48d539b_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1a48d75bd_locInfo(_self_.get()._field_oc, &(_39231_m.get()._field_Token));
					_1a48d539b_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				};
				_1a48d539b_write(_self_.get()._field_oc, _1ddea4ea3_Itoa(static_cast<jule::I64>(_1a48d7029_findTypeOffset(_self_.get()._field_oc.ptr(), _1acca8a85_Trait(_39231_m.get()._field_ExprKind.ptr()), _39231_m.get()._field_Kind))));
				_1a48d539b_write(_self_.get()._field_oc, jule::Str(")", 1));
				return;;
			}
		}
		else if ((_1acca8a85_Trait(_39231_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7103b72:;
			{
				_1a48d539b_write(_self_.get()._field_oc, _1a48e8b2e_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _39231_m.get()._field_Kind));
				_1a48d539b_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1a482b853_possibleRefExpr(_self_, _39231_m.get()._field_Expr);
				_1a48d539b_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1a48d539b_write(_self_.get()._field_oc, _1ddea4ea3_Itoa(static_cast<jule::I64>(_1a48d7029_findTypeOffset(_self_.get()._field_oc.ptr(), _1acca8a85_Trait(_39231_m.get()._field_Kind.ptr()), _39231_m.get()._field_ExprKind))));
				_1a48d539b_write(_self_.get()._field_oc, jule::Str(")", 1));
				return;;
			}
		}
		_match_end_1a7103831:;
	};
	jule::Ptr<_1accac407_Prim> _48413_prim = _1acca73be_Prim(_39231_m.get()._field_Kind.ptr());;
	jule::Ptr<_1accac407_Prim> _48513_eprim = _1acca73be_Prim(_39231_m.get()._field_ExprKind.ptr());;
	if ((((_48513_eprim != nullptr) && (_48413_prim != nullptr)) && _1accb0608_IsStr(_48413_prim.ptr()))) {
		if (_1accadbcd_IsU8(_48513_eprim.ptr())) {
			_1a48d539b_write(_self_.get()._field_oc, jule::Str("jule::Str::from_byte(", 21));
		} else {
			_1a48d539b_write(_self_.get()._field_oc, jule::Str("jule::Str::from_rune(", 21));
		};
		_1a482b853_possibleRefExpr(_self_, _39231_m.get()._field_Expr);
		_1a48d539b_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
	_1a48d539b_write(_self_.get()._field_oc, _1a48e8b2e_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _39231_m.get()._field_Kind));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1a482b853_possibleRefExpr(_self_, _39231_m.get()._field_Expr);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a482c216_models(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Slice<jule::Any> _50330_args) {
	if ((_50330_args.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &(_50330_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a711e990:;
		if (it != expr_end) {
			jule::I64 _50714_i = it - expr->begin();
			jule::Any _50721_a = *it;
			{
				_1a482b853_possibleRefExpr(_self_, _50721_a);
				if (((_50330_args.len() - _50714_i) > 1LL)) {
					_1a48d539b_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1a711e990:;
			++it;
			_50714_i++;
			goto _iter_begin_1a711e990;
		}
		_iter_end_1a711e990:;
	};
}



inline void _1a482c48b_args(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb1106e_FnCallExprModel>* _51529_m) {
	jule::I64 _51617_j = 0LL;;
	if (((((*(_51529_m)).get()._field_Func.get()._field_Owner != nullptr) && (!((*(_51529_m)).get()._field_Func.get()._field_Decl.get()._field_Statically))) || (((*(_51529_m)).get()._field_Func.get()._field_Params.len() > 0LL) && _1acb20e80_IsSelf((*(_51529_m)).get()._field_Func.get()._field_Params[0LL].get()._field_Decl.ptr())))) {
		(_51617_j)++;
	};
	{
		auto expr = &((*(_51529_m)).get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7123147:;
		if (it != expr_end) {
			jule::I64 _52113_i = it - expr->begin();
			jule::Any _52116_arg = *it;
			{
				jule::Ptr<_1acb23eb6_ParamIns> _52217_p = (*(_51529_m)).get()._field_Func.get()._field_Params[_51617_j];;
				if (((_52217_p.get()._field_Decl != nullptr) && _52217_p.get()._field_Decl.get()._field_Reference)) {
					{
						auto &_match_expr{ _52116_arg };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1a712481e:;
							{
								jule::Ptr<_1abd1497c_Var> _52625_v = _52116_arg.cast_ptr<_1abd1497c_Var>(&__jule_any_type8);;
								if (_52625_v.get()._field_Reference) {
									_1a483a6a8_model(_self_, _52116_arg);
									goto _julec_label_end;
								};
							}
						}
						_match_end_1a7124731:;
					};
					_1a48d539b_write(_self_.get()._field_oc, jule::Str("&(", 2));
					_1a483a6a8_model(_self_, _52116_arg);
					_1a48d539b_write(_self_.get()._field_oc, jule::Str(")", 1));
					goto _julec_label_end;
				};
				_1a482b853_possibleRefExpr(_self_, _52116_arg);
				_julec_label_end:;
				if ((((*(_51529_m)).get()._field_Args.len() - _52113_i) > 1LL)) {
					_1a48d539b_write(_self_.get()._field_oc, jule::Str(", ", 2));
				};
				(_51617_j)++;
			}
			_iter_next_1a7123147:;
			++it;
			_52113_i++;
			goto _iter_begin_1a7123147;
		}
		_iter_end_1a7123147:;
	};
}



inline void _1a482c711_modelForCall(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Any _54636_expr) {
	{
		auto &_match_expr{ _54636_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a71285d1:;
			{
				_1a4830a88_funcIns(_self_, _54636_expr.cast_ptr<_1acb24d85_FnIns>(&__jule_any_type7));
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1a7128658:;
			{
				jule::Ptr<_1acb138e0_StructSubIdentExprModel> _55221_ssie = _54636_expr.cast_ptr<_1acb138e0_StructSubIdentExprModel>(&__jule_any_type71);;
				if ((_55221_ssie.get()._field_Method != nullptr)) {
					_1a4830a88_funcIns(_self_, _55221_ssie.get()._field_Method);
					return;;
				};
			}
		}
		_match_end_1a71284c1:;
	};
	_1a482b853_possibleRefExpr(_self_, _54636_expr);
}



inline void _1a482c986_pushCallInf(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb1106e_FnCallExprModel>* _56132_m) {
	if ((_207305560_Production || ((!((*(_56132_m)).get()._field_Func.get()._field_Anon)) && (!(_1a483c644_isBuiltinCallHasDebuginf(_56132_m)))))) {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("(", 1));
		return;;
	};
	if ((*(_56132_m)).get()._field_Func.get()._field_Anon) {
		{
			auto &_match_expr{ (*(_56132_m)).get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_1a712b56d:;
				{
					if ((*(_56132_m)).get()._field_Expr.cast_ptr<_1acb138e0_StructSubIdentExprModel>(&__jule_any_type71).get()._field_Field.get()._field_Decl.get()._field_Owner.get()._field_Binded) {
						_1a48d539b_write(_self_.get()._field_oc, jule::Str("(", 1));
						return;;
					};
					goto _case_begin_1a712b749;
				}
			}
			else {
				_case_begin_1a712b749:;
				{
					_1a48d539b_write(_self_.get()._field_oc, jule::Str(".call", 5));
				}
			}
			_match_end_1a712b617:;
		};
	};
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("(\"", 2));
	_1a48d75bd_locInfo(_self_.get()._field_oc, &((*(_56132_m)).get()._field_Token));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("\"", 1));
	if (((*(_56132_m)).get()._field_Args.len() != 0LL)) {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str(", ", 2));
	};
}



inline jule::Bool _1a482cc94_isWrapped(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb1106e_FnCallExprModel>* _58634_m) {
	if ((((!(_1acb2621b_IsBuiltin((*(_58634_m)).get()._field_Func.ptr()))) && ((*(_58634_m)).get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _1acb20e80_IsSelf((*(_58634_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*(_58634_m)).get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_1a712ec25:;
				{
					jule::Ptr<_1acb138e0_StructSubIdentExprModel> _59025_ssie = (*(_58634_m)).get()._field_Expr.cast_ptr<_1acb138e0_StructSubIdentExprModel>(&__jule_any_type71);;
					{
						
						if (_1acb211e4_IsRef((*(_58634_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()) || (_1acca7633_Sptr(_59025_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
							_case_begin_1a7131221:;
							{
								goto _match_end_1a71309e5;
							}
						}
						else {
							_case_begin_1a7130a5b:;
							{
								if ((_1acca8821_Struct(_59025_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									if ((!(_59025_ssie.get()._field_Expr.get()._field_Lvalue))) {
										_1a48d539b_write(_self_.get()._field_oc, jule::Str("({ auto _wrap_copy = ", 21));
										_1a483a6a8_model(_self_, _59025_ssie.get()._field_Expr.get()._field_Model);
										_1a48d539b_write(_self_.get()._field_oc, jule::Str("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1a71309e5:;
					};
				}
			}
			_match_end_1a712ea16:;
		};
	};
	return false;;
}



inline void _1a482d019_pureFuncCall(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb1106e_FnCallExprModel>* _61037_m) {
	jule::Bool _61113_wrapped = _1a482cc94_isWrapped(_self_, _61037_m);;
	_1a482c711_modelForCall(_self_, (*(_61037_m)).get()._field_Expr);
	if ((!(_1acb2621b_IsBuiltin((*(_61037_m)).get()._field_Func.ptr())))) {
		if (((*(_61037_m)).get()._field_Func.get()._field_Decl.get()._field_Binded && ((*(_61037_m)).get()._field_Func.get()._field_Generics.len() > 0LL))) {
			if ((!(_1a49006b3_hasDirective(&((*(_61037_m)).get()._field_Func.get()._field_Decl.get()._field_Directives), jule::Str("cdef", 4))))) {
				_1a48d539b_write(_self_.get()._field_oc, jule::Str("<", 1));
				{
					auto expr = &((*(_61037_m)).get()._field_Func.get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a7135d08:;
					if (it != expr_end) {
						jule::I64 _61726_i = it - expr->begin();
						jule::Ptr<_1acca3420_InsGeneric> _61733_g = *it;
						{
							_1a48d539b_write(_self_.get()._field_oc, _1a48e8b2e_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _61733_g.get()._field_Kind));
							if ((((*(_61037_m)).get()._field_Func.get()._field_Generics.len() - _61726_i) > 1LL)) {
								_1a48d539b_write(_self_.get()._field_oc, jule::Str(", ", 2));
							};
						}
						_iter_next_1a7135d08:;
						++it;
						_61726_i++;
						goto _iter_begin_1a7135d08;
					}
					_iter_end_1a7135d08:;
				};
				_1a48d539b_write(_self_.get()._field_oc, jule::Str(">", 1));
			};
		};
	};
	_1a482c986_pushCallInf(_self_, _61037_m);
	jule::Bool _62817_locinfo = false;;
	if ((((!(_1acb2621b_IsBuiltin((*(_61037_m)).get()._field_Func.ptr()))) && ((*(_61037_m)).get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _1acb20e80_IsSelf((*(_61037_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*(_61037_m)).get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_1a71391e6:;
				{
					jule::Ptr<_1acb138e0_StructSubIdentExprModel> _63225_ssie = (*(_61037_m)).get()._field_Expr.cast_ptr<_1acb138e0_StructSubIdentExprModel>(&__jule_any_type71);;
					{
						
						if (_1acb211e4_IsRef((*(_61037_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr())) {
							_case_begin_1a713cabd:;
							{
								_1a482b853_possibleRefExpr(_self_, _63225_ssie.get()._field_Expr.get()._field_Model);
							}
						}
						else if ((_1acca7633_Sptr(_63225_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
							_case_begin_1a713a12b:;
							{
								_1a482b853_possibleRefExpr(_self_, _63225_ssie.get()._field_Expr.get()._field_Model);
								_1a48d539b_write(_self_.get()._field_oc, jule::Str(".ptr(", 5));
								if ((!(_207305560_Production))) {
									_1a48d539b_write(_self_.get()._field_oc, jule::Str("\"", 1));
									_1a48d75bd_locInfo(_self_.get()._field_oc, &((*(_61037_m)).get()._field_Token));
									_1a48d539b_write(_self_.get()._field_oc, jule::Str("\"", 1));
								};
								_1a48d539b_write(_self_.get()._field_oc, jule::Str(")", 1));
							}
						}
						else {
							_case_begin_1a713a0b5:;
							{
								if ((_1acca8821_Struct(_63225_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									{
										auto &_match_expr{ _63225_ssie.get()._field_Expr.get()._field_Model };
										
										if (_match_expr.type == &__jule_any_type8) {
											_case_begin_1a7139a54:;
											{
												jule::Ptr<_1abd1497c_Var> _64933_v = _63225_ssie.get()._field_Expr.get()._field_Model.cast_ptr<_1abd1497c_Var>(&__jule_any_type8);;
												if (_64933_v.get()._field_Reference) {
													goto _match_end_1a713ab32;
												};
												goto _case_begin_1a713ab87;
											}
										}
										else {
											_case_begin_1a713ab87:;
											{
												_1a48d539b_write(_self_.get()._field_oc, jule::Str("&", 1));
											}
										}
										_match_end_1a713ab32:;
									};
								};
								if (_61113_wrapped) {
									_1a48d539b_write(_self_.get()._field_oc, jule::Str("_wrap_copy", 10));
								} else {
									_1a483a6a8_model(_self_, _63225_ssie.get()._field_Expr.get()._field_Model);
								};
							}
						}
						_match_end_1a713a04e:;
					};
					if (((*(_61037_m)).get()._field_Args.len() > 0LL)) {
						_1a48d539b_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type70) {
				_case_begin_1a713925c:;
				{
					_1a482b853_possibleRefExpr(_self_, (*(_61037_m)).get()._field_Expr.cast_ptr<_1acb13109_TraitSubIdentExprModel>(&__jule_any_type70).get()._field_Expr);
					if ((!(_207305560_Production))) {
						_62817_locinfo=true;
					};
					if (((*(_61037_m)).get()._field_Args.len() > 0LL)) {
						_1a48d539b_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			_match_end_1a7138ed7:;
		};
	};
	_1a482c48b_args(_self_, _61037_m);
	if (_62817_locinfo) {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str(", \"", 3));
		_1a48d75bd_locInfo(_self_.get()._field_oc, &((*(_61037_m)).get()._field_Token));
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("\"", 1));
	};
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_61113_wrapped) {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("; })", 4));
	};
}



inline void _1a482d28e_coFuncCall(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb1106e_FnCallExprModel>* _69135_m) {
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a48d57ec_addIndent(_self_.get()._field_oc);
	jule::Str _69417_head = jule::Str("std::thread([", 13);;
	if (((*(_69135_m)).get()._field_Func.get()._field_Owner != nullptr)) {
		(_69417_head).append("_self_", 6);
		if (((*(_69135_m)).get()._field_Args.len() > 0LL)) {
			(_69417_head).append(", ", 2);
		};
	};
	{
		auto expr = &((*(_69135_m)).get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7146b4e:;
		if (it != expr_end) {
			jule::I64 _70113_i = it - expr->begin();
			jule::Any _70116_arg = *it;
			{
				if ((_70113_i > 0LL)) {
					(_69417_head).append(", ", 2);
				};
				{
					auto &_match_expr{ _70116_arg };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1a71476aa:;
						{
							jule::Ptr<_1abd1497c_Var> _70725_v = _70116_arg.cast_ptr<_1abd1497c_Var>(&__jule_any_type8);;
							_69417_head+=static__1a48441b7_var(_70725_v);
							goto _iter_next_1a7146b4e;
						}
					}
					_match_end_1a7147897:;
				};
				jule::Str _71117_name = (jule::Str("_co_arg_", 8) + _1ddea4ea3_Itoa(_70113_i));;
				_69417_head+=_71117_name;
				_1a48d5ba4_indent(_self_.get()._field_oc);
				_1a48d539b_write(_self_.get()._field_oc, _1a48e8b2e_kind(_self_.get()._field_oc.get()._field_tc.ptr(), (*(_69135_m)).get()._field_Func.get()._field_Params[_70113_i].get()._field_Kind));
				_1a48d539b_write(_self_.get()._field_oc, jule::Str(" ", 1));
				if ((*(_69135_m)).get()._field_Func.get()._field_Params[_70113_i].get()._field_Decl.get()._field_Reference) {
					_1a48d539b_write(_self_.get()._field_oc, jule::Str("&", 1));
				};
				_1a48d5621_writeR(_self_.get()._field_oc, &(_71117_name));
				_1a48d539b_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1a482b853_possibleRefExpr(_self_, _70116_arg);
				_1a48d539b_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				jule::Any _72317_argS = jule::Any(_71117_name, &__jule_any_type5);;
				(*(_69135_m)).get()._field_Args[_70113_i]=(*(((jule::Any*)((&(_72317_argS))))));
			}
			_iter_next_1a7146b4e:;
			++it;
			_70113_i++;
			goto _iter_begin_1a7146b4e;
		}
		_iter_end_1a7146b4e:;
	};
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d5621_writeR(_self_.get()._field_oc, &(_69417_head));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("](void) mutable -> void {\n", 26));
	_1a48d57ec_addIndent(_self_.get()._field_oc);
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a482d019_pureFuncCall(_self_, _69135_m);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a48d59c8_doneIndent(_self_.get()._field_oc);
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("}).detach();\n", 13));
	_1a48d59c8_doneIndent(_self_.get()._field_oc);
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a482d5ad_writeUseExpr(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb24d85_FnIns>* _74137_f, jule::Ptr<_1abd5dc4b_Data> _74152_d) {
	if ((_1acca905d_Tup(_74152_d.get()._field_Kind.ptr()) == nullptr)) {
		_1a482b853_possibleRefExpr(_self_, _74152_d.get()._field_Model);
		_1a48d539b_write(_self_.get()._field_oc, jule::Str(";", 1));
		return;;
	};
	jule::Ptr<_1acb14c98_TupleExprModel> _74717_tup = _74152_d.get()._field_Model.cast_ptr<_1acb14c98_TupleExprModel>(&__jule_any_type87);;
	_1a48eceda_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), _1acca905d_Tup((*(_74137_f)).get()._field_Result.ptr()));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("{", 1));
	{
		auto expr = &(_74717_tup.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a715293a:;
		if (it != expr_end) {
			jule::I64 _75013_i = it - expr->begin();
			jule::Ptr<_1abd5dc4b_Data> _75016_data = *it;
			{
				_1a48d539b_write(_self_.get()._field_oc, jule::Str(".__jule_result_arg", 18));
				_1a48d539b_write(_self_.get()._field_oc, _1ddea4ea3_Itoa(_75013_i));
				_1a48d539b_write(_self_.get()._field_oc, jule::Str("=", 1));
				_1a482b853_possibleRefExpr(_self_, _75016_data.get()._field_Model);
				if (((_74717_tup.get()._field_Datas.len() - _75013_i) > 1LL)) {
					_1a48d539b_write(_self_.get()._field_oc, jule::Str(", ", 2));
				};
			}
			_iter_next_1a715293a:;
			++it;
			_75013_i++;
			goto _iter_begin_1a715293a;
		}
		_iter_end_1a715293a:;
	};
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("};", 2));
}



inline void _1a482d833_funcCall(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb1106e_FnCallExprModel> _76232_m) {
	if (_76232_m.get()._field_IsCo) {
		_1a482d28e_coFuncCall(_self_, &(_76232_m));
		return;;
	};
	if (((_1acb2621b_IsBuiltin(_76232_m.get()._field_Func.ptr()) || (!(_76232_m.get()._field_Func.get()._field_Decl.get()._field_Exceptional))) || ((_76232_m.get()._field_Except != nullptr) && (_76232_m.get()._field_Except.get()._field_Stmts.len() == 0LL)))) {
		_1a482d019_pureFuncCall(_self_, &(_76232_m));
		return;;
	};
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1a48d57ec_addIndent(_self_.get()._field_oc);
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("auto except = ", 14));
	_1a482d019_pureFuncCall(_self_, &(_76232_m));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a48d5ba4_indent(_self_.get()._field_oc);
	if ((_76232_m.get()._field_Except != nullptr)) {
		if (((_76232_m.get()._field_Func.get()._field_Result == nullptr) || (!(_76232_m.get()._field_Assigned)))) {
			_1a48d539b_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) ", 18));
			_1a48259e5_scope(_self_.get()._field_oc.get()._field_sc, _76232_m.get()._field_Except);
			_1a48d539b_write(_self_.get()._field_oc, jule::Str("\n", 1));
		} else {
			jule::Bool _78821_forwarded = _1a483c37a_isForwarded(&(_76232_m.get()._field_Except));;
			_1a48d539b_write(_self_.get()._field_oc, jule::Str("(except.ok()) ? (except.result) : (", 35));
			if (_78821_forwarded) {
				_1a48d539b_write(_self_.get()._field_oc, jule::Str("{", 1));
			};
			jule::Any _79325_stmt = _76232_m.get()._field_Except.get()._field_Stmts[(_76232_m.get()._field_Except.get()._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _79325_stmt };
				
				if (_match_expr.type == &__jule_any_type24) {
					_case_begin_1a715b05e:;
					{
						_76232_m.get()._field_Except.get()._field_Stmts=_76232_m.get()._field_Except.get()._field_Stmts.slice(0LL, (_76232_m.get()._field_Except.get()._field_Stmts.len() - 1LL));
						_1a48d539b_write(_self_.get()._field_oc, jule::Str("{\n", 2));
						_1a48d57ec_addIndent(_self_.get()._field_oc);
						_1a4825770_scopeStmts(_self_.get()._field_oc.get()._field_sc, &(_76232_m.get()._field_Except));
						_1a48d539b_write(_self_.get()._field_oc, jule::Str("\n", 1));
						_1a48d5ba4_indent(_self_.get()._field_oc);
						_1a482d5ad_writeUseExpr(_self_, &(_76232_m.get()._field_Func), _79325_stmt.cast_ptr<_1abd5dc4b_Data>(&__jule_any_type24));
						_1a48d539b_write(_self_.get()._field_oc, jule::Str("\n", 1));
						_1a48d59c8_doneIndent(_self_.get()._field_oc);
						_1a48d5ba4_indent(_self_.get()._field_oc);
						_1a48d539b_write(_self_.get()._field_oc, jule::Str("}", 1));
					}
				}
				else {
					_case_begin_1a715bceb:;
					{
						_1a48259e5_scope(_self_.get()._field_oc.get()._field_sc, _76232_m.get()._field_Except);
					}
				}
				_match_end_1a715bc96:;
			};
			if (_78821_forwarded) {
				_1a48d539b_write(_self_.get()._field_oc, jule::Str(" ", 1));
				_1a483a92d_initExpr(_self_, _76232_m.get()._field_Func.get()._field_Result);
				_1a48d539b_write(_self_.get()._field_oc, jule::Str(";}", 2));
			};
			_1a48d539b_write(_self_.get()._field_oc, jule::Str(");\n", 3));
		};
		_1a48d59c8_doneIndent(_self_.get()._field_oc);
	} else {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1a48d75bd_locInfo(_self_.get()._field_oc, &(_76232_m.get()._field_Token));
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("\"));\n", 5));
		if ((!(_1acb22646_IsVoid(_76232_m.get()._field_Func.get()._field_Decl.ptr())))) {
			_1a48d5ba4_indent(_self_.get()._field_oc);
			_1a48d539b_write(_self_.get()._field_oc, jule::Str("(except.result);\n", 17));
		};
		_1a48d59c8_doneIndent(_self_.get()._field_oc);
	};
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1a482daa8_slice(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb11426_SliceExprModel> _83329_m) {
	if ((_83329_m.get()._field_Elems.len() == 0LL)) {
		_1a48d539b_write(_self_.get()._field_oc, _1a48e5d4b_asSlice(_self_.get()._field_oc.get()._field_tc.ptr(), _83329_m.get()._field_ElemKind));
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	_1a48d539b_write(_self_.get()._field_oc, _1a48e5d4b_asSlice(_self_.get()._field_oc.get()._field_tc.ptr(), _83329_m.get()._field_ElemKind));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("::make({", 8));
	_1a482c216_models(_self_, _83329_m.get()._field_Elems);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1a482dd2d_indexing(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb11899_IndexingExprModel> _84532_m) {
	_1a482b853_possibleRefExpr(_self_, _84532_m.get()._field_Expr.get()._field_Model);
	{
		
		if (_207305560_Production || (_1acca7897_Ptr(_84532_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_1acca8ce9_Map(_84532_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || _1a483c875_isExprComesFromBind(&(_84532_m.get()._field_Expr))) {
			_case_begin_1a7166ec1:;
			{
				_1a48d539b_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1a482b853_possibleRefExpr(_self_, _84532_m.get()._field_Index.get()._field_Model);
				_1a48d539b_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1a71675ed:;
			{
				_1a48d539b_write(_self_.get()._field_oc, jule::Str(".at(\"", 5));
				_1a48d75bd_locInfo(_self_.get()._field_oc, &(_84532_m.get()._field_Token));
				_1a48d539b_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				_1a482b853_possibleRefExpr(_self_, _84532_m.get()._field_Index.get()._field_Model);
				_1a48d539b_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1a7167598:;
	};
}



inline void _1a482e0a3_unsafeIndexing(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acd79958_UnsafeIndexingExprModel> _86538_m) {
	_1a482b853_possibleRefExpr(_self_, _86538_m.get()._field_Node.get()._field_Expr.get()._field_Model);
	{
		
		if (_207305560_Production || (_1acca7897_Ptr(_86538_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_1acca8ce9_Map(_86538_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7169e4c:;
			{
				_1a48d539b_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1a482b853_possibleRefExpr(_self_, _86538_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1a48d539b_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1a716b459:;
			{
				_1a48d539b_write(_self_.get()._field_oc, jule::Str(".__at(", 6));
				_1a482b853_possibleRefExpr(_self_, _86538_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1a48d539b_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1a716b3e3:;
	};
}



inline void _1a482e328_anonFunc(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb11c51_AnonFnExprModel> _88232_m) {
	_1a48d539b_write(_self_.get()._field_oc, _1a48e8821_func(_self_.get()._field_oc.get()._field_tc.ptr(), _88232_m.get()._field_Func));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("([=]", 4));
	_1a48dc3c5_paramsIns(_self_.get()._field_oc, &(_88232_m.get()._field_Func.get()._field_Params));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(" mutable -> ", 12));
	_1a48e8205_funcInsResult(_self_.get()._field_oc.get()._field_tc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_88232_m.get()._field_Func));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1a4825c6a_funcScope(_self_.get()._field_oc.get()._field_sc, _88232_m.get()._field_Func);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a482e59d_mapExpr(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb1257b_MapExprModel> _89331_m) {
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("jule::Map<", 10));
	_1a48d539b_write(_self_.get()._field_oc, _1a48e8b2e_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _89331_m.get()._field_KeyKind));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1a48d539b_write(_self_.get()._field_oc, _1a48e8b2e_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _89331_m.get()._field_ValKind));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(">({", 3));
	if ((_89331_m.get()._field_Entries.len() > 0LL)) {
		{
			auto expr = &(_89331_m.get()._field_Entries);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a717452d:;
			if (it != expr_end) {
				jule::I64 _90018_i = it - expr->begin();
				jule::Ptr<_1acb12108_KeyValPairExprModel> _90025_pair = *it;
				{
					_1a48d539b_write(_self_.get()._field_oc, jule::Str("{", 1));
					_1a482b853_possibleRefExpr(_self_, _90025_pair.get()._field_Key);
					_1a48d539b_write(_self_.get()._field_oc, jule::Str(",", 1));
					_1a482b853_possibleRefExpr(_self_, _90025_pair.get()._field_Val);
					_1a48d539b_write(_self_.get()._field_oc, jule::Str("}", 1));
					if (((_89331_m.get()._field_Entries.len() - _90018_i) > 1LL)) {
						_1a48d539b_write(_self_.get()._field_oc, jule::Str(",", 1));
					};
				}
				_iter_next_1a717452d:;
				++it;
				_90018_i++;
				goto _iter_begin_1a717452d;
			}
			_iter_end_1a717452d:;
		};
	};
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1a482e823_slicing(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb12aba_SlicingExprModel> _91431_m) {
	_1a482b853_possibleRefExpr(_self_, _91431_m.get()._field_Expr);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(".slice(", 7));
	if ((!(_207305560_Production))) {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1a48d75bd_locInfo(_self_.get()._field_oc, &(_91431_m.get()._field_Token));
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("\", ", 3));
	};
	_1a482b853_possibleRefExpr(_self_, _91431_m.get()._field_Left);
	if ((_91431_m.get()._field_Right != nullptr)) {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1a482b853_possibleRefExpr(_self_, _91431_m.get()._field_Right);
	};
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a482ea98_traitSub(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb13109_TraitSubIdentExprModel> _93032_m) {
	_1a48d539b_write(_self_.get()._field_oc, static__1a4843392_traitDecl(_93032_m.get()._field_Trt));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("_mptr_data", 10));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("[(", 2));
	_1a482b853_possibleRefExpr(_self_, _93032_m.get()._field_Expr);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(").type_offset].", 15));
	_1a48d539b_write(_self_.get()._field_oc, static__1a4842d53_func(&(_93032_m.get()._field_Method)));
}



inline void _1a482ed1d_structureSub(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb138e0_StructSubIdentExprModel> _93936_m) {
	_1a482b853_possibleRefExpr(_self_, _93936_m.get()._field_Expr.get()._field_Model);
	if ((_93936_m.get()._field_Field == nullptr)) {
		return;;
	};
	if ((_1acca7897_Ptr(_93936_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else if ((_1acca7633_Sptr(_93936_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str(".get(", 5));
		if ((!(_207305560_Production))) {
			_1a48d539b_write(_self_.get()._field_oc, jule::Str("\"", 1));
			_1a48d75bd_locInfo(_self_.get()._field_oc, &(_93936_m.get()._field_Token));
			_1a48d539b_write(_self_.get()._field_oc, jule::Str("\"", 1));
		};
		_1a48d539b_write(_self_.get()._field_oc, jule::Str(").", 2));
	} else {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_1a48d539b_write(_self_.get()._field_oc, static__1a4843e20_field(&(_93936_m.get()._field_Field.get()._field_Decl)));
}



inline void _1a4830093_commonIdent(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb1443a_CommonIdentExprModel> _96031_m) {
	_1a48d5621_writeR(_self_.get()._field_oc, &(_96031_m.get()._field_Ident));
}



inline void _1a4830318_commonSub(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb1499b_CommonSubIdentExprModel> _96433_m) {
	_1a482b853_possibleRefExpr(_self_, _96433_m.get()._field_Expr);
	{
		
		if ((_1acca7897_Ptr(_96433_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1a7181e20:;
			{
				_1a48d539b_write(_self_.get()._field_oc, jule::Str("->", 2));
			}
		}
		else if ((_1acca7633_Sptr(_96433_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1a71824d6:;
			{
				_1a48d539b_write(_self_.get()._field_oc, jule::Str(".get(", 5));
				if ((!(_207305560_Production))) {
					_1a48d539b_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1a48d75bd_locInfo(_self_.get()._field_oc, &(_96433_m.get()._field_Token));
					_1a48d539b_write(_self_.get()._field_oc, jule::Str("\"", 1));
				};
				_1a48d539b_write(_self_.get()._field_oc, jule::Str(").", 2));
			}
		}
		else {
			_case_begin_1a7182470:;
			{
				_1a48d539b_write(_self_.get()._field_oc, jule::Str(".", 1));
			}
		}
		_match_end_1a7182409:;
	};
	_1a48d5621_writeR(_self_.get()._field_oc, &(_96433_m.get()._field_Ident));
}



inline void _1a483058d_array(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb1414e_ArrayExprModel> _98329_m) {
	_1a48d539b_write(_self_.get()._field_oc, _1a48e74ac_array(_self_.get()._field_oc.get()._field_tc.ptr(), _98329_m.get()._field_Kind));
	if ((_98329_m.get()._field_Elems.len() == 0LL)) {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	if (((_98329_m.get()._field_Elems.len() == 2LL) && (_98329_m.get()._field_Elems[1LL] == nullptr))) {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1a482b853_possibleRefExpr(_self_, _98329_m.get()._field_Elems[0LL]);
		_1a48d539b_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("({", 2));
	_1a482c216_models(_self_, _98329_m.get()._field_Elems);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("})", 2));
	return;;
}



inline void _1a4830813_funcInsCommon(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb24d85_FnIns> _100637_m) {
	_1a48d539b_write(_self_.get()._field_oc, _1a48e8821_func(_self_.get()._field_oc.get()._field_tc.ptr(), _100637_m));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a4830a88_funcIns(_self_, _100637_m);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a4830a88_funcIns(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb24d85_FnIns> _101331_m) {
	if (((_101331_m.get()._field_Decl != nullptr) && _101331_m.get()._field_Decl.get()._field_Binded)) {
		jule::Ptr<_1acaa47b5_Directive> _101517_d = _1a490032d_findDirective(&(_101331_m.get()._field_Decl.get()._field_Directives), jule::Str("namespace", 9));;
		if ((_101517_d != nullptr)) {
			_1a48d539b_write(_self_.get()._field_oc, _1a48e16e8_concatAllParts(_101517_d.get()._field_Args));
			_1a48d539b_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1a48d539b_write(_self_.get()._field_oc, static__1a48430ea_funcIns(&(_101331_m)));
}



inline void _1a4830d0d_tuple(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb14c98_TupleExprModel> _102429_m) {
	{
		auto expr = &(_102429_m.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a718d25b:;
		if (it != expr_end) {
			jule::I64 _102514_i = it - expr->begin();
			jule::Ptr<_1abd5dc4b_Data> _102521_d = *it;
			{
				_1a482b853_possibleRefExpr(_self_, _102521_d.get()._field_Model);
				_1a48d539b_write(_self_.get()._field_oc, jule::Str(";", 1));
				if (((_102429_m.get()._field_Datas.len() - _102514_i) > 1LL)) {
					_1a48d539b_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1a48d5ba4_indent(_self_.get()._field_oc);
				};
			}
			_iter_next_1a718d25b:;
			++it;
			_102514_i++;
			goto _iter_begin_1a718d25b;
		}
		_iter_end_1a718d25b:;
	};
}



inline void _1a4831083_newCall(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb15c66_BuiltinNewCallExprModel> _103531_m) {
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1a48d539b_write(_self_.get()._field_oc, _1a48e8b2e_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _103531_m.get()._field_Kind));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(">(", 2));
	if ((_103531_m.get()._field_Init != nullptr)) {
		_1a482b853_possibleRefExpr(_self_, _103531_m.get()._field_Init);
	};
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a4831308_outCall(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb15172_BuiltinOutCallExprModel> _104531_m) {
	if ((_104531_m.get()._field_Debug && _207305560_Production)) {
		return;;
	};
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("jule::out(", 10));
	_1a482b853_possibleRefExpr(_self_, _104531_m.get()._field_Expr);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a483157d_outlnCall(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb1555c_BuiltinOutlnCallExprModel> _105433_m) {
	if ((_105433_m.get()._field_Debug && _207305560_Production)) {
		return;;
	};
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1a482b853_possibleRefExpr(_self_, _105433_m.get()._field_Expr);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a4836660_panicCall(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb16151_BuiltinPanicCallExprModel> _106333_m) {
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("jule::panic(", 12));
	_1a482b853_possibleRefExpr(_self_, _106333_m.get()._field_Expr);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(" + jule::Str(\"\\nlocation: ", 26));
	_1a48d75bd_locInfo(_self_.get()._field_oc, &(_106333_m.get()._field_Token));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1a48368d5_assertCall(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb16607_BuiltinAssertCallExprModel> _107134_m) {
	if (_207305560_Production) {
		return;;
	};
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("if (!(", 6));
	_1a482b853_possibleRefExpr(_self_, _107134_m.get()._field_Expr);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(")) jule::panic(jule::Str(", 25));
	_1a48d539b_write(_self_.get()._field_oc, _1a483b676_cstrLit(static_cast<jule::Slice<jule::U8>>(_107134_m.get()._field_Log)));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(") + jule::Str(\"\\nlocation: ", 27));
	_1a48d75bd_locInfo(_self_.get()._field_oc, &(_107134_m.get()._field_Token));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1a4836b5a_errorCall(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb1d345_BuiltinErrorCallExprModel> _108433_m) {
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_1acb22646_IsVoid(_108433_m.get()._field_Func.get()._field_Decl.ptr())) {
		{
			auto &_match_expr{ _108433_m.get()._field_Err.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1a7199ab4:;
				{
					jule::Ptr<_1abd1497c_Var> _108921_v = _108433_m.get()._field_Err.get()._field_Model.cast_ptr<_1abd1497c_Var>(&__jule_any_type8);;
					if (_108921_v.get()._field_Ident.equal("error", 5)) {
						_1a48d539b_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(except.error)", 35));
						return;;
					};
				}
			}
			_match_end_1a7199a5e:;
		};
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(jule::Any(", 32));
	} else {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1a48ed628_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_108433_m.get()._field_Func.get()._field_Result));
		{
			auto &_match_expr{ _108433_m.get()._field_Err.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1a719c611:;
				{
					jule::Ptr<_1abd1497c_Var> _110121_v = _108433_m.get()._field_Err.get()._field_Model.cast_ptr<_1abd1497c_Var>(&__jule_any_type8);;
					if (_110121_v.get()._field_Ident.equal("error", 5)) {
						_1a48d539b_write(_self_.get()._field_oc, jule::Str(">(except.error)", 15));
						return;;
					};
				}
			}
			_match_end_1a719c534:;
		};
		_1a48d539b_write(_self_.get()._field_oc, jule::Str(">(jule::Any(", 12));
	};
	_1a482b853_possibleRefExpr(_self_, _108433_m.get()._field_Err.get()._field_Model);
	jule::I64 _111013_i = _1a48d62c0_pushAnyType(_self_.get()._field_oc, _108433_m.get()._field_Err.get()._field_Kind);;
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(", &__jule_any_type", 18));
	_1a48d539b_write(_self_.get()._field_oc, _1ddea4ea3_Itoa(_111013_i));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1a4836dd0_copyCall(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb1ce5a_BuiltinCopyCallExprModel> _111632_m) {
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("jule::copy((", 12));
	_1a482b853_possibleRefExpr(_self_, _111632_m.get()._field_Dest.get()._field_Model);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1acca73be_Prim(_111632_m.get()._field_Dest.get()._field_Kind.ptr()) != nullptr)) {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(", (", 3));
	_1a482b853_possibleRefExpr(_self_, _111632_m.get()._field_Src.get()._field_Model);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1acca73be_Prim(_111632_m.get()._field_Src.get()._field_Kind.ptr()) != nullptr)) {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a4837155_lenCall(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb172b7_BuiltinLenCallExprModel> _113231_m) {
	_1a482b853_possibleRefExpr(_self_, _113231_m.get()._field_Expr.get()._field_Model);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(".len()", 6));
}



inline void _1a48373ca_capCall(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb175d6_BuiltinCapCallExprModel> _113731_m) {
	_1a482b853_possibleRefExpr(_self_, _113731_m.get()._field_Expr.get()._field_Model);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(".cap()", 6));
}



inline void _1a4837650_deleteCall(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb1cb19_BuiltinDeleteCallExprModel> _114234_m) {
	_1a482b853_possibleRefExpr(_self_, _114234_m.get()._field_Dest.get()._field_Model);
	if ((_114234_m.get()._field_Key != nullptr)) {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str(".del(", 5));
		_1a482b853_possibleRefExpr(_self_, _114234_m.get()._field_Key.get()._field_Model);
		_1a48d539b_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str(".clear()", 8));
	};
}



inline void _1a48378c5_makeCallSlice(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb16aad_BuiltinMakeCallExprModel>* _115338_m) {
	jule::Ptr<_1accb15b5_Slc> _115417_slice = _1acca8348_Slc((*(_115338_m)).get()._field_Kind.ptr());;
	_1a48d539b_write(_self_.get()._field_oc, _1a48e8b2e_kind(_self_.get()._field_oc.get()._field_tc.ptr(), (*(_115338_m)).get()._field_Kind));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1a482b853_possibleRefExpr(_self_, (*(_115338_m)).get()._field_Len);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(", ", 2));
	if (((*(_115338_m)).get()._field_Cap != nullptr)) {
		_1a482b853_possibleRefExpr(_self_, (*(_115338_m)).get()._field_Cap);
	} else {
		_1a482b853_possibleRefExpr(_self_, (*(_115338_m)).get()._field_Len);
	};
	if (_1a490095a_shouldInitialized(&(_115417_slice.get()._field_Elem))) {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1a483a92d_initExpr(_self_, _115417_slice.get()._field_Elem);
	};
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a4837b4a_makeCallStr(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb16aad_BuiltinMakeCallExprModel>* _117136_m) {
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1a482b853_possibleRefExpr(_self_, (*(_117136_m)).get()._field_Len);
	if (((*(_117136_m)).get()._field_Cap != nullptr)) {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1a482b853_possibleRefExpr(_self_, (*(_117136_m)).get()._field_Cap);
	};
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a4837dc0_makeCall(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb16aad_BuiltinMakeCallExprModel> _118232_m) {
	if ((_1acca8348_Slc(_118232_m.get()._field_Kind.ptr()) != nullptr)) {
		_1a48378c5_makeCallSlice(_self_, &(_118232_m));
		return;;
	};
	_1a4837b4a_makeCallStr(_self_, &(_118232_m));
}



inline void _1a4838145_pushToSlice(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acd79cdd_PushToSliceExprModel> _119035_m) {
	;
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("{ ", 2));
	_1a48d539b_write(_self_.get()._field_oc, _1a48e5d4b_asSlice(_self_.get()._field_oc.get()._field_tc.ptr(), _119035_m.get()._field_Elems.get()._field_ElemKind));
	jule::Bool _119817_ptr = false;;
	{
		auto &_match_expr{ _119035_m.get()._field_Dest };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1a71ae942:;
			{
				jule::Ptr<_1acb0e5ab_UnaryExprModel> _120221_u = _119035_m.get()._field_Dest.cast_ptr<_1acb0e5ab_UnaryExprModel>(&__jule_any_type74);;
				if ((_1acca7897_Ptr(_120221_u.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
					_1a48d539b_write(_self_.get()._field_oc, jule::Str(" *__jule_push_dest = ", 21));
					_1a482b853_possibleRefExpr(_self_, _120221_u.get()._field_Expr.get()._field_Model);
					_1a48d539b_write(_self_.get()._field_oc, jule::Str("; ", 2));
					_119817_ptr=true;
					goto _match_end_1a71b0de9;
				};
				goto _case_begin_1a71b0e4e;
			}
		}
		else {
			_case_begin_1a71b0e4e:;
			{
				_1a48d539b_write(_self_.get()._field_oc, jule::Str(" &__jule_push_dest = ", 21));
				_1a482b853_possibleRefExpr(_self_, _119035_m.get()._field_Dest);
				_1a48d539b_write(_self_.get()._field_oc, jule::Str("; ", 2));
			}
		}
		_match_end_1a71b0de9:;
	};
	if ((_119035_m.get()._field_Elems.get()._field_Elems.len() == 1LL)) {
		if (_119817_ptr) {
			_1a48d539b_write(_self_.get()._field_oc, jule::Str("__jule_push_dest->push(", 23));
		} else {
			_1a48d539b_write(_self_.get()._field_oc, jule::Str("__jule_push_dest.push(", 22));
		};
		_1a482b853_possibleRefExpr(_self_, _119035_m.get()._field_Elems.get()._field_Elems[0LL]);
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("); }", 4));
		return;;
	};
	if (_119817_ptr) {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("__jule_push_dest->alloc_for_append(", 35));
	} else {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("__jule_push_dest.alloc_for_append(", 34));
	};
	_1a48d539b_write(_self_.get()._field_oc, _1ddea4ea3_Itoa(static_cast<jule::I64>(_119035_m.get()._field_Elems.get()._field_Elems.len())));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("); ", 3));
	{
		auto expr = &(_119035_m.get()._field_Elems.get()._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a71b6e22:;
		if (it != expr_end) {
			jule::Any _123621_e = *it;
			{
				_1a48d539b_write(_self_.get()._field_oc, jule::Str("__jule_push_dest", 16));
				if (_119817_ptr) {
					_1a48d539b_write(_self_.get()._field_oc, jule::Str("->__push(", 9));
				} else {
					_1a48d539b_write(_self_.get()._field_oc, jule::Str(".__push(", 8));
				};
				_1a482b853_possibleRefExpr(_self_, _123621_e);
				_1a48d539b_write(_self_.get()._field_oc, jule::Str("); ", 3));
			}
			_iter_next_1a71b6e22:;
			++it;
			goto _iter_begin_1a71b6e22;
		}
		_iter_end_1a71b6e22:;
	};
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a48383ba_appendToSlice(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acd7a195_AppendToSliceExprModel> _125037_m) {
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a482b853_possibleRefExpr(_self_, _125037_m.get()._field_Dest);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(").append(", 9));
	_1a482b853_possibleRefExpr(_self_, _125037_m.get()._field_Slice);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _1a4838640_appendCall(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb16e98_BuiltinAppendCallExprModel> _125834_m) {
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("jule::append(", 13));
	_1a482b853_possibleRefExpr(_self_, _125834_m.get()._field_Dest);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1a482b853_possibleRefExpr(_self_, _125834_m.get()._field_Elements);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a48388b5_cloneCall(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb1587b_BuiltinCloneCallExprModel> _126633_m) {
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("jule::clone(", 12));
	_1a482b853_possibleRefExpr(_self_, _126633_m.get()._field_Expr);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a4838b3a_sizeof(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb1d642_SizeofExprModel> _127230_m) {
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("sizeof(", 7));
	_1a482b853_possibleRefExpr(_self_, _127230_m.get()._field_Expr);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a4838db0_alignof(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb1d92d_AlignofExprModel> _127831_m) {
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("alignof(", 8));
	_1a482b853_possibleRefExpr(_self_, _127831_m.get()._field_Expr);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline jule::Str _1a48391bd_runeLit(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb1dc19_RuneExprModel> _128427_m) {
	if ((_128427_m.get()._field_Code <= 127LL)) {
		jule::Str _128621_b = _1a483b0b0_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>(_128427_m.get()._field_Code)));;
		if (_128621_b.equal("'", 1)) {
			_128621_b=jule::Str("\\'", 2);
		};
		return ((jule::Str("'", 1) + _128621_b) + jule::Str("'", 1));;
	};
	return _1a483bc2b_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_128427_m.get()._field_Code)));;
}



inline void _1a4839443_structureStatic(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb13c86_StructStaticIdentExprModel> _129539_m) {
	_1a48d539b_write(_self_.get()._field_oc, static__1a48430ea_funcIns(&(_129539_m.get()._field_Method)));
}



inline void _1a48396b8_integratedToStr(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb1e027_IntegratedToStrExprModel> _129939_m) {
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("jule::to_str(", 13));
	_1a482b853_possibleRefExpr(_self_, _129939_m.get()._field_Expr);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a483993d_backendEmit(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb1e3e0_BackendEmitExprModel> _130535_m) {
	if ((_130535_m.get()._field_Exprs.len() == 0LL)) {
		_1a48d5621_writeR(_self_.get()._field_oc, &(_130535_m.get()._field_Code));
		return;;
	};
	jule::I64 _131013_n = _self_.get()._field_oc.get()._field_Obj.len();;
	jule::Slice<jule::Any> _131117_args = jule::Slice<jule::Any>::alloc(_130535_m.get()._field_Exprs.len(), _130535_m.get()._field_Exprs.len());;
	{
		auto expr = &(_130535_m.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a71c3967:;
		if (it != expr_end) {
			jule::I64 _131214_i = it - expr->begin();
			jule::Any _131221_expr = *it;
			{
				_1a482b853_possibleRefExpr(_self_, _131221_expr);
				_131117_args[_131214_i]=jule::Any(_self_.get()._field_oc.get()._field_Obj.slice(_131013_n), &__jule_any_type5);
				_self_.get()._field_oc.get()._field_Obj=_self_.get()._field_oc.get()._field_Obj.slice(0LL, _131013_n);
			}
			_iter_next_1a71c3967:;
			++it;
			_131214_i++;
			goto _iter_begin_1a71c3967;
		}
		_iter_end_1a71c3967:;
	};
	_1a48d539b_write(_self_.get()._field_oc, _1acd67c21_Format(_130535_m.get()._field_Code, _131117_args));
}



inline void _1a4839bb3_free(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acb1e6cb_FreeExprModel> _132028_m) {
	_1a482b853_possibleRefExpr(_self_, _132028_m.get()._field_Expr);
	if (_207304dbc_RC) {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str(".dealloc()", 10));
		return;;
	};
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(".__free()", 9));
}



inline void _1a4839e38_mutSlicing(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acd7a6d4_MutSlicingExprModel> _132934_m) {
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a482b853_possibleRefExpr(_self_, _132934_m.get()._field_Expr);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(").mut_slice(", 12));
	if ((!(_207305560_Production))) {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1a48d75bd_locInfo(_self_.get()._field_oc, &(_132934_m.get()._field_Token));
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("\", ", 3));
	};
	_1a482b853_possibleRefExpr(_self_, _132934_m.get()._field_Left);
	if ((_132934_m.get()._field_Right != nullptr)) {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1a482b853_possibleRefExpr(_self_, _132934_m.get()._field_Right);
	};
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _1a483a1ad_strInsertBegin(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acd7abbd_StrInsertBeginExprModel> _134638_m) {
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a482b853_possibleRefExpr(_self_, _134638_m.get()._field_Dest);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(").buffer.insert(0, (", 20));
	_1a482b853_possibleRefExpr(_self_, _134638_m.get()._field_Expr);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("));", 3));
}



inline void _1a483a433_strComp(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acd78e1e_StrCompExprModel> _135431_m) {
	if (_135431_m.get()._field_NotEq) {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("(!", 2));
	};
	jule::Slice<jule::U8> _135813_bytes = static_cast<jule::Slice<jule::U8>>(_1ddeb6b52_ReadStr(_135431_m.get()._field_Right.ptr()));;
	_1a482b853_possibleRefExpr(_self_, _135431_m.get()._field_Left);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(".equal(", 7));
	_1a48d539b_write(_self_.get()._field_oc, _1a483b676_cstrLit(_135813_bytes));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1a48d539b_write(_self_.get()._field_oc, _1ddea4ea3_Itoa(static_cast<jule::I64>(_135813_bytes.len())));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_135431_m.get()._field_NotEq) {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1a483a6a8_model(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Any _137029_m) {
	{
		auto &_match_expr{ _137029_m };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1a71d61e9:;
			{
				_1a48d539b_write(_self_.get()._field_oc, _137029_m.cast<jule::Str>(&__jule_any_type5));
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1a71d64c4:;
			{
				_1a48d539b_write(_self_.get()._field_oc, _1a48e8b2e_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _137029_m.cast_ptr<_1acca4ba2_TypeKind>(&__jule_any_type89)));
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a71d653a:;
			{
				_1a4829ea0_constant(_self_, _137029_m.cast_ptr<_1ddeb4b1c_Const>(&__jule_any_type19));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a71d65a1:;
			{
				_1a482aad8_var(_self_, _137029_m.cast_ptr<_1abd1497c_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1a71d6617:;
			{
				_1a482ad5d_structureIns(_self_, _137029_m.cast_ptr<_1acb09d37_StructIns>(&__jule_any_type9));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a71d7085:;
			{
				_1a4830813_funcInsCommon(_self_, _137029_m.cast_ptr<_1acb24d85_FnIns>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1a71d70eb:;
			{
				_1a482a5dd_unsafeBinary(_self_, _137029_m.cast_ptr<_1acd795c3_UnsafeBinopExprModel>(&__jule_any_type129).get()._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1a71d7162:;
			{
				_1a482a863_binary(_self_, _137029_m.cast_ptr<_1acb0e204_BinopExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1a71d71c8:;
			{
				_1a482b0d3_unary(_self_, _137029_m.cast_ptr<_1acb0e5ab_UnaryExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1a71d723e:;
			{
				_1a482b358_structureLit(_self_, _137029_m.cast_ptr<_1acb0ed5e_StructLitExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1a71d72a5:;
			{
				_1a482b5cd_allocStructure(_self_, _137029_m.cast_ptr<_1acb1016c_AllocStructLitExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1a71d731b:;
			{
				_1a482be91_casting(_self_, _137029_m.cast_ptr<_1acb106bc_CastingExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1a71d7382:;
			{
				_1a482d833_funcCall(_self_, _137029_m.cast_ptr<_1acb1106e_FnCallExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1a71d73e8:;
			{
				_1a482daa8_slice(_self_, _137029_m.cast_ptr<_1acb11426_SliceExprModel>(&__jule_any_type82));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1a71d745e:;
			{
				_1a483058d_array(_self_, _137029_m.cast_ptr<_1acb1414e_ArrayExprModel>(&__jule_any_type90));
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1a71d74c5:;
			{
				_1a482e0a3_unsafeIndexing(_self_, _137029_m.cast_ptr<_1acd79958_UnsafeIndexingExprModel>(&__jule_any_type130));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1a71d753b:;
			{
				_1a482dd2d_indexing(_self_, _137029_m.cast_ptr<_1acb11899_IndexingExprModel>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1a71d75b3:;
			{
				_1a482e328_anonFunc(_self_, _137029_m.cast_ptr<_1acb11c51_AnonFnExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1a71d763a:;
			{
				_1a482e59d_mapExpr(_self_, _137029_m.cast_ptr<_1acb1257b_MapExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1a71d76b2:;
			{
				_1a482e823_slicing(_self_, _137029_m.cast_ptr<_1acb12aba_SlicingExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1a71d7739:;
			{
				_1a482ea98_traitSub(_self_, _137029_m.cast_ptr<_1acb13109_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1a71d77b1:;
			{
				_1a482ed1d_structureSub(_self_, _137029_m.cast_ptr<_1acb138e0_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1a71d7838:;
			{
				_1a4830093_commonIdent(_self_, _137029_m.cast_ptr<_1acb1443a_CommonIdentExprModel>(&__jule_any_type72));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1a71d78b0:;
			{
				_1a4830318_commonSub(_self_, _137029_m.cast_ptr<_1acb1499b_CommonSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1a71d7937:;
			{
				_1a4830d0d_tuple(_self_, _137029_m.cast_ptr<_1acb14c98_TupleExprModel>(&__jule_any_type87));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1a71d79ae:;
			{
				_1a4831308_outCall(_self_, _137029_m.cast_ptr<_1acb15172_BuiltinOutCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1a71d7a36:;
			{
				_1a483157d_outlnCall(_self_, _137029_m.cast_ptr<_1acb1555c_BuiltinOutlnCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1a71d7aad:;
			{
				_1a4831083_newCall(_self_, _137029_m.cast_ptr<_1acb15c66_BuiltinNewCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1a71d7b35:;
			{
				_1a4836660_panicCall(_self_, _137029_m.cast_ptr<_1acb16151_BuiltinPanicCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1a71d7bac:;
			{
				_1a48368d5_assertCall(_self_, _137029_m.cast_ptr<_1acb16607_BuiltinAssertCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1a71d7c34:;
			{
				_1a4836b5a_errorCall(_self_, _137029_m.cast_ptr<_1acb1d345_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1a71d7cab:;
			{
				_1a4837dc0_makeCall(_self_, _137029_m.cast_ptr<_1acb16aad_BuiltinMakeCallExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1a71d7d33:;
			{
				_1a4838640_appendCall(_self_, _137029_m.cast_ptr<_1acb16e98_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1a71d7daa:;
			{
				_1a48388b5_cloneCall(_self_, _137029_m.cast_ptr<_1acb1587b_BuiltinCloneCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1a71d7e32:;
			{
				_1a4836dd0_copyCall(_self_, _137029_m.cast_ptr<_1acb1ce5a_BuiltinCopyCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1a71d7ea9:;
			{
				_1a4837155_lenCall(_self_, _137029_m.cast_ptr<_1acb172b7_BuiltinLenCallExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1a71d8031:;
			{
				_1a48373ca_capCall(_self_, _137029_m.cast_ptr<_1acb175d6_BuiltinCapCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1a71d80a8:;
			{
				_1a4837650_deleteCall(_self_, _137029_m.cast_ptr<_1acb1cb19_BuiltinDeleteCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1a71d8130:;
			{
				_1a4838b3a_sizeof(_self_, _137029_m.cast_ptr<_1acb1d642_SizeofExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1a71d81a7:;
			{
				_1a4838db0_alignof(_self_, _137029_m.cast_ptr<_1acb1d92d_AlignofExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1a71d822e:;
			{
				_1a48d539b_write(_self_.get()._field_oc, _1a48391bd_runeLit(_self_, _137029_m.cast_ptr<_1acb1dc19_RuneExprModel>(&__jule_any_type88)));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1a71d82a6:;
			{
				_1a4839443_structureStatic(_self_, _137029_m.cast_ptr<_1acb13c86_StructStaticIdentExprModel>(&__jule_any_type101));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1a71d832d:;
			{
				_1a48396b8_integratedToStr(_self_, _137029_m.cast_ptr<_1acb1e027_IntegratedToStrExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1a71d83a5:;
			{
				_1a483993d_backendEmit(_self_, _137029_m.cast_ptr<_1acb1e3e0_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1a71d842c:;
			{
				_1a4839bb3_free(_self_, _137029_m.cast_ptr<_1acb1e6cb_FreeExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1a71d84a4:;
			{
				_1a4839e38_mutSlicing(_self_, _137029_m.cast_ptr<_1acd7a6d4_MutSlicingExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1a71d852b:;
			{
				_1a483a1ad_strInsertBegin(_self_, _137029_m.cast_ptr<_1acd7abbd_StrInsertBeginExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1a71d85a3:;
			{
				_1a483a433_strComp(_self_, _137029_m.cast_ptr<_1acd78e1e_StrCompExprModel>(&__jule_any_type128));
			}
		}
		else {
			_case_begin_1a71d6370:;
			{
				_1a48d539b_write(_self_.get()._field_oc, jule::Str("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1a71d6293:;
	};
}



inline void _1a483a92d_initExpr(jule::Ptr<_1a4828894_exprCoder> _self_, jule::Ptr<_1acca4ba2_TypeKind> _147332_t) {
	if (_1acca691d_NilCompatible(_147332_t.ptr())) {
		if ((_1acca7897_Ptr(_147332_t.ptr()) != nullptr)) {
			_1a48d539b_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
		} else {
			_1a48d539b_write(_self_.get()._field_oc, _1a48e8b2e_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _147332_t));
			_1a48d539b_write(_self_.get()._field_oc, jule::Str("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1accb21ba_Tuple> _148317_tup = _1acca905d_Tup(_147332_t.ptr());;
	if ((_148317_tup != nullptr)) {
		_1a48eceda_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), _148317_tup);
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("{", 1));
		{
			auto expr = &(_148317_tup.get()._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a7201720:;
			if (it != expr_end) {
				jule::I64 _148718_i = it - expr->begin();
				jule::Ptr<_1acca4ba2_TypeKind> _148725_tt = *it;
				{
					if ((!(_1a490095a_shouldInitialized(&(_148725_tt))))) {
						goto _iter_next_1a7201720;
					};
					_1a48d539b_write(_self_.get()._field_oc, jule::Str(".__jule_result_arg", 18));
					_1a48d539b_write(_self_.get()._field_oc, _1ddea4ea3_Itoa(_148718_i));
					_1a48d539b_write(_self_.get()._field_oc, jule::Str("=", 1));
					_1a483a92d_initExpr(_self_, _148725_tt);
					if (((_148317_tup.get()._field_Types.len() - _148718_i) > 1LL)) {
						_1a48d539b_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
				_iter_next_1a7201720:;
				++it;
				_148718_i++;
				goto _iter_begin_1a7201720;
			}
			_iter_end_1a7201720:;
		};
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("}", 1));
		return;;
	};
	jule::Ptr<_1acb36b88_Enum> _150217_enm = _1acca7b0b_Enum(_147332_t.ptr());;
	if ((_150217_enm != nullptr)) {
		_1a483a6a8_model(_self_, _150217_enm.get()._field_Items[0LL].get()._field_Value.get()._field_Data.get()._field_Model);
		return;;
	};
	jule::Ptr<_1accac407_Prim> _150713_prim = _1acca73be_Prim(_147332_t.ptr());;
	if ((_150713_prim != nullptr)) {
		if (_1ddeb4611_IsNum(_150713_prim.get()._field_Kind)) {
			_1a48d539b_write(_self_.get()._field_oc, jule::Str("0", 1));
		} else if (_1accb0394_IsBool(_150713_prim.ptr())) {
			_1a48d539b_write(_self_.get()._field_oc, jule::Str("false", 5));
		} else if (_1accb0608_IsStr(_150713_prim.ptr())) {
			_1a48d539b_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		};
		return;;
	};
	if ((_1acca80d4_Arr(_147332_t.ptr()) != nullptr)) {
		jule::Ptr<_1accb3760_Arr> _151921_arr = _1acca80d4_Arr(_147332_t.ptr());;
		_1a48d539b_write(_self_.get()._field_oc, _1a48e8b2e_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _147332_t));
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1a483a92d_initExpr(_self_, _151921_arr.get()._field_Elem);
		_1a48d539b_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	jule::Ptr<_1acb09d37_StructIns> _152617_s = _1acca8821_Struct(_147332_t.ptr());;
	if ((((_152617_s != nullptr) && _152617_s.get()._field_Decl.get()._field_Binded) && (_1a490032d_findDirective(&(_152617_s.get()._field_Decl.get()._field_Directives), jule::Str("typedef", 7)) == nullptr))) {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1a48d539b_write(_self_.get()._field_oc, _1a48e8b2e_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _147332_t));
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("){}", 3));
		return;;
	};
	_1a48d539b_write(_self_.get()._field_oc, _1a48e8b2e_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _147332_t));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1a4828894_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a483d216_deriveCoder> static__1a483d5ac_new(jule::Ptr<_1a48d4c4c_ObjectCoder> _1223_oc) {
	return jule::new_ptr<_1a483d216_deriveCoder>(_1a483d216_deriveCoder{._field_oc=_1223_oc});;
}



inline jule::Str _1a483d8ba_cloneFuncDecl(_1a483d216_deriveCoder* _self_, jule::Ptr<_1acb07021_Struct>* _1633_s) {
	jule::Str _1717_obj = _1a48e6d91_structure((*(_self_))._field_oc.get()._field_tc.ptr(), (*(_1633_s)));;
	(_1717_obj).append(" clone(void) const ", 19);
	return _1717_obj;;
}



inline jule::Str _1a483dbc8_cloneFuncDef(_1a483d216_deriveCoder* _self_, jule::Ptr<_1acb07021_Struct>* _2232_s) {
	jule::Str _2317_obj = _1a48e6d91_structure((*(_self_))._field_oc.get()._field_tc.ptr(), (*(_2232_s)));;
	_2317_obj+=(jule::Str(" ", 1) + _2317_obj);
	(_2317_obj).append("::clone(void) const ", 20);
	return _2317_obj;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a483d216_deriveCoder _Src) {
	_Stream << "deriveCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a483eaec_TestCoder> static__1a484002b_New(jule::Ptr<_1a48d4c4c_ObjectCoder>* _2824_oc) {
	return jule::new_ptr<_1a483eaec_TestCoder>(_1a483eaec_TestCoder{._field_oc=(*(_2824_oc))});;
}



inline jule::Ptr<_1abcdb39e_ImportInfo> _1a4840290_findTestingPackage(jule::Ptr<_1a483eaec_TestCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_oc.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a720e211:;
		if (it != expr_end) {
			jule::Ptr<_1abcdb39e_ImportInfo> _3521_imp = *it;
			{
				if (_3521_imp.get()._field_LinkPath.equal("std::testing", 12)) {
					return _3521_imp;;
				};
			}
			_iter_next_1a720e211:;
			++it;
			goto _iter_begin_1a720e211;
		}
		_iter_end_1a720e211:;
	};
	return nullptr;;
}



inline void _1a4840515_appendTest(jule::Ptr<_1a483eaec_TestCoder> _self_, jule::Ptr<_1acb24d85_FnIns> _4334_f) {
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a4840bca_callTmReset(_self_);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("std::cout << \">>> TEST RUNNING: \" ", 34));
	_1a48d539b_write(_self_.get()._field_oc, _1a483b676_cstrLit(static_cast<jule::Slice<jule::U8>>(_4334_f.get()._field_Decl.get()._field_Ident)));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(" << std::endl;\n", 15));
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, static__1a48430ea_funcIns(&(_4334_f)));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("(_t);\n", 6));
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("post_test();\n", 13));
}



inline void _1a484078a_appendPackageTests(jule::Ptr<_1a483eaec_TestCoder> _self_, jule::Ptr<_1abcdded9_Package>* _5843_p) {
	{
		auto expr = &((*(_5843_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a72137dc:;
		if (it != expr_end) {
			jule::Ptr<_1abd59241_SymbolTable> _5921_file = *it;
			{
				{
					auto expr = &(_5921_file.get()._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a7214128:;
					if (it != expr_end) {
						jule::Ptr<_1acb221d4_Fn> _6025_f = *it;
						{
							if (_1a49006b3_hasDirective(&(_6025_f.get()._field_Directives), jule::Str("test", 4))) {
								_1a4840515_appendTest(_self_, _6025_f.get()._field_Instances[0LL]);
							};
						}
						_iter_next_1a7214128:;
						++it;
						goto _iter_begin_1a7214128;
					}
					_iter_end_1a7214128:;
				};
			}
			_iter_next_1a72137dc:;
			++it;
			goto _iter_begin_1a72137dc;
		}
		_iter_end_1a72137dc:;
	};
}



inline jule::Bool _1a48409ee_readyTestingPackage(jule::Ptr<_1a483eaec_TestCoder> _self_) {
	jule::Ptr<_1abcdb39e_ImportInfo> _6917_p = _1a4840290_findTestingPackage(_self_);;
	if ((_6917_p == nullptr)) {
		return false;;
	};
	_self_.get()._field_t=_1abcdc47c_FindStruct(_6917_p.ptr(), jule::Str("T", 1), false).get()._field_Instances[0LL];
	_self_.get()._field_tmReset=_1acb0acd3_FindMethod(_self_.get()._field_t.ptr(), jule::Str("reset", 5), false);
	_self_.get()._field_tmFailed=_1acb0acd3_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Failed", 6), false);
	_self_.get()._field_tmSkipped=_1acb0acd3_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Skipped", 7), false);
	return true;;
}



inline void _1a4840bca_callTmReset(jule::Ptr<_1a483eaec_TestCoder> _self_) {
	_1a48d539b_write(_self_.get()._field_oc, static__1a4842d53_func(&(_self_.get()._field_tmReset)));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1a4840da6_callTmFailed(jule::Ptr<_1a483eaec_TestCoder> _self_) {
	_1a48d539b_write(_self_.get()._field_oc, static__1a4842d53_func(&(_self_.get()._field_tmFailed)));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1a4841082_callTmSkipped(jule::Ptr<_1a483eaec_TestCoder> _self_) {
	_1a48d539b_write(_self_.get()._field_oc, static__1a4842d53_func(&(_self_.get()._field_tmSkipped)));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1a484125d_Serialize(jule::Ptr<_1a483eaec_TestCoder> _self_) {
	_1a48e0d79_serializeHead(_self_.get()._field_oc);
	__JULE_DEFER({
		_1a48e0b9d_end(_self_.get()._field_oc);
	});;
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("\nvoid test_point(void) {\n", 25));
	_1a48d57ec_addIndent(_self_.get()._field_oc);
	_1a48d5ba4_indent(_self_.get()._field_oc);
	if ((!(_1a48409ee_readyTestingPackage(_self_)))) {
		_1a48d539b_write(_self_.get()._field_oc, jule::Str("}", 1));
		_1a48d59c8_doneIndent(_self_.get()._field_oc);
		return;;
	};
	_1a48d539b_write(_self_.get()._field_oc, _1a48e49e8_asSptr(_self_.get()._field_oc.get()._field_tc.ptr(), _1a48e719e_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _self_.get()._field_t)));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(" _t = jule::new_ptr<", 20));
	_1a48d539b_write(_self_.get()._field_oc, _1a48e719e_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _self_.get()._field_t));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(">(); _t.ref = nullptr;\n", 23));
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("auto post_test = [&](void) {\n", 29));
	_1a48d57ec_addIndent(_self_.get()._field_oc);
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("++total;\n", 9));
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("if (", 4));
	_1a4840da6_callTmFailed(_self_);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("else if (", 9));
	_1a4841082_callTmSkipped(_self_);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1a48d59c8_doneIndent(_self_.get()._field_oc);
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("};\n", 3));
	_1a484078a_appendPackageTests(_self_, &(_self_.get()._field_oc.get()._field_ir.get()._field_Main));
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("\n\n", 2));
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("if (failed != 0) std::exit(1);\n", 31));
	_1a48d59c8_doneIndent(_self_.get()._field_oc);
	_1a48d5ba4_indent(_self_.get()._field_oc);
	_1a48d539b_write(_self_.get()._field_oc, jule::Str("}\n", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1a483eaec_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1a48426c1_toOut(jule::Str* _3322_ident, jule::Uintptr _3334_addr) {
	if ((_3334_addr != 0LLU)) {
		jule::Str _3521_obj = jule::Str::alloc(0LL, 40LL);;
		(_3521_obj).append("_", 1);
		_3521_obj+=_1ddea4876_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_3334_addr)), 15LL);
		(_3521_obj).append("_", 1);
		_3521_obj+=(*(_3322_ident));
		return _3521_obj;;
	};
	jule::Str _4217_obj = jule::Str::alloc(0LL, ((*(_3322_ident)).len() + 1LL));;
	(_4217_obj).append("_", 1);
	_4217_obj+=(*(_3322_ident));
	return _4217_obj;;
}



inline jule::Str static__1a4842aab_toLocal(jule::I64 _5423_row, jule::I64 _5433_col, jule::Str* _5444_ident) {
	jule::Str _5517_obj = jule::Str::alloc(0LL, 40LL);;
	(_5517_obj).append("_", 1);
	_5517_obj+=_1ddea4ea3_Itoa(_5423_row);
	_5517_obj+=_1ddea4ea3_Itoa(_5433_col);
	(_5517_obj).append("_", 1);
	_5517_obj+=(*(_5444_ident));
	return _5517_obj;;
}



inline jule::Str static__1a4842d53_func(jule::Ptr<_1acb221d4_Fn>* _6521_f) {
	{
		
		if ((*(_6521_f)).get()._field_Binded) {
			_case_begin_1a7229072:;
			{
				return (*(_6521_f)).get()._field_Ident;;
			}
		}
		else if ((*(_6521_f)).get()._field_Ident.equal("main", 4)) {
			_case_begin_1a72290d8:;
			{
				return jule::Str("entry_point", 11);;
			}
		}
		else if (_1acb228aa_IsMethod((*(_6521_f)).ptr())) {
			_case_begin_1a722855a:;
			{
				jule::Str _7221_obj = static__1a48426c1_toOut(&((*(_6521_f)).get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_6521_f)))));;
				if ((*(_6521_f)).get()._field_Statically) {
					(_7221_obj).buffer.insert(0, (jule::Str("static_", 7)));;
					return _7221_obj;;
				};
				return _7221_obj;;
			}
		}
		else {
			_case_begin_1a722844a:;
			{
				return static__1a48426c1_toOut(&((*(_6521_f)).get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_6521_f)))));;
			}
		}
		_match_end_1a7227c41:;
	};
}



inline jule::Str static__1a48430ea_funcIns(jule::Ptr<_1acb24d85_FnIns>* _8424_f) {
	if (_1acb2621b_IsBuiltin((*(_8424_f)).ptr())) {
		return (jule::Str("jule::", 6) + (*(_8424_f)).get()._field_Decl.get()._field_Ident);;
	};
	if (((*(_8424_f)).get()._field_Decl.get()._field_Binded || ((*(_8424_f)).get()._field_Generics.len() == 0LL))) {
		return static__1a4842d53_func(&((*(_8424_f)).get()._field_Decl));;
	};
	return static__1a48426c1_toOut(&((*(_8424_f)).get()._field_Decl.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_8424_f)))));;
}



inline jule::Str static__1a4843392_traitDecl(jule::Ptr<_1acb34405_Trait> _9525_t) {
	if (_1acb34e94_IsBuiltin(_9525_t.ptr())) {
		return (jule::Str("jule::", 6) + _9525_t.get()._field_Ident);;
	};
	return static__1a48426c1_toOut(&(_9525_t.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_9525_t)));;
}



inline jule::Str static__1a4843639_param(jule::Ptr<_1acb20897_Param>* _10322_p) {
	if ((_2097d4124_IsAnonIdent((*(_10322_p)).get()._field_Ident) || _2097d3d7c_IsIgnoreIdent((*(_10322_p)).get()._field_Ident))) {
		return jule::Str();;
	};
	if (_1acb20e80_IsSelf((*(_10322_p)).ptr())) {
		return jule::Str("_self_", 6);;
	};
	if (((*(_10322_p)).get()._field_Token == nullptr)) {
		return static__1a4842aab_toLocal(0LL, 0LL, &((*(_10322_p)).get()._field_Ident));;
	};
	return static__1a4842aab_toLocal((*(_10322_p)).get()._field_Token.get()._field_Row, (*(_10322_p)).get()._field_Token.get()._field_Column, &((*(_10322_p)).get()._field_Ident));;
}



inline jule::Str static__1a48438d1_structure(jule::Ptr<_1acb07021_Struct>* _11726_s) {
	if ((*(_11726_s)).get()._field_Binded) {
		if (_1a49006b3_hasDirective(&((*(_11726_s)).get()._field_Directives), jule::Str("typedef", 7))) {
			return (*(_11726_s)).get()._field_Ident;;
		};
		return (jule::Str("struct ", 7) + (*(_11726_s)).get()._field_Ident);;
	};
	return static__1a48426c1_toOut(&((*(_11726_s)).get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_11726_s)))));;
}



inline jule::Str static__1a4843b78_structureIns(jule::Ptr<_1acb09d37_StructIns>* _12829_s) {
	if (((*(_12829_s)).get()._field_Decl.get()._field_Binded || ((*(_12829_s)).get()._field_Generics.len() == 0LL))) {
		return static__1a48438d1_structure(&((*(_12829_s)).get()._field_Decl));;
	};
	return static__1a48426c1_toOut(&((*(_12829_s)).get()._field_Decl.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12829_s)))));;
}



inline jule::Str static__1a4843e20_field(jule::Ptr<_1acb0444c_Field>* _13622_f) {
	if ((*(_13622_f)).get()._field_Owner.get()._field_Binded) {
		return (*(_13622_f)).get()._field_Ident;;
	};
	return (jule::Str("_field_", 7) + (*(_13622_f)).get()._field_Ident);;
}



inline jule::Str static__1a48441b7_var(jule::Ptr<_1abd1497c_Var> _14423_v) {
	{
		
		if (_14423_v.get()._field_Binded) {
			_case_begin_1a7233323:;
			{
				return _14423_v.get()._field_Ident;;
			}
		}
		else if (_14423_v.get()._field_Ident.equal("error", 5)) {
			_case_begin_1a723272e:;
			{
				return jule::Str("except.error", 12);;
			}
		}
		else if (_14423_v.get()._field_Ident.equal("self", 4)) {
			_case_begin_1a7232795:;
			{
				return jule::Str("_self_", 6);;
			}
		}
		else if ((_14423_v.get()._field_RetOrder == -1LL)) {
			_case_begin_1a723280b:;
			{
				return jule::Str("__jule_func_result", 18);;
			}
		}
		else if ((_14423_v.get()._field_RetOrder >= 0LL)) {
			_case_begin_1a7232872:;
			{
				return (jule::Str("__jule_func_result.__jule_result_arg", 36) + _1ddea4ea3_Itoa(_14423_v.get()._field_RetOrder));;
			}
		}
		else if ((_14423_v.get()._field_Scope != nullptr)) {
			_case_begin_1a7232ab4:;
			{
				return static__1a4842aab_toLocal(_14423_v.get()._field_Token.get()._field_Row, _14423_v.get()._field_Token.get()._field_Column, &(_14423_v.get()._field_Ident));;
			}
		}
		else {
			_case_begin_1a7231e59:;
			{
				return static__1a48426c1_toOut(&(_14423_v.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_14423_v)));;
			}
		}
		_match_end_1a72321ce:;
	};
}



inline jule::Str static__1a484445e_iterBegin(jule::Uintptr _16425_it) {
	jule::Str _16517_obj = jule::Str::alloc(0LL, 30LL);;
	(_16517_obj).append("_iter_begin_", 12);
	_16517_obj+=_1ddea4876_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_16425_it)), 15LL);
	return _16517_obj;;
}



inline jule::Str static__1a4844706_iterEnd(jule::Uintptr _17223_it) {
	jule::Str _17317_obj = jule::Str::alloc(0LL, 30LL);;
	(_17317_obj).append("_iter_end_", 10);
	_17317_obj+=_1ddea4876_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_17223_it)), 15LL);
	return _17317_obj;;
}



inline jule::Str static__1a484499d_iterNext(jule::Uintptr _18024_it) {
	jule::Str _18117_obj = jule::Str::alloc(0LL, 30LL);;
	(_18117_obj).append("_iter_next_", 11);
	_18117_obj+=_1ddea4876_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_18024_it)), 15LL);
	return _18117_obj;;
}



inline jule::Str static__1a4844c45_label(jule::Str* _18822_ident) {
	jule::Str _18917_obj = jule::Str::alloc(0LL, 30LL);;
	(_18917_obj).append("_julec_label_", 13);
	_18917_obj+=(*(_18822_ident));
	return _18917_obj;;
}



inline jule::Str static__1a4844edc_matchEnd(jule::Uintptr _19624_m) {
	jule::Str _19717_obj = jule::Str::alloc(0LL, 30LL);;
	(_19717_obj).append("_match_end_", 11);
	_19717_obj+=_1ddea4876_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19624_m)), 15LL);
	return _19717_obj;;
}



inline jule::Str static__1a4845284_caseBegin(jule::Uintptr _20425_c) {
	jule::Str _20517_obj = jule::Str::alloc(0LL, 30LL);;
	(_20517_obj).append("_case_begin_", 12);
	_20517_obj+=_1ddea4876_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20425_c)), 15LL);
	return _20517_obj;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a484213d_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a48d33aa_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a48d3872_traitHash _Src) {
	_Stream << "traitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a48d3c29_traitCast _Src) {
	_Stream << "traitCast{";
	_Stream << "t1:" << _Src._field_t1 << ", ";
	_Stream << "t2:" << _Src._field_t2;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a48e3068_Str(_1a48e2d04_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _1a48e3376_Equal(jule::Ptr<_1a48e2d04_customType> _self_, jule::Ptr<_1acca4ba2_TypeKind> _3921_k) {
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a48e2d04_customType _Src) {
	_Stream << _1a48e3068_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1a48e3772_typeCoder> static__1a48e3cb1_new(jule::Ptr<_1a48d4c4c_ObjectCoder>* _6324_oc) {
	jule::Ptr<_1a48e3772_typeCoder> _6417_tc = jule::new_ptr<_1a48e3772_typeCoder>(_1a48e3772_typeCoder{._field_oc=(*(_6324_oc)), });;
	_6417_tc.get()._field_rc=static__1a48eb802_new(&(_6417_tc));
	return _6417_tc;;
}



inline jule::Str _1a48e40be_toType(_1a48e3772_typeCoder* _self_, jule::Str _7029_id) {
	if ((!_7029_id.equal("uintptr", 7))) {
		_7029_id=_1ddea6ea5_RealKindOf(_7029_id);
	};
	if (((97LL <= _7029_id[0LL]) && (_7029_id[0LL] <= 122LLU))) {
		_7029_id[0LL]-=32LLU;
	};
	return (jule::Str("jule::", 6) + _7029_id);;
}



inline jule::Str _1a48e43cc_prim(_1a48e3772_typeCoder* _self_, jule::Ptr<_1accac407_Prim> _8123_p) {
	return _1a48e40be_toType(_self_, _1accac737_Str(_8123_p.ptr()));;
}



inline jule::Str _1a48e46da_tuple(_1a48e3772_typeCoder* _self_, jule::Ptr<_1accb21ba_Tuple> _8628_t) {
	jule::Str _8717_obj = jule::Str("std::tuple<", 11);;
	{
		auto expr = &(_8628_t.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7332a93:;
		if (it != expr_end) {
			jule::Ptr<_1acca4ba2_TypeKind> _8821_tk = *it;
			{
				_8717_obj+=_1a48e8b2e_kind(_self_, _8821_tk);
				(_8717_obj).append(",", 1);
			}
			_iter_next_1a7332a93:;
			++it;
			goto _iter_begin_1a7332a93;
		}
		_iter_end_1a7332a93:;
	};
	(_8717_obj).mut_slice(0LL, (_8717_obj.len() - 1LL));;
	(_8717_obj).append(">", 1);
	return _8717_obj;;
}



inline jule::Str _1a48e49e8_asSptr(_1a48e3772_typeCoder* _self_, jule::Str _9825_elem) {
	jule::Str _9917_obj = jule::Str("jule::Ptr<", 10);;
	_9917_obj+=_9825_elem;
	(_9917_obj).append(">", 1);
	return _9917_obj;;
}



inline jule::Str _1a48e4d06_asPtr(_1a48e3772_typeCoder* _self_, jule::Str _10624_elem) {
	return (_10624_elem + jule::Str("*", 1));;
}



inline jule::Str _1a48e5114_sptr(_1a48e3772_typeCoder* _self_, jule::Ptr<_1accb0b58_Sptr> _11127_sptr) {
	return _1a48e49e8_asSptr(_self_, _1a48e8b2e_kind(_self_, _11127_sptr.get()._field_Elem));;
}



inline jule::Str _1a48e5422_ptr(_1a48e3772_typeCoder* _self_, jule::Ptr<_1accb41bc_Ptr> _11626_p) {
	;
	if (_1accb4b90_IsUnsafe(_11626_p.ptr())) {
		return jule::Str("void*", 5);;
	};
	jule::Str _12117_elem = _1a48e8b2e_kind(_self_, _11626_p.get()._field_Elem);;
	(_12117_elem).append("*", 1);
	return _12117_elem;;
}



inline jule::Str _1a48e5730_enumDecl(_1a48e3772_typeCoder* _self_, jule::Ptr<_1acb36b88_Enum> _12731_e) {
	return _1a48e8b2e_kind(_self_, _12731_e.get()._field_Kind.get()._field_Kind);;
}



inline jule::Str _1a48e5a3d_typeEnumDecl(_1a48e3772_typeCoder* _self_, jule::Ptr<_1acb38283_TypeEnum> _13235_e) {
	return jule::Str("jule::Any", 9);;
}



inline jule::Str _1a48e5d4b_asSlice(_1a48e3772_typeCoder* _self_, jule::Ptr<_1acca4ba2_TypeKind> _13630_elem) {
	jule::Str _13717_obj = jule::Str("jule::Slice<", 12);;
	_13717_obj+=_1a48e8b2e_kind(_self_, _13630_elem);
	(_13717_obj).append(">", 1);
	return _13717_obj;;
}



inline jule::Str _1a48e6159_slice(_1a48e3772_typeCoder* _self_, jule::Ptr<_1accb15b5_Slc> _14428_s) {
	return _1a48e5d4b_asSlice(_self_, _14428_s.get()._field_Elem);;
}



inline jule::Str _1a48e6467_mapType(_1a48e3772_typeCoder* _self_, jule::Ptr<_1accb2b6b_Map> _14930_m) {
	jule::Str _15017_obj = jule::Str("jule::Map<", 10);;
	_15017_obj+=_1a48e8b2e_kind(_self_, _14930_m.get()._field_Key);
	(_15017_obj).append(",", 1);
	_15017_obj+=_1a48e8b2e_kind(_self_, _14930_m.get()._field_Val);
	(_15017_obj).append(">", 1);
	return _15017_obj;;
}



inline jule::Str _1a48e6775_traitIdent(_1a48e3772_typeCoder* _self_, jule::Str _15829_ident) {
	jule::Str _15917_obj = jule::Str("jule::Trait<", 12);;
	_15917_obj+=_15829_ident;
	(_15917_obj).append(">", 1);
	return _15917_obj;;
}



inline jule::Str _1a48e6a83_traitDecl(_1a48e3772_typeCoder* _self_, jule::Ptr<_1acb34405_Trait> _16628_t) {
	return _1a48e6775_traitIdent(_self_, static__1a4843392_traitDecl(_16628_t));;
}



inline jule::Str _1a48e6d91_structure(_1a48e3772_typeCoder* _self_, jule::Ptr<_1acb07021_Struct> _17128_s) {
	jule::Str _17217_rep = jule::Str();;
	if ((_17128_s.get()._field_Binded && (!(_1a49006b3_hasDirective(&(_17128_s.get()._field_Directives), jule::Str("typedef", 7)))))) {
		(_17217_rep).append("struct ", 7);
	};
	_17217_rep+=static__1a48438d1_structure(&(_17128_s));
	return _17217_rep;;
}



inline jule::Str _1a48e719e_structureIns(_1a48e3772_typeCoder* _self_, jule::Ptr<_1acb09d37_StructIns> _18135_s) {
	if (_18135_s.get()._field_Decl.get()._field_Binded) {
		jule::Str _18321_ident = static__1a4843b78_structureIns(&(_18135_s));;
		if ((_18135_s.get()._field_Generics.len() > 0LL)) {
			(_18321_ident).append("<", 1);
			{
				auto expr = &(_18135_s.get()._field_Generics);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1a7343521:;
				if (it != expr_end) {
					jule::Ptr<_1acca3420_InsGeneric> _18629_g = *it;
					{
						_18321_ident+=_1a48e8b2e_kind(_self_, _18629_g.get()._field_Kind);
						(_18321_ident).append(",", 1);
					}
					_iter_next_1a7343521:;
					++it;
					goto _iter_begin_1a7343521;
				}
				_iter_end_1a7343521:;
			};
			(_18321_ident).mut_slice(0LL, (_18321_ident.len() - 1LL));;
			(_18321_ident).append(">", 1);
		};
		jule::Ptr<_1acaa47b5_Directive> _19317_d = _1a490032d_findDirective(&(_18135_s.get()._field_Decl.get()._field_Directives), jule::Str("namespace", 9));;
		if ((_19317_d != nullptr)) {
			(_18321_ident).buffer.insert(0, ((_1a48e16e8_concatAllParts(_19317_d.get()._field_Args) + jule::Str("::", 2))));;
		};
		return _18321_ident;;
	};
	return static__1a4843b78_structureIns(&(_18135_s));;
}



inline jule::Str _1a48e74ac_array(_1a48e3772_typeCoder* _self_, jule::Ptr<_1accb3760_Arr> _20328_a) {
	jule::Str _20417_obj = jule::Str("jule::Array<", 12);;
	_20417_obj+=_1a48e8b2e_kind(_self_, _20328_a.get()._field_Elem);
	(_20417_obj).append(",", 1);
	_20417_obj+=_1ddea4ea3_Itoa(_20328_a.get()._field_N);
	(_20417_obj).append(">", 1);
	return _20417_obj;;
}



inline jule::Str _1a48e7ac8_paramIns(_1a48e3772_typeCoder* _self_, jule::Ptr<_1acb23eb6_ParamIns>* _22932_p) {
	jule::Str _23017_obj = jule::Str();;
	if ((*(_22932_p)).get()._field_Decl.get()._field_Variadic) {
		(_23017_obj).append("jule::Slice<", 12);
		_23017_obj+=_1a48e8b2e_kind(_self_, (*(_22932_p)).get()._field_Kind);
		(_23017_obj).append(">", 1);
	} else {
		_23017_obj+=_1a48e8b2e_kind(_self_, (*(_22932_p)).get()._field_Kind);
	};
	if ((*(_22932_p)).get()._field_Decl.get()._field_Reference) {
		(_23017_obj).append("*", 1);
	};
	return _23017_obj;;
}



inline void _1a48e8205_funcInsResult(_1a48e3772_typeCoder* _self_, jule::Str* _25937_s, jule::Ptr<_1acb24d85_FnIns>* _25950_f) {
	if (_1acb22646_IsVoid((*(_25950_f)).get()._field_Decl.ptr())) {
		if ((*(_25950_f)).get()._field_Decl.get()._field_Exceptional) {
			((*(_25937_s))).append("jule::VoidExceptional", 21);
		} else {
			((*(_25937_s))).append("void", 4);
		};
		return;;
	};
	if ((*(_25950_f)).get()._field_Decl.get()._field_Exceptional) {
		((*(_25937_s))).append("jule::Exceptional<", 18);
		_1a48ed628_codeMut1((*(_self_))._field_rc.ptr(), _25937_s, &((*(_25950_f)).get()._field_Result));
		((*(_25937_s))).append(">", 1);
		return;;
	};
	_1a48ed628_codeMut1((*(_self_))._field_rc.ptr(), _25937_s, &((*(_25950_f)).get()._field_Result));
}



inline jule::Str _1a48e8513_anonFunc(_1a48e3772_typeCoder* _self_, jule::Ptr<_1acb24d85_FnIns> _27731_f) {
	if (((_27731_f.get()._field_Result != nullptr) && (_1acca905d_Tup(_27731_f.get()._field_Result.ptr()) != nullptr))) {
		_1a48d6545_pushResultIns((*(_self_))._field_oc, &(_27731_f));
	};
	jule::Str _28117_decl = jule::Str();;
	_1a48e8205_funcInsResult(_self_, &(_28117_decl), &(_27731_f));
	(_28117_decl).append("(", 1);
	if ((_27731_f.get()._field_Params.len() > 0LL)) {
		{
			auto expr = &(_27731_f.get()._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a73513ec:;
			if (it != expr_end) {
				jule::Ptr<_1acb23eb6_ParamIns> _28525_param = *it;
				{
					if (_1acb20e80_IsSelf(_28525_param.get()._field_Decl.ptr())) {
						goto _iter_next_1a73513ec;
					};
					_28117_decl+=_1a48e7ac8_paramIns(_self_, &(_28525_param));
					(_28117_decl).append(",", 1);
				}
				_iter_next_1a73513ec:;
				++it;
				goto _iter_begin_1a73513ec;
			}
			_iter_end_1a73513ec:;
		};
		(_28117_decl).mut_slice(0LL, (_28117_decl.len() - 1LL));;
	} else {
		(_28117_decl).append("void", 4);
	};
	(_28117_decl).append(")", 1);
	return _28117_decl;;
}



inline jule::Str _1a48e8821_func(_1a48e3772_typeCoder* _self_, jule::Ptr<_1acb24d85_FnIns> _30127_f) {
	jule::Str _30217_obj = jule::Str("jule::Fn<", 9);;
	_30217_obj+=_1a48e8513_anonFunc(_self_, _30127_f);
	(_30217_obj).append(">", 1);
	return _30217_obj;;
}



inline jule::Str _1a48e8b2e_kind(_1a48e3772_typeCoder* _self_, jule::Ptr<_1acca4ba2_TypeKind> _30927_k) {
	{
		
		if ((_1acca8821_Struct(_30927_k.ptr()) != nullptr)) {
			_case_begin_1a7354125:;
			{
				return _1a48e719e_structureIns(_self_, _1acca8821_Struct(_30927_k.ptr()));;
			}
		}
		else if (_1acca5994_Binded(_30927_k.ptr())) {
			_case_begin_1a735419c:;
			{
				return _30927_k.get()._field_BindIdent;;
			}
		}
		else if ((_1acca73be_Prim(_30927_k.ptr()) != nullptr)) {
			_case_begin_1a7354224:;
			{
				return _1a48e43cc_prim(_self_, _1acca73be_Prim(_30927_k.ptr()));;
			}
		}
		else if ((_1acca905d_Tup(_30927_k.ptr()) != nullptr)) {
			_case_begin_1a735429b:;
			{
				return _1a48e46da_tuple(_self_, _1acca905d_Tup(_30927_k.ptr()));;
			}
		}
		else if ((_1acca7633_Sptr(_30927_k.ptr()) != nullptr)) {
			_case_begin_1a7354323:;
			{
				return _1a48e5114_sptr(_self_, _1acca7633_Sptr(_30927_k.ptr()));;
			}
		}
		else if ((_1acca7897_Ptr(_30927_k.ptr()) != nullptr)) {
			_case_begin_1a735439a:;
			{
				return _1a48e5422_ptr(_self_, _1acca7897_Ptr(_30927_k.ptr()));;
			}
		}
		else if ((_1acca7b0b_Enum(_30927_k.ptr()) != nullptr)) {
			_case_begin_1a7354422:;
			{
				return _1a48e5730_enumDecl(_self_, _1acca7b0b_Enum(_30927_k.ptr()));;
			}
		}
		else if ((_1acca7d70_TypeEnum(_30927_k.ptr()) != nullptr)) {
			_case_begin_1a7354499:;
			{
				return _1a48e5a3d_typeEnumDecl(_self_, _1acca7d70_TypeEnum(_30927_k.ptr()));;
			}
		}
		else if ((_1acca8348_Slc(_30927_k.ptr()) != nullptr)) {
			_case_begin_1a7354521:;
			{
				return _1a48e6159_slice(_self_, _1acca8348_Slc(_30927_k.ptr()));;
			}
		}
		else if ((_1acca8ce9_Map(_30927_k.ptr()) != nullptr)) {
			_case_begin_1a7354598:;
			{
				return _1a48e6467_mapType(_self_, _1acca8ce9_Map(_30927_k.ptr()));;
			}
		}
		else if ((_1acca8a85_Trait(_30927_k.ptr()) != nullptr)) {
			_case_begin_1a7354620:;
			{
				return _1a48e6a83_traitDecl(_self_, _1acca8a85_Trait(_30927_k.ptr()));;
			}
		}
		else if ((_1acca80d4_Arr(_30927_k.ptr()) != nullptr)) {
			_case_begin_1a7354697:;
			{
				return _1a48e74ac_array(_self_, _1acca80d4_Arr(_30927_k.ptr()));;
			}
		}
		else if ((_1acca85ac_Fn(_30927_k.ptr()) != nullptr)) {
			_case_begin_1a735471e:;
			{
				return _1a48e8821_func(_self_, _1acca85ac_Fn(_30927_k.ptr()));;
			}
		}
		_match_end_1a7353e7c:;
	};
	{
		auto &_match_expr{ _30927_k.get()._field_Kind };
		
		if (_match_expr.type_is(true, 27)) {
			_case_begin_1a73547c9:;
			{
				return _30927_k.get()._field_Kind.cast_ptr<_1a48e2d04_customType>(27).get()._field_kind;;
			}
		}
		else {
			_case_begin_1a735b0a5:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);;
			}
		}
		_match_end_1a735a35c:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a48e3772_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "rc:" << _Src._field_rc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a48eb33a_resultCoder> static__1a48eb802_new(jule::Ptr<_1a48e3772_typeCoder>* _36324_tc) {
	return jule::new_ptr<_1a48eb33a_resultCoder>(_1a48eb33a_resultCoder{._field_tc=(*(_36324_tc))});;
}



inline void _1a48ebb21_ptr(_1a48eb33a_resultCoder* _self_, jule::Str* _36727_s, jule::Ptr<_1accb41bc_Ptr> _36739_p) {
	((*(_36727_s))).append("p", 1);
	_1a48ed309_codeMut(_self_, _36727_s, &(_36739_p.get()._field_Elem));
}



inline void _1a48ebe40_sptr(_1a48eb33a_resultCoder* _self_, jule::Str* _37228_s, jule::Ptr<_1accb0b58_Sptr> _37240_p) {
	((*(_37228_s))).append("x", 1);
	_1a48ed309_codeMut(_self_, _37228_s, &(_37240_p.get()._field_Elem));
}



inline void _1a48ec25e_mapType(_1a48eb33a_resultCoder* _self_, jule::Str* _37731_s, jule::Ptr<_1accb2b6b_Map> _37743_p) {
	((*(_37731_s))).append("m", 1);
	_1a48ed309_codeMut(_self_, _37731_s, &(_37743_p.get()._field_Key));
	_1a48ed309_codeMut(_self_, _37731_s, &(_37743_p.get()._field_Val));
}



inline void _1a48ec57d_slice(_1a48eb33a_resultCoder* _self_, jule::Str* _38329_s, jule::Ptr<_1accb15b5_Slc> _38341_slc) {
	((*(_38329_s))).append("s", 1);
	_1a48ed309_codeMut(_self_, _38329_s, &(_38341_slc.get()._field_Elem));
}



inline void _1a48ec89c_arr(_1a48eb33a_resultCoder* _self_, jule::Str* _38827_s, jule::Ptr<_1accb3760_Arr> _38839_arr) {
	((*(_38827_s))).append("a", 1);
	(*(_38827_s))+=_1ddea4c0b_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_38839_arr.get()._field_N)), 16LL);
	_1a48ed309_codeMut(_self_, _38827_s, &(_38839_arr.get()._field_Elem));
}



inline void _1a48ecbbb_func(_1a48eb33a_resultCoder* _self_, jule::Str* _39428_s, jule::Ptr<_1acb24d85_FnIns> _39440_f) {
	((*(_39428_s))).append("f", 1);
	{
		auto expr = &(_39440_f.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7361d69:;
		if (it != expr_end) {
			jule::Ptr<_1acb23eb6_ParamIns> _39621_p = *it;
			{
				if (_39621_p.get()._field_Decl.get()._field_Reference) {
					((*(_39428_s))).append("r", 1);
				};
				_1a48ed309_codeMut(_self_, _39428_s, &(_39621_p.get()._field_Kind));
			}
			_iter_next_1a7361d69:;
			++it;
			goto _iter_begin_1a7361d69;
		}
		_iter_end_1a7361d69:;
	};
	if ((_39440_f.get()._field_Result != nullptr)) {
		_1a48ed309_codeMut(_self_, _39428_s, &(_39440_f.get()._field_Result));
	};
}



inline void _1a48eceda_tup(_1a48eb33a_resultCoder* _self_, jule::Str* _40727_s, jule::Ptr<_1accb21ba_Tuple> _40739_tup) {
	{
		auto expr = &(_40739_tup.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7363871:;
		if (it != expr_end) {
			jule::Ptr<_1acca4ba2_TypeKind> _40821_t = *it;
			{
				((*(_40727_s))).append("__jule_tuple_", 13);
				_1a48ed309_codeMut(_self_, _40727_s, &(_40821_t));
			}
			_iter_next_1a7363871:;
			++it;
			goto _iter_begin_1a7363871;
		}
		_iter_end_1a7363871:;
	};
}



inline void _1a48ed309_codeMut(_1a48eb33a_resultCoder* _self_, jule::Str* _41431_s, jule::Ptr<_1acca4ba2_TypeKind>* _41444_t) {
	{
		auto &_match_expr{ (*(_41444_t)).get()._field_Kind };
		
		if (_match_expr.type_is(true, 26)) {
			_case_begin_1a7364883:;
			{
				_1a48ebb21_ptr(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_1accb41bc_Ptr>(26));
			}
		}
		else if (_match_expr.type_is(true, 21)) {
			_case_begin_1a7364c07:;
			{
				_1a48ebe40_sptr(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_1accb0b58_Sptr>(21));
			}
		}
		else if (_match_expr.type_is(true, 24)) {
			_case_begin_1a7364c6d:;
			{
				_1a48ec25e_mapType(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_1accb2b6b_Map>(24));
			}
		}
		else if (_match_expr.type_is(true, 22)) {
			_case_begin_1a73651be:;
			{
				_1a48ec57d_slice(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_1accb15b5_Slc>(22));
			}
		}
		else if (_match_expr.type_is(true, 25)) {
			_case_begin_1a7365235:;
			{
				_1a48ec89c_arr(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_1accb3760_Arr>(25));
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1a736529b:;
			{
				_1a48ecbbb_func(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_1acb24d85_FnIns>(1));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1a7365312:;
			{
				jule::Ptr<_1acb36b88_Enum> _42917_te = (*(_41444_t)).get()._field_Kind.cast_ptr<_1acb36b88_Enum>(3);;
				(*(_41431_s))+=static__1a48426c1_toOut(&(_42917_te.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_42917_te)));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1a7365378:;
			{
				jule::Ptr<_1acb38283_TypeEnum> _43217_te = (*(_41444_t)).get()._field_Kind.cast_ptr<_1acb38283_TypeEnum>(4);;
				(*(_41431_s))+=static__1a48426c1_toOut(&(_43217_te.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_43217_te)));
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1a73653de:;
			{
				jule::Ptr<_1acb09d37_StructIns> _43521_si = (*(_41444_t)).get()._field_Kind.cast_ptr<_1acb09d37_StructIns>(0);;
				(*(_41431_s))+=static__1a4843b78_structureIns(&(_43521_si));
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1a7365455:;
			{
				jule::Ptr<_1acb34405_Trait> _43821_trt = (*(_41444_t)).get()._field_Kind.cast_ptr<_1acb34405_Trait>(2);;
				(*(_41431_s))+=static__1a4843392_traitDecl(_43821_trt);
			}
		}
		else if (_match_expr.type_is(true, 20)) {
			_case_begin_1a73654bb:;
			{
				(*(_41431_s))+=(*(_41444_t)).get()._field_Kind.cast_ptr<_1accac407_Prim>(20).get()._field_Kind;
			}
		}
		else if (_match_expr.type_is(true, 23)) {
			_case_begin_1a7365532:;
			{
				_1a48eceda_tup(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_1accb21ba_Tuple>(23));
			}
		}
		else {
			_case_begin_1a7364a70:;
			{
				jule::panic(jule::Str("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:445:13"));;
			}
		}
		_match_end_1a7364a1a:;
	};
}



inline void _1a48ed628_codeMut1(_1a48eb33a_resultCoder* _self_, jule::Str* _44932_s, jule::Ptr<_1acca4ba2_TypeKind>* _44945_t) {
	jule::Ptr<_1accb21ba_Tuple> _45017_tup = _1acca905d_Tup((*(_44945_t)).ptr());;
	if ((_45017_tup != nullptr)) {
		_1a48eceda_tup(_self_, _44932_s, _45017_tup);
	} else {
		(*(_44932_s))+=_1a48e8b2e_kind((*(_self_))._field_tc.ptr(), (*(_44945_t)));
	};
}



inline jule::Str _1a48ed903_code(_1a48eb33a_resultCoder* _self_, jule::Ptr<_1acca4ba2_TypeKind>* _45828_t) {
	jule::Str _45917_s = jule::Str::alloc(0LL, 20LL);;
	_1a48ed309_codeMut(_self_, &(_45917_s), _45828_t);
	return _45917_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a48eb33a_resultCoder _Src) {
	_Stream << "resultCoder{";
	_Stream << "tc:" << _Src._field_tc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a736ea8b_Name(_1a736e7a0_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1a736ebbd_What(_1a736e7a0_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1a736ed00_Reset(_1a736e7a0_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1a736ee32_Short(_1a736e7a0_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a736e7a0_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1a7372cae_Name(_1a7373232_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1a737351d_What(_1a7373232_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1a7373650_Reset(_1a7373232_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1a7373782_Short(_1a7373232_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7373232_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1a7376466_Name(_1a73768d9_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1a7376bc5_What(_1a73768d9_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1a7376d07_Reset(_1a73768d9_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1a7376e39_Short(_1a73768d9_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a73768d9_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1a7379b62_Name(_1a737a0d5_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1a737a3c1_What(_1a737a0d5_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1a737a503_Reset(_1a737a0d5_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1a737a635_Short(_1a737a0d5_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a737a0d5_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1a737d319_Name(_1a737d78c_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1a737da78_What(_1a737d78c_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1a737dbaa_Reset(_1a737d78c_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1a737dcdc_Short(_1a737d78c_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a737d78c_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a495783b_FlagSet> static__1a4957b27_New(void) {
	return jule::new_ptr<_1a495783b_FlagSet>(_1a495783b_FlagSet{._field_flags=jule::Slice<jule::Trait<_1a4955dcd_CommonFlag>>::alloc(0LL, 20LL)});;
}



inline jule::Trait<_1a4955dcd_CommonFlag> _1a4958067_FindFlag(_1a495783b_FlagSet* _self_, jule::Str _7127_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7388764:;
		if (it != expr_end) {
			jule::Trait<_1a4955dcd_CommonFlag> _7221_flag = *it;
			{
				if ((_1a4955dcd_CommonFlag_mptr_data[(_7221_flag).type_offset]._1a49262dd_Name(_7221_flag) == _7127_name)) {
					return _7221_flag;;
				};
			}
			_iter_next_1a7388764:;
			++it;
			goto _iter_begin_1a7388764;
		}
		_iter_end_1a7388764:;
	};
	return nullptr;;
}



inline jule::Trait<_1a4955dcd_CommonFlag> _1a4958375_FindFlagShort(_1a495783b_FlagSet* _self_, jule::I32 _8132_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7389666:;
		if (it != expr_end) {
			jule::Trait<_1a4955dcd_CommonFlag> _8221_flag = *it;
			{
				if ((_1a4955dcd_CommonFlag_mptr_data[(_8221_flag).type_offset]._1a4926420_Short(_8221_flag) == _8132_name)) {
					return _8221_flag;;
				};
			}
			_iter_next_1a7389666:;
			++it;
			goto _iter_begin_1a7389666;
		}
		_iter_end_1a7389666:;
	};
	return nullptr;;
}



inline jule::Slice<jule::Trait<_1a4955dcd_CommonFlag>> _1a49585d9_Flags(_1a495783b_FlagSet* _self_) {
	return (*(_self_))._field_flags;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1a49588e7_Parse(_1a495783b_FlagSet* _self_, jule::Slice<jule::Str> _11524_args) {
	_1a495a047_argParser _11617_ap = _1a495a047_argParser{._field_set=(*(_self_)), ._field_args=_11524_args, };;
	({
		auto except = _1a495b400_parse(&_11617_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(), _11617_ap._field_content);;
}



inline void _1a4958ac3_Reset(_1a495783b_FlagSet* _self_) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a738bba7:;
		if (it != expr_end) {
			jule::Trait<_1a4955dcd_CommonFlag> _12616_f = *it;
			{
				_1a4955dcd_CommonFlag_mptr_data[(_12616_f).type_offset]._1a4955c9b_Reset(_12616_f);
			}
			_iter_next_1a738bba7:;
			++it;
			goto _iter_begin_1a738bba7;
		}
		_iter_end_1a738bba7:;
	};
}



inline jule::Ptr<_1a737d78c_Flag> _1a73e3b21_addFlagCommon(_1a495783b_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1a73e51e9:;
			{
				goto _match_end_1a73e5194;
			}
		}
		_match_end_1a73e5194:;
	};
	if ((_1a4958067_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1a4958375_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1a737d78c_Flag> _14817_flag = jule::new_ptr<_1a737d78c_Flag>(_1a737d78c_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait<_1a4955dcd_CommonFlag>> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait<_1a4955dcd_CommonFlag>(_14817_flag, 4)); };
	return _14817_flag;;
}

inline jule::Ptr<_1a737a0d5_Flag> _1a73eb95e_addFlagCommon(_1a495783b_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1a73eced2:;
			{
				goto _match_end_1a73ece38;
			}
		}
		_match_end_1a73ece38:;
	};
	if ((_1a4958067_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1a4958375_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1a737a0d5_Flag> _14817_flag = jule::new_ptr<_1a737a0d5_Flag>(_1a737a0d5_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait<_1a4955dcd_CommonFlag>> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait<_1a4955dcd_CommonFlag>(_14817_flag, 3)); };
	return _14817_flag;;
}



inline void _1a73e1a53_AddVar(_1a495783b_FlagSet* _self_, jule::Ptr<jule::Str> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1a737d78c_Flag> _17617_flag = _1a73e3b21_addFlagCommon(_self_, _17541_name, _17552_short, _17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}

inline void _1a73e9907_AddVar(_1a495783b_FlagSet* _self_, jule::Ptr<jule::Bool> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1a737a0d5_Flag> _17617_flag = _1a73eb95e_addFlagCommon(_self_, _17541_name, _17552_short, _17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}







std::ostream &operator<<(std::ostream &_Stream, _1a495783b_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_i64__jule_tuple_bool _1a73910a7_parseInteger(_1a495a047_argParser* _self_, jule::Str* _19031_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)> _19039_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((*(_19031_s)).empty()) {
			_case_begin_1a7393b15:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_20939cdb9_HasPrefix((*(_19031_s)), jule::Str("0x", 2))) {
			_case_begin_1a7393e67:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_20939cdb9_HasPrefix((*(_19031_s)), jule::Str("0b", 2))) {
			_case_begin_1a7394088:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_20939cdb9_HasPrefix((*(_19031_s)), jule::Str("0o", 2))) {
			_case_begin_1a7394231:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_19031_s))[0LL] == '0')) {
			_case_begin_1a7394297:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1a739376e:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1a73936a3:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1a739860e_parseInteger(_1a495a047_argParser* _self_, jule::Str* _19031_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)> _19039_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((*(_19031_s)).empty()) {
			_case_begin_1a739b128:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_20939cdb9_HasPrefix((*(_19031_s)), jule::Str("0x", 2))) {
			_case_begin_1a739b47a:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_20939cdb9_HasPrefix((*(_19031_s)), jule::Str("0b", 2))) {
			_case_begin_1a739b59b:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_20939cdb9_HasPrefix((*(_19031_s)), jule::Str("0o", 2))) {
			_case_begin_1a739b744:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_19031_s))[0LL] == '0')) {
			_case_begin_1a739b7aa:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1a739ac82:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1a739abb6:;
	};
	return __jule_func_result;;
}



inline jule::Str _1a495a80b_getData(_1a495a047_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1a495aa4d_processFlag(_1a495a047_argParser* _self_, jule::Trait<_1a4955dcd_CommonFlag>* _21735_flag) {
	{
		auto &_match_expr{ (*(_21735_flag)) };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1a738d5c1:;
			{
				jule::Ptr<_1a737a0d5_Flag> _22021_bf = (*(_21735_flag)).cast_ptr<_1a737a0d5_Flag>(3);;
				(*(_22021_bf.get()._field_data))=(!(_22021_bf.get()._field_default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_1a738d55a:;
	};
	jule::Str _22513_data = _1a495a80b_getData(_self_);;
	if (_22513_data.empty()) {
		return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1a4955dcd_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1a49262dd_Name((*(_21735_flag)))) + jule::Str(": expression missing", 20)), &__jule_any_type5));
	};
	{
		auto &_match_expr{ (*(_21735_flag)) };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1a738ea78:;
			{
				jule::Ptr<_1a736e7a0_Flag> _23221_intf = (*(_21735_flag)).cast_ptr<_1a736e7a0_Flag>(0);;
				jule::Bool _23332_ok = false;;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1a73910a7_parseInteger(_self_, &(_22513_data), jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _23370_s, jule::I64 _23378_base) mutable -> __jule_tuple_i64__jule_tuple_bool {
						__jule_tuple_i64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::I64>(({
							auto except = _1dde9438d_ParseInt(_23370_s, _23378_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LL;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*(_23221_intf.get()._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23332_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23332_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1a4955dcd_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1a49262dd_Name((*(_21735_flag)))) + jule::Str(": expression must be valid signed integer", 41)), &__jule_any_type5));
				};
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1a739032b:;
			{
				jule::Ptr<_1a7373232_Flag> _24021_uintf = (*(_21735_flag)).cast_ptr<_1a7373232_Flag>(1);;
				jule::Bool _24133_ok = false;;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1a739860e_parseInteger(_self_, &(_22513_data), jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _24171_s, jule::I64 _24179_base) mutable -> __jule_tuple_u64__jule_tuple_bool {
						__jule_tuple_u64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(({
							auto except = _1dde93e2b_ParseUint(_24171_s, _24179_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LLU;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*(_24021_uintf.get()._field_data)) = __jule_assign_result.__jule_result_arg0;
					_24133_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_24133_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1a4955dcd_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1a49262dd_Name((*(_21735_flag)))) + jule::Str(": expression must be valid unsigned integer", 43)), &__jule_any_type5));
				};
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1a7390392:;
			{
				jule::Ptr<_1a73768d9_Flag> _24821_ff = (*(_21735_flag)).cast_ptr<_1a73768d9_Flag>(2);;
				(*(_24821_ff.get()._field_data))=static_cast<jule::F64>(({
					auto except = _1dde9a87d_ParseFloat(_22513_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1a4955dcd_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1a49262dd_Name((*(_21735_flag)))) + jule::Str(": expression must be valid floating-point", 41)), &__jule_any_type5));
					} 0;});
				}));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1a7390408:;
			{
				(*((*(_21735_flag)).cast_ptr<_1a737d78c_Flag>(4).get()._field_data))=_22513_data;
			}
		}
		_match_end_1a73902c6:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1a495acc3_singleDash(_1a495a047_argParser* _self_, jule::Str* _25730_arg) {
	if (((*(_25730_arg)).len() == 1LL)) {
		return jule::VoidExceptional(jule::Any(((*(_25730_arg)) + jule::Str(": missing argument", 18)), &__jule_any_type5));
	};
	jule::Slice<jule::I32> _26113_rarg = static_cast<jule::Slice<jule::I32>>((*(_25730_arg))).slice(1LL);;
	{
		auto expr = &(_26113_rarg);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a73a2904:;
		if (it != expr_end) {
			jule::I32 *_26216_r = it;
			{
				jule::Trait<_1a4955dcd_CommonFlag> _26321_flag = _1a4958375_FindFlagShort(&(*(_self_))._field_set, (*(_26216_r)));;
				if ((_26321_flag == nullptr)) {
					return jule::VoidExceptional(jule::Any((((*(_25730_arg)) + jule::Str(": flag is not exist: ", 21)) + jule::Str::from_rune((*(_26216_r)))), &__jule_any_type5));
				};
				({
					auto except = _1a495aa4d_processFlag(_self_, &(_26321_flag));
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_1a73a2904:;
			++it;
			goto _iter_begin_1a73a2904;
		}
		_iter_end_1a73a2904:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1a495b048_doubleDash(_1a495a047_argParser* _self_, jule::Str* _27230_arg) {
	if (((*(_27230_arg)).len() == 2LL)) {
		return jule::VoidExceptional(jule::Any(((*(_27230_arg)) + jule::Str(": missing argument", 18)), &__jule_any_type5));
	};
	jule::Trait<_1a4955dcd_CommonFlag> _27617_flag = _1a4958067_FindFlag(&(*(_self_))._field_set, (*(_27230_arg)).slice(2LL));;
	if ((_27617_flag == nullptr)) {
		return jule::VoidExceptional(jule::Any(((*(_27230_arg)) + jule::Str(": flag is not exist", 19)), &__jule_any_type5));
	};
	({
		auto except = _1a495aa4d_processFlag(_self_, &(_27617_flag));
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1a495b224_tryArg(_1a495a047_argParser* _self_) {
	jule::Str _28413_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_28413_arg[0LL] == '-')) {
		if (((_28413_arg.len() > 1LL) && (_28413_arg[1LL] == '-'))) {
			({
				auto except = _1a495b048_doubleDash(_self_, &(_28413_arg));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _1a495acc3_singleDash(_self_, &(_28413_arg));
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_content; __jule_push_dest.push(_28413_arg); };
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1a495b400_parse(_1a495a047_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1a495b224_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_1a73a792b:;
	}
	_iter_end_1a73a792b:;;
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1a495a047_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a48d4c4c_ObjectCoder> static__1a48d5126_New(jule::Ptr<_1a3e29a01_IR>* _9224_ir, _1a48d33aa_SerializationInfo _9233_info) {
	jule::Ptr<_1a48d4c4c_ObjectCoder> _9317_oc = jule::new_ptr<_1a48d4c4c_ObjectCoder>(_1a48d4c4c_ObjectCoder{._field_ir=(*(_9224_ir)), ._field_info=_9233_info, });;
	_9317_oc.get()._field_ec=static__1a4828c4b_new(&(_9317_oc));
	_9317_oc.get()._field_sc=static__1a4820a45_new(&(_9317_oc));
	_9317_oc.get()._field_tc=static__1a48e3cb1_new(&(_9317_oc));
	_9317_oc.get()._field_dc=static__1a483d5ac_new(_9317_oc);
	return _9317_oc;;
}



inline void _1a48d539b_write(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_, jule::Str _10425_s) {
	_self_.get()._field_Obj+=_10425_s;
}



inline void _1a48d5621_writeR(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_, jule::Str* _10827_s) {
	_self_.get()._field_Obj+=(*(_10827_s));
}



inline void _1a48d57ec_addIndent(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_) {
	(_self_.get()._field_indentBuffer).append("\t", 1);
}



inline void _1a48d59c8_doneIndent(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_) {
	_self_.get()._field_indentBuffer=_self_.get()._field_indentBuffer.slice(0LL, (_self_.get()._field_indentBuffer.len() - 1LL));
}



inline void _1a48d5ba4_indent(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_) {
	_self_.get()._field_Obj+=_self_.get()._field_indentBuffer;
}



inline jule::I64 _1a48d5eb2_findAnyType(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_, jule::Ptr<_1acca4ba2_TypeKind>* _12736_t) {
	{
		auto expr = &(_self_.get()._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a72456ba:;
		if (it != expr_end) {
			jule::I64 _12814_i = it - expr->begin();
			jule::Ptr<_1acca4ba2_TypeKind> _12821_at = *it;
			{
				if (_1acca5367_Equal(_12821_at, (*(_12736_t)))) {
					return _12814_i;;
				};
			}
			_iter_next_1a72456ba:;
			++it;
			_12814_i++;
			goto _iter_begin_1a72456ba;
		}
		_iter_end_1a72456ba:;
	};
	return -1LL;;
}



inline jule::I64 _1a48d62c0_pushAnyType(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_, jule::Ptr<_1acca4ba2_TypeKind> _13635_t) {
	if ((_1acca7b0b_Enum(_13635_t.ptr()) != nullptr)) {
		_13635_t=_1acca7b0b_Enum(_13635_t.ptr()).get()._field_Kind.get()._field_Kind;
	};
	jule::I64 _14017_i = _1a48d5eb2_findAnyType(_self_, &(_13635_t));;
	if ((_14017_i != -1LL)) {
		return _14017_i;;
	};
	_14017_i=static_cast<jule::I64>(_self_.get()._field_anyTypeMap.len());
	{ jule::Slice<jule::Ptr<_1acca4ba2_TypeKind>> &__jule_push_dest = _self_.get()._field_anyTypeMap; __jule_push_dest.push(_13635_t); };
	jule::Str _14613_si = _1ddea4ea3_Itoa(_14017_i);;
	if ((_1acca7633_Sptr(_13635_t.ptr()) != nullptr)) {
		jule::Str _14817_elem_kind = _1a48e8b2e_kind(_self_.get()._field_tc.ptr(), _1acca7633_Sptr(_13635_t.ptr()).get()._field_Elem);;
		jule::Str _14917_kind = _1a48e49e8_asSptr(_self_.get()._field_tc.ptr(), _14817_elem_kind);;
		(_self_.get()._field_anyObj).append("void __jule_any_type", 20);
		_self_.get()._field_anyObj+=_14613_si;
		(_self_.get()._field_anyObj).append("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64);
		_self_.get()._field_anyObj+=_14817_elem_kind;
		(_self_.get()._field_anyObj).append(">().dealloc(); }\n", 17);
		(_self_.get()._field_anyObj).append("struct jule::Any::Type ", 23);
		(_self_.get()._field_anyObj).append("__jule_any_type", 15);
		_self_.get()._field_anyObj+=_14613_si;
		(_self_.get()._field_anyObj).append("{.dealloc=__jule_any_type", 25);
		_self_.get()._field_anyObj+=_14613_si;
		(_self_.get()._field_anyObj).append("_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};\n", 58);
		(_self_.get()._field_anyObj).append("jule::Bool __jule_any_type", 26);
		_self_.get()._field_anyObj+=_14613_si;
		(_self_.get()._field_anyObj).append("_compare(const jule::Any &any, const ", 37);
		_self_.get()._field_anyObj+=_14917_kind;
		(_self_.get()._field_anyObj).append(" &other) { return any.type == &__jule_any_type", 46);
		_self_.get()._field_anyObj+=_14613_si;
		(_self_.get()._field_anyObj).append(" && jule::ptr_equal(any.data.alloc, other.alloc); }\n", 52);
	} else {
		jule::Bool _17517_comparable = _1acca61d1_Comparable(_13635_t.ptr());;
		jule::Str _17617_kind = _1a48e8b2e_kind(_self_.get()._field_tc.ptr(), _13635_t);;
		if (_17617_kind.equal("[<unimplemented_type_kind>]", 27)) {
			jule::outln(_1acca5059_Str(_13635_t.ptr()));
		};
		(_self_.get()._field_anyObj).append("void __jule_any_type", 20);
		_self_.get()._field_anyObj+=_14613_si;
		(_self_.get()._field_anyObj).append("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64);
		_self_.get()._field_anyObj+=_17617_kind;
		(_self_.get()._field_anyObj).append(">().dealloc(); }\n", 17);
		if (_17517_comparable) {
			(_self_.get()._field_anyObj).append("jule::Bool __jule_any_type", 26);
			_self_.get()._field_anyObj+=_14613_si;
			(_self_.get()._field_anyObj).append("_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<", 66);
			_self_.get()._field_anyObj+=_17617_kind;
			(_self_.get()._field_anyObj).append("*>(alloc) == *reinterpret_cast<", 31);
			_self_.get()._field_anyObj+=_17617_kind;
			(_self_.get()._field_anyObj).append("*>(other); }\n", 13);
		};
		(_self_.get()._field_anyObj).append("jule::Str __jule_any_type", 25);
		_self_.get()._field_anyObj+=_14613_si;
		(_self_.get()._field_anyObj).append("_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<", 76);
		if ((_1acca7897_Ptr(_13635_t.ptr()) == nullptr)) {
			(_self_.get()._field_anyObj).append("const ", 6);
			_self_.get()._field_anyObj+=_17617_kind;
		} else {
			_self_.get()._field_anyObj+=_17617_kind;
			(_self_.get()._field_anyObj).append("* const", 7);
		};
		(_self_.get()._field_anyObj).append("*>(alloc)); }\n", 14);
		(_self_.get()._field_anyObj).append("struct jule::Any::Type ", 23);
		(_self_.get()._field_anyObj).append("__jule_any_type", 15);
		_self_.get()._field_anyObj+=_14613_si;
		(_self_.get()._field_anyObj).append("{.dealloc=__jule_any_type", 25);
		_self_.get()._field_anyObj+=_14613_si;
		(_self_.get()._field_anyObj).append("_dealloc, ", 10);
		if (_17517_comparable) {
			(_self_.get()._field_anyObj).append(".eq=__jule_any_type", 19);
			_self_.get()._field_anyObj+=_14613_si;
			(_self_.get()._field_anyObj).append("_eq, ", 5);
		};
		(_self_.get()._field_anyObj).append(".to_str=__jule_any_type", 23);
		_self_.get()._field_anyObj+=_14613_si;
		(_self_.get()._field_anyObj).append("_to_str};\n", 10);
		if (_17517_comparable) {
			(_self_.get()._field_anyObj).append("jule::Bool __jule_any_type", 26);
			_self_.get()._field_anyObj+=_14613_si;
			(_self_.get()._field_anyObj).append("_compare(const jule::Any &any, const ", 37);
			_self_.get()._field_anyObj+=_17617_kind;
			(_self_.get()._field_anyObj).append(" &other) { return any.type == &__jule_any_type", 46);
			_self_.get()._field_anyObj+=_14613_si;
			(_self_.get()._field_anyObj).append(" && __jule_any_type", 19);
			_self_.get()._field_anyObj+=_14613_si;
			(_self_.get()._field_anyObj).append("_eq(any.data.alloc, (void*)&other); }\n", 38);
		};
	};
	return _14017_i;;
}



inline void _1a48d6545_pushResultIns(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_, jule::Ptr<_1acb24d85_FnIns>* _24438_f) {
	jule::Str _24513_s = _1a48ed903_code(_self_.get()._field_tc.get()._field_rc.ptr(), &((*(_24438_f)).get()._field_Result));;
	jule::Bool _24617_ok = false;;
	_self_.get()._field_resultMap.lookup(_24513_s, nullptr, &(_24617_ok));
	if (_24617_ok) {
		return;;
	};
	_self_.get()._field_resultMap[_24513_s]=false;
	jule::Str _25117_obj = jule::Str::alloc(0LL, 128LL);;
	(_25117_obj).append("struct ", 7);
	_25117_obj+=_24513_s;
	(_25117_obj).append(" {\n", 3);
	{
		auto expr = &(_1acca905d_Tup((*(_24438_f)).get()._field_Result.ptr()).get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7257c4e:;
		if (it != expr_end) {
			jule::I64 _25514_i = it - expr->begin();
			jule::Ptr<_1acca4ba2_TypeKind> _25521_t = *it;
			{
				(_25117_obj).append("\t", 1);
				_25117_obj+=_1a48e8b2e_kind(_self_.get()._field_tc.ptr(), _25521_t);
				(_25117_obj).append(" ", 1);
				(_25117_obj).append("__jule_result_arg", 17);
				_25117_obj+=_1ddea4ea3_Itoa(_25514_i);
				(_25117_obj).append(";\n", 2);
			}
			_iter_next_1a7257c4e:;
			++it;
			_25514_i++;
			goto _iter_begin_1a7257c4e;
		}
		_iter_end_1a7257c4e:;
	};
	(_25117_obj).append("};\n", 3);
	{ jule::Slice<jule::Str> &__jule_push_dest = _self_.get()._field_resultDecls; __jule_push_dest.push(_25117_obj); };
}



inline void _1a48d67ba_pushResult(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_, jule::Ptr<_1acb221d4_Fn>* _26735_f) {
	if ((_1acb22646_IsVoid((*(_26735_f)).ptr()) || ((*(_26735_f)).get()._field_Result.get()._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I64 _27117_n = (*(_26735_f)).get()._field_Instances.len();;
	if (((*(_26735_f)).get()._field_Generics.len() == 0LL)) {
		_27117_n=1LL;
	};
	{
		auto expr = (*(_26735_f)).get()._field_Instances.slice(0LL, _27117_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a725b45b:;
		if (it != expr_end) {
			jule::Ptr<_1acb24d85_FnIns> _27521_ins = *it;
			{
				_1a48d6545_pushResultIns(_self_, &(_27521_ins));
			}
			_iter_next_1a725b45b:;
			++it;
			goto _iter_begin_1a725b45b;
		}
		_iter_end_1a725b45b:;
	};
}



inline jule::I64 _1a48d6b72_findTypeOffsetS(_1a48d4c4c_ObjectCoder* _self_, jule::Ptr<_1acb34405_Trait> _28030_t, jule::Ptr<_1acb09d37_StructIns> _28045_s) {
	if ((_28030_t.get()._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a725ca78:;
		if (it != expr_end) {
			jule::Ptr<_1a48d3872_traitHash> *_28416_hash = it;
			{
				if ((((*(_28416_hash)).get()._field_t == _28030_t) && ((*(_28416_hash)).get()._field_s == _28045_s))) {
					return (*(_28416_hash)).get()._field_i;;
				};
			}
			_iter_next_1a725ca78:;
			++it;
			goto _iter_begin_1a725ca78;
		}
		_iter_end_1a725ca78:;
	};
	return -1LL;;
}



inline jule::I64 _1a48d7029_findTypeOffset(_1a48d4c4c_ObjectCoder* _self_, jule::Ptr<_1acb34405_Trait> _29229_t, jule::Ptr<_1acca4ba2_TypeKind> _29244_k) {
	if ((_29229_t.get()._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1acb09d37_StructIns> _29617_s = nullptr;;
	if ((_1acca7633_Sptr(_29244_k.ptr()) != nullptr)) {
		_29244_k=_1acca7633_Sptr(_29244_k.ptr()).get()._field_Elem;
	};
	_29617_s=_1acca8821_Struct(_29244_k.ptr());
	if ((_29617_s == nullptr)) {
		return -1LL;;
	};
	return static_cast<jule::I64>(_1a48d6b72_findTypeOffsetS(_self_, _29229_t, _29617_s));;
}



inline void _1a48d7348_pushAndWriteMaskMapper(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_, jule::Ptr<_1acb34405_Trait> _30746_t1, jule::Ptr<_1acb34405_Trait> _30762_t2) {
	jule::Str _30817_ident = jule::Str("__jule_trait_offset_mapper_", 27);;
	_30817_ident+=_1ddea4876_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30762_t2))), 15LL);
	(_30817_ident).append("_to_", 4);
	_30817_ident+=_1ddea4876_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30746_t1))), 15LL);
	_1a48d5621_writeR(_self_, &(_30817_ident));
	{
		auto expr = &(_self_.get()._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a72624a6:;
		if (it != expr_end) {
			_1a48d3c29_traitCast _31516_m = *it;
			{
				if (((_31516_m._field_t1 == _30746_t1) && (_31516_m._field_t2 == _30762_t2))) {
					return;;
				};
			}
			_iter_next_1a72624a6:;
			++it;
			goto _iter_begin_1a72624a6;
		}
		_iter_end_1a72624a6:;
	};
	{ jule::Slice<_1a48d3c29_traitCast> &__jule_push_dest = _self_.get()._field_traitCastMap; __jule_push_dest.push(_1a48d3c29_traitCast{._field_t1=_30746_t1, ._field_t2=_30762_t2}); };
	;
	(_self_.get()._field_anyObj).append("jule::Int", 9);
	(_self_.get()._field_anyObj).append(" ", 1);
	_self_.get()._field_anyObj+=_30817_ident;
	(_self_.get()._field_anyObj).append("(const jule::Int offset) noexcept { ", 36);
	{
		auto expr = &(_30746_t1.get()._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7264112:;
		if (it != expr_end) {
			jule::Ptr<_1acb07021_Struct> _33421_s1 = *it;
			{
				{
					auto expr = &(_30762_t2.get()._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a7264b4b:;
					if (it != expr_end) {
						jule::Ptr<_1acb07021_Struct> _33520_s2 = *it;
						{
							if ((_33421_s1 == _33520_s2)) {
								{
									auto expr = &(_33421_s1.get()._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1a72658a5:;
									if (it != expr_end) {
										jule::Ptr<_1acb09d37_StructIns> _33733_s1i = *it;
										{
											jule::I64 _33829_i1 = _1a48d6b72_findTypeOffsetS(_self_.ptr(), _30746_t1, _33733_s1i);;
											jule::I64 _33929_i2 = _1a48d6b72_findTypeOffsetS(_self_.ptr(), _30762_t2, _33733_s1i);;
											(_self_.get()._field_anyObj).append("if (offset == ", 14);
											_self_.get()._field_anyObj+=_1ddea4ea3_Itoa(_33929_i2);
											(_self_.get()._field_anyObj).append(") return ", 9);
											_self_.get()._field_anyObj+=_1ddea4ea3_Itoa(_33829_i1);
											(_self_.get()._field_anyObj).append("; ", 2);
										}
										_iter_next_1a72658a5:;
										++it;
										goto _iter_begin_1a72658a5;
									}
									_iter_end_1a72658a5:;
								};
							};
						}
						_iter_next_1a7264b4b:;
						++it;
						goto _iter_begin_1a7264b4b;
					}
					_iter_end_1a7264b4b:;
				};
			}
			_iter_next_1a7264112:;
			++it;
			goto _iter_begin_1a7264112;
		}
		_iter_end_1a7264112:;
	};
	(_self_.get()._field_anyObj).append(" return ", 8);
	_self_.get()._field_anyObj+=_1ddea4ea3_Itoa(0LL);
	(_self_.get()._field_anyObj).append("; }\n", 4);
}



inline void _1a48d75bd_locInfo(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_, jule::Ptr<_2097d15d8_Token>* _35528_t) {
	jule::Str *_35614_loc = &((*(_35528_t)).get()._field_File.get()._field_Path);;
	if (_207305560_Production) {
		{
			
			if (_20939cdb9_HasPrefix((*(_35614_loc)), _2094d2c79_PathStdlib)) {
				_case_begin_1a7268c93:;
				{
					_1a48d539b_write(_self_, _1a483b357_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_35614_loc)).slice((_2093a8798_Dir(_2094d2c79_PathStdlib).len() + 1LL)))));
				}
			}
			else if (_20939cdb9_HasPrefix((*(_35614_loc)), _self_.get()._field_ir.get()._field_Root)) {
				_case_begin_1a7269359:;
				{
					_1a48d539b_write(_self_, _1a483b357_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_35614_loc)).slice((_2093a8798_Dir(_self_.get()._field_ir.get()._field_Root).len() + 1LL)))));
				}
			}
			else {
				_case_begin_1a72688ec:;
				{
					_1a48d539b_write(_self_, _1a483b357_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_35614_loc)))));
				}
			}
			_match_end_1a7268831:;
		};
	} else {
		_1a48d539b_write(_self_, _1a483b357_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_35614_loc)))));
	};
	_1a48d539b_write(_self_, jule::Str(":", 1));
	_1a48d539b_write(_self_, _1ddea4ea3_Itoa((*(_35528_t)).get()._field_Row));
	_1a48d539b_write(_self_, jule::Str(":", 1));
	_1a48d539b_write(_self_, _1ddea4ea3_Itoa((*(_35528_t)).get()._field_Column));
}



inline void _1a48d7799_head(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_) {
	_1a48cabbb_Time _38213_time = static__1a48cb260_Now();;
	_1a48ca528_AbsTime _38313_abs = _1a48cc827_Abs(&_38213_time);;
	_1a48d539b_write(_self_, jule::Str("// Auto generated by JuleC.\n", 28));
	_1a48d539b_write(_self_, jule::Str("// JuleC version: ", 18));
	_1a48d539b_write(_self_, jule::Str("jule0.0.15 @master", 18));
	_1a48d539b_write(_self_, jule::Str("\n", 1));
	_1a48d539b_write(_self_, jule::Str("// Date: ", 9));
	_1a48d539b_write(_self_, _1ddea4876_FmtUint(_38313_abs._field_Day, 10LL));
	_1a48d539b_write(_self_, jule::Str("/", 1));
	_1a48d539b_write(_self_, _1ddea4876_FmtUint(_38313_abs._field_Month, 10LL));
	_1a48d539b_write(_self_, jule::Str("/", 1));
	_1a48d539b_write(_self_, _1ddea4876_FmtUint(_38313_abs._field_Year, 10LL));
	_1a48d539b_write(_self_, jule::Str(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1a48d5621_writeR(_self_, &(_self_.get()._field_info._field_Compiler));
	_1a48d539b_write(_self_, jule::Str(" ", 1));
	_1a48d5621_writeR(_self_, &(_self_.get()._field_info._field_CompilerCommand));
	_1a48d539b_write(_self_, jule::Str("\n\n", 2));
	if (_207305560_Production) {
		_1a48d539b_write(_self_, jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_207304dbc_RC))) {
		_1a48d539b_write(_self_, jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_207305296_Safety))) {
		_1a48d539b_write(_self_, jule::Str("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1a48d7975_links(_self_);
	_1a48d539b_write(_self_, jule::Str("\n\n#include \"", 12));
	_1a48d5621_writeR(_self_, &(_2094d3560_PathApi));
	_1a48d539b_write(_self_, jule::Str("\"\n\n", 3));
}



inline void _1a48d7975_links(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a72733b8:;
		if (it != expr_end) {
			jule::Ptr<_1abcdb39e_ImportInfo> _42016_used = *it;
			{
				{
					
					if ((!(_42016_used.get()._field_Binded))) {
						_case_begin_1a7273d47:;
						{
							goto _iter_next_1a72733b8;
						}
					}
					else if (_209431018_IsStdHeaderPath(_42016_used.get()._field_Path)) {
						_case_begin_1a7273dbe:;
						{
							_1a48d539b_write(_self_, jule::Str("#include ", 9));
							_1a48d5621_writeR(_self_, &(_42016_used.get()._field_Path));
							_1a48d539b_write(_self_, jule::Str("\n", 1));
						}
					}
					else if (_2094312c1_IsValidHeaderExt(_2093a7dd5_Ext(_42016_used.get()._field_Path))) {
						_case_begin_1a7273e46:;
						{
							_1a48d539b_write(_self_, jule::Str("#include \"", 10));
							_1a48d5621_writeR(_self_, &(_42016_used.get()._field_Path));
							_1a48d539b_write(_self_, jule::Str("\"\n", 2));
						}
					}
					_match_end_1a7273c26:;
				};
			}
			_iter_next_1a72733b8:;
			++it;
			goto _iter_begin_1a72733b8;
		}
		_iter_end_1a72733b8:;
	};
}



inline void _1a48d7bea_prepareStructure(_1a48d4c4c_ObjectCoder* _self_, jule::Ptr<_1acb07021_Struct>* _43640_s) {
	{
		auto expr = &((*(_43640_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a727562e:;
		if (it != expr_end) {
			jule::Ptr<_1acb09d37_StructIns> _43721_ins = *it;
			{
				{
					auto expr = &(_43721_ins.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a72768b6:;
					if (it != expr_end) {
						jule::Ptr<_1acb221d4_Fn> _43825_m = *it;
						{
							if (_43825_m.get()._field_Statically) {
								goto _iter_next_1a72768b6;
							};
							{
								auto expr = &(_43825_m.get()._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a7277620:;
								if (it != expr_end) {
									jule::Ptr<_1acb24d85_FnIns> _44229_mins = *it;
									{
										jule::Ptr<_1acb23eb6_ParamIns> _44329_p = _44229_mins.get()._field_Params[0LL];;
										if ((!(_1acb211e4_IsRef(_44329_p.get()._field_Decl.ptr())))) {
											_44329_p.get()._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(jule::new_ptr<_1a48e2d04_customType>(_1a48e2d04_customType{._field_kind=_1a48e4d06_asPtr((*(_self_))._field_tc.ptr(), _1a48e8b2e_kind((*(_self_))._field_tc.ptr(), _44329_p.get()._field_Kind))}), 27)});
										} else {
											_44329_p.get()._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(jule::new_ptr<_1a48e2d04_customType>(_1a48e2d04_customType{._field_kind=_1a48e8b2e_kind((*(_self_))._field_tc.ptr(), _44329_p.get()._field_Kind)}), 27)});
										};
									}
									_iter_next_1a7277620:;
									++it;
									goto _iter_begin_1a7277620;
								}
								_iter_end_1a7277620:;
							};
						}
						_iter_next_1a72768b6:;
						++it;
						goto _iter_begin_1a72768b6;
					}
					_iter_end_1a72768b6:;
				};
			}
			_iter_next_1a727562e:;
			++it;
			goto _iter_begin_1a727562e;
		}
		_iter_end_1a727562e:;
	};
}



inline void _1a48d7dc6_prepareStructures(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7273aa0:;
		if (it != expr_end) {
			jule::Ptr<_1acb07021_Struct> _46321_s = *it;
			{
				if ((_46321_s.get()._field_Token != nullptr)) {
					_1a48d7bea_prepareStructure(_self_.ptr(), &(_46321_s));
				};
			}
			_iter_next_1a7273aa0:;
			++it;
			goto _iter_begin_1a7273aa0;
		}
		_iter_end_1a7273aa0:;
	};
}



inline void _1a48d814b_iterPackages(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_1abcdded9_Package>*)> _47032_f) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a727ae3c:;
		if (it != expr_end) {
			jule::Ptr<_1abcdb39e_ImportInfo> _47121_used = *it;
			{
				if ((!(_47121_used.get()._field_Binded))) {
					_47032_f(&(_47121_used.get()._field_Package));
				};
			}
			_iter_next_1a727ae3c:;
			++it;
			goto _iter_begin_1a727ae3c;
		}
		_iter_end_1a727ae3c:;
	};
	_47032_f(&(_self_.get()._field_ir.get()._field_Main));
}



inline void _1a48d8327_buildTraitMap(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_) {
	_1a48d814b_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1abcdded9_Package>*)>([=](jule::Ptr<_1abcdded9_Package>* _48035_pkg) mutable -> void {
		_1a48e140c_iterFiles(_48035_pkg, jule::Fn<void(jule::Ptr<_1abd59241_SymbolTable>*)>([=](jule::Ptr<_1abd59241_SymbolTable>* _48136_file) mutable -> void {
			{
				auto expr = &((*(_48136_file)).get()._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1a727ded9:;
				if (it != expr_end) {
					jule::Ptr<_1acb34405_Trait> _48229_t = *it;
					{
						if ((_48229_t.get()._field_Token == nullptr)) {
							return;;
						};
						if ((_48229_t.get()._field_Implemented.len() == 0LL)) {
							{ jule::Slice<jule::Ptr<_1a48d3872_traitHash>> &__jule_push_dest = _self_.get()._field_tmap; __jule_push_dest.push(jule::new_ptr<_1a48d3872_traitHash>(_1a48d3872_traitHash{._field_t=_48229_t, ._field_s=nullptr, ._field_i=0LL})); };
							goto _iter_next_1a727ded9;
						};
						jule::I64 _49429_i = 0LL;;
						{
							auto expr = &(_48229_t.get()._field_Implemented);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1a727e76a:;
							if (it != expr_end) {
								jule::Ptr<_1acb07021_Struct> _49533_s = *it;
								{
									{
										auto expr = &(_49533_s.get()._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1a7281618:;
										if (it != expr_end) {
											jule::Ptr<_1acb09d37_StructIns> _49637_ins = *it;
											{
												{ jule::Slice<jule::Ptr<_1a48d3872_traitHash>> &__jule_push_dest = _self_.get()._field_tmap; __jule_push_dest.push(jule::new_ptr<_1a48d3872_traitHash>(_1a48d3872_traitHash{._field_t=_48229_t, ._field_s=_49637_ins, ._field_i=_49429_i})); };
												(_49429_i)++;
											}
											_iter_next_1a7281618:;
											++it;
											goto _iter_begin_1a7281618;
										}
										_iter_end_1a7281618:;
									};
								}
								_iter_next_1a727e76a:;
								++it;
								goto _iter_begin_1a727e76a;
							}
							_iter_end_1a727e76a:;
						};
						_1a48e2111_pushMethodsFromInherits(&(_48229_t), &(_48229_t));
					}
					_iter_next_1a727ded9:;
					++it;
					goto _iter_begin_1a727ded9;
				}
				_iter_end_1a727ded9:;
			};
		}));
	}));
}



inline void _1a48d8503_traitDecls(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_) {
	_1a48d814b_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1abcdded9_Package>*)>([=](jule::Ptr<_1abcdded9_Package>* _51435_pkg) mutable -> void {
		_1a48e140c_iterFiles(_51435_pkg, jule::Fn<void(jule::Ptr<_1abd59241_SymbolTable>*)>([=](jule::Ptr<_1abd59241_SymbolTable>* _51536_file) mutable -> void {
			{
				auto expr = &((*(_51536_file)).get()._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1a72836b4:;
				if (it != expr_end) {
					jule::Ptr<_1acb34405_Trait> _51629_t = *it;
					{
						if ((_51629_t.get()._field_Token == nullptr)) {
							return;;
						};
						_1a48d5ba4_indent(_self_);
						_1a48d539b_write(_self_, jule::Str("struct ", 7));
						_1a48d539b_write(_self_, static__1a4843392_traitDecl(_51629_t));
						_1a48d539b_write(_self_, jule::Str("{};\n", 4));
					}
					_iter_next_1a72836b4:;
					++it;
					goto _iter_begin_1a72836b4;
				}
				_iter_end_1a72836b4:;
			};
		}));
	}));
}



inline void _1a48d8778_structurePlainDecl(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_, jule::Ptr<_1acb07021_Struct>* _52943_s) {
	{
		auto expr = &((*(_52943_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a72830dc:;
		if (it != expr_end) {
			jule::Ptr<_1acb09d37_StructIns> _53021_ins = *it;
			{
				_1a48d539b_write(_self_, jule::Str("struct ", 7));
				_1a48d539b_write(_self_, static__1a4843b78_structureIns(&(_53021_ins)));
				_1a48d539b_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1a72830dc:;
			++it;
			goto _iter_begin_1a72830dc;
		}
		_iter_end_1a72830dc:;
	};
}



inline void _1a48d8954_structurePlainDecls(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7286024:;
		if (it != expr_end) {
			jule::Ptr<_1acb07021_Struct> _53821_s = *it;
			{
				if ((_53821_s.get()._field_Token != nullptr)) {
					_1a48d8778_structurePlainDecl(_self_, &(_53821_s));
				};
			}
			_iter_next_1a7286024:;
			++it;
			goto _iter_begin_1a7286024;
		}
		_iter_end_1a7286024:;
	};
}



inline void _1a48d8bc9_fieldDecl(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_, jule::Ptr<_1acb09342_FieldIns>* _54534_f) {
	_1a48d539b_write(_self_, _1a48e8b2e_kind(_self_.get()._field_tc.ptr(), (*(_54534_f)).get()._field_Kind));
	_1a48d539b_write(_self_, jule::Str(" ", 1));
	_1a48d539b_write(_self_, static__1a4843e20_field(&((*(_54534_f)).get()._field_Decl)));
	if (((*(_54534_f)).get()._field_Default == nullptr)) {
		if (_1a490095a_shouldInitialized(&((*(_54534_f)).get()._field_Kind))) {
			_1a48d539b_write(_self_, jule::Str(" = ", 3));
			_1a483a92d_initExpr(_self_.get()._field_ec, (*(_54534_f)).get()._field_Kind);
		};
	} else {
		_1a48d539b_write(_self_, jule::Str(" = ", 3));
		_1a482b853_possibleRefExpr(_self_.get()._field_ec, (*(_54534_f)).get()._field_Default.get()._field_Model);
	};
	_1a48d539b_write(_self_, jule::Str(";", 1));
}



inline void _1a48d8e4e_structureDestructor(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_, jule::Ptr<_1acb09d37_StructIns>* _56344_s) {
	;
	jule::Ptr<_1acb221d4_Fn> _56613_disposeMethod = _1acb0acd3_FindMethod((*(_56344_s)).ptr(), jule::Str("Dispose", 7), false);;
	jule::Bool _56717_disposed = static__1abd15d57_Dispose(_56613_disposeMethod);;
	if ((!(_56717_disposed))) {
		return;;
	};
	_1a48d539b_write(_self_, jule::Str("~", 1));
	_1a48d539b_write(_self_, static__1a4843b78_structureIns(_56344_s));
	_1a48d539b_write(_self_, jule::Str("(void) { ", 9));
	_1a48d539b_write(_self_, static__1a4842d53_func(&(_56613_disposeMethod)));
	_1a48d539b_write(_self_, jule::Str("(this); }", 9));
}



inline void _1a48d91e6_structureDeriveDefsDecls(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_, jule::Ptr<_1acb09d37_StructIns>* _57945_s) {
	if (_1acb0884c_IsDerives((*(_57945_s)).get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1a48d5ba4_indent(_self_);
		_1a48d539b_write(_self_, _1a483d8ba_cloneFuncDecl(_self_.get()._field_dc.ptr(), &((*(_57945_s)).get()._field_Decl)));
		_1a48d539b_write(_self_, jule::Str(";\n\n", 3));
	};
}



inline void _1a48d9526_structureOperatorEq(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_, jule::Str* _58740_ident, jule::Ptr<_1acb09d37_StructIns>* _58757_s) {
	if ((!((*(_58757_s)).get()._field_Comparable))) {
		return;;
	};
	if (((*(_58757_s)).get()._field_Operators._field_Eq != nullptr)) {
		_1a48d9c0d_structureOperator(_self_, _58740_ident, &((*(_58757_s)).get()._field_Operators._field_Eq), jule::Str("==", 2));
		return;;
	};
	_1a48d5ba4_indent(_self_);
	if (_1acd8acee_Inline) {
		_1a48d539b_write(_self_, jule::Str("inline ", 7));
	};
	_1a48d539b_write(_self_, jule::Str("bool operator==(", 16));
	_1a48d5621_writeR(_self_, _58740_ident);
	_1a48d539b_write(_self_, jule::Str(" _other) {", 10));
	if (((*(_58757_s)).get()._field_Fields.len() > 0LL)) {
		_1a48d57ec_addIndent(_self_);
		_1a48d539b_write(_self_, jule::Str("\n", 1));
		_1a48d5ba4_indent(_self_);
		_1a48d539b_write(_self_, jule::Str("return ", 7));
		_1a48d57ec_addIndent(_self_);
		jule::Bool _61021_writed = false;;
		{
			auto expr = &((*(_58757_s)).get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a729278e:;
			if (it != expr_end) {
				jule::Ptr<_1acb09342_FieldIns> _61125_f = *it;
				{
					jule::Ptr<_1acb09d37_StructIns> _61321_strct = _1acca8821_Struct(_61125_f.get()._field_Kind.ptr());;
					if ((((_61321_strct != nullptr) && (_61321_strct.get()._field_Decl != nullptr)) && _61321_strct.get()._field_Decl.get()._field_Binded)) {
						goto _iter_next_1a729278e;
					};
					if (_61021_writed) {
						_1a48d539b_write(_self_, jule::Str(" &&", 3));
					};
					_61021_writed=true;
					_1a48d539b_write(_self_, jule::Str("\n", 1));
					_1a48d5ba4_indent(_self_);
					_1a48d539b_write(_self_, jule::Str("this->", 6));
					jule::Str _62421_fIdent = static__1a4843e20_field(&(_61125_f.get()._field_Decl));;
					_1a48d5621_writeR(_self_, &(_62421_fIdent));
					_1a48d539b_write(_self_, jule::Str(" == _other.", 11));
					_1a48d5621_writeR(_self_, &(_62421_fIdent));
				}
				_iter_next_1a729278e:;
				++it;
				goto _iter_begin_1a729278e;
			}
			_iter_end_1a729278e:;
		};
		_1a48d59c8_doneIndent(_self_);
		if ((!(_61021_writed))) {
			_1a48d539b_write(_self_, jule::Str("true", 4));
		};
		_1a48d539b_write(_self_, jule::Str(";\n", 2));
		_1a48d59c8_doneIndent(_self_);
		_1a48d5ba4_indent(_self_);
		_1a48d539b_write(_self_, jule::Str("}", 1));
	} else {
		_1a48d539b_write(_self_, jule::Str(" return true; }", 15));
	};
	_1a48d539b_write(_self_, jule::Str("\n\n", 2));
}



inline void _1a48d9845_structureOperatorNotEq(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_, jule::Str* _64343_ident, jule::Ptr<_1acb09d37_StructIns>* _64360_s) {
	if ((!((*(_64360_s)).get()._field_Comparable))) {
		return;;
	};
	_1a48d5ba4_indent(_self_);
	if (_1acd8acee_Inline) {
		_1a48d539b_write(_self_, jule::Str("inline ", 7));
	};
	_1a48d539b_write(_self_, jule::Str("bool operator!=(", 16));
	_1a48d5621_writeR(_self_, _64343_ident);
	_1a48d539b_write(_self_, jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1a48d9c0d_structureOperator(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_, jule::Str* _65738_ident, jule::Ptr<_1acb24d85_FnIns>* _65755_f, jule::Str _65766_op) {
	if (((*(_65755_f)) == nullptr)) {
		return;;
	};
	jule::Bool _66213_unary = ((*(_65755_f)).get()._field_Params.len() == 1LL);;
	jule::Bool _66313_assignment = _1acb22646_IsVoid((*(_65755_f)).get()._field_Decl.ptr());;
	_1a48d5ba4_indent(_self_);
	if (_1acd8acee_Inline) {
		_1a48d539b_write(_self_, jule::Str("inline ", 7));
	};
	if (_66313_assignment) {
		_1a48d5621_writeR(_self_, _65738_ident);
		_1a48d539b_write(_self_, jule::Str("&", 1));
	} else {
		if ((_1acca73be_Prim((*(_65755_f)).get()._field_Result.ptr()) == nullptr)) {
			_1a48d5621_writeR(_self_, _65738_ident);
		} else {
			_1a48d539b_write(_self_, jule::Str("jule::Bool", 10));
		};
	};
	_1a48d539b_write(_self_, jule::Str(" operator", 9));
	_1a48d5621_writeR(_self_, &(_65766_op));
	_1a48d539b_write(_self_, jule::Str("(", 1));
	if ((!(_66213_unary))) {
		jule::Ptr<_1acb23eb6_ParamIns> _68521_p = (*(_65755_f)).get()._field_Params[1LL];;
		_1a48d539b_write(_self_, _1a48e7ac8_paramIns(_self_.get()._field_tc.ptr(), &(_68521_p)));
		_1a48d539b_write(_self_, jule::Str(" _other", 7));
	};
	_1a48d539b_write(_self_, jule::Str(") { ", 4));
	if ((!(_66313_assignment))) {
		_1a48d539b_write(_self_, jule::Str("return ", 7));
	};
	_1a48d539b_write(_self_, static__1a48430ea_funcIns(_65755_f));
	if ((!(_66213_unary))) {
		_1a48d539b_write(_self_, jule::Str("(this, _other); ", 16));
		if (_66313_assignment) {
			_1a48d539b_write(_self_, jule::Str("return *this; ", 14));
		};
		_1a48d539b_write(_self_, jule::Str("}", 1));
	} else {
		_1a48d539b_write(_self_, jule::Str("(this); }", 9));
	};
	_1a48d539b_write(_self_, jule::Str("\n\n", 2));
}



inline void _1a48d9e83_structureOperators(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_, jule::Ptr<_1acb09d37_StructIns>* _70643_s) {
	jule::Str _70713_ident = static__1a4843b78_structureIns(_70643_s);;
	_1a48d9526_structureOperatorEq(_self_, &(_70713_ident), _70643_s);
	_1a48d9845_structureOperatorNotEq(_self_, &(_70713_ident), _70643_s);
	_1a48d9c0d_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_Gt), jule::Str(">", 1));
	_1a48d9c0d_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_GtEq), jule::Str(">=", 2));
	_1a48d9c0d_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_Lt), jule::Str("<", 1));
	_1a48d9c0d_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_LtEq), jule::Str("<=", 2));
	_1a48d9c0d_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_Shl), jule::Str("<<", 2));
	_1a48d9c0d_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_Shr), jule::Str(">>", 2));
	_1a48d9c0d_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_Add), jule::Str("+", 1));
	_1a48d9c0d_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_Sub), jule::Str("-", 1));
	_1a48d9c0d_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_Div), jule::Str("/", 1));
	_1a48d9c0d_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_Mul), jule::Str("*", 1));
	_1a48d9c0d_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_Mod), jule::Str("%", 1));
	_1a48d9c0d_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_BitAnd), jule::Str("&", 1));
	_1a48d9c0d_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_BitOr), jule::Str("|", 1));
	_1a48d9c0d_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_BitXor), jule::Str("^", 1));
	_1a48d9c0d_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_Neg), jule::Str("-", 1));
	_1a48d9c0d_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_Pos), jule::Str("+", 1));
	_1a48d9c0d_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_BitNot), jule::Str("~", 1));
	_1a48d9c0d_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_AddAssign), jule::Str("+=", 2));
	_1a48d9c0d_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_SubAssign), jule::Str("-=", 2));
	_1a48d9c0d_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_DivAssign), jule::Str("/=", 2));
	_1a48d9c0d_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_MulAssign), jule::Str("*=", 2));
	_1a48d9c0d_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_ModAssign), jule::Str("%=", 2));
	_1a48d9c0d_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_ShlAssign), jule::Str("<<=", 3));
	_1a48d9c0d_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_ShrAssign), jule::Str(">>=", 3));
	_1a48d9c0d_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_BitOrAssign), jule::Str("|=", 2));
	_1a48d9c0d_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_BitAndAssign), jule::Str("&=", 2));
	_1a48d9c0d_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_BitXorAssign), jule::Str("^=", 2));
}



inline void _1a48da208_structureInsDecl(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_, jule::Ptr<_1acb09d37_StructIns>* _74541_s) {
	if (((*(_74541_s)).get()._field_Methods.len() > 0LL)) {
		{
			auto expr = &((*(_74541_s)).get()._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a72ab984:;
			if (it != expr_end) {
				jule::Ptr<_1acb221d4_Fn> _74725_m = *it;
				{
					_1a48d67ba_pushResult(_self_, &(_74725_m));
					_1a48db33b_funcDecl(_self_, &(_74725_m), false);
				}
				_iter_next_1a72ab984:;
				++it;
				goto _iter_begin_1a72ab984;
			}
			_iter_end_1a72ab984:;
		};
	};
	_1a48d539b_write(_self_, jule::Str("struct ", 7));
	jule::Str _75413_outIdent = static__1a4843b78_structureIns(_74541_s);;
	_1a48d5621_writeR(_self_, &(_75413_outIdent));
	_1a48d539b_write(_self_, jule::Str(" {\n", 3));
	_1a48d57ec_addIndent(_self_);
	{
		auto expr = &((*(_74541_s)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a72ad5e0:;
		if (it != expr_end) {
			jule::Ptr<_1acb09342_FieldIns> _76021_f = *it;
			{
				_1a48d5ba4_indent(_self_);
				_1a48d8bc9_fieldDecl(_self_, &(_76021_f));
				_1a48d539b_write(_self_, jule::Str("\n", 1));
			}
			_iter_next_1a72ad5e0:;
			++it;
			goto _iter_begin_1a72ad5e0;
		}
		_iter_end_1a72ad5e0:;
	};
	_1a48d5ba4_indent(_self_);
	_1a48d8e4e_structureDestructor(_self_, _74541_s);
	_1a48d539b_write(_self_, jule::Str("\n\n", 2));
	_1a48d91e6_structureDeriveDefsDecls(_self_, _74541_s);
	_1a48d9e83_structureOperators(_self_, _74541_s);
	_1a48d539b_write(_self_, jule::Str("\n", 1));
	_1a48d59c8_doneIndent(_self_);
	_1a48d5ba4_indent(_self_);
	_1a48d539b_write(_self_, jule::Str("};", 2));
}



inline void _1a48da47d_structureDecl(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_, jule::Ptr<_1acb07021_Struct>* _78038_s) {
	{
		auto expr = &((*(_78038_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a72b1291:;
		if (it != expr_end) {
			jule::Ptr<_1acb09d37_StructIns> _78121_ins = *it;
			{
				_1a48da208_structureInsDecl(_self_, &(_78121_ins));
			}
			_iter_next_1a72b1291:;
			++it;
			goto _iter_begin_1a72b1291;
		}
		_iter_end_1a72b1291:;
	};
}



inline void _1a48da659_structureDecls(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a72b19cd:;
		if (it != expr_end) {
			jule::Ptr<_1acb07021_Struct> _78721_s = *it;
			{
				if ((_78721_s.get()._field_Token != nullptr)) {
					_1a48da47d_structureDecl(_self_, &(_78721_s));
					_1a48d539b_write(_self_, jule::Str("\n", 1));
				};
			}
			_iter_next_1a72b19cd:;
			++it;
			goto _iter_begin_1a72b19cd;
		}
		_iter_end_1a72b19cd:;
	};
}



inline void _1a48da8ce_paramsDecls(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1acb23eb6_ParamIns>>* _79536_params) {
	if (((*(_79536_params)).len() == 0LL)) {
		_1a48d539b_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1a48d539b_write(_self_, jule::Str("(", 1));
	{
		auto expr = _79536_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a72b3caa:;
		if (it != expr_end) {
			jule::I64 _80214_i = it - expr->begin();
			jule::Ptr<_1acb23eb6_ParamIns> _80221_p = *it;
			{
				_1a48d539b_write(_self_, _1a48e7ac8_paramIns(_self_.get()._field_tc.ptr(), &(_80221_p)));
				if ((((*(_79536_params)).len() - _80214_i) > 1LL)) {
					_1a48d539b_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1a72b3caa:;
			++it;
			_80214_i++;
			goto _iter_begin_1a72b3caa;
		}
		_iter_end_1a72b3caa:;
	};
	_1a48d539b_write(_self_, jule::Str(")", 1));
}



inline void _1a48dabed_funcHead(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_, jule::Ptr<_1acb24d85_FnIns>* _81233_f, jule::Bool _81244_ptr) {
	if ((((!(_81244_ptr)) && _1acd8acee_Inline) && (!(_1acb22b1e_IsEntryPoint((*(_81233_f)).get()._field_Decl.ptr()))))) {
		_1a48d539b_write(_self_, jule::Str("inline ", 7));
	};
	_1a48e8205_funcInsResult(_self_.get()._field_tc.ptr(), &(_self_.get()._field_Obj), _81233_f);
	if (_81244_ptr) {
		_1a48d539b_write(_self_, jule::Str("(*", 2));
		_1a48d539b_write(_self_, static__1a48430ea_funcIns(_81233_f));
		_1a48d539b_write(_self_, jule::Str(")", 1));
	} else {
		_1a48d539b_write(_self_, jule::Str(" ", 1));
		_1a48d539b_write(_self_, static__1a48430ea_funcIns(_81233_f));
	};
}



inline void _1a48db01c_funcDeclIns(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_, jule::Ptr<_1acb24d85_FnIns>* _82736_f, jule::Bool _82747_ptr) {
	_1a48d5ba4_indent(_self_);
	_1a48dabed_funcHead(_self_, _82736_f, _82747_ptr);
	_1a48da8ce_paramsDecls(_self_, &((*(_82736_f)).get()._field_Params));
	_1a48d539b_write(_self_, jule::Str(";\n", 2));
}



inline void _1a48db33b_funcDecl(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_, jule::Ptr<_1acb221d4_Fn>* _83433_f, jule::Bool _83441_ptr) {
	{
		auto expr = &((*(_83433_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a72b9b5c:;
		if (it != expr_end) {
			jule::Ptr<_1acb24d85_FnIns> _83521_c = *it;
			{
				_1a48db01c_funcDeclIns(_self_, &(_83521_c), _83441_ptr);
			}
			_iter_next_1a72b9b5c:;
			++it;
			goto _iter_begin_1a72b9b5c;
		}
		_iter_end_1a72b9b5c:;
	};
}



inline void _1a48db704_funcDeclTrait(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_, jule::Ptr<_1acb34405_Trait>* _84038_t, jule::Ptr<_1acb221d4_Fn>* _84054_f, jule::Bool _84062_ptr) {
	{
		auto expr = &((*(_84054_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a72bacc3:;
		if (it != expr_end) {
			jule::Ptr<_1acb24d85_FnIns> _84121_c = *it;
			{
				jule::Ptr<_1acca4ba2_TypeKind> _84221_k = _84121_c.get()._field_Params[0LL].get()._field_Kind;;
				_84121_c.get()._field_Params[0LL].get()._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>((*(_84038_t)), 2)});
				_1a48db01c_funcDeclIns(_self_, &(_84121_c), _84062_ptr);
				_84121_c.get()._field_Params[0LL].get()._field_Kind=_84221_k;
			}
			_iter_next_1a72bacc3:;
			++it;
			goto _iter_begin_1a72bacc3;
		}
		_iter_end_1a72bacc3:;
	};
}



inline void _1a48db8d0_funcDecls(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_) {
	_1a48d814b_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1abcdded9_Package>*)>([=](jule::Ptr<_1abcdded9_Package>* _85035_pkg) mutable -> void {
		_1a48e140c_iterFiles(_85035_pkg, jule::Fn<void(jule::Ptr<_1abd59241_SymbolTable>*)>([=](jule::Ptr<_1abd59241_SymbolTable>* _85136_file) mutable -> void {
			{
				auto expr = &((*(_85136_file)).get()._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1a72be920:;
				if (it != expr_end) {
					jule::Ptr<_1acb221d4_Fn> _85229_f = *it;
					{
						if (((!(_85229_f.get()._field_Binded)) && (_85229_f.get()._field_Token != nullptr))) {
							_1a48d67ba_pushResult(_self_, &(_85229_f));
							_1a48db33b_funcDecl(_self_, &(_85229_f), false);
						};
					}
					_iter_next_1a72be920:;
					++it;
					goto _iter_begin_1a72be920;
				}
				_iter_end_1a72be920:;
			};
		}));
	}));
}



inline void _1a48dbbee_traitDataTypeMethods(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_, jule::Ptr<_1acb34405_Trait>* _86245_owner, jule::Ptr<_1acb34405_Trait>* _86265_t) {
	{
		auto expr = &((*(_86265_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a72be58a:;
		if (it != expr_end) {
			jule::Ptr<_1acb221d4_Fn> _86321_m = *it;
			{
				jule::Ptr<_1acb24d85_FnIns> _86421_ins = _86321_m.get()._field_Instances[0LL];;
				jule::Ptr<_1acb23eb6_ParamIns> _86521_p = _86421_ins.get()._field_Params[0LL];;
				_86521_p.get()._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>((*(_86265_t)), 2)});
				{
					auto expr = _86421_ins.get()._field_Params.slice(1LL);
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_1a72c1823:;
					if (it != expr_end) {
						jule::I64 _86918_i = it - expr.begin();
						jule::Ptr<_1acb23eb6_ParamIns> _86925_ip = *it;
						{
							if (_2097d4124_IsAnonIdent(_86925_ip.get()._field_Decl.get()._field_Ident)) {
								_86925_ip.get()._field_Decl.get()._field_Ident=(jule::Str("_", 1) + _1ddea4ea3_Itoa(_86918_i));
							};
						}
						_iter_next_1a72c1823:;
						++it;
						_86918_i++;
						goto _iter_begin_1a72c1823;
					}
					_iter_end_1a72c1823:;
				};
				if ((!(_207305560_Production))) {
					jule::Ptr<_1acb23eb6_ParamIns> _87525_lp = _86421_ins.get()._field_Params[(_86421_ins.get()._field_Params.len() - 1LL)];;
					{
						auto &_match_expr{ _87525_lp.get()._field_Kind.get()._field_Kind };
						
						if (_match_expr.type_is(true, 27)) {
							_case_begin_1a72c5dbb:;
							{
								goto _match_end_1a72c47e3;
							}
						}
						else {
							_case_begin_1a72c4936:;
							{
								{ jule::Slice<jule::Ptr<_1acb23eb6_ParamIns>> &__jule_push_dest = _86421_ins.get()._field_Params; __jule_push_dest.push(jule::new_ptr<_1acb23eb6_ParamIns>(_1acb23eb6_ParamIns{._field_Decl=jule::new_ptr<_1acb20897_Param>(_1acb20897_Param{._field_Ident=jule::Str("__file", 6)}), ._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(jule::new_ptr<_1a48e2d04_customType>(_1a48e2d04_customType{._field_kind=jule::Str("const char*", 11)}), 27)})})); };
							}
						}
						_match_end_1a72c47e3:;
					};
				};
				_1a48d67ba_pushResult(_self_, &(_86321_m));
				_1a48db704_funcDeclTrait(_self_, _86245_owner, &(_86321_m), true);
			}
			_iter_next_1a72be58a:;
			++it;
			goto _iter_begin_1a72be58a;
		}
		_iter_end_1a72be58a:;
	};
}



inline void _1a48dbdca_traitDataTypes(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_) {
	_1a48d814b_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1abcdded9_Package>*)>([=](jule::Ptr<_1abcdded9_Package>* _89835_pkg) mutable -> void {
		_1a48e140c_iterFiles(_89835_pkg, jule::Fn<void(jule::Ptr<_1abd59241_SymbolTable>*)>([=](jule::Ptr<_1abd59241_SymbolTable>* _89936_file) mutable -> void {
			{
				auto expr = &((*(_89936_file)).get()._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1a72c7b15:;
				if (it != expr_end) {
					jule::Ptr<_1acb34405_Trait> _90029_t = *it;
					{
						if ((_90029_t.get()._field_Token == nullptr)) {
							return;;
						};
						if ((_90029_t.get()._field_Methods.len() == 0LL)) {
							goto _iter_next_1a72c7b15;
						};
						_1a48d539b_write(_self_, jule::Str("struct ", 7));
						_1a48d539b_write(_self_, static__1a4843392_traitDecl(_90029_t));
						_1a48d539b_write(_self_, jule::Str("MptrData", 8));
						_1a48d539b_write(_self_, jule::Str(" {\n", 3));
						_1a48d57ec_addIndent(_self_);
						_1a48dbbee_traitDataTypeMethods(_self_, &(_90029_t), &(_90029_t));
						_1a48d59c8_doneIndent(_self_);
						_1a48d5ba4_indent(_self_);
						_1a48d539b_write(_self_, jule::Str("};\n\n", 4));
					}
					_iter_next_1a72c7b15:;
					++it;
					goto _iter_begin_1a72c7b15;
				}
				_iter_end_1a72c7b15:;
			};
		}));
	}));
}



inline void _1a48dc150_paramIns(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_, jule::Ptr<_1acb23eb6_ParamIns>* _92133_p) {
	_1a48d539b_write(_self_, _1a48e7ac8_paramIns(_self_.get()._field_tc.ptr(), _92133_p));
	_1a48d539b_write(_self_, jule::Str(" ", 1));
	_1a48d539b_write(_self_, static__1a4843639_param(&((*(_92133_p)).get()._field_Decl)));
}



inline void _1a48dc3c5_paramsIns(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1acb23eb6_ParamIns>>* _92734_params) {
	if (((*(_92734_params)).len() == 0LL)) {
		_1a48d539b_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1a48d539b_write(_self_, jule::Str("(", 1));
	{
		auto expr = _92734_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a72cbe05:;
		if (it != expr_end) {
			jule::I64 _93314_i = it - expr->begin();
			jule::Ptr<_1acb23eb6_ParamIns> _93321_p = *it;
			{
				_1a48dc150_paramIns(_self_, &(_93321_p));
				if ((((*(_92734_params)).len() - _93314_i) > 1LL)) {
					_1a48d539b_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1a72cbe05:;
			++it;
			_93314_i++;
			goto _iter_begin_1a72cbe05;
		}
		_iter_end_1a72cbe05:;
	};
	_1a48d539b_write(_self_, jule::Str(")", 1));
}



inline void _1a48dc6e4_varInitExpr(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_, jule::Ptr<_1abd1497c_Var>* _94236_v, jule::Fn<void(void)> _94245_init) {
	if ((*(_94236_v)).get()._field_Statically) {
		_1a48d539b_write(_self_, jule::Str("static ", 7));
	};
	_1a48d539b_write(_self_, _1a48e8b2e_kind(_self_.get()._field_tc.ptr(), (*(_94236_v)).get()._field_Kind.get()._field_Kind));
	_1a48d539b_write(_self_, jule::Str(" ", 1));
	if ((*(_94236_v)).get()._field_Reference) {
		_1a48d539b_write(_self_, jule::Str("*", 1));
	};
	_1a48d539b_write(_self_, static__1a48441b7_var((*(_94236_v))));
	if ((_94245_init != nullptr)) {
		_1a48d539b_write(_self_, jule::Str(" = ", 3));
		_94245_init();
	};
	_1a48d539b_write(_self_, jule::Str(";", 1));
}



inline void _1a48dc969_var(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_, jule::Ptr<_1abd1497c_Var> _96027_v) {
	if (_2097d3d7c_IsIgnoreIdent(_96027_v.get()._field_Ident)) {
		return;;
	};
	if (((_96027_v.get()._field_Value != nullptr) && (_96027_v.get()._field_Value.get()._field_Expr != nullptr))) {
		if ((_96027_v.get()._field_Value.get()._field_Data.get()._field_Model != nullptr)) {
			if (_96027_v.get()._field_Reference) {
				_1a48dc6e4_varInitExpr(_self_, &(_96027_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1a48d539b_write(_self_, jule::Str("&(", 2));
					_1a483a6a8_model(_self_.get()._field_ec, _96027_v.get()._field_Value.get()._field_Data.get()._field_Model);
					_1a48d539b_write(_self_, jule::Str(")", 1));
				}));
			} else {
				_1a48dc6e4_varInitExpr(_self_, &(_96027_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1a482b853_possibleRefExpr(_self_.get()._field_ec, _96027_v.get()._field_Value.get()._field_Data.get()._field_Model);
				}));
			};
			return;;
		};
		_1a48dc6e4_varInitExpr(_self_, &(_96027_v), nullptr);
		return;;
	};
	if (_96027_v.get()._field_Reference) {
		_1a48dc6e4_varInitExpr(_self_, &(_96027_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1a48d539b_write(_self_, jule::Str("nullptr", 7));
		}));
		return;;
	};
	if (_1a490095a_shouldInitialized(&(_96027_v.get()._field_Kind.get()._field_Kind))) {
		_1a48dc6e4_varInitExpr(_self_, &(_96027_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1a483a92d_initExpr(_self_.get()._field_ec, _96027_v.get()._field_Kind.get()._field_Kind);
		}));
		return;;
	};
	_1a48dc6e4_varInitExpr(_self_, &(_96027_v), nullptr);
}



inline void _1a48dcbde_funcIns(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_, jule::Ptr<_1acb24d85_FnIns>* _99132_f) {
	_1a48dabed_funcHead(_self_, _99132_f, false);
	_1a48dc3c5_paramsIns(_self_, &((*(_99132_f)).get()._field_Params));
	_1a48d539b_write(_self_, jule::Str(" ", 1));
	_1a4825c6a_funcScope(_self_.get()._field_sc, (*(_99132_f)));
	if (((*(_99132_f)).get()._field_Scope != nullptr)) {
		_1a48d539b_write(_self_, jule::Str("\n\n", 2));
	};
}



inline void _1a48dce64_func(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_, jule::Ptr<_1acb221d4_Fn>* _100129_f) {
	{
		auto expr = &((*(_100129_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a72d9561:;
		if (it != expr_end) {
			jule::Ptr<_1acb24d85_FnIns> _100221_ins = *it;
			{
				_1a48dcbde_funcIns(_self_, &(_100221_ins));
			}
			_iter_next_1a72d9561:;
			++it;
			goto _iter_begin_1a72d9561;
		}
		_iter_end_1a72d9561:;
	};
}



inline void _1a48dd283_funcTrait(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_, jule::Ptr<_1a48d3872_traitHash>* _100734_hash, jule::Ptr<_1acb221d4_Fn>* _100757_f) {
	jule::Str _100813_ident = (*(_100757_f)).get()._field_Ident;;
	{
		auto expr = &((*(_100757_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a72da8b4:;
		if (it != expr_end) {
			jule::Ptr<_1acb24d85_FnIns> _100921_ins = *it;
			{
				_100921_ins.get()._field_Scope=nullptr;
				(*(_100757_f)).get()._field_Ident=_100813_ident;
				((*(_100757_f)).get()._field_Ident).append("_", 1);
				(*(_100757_f)).get()._field_Ident+=(*(_100734_hash)).get()._field_t.get()._field_Ident;
				((*(_100757_f)).get()._field_Ident).append("_", 1);
				(*(_100757_f)).get()._field_Ident+=_1ddea4ea3_Itoa((*(_100734_hash)).get()._field_i);
				jule::Ptr<_1acca4ba2_TypeKind> _101821_k = _100921_ins.get()._field_Params[0LL].get()._field_Kind;;
				_100921_ins.get()._field_Params[0LL].get()._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>((*(_100734_hash)).get()._field_t, 2)});
				_1a48dcbde_funcIns(_self_, &(_100921_ins));
				_100921_ins.get()._field_Params[0LL].get()._field_Kind=_101821_k;
			}
			_iter_next_1a72da8b4:;
			++it;
			goto _iter_begin_1a72da8b4;
		}
		_iter_end_1a72da8b4:;
	};
	(*(_100757_f)).get()._field_Ident=_100813_ident;
}



inline void _1a48dd5a2_traitWrapper(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_, jule::Ptr<_1acb221d4_Fn>* _102637_m, jule::Ptr<_1a48d3872_traitHash>* _102650_hash) {
	_1a48dd283_funcTrait(_self_, _102650_hash, _102637_m);
	if (((*(_102650_hash)).get()._field_s == nullptr)) {
		if (_207305560_Production) {
			_1a48d539b_write(_self_, jule::Str(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
		} else {
			_1a48d539b_write(_self_, jule::Str(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
		};
		return;;
	};
	jule::Bool _103813_ptr = (!(_1acb211e4_IsRef((*(_102637_m)).get()._field_Params[0LL].ptr())));;
	jule::Ptr<_1acb221d4_Fn> _104017_sm = _1acb0acd3_FindMethod((*(_102650_hash)).get()._field_s.ptr(), (*(_102637_m)).get()._field_Ident, false);;
	if (((_104017_sm == nullptr) || (_104017_sm.get()._field_Instances.len() == 0LL))) {
		return;;
	};
	_1a48d57ec_addIndent(_self_);
	_1a48d539b_write(_self_, jule::Str("{\n", 2));
	_1a48d5ba4_indent(_self_);
	if ((_104017_sm.get()._field_Exceptional || (!(_1acb22646_IsVoid(_104017_sm.ptr()))))) {
		_1a48d539b_write(_self_, jule::Str("return ", 7));
	};
	_1a48d539b_write(_self_, static__1a4842d53_func(&(_104017_sm)));
	_1a48d539b_write(_self_, jule::Str("(", 1));
	if (_103813_ptr) {
		_1a48d539b_write(_self_, jule::Str("_self_.safe_ptr<", 16));
		_1a48d539b_write(_self_, _1a48e719e_structureIns(_self_.get()._field_tc.ptr(), (*(_102650_hash)).get()._field_s));
		_1a48d539b_write(_self_, jule::Str(">(", 2));
		if ((!(_207305560_Production))) {
			_1a48d539b_write(_self_, jule::Str("_00___file", 10));
		};
		_1a48d539b_write(_self_, jule::Str(")", 1));
	} else {
		_1a48d539b_write(_self_, jule::Str("_self_.data.as<", 15));
		_1a48d539b_write(_self_, _1a48e6d91_structure(_self_.get()._field_tc.ptr(), _104017_sm.get()._field_Owner));
		_1a48d539b_write(_self_, jule::Str(">()", 3));
	};
	{
		auto expr = (*(_102637_m)).get()._field_Params.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a72e3438:;
		if (it != expr_end) {
			jule::Ptr<_1acb20897_Param> _106616_mp = *it;
			{
				_1a48d539b_write(_self_, jule::Str(", ", 2));
				_1a48d539b_write(_self_, static__1a4843639_param(&(_106616_mp)));
			}
			_iter_next_1a72e3438:;
			++it;
			goto _iter_begin_1a72e3438;
		}
		_iter_end_1a72e3438:;
	};
	_1a48d539b_write(_self_, jule::Str(");\n}\n", 5));
	_1a48d59c8_doneIndent(_self_);
}



inline void _1a48dd77d_traitWrappers(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a72e6d98:;
		if (it != expr_end) {
			jule::Ptr<_1a48d3872_traitHash> _107521_hash = *it;
			{
				{
					auto expr = &(_107521_hash.get()._field_t.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a72e774a:;
					if (it != expr_end) {
						jule::Ptr<_1acb221d4_Fn> _107625_m = *it;
						{
							_1a48dd5a2_traitWrapper(_self_, &(_107625_m), &(_107521_hash));
						}
						_iter_next_1a72e774a:;
						++it;
						goto _iter_begin_1a72e774a;
					}
					_iter_end_1a72e774a:;
				};
			}
			_iter_next_1a72e6d98:;
			++it;
			goto _iter_begin_1a72e6d98;
		}
		_iter_end_1a72e6d98:;
	};
}



inline void _1a48dda9c_traitDataMethods(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_, jule::Ptr<_1acb34405_Trait>* _108241_t, jule::Ptr<_1a48d3872_traitHash>* _108253_hash) {
	{
		auto expr = &((*(_108241_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a72e7eed:;
		if (it != expr_end) {
			jule::Ptr<_1acb221d4_Fn> _108321_m = *it;
			{
				jule::Str _108417_mIdent = static__1a4842d53_func(&(_108321_m));;
				_1a48d5ba4_indent(_self_);
				_1a48d539b_write(_self_, jule::Str(".", 1));
				_1a48d5621_writeR(_self_, &(_108417_mIdent));
				_1a48d539b_write(_self_, jule::Str("=", 1));
				_1a48d5621_writeR(_self_, &(_108417_mIdent));
				_1a48d539b_write(_self_, jule::Str("_", 1));
				_1a48d5621_writeR(_self_, &((*(_108253_hash)).get()._field_t.get()._field_Ident));
				_1a48d539b_write(_self_, jule::Str("_", 1));
				_1a48d539b_write(_self_, _1ddea4ea3_Itoa((*(_108253_hash)).get()._field_i));
				_1a48d539b_write(_self_, jule::Str(",\n", 2));
			}
			_iter_next_1a72e7eed:;
			++it;
			goto _iter_begin_1a72e7eed;
		}
		_iter_end_1a72e7eed:;
	};
}



inline void _1a48dddbb_traitData(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_, jule::Ptr<_1a48d3872_traitHash>* _109834_hash, jule::Ptr<_1acb34405_Trait>* _109857_old) {
	if (((*(_109834_hash)).get()._field_t.get()._field_Methods.len() == 0LL)) {
		return;;
	};
	jule::Str _110213_ident = static__1a4843392_traitDecl((*(_109834_hash)).get()._field_t);;
	if (((*(_109834_hash)).get()._field_t != (*(_109857_old)))) {
		if (((*(_109857_old)) != nullptr)) {
			_1a48d59c8_doneIndent(_self_);
			_1a48d5ba4_indent(_self_);
			_1a48d539b_write(_self_, jule::Str("};\n", 3));
		};
		_1a48d539b_write(_self_, jule::Str("static ", 7));
		_1a48d5621_writeR(_self_, &(_110213_ident));
		_1a48d539b_write(_self_, jule::Str("MptrData ", 9));
		_1a48d5621_writeR(_self_, &(_110213_ident));
		_1a48d539b_write(_self_, jule::Str("_mptr_data[] = {\n", 17));
		(*(_109857_old))=(*(_109834_hash)).get()._field_t;
		_1a48d57ec_addIndent(_self_);
	};
	_1a48d5ba4_indent(_self_);
	_1a48d539b_write(_self_, jule::Str("{\n", 2));
	_1a48d57ec_addIndent(_self_);
	_1a48dda9c_traitDataMethods(_self_, &((*(_109834_hash)).get()._field_t), _109834_hash);
	_1a48d59c8_doneIndent(_self_);
	_1a48d5ba4_indent(_self_);
	_1a48d539b_write(_self_, jule::Str("},\n", 3));
}



inline void _1a48de097_traitDatas(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_) {
	jule::Ptr<_1acb34405_Trait> _112717_old = nullptr;;
	{
		auto expr = &(_self_.get()._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7300b60:;
		if (it != expr_end) {
			jule::Ptr<_1a48d3872_traitHash> _112821_hash = *it;
			{
				_1a48dddbb_traitData(_self_, &(_112821_hash), &(_112717_old));
			}
			_iter_next_1a7300b60:;
			++it;
			goto _iter_begin_1a7300b60;
		}
		_iter_end_1a7300b60:;
	};
	if ((_112717_old != nullptr)) {
		_1a48d59c8_doneIndent(_self_);
		_1a48d5ba4_indent(_self_);
		_1a48d539b_write(_self_, jule::Str("};\n", 3));
	};
}



inline void _1a48de273_globals(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7302634:;
		if (it != expr_end) {
			jule::Ptr<_1abd1497c_Var> _113921_v = *it;
			{
				_1a48d539b_write(_self_, _1a48e8b2e_kind(_self_.get()._field_tc.ptr(), _113921_v.get()._field_Kind.get()._field_Kind));
				_1a48d539b_write(_self_, jule::Str(" ", 1));
				_1a48d539b_write(_self_, static__1a48441b7_var(_113921_v));
				_1a48d539b_write(_self_, jule::Str(" = ", 3));
				_1a483a6a8_model(_self_.get()._field_ec, _113921_v.get()._field_Value.get()._field_Data.get()._field_Model);
				_1a48d539b_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1a7302634:;
			++it;
			goto _iter_begin_1a7302634;
		}
		_iter_end_1a7302634:;
	};
}



inline void _1a48de44e_decls(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_) {
	_1a48d8503_traitDecls(_self_);
	_1a48d8954_structurePlainDecls(_self_);
	_self_.get()._field_headPos=static_cast<jule::I64>(_self_.get()._field_Obj.len());
	_1a48da659_structureDecls(_self_);
	_1a48db8d0_funcDecls(_self_);
	_1a48d539b_write(_self_, jule::Str("\n\n", 2));
	_1a48dbdca_traitDataTypes(_self_);
	_1a48d539b_write(_self_, jule::Str("\n\n", 2));
	_1a48dd77d_traitWrappers(_self_);
	_1a48d539b_write(_self_, jule::Str("\n\n", 2));
	_1a48de097_traitDatas(_self_);
	_1a48d539b_write(_self_, jule::Str("\n\n", 2));
	_self_.get()._field_declPos=static_cast<jule::I64>(_self_.get()._field_Obj.len());
	_1a48de273_globals(_self_);
}



inline void _1a48de6c4_structureMethods(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_, jule::Ptr<_1acb09d37_StructIns>* _116641_s) {
	{
		auto expr = &((*(_116641_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7307590:;
		if (it != expr_end) {
			jule::Ptr<_1acb221d4_Fn> _116721_f = *it;
			{
				_1a48dce64_func(_self_, &(_116721_f));
				_1a48d539b_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1a7307590:;
			++it;
			goto _iter_begin_1a7307590;
		}
		_iter_end_1a7307590:;
	};
}



inline void _1a48de949_structureDeriveDefs(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_, jule::Ptr<_1acb09d37_StructIns>* _117344_s) {
	if (_1acb0884c_IsDerives((*(_117344_s)).get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1a48d539b_write(_self_, _1a483dbc8_cloneFuncDef(_self_.get()._field_dc.ptr(), &((*(_117344_s)).get()._field_Decl)));
		_1a48d539b_write(_self_, jule::Str("{\n", 2));
		_1a48d57ec_addIndent(_self_);
		_1a48d5ba4_indent(_self_);
		_1a48d539b_write(_self_, _1a48e719e_structureIns(_self_.get()._field_tc.ptr(), (*(_117344_s))));
		_1a48d539b_write(_self_, jule::Str(" clone;\n", 8));
		{
			auto expr = &((*(_117344_s)).get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a730a120:;
			if (it != expr_end) {
				jule::Ptr<_1acb09342_FieldIns> _118120_f = *it;
				{
					jule::Str _118221_ident = static__1a4843e20_field(&(_118120_f.get()._field_Decl));;
					_1a48d5ba4_indent(_self_);
					_1a48d539b_write(_self_, jule::Str("clone.", 6));
					_1a48d5621_writeR(_self_, &(_118221_ident));
					_1a48d539b_write(_self_, jule::Str(" = jule::clone(this->", 21));
					_1a48d5621_writeR(_self_, &(_118221_ident));
					_1a48d539b_write(_self_, jule::Str(");\n", 3));
				}
				_iter_next_1a730a120:;
				++it;
				goto _iter_begin_1a730a120;
			}
			_iter_end_1a730a120:;
		};
		_1a48d5ba4_indent(_self_);
		_1a48d539b_write(_self_, jule::Str("return clone;\n", 14));
		_1a48d59c8_doneIndent(_self_);
		_1a48d539b_write(_self_, jule::Str("}", 1));
	};
}



inline void _1a48debbe_structureOstream(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_, jule::Ptr<_1acb09d37_StructIns>* _119741_s) {
	_1a48d5ba4_indent(_self_);
	_1a48d539b_write(_self_, jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_1a48d539b_write(_self_, static__1a4843b78_structureIns(_119741_s));
	_1a48d539b_write(_self_, jule::Str(" _Src) {\n", 9));
	_1a48d57ec_addIndent(_self_);
	_1a48d5ba4_indent(_self_);
	jule::Ptr<_1acb221d4_Fn> _120517_fts = _1acb0acd3_FindMethod((*(_119741_s)).ptr(), jule::Str("Str", 3), false);;
	if (static__1abd160ee_Str(_120517_fts)) {
		_1a48d539b_write(_self_, jule::Str("_Stream << ", 11));
		_1a48d539b_write(_self_, static__1a4842d53_func(&(_120517_fts)));
		_1a48d539b_write(_self_, jule::Str("(&_Src);\n", 9));
	} else {
		_1a48d539b_write(_self_, jule::Str("_Stream << \"", 12));
		_1a48d5621_writeR(_self_, &((*(_119741_s)).get()._field_Decl.get()._field_Ident));
		_1a48d539b_write(_self_, jule::Str("{\";\n", 4));
		{
			auto expr = &((*(_119741_s)).get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a731139b:;
			if (it != expr_end) {
				jule::I64 _121518_i = it - expr->begin();
				jule::Ptr<_1acb09342_FieldIns> _121525_f = *it;
				{
					_1a48d5ba4_indent(_self_);
					_1a48d539b_write(_self_, jule::Str("_Stream << \"", 12));
					_1a48d5621_writeR(_self_, &(_121525_f.get()._field_Decl.get()._field_Ident));
					_1a48d539b_write(_self_, jule::Str(":", 1));
					jule::Ptr<_1acb09d37_StructIns> _122221_strct = _1acca8821_Struct(_121525_f.get()._field_Kind.ptr());;
					if ((((_122221_strct != nullptr) && (_122221_strct.get()._field_Decl != nullptr)) && _122221_strct.get()._field_Decl.get()._field_Binded)) {
						_1a48d539b_write(_self_, jule::Str(" cpp.", 5));
						_1a48d539b_write(_self_, static__1a4843e20_field(&(_121525_f.get()._field_Decl)));
						_1a48d539b_write(_self_, jule::Str("\"", 1));
					} else {
						_1a48d539b_write(_self_, jule::Str("\" << _Src.", 10));
						_1a48d539b_write(_self_, static__1a4843e20_field(&(_121525_f.get()._field_Decl)));
					};
					if (((_121518_i + 1LL) < (*(_119741_s)).get()._field_Fields.len())) {
						_1a48d539b_write(_self_, jule::Str(" << \", \"", 8));
					};
					_1a48d539b_write(_self_, jule::Str(";\n", 2));
				}
				_iter_next_1a731139b:;
				++it;
				_121518_i++;
				goto _iter_begin_1a731139b;
			}
			_iter_end_1a731139b:;
		};
		_1a48d5ba4_indent(_self_);
		_1a48d539b_write(_self_, jule::Str("_Stream << \"}\";\n", 16));
	};
	_1a48d5ba4_indent(_self_);
	_1a48d539b_write(_self_, jule::Str("return _Stream;\n", 16));
	_1a48d59c8_doneIndent(_self_);
	_1a48d539b_write(_self_, jule::Str("}", 1));
}



inline void _1a48dee44_structureIns(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_, jule::Ptr<_1acb09d37_StructIns>* _124837_s) {
	_1a48de6c4_structureMethods(_self_, _124837_s);
	_1a48d539b_write(_self_, jule::Str("\n\n", 2));
	_1a48de949_structureDeriveDefs(_self_, _124837_s);
	_1a48d539b_write(_self_, jule::Str("\n\n", 2));
	_1a48debbe_structureOstream(_self_, _124837_s);
}



inline void _1a48e01b9_structure(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_, jule::Ptr<_1acb07021_Struct>* _125634_s) {
	{
		auto expr = &((*(_125634_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7317ca9:;
		if (it != expr_end) {
			jule::Ptr<_1acb09d37_StructIns> _125721_ins = *it;
			{
				_1a48dee44_structureIns(_self_, &(_125721_ins));
				_1a48d539b_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1a7317ca9:;
			++it;
			goto _iter_begin_1a7317ca9;
		}
		_iter_end_1a7317ca9:;
	};
}



inline void _1a48e0395_structures(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7318d76:;
		if (it != expr_end) {
			jule::Ptr<_1acb07021_Struct> _126421_s = *it;
			{
				if ((_126421_s.get()._field_Token != nullptr)) {
					_1a48e01b9_structure(_self_, &(_126421_s));
					_1a48d539b_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1a7318d76:;
			++it;
			goto _iter_begin_1a7318d76;
		}
		_iter_end_1a7318d76:;
	};
}



inline void _1a48e0571_funcs(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_) {
	_1a48d814b_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1abcdded9_Package>*)>([=](jule::Ptr<_1abcdded9_Package>* _127335_pkg) mutable -> void {
		_1a48e140c_iterFiles(_127335_pkg, jule::Fn<void(jule::Ptr<_1abd59241_SymbolTable>*)>([=](jule::Ptr<_1abd59241_SymbolTable>* _127436_file) mutable -> void {
			{
				auto expr = &((*(_127436_file)).get()._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1a731bd79:;
				if (it != expr_end) {
					jule::Ptr<_1acb221d4_Fn> _127529_f = *it;
					{
						if (((!(_207304b03_Test)) && _1a49006b3_hasDirective(&(_127529_f.get()._field_Directives), jule::Str("test", 4)))) {
							goto _iter_next_1a731bd79;
						};
						if (((!(_127529_f.get()._field_Binded)) && (_127529_f.get()._field_Token != nullptr))) {
							_1a48dce64_func(_self_, &(_127529_f));
							_1a48d539b_write(_self_, jule::Str("\n\n", 2));
						};
					}
					_iter_next_1a731bd79:;
					++it;
					goto _iter_begin_1a731bd79;
				}
				_iter_end_1a731bd79:;
			};
		}));
	}));
}



inline void _1a48e07e6_pushInit(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_, jule::Ptr<_1abcdded9_Package>* _128833_pkg) {
	_1a48e140c_iterFiles(_128833_pkg, jule::Fn<void(jule::Ptr<_1abd59241_SymbolTable>*)>([=](jule::Ptr<_1abd59241_SymbolTable>* _128932_file) mutable -> void {
		{
			auto expr = &((*(_128932_file)).get()._field_Funcs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a731e299:;
			if (it != expr_end) {
				jule::Ptr<_1acb221d4_Fn> _129020_f = *it;
				{
					if (_129020_f.get()._field_Ident.equal("init", 4)) {
						_1a48d5ba4_indent(_self_);
						_1a48d539b_write(_self_, static__1a4842d53_func(&(_129020_f)));
						_1a48d539b_write(_self_, jule::Str("();\n", 4));
					};
				}
				_iter_next_1a731e299:;
				++it;
				goto _iter_begin_1a731e299;
			}
			_iter_end_1a731e299:;
		};
	}));
}



inline void _1a48e09c2_initCaller(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_) {
	_1a48d539b_write(_self_, jule::Str("void __jule_call_initializers(void) {\n", 38));
	_1a48d57ec_addIndent(_self_);
	_1a48d814b_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1abcdded9_Package>*)>([=](jule::Ptr<_1abcdded9_Package>* _130335_pkg) mutable -> void {
		_1a48e07e6_pushInit(_self_, _130335_pkg);
	}));
	_1a48d59c8_doneIndent(_self_);
	_1a48d539b_write(_self_, jule::Str("\n}", 2));
}



inline void _1a48e0b9d_end(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_) {
	_1a48d539b_write(_self_, jule::Str("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_207304b03_Test) {
		_1a48d539b_write(_self_, jule::Str("test_point();", 13));
	} else {
		_1a48d539b_write(_self_, jule::Str("entry_point();", 14));
	};
	_1a48d539b_write(_self_, jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1a48e0d79_serializeHead(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_) {
	_1a48d7dc6_prepareStructures(_self_);
	_1a48d8327_buildTraitMap(_self_);
	_1a48d7799_head(_self_);
	_1a48d539b_write(_self_, jule::Str("\n", 1));
	_1a48de44e_decls(_self_);
	if ((_self_.get()._field_resultDecls.len() > 0LL)) {
		jule::Str _133821_head = _self_.get()._field_Obj.slice(0LL, _self_.get()._field_headPos);;
		{
			auto expr = &(_self_.get()._field_resultDecls);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a7324dd7:;
			if (it != expr_end) {
				jule::Str _133920_decl = *it;
				{
					_133821_head+=_133920_decl;
					_self_.get()._field_declPos+=_133920_decl.len();
				}
				_iter_next_1a7324dd7:;
				++it;
				goto _iter_begin_1a7324dd7;
			}
			_iter_end_1a7324dd7:;
		};
		_133821_head+=_self_.get()._field_Obj.slice(_self_.get()._field_headPos);
		_self_.get()._field_Obj=_133821_head;
	};
	_1a48d539b_write(_self_, jule::Str("\n", 1));
	_1a48e0395_structures(_self_);
	_1a48e0571_funcs(_self_);
	_1a48e09c2_initCaller(_self_);
	_1a48d539b_write(_self_, jule::Str("\n\n", 2));
	if ((_self_.get()._field_anyObj.len() > 0LL)) {
		jule::Str _135421_head = _self_.get()._field_Obj.slice(0LL, _self_.get()._field_declPos);;
		_135421_head+=_self_.get()._field_anyObj;
		_135421_head+=_self_.get()._field_Obj.slice(_self_.get()._field_declPos);
		_self_.get()._field_Obj=_135421_head;
	};
}



inline void _1a48e1055_Serialize(jule::Ptr<_1a48d4c4c_ObjectCoder> _self_) {
	_1a48e0d79_serializeHead(_self_);
	_1a48e0b9d_end(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1a48d4c4c_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Obj:" << _Src._field_Obj << ", ";
	_Stream << "resultDecls:" << _Src._field_resultDecls << ", ";
	_Stream << "anyObj:" << _Src._field_anyObj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "resultMap:" << _Src._field_resultMap << ", ";
	_Stream << "anyTypeMap:" << _Src._field_anyTypeMap << ", ";
	_Stream << "traitCastMap:" << _Src._field_traitCastMap << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "tc:" << _Src._field_tc << ", ";
	_Stream << "dc:" << _Src._field_dc << ", ";
	_Stream << "headPos:" << _Src._field_headPos << ", ";
	_Stream << "declPos:" << _Src._field_declPos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a402505d_ObjectDeadCode> static__1a40254e2_new(jule::Ptr<_1a3e29a01_IR>* _3424_ir) {
	return jule::new_ptr<_1a402505d_ObjectDeadCode>(_1a402505d_ObjectDeadCode{._field_ir=(*(_3424_ir))});;
}



inline jule::Bool _1a6cc71d6_isLive(jule::Ptr<_1a402505d_ObjectDeadCode> _self_, jule::Ptr<_1acb34405_Trait>* _4030_t) {
	jule::Slice<jule::Ptr<_1acb34405_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1a6cc8e30:;
			{
				_4117_live=_self_.get()._field_live._field_traits;
			}
		}
		_match_end_1a6cc8b44:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6cc9617:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1a6cc9617:;
			++it;
			_5213_i++;
			goto _iter_begin_1a6cc9617;
		}
		_iter_end_1a6cc9617:;
	};
	return false;;
}

inline jule::Bool _1a6ccbd45_isLive(jule::Ptr<_1a402505d_ObjectDeadCode> _self_, jule::Ptr<_1acb24d85_FnIns>* _4030_t) {
	jule::Slice<jule::Ptr<_1acb24d85_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1a6ccdece:;
			{
				_4117_live=_self_.get()._field_live._field_fns;
			}
		}
		_match_end_1a6ccde24:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6cce7a4:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1a6cce7a4:;
			++it;
			_5213_i++;
			goto _iter_begin_1a6cce7a4;
		}
		_iter_end_1a6cce7a4:;
	};
	return false;;
}

inline jule::Bool _1a6cd6239_isLive(jule::Ptr<_1a402505d_ObjectDeadCode> _self_, jule::Ptr<_1acb09d37_StructIns>* _4030_t) {
	jule::Slice<jule::Ptr<_1acb09d37_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1a6cd74b0:;
			{
				_4117_live=_self_.get()._field_live._field_structs;
			}
		}
		_match_end_1a6cd723a:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6cd758c:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1a6cd758c:;
			++it;
			_5213_i++;
			goto _iter_begin_1a6cd758c;
		}
		_iter_end_1a6cd758c:;
	};
	return false;;
}

inline jule::Bool _1a6cd9b33_isLive(jule::Ptr<_1a402505d_ObjectDeadCode> _self_, jule::Ptr<_1abd1497c_Var>* _4030_t) {
	jule::Slice<jule::Ptr<_1abd1497c_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1a6cdb66d:;
			{
				_4117_live=_self_.get()._field_live._field_vars;
			}
		}
		_match_end_1a6cdb54c:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6cdbdcc:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1a6cdbdcc:;
			++it;
			_5213_i++;
			goto _iter_begin_1a6cdbdcc;
		}
		_iter_end_1a6cdbdcc:;
	};
	return false;;
}



inline void _1a6cc7538_pushLive(jule::Ptr<_1a402505d_ObjectDeadCode> _self_, jule::Ptr<_1acb34405_Trait> _6035_t) {
	{
		
{
			_case_begin_1a6ccae32:;
			{
				{ jule::Slice<jule::Ptr<_1acb34405_Trait>> &__jule_push_dest = _self_.get()._field_live._field_traits; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1a6ccaad0:;
	};
}

inline void _1a6ccc85c_pushLive(jule::Ptr<_1a402505d_ObjectDeadCode> _self_, jule::Ptr<_1acb24d85_FnIns> _6035_t) {
	{
		
{
			_case_begin_1a6cd1751:;
			{
				{ jule::Slice<jule::Ptr<_1acb24d85_FnIns>> &__jule_push_dest = _self_.get()._field_live._field_fns; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1a6cd14cb:;
	};
}

inline void _1a6cd3874_pushLive(jule::Ptr<_1a402505d_ObjectDeadCode> _self_, jule::Ptr<_1acb09d37_StructIns> _6035_t) {
	{
		
{
			_case_begin_1a6cd506d:;
			{
				{ jule::Slice<jule::Ptr<_1acb09d37_StructIns>> &__jule_push_dest = _self_.get()._field_live._field_structs; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1a6cd4c82:;
	};
}

inline void _1a6cd9e85_pushLive(jule::Ptr<_1a402505d_ObjectDeadCode> _self_, jule::Ptr<_1abd1497c_Var> _6035_t) {
	{
		
{
			_case_begin_1a6cdd9b1:;
			{
				{ jule::Slice<jule::Ptr<_1abd1497c_Var>> &__jule_push_dest = _self_.get()._field_live._field_vars; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1a6cdd8d4:;
	};
}



inline void _1a4057689_setReferencesAsLive(jule::Ptr<_1a402505d_ObjectDeadCode> _self_, jule::Ptr<_1acb27cde_ReferenceStack>* _7344_rs) {
	if (((*(_7344_rs)) == nullptr)) {
		return;;
	};
	jule::I64 _7717_i = 0LL;;
	for (; (_7717_i < _1acb283c7_Len((*(_7344_rs)).ptr())); (_7717_i)++) {
		{
			jule::Any _7921_ref = _1acb286d5_At((*(_7344_rs)).ptr(), _7717_i);;
			{
				auto &_match_expr{ _7921_ref };
				
				if (_match_expr.type == &__jule_any_type10) {
					_case_begin_1a6cc5cd9:;
					{
						jule::Ptr<_1acb34405_Trait> _8225_t = _7921_ref.cast_ptr<_1acb34405_Trait>(&__jule_any_type10);;
						if (_1a6cc71d6_isLive(_self_, &(_8225_t))) {
							goto _iter_next_1a6cc5305;
						};
						_1a6cc7538_pushLive(_self_, _8225_t);
						{
							auto expr = &(_8225_t.get()._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1a6cc7db8:;
							if (it != expr_end) {
								jule::Ptr<_1acb221d4_Fn> _8729_ins = *it;
								{
									{
										auto expr = &(_8729_ins.get()._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1a6ccb4b5:;
										if (it != expr_end) {
											jule::Ptr<_1acb24d85_FnIns> _8833_mins = *it;
											{
												if (_1a6ccbd45_isLive(_self_, &(_8833_mins))) {
													goto _iter_next_1a6ccb4b5;
												};
												_1a6ccc85c_pushLive(_self_, _8833_mins);
												_1a4057689_setReferencesAsLive(_self_, &(_8833_mins.get()._field_Refers));
											}
											_iter_next_1a6ccb4b5:;
											++it;
											goto _iter_begin_1a6ccb4b5;
										}
										_iter_end_1a6ccb4b5:;
									};
								}
								_iter_next_1a6cc7db8:;
								++it;
								goto _iter_begin_1a6cc7db8;
							}
							_iter_end_1a6cc7db8:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1a6cc5d50:;
					{
						jule::Ptr<_1acb24d85_FnIns> _9725_f = _7921_ref.cast_ptr<_1acb24d85_FnIns>(&__jule_any_type7);;
						if (_1a6ccbd45_isLive(_self_, &(_9725_f))) {
							goto _match_end_1a6cc5e71;
						};
						if (((_9725_f.get()._field_Owner != nullptr) && (!(_9725_f.get()._field_Decl.get()._field_Statically)))) {
							if ((!(_1a6cd6239_isLive(_self_, &(_9725_f.get()._field_Owner))))) {
								_1a6cd3874_pushLive(_self_, _9725_f.get()._field_Owner);
								_1a4057689_setReferencesAsLive(_self_, &(_9725_f.get()._field_Owner.get()._field_Refers));
							};
						};
						_1a6ccc85c_pushLive(_self_, _9725_f);
						_1a4057689_setReferencesAsLive(_self_, &(_9725_f.get()._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type8) {
					_case_begin_1a6cc6081:;
					{
						jule::Ptr<_1abd1497c_Var> _11025_v = _7921_ref.cast_ptr<_1abd1497c_Var>(&__jule_any_type8);;
						if (_1a6cd9b33_isLive(_self_, &(_11025_v))) {
							goto _match_end_1a6cc5e71;
						};
						_1a6cd9e85_pushLive(_self_, _11025_v);
						_1a4057689_setReferencesAsLive(_self_, &(_11025_v.get()._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type9) {
					_case_begin_1a6cc60e7:;
					{
						jule::Ptr<_1acb09d37_StructIns> _11725_s = _7921_ref.cast_ptr<_1acb09d37_StructIns>(&__jule_any_type9);;
						if (_1a6cd6239_isLive(_self_, &(_11725_s))) {
							goto _match_end_1a6cc5e71;
						};
						_1a6cd3874_pushLive(_self_, _11725_s);
						_1a4057689_setReferencesAsLive(_self_, &(_11725_s.get()._field_Refers));
						{
							auto expr = &(_11725_s.get()._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1a6ce1046:;
							if (it != expr_end) {
								jule::Ptr<_1acb221d4_Fn> _12329_ins = *it;
								{
									{
										auto expr = &(_12329_ins.get()._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1a6ce2025:;
										if (it != expr_end) {
											jule::Ptr<_1acb24d85_FnIns> _12433_mins = *it;
											{
												if (_1a6ccbd45_isLive(_self_, &(_12433_mins))) {
													goto _iter_next_1a6ce2025;
												};
												_1a6ccc85c_pushLive(_self_, _12433_mins);
												_1a4057689_setReferencesAsLive(_self_, &(_12433_mins.get()._field_Refers));
											}
											_iter_next_1a6ce2025:;
											++it;
											goto _iter_begin_1a6ce2025;
										}
										_iter_end_1a6ce2025:;
									};
								}
								_iter_next_1a6ce1046:;
								++it;
								goto _iter_begin_1a6ce1046;
							}
							_iter_end_1a6ce1046:;
						};
					}
				}
				_match_end_1a6cc5e71:;
			};
		}
	_iter_next_1a6cc5305:;
	}
	_iter_end_1a6cc5305:;;
}



inline void _1a405790e_inits(jule::Ptr<_1a402505d_ObjectDeadCode> _self_, jule::Ptr<_1abcdded9_Package>* _13630_pkg) {
	{
		auto expr = &((*(_13630_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6cc569b:;
		if (it != expr_end) {
			jule::Ptr<_1abd59241_SymbolTable> _13721_file = *it;
			{
				{
					auto expr = &(_13721_file.get()._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a6ce4423:;
					if (it != expr_end) {
						jule::Ptr<_1acb221d4_Fn> _13825_f = *it;
						{
							if (_13825_f.get()._field_Ident.equal("init", 4)) {
								jule::Ptr<_1acb24d85_FnIns> _14029_ins = _13825_f.get()._field_Instances[0LL];;
								{ jule::Slice<jule::Ptr<_1acb24d85_FnIns>> &__jule_push_dest = _self_.get()._field_live._field_fns; __jule_push_dest.push(_14029_ins); };
								_1a4057689_setReferencesAsLive(_self_, &(_14029_ins.get()._field_Refers));
							};
						}
						_iter_next_1a6ce4423:;
						++it;
						goto _iter_begin_1a6ce4423;
					}
					_iter_end_1a6ce4423:;
				};
			}
			_iter_next_1a6cc569b:;
			++it;
			goto _iter_begin_1a6cc569b;
		}
		_iter_end_1a6cc569b:;
	};
}



inline void _1a4057b84_collectLivePackage(jule::Ptr<_1a402505d_ObjectDeadCode> _self_, jule::Ptr<_1abcdded9_Package>* _14843_pkg) {
	_1a405790e_inits(_self_, _14843_pkg);
	if (_207304b03_Test) {
		{
			auto expr = &((*(_14843_pkg)).get()._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a6ce6601:;
			if (it != expr_end) {
				jule::Ptr<_1abd59241_SymbolTable> _15425_file = *it;
				{
					{
						auto expr = &(_15425_file.get()._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a6ce6e1a:;
						if (it != expr_end) {
							jule::Ptr<_1acb221d4_Fn> _15529_f = *it;
							{
								if (_1a4059bdb_hasDirective(&(_15529_f.get()._field_Directives), jule::Str("test", 4))) {
									jule::Ptr<_1acb24d85_FnIns> _15733_ins = _15529_f.get()._field_Instances[0LL];;
									{ jule::Slice<jule::Ptr<_1acb24d85_FnIns>> &__jule_push_dest = _self_.get()._field_live._field_fns; __jule_push_dest.push(_15733_ins); };
									_1a4057689_setReferencesAsLive(_self_, &(_15733_ins.get()._field_Refers));
								};
							}
							_iter_next_1a6ce6e1a:;
							++it;
							goto _iter_begin_1a6ce6e1a;
						}
						_iter_end_1a6ce6e1a:;
					};
				}
				_iter_next_1a6ce6601:;
				++it;
				goto _iter_begin_1a6ce6601;
			}
			_iter_end_1a6ce6601:;
		};
	};
}



inline void _1a4057d60_collectLive(jule::Ptr<_1a402505d_ObjectDeadCode> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6ce4a1c:;
		if (it != expr_end) {
			jule::Ptr<_1abcdb39e_ImportInfo> _16721_used = *it;
			{
				if ((!(_16721_used.get()._field_Binded))) {
					_1a4057b84_collectLivePackage(_self_, &(_16721_used.get()._field_Package));
				};
			}
			_iter_next_1a6ce4a1c:;
			++it;
			goto _iter_begin_1a6ce4a1c;
		}
		_iter_end_1a6ce4a1c:;
	};
	_1a4057b84_collectLivePackage(_self_, &(_self_.get()._field_ir.get()._field_Main));
	jule::Ptr<_1acb221d4_Fn> _17517_main = _1abce042a_FindFn(_self_.get()._field_ir.get()._field_Main.ptr(), jule::Str("main", 4), false);;
	jule::Ptr<_1acb24d85_FnIns> _17617_ins = _17517_main.get()._field_Instances[0LL];;
	{ jule::Slice<jule::Ptr<_1acb24d85_FnIns>> &__jule_push_dest = _self_.get()._field_live._field_fns; __jule_push_dest.push(_17617_ins); };
	_1a4057689_setReferencesAsLive(_self_, &(_17617_ins.get()._field_Refers));
}



inline void _1a40580d5_removeDeadGlobals(jule::Ptr<_1a402505d_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1abd1497c_Var>>* _18142_vars) {
	jule::I64 _18217_i = 0LL;;
	while ((_18217_i < (*(_18142_vars)).len())) {
		{
			jule::Ptr<_1abd1497c_Var> _18417_v = (*(_18142_vars))[_18217_i];;
			if (_1a6cd9b33_isLive(_self_, &(_18417_v))) {
				(_18217_i)++;
				goto _iter_next_1a6ceb590;
			};
			(*(_18142_vars))=jule::append((*(_18142_vars)).slice(0LL, _18217_i),(*(_18142_vars)).slice((_18217_i + 1LL)));
		}
	_iter_next_1a6ceb590:;
	}
	_iter_end_1a6ceb590:;;
}



inline void _1a405835a_removeDeadFns(jule::Ptr<_1a402505d_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1acb221d4_Fn>>* _19338_funcs) {
	jule::I64 _19417_i = 0LL;;
	while ((_19417_i < (*(_19338_funcs)).len())) {
		{
			jule::Ptr<_1acb221d4_Fn> _19621_f = (*(_19338_funcs))[_19417_i];;
			jule::I64 _19721_j = 0LL;;
			while ((_19721_j < _19621_f.get()._field_Instances.len())) {
				{
					jule::Ptr<_1acb24d85_FnIns> _19921_ins = _19621_f.get()._field_Instances[_19721_j];;
					if (_1a6ccbd45_isLive(_self_, &(_19921_ins))) {
						(_19721_j)++;
						goto _iter_next_1a6cee719;
					};
					_19621_f.get()._field_Instances=jule::append(_19621_f.get()._field_Instances.slice(0LL, _19721_j),_19621_f.get()._field_Instances.slice((_19721_j + 1LL)));
				}
			_iter_next_1a6cee719:;
			}
			_iter_end_1a6cee719:;;
			if ((_19621_f.get()._field_Instances.len() == 0LL)) {
				(*(_19338_funcs))=jule::append((*(_19338_funcs)).slice(0LL, _19417_i),(*(_19338_funcs)).slice((_19417_i + 1LL)));
				goto _iter_next_1a6ceceba;
			};
			(_19417_i)++;
		}
	_iter_next_1a6ceceba:;
	}
	_iter_end_1a6ceceba:;;
}



inline void _1a40585d0_removeDeadStructs(jule::Ptr<_1a402505d_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1acb07021_Struct>>* _21442_structs) {
	jule::I64 _21517_i = 0LL;;
	while ((_21517_i < (*(_21442_structs)).len())) {
		{
			jule::Ptr<_1acb07021_Struct> _21721_s = (*(_21442_structs))[_21517_i];;
			jule::I64 _21821_j = 0LL;;
			while ((_21821_j < _21721_s.get()._field_Instances.len())) {
				{
					jule::Ptr<_1acb09d37_StructIns> _22025_ins = _21721_s.get()._field_Instances[_21821_j];;
					_1a405835a_removeDeadFns(_self_, &(_22025_ins.get()._field_Methods));
					if (((_22025_ins.get()._field_Methods.len() != 0LL) || _1a6cd6239_isLive(_self_, &(_22025_ins)))) {
						(_21821_j)++;
						goto _iter_next_1a6d033aa;
					};
					_21721_s.get()._field_Instances=jule::append(_21721_s.get()._field_Instances.slice(0LL, _21821_j),_21721_s.get()._field_Instances.slice((_21821_j + 1LL)));
				}
			_iter_next_1a6d033aa:;
			}
			_iter_end_1a6d033aa:;;
			if ((_21721_s.get()._field_Instances.len() == 0LL)) {
				(*(_21442_structs))=jule::append((*(_21442_structs)).slice(0LL, _21517_i),(*(_21442_structs)).slice((_21517_i + 1LL)));
				goto _iter_next_1a6d02420;
			};
			(_21517_i)++;
		}
	_iter_next_1a6d02420:;
	}
	_iter_end_1a6d02420:;;
}



inline void _1a4058855_removeDeadTraits(jule::Ptr<_1a402505d_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1acb34405_Trait>>* _23641_traits) {
	jule::I64 _23717_i = 0LL;;
	while ((_23717_i < (*(_23641_traits)).len())) {
		{
			jule::Ptr<_1acb34405_Trait> _23921_t = (*(_23641_traits))[_23717_i];;
			if ((!(_1a6cc71d6_isLive(_self_, &(_23921_t))))) {
				(*(_23641_traits))=jule::append((*(_23641_traits)).slice(0LL, _23717_i),(*(_23641_traits)).slice((_23717_i + 1LL)));
				goto _iter_next_1a6d067ed;
			};
			jule::I64 _24421_j = 0LL;;
			while ((_24421_j < _23921_t.get()._field_Implemented.len())) {
				{
					jule::Ptr<_1acb07021_Struct> _24621_s = _23921_t.get()._field_Implemented[_24421_j];;
					if ((_24621_s.get()._field_Instances.len() > 0LL)) {
						(_24421_j)++;
						goto _iter_next_1a6d07337;
					};
					_23921_t.get()._field_Implemented=jule::append(_23921_t.get()._field_Implemented.slice(0LL, _24421_j),_23921_t.get()._field_Implemented.slice((_24421_j + 1LL)));
				}
			_iter_next_1a6d07337:;
			}
			_iter_end_1a6d07337:;;
			(_23717_i)++;
		}
	_iter_next_1a6d067ed:;
	}
	_iter_end_1a6d067ed:;;
}



inline void _1a4058aca_removeDeadsFile(jule::Ptr<_1a402505d_ObjectDeadCode> _self_, jule::Ptr<_1abd59241_SymbolTable>* _25740_file) {
	_1a405835a_removeDeadFns(_self_, &((*(_25740_file)).get()._field_Funcs));
	_1a40585d0_removeDeadStructs(_self_, &((*(_25740_file)).get()._field_Structs));
	_1a4058855_removeDeadTraits(_self_, &((*(_25740_file)).get()._field_Traits));
	_1a40580d5_removeDeadGlobals(_self_, &((*(_25740_file)).get()._field_Vars));
}



inline void _1a4058d50_removeDeadsPackage(jule::Ptr<_1a402505d_ObjectDeadCode> _self_, jule::Ptr<_1abcdded9_Package>* _26443_pkg) {
	{
		auto expr = &((*(_26443_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d0b627:;
		if (it != expr_end) {
			jule::Ptr<_1abd59241_SymbolTable> _26521_file = *it;
			{
				_1a4058aca_removeDeadsFile(_self_, &(_26521_file));
			}
			_iter_next_1a6d0b627:;
			++it;
			goto _iter_begin_1a6d0b627;
		}
		_iter_end_1a6d0b627:;
	};
}



inline void _1a405902b_removeDeads(jule::Ptr<_1a402505d_ObjectDeadCode> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d0bc87:;
		if (it != expr_end) {
			jule::Ptr<_1abcdb39e_ImportInfo> _27121_used = *it;
			{
				if ((!(_27121_used.get()._field_Binded))) {
					_1a4058d50_removeDeadsPackage(_self_, &(_27121_used.get()._field_Package));
				};
			}
			_iter_next_1a6d0bc87:;
			++it;
			goto _iter_begin_1a6d0bc87;
		}
		_iter_end_1a6d0bc87:;
	};
	_1a4058d50_removeDeadsPackage(_self_, &(_self_.get()._field_ir.get()._field_Main));
}



inline void _1a4059207_elimanate(jule::Ptr<_1a402505d_ObjectDeadCode> _self_) {
	_1a4057d60_collectLive(_self_);
	_1a405902b_removeDeads(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1a402505d_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_x_1a3e29a01_IR__jule_tuple_s_20943da3c_Log static__1a3e29e41_Build(jule::Str _2721_path, jule::I64 _2732_flags) {
	__jule_tuple_x_1a3e29a01_IR__jule_tuple_s_20943da3c_Log __jule_func_result;
	jule::Ptr<_1a3e27290_JuleImporter> _2817_importer = static__1a3e2767a_New(_1a3e2b7a0_buildCompileInfo());;
	jule::Slice<jule::Ptr<_1acaa352d_Ast>> _2918_files;;
	jule::Slice<_20943da3c_Log> _2929_logs;;
	({
		__jule_tuple_sx_1acaa352d_Ast__jule_tuple_s_20943da3c_Log __jule_assign_result = _1a3e28a33_ImportPackage(_2817_importer.ptr(), _2721_path, true);
		_2918_files = __jule_assign_result.__jule_result_arg0;
		_2929_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2929_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2929_logs;
		return __jule_func_result;;
	};
	jule::Str _3313_root = _2721_path;;
	if ((_2918_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1abcdded9_Package> _3918_pkg;;
	({
		__jule_tuple_x_1abcdded9_Package__jule_tuple_s_20943da3c_Log __jule_assign_result = _1accc450c_AnalyzePackage(_2918_files, jule::Trait<_1abcd86ed_Importer>(_2817_importer, 0), _2732_flags);
		_3918_pkg = __jule_assign_result.__jule_result_arg0;
		_2929_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2929_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2929_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1a3e29a01_IR> _4417_ir = jule::new_ptr<_1a3e29a01_IR>(_1a3e29a01_IR{._field_Root=_3313_root, ._field_Main=_3918_pkg, ._field_Used=_1a3e278de_AllPackages(_2817_importer.ptr()), });;
	_4417_ir.get()._field_Passes=_1a3e2b5a2_getAllUniquePasses(&(_4417_ir.get()._field_Main), _4417_ir.get()._field_Used);
	__jule_func_result.__jule_result_arg0 = _4417_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1a3e2a3d6_appendStructs(_1a3e29a01_IR* _self_, jule::Ptr<_1abcdded9_Package>* _5633_p, jule::Slice<jule::Ptr<_1acb07021_Struct>>* _5657_buffer) {
	{
		auto expr = &((*(_5633_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6c8add1:;
		if (it != expr_end) {
			jule::Ptr<_1abd59241_SymbolTable> _5721_f = *it;
			{
				{
					auto expr = &(_5721_f.get()._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a6c8b71c:;
					if (it != expr_end) {
						jule::Ptr<_1acb07021_Struct> _5825_s = *it;
						{
							if ((!(_5825_s.get()._field_Binded))) {
								{ jule::Slice<jule::Ptr<_1acb07021_Struct>> &__jule_push_dest = (*(_5657_buffer)); __jule_push_dest.push(_5825_s); };
							};
						}
						_iter_next_1a6c8b71c:;
						++it;
						goto _iter_begin_1a6c8b71c;
					}
					_iter_end_1a6c8b71c:;
				};
			}
			_iter_next_1a6c8add1:;
			++it;
			goto _iter_begin_1a6c8add1;
		}
		_iter_end_1a6c8add1:;
	};
}



inline jule::Slice<jule::Ptr<_1acb07021_Struct>> _1a3e2a64a_GetAllStructures(_1a3e29a01_IR* _self_) {
	jule::Slice<jule::Ptr<_1acb07021_Struct>> _6917_buffer = nullptr;;
	_1a3e2a3d6_appendStructs(_self_, &((*(_self_))._field_Main), &(_6917_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6c8b5b8:;
		if (it != expr_end) {
			jule::Ptr<_1abcdb39e_ImportInfo> _7121_u = *it;
			{
				if ((!(_7121_u.get()._field_Binded))) {
					_1a3e2a3d6_appendStructs(_self_, &(_7121_u.get()._field_Package), &(_6917_buffer));
				};
			}
			_iter_next_1a6c8b5b8:;
			++it;
			goto _iter_begin_1a6c8b5b8;
		}
		_iter_end_1a6c8b5b8:;
	};
	return _6917_buffer;;
}



inline void _1a3e2a969_appendGlobals(_1a3e29a01_IR* _self_, jule::Ptr<_1abcdded9_Package>* _7933_p, jule::Slice<jule::Ptr<_1abd1497c_Var>>* _7957_buffer) {
	{
		auto expr = &((*(_7933_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6c8dbe7:;
		if (it != expr_end) {
			jule::Ptr<_1abd59241_SymbolTable> _8021_f = *it;
			{
				{
					auto expr = &(_8021_f.get()._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a6c8e500:;
					if (it != expr_end) {
						jule::Ptr<_1abd1497c_Var> _8125_v = *it;
						{
							if ((((_8125_v.get()._field_Token != nullptr) && (!(_8125_v.get()._field_Binded))) && (!(_8125_v.get()._field_Constant)))) {
								{ jule::Slice<jule::Ptr<_1abd1497c_Var>> &__jule_push_dest = (*(_7957_buffer)); __jule_push_dest.push(_8125_v); };
							};
						}
						_iter_next_1a6c8e500:;
						++it;
						goto _iter_begin_1a6c8e500;
					}
					_iter_end_1a6c8e500:;
				};
			}
			_iter_next_1a6c8dbe7:;
			++it;
			goto _iter_begin_1a6c8dbe7;
		}
		_iter_end_1a6c8dbe7:;
	};
}



inline jule::Slice<jule::Ptr<_1abd1497c_Var>> _1a3e2abcd_GetAllGlobals(_1a3e29a01_IR* _self_) {
	jule::Slice<jule::Ptr<_1abd1497c_Var>> _9217_buffer = nullptr;;
	_1a3e2a969_appendGlobals(_self_, &((*(_self_))._field_Main), &(_9217_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6c8ebd7:;
		if (it != expr_end) {
			jule::Ptr<_1abcdb39e_ImportInfo> _9421_u = *it;
			{
				if ((!(_9421_u.get()._field_Binded))) {
					_1a3e2a969_appendGlobals(_self_, &(_9421_u.get()._field_Package), &(_9217_buffer));
				};
			}
			_iter_next_1a6c8ebd7:;
			++it;
			goto _iter_begin_1a6c8ebd7;
		}
		_iter_end_1a6c8ebd7:;
	};
	return _9217_buffer;;
}



inline void _1a3e2ada9_Order(_1a3e29a01_IR* _self_) {
	(*(_self_))._field_Ordered._field_Structs=_1a3e2a64a_GetAllStructures(_self_);
	(*(_self_))._field_Ordered._field_Globals=_1a3e2abcd_GetAllGlobals(_self_);
	static__1a3e2cb36_orderStructures(&((*(_self_))._field_Ordered._field_Structs));
	static__1a3e2cd45_orderVars(&((*(_self_))._field_Ordered._field_Globals));
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e29a01_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1acb0a19a_Str(_1acb09d37_StructIns* _self_) {
	jule::Str _25017_kind = jule::Str();;
	_25017_kind+=(*(_self_))._field_Decl.get()._field_Ident;
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		(_25017_kind).append("[", 1);
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a5bceb28:;
			if (it != expr_end) {
				jule::Ptr<_1acca3420_InsGeneric> *_25420_g = it;
				{
					_25017_kind+=_1acca5059_Str((*(_25420_g)).get()._field_Kind.ptr());
					(_25017_kind).append(",", 1);
				}
				_iter_next_1a5bceb28:;
				++it;
				goto _iter_begin_1a5bceb28;
			}
			_iter_end_1a5bceb28:;
		};
		(_25017_kind).mut_slice(0LL, (_25017_kind.len() - 1LL));;
		(_25017_kind).append("]", 1);
	};
	return _25017_kind;;
}



inline jule::Bool _1acb0a4a8_Equal(jule::Ptr<_1acb09d37_StructIns> _self_, jule::Ptr<_1acca4ba2_TypeKind> _26521_other) {
	jule::Ptr<_1acb09d37_StructIns> _26613_s = _1acca8821_Struct(_26521_other.ptr());;
	if ((_26613_s == nullptr)) {
		return false;;
	};
	if ((_self_.get()._field_Decl != _26613_s.get()._field_Decl)) {
		return false;;
	};
	if ((_self_.get()._field_Generics.len() != _26613_s.get()._field_Generics.len())) {
		return false;;
	};
	jule::I64 _27917_i = 0LL;;
	for (; (_27917_i < _self_.get()._field_Generics.len()); (_27917_i)++) {
		{
			if ((!(_1acca5367_Equal(_self_.get()._field_Generics[_27917_i].get()._field_Kind, _26613_s.get()._field_Generics[_27917_i].get()._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_1a5bd2c6e:;
	}
	_iter_end_1a5bd2c6e:;;
	return true;;
}



inline jule::Bool _1acb0a92b_Same(_1acb09d37_StructIns* _self_, jule::Ptr<_1acb09d37_StructIns> _29319_s) {
	if ((((*(_self_))._field_Decl != _29319_s.get()._field_Decl) || (_29319_s.get()._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5bd4cc6:;
		if (it != expr_end) {
			jule::I64 _29713_i = it - expr->begin();
			jule::Ptr<_1acca3420_InsGeneric> *_29716_g = it;
			{
				jule::Ptr<_1acca3420_InsGeneric> _29817_g2 = _29319_s.get()._field_Generics[_29713_i];;
				if ((((*(_29716_g)).get()._field_Kind.get()._field_BindIdent != _29817_g2.get()._field_Kind.get()._field_BindIdent) || (!(_1acca5367_Equal((*(_29716_g)).get()._field_Kind, _29817_g2.get()._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1a5bd4cc6:;
			++it;
			_29713_i++;
			goto _iter_begin_1a5bd4cc6;
		}
		_iter_end_1a5bd4cc6:;
	};
	return true;;
}



inline jule::Ptr<_1acb221d4_Fn> _1acb0acd3_FindMethod(_1acb09d37_StructIns* _self_, jule::Str _30829_ident, jule::Bool _30841_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5bd6e4e:;
		if (it != expr_end) {
			jule::Ptr<_1acb221d4_Fn> _30921_f = *it;
			{
				if (((_30921_f.get()._field_Statically == _30841_statically) && (_30921_f.get()._field_Ident == _30829_ident))) {
					return _30921_f;;
				};
			}
			_iter_next_1a5bd6e4e:;
			++it;
			goto _iter_begin_1a5bd6e4e;
		}
		_iter_end_1a5bd6e4e:;
	};
	return nullptr;;
}



inline jule::Ptr<_1acb09342_FieldIns> _1acb0b0e1_FindField(_1acb09d37_StructIns* _self_, jule::Str _31928_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5bd7669:;
		if (it != expr_end) {
			jule::Ptr<_1acb09342_FieldIns> _32021_f = *it;
			{
				if ((_32021_f.get()._field_Decl.get()._field_Ident == _31928_ident)) {
					return _32021_f;;
				};
			}
			_iter_next_1a5bd7669:;
			++it;
			goto _iter_begin_1a5bd7669;
		}
		_iter_end_1a5bd7669:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abd1497c_Var> _1acb0b3ee_FindStatic(_1acb09d37_StructIns* _self_, jule::Str _33029_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5bd9209:;
		if (it != expr_end) {
			jule::Ptr<_1abd1497c_Var> _33121_v = *it;
			{
				if ((_33121_v.get()._field_Ident == _33029_ident)) {
					return _33121_v;;
				};
			}
			_iter_next_1a5bd9209:;
			++it;
			goto _iter_begin_1a5bd9209;
		}
		_iter_end_1a5bd9209:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb09d37_StructIns _Src) {
	_Stream << _1acb0a19a_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_2094cac94_Cmd> static__2094cb1a1_New(jule::Str _2619_path) {
	return jule::new_ptr<_2094cac94_Cmd>(_2094cac94_Cmd{._field_path=_2619_path, });;
}



inline jule::VoidExceptional _2094cb37c_Spawn(_2094cac94_Cmd* _self_) {
	({
		auto except = _2094ceddb_spawn(_self_);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _2094cb558_Kill(_2094cac94_Cmd* _self_) {
	({
		auto except = _2094d00b7_kill(_self_);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _2094cb7bc_Wait(_2094cac94_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(({
		auto except = _2094d032b_wait(_self_);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::I64>(except.error);
		} 0;});
	})));;
}



inline jule::VoidExceptional _2094ceddb_spawn(_2094cac94_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess != nullptr)) {
		jule::panic(jule::Str("command is already spawned", 26) + jule::Str("\nlocation: std/process/cmd_windows.jule:42:13"));;
	};
	STARTUPINFOW _4417_startupInfo = (STARTUPINFOW){};;
	PROCESS_INFORMATION _4517_processInfo = (PROCESS_INFORMATION){};;
	{
		ZeroMemory((&(_4417_startupInfo)), static_cast<jule::U64>(sizeof(_4417_startupInfo)));
		ZeroMemory((&(_4517_processInfo)), static_cast<jule::U64>(sizeof(_4517_processInfo)));
	};
	_4417_startupInfo.cb=static_cast<jule::U64>(sizeof(_4417_startupInfo));
	jule::Slice<jule::Str> _5117_args = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len()));;
	_5117_args[0LL]=(*(_self_))._field_path;
	(_5117_args).append((*(_self_))._field_Args);;
	jule::Slice<jule::U16> _5413_argv = _208264886_Utf16FromStr(_2094d0947_makeCmdLine(_5117_args));;
	jule::Slice<jule::U16> _5513_env = ({
		auto except = _2094d0cee_createEnvBlock((*(_self_))._field_Env);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional(except.error);
		} jule::Slice<jule::U16>(nullptr);});
	});;
	jule::U16* _5617_envp = (&(_5513_env[0LL]));;
	if (((*(_self_))._field_Env.len() == 0LL)) {
		_5617_envp=nullptr;
	};
	;
	{
		if ((CreateProcessW(nullptr, ((wchar_t*)((&(_5413_argv[0LL])))), nullptr, nullptr, 0LL, 1024LLU, _5617_envp, nullptr, (&(_4417_startupInfo)), (&(_4517_processInfo))) == 0LL)) {
			return jule::VoidExceptional(jule::Any(_2094d1edc_getLastProcessError(), &__jule_any_type0));
		};
	};
	(*(_self_))._field_attrs._field_hProcess=_4517_processInfo.hProcess;
	(*(_self_))._field_attrs._field_hThread=_4517_processInfo.hThread;
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _2094d00b7_kill(_2094cac94_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess == nullptr)) {
		jule::panic(jule::Str("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_windows.jule:73:13"));;
	};
	if (TerminateProcess((*(_self_))._field_attrs._field_hProcess, 0LL)) {
		(*(_self_))._field_attrs._field_hProcess=nullptr;
		(*(_self_))._field_attrs._field_hThread=nullptr;
		return jule::VoidExceptional();;
	};
	return jule::VoidExceptional(jule::Any(-1LL, &__jule_any_type0));
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _2094d032b_wait(_2094cac94_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess == nullptr)) {
		jule::panic(jule::Str("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_windows.jule:85:13"));;
	};
	{
		WaitForSingleObject((*(_self_))._field_attrs._field_hProcess, INFINITE);
	};
	__jule_unsigned_long _8817_exitCode = static_cast<__jule_unsigned_long>(4294967295LLU);;
	{
		GetExitCodeProcess((*(_self_))._field_attrs._field_hProcess, (&(_8817_exitCode)));
		_20829274e_CloseHandle(static_cast<jule::Uintptr>(((jule::Uintptr)((*(_self_))._field_attrs._field_hProcess))));
		_20829274e_CloseHandle(static_cast<jule::Uintptr>(((jule::Uintptr)((*(_self_))._field_attrs._field_hThread))));
	};
	(*(_self_))._field_attrs._field_hProcess=nullptr;
	(*(_self_))._field_attrs._field_hThread=nullptr;
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(static_cast<jule::I64>(_8817_exitCode)));;
}







std::ostream &operator<<(std::ostream &_Stream, _2094cac94_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "attrs:" << _Src._field_attrs << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}



inline jule::I32 _2082639d9_DecodeRune(jule::I32 _6815_r1, jule::I32 _6825_r2) {
	if (((((55296LL <= _6815_r1) && (_6815_r1 < 56320LL)) && (56320LL <= _6825_r2)) && (_6825_r2 < 57344LL))) {
		return static_cast<jule::I32>(((((_6815_r1 - 55296LL) << 10LL) | (_6825_r2 - 56320LL)) + 65536LL));;
	};
	return 65533LL;;
}



inline __jule_tuple_i32__jule_tuple_i32 _208263c81_EncodeRune(jule::I32 _7819_r) {
	__jule_tuple_i32__jule_tuple_i32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((_7819_r < 65536LL) || (_7819_r > 1114111LL))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 65533LL;
		return __jule_func_result;;
	};
	_7819_r-=65536LL;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((55296LL + ((_7819_r >> 10LL) & 1023LL)));
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>((56320LL + (_7819_r & 1023LL)));
	return __jule_func_result;;
}



inline jule::Slice<jule::U16> _2082640a0_Encode(jule::Slice<jule::I32> _8711_s) {
	jule::I64 _8813_n = _8711_s.len();;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a4469c99:;
		if (it != expr_end) {
			jule::I32 *_8912_v = it;
			{
				if (((*(_8912_v)) >= 65536LL)) {
					(_8813_n)++;
				};
			}
			_iter_next_1a4469c99:;
			++it;
			goto _iter_begin_1a4469c99;
		}
		_iter_end_1a4469c99:;
	};
	jule::Slice<jule::U16> _9513_a = jule::Slice<jule::U16>::alloc(_8813_n, _8813_n, 0);;
	_8813_n=0LL;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a446a98c:;
		if (it != expr_end) {
			jule::I32 *_9712_v = it;
			{
				{
					
					if (((0LL <= (*(_9712_v))) && ((*(_9712_v)) < 55296LL)) || ((57344LL <= (*(_9712_v))) && ((*(_9712_v)) < 65536LL))) {
						_case_begin_1a446b9e3:;
						{
							_9513_a[_8813_n]=static_cast<jule::U16>(static_cast<jule::U16>((*(_9712_v))));
							(_8813_n)++;
						}
					}
					else if (((65536LL <= (*(_9712_v))) && ((*(_9712_v)) <= 1114111LL))) {
						_case_begin_1a446c065:;
						{
							jule::I32 _10518_r1 = 0;;
							jule::I32 _10522_r2 = 0;;
							({
								__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _208263c81_EncodeRune((*(_9712_v)));
								_10518_r1 = __jule_assign_result.__jule_result_arg0;
								_10522_r2 = __jule_assign_result.__jule_result_arg1;
							});
							_9513_a[_8813_n]=static_cast<jule::U16>(static_cast<jule::U16>(_10518_r1));
							_9513_a[(_8813_n + 1LL)]=static_cast<jule::U16>(static_cast<jule::U16>(_10522_r2));
							_8813_n+=2LL;
						}
					}
					else {
						_case_begin_1a446b64c:;
						{
							_9513_a[_8813_n]=static_cast<jule::U16>(65533LLU);
							(_8813_n)++;
						}
					}
					_match_end_1a446b581:;
				};
			}
			_iter_next_1a446a98c:;
			++it;
			goto _iter_begin_1a446a98c;
		}
		_iter_end_1a446a98c:;
	};
	return _9513_a.slice(0LL, _8813_n);;
}



inline jule::Slice<jule::I32> _208264347_Decode(jule::Slice<jule::U16> _11911_s) {
	jule::Slice<jule::I32> _12013_a = jule::Slice<jule::I32>::alloc(_11911_s.len(), _11911_s.len(), 0);;
	jule::I64 _12113_n = 0LL;;
	jule::I64 _12213_i = 0LL;;
	for (; (_12213_i < _11911_s.len()); (_12213_i)++) {
		{
			jule::U16 _12413_r = _11911_s[_12213_i];;
			{
				
				if ((_12413_r < 55296LLU) || (57344LL <= _12413_r)) {
					_case_begin_1a4470e6a:;
					{
						_12013_a[_12113_n]=static_cast<jule::I32>(static_cast<jule::I32>(_12413_r));
					}
				}
				else if (((((_12413_r < 56320LLU) && ((_12213_i + 1LL) < _11911_s.len())) && (56320LL <= _11911_s[(_12213_i + 1LL)])) && (_11911_s[(_12213_i + 1LL)] < 57344LLU))) {
					_case_begin_1a44705da:;
					{
						_12013_a[_12113_n]=static_cast<jule::I32>(_2082639d9_DecodeRune(static_cast<jule::I32>(static_cast<jule::I32>(_12413_r)), static_cast<jule::I32>(static_cast<jule::I32>(_11911_s[(_12213_i + 1LL)]))));
						(_12213_i)++;
					}
				}
				else {
					_case_begin_1a4470a4c:;
					{
						_12013_a[_12113_n]=65533LL;
					}
				}
				_match_end_1a44709e7:;
			};
			(_12113_n)++;
		}
	_iter_next_1a446e7a4:;
	}
	_iter_end_1a446e7a4:;;
	return _12013_a.slice(0LL, _12113_n);;
}



inline jule::Slice<jule::U16> _208264655_AppendRune(jule::Slice<jule::U16> _14919_a, jule::I32 _14929_r) {
	{
		
		if (((0LL <= _14929_r) && (_14929_r < 55296LL)) || ((57344LL <= _14929_r) && (_14929_r < 65536LL))) {
			_case_begin_1a4472dd4:;
			{
				return jule::append(_14919_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(static_cast<jule::U16>(_14929_r))}));;
			}
		}
		else if (((65536LL <= _14929_r) && (_14929_r <= 1114111LL))) {
			_case_begin_1a4473ab6:;
			{
				jule::I32 _15614_r1 = 0;;
				jule::I32 _15618_r2 = 0;;
				({
					__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _208263c81_EncodeRune(_14929_r);
					_15614_r1 = __jule_assign_result.__jule_result_arg0;
					_15618_r2 = __jule_assign_result.__jule_result_arg1;
				});
				return jule::append(_14919_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(static_cast<jule::U16>(_15614_r1)),static_cast<jule::U16>(static_cast<jule::U16>(_15618_r2))}));;
			}
		}
		_match_end_1a4472d07:;
	};
	return jule::append(_14919_a,jule::Slice<jule::U16>::make({65533LLU}));;
}



inline jule::Slice<jule::U16> _208264886_Utf16FromStr(jule::Str _1417_s) {
	;
	jule::Slice<jule::I32> _209_runes = static_cast<jule::Slice<jule::I32>>(_1417_s);;
	jule::Slice<jule::U16> _2113_buff = jule::Slice<jule::U16>::alloc(0LL, _209_runes.len(), 0);;
	{
		auto expr = &(_209_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a447eae4:;
		if (it != expr_end) {
			jule::I32 *_2212_r = it;
			{
				if (((*(_2212_r)) == 0LL)) {
					goto _iter_end_1a447eae4;
				};
				_2113_buff=_208264655_AppendRune(_2113_buff, (*(_2212_r)));
			}
			_iter_next_1a447eae4:;
			++it;
			goto _iter_begin_1a447eae4;
		}
		_iter_end_1a447eae4:;
	};
	return _208264655_AppendRune(_2113_buff, 0LL);;
}



inline jule::Str _208264b3e_Utf16ToStr(jule::Slice<jule::U16> _3415_s) {
	if ((_3415_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _3813_codePage = _3415_s;;
	{
		auto expr = &(_3415_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a44816c8:;
		if (it != expr_end) {
			jule::I64 _399_i = it - expr->begin();
			jule::U16 *_3912_v = it;
			{
				if (((*(_3912_v)) == 0LLU)) {
					_3813_codePage=_3813_codePage.slice(0LL, _399_i);
					goto _iter_end_1a44816c8;
				};
			}
			_iter_next_1a44816c8:;
			++it;
			_399_i++;
			goto _iter_begin_1a44816c8;
		}
		_iter_end_1a44816c8:;
	};
	return static_cast<jule::Str>(_208264347_Decode(_3813_codePage));;
}



inline jule::Str _208264dd6_U16PtrToStr(jule::U16* _5023_s) {
	if ((_5023_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _5513_codePage = nullptr;;
	jule::I64 _5613_i = 0LL;;
	for (; ; (_5613_i)++) {
		{
			jule::U16 _5813_r = _5023_s[_5613_i];;
			if ((_5813_r == 0LLU)) {
				return static_cast<jule::Str>(_208264347_Decode(_5513_codePage));;
			};
			{ jule::Slice<jule::U16> &__jule_push_dest = _5513_codePage; __jule_push_dest.push(_5813_r); };
		}
	_iter_next_1a4482058:;
	}
	_iter_end_1a4482058:;;
	return jule::Str();;
}



inline jule::I64 _20739d938_GetLastErrno(void) {
	return errno;;
}



inline jule::Uintptr _2082924a7_GetStdHandle(jule::Uintptr _6417_stdh) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)(GetStdHandle(_6417_stdh))));;
}



inline jule::Bool _20829274e_CloseHandle(jule::Uintptr _6523_stdh) {
	return CloseHandle(((void*)(_6523_stdh)));;
}



inline jule::I64 _208292a90_Wstat(jule::U16* _6817_path, struct _stat* _6833_stat) {
	return static_cast<jule::I64>(_wstat(((wchar_t*)(_6817_path)), _6833_stat));;
}



inline jule::I64 _208292e7a_Wopen(jule::U16* _7317_path, jule::I64 _7329_flag, jule::I64 _7340_mode) {
	return static_cast<jule::I64>(_wopen(((wchar_t*)((&(_7317_path[0LL])))), _7329_flag, _7340_mode));;
}



inline jule::U32 _208293178_GetLastError(void) {
	return static_cast<jule::U32>(GetLastError());;
}



inline jule::U32 _2082934b9_GetCurrentDirectory(jule::U32 _8231_bufflen, jule::U16* _8249_buff) {
	return static_cast<jule::U32>(GetCurrentDirectoryW(_8231_bufflen, ((wchar_t*)(_8249_buff))));;
}



inline jule::Bool _208293a08_DeleteFile(jule::U16* _9322_path) {
	return DeleteFileW(((wchar_t*)(_9322_path)));;
}



inline jule::Bool _208293ca0_CreateDirectory(jule::U16* _9827_path) {
	return CreateDirectoryW(((wchar_t*)(_9827_path)), nullptr);;
}



inline jule::Bool _208294047_RemoveDirectory(jule::U16* _10327_path) {
	return RemoveDirectoryW(((wchar_t*)(_10327_path)));;
}



inline jule::U32 _2082944cb_GetFullPathName(jule::U16* _10827_path, jule::U32 _10839_bufflen, jule::U16* _1095_buff, jule::U16** _10917_fname) {
	return static_cast<jule::U32>(GetFullPathNameW(((wchar_t*)(_10827_path)), _10839_bufflen, ((wchar_t*)(_1095_buff)), ((wchar_t**)(_10917_fname))));;
}



inline jule::Bool _20829481c_GetConsoleMode(jule::Uintptr _11419_handle, jule::I64* _11440_mode) {
	return GetConsoleMode(((HANDLE)(_11419_handle)), ((DWORD*)((&((*(_11440_mode)))))));;
}



inline jule::Bool _208294dd3_SetConsoleMode(jule::Uintptr _11919_handle, jule::I64 _11935_mode) {
	return SetConsoleMode(((HANDLE)(_11919_handle)), static_cast<DWORD>(_11935_mode));;
}



inline jule::Bool _2082953cd_WriteConsole(jule::Uintptr _12424_handle, jule::U16* _12440_buffer, jule::I64 _12454_toWrite, jule::I64* _12510_written, void* _12524_reserved) {
	return WriteConsoleW(((HANDLE)(_12424_handle)), ((void*)(_12440_buffer)), static_cast<DWORD>(_12454_toWrite), ((DWORD*)((*(_12510_written)))), _12524_reserved);;
}



inline jule::Bool _208295862_ReadConsole(jule::Uintptr _13223_handle, jule::U16* _13243_buffer, jule::I64 _13257_toRead, jule::I64* _13310_readed) {
	return ReadConsoleW(((HANDLE)(_13223_handle)), ((void*)(_13243_buffer)), static_cast<DWORD>(_13257_toRead), ((DWORD*)((&((*(_13310_readed)))))), nullptr);;
}



inline jule::Uintptr _208295da1_FindFirstFile(jule::U16* _14425_path, WIN32_FIND_DATAW* _14441_data) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)(FindFirstFileW(((wchar_t*)(_14425_path)), _14441_data))));;
}



inline jule::I64 _2082961e2_FindNextFile(jule::Uintptr _14924_h, WIN32_FIND_DATAW* _14939_data) {
	return static_cast<jule::I64>(FindNextFileW(((HANDLE)(_14924_h)), _14939_data));;
}



inline jule::I64 _208296489_FindClose(jule::Uintptr _15414_h) {
	return static_cast<jule::I64>(FindClose(((HANDLE)(_15414_h))));;
}



inline jule::I64 _208297eb3_Seek(jule::I64 _159_handle, jule::I64 _1522_offset, jule::I64 _1535_origin) {
	return static_cast<jule::I64>(lseek(_159_handle, _1522_offset, _1535_origin));;
}



inline jule::I64 _20829839d_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n) {
	return static_cast<jule::I64>(read(_2016_handle, _2033_buff, _2048_n));;
}



inline jule::I64 _208298722_Close(jule::I64 _2510_handle) {
	return static_cast<jule::I64>(close(_2510_handle));;
}



inline jule::I64 _208298b0c_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n) {
	return static_cast<jule::I64>(write(_2817_handle, _2830_buff, _2845_n));;
}



inline void _208298d1b_Exit(jule::I64 _339_code) {
	exit(_339_code);
}



inline jule::Slice<jule::U8> _2082b4b06_Stobs(jule::Str* _911_s) {
	return (*(_911_s)).fake_slice();;
}



inline void _2082b52aa_PushToStrBuffer(jule::Str* _2825_s, jule::Slice<jule::U8> _2833_b) {
	{
		((*(_2825_s))).buffer.append((_2833_b).begin(), (_2833_b).end());
	};
}



inline __jule_tuple_i32__jule_tuple_int _2083969b8_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1869_p0 = _18215_p[0LL];;
	jule::U8 _1879_x = _208395896_first[static_cast<jule::I64>(_1869_p0)];;
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::I32>(((_1879_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_18215_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _1959_sz = static_cast<jule::I64>((_1879_x & 7LLU));;
	_208395e29_acceptRange _1969_accept = _208396237_acceptRanges[static_cast<jule::I64>((_1879_x >> 4LLU))];;
	if ((_18215_p.len() < _1959_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2009_b1 = _18215_p[1LL];;
	if (((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1959_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_1869_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2009_b1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2079_b2 = _18215_p[2LL];;
	if (((_2079_b2 < 128LLU) || (191LL < _2079_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1959_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_1869_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2079_b2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2149_b3 = _18215_p[3LL];;
	if (((_2149_b3 < 128LLU) || (191LL < _2149_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_1869_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2079_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2149_b3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _208396cd7_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2339_s0 = _22918_s[0LL];;
	jule::U8 _2349_x = _208395896_first[static_cast<jule::I64>(_2339_s0)];;
	if ((_2349_x >= 240LLU)) {
		jule::I32 _23913_mask = static_cast<jule::I32>(((_2349_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_22918_s[0LL]) & (~(_23913_mask))) | (65533LL & _23913_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _2429_sz = static_cast<jule::I64>((_2349_x & 7LLU));;
	_208395e29_acceptRange _2439_accept = _208396237_acceptRanges[static_cast<jule::I64>((_2349_x >> 4LLU))];;
	if ((_22918_s.len() < _2429_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2479_s1 = _22918_s[1LL];;
	if (((_2479_s1 < _2439_accept._field_lo) || (_2439_accept._field_hi < _2479_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2429_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_2339_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2479_s1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2549_s2 = _22918_s[2LL];;
	if (((_2549_s2 < 128LLU) || (191LL < _2549_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2429_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_2339_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2549_s2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2619_s3 = _22918_s[3LL];;
	if (((_2619_s3 < 128LLU) || (191LL < _2619_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_2339_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2549_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2619_s3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _20839707e_DecodeLastRune(jule::Slice<jule::U8> _27619_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_27619_p.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I64 _2809_end = _27619_p.len();;
	jule::I64 _28113_start = (_2809_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(static_cast<jule::I32>(_27619_p[_28113_start]));
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _28913_lim = (_2809_end - 4LL);;
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	};
	(_28113_start)--;
	for (; (_28113_start >= _28913_lim); (_28113_start)--) {
		{
			if (_208398954_RuneStart(_27619_p[_28113_start])) {
				goto _iter_end_1a4522093;
			};
		}
	_iter_next_1a4522093:;
	}
	_iter_end_1a4522093:;;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2083969b8_DecodeRune(_27619_p.slice(_28113_start, _2809_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_28113_start + __jule_func_result.__jule_result_arg1) != _2809_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::I64 _2083975bd_RuneLen(jule::I32 _35212_r) {
	{
		
		if ((_35212_r < 0LL)) {
			_case_begin_1a4528c6a:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 127LL)) {
			_case_begin_1a452850b:;
			{
				return 1LL;;
			}
		}
		else if ((_35212_r <= 2047LL)) {
			_case_begin_1a4528583:;
			{
				return 2LL;;
			}
		}
		else if (((55296LL <= _35212_r) && (_35212_r <= 57343LL))) {
			_case_begin_1a452860a:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 65535LL)) {
			_case_begin_1a4528682:;
			{
				return 3LL;;
			}
		}
		else if ((_35212_r <= 1114111LL)) {
			_case_begin_1a45288d5:;
			{
				return 4LL;;
			}
		}
		else {
			_case_begin_1a4528484:;
			{
				return -1LL;;
			}
		}
		_match_end_1a4527b04:;
	};
}



inline jule::I64 _2083979db_EncodeRune(jule::Slice<jule::U8> _37419_p, jule::I32 _37434_r) {
	jule::U32 _3769_i = static_cast<jule::U32>(_37434_r);;
	{
		
		if ((_3769_i <= 127LLU)) {
			_case_begin_1a452d775:;
			{
				_37419_p[0LL]=static_cast<jule::U8>(static_cast<jule::U8>(_37434_r));
				return 1LL;;
			}
		}
		else if ((_3769_i <= 2047LLU)) {
			_case_begin_1a452b366:;
			{
				_37419_p[0LL]=static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_37434_r >> 6LL))));
				_37419_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU)));
				return 2LL;;
			}
		}
		else if ((_3769_i > 1114111LLU) || ((55296LL <= _3769_i) && (_3769_i <= 57343LLU))) {
			_case_begin_1a452d5cc:;
			{
				_37434_r=65533LL;
				goto _case_begin_1a452d643;
			}
		}
		else if ((_3769_i <= 65535LLU)) {
			_case_begin_1a452d643:;
			{
				_37419_p[0LL]=static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_37434_r >> 12LL))));
				_37419_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU)));
				_37419_p[2LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU)));
				return 3LL;;
			}
		}
		else {
			_case_begin_1a452b047:;
			{
				_37419_p[0LL]=static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_37434_r >> 18LL))));
				_37419_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37434_r >> 12LL)) & 63LLU)));
				_37419_p[2LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU)));
				_37419_p[3LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU)));
				return 4LL;;
			}
		}
		_match_end_1a452ae9d:;
	};
}



inline jule::Slice<jule::U8> _208397d2c_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40530_r))}));;
	};
	return _20839816d_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _20839816d_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4149_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4149_i <= 2047LLU)) {
			_case_begin_1a4534380:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41242_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else if ((_4149_i > 1114111LLU) || ((55296LL <= _4149_i) && (_4149_i <= 57343LLU))) {
			_case_begin_1a4536085:;
			{
				_41242_r=128LL;
				goto _case_begin_1a45346c1;
			}
		}
		else if ((_4149_i <= 65535LLU)) {
			_case_begin_1a45346c1:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41242_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else {
			_case_begin_1a4533ca8:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41242_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		_match_end_1a4533bed:;
	};
}



inline jule::I64 _2083986ac_RuneCountStr(jule::Str _47317_s) {
	jule::I64 __jule_func_result = 0;
	jule::I64 _47413_i = 0LL;;
	for (; (_47413_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _47617_c = _47317_s[_47413_i];;
			if ((_47617_c < 128LLU)) {
				(_47413_i)++;
				goto _iter_next_1a4537729;
			};
			jule::U8 _48213_x = _208395896_first[static_cast<jule::I64>(_47617_c)];;
			if ((_48213_x == 241LLU)) {
				(_47413_i)++;
				goto _iter_next_1a4537729;
			};
			jule::I64 _48717_size = static_cast<jule::I64>((_48213_x & 7LLU));;
			if (((_47413_i + _48717_size) > _47317_s.len())) {
				(_47413_i)++;
				goto _iter_next_1a4537729;
			};
			_208395e29_acceptRange _49213_accept = _208396237_acceptRanges[static_cast<jule::I64>((_48213_x >> 4LLU))];;
			_47617_c=_47317_s[(_47413_i + 1LL)];
			if (((_47617_c < _49213_accept._field_lo) || (_49213_accept._field_hi < _47617_c))) {
				_48717_size=1LL;
			} else if ((_48717_size == 2LL)) {
			} else {
				_47617_c=_47317_s[(_47413_i + 2LL)];
				if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
					_48717_size=1LL;
				} else if ((_48717_size == 3LL)) {
				} else {
					_47617_c=_47317_s[(_47413_i + 3LL)];
					if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
						_48717_size=1LL;
					};
				};
			};
			_47413_i+=_48717_size;
		}
	_iter_next_1a4537729:;
	}
	_iter_end_1a4537729:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _208398954_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::I64 _20845028b_getLastOsErrorWindows(void) {
	jule::U32 _169_err = _208293178_GetLastError();;
	{
		auto &_match_expr{ _169_err };
		
		if (_match_expr == 5LL) {
			_case_begin_1a455ddd2:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1a4560ca2:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1a4560d18:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 123LL) {
			_case_begin_1a4560d7e:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else {
			_case_begin_1a455e256:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		_match_end_1a455e201:;
	};
}



inline jule::Slice<jule::Str> _2084512ae_Args(void) {
	return jule::args();;
}



inline jule::Exceptional<jule::Str> _208451732_WorkingDir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(), ({
		auto except = _2084520e5_getwd();
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));;
}



inline jule::Exceptional<jule::Str> _2084520e5_getwd(void) {
	jule::Array<jule::U16,261> _1513_buff = jule::Array<jule::U16,261>();;
	jule::U32 _169_n = _2082934b9_GetCurrentDirectory(261LLU, (&(_1513_buff[0LL])));;
	if ((_169_n == 0LLU)) {
		return jule::Exceptional<jule::Str>(jule::Any(_20845028b_getLastOsErrorWindows(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::Str>(jule::Any(), _208264dd6_U16PtrToStr((&(_1513_buff[0LL]))));;
}



inline jule::Bool _2092ee8a9_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_20935eb28__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _209367e61_isExcludingLatin(_209308a8e_Letter, _7613_r);;
}



inline jule::Bool _20936737d_is16(jule::Slice<_2093657bb_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a513c65d:;
			if (it != expr_end) {
				jule::I64 _19313_i = it - expr->begin();
				{
					_2093657bb_Range16* _19417_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < _19417_range->_field_Lo)) {
							return false;;
						};
						if ((_19128_r <= _19417_range->_field_Hi)) {
							return ((_19417_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _19417_range->_field_Lo),_19417_range->_field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1a513c65d:;
				++it;
				_19313_i++;
				goto _iter_begin_1a513c65d;
			}
			_iter_end_1a513c65d:;
		};
		return false;;
	};
	jule::I64 _20813_lo = 0LL;;
	jule::I64 _20913_hi = _1919_ranges.len();;
	while ((_20813_lo < _20913_hi)) {
		{
			jule::I64 _21113_m = (_20813_lo + ((_20913_hi - _20813_lo) >> 1LLU));;
			_2093657bb_Range16* _21213_range = (&(_1919_ranges[_21113_m]));;
			{
				if (((_21213_range->_field_Lo <= _19128_r) && (_19128_r <= _21213_range->_field_Hi))) {
					return ((_21213_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _21213_range->_field_Lo),_21213_range->_field_Stride) == 0LLU));;
				};
				if ((_19128_r < _21213_range->_field_Lo)) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I64>((_21113_m + 1LL));
				};
			};
		}
	_iter_next_1a513c22e:;
	}
	_iter_end_1a513c22e:;;
	return false;;
}



inline jule::Bool _2093676be_is32(jule::Slice<_209365c3e_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a5143213:;
			if (it != expr_end) {
				jule::I64 _23013_i = it - expr->begin();
				{
					_209365c3e_Range32* _23117_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < _23117_range->_field_Lo)) {
							return false;;
						};
						if ((_22828_r <= _23117_range->_field_Hi)) {
							return ((_23117_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _23117_range->_field_Lo),_23117_range->_field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1a5143213:;
				++it;
				_23013_i++;
				goto _iter_begin_1a5143213;
			}
			_iter_end_1a5143213:;
		};
		return false;;
	};
	jule::I64 _24513_lo = 0LL;;
	jule::I64 _24613_hi = _2289_ranges.len();;
	while ((_24513_lo < _24613_hi)) {
		{
			jule::I64 _24813_m = (_24513_lo + ((_24613_hi - _24513_lo) >> 1LLU));;
			_209365c3e_Range32* _24913_range = (&(_2289_ranges[_24813_m]));;
			{
				if (((_24913_range->_field_Lo <= _22828_r) && (_22828_r <= _24913_range->_field_Hi))) {
					return ((_24913_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _24913_range->_field_Lo),_24913_range->_field_Stride) == 0LLU));;
				};
				if ((_22828_r < _24913_range->_field_Lo)) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I64>((_24813_m + 1LL));
				};
			};
		}
	_iter_next_1a5142c4b:;
	}
	_iter_end_1a5142c4b:;;
	return false;;
}



inline jule::Bool _209367e61_isExcludingLatin(jule::Ptr<_2093661b2_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_2093657bb_Range16> *_28014_R16 = &(_27821_rangeTab.get()._field_R16);;
		jule::I64 _28213_off = _27821_rangeTab.get()._field_LatinOffset;;
		if ((((*(_28014_R16)).len() > _28213_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_28014_R16))[((*(_28014_R16)).len() - 1LL)]._field_Hi)))) {
			return _20936737d_is16((*(_28014_R16)).slice(_28213_off), static_cast<jule::U16>(static_cast<jule::U16>(_27844_r)));;
		};
	};
	jule::Slice<_209365c3e_Range32> *_28710_R32 = &(_27821_rangeTab.get()._field_R32);;
	if ((((*(_28710_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_28710_R32))[0LL]._field_Lo)))) {
		return _2093676be_is32((*(_28710_R32)), static_cast<jule::U32>(static_cast<jule::U32>(_27844_r)));;
	};
	return false;;
}



inline jule::Bool _209368208_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_20935eb28__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _209367e61_isExcludingLatin(_2093100e5_Upper, _29512_r);;
}



inline jule::I64 _209389856_FindByte(jule::Slice<jule::U8> _3713_s, jule::U8 _3724_b) {
	{
		auto expr = &(_3713_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5155346:;
		if (it != expr_end) {
			jule::I64 _399_i = it - expr->begin();
			jule::U8 *_3912_se = it;
			{
				if (((*(_3912_se)) == _3724_b)) {
					return _399_i;;
				};
			}
			_iter_next_1a5155346:;
			++it;
			_399_i++;
			goto _iter_begin_1a5155346;
		}
		_iter_end_1a5155346:;
	};
	return -1LL;;
}



inline jule::I64 _20939bb76_FindLastByte(jule::Slice<jule::U8> _5017_s, jule::U8 _5028_b) {
	if ((_5017_s.len() == 0LL)) {
		return -1LL;;
	};
	jule::U8* _549_first = (&(_5017_s[0LL]));;
	jule::U8* _5513_it = (&(_5017_s[(_5017_s.len() - 1LL)]));;
	for (; (_5513_it >= _549_first); (_5513_it)--) {
		{
			{
				if (((*(_5513_it)) == _5028_b)) {
					return static_cast<jule::I64>(((jule::I64)((_5513_it - _549_first))));;
				};
			};
		}
	_iter_next_1a5156435:;
	}
	_iter_end_1a5156435:;;
	return -1LL;;
}



inline jule::I64 _20939be40_FindByteStr(jule::Str* _6717_s, jule::U8 _6725_b) {
	return static_cast<jule::I64>(_209389856_FindByte(_2082b4b06_Stobs(_6717_s), _6725_b));;
}



inline jule::I64 _20939c281_FindLastByteStr(jule::Str* _7221_s, jule::U8 _7229_b) {
	return static_cast<jule::I64>(_20939bb76_FindLastByte(_2082b4b06_Stobs(_7221_s), _7229_b));;
}



inline jule::Str _20939c649_Repeat(jule::Str _1211_s, jule::I64 _1223_n) {
	if ((_1223_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1211_s.len() > jule::div(jule::MAX_I64,_1223_n))) {
		jule::panic(jule::Str("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:17:9"));;
	};
	jule::Str _2013_ss = jule::Str::alloc(0LL, (_1211_s.len() * _1223_n));;
	for (; (_1223_n > 0LL); (_1223_n)--) {
		{
			_2013_ss+=_1211_s;
		}
	_iter_next_1a516aca7:;
	}
	_iter_end_1a516aca7:;;
	return _2013_ss;;
}



inline jule::Bool _20939ca78_hasPrefix(jule::Str* _2715_s, jule::Str* _2724_sub, jule::I64 _2738_start) {
	if ((((*(_2724_sub)).len() == 0LL) || (((*(_2715_s)).len() - _2738_start) < (*(_2724_sub)).len()))) {
		return false;;
	};
	jule::I64 _3213_i = 0LL;;
	for (; (_3213_i < (*(_2724_sub)).len()); ({
		jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_3213_i + 1LL));
		jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_2738_start + 1LL));
		_3213_i = ___jule_assign_arg;
		_2738_start = _1___jule_assign_arg;
	})) {
		{
			if (((*(_2715_s))[_2738_start] != (*(_2724_sub))[_3213_i])) {
				return false;;
			};
		}
	_iter_next_1a516d859:;
	}
	_iter_end_1a516d859:;;
	return true;;
}



inline jule::Bool _20939cdb9_HasPrefix(jule::Str _4214_s, jule::Str _4222_sub) {
	return _20939ca78_hasPrefix(&(_4214_s), &(_4222_sub), 0LL);;
}



inline jule::Bool _20939d32b_hasSuffix(jule::Str* _4615_s, jule::Str* _4624_sub, jule::I64 _4638_start) {
	if ((((*(_4624_sub)).len() == 0LL) || (((*(_4615_s)).len() - _4638_start) < (*(_4624_sub)).len()))) {
		return false;;
	};
	_4638_start=static_cast<jule::I64>(((*(_4615_s)).len() - _4638_start));
	jule::I64 _5213_i = 0LL;;
	for (; (_5213_i < (*(_4624_sub)).len()); (_5213_i)++) {
		{
			if (((*(_4615_s))[((_4638_start - _5213_i) - 1LL)] != (*(_4624_sub))[(((*(_4624_sub)).len() - _5213_i) - 1LL)])) {
				return false;;
			};
		}
	_iter_next_1a5170691:;
	}
	_iter_end_1a5170691:;;
	return true;;
}



inline jule::Bool _20939d639_HasSuffix(jule::Str _6214_s, jule::Str _6222_sub) {
	return _20939d32b_hasSuffix(&(_6214_s), &(_6222_sub), 0LL);;
}



inline jule::I64 _20939da24_FindAt(jule::Str _7011_s, jule::Str _7019_sub, jule::I64 _7033_i) {
	if ((((_7033_i < 0LL) || (_7011_s.len() < _7019_sub.len())) || (_7019_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_7033_i < _7011_s.len()); (_7033_i)++) {
		{
			if (_20939ca78_hasPrefix(&(_7011_s), &(_7019_sub), _7033_i)) {
				return _7033_i;;
			};
		}
	_iter_next_1a5173809:;
	}
	_iter_end_1a5173809:;;
	return -1LL;;
}



inline jule::I64 _20939e360_FindLastAt(jule::Str _9315_s, jule::Str _9323_sub, jule::I64 _9333_i) {
	jule::I64 _9413_j = ((_9333_i - _9323_sub.len()) + 1LL);;
	if (((((_9323_sub.len() == 0LL) || (_9333_i < 0LL)) || (_9333_i >= _9315_s.len())) || (_9413_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_loop:;
	for (; (_9413_j >= 0LL); (_9413_j)--) {
		{
			jule::I64 _10017_k = _9413_j;;
			jule::I64 _10117_z = 0LL;;
			for (; (_10117_z < _9323_sub.len()); ({
				jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_10017_k + 1LL));
				jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_10117_z + 1LL));
				_10017_k = ___jule_assign_arg;
				_10117_z = _1___jule_assign_arg;
			})) {
				{
					if ((_9315_s[_10017_k] != _9323_sub[_10117_z])) {
						goto _iter_next_1a517561e;
					};
				}
			_iter_next_1a517c3d4:;
			}
			_iter_end_1a517c3d4:;;
			return _9413_j;;
		}
	_iter_next_1a517561e:;
	}
	_iter_end_1a517561e:;;
	return -1LL;;
}



inline jule::I64 _20939e6a1_FindLast(jule::Str _11513_s, jule::Str _11521_sub) {
	return static_cast<jule::I64>(_20939e360_FindLastAt(_11513_s, _11521_sub, static_cast<jule::I64>((_11513_s.len() - 1LL))));;
}



inline jule::I64 _2093a0949_findRune(jule::Slice<jule::U8>* _17114_s, jule::I32 _17125_r) {
	jule::I64 _17213_i = 0LL;;
	while ((_17213_i < (*(_17114_s)).len())) {
		{
			jule::I32 _17414_br = 0;;
			jule::I64 _17418_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2083969b8_DecodeRune((*(_17114_s)).slice(_17213_i));
				_17414_br = __jule_assign_result.__jule_result_arg0;
				_17418_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_17125_r == _17414_br)) {
				return _17213_i;;
			};
			_17213_i+=_17418_n;
		}
	_iter_next_1a518471b:;
	}
	_iter_end_1a518471b:;;
	return -1LL;;
}



inline jule::I64 _2093a1285_FindLastByte(jule::Str _19317_s, jule::U8 _19325_b) {
	return static_cast<jule::I64>(_20939c281_FindLastByteStr(&(_19317_s), _19325_b));;
}



inline jule::I64 _2093a2099_FindAny(jule::Str _22812_s, jule::Str _22820_runes) {
	jule::Slice<jule::U8> _2299_sb = _2082b4b06_Stobs(&(_22812_s));;
	jule::Slice<jule::U8> _23013_rb = _2082b4b06_Stobs(&(_22820_runes));;
	jule::I64 _23113_i = 0LL;;
	while ((_23113_i < _2299_sb.len())) {
		{
			jule::I32 _23314_r = 0;;
			jule::I64 _23317_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2083969b8_DecodeRune(_2299_sb.slice(_23113_i));
				_23314_r = __jule_assign_result.__jule_result_arg0;
				_23317_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_2093a0949_findRune(&(_23013_rb), _23314_r) != -1LL)) {
				return _23113_i;;
			};
			_23113_i+=_23317_n;
		}
	_iter_next_1a5189cb5:;
	}
	_iter_end_1a5189cb5:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _2093a27c5_Split(jule::Str _26210_s, jule::Str _26218_sub, jule::I64 _26232_n) {
	jule::I64 _26313_cap = _26232_n;;
	if ((_26232_n < 0LL)) {
		_26313_cap=16LLU;
	};
	jule::Slice<jule::Str> _26713_parts = jule::Slice<jule::Str>::alloc(0LL, _26313_cap);;
	if ((_26232_n == 0LL)) {
		return _26713_parts;;
	};
	if ((_26232_n < 0LL)) {
		_26232_n=static_cast<jule::I64>(_26210_s.len());
	};
	jule::I64 _27413_i = 0LL;;
	for (; (_26232_n > 0LL); (_26232_n)--) {
		{
			jule::I64 _27613_j = _20939da24_FindAt(_26210_s, _26218_sub, _27413_i);;
			if ((_27613_j == -1LL)) {
				goto _iter_end_1a5190d54;
			};
			{ jule::Slice<jule::Str> &__jule_push_dest = _26713_parts; __jule_push_dest.push(_26210_s.slice(_27413_i, _27613_j)); };
			_27413_i=static_cast<jule::I64>((_27613_j + _26218_sub.len()));
		}
	_iter_next_1a5190d54:;
	}
	_iter_end_1a5190d54:;;
	if (((_26232_n > 0LL) && (_27413_i < _26210_s.len()))) {
		{ jule::Slice<jule::Str> &__jule_push_dest = _26713_parts; __jule_push_dest.push(_26210_s.slice(_27413_i)); };
	};
	return _26713_parts;;
}



inline jule::Bool _2093a2b16_Contains(jule::Str _29013_s, jule::Str _29021_sub) {
	return (_20939da24_FindAt(_29013_s, _29021_sub, 0LL) != -1LL);;
}



inline jule::Bool _2093a35d9_ContainsAny(jule::Str _30616_s, jule::Str _30624_runes) {
	return (_2093a2099_FindAny(_30616_s, _30624_runes) != -1LL);;
}



inline jule::I64 _2093a392a_Count(jule::Str _31210_s, jule::Str _31218_sub) {
	if ((_31218_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _31613_n = 0LL;;
	jule::I64 _31713_i = 0LL;;
	for (;;) {
		{
			jule::I64 _31913_j = _20939da24_FindAt(_31210_s, _31218_sub, _31713_i);;
			if ((_31913_j == -1LL)) {
				goto _iter_end_1a5195e8b;
			};
			(_31613_n)++;
			_31713_i=static_cast<jule::I64>((_31913_j + _31218_sub.len()));
		}
	_iter_next_1a5195e8b:;
	}
	_iter_end_1a5195e8b:;;
	return _31613_n;;
}



inline jule::Str _2093a3dae_Replace(jule::Str _33212_s, jule::Str _33220_sub, jule::Str _33230_new, jule::I64 _33244_n) {
	if (((_33244_n == 0LL) || (_33220_sub == _33230_new))) {
		return _33212_s;;
	};
	jule::I64 _3379_m = _2093a392a_Count(_33212_s, _33220_sub);;
	if ((_3379_m == 0LL)) {
		return _33212_s;;
	};
	if (((_33244_n < 0LL) || (_3379_m < _33244_n))) {
		_33244_n=_3379_m;
	};
	jule::Str _34513_ss = jule::Str::alloc(0LL, (_33212_s.len() + (_33244_n * (_33230_new.len() - _33220_sub.len()))));;
	jule::I64 _34613_i = 0LL;;
	for (; (_33244_n > 0LL); (_33244_n)--) {
		{
			jule::I64 _34813_j = _20939da24_FindAt(_33212_s, _33220_sub, _34613_i);;
			if ((_34813_j == -1LL)) {
				goto _iter_end_1a519980d;
			};
			_34513_ss+=_33212_s.slice(_34613_i, _34813_j);
			_34513_ss+=_33230_new;
			_34613_i=static_cast<jule::I64>((_34813_j + _33220_sub.len()));
		}
	_iter_next_1a519980d:;
	}
	_iter_end_1a519980d:;;
	_34513_ss+=_33212_s.slice(_34613_i);
	return _34513_ss;;
}



inline void _2093a0e22_trimLeft(jule::Slice<jule::U8>* _38818_s, jule::Slice<jule::U8>* _38830_cutset) {
	jule::I64 _38913_i = 0LL;;
	while ((_38913_i < (*(_38818_s)).len())) {
		{
			jule::I32 _39114_r = 0;;
			jule::I64 _39117_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2083969b8_DecodeRune((*(_38818_s)).slice(_38913_i));
				_39114_r = __jule_assign_result.__jule_result_arg0;
				_39117_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_2093a0949_findRune(_38830_cutset, _39114_r) == -1LL)) {
				(*(_38818_s))=(*(_38818_s)).slice(_38913_i);
				return;;
			};
			_38913_i+=_39117_n;
		}
	_iter_next_1a519db64:;
	}
	_iter_end_1a519db64:;;
	(*(_38818_s))=nullptr;
}



inline jule::Str _2093a4e6a_TrimLeft(jule::Str _40313_s, jule::Str _40321_cutset) {
	jule::Slice<jule::U8> _40413_bytes = _2082b4b06_Stobs(&(_40313_s));;
	jule::Slice<jule::U8> _4059_bcutset = _2082b4b06_Stobs(&(_40321_cutset));;
	_2093a0e22_trimLeft(&(_40413_bytes), &(_4059_bcutset));
	return static_cast<jule::Str>(_40413_bytes);;
}



inline void _2093a5223_trimRight(jule::Slice<jule::U8>* _41019_s, jule::Slice<jule::U8>* _41031_cutset) {
	jule::I64 _41113_i = (*(_41019_s)).len();;
	while ((_41113_i > 0LL)) {
		{
			jule::I32 _41314_r = 0;;
			jule::I64 _41317_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _20839707e_DecodeLastRune((*(_41019_s)).slice(0LL, _41113_i));
				_41314_r = __jule_assign_result.__jule_result_arg0;
				_41317_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_2093a0949_findRune(_41031_cutset, _41314_r) == -1LL)) {
				(*(_41019_s))=(*(_41019_s)).slice(0LL, _41113_i);
				return;;
			};
			_41113_i-=_41317_n;
		}
	_iter_next_1a51a0d75:;
	}
	_iter_end_1a51a0d75:;;
	(*(_41019_s))=nullptr;
}



inline jule::Str _2093a58a5_Trim(jule::Str _4349_s, jule::Str _43417_cutset) {
	jule::Slice<jule::U8> _43513_bytes = _2082b4b06_Stobs(&(_4349_s));;
	jule::Slice<jule::U8> _4369_bcutset = _2082b4b06_Stobs(&(_43417_cutset));;
	_2093a0e22_trimLeft(&(_43513_bytes), &(_4369_bcutset));
	_2093a5223_trimRight(&(_43513_bytes), &(_4369_bcutset));
	return static_cast<jule::Str>(_43513_bytes);;
}



inline jule::Bool _20842b003_IsPathSep(jule::U8 _4814_c) {
	return ((_4814_c == 92LLU) || (_4814_c == '/'));;
}



inline jule::Bool _20842b1bd_isSlash(jule::U8 _5212_c) {
	return ((_5212_c == '\\') || (_5212_c == '/'));;
}



inline jule::U8 _20842b465_toUpper(jule::U8 _5412_c) {
	if ((('a' <= _5412_c) && (_5412_c <= 'z'))) {
		return static_cast<jule::U8>((_5412_c - 32LL));;
	};
	return _5412_c;;
}



inline jule::I64 _20842ba2b_volumeNameLen(jule::Str _8218_path) {
	if ((_8218_path.len() < 2LL)) {
		return 0LL;;
	};
	jule::U8 _879_c = _8218_path[0LL];;
	if (((_8218_path[1LL] == ':') && ((('a' <= _879_c) && (_879_c <= 'z')) || (('A' <= _879_c) && (_879_c <= 'Z'))))) {
		return 2LL;;
	};
	if (((!(_20842b1bd_isSlash(_8218_path[0LL]))) || (!(_20842b1bd_isSlash(_8218_path[1LL]))))) {
		return 0LL;;
	};
	jule::Str _9510_p1;;
	jule::Str _9518_rest;;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _20842bcc3_cutPath(_8218_path.slice(2LL));
		_9510_p1 = __jule_assign_result.__jule_result_arg0;
		_9518_rest = __jule_assign_result.__jule_result_arg1;
	});
	jule::Str _9613_p2 = jule::Str();;
	jule::Bool _9713_ok = false;;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _20842bcc3_cutPath(_9518_rest);
		_9613_p2 = __jule_assign_result.__jule_result_arg0;
		_9518_rest = __jule_assign_result.__jule_result_arg1;
		_9713_ok = __jule_assign_result.__jule_result_arg2;
	});
	if ((!(_9713_ok))) {
		return static_cast<jule::I64>(_8218_path.len());;
	};
	if (((!_9510_p1.equal(".", 1)) && (!_9510_p1.equal("?", 1)))) {
		return static_cast<jule::I64>(((_8218_path.len() - _9518_rest.len()) - 1LL));;
	};
	if (((((_9613_p2.len() == 3LL) && (_20842b465_toUpper(_9613_p2[0LL]) == 'U')) && (_20842b465_toUpper(_9613_p2[1LL]) == 'N')) && (_20842b465_toUpper(_9613_p2[2LL]) == 'C'))) {
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _20842bcc3_cutPath(_9518_rest);
			_9518_rest = __jule_assign_result.__jule_result_arg1;
		});
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _20842bcc3_cutPath(_9518_rest);
			_9518_rest = __jule_assign_result.__jule_result_arg1;
			_9713_ok = __jule_assign_result.__jule_result_arg2;
		});
		if ((!(_9713_ok))) {
			return static_cast<jule::I64>(_8218_path.len());;
		};
	};
	return static_cast<jule::I64>(((_8218_path.len() - _9518_rest.len()) - 1LL));;
}



inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _20842bcc3_cutPath(jule::Str _11912_path) {
	__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg2 = false;
	{
		auto expr = &(_11912_path);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a51bb28b:;
		if (it != expr_end) {
			jule::I64 _1209_i = it - expr->begin();
			{
				if (_20842b1bd_isSlash(_11912_path[_1209_i])) {
					__jule_func_result.__jule_result_arg0 = _11912_path.slice(0LL, _1209_i);
					__jule_func_result.__jule_result_arg1 = _11912_path.slice((_1209_i + 1LL));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1a51bb28b:;
			++it;
			_1209_i++;
			goto _iter_begin_1a51bb28b;
		}
		_iter_end_1a51bb28b:;
	};
	__jule_func_result.__jule_result_arg0 = _11912_path;
	__jule_func_result.__jule_result_arg1 = jule::Str();
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _20842c06a_fullPath(jule::Str _12813_name) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::U16> _1299_utf16Name = _208264886_Utf16FromStr(_12813_name);;
	jule::U16* _1309_p = (&(_1299_utf16Name[0LL]));;
	jule::U32 _13113_n = 100LLU;;
	for (;;) {
		{
			jule::Slice<jule::U16> _13317_buff = jule::Slice<jule::U16>::alloc(static_cast<jule::I64>(_13113_n), static_cast<jule::I64>(_13113_n), 0);;
			_13113_n=static_cast<jule::U32>(_2082944cb_GetFullPathName(_1309_p, static_cast<jule::U32>(static_cast<jule::U32>(_13317_buff.len())), (&(_13317_buff[0LL])), nullptr));
			if ((_13113_n == 0LLU)) {
				__jule_func_result.__jule_result_arg0 = jule::Str();
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			};
			if ((_13113_n <= static_cast<jule::U32>(_13317_buff.len()))) {
				__jule_func_result.__jule_result_arg0 = _208264b3e_Utf16ToStr(_13317_buff.slice(0LL, static_cast<jule::I64>(_13113_n)));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			};
		}
	_iter_next_1a51bd4ad:;
	}
	_iter_end_1a51bd4ad:;;
	__jule_func_result.__jule_result_arg0 = jule::Str();
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _20842c3de_abs(jule::Str _14512_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if (_14512_path.empty()) {
		_14512_path=jule::Str(".", 1);
	};
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _20842c06a_fullPath(_14512_path);
		_14512_path = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(__jule_func_result.__jule_result_arg1))) {
		__jule_func_result.__jule_result_arg0 = jule::Str();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _2093a728b_Clean(_14512_path);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _20842c686_join(jule::Slice<jule::Str> _15913_elem) {
	jule::Str _16013_s = jule::Str();;
	jule::U8 _16113_lastChar = 0LLU;;
	{
		auto expr = &(_15913_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a51c2418:;
		if (it != expr_end) {
			jule::Str _16217_e = *it;
			{
				{
					
					if ((_16013_s.len() == 0LL)) {
						_case_begin_1a51c33c5:;
					}
					else if (_20842b1bd_isSlash(_16113_lastChar)) {
						_case_begin_1a51c31b6:;
						{
							while (((_16217_e.len() > 0LL) && _20842b1bd_isSlash(_16217_e[0LL]))) {
								{
									(_16217_e).mut_slice(1LL);;
								}
							_iter_next_1a51c38d1:;
							}
							_iter_end_1a51c38d1:;;
						}
					}
					else if ((_16113_lastChar == ':')) {
						_case_begin_1a51c30a6:;
					}
					else {
						_case_begin_1a51c2bee:;
						{
							(_16013_s).append("\\", 1);
							_16113_lastChar='\\';
						}
					}
					_match_end_1a51c2b33:;
				};
				if ((_16217_e.len() > 0LL)) {
					_16013_s+=_16217_e;
					_16113_lastChar=_16217_e[(_16217_e.len() - 1LL)];
				};
			}
			_iter_next_1a51c2418:;
			++it;
			goto _iter_begin_1a51c2418;
		}
		_iter_end_1a51c2418:;
	};
	if ((_16013_s.len() == 0LL)) {
		return jule::Str();;
	};
	return _2093a728b_Clean(_16013_s);;
}



inline jule::Str _2093a728b_Clean(jule::Str _10814_path) {
	jule::Str _1099_originalPath = _10814_path;;
	jule::I64 _1109_volLen = _20842ba2b_volumeNameLen(_10814_path);;
	(_10814_path).mut_slice(_1109_volLen);;
	if (_10814_path.empty()) {
		if ((((_1109_volLen > 1LL) && _20842b003_IsPathSep(_1099_originalPath[0LL])) && _20842b003_IsPathSep(_1099_originalPath[1LL]))) {
			return _2093a781e_FromSlash(_1099_originalPath);;
		};
		return (_1099_originalPath + jule::Str(".", 1));;
	};
	jule::Bool _1199_rooted = _20842b003_IsPathSep(_10814_path[0LL]);;
	jule::I64 _1269_n = _10814_path.len();;
	_2093a64cc_lazyBuff _12713_out = _2093a64cc_lazyBuff{._field_path=_10814_path, ._field_volAndPath=_1099_originalPath, ._field_volLen=_1109_volLen};;
	jule::I64 _13214_r = 0;;
	jule::I64 _13221_dotdot = 0;;
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		_13214_r = ___jule_assign_arg;
		_13221_dotdot = _1___jule_assign_arg;
	});
	if (_1199_rooted) {
		_2093a6b81_append(&_12713_out, 92LLU);
		({
			jule::I64 ___jule_assign_arg = 1LL;
			jule::I64 _1___jule_assign_arg = 1LL;
			_13214_r = ___jule_assign_arg;
			_13221_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_13214_r < _1269_n)) {
		{
			{
				
				if (_20842b003_IsPathSep(_10814_path[_13214_r])) {
					_case_begin_1a51cad39:;
					{
						(_13214_r)++;
					}
				}
				else if (((_10814_path[_13214_r] == '.') && (((_13214_r + 1LL) == _1269_n) || _20842b003_IsPathSep(_10814_path[(_13214_r + 1LL)])))) {
					_case_begin_1a51cd29d:;
					{
						(_13214_r)++;
					}
				}
				else if ((((_10814_path[_13214_r] == '.') && (_10814_path[(_13214_r + 1LL)] == '.')) && (((_13214_r + 2LL) == _1269_n) || _20842b003_IsPathSep(_10814_path[(_13214_r + 2LL)])))) {
					_case_begin_1a51cd314:;
					{
						_13214_r+=2LL;
						{
							
							if ((_12713_out._field_w > _13221_dotdot)) {
								_case_begin_1a51d0646:;
								{
									(_12713_out._field_w)--;
									while (((_12713_out._field_w > _13221_dotdot) && (!(_20842b003_IsPathSep(static_cast<jule::U8>(_2093a690b_index(&_12713_out, _12713_out._field_w))))))) {
										{
											(_12713_out._field_w)--;
										}
									_iter_next_1a51d1229:;
									}
									_iter_end_1a51d1229:;;
								}
							}
							else if ((!(_1199_rooted))) {
								_case_begin_1a51d09dc:;
								{
									if ((_12713_out._field_w > 0LL)) {
										_2093a6b81_append(&_12713_out, 92LLU);
									};
									_2093a6b81_append(&_12713_out, '.');
									_2093a6b81_append(&_12713_out, '.');
									_13221_dotdot=_12713_out._field_w;
								}
							}
							_match_end_1a51d0965:;
						};
					}
				}
				else {
					_case_begin_1a51c9376:;
					{
						if (((_1199_rooted && (_12713_out._field_w != 1LL)) || ((!(_1199_rooted)) && (_12713_out._field_w != 0LL)))) {
							_2093a6b81_append(&_12713_out, 92LLU);
						};
						if ((((true && (_12713_out._field_w == 0LL)) && (_12713_out._field_volLen == 0LL)) && (_13214_r != 0LL))) {
							jule::I64 _17525_i = _13214_r;;
							for (; ((_17525_i < _1269_n) && (!(_20842b003_IsPathSep(_10814_path[_17525_i])))); (_17525_i)++) {
								{
									if ((_10814_path[_17525_i] == ':')) {
										_2093a6b81_append(&_12713_out, '.');
										_2093a6b81_append(&_12713_out, 92LLU);
										goto _iter_end_1a51cae8d;
									};
								}
							_iter_next_1a51cae8d:;
							}
							_iter_end_1a51cae8d:;;
						};
						for (; ((_13214_r < _1269_n) && (!(_20842b003_IsPathSep(_10814_path[_13214_r])))); (_13214_r)++) {
							{
								_2093a6b81_append(&_12713_out, _10814_path[_13214_r]);
							}
						_iter_next_1a51cc148:;
						}
						_iter_end_1a51cc148:;;
					}
				}
				_match_end_1a51c92ee:;
			};
		}
	_iter_next_1a51c94db:;
	}
	_iter_end_1a51c94db:;;
	if ((_12713_out._field_w == 0LL)) {
		_2093a6b81_append(&_12713_out, '.');
	};
	return _2093a781e_FromSlash(_2093a6de5_string(&_12713_out));;
}



inline jule::Str _2093a781e_FromSlash(jule::Str _21114_path) {
	;
	return _2093a3dae_Replace(_21114_path, jule::Str("/", 1), jule::Str("\\", 1), -1LL);;
}



inline jule::Str _2093a7b3d_Join(jule::Slice<jule::Str> _2259_elem) {
	return _20842c686_join(_2259_elem);;
}



inline jule::Str _2093a7dd5_Ext(jule::Str _2308_path) {
	jule::I64 _23113_i = (_2308_path.len() - 1LL);;
	for (; ((_23113_i >= 0LL) && (!(_20842b003_IsPathSep(_2308_path[_23113_i])))); (_23113_i)--) {
		{
			if ((_2308_path[_23113_i] == '.')) {
				return _2308_path.slice(_23113_i);;
			};
		}
	_iter_next_1a51d4859:;
	}
	_iter_end_1a51d4859:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _2093a817c_Abs(jule::Str _2458_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Str _24610_abs_path;;
	jule::Bool _24620_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _20842c3de_abs(_2458_path);
		_24610_abs_path = __jule_assign_result.__jule_result_arg0;
		_24620_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _24610_abs_path;
	__jule_func_result.__jule_result_arg1 = _24620_ok;
	return __jule_func_result;;
}



inline jule::Str _2093a8424_Base(jule::Str _25413_path) {
	if (_25413_path.empty()) {
		return jule::Str(".", 1);;
	};
	while (((_25413_path.len() > 0LL) && _20842b003_IsPathSep(_25413_path[(_25413_path.len() - 1LL)]))) {
		{
			(_25413_path).mut_slice(0LL, (_25413_path.len() - 1LL));;
		}
	_iter_next_1a51d696b:;
	}
	_iter_end_1a51d696b:;;
	(_25413_path).mut_slice(_2093a8a40_VolumeName(_25413_path).len());;
	jule::I64 _26513_i = (_25413_path.len() - 1LL);;
	while (((_26513_i >= 0LL) && (!(_20842b003_IsPathSep(_25413_path[_26513_i]))))) {
		{
			(_26513_i)--;
		}
	_iter_next_1a51d80ee:;
	}
	_iter_end_1a51d80ee:;;
	if ((_26513_i >= 0LL)) {
		(_25413_path).mut_slice((_26513_i + 1LL));;
	};
	if (_25413_path.empty()) {
		return jule::Str("\\", 1);;
	};
	return _25413_path;;
}



inline jule::Str _2093a8798_Dir(jule::Str _2858_path) {
	jule::Str _2869_vol = _2093a8a40_VolumeName(_2858_path);;
	jule::I64 _28713_i = (_2858_path.len() - 1LL);;
	while (((_28713_i >= _2869_vol.len()) && (!(_20842b003_IsPathSep(_2858_path[_28713_i]))))) {
		{
			(_28713_i)--;
		}
	_iter_next_1a51da134:;
	}
	_iter_end_1a51da134:;;
	jule::Str _2919_dir = _2093a728b_Clean(_2858_path.slice(_2869_vol.len(), (_28713_i + 1LL)));;
	if ((_2919_dir.equal(".", 1) && (_2869_vol.len() > 2LL))) {
		return _2869_vol;;
	};
	return (_2869_vol + _2919_dir);;
}



inline jule::Str _2093a8a40_VolumeName(jule::Str _30315_path) {
	return _2093a781e_FromSlash(_30315_path.slice(0LL, _20842ba2b_volumeNameLen(_30315_path)));;
}



inline jule::I64 _2082a8e3b_getLastFsError(void) {
	jule::I64 _729_err = _20739d938_GetLastErrno();;
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1a51edd6d:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1a51ed301:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_1a51ed763:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_1a51ed7c9:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a51ed840:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1a51ed8a6:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 132LL) {
			_case_begin_1a51ede8e:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1a51ee005:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1a51ee06b:;
			{
				return static_cast<jule::I64>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1a51ee0d2:;
			{
				return static_cast<jule::I64>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1a51ee159:;
			{
				return static_cast<jule::I64>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1a51ee1d1:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1a51ee258:;
			{
				return static_cast<jule::I64>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1a51ee2d0:;
			{
				return static_cast<jule::I64>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1a51ee357:;
			{
				return static_cast<jule::I64>(14LL);;
			}
		}
		else if (_match_expr == 124LL) {
			_case_begin_1a51ee3ce:;
			{
				return static_cast<jule::I64>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1a51ee456:;
			{
				return static_cast<jule::I64>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1a51ee4cd:;
			{
				return static_cast<jule::I64>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1a51ee555:;
			{
				return static_cast<jule::I64>(18LL);;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1a51ee5cc:;
			{
				return static_cast<jule::I64>(19LL);;
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_1a51ee654:;
			{
				return static_cast<jule::I64>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1a51ee6cb:;
			{
				return static_cast<jule::I64>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1a51ee753:;
			{
				return static_cast<jule::I64>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1a51ee7ca:;
			{
				return static_cast<jule::I64>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1a51ee852:;
			{
				return static_cast<jule::I64>(24LL);;
			}
		}
		else if (_match_expr == 119LL) {
			_case_begin_1a51ee8c9:;
			{
				return static_cast<jule::I64>(25LL);;
			}
		}
		else if (_match_expr == 104LL) {
			_case_begin_1a51ee951:;
			{
				return static_cast<jule::I64>(26LL);;
			}
		}
		else if (_match_expr == 41LL) {
			_case_begin_1a51ee9c8:;
			{
				return static_cast<jule::I64>(27LL);;
			}
		}
		else {
			_case_begin_1a51ed5ba:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1a51ed565:;
	};
}



inline jule::Bool _20839a68c_isConsoleHandle(jule::Uintptr _11320_handle) {
	return (((_11320_handle == _208291be3_STDIN) || (_11320_handle == _208291eac_STDOUT)) || (_11320_handle == _208292243_STDERR));;
}



inline void _2094d06a0_appendEscapeArg(jule::Str* _10125_s, jule::Str _10133_arg) {
	if ((_10133_arg.len() == 0LL)) {
		((*(_10125_s))).append("\"\"", 2);
		return;;
	};
	jule::Bool _10713_needsBackslash = false;;
	jule::Bool _10813_hasSpace = false;;
	jule::I64 _10913_i = 0LL;;
	for (; (_10913_i < _10133_arg.len()); (_10913_i)++) {
		{
			{
				auto &_match_expr{ _10133_arg[_10913_i] };
				
				if (_match_expr == '\"' || _match_expr == '\\') {
					_case_begin_1a5241443:;
					{
						_10713_needsBackslash=true;
					}
				}
				else if (_match_expr == ' ' || _match_expr == '\t') {
					_case_begin_1a52414ba:;
					{
						_10813_hasSpace=true;
					}
				}
				_match_end_1a5241201:;
			};
		}
	_iter_next_1a523e881:;
	}
	_iter_end_1a523e881:;;
	if (((!(_10713_needsBackslash)) && (!(_10813_hasSpace)))) {
		(*(_10125_s))+=_10133_arg;
		return;;
	};
	if ((!(_10713_needsBackslash))) {
		((*(_10125_s))).append("\"", 1);
		(*(_10125_s))+=_10133_arg;
		((*(_10125_s))).append("\"", 1);
		return;;
	};
	if (_10813_hasSpace) {
		((*(_10125_s))).append("\"", 1);
	};
	jule::I64 _13513_slashes = 0LL;;
	_10913_i=0LL;
	for (; (_10913_i < _10133_arg.len()); (_10913_i)++) {
		{
			jule::U8 _13813_c = _10133_arg[_10913_i];;
			{
				auto &_match_expr{ _13813_c };
				
				if (_match_expr == '\\') {
					_case_begin_1a5243962:;
					{
						(_13513_slashes)++;
					}
				}
				else if (_match_expr == '\"') {
					_case_begin_1a5243e07:;
					{
						for (; (_13513_slashes > 0LL); (_13513_slashes)--) {
							{
								((*(_10125_s))).append("\\", 1);
							}
						_iter_next_1a524491e:;
						}
						_iter_end_1a524491e:;;
						((*(_10125_s))).append("\\", 1);
					}
				}
				else {
					_case_begin_1a5243c70:;
					{
						_13513_slashes=0LL;
					}
				}
				_match_end_1a5243c1a:;
			};
			((*(_10125_s))).append(_13813_c);
		}
	_iter_next_1a52431e2:;
	}
	_iter_end_1a52431e2:;;
	if (_10813_hasSpace) {
		for (; (_13513_slashes > 0LL); (_13513_slashes)--) {
			{
				((*(_10125_s))).append("\\", 1);
			}
		_iter_next_1a524459a:;
		}
		_iter_end_1a524459a:;;
		((*(_10125_s))).append("\"", 1);
	};
}



inline jule::Str _2094d0947_makeCmdLine(jule::Slice<jule::Str> _16216_args) {
	jule::Str _16313_s = jule::Str();;
	{
		auto expr = &(_16216_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5245ada:;
		if (it != expr_end) {
			jule::Str *_16412_arg = it;
			{
				if ((_16313_s.len() > 0LL)) {
					(_16313_s).append(" ", 1);
				};
				_2094d06a0_appendEscapeArg(&(_16313_s), (*(_16412_arg)));
			}
			_iter_next_1a5245ada:;
			++it;
			goto _iter_begin_1a5245ada;
		}
		_iter_end_1a5245ada:;
	};
	return _16313_s;;
}



inline jule::Exceptional<jule::Slice<jule::U16>> _2094d0cee_createEnvBlock(jule::Slice<jule::Str> _17819_env) {
	if ((_17819_env.len() == 0LL)) {
		return jule::Exceptional<jule::Slice<jule::U16>>(jule::Any(), _2082640a0_Encode(jule::Slice<jule::I32>::make({0LL,0LL})));;
	};
	jule::I64 _18213_n = 0LL;;
	{
		auto expr = &(_17819_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5247779:;
		if (it != expr_end) {
			jule::Str *_18312_s = it;
			{
				if ((_20939be40_FindByteStr(_18312_s, 0LLU) != -1LL)) {
					return jule::Exceptional<jule::Slice<jule::U16>>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
				};
				_18213_n+=((*(_18312_s)).len() + 1LL);
			}
			_iter_next_1a5247779:;
			++it;
			goto _iter_begin_1a5247779;
		}
		_iter_end_1a5247779:;
	};
	(_18213_n)++;
	jule::Slice<jule::U16> _19013_b = jule::Slice<jule::U16>::alloc(0LL, _18213_n, 0);;
	{
		auto expr = &(_17819_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5245a96:;
		if (it != expr_end) {
			jule::Str *_19112_s = it;
			{
				{
					auto expr = static_cast<jule::Slice<jule::I32>>((*(_19112_s)));
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_1a524967c:;
					if (it != expr_end) {
						jule::I32 _19216_c = *it;
						{
							_19013_b=_208264655_AppendRune(_19013_b, _19216_c);
						}
						_iter_next_1a524967c:;
						++it;
						goto _iter_begin_1a524967c;
					}
					_iter_end_1a524967c:;
				};
				_19013_b=_208264655_AppendRune(_19013_b, 0LL);
			}
			_iter_next_1a5245a96:;
			++it;
			goto _iter_begin_1a5245a96;
		}
		_iter_end_1a5245a96:;
	};
	_19013_b=_208264655_AppendRune(_19013_b, 0LL);
	return jule::Exceptional<jule::Slice<jule::U16>>(jule::Any(), _19013_b);;
}



inline jule::I64 _2094d1ccd_processErrorFromCode(jule::I64 _1125_code) {
	{
		auto &_match_expr{ _1125_code };
		
		if (_match_expr == 5LL) {
			_case_begin_1a5247988:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 2LL || _match_expr == 3LL) {
			_case_begin_1a524a293:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else {
			_case_begin_1a524a183:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		_match_end_1a524a10b:;
	};
}



inline jule::I64 _2094d1edc_getLastProcessError(void) {
	return _2094d1ccd_processErrorFromCode(static_cast<jule::I64>(static_cast<jule::I64>(_208293178_GetLastError())));;
}



inline void _2094d2790_Exit(jule::I64 _129_code) {
	_208298d1b_Exit(_129_code);
}



inline jule::Str _2094d298d_Executable(void) {
	return jule::executable();;
}



inline jule::Bool _209431018_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _2094312c1_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_2093aa69b_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a526e7a1:;
		if (it != expr_end) {
			jule::Str *_3212_validExt = it;
			{
				if ((_3121_ext == (*(_3212_validExt)))) {
					return true;;
				};
			}
			_iter_next_1a526e7a1:;
			++it;
			goto _iter_begin_1a526e7a1;
		}
		_iter_end_1a526e7a1:;
	};
	return false;;
}



inline jule::Bool _209431568_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_2093ab449_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a52708d4:;
		if (it != expr_end) {
			jule::Str *_4512_e = it;
			{
				if ((_4118_ext == (*(_4512_e)))) {
					return true;;
				};
			}
			_iter_next_1a52708d4:;
			++it;
			goto _iter_begin_1a52708d4;
		}
		_iter_end_1a52708d4:;
	};
	{
		auto expr = &(_20942e3ac_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5270e56:;
		if (it != expr_end) {
			jule::Str *_5012_e = it;
			{
				if ((_4118_ext == (*(_5012_e)))) {
					return true;;
				};
			}
			_iter_next_1a5270e56:;
			++it;
			goto _iter_begin_1a5270e56;
		}
		_iter_end_1a5270e56:;
	};
	return false;;
}



inline jule::Str _20943de7c_Logf(jule::Str _3159_fmt, jule::Slice<jule::Any> _31522_args) {
	return _20943e895_applyFmt(_3159_fmt, _31522_args);;
}



inline jule::Str _20943e268_argToStr(jule::Any _31913_arg) {
	{
		auto &_match_expr{ _31913_arg };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1a5271e24:;
			{
				return _31913_arg.cast<jule::Str>(&__jule_any_type5);;
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_1a52725b7:;
			{
				return jule::Str::from_byte(_31913_arg.cast<jule::U8>(&__jule_any_type131));;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1a527262d:;
			{
				return jule::Str::from_rune(_31913_arg.cast<jule::I32>(&__jule_any_type1));;
			}
		}
		else {
			_case_begin_1a5272199:;
			{
				return jule::Str("<fmt?>", 6);;
			}
		}
		_match_end_1a5271eac:;
	};
}



inline jule::I64 _20943e510_findNextFmt(jule::Str _33216_fmt) {
	{
		auto expr = &(_33216_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5273387:;
		if (it != expr_end) {
			jule::I64 _3339_i = it - expr->begin();
			jule::U8 *_33312_b = it;
			{
				if (((*(_33312_b)) == '@')) {
					return _3339_i;;
				};
			}
			_iter_next_1a5273387:;
			++it;
			_3339_i++;
			goto _iter_begin_1a5273387;
		}
		_iter_end_1a5273387:;
	};
	return -1LL;;
}



inline jule::Str _20943e895_applyFmt(jule::Str _34117_fmt, jule::Slice<jule::Any> _34127_args) {
	jule::Str _34213_s = jule::Str();;
	{
		auto expr = &(_34127_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a527482d:;
		if (it != expr_end) {
			jule::Any *_34312_arg = it;
			{
				jule::I64 _34413_i = _20943e510_findNextFmt(_34117_fmt);;
				if ((_34413_i == -1LL)) {
					goto _iter_end_1a527482d;
				};
				_34213_s+=_34117_fmt.slice(0LL, _34413_i);
				_34213_s+=_20943e268_argToStr((*(_34312_arg)));
				(_34117_fmt).mut_slice((_34413_i + 1LL));;
			}
			_iter_next_1a527482d:;
			++it;
			goto _iter_begin_1a527482d;
		}
		_iter_end_1a527482d:;
	};
	_34213_s+=_34117_fmt;
	return _34213_s;;
}



inline jule::Bool _20944091d_IsTopDirective(jule::Str _2819_directive) {
	return (_2819_directive.equal("pass", 4) || _2819_directive.equal("build", 5));;
}



inline jule::Bool _209441d4d_IsWindows(jule::Str _3714_os) {
	return _3714_os.equal("windows", 7);;
}



inline jule::Bool _209442106_IsDarwin(jule::Str _4013_os) {
	return _4013_os.equal("darwin", 6);;
}



inline jule::Bool _20944239d_IsLinux(jule::Str _4312_os) {
	return _4312_os.equal("linux", 5);;
}



inline jule::Bool _2094426bc_IsI386(jule::Str _4611_arch) {
	return _4611_arch.equal("i386", 4);;
}



inline jule::Bool _209442964_IsAmd64(jule::Str _4912_arch) {
	return _4912_arch.equal("amd64", 5);;
}



inline jule::Bool _209442c0b_IsArm64(jule::Str _5212_arch) {
	return _5212_arch.equal("arm64", 5);;
}



inline jule::Bool _209442ea3_IsUnix(jule::Str _5511_os) {
	return (_209442106_IsDarwin(_5511_os) || _20944239d_IsLinux(_5511_os));;
}



inline jule::Bool _209443327_Is32Bit(jule::Str _5812_arch) {
	return _2094426bc_IsI386(_5812_arch);;
}



inline jule::Bool _2094435be_Is64Bit(jule::Str _6112_arch) {
	return (_209442964_IsAmd64(_6112_arch) || _209442c0b_IsArm64(_6112_arch));;
}



inline void _2094d3c25_init(void) {
	jule::Str _2513_path = _2094d298d_Executable();;
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_2094d3252_PathWd=({
			auto except = _208451732_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_2094d2e99_PathExec=_2093a8798_Dir(_2513_path);
		_2094d2c79_PathStdlib=_2093a7b3d_Join(jule::Slice<jule::Str>::make({_2094d2e99_PathExec,jule::Str("..", 2),jule::Str("std", 3)}));
		_2094d3560_PathApi=_2093a7b3d_Join(jule::Slice<jule::Str>::make({_2094d2e99_PathExec,jule::Str("..", 2),jule::Str("api", 3),jule::Str("jule.hpp", 8)}));
	};
}



inline jule::Bool _2097d1ce2_IsUnaryOp(jule::Str _29514_kind) {
	{
		auto expr = &(_20973ad7d_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a52b384a:;
		if (it != expr_end) {
			jule::Str *_29612_op = it;
			{
				if ((_29514_kind == (*(_29612_op)))) {
					return true;;
				};
			}
			_iter_next_1a52b384a:;
			++it;
			goto _iter_begin_1a52b384a;
		}
		_iter_end_1a52b384a:;
	};
	return false;;
}



inline jule::Bool _2097d20cd_IsBinOp(jule::Str _30512_kind) {
	{
		auto expr = &(_20973b09d_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a52b454e:;
		if (it != expr_end) {
			jule::Str *_30612_op = it;
			{
				if ((_30512_kind == (*(_30612_op)))) {
					return true;;
				};
			}
			_iter_next_1a52b454e:;
			++it;
			goto _iter_begin_1a52b454e;
		}
		_iter_end_1a52b454e:;
	};
	return false;;
}



inline jule::Bool _2097d2694_IsStr(jule::Str _32510_k) {
	return ((!(_32510_k.empty())) && ((_32510_k[0LL] == '\"') || _2097d293b_IsRawStr(_32510_k)));;
}



inline jule::Bool _2097d293b_IsRawStr(jule::Str _32813_k) {
	return ((!(_32813_k.empty())) && (_32813_k[0LL] == '`'));;
}



inline jule::Bool _2097d2bd3_IsRune(jule::Str _33211_k) {
	return ((!(_33211_k.empty())) && (_33211_k[0LL] == '\''));;
}



inline jule::Bool _2097d32ee_IsBool(jule::Str _33811_k) {
	return (_33811_k.equal("true", 4) || _33811_k.equal("false", 5));;
}



inline jule::Bool _2097d3596_IsFloat(jule::Str _34112_k) {
	if (_20939cdb9_HasPrefix(_34112_k, jule::Str("0x", 2))) {
		return _2093a35d9_ContainsAny(_34112_k, jule::Str(".pP", 3));;
	};
	return _2093a35d9_ContainsAny(_34112_k, jule::Str(".eE", 3));;
}



inline jule::Bool _2097d383d_IsNum(jule::Str _34910_k) {
	if (_34910_k.empty()) {
		return false;;
	};
	jule::U8 _3549_b = _34910_k[0LL];;
	return ((_3549_b == '.') || (('0' <= _3549_b) && (_3549_b <= '9')));;
}



inline jule::Bool _2097d3d7c_IsIgnoreIdent(jule::Str _36418_ident) {
	return _36418_ident.equal("_", 1);;
}



inline jule::Bool _2097d4124_IsAnonIdent(jule::Str _36716_ident) {
	return _36716_ident.equal("<anonymous>", 11);;
}



inline jule::Bool _2097d4663_IsSpace(jule::I32 _38012_r) {
	{
		auto expr = &(_20973ab5d_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a52bba51:;
		if (it != expr_end) {
			jule::I32 *_38112_cr = it;
			{
				if ((_38012_r == (*(_38112_cr)))) {
					return true;;
				};
			}
			_iter_next_1a52bba51:;
			++it;
			goto _iter_begin_1a52bba51;
		}
		_iter_end_1a52bba51:;
	};
	return false;;
}



inline jule::Bool _2097d4ab4_IsLetter(jule::I32 _39013_r) {
	return _2092ee8a9_IsLetter(_39013_r);;
}



inline jule::Bool _2097d5103_IsDecimal(jule::U8 _41014_b) {
	return (('0' <= _41014_b) && (_41014_b <= '9'));;
}



inline jule::Bool _2097d539a_IsBinary(jule::U8 _41313_b) {
	return ((_41313_b == '0') || (_41313_b == '1'));;
}



inline jule::Bool _2097d5642_IsOctal(jule::U8 _41612_b) {
	return (('0' <= _41612_b) && (_41612_b <= '7'));;
}



inline jule::Bool _2097d58d9_IsHex(jule::U8 _41910_b) {
	{
		
		if ((('0' <= _41910_b) && (_41910_b <= '9'))) {
			_case_begin_1a52bedc8:;
			{
				return true;;
			}
		}
		else if ((('a' <= _41910_b) && (_41910_b <= 'f'))) {
			_case_begin_1a52bee3e:;
			{
				return true;;
			}
		}
		else if ((('A' <= _41910_b) && (_41910_b <= 'F'))) {
			_case_begin_1a52beeb6:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a52bed62:;
			{
				return false;;
			}
		}
		_match_end_1a52beacb:;
	};
}



inline jule::Bool _2097d5b81_IsAssign(jule::U64 _43413_id) {
	return (((((((_43413_id == static_cast<jule::U64>(1LLU)) || (_43413_id == static_cast<jule::U64>(29LLU))) || (_43413_id == static_cast<jule::U64>(32LLU))) || (_43413_id == static_cast<jule::U64>(19LLU))) || (_43413_id == static_cast<jule::U64>(26LLU))) || (_43413_id == static_cast<jule::U64>(2LLU))) || (_43413_id == static_cast<jule::U64>(6LLU)));;
}



inline jule::Bool _2097d5e28_IsPostfixOp(jule::Str _44516_kind) {
	{
		auto expr = &(_2097cb56c_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a52c146d:;
		if (it != expr_end) {
			jule::Str *_44612_op = it;
			{
				if ((_44516_kind == (*(_44612_op)))) {
					return true;;
				};
			}
			_iter_next_1a52c146d:;
			++it;
			goto _iter_begin_1a52c146d;
		}
		_iter_end_1a52c146d:;
	};
	return false;;
}



inline jule::Bool _2097d61c0_IsAssignOp(jule::Str _45515_kind) {
	if (_2097d5e28_IsPostfixOp(_45515_kind)) {
		return true;;
	};
	{
		auto expr = &(_2097cb869_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a52c3151:;
		if (it != expr_end) {
			jule::Str *_45912_op = it;
			{
				if ((_45515_kind == (*(_45912_op)))) {
					return true;;
				};
			}
			_iter_next_1a52c3151:;
			++it;
			goto _iter_begin_1a52c3151;
		}
		_iter_end_1a52c3151:;
	};
	return false;;
}



inline jule::Ptr<_2097d6973_File> _2097d7c2c_NewFileSet(jule::Str _5715_path) {
	return jule::new_ptr<_2097d6973_File>(_2097d6973_File{._field_Path=_5715_path, });;
}



inline _20943da3c_Log _2097d94c0_makeErr(jule::I64 _9512_row, jule::I64 _9522_col, jule::Ptr<_2097d6973_File>* _9533_f, jule::Str _9543_fmt, jule::Slice<jule::Any> _9556_args) {
	return _20943da3c_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_9512_row, ._field_Column=_9522_col, ._field_Path=(*(_9533_f)).get()._field_Path, ._field_Text=_20943de7c_Logf(_9543_fmt, _9556_args), };;
}



inline jule::Bool _2097d9855_bytesHasPrefix(jule::Slice<jule::U8>* _10520_bytes, jule::Str _10535_prefix) {
	if (((*(_10520_bytes)).len() < _10535_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_10535_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a52ccb0b:;
		if (it != expr_end) {
			jule::I64 _1099_i = it - expr->begin();
			{
				if (((*(_10520_bytes))[_1099_i] != _10535_prefix[_1099_i])) {
					return false;;
				};
			}
			_iter_next_1a52ccb0b:;
			++it;
			_1099_i++;
			goto _iter_begin_1a52ccb0b;
		}
		_iter_end_1a52ccb0b:;
	};
	return true;;
}



inline jule::Str _2097d9b96_floatFmtE(jule::Slice<jule::U8>* _11715_txt, jule::I64 _11732_i) {
	jule::Str __jule_func_result;
	(_11732_i)++;
	if ((_11732_i >= (*(_11715_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _12313_b = (*(_11715_txt))[_11732_i];;
	if ((_12313_b == '_')) {
		return __jule_func_result;;
	};
	if (((_12313_b == '+') || (_12313_b == '-'))) {
		(_11732_i)++;
		if ((_11732_i >= (*(_11715_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_11715_txt))[_11732_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I64 _1379_first = _11732_i;;
	for (; (_11732_i < (*(_11715_txt)).len()); (_11732_i)++) {
		{
			_12313_b=(*(_11715_txt))[_11732_i];
			if (((_12313_b != '_') && (!(_2097d5103_IsDecimal(_12313_b))))) {
				goto _iter_end_1a52d0cc9;
			};
		}
	_iter_next_1a52d0cc9:;
	}
	_iter_end_1a52d0cc9:;;
	if ((_11732_i == _1379_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_11715_txt)).slice(0LL, _11732_i));
	return __jule_func_result;;
}



inline jule::Str _2097da02b_floatFmtP(jule::Slice<jule::U8>* _15115_txt, jule::I64 _15128_i) {
	return _2097d9b96_floatFmtE(_15115_txt, _15128_i);;
}



inline jule::Str _2097da36c_floatFmtDotnp(jule::Slice<jule::U8>* _15519_txt, jule::I64 _15536_i) {
	if (((*(_15519_txt))[_15536_i] != '.')) {
		return jule::Str();;
	};
	(_15536_i)++;
	_julec_label_loop:;
	for (; (_15536_i < (*(_15519_txt)).len()); (_15536_i)++) {
		{
			jule::U8 _16313_b = (*(_15519_txt))[_15536_i];;
			{
				
				if ((_16313_b == '_') || _2097d5103_IsDecimal(_16313_b)) {
					_case_begin_1a52d85c8:;
					{
						goto _iter_next_1a52d751c;
					}
				}
				else if (_2097dbb21_isFloatFmtP(_16313_b, _15536_i)) {
					_case_begin_1a52d863e:;
					{
						return _2097da02b_floatFmtP(_15519_txt, _15536_i);;
					}
				}
				else {
					_case_begin_1a52d8562:;
					{
						goto _iter_end_1a52d751c;
					}
				}
				_match_end_1a52d84eb:;
			};
		}
	_iter_next_1a52d751c:;
	}
	_iter_end_1a52d751c:;;
	return jule::Str();;
}



inline jule::Str _2097da6ad_floatFmtDotfp(jule::Slice<jule::U8>* _17619_txt, jule::I64 _17636_i) {
	_17636_i+=2LL;
	return _2097d9b96_floatFmtE(_17619_txt, _17636_i);;
}



inline jule::Str _2097da9ee_floatFmtDotp(jule::Slice<jule::U8>* _18118_txt, jule::I64 _18135_i) {
	(_18135_i)++;
	return _2097d9b96_floatFmtE(_18118_txt, _18135_i);;
}



inline jule::Str _2097dae50_floatNum(jule::Slice<jule::U8>* _18614_txt, jule::I64 _18631_i) {
	jule::Str __jule_func_result;
	(_18631_i)++;
	if ((_18631_i >= (*(_18614_txt)).len())) {
		__jule_func_result = static_cast<jule::Str>((*(_18614_txt)));
		return __jule_func_result;;
	};
	if (((*(_18614_txt))[_18631_i] == '_')) {
		(_18631_i)--;
		__jule_func_result = static_cast<jule::Str>((*(_18614_txt)).slice(0LL, _18631_i));
		return __jule_func_result;;
	};
	for (; (_18631_i < (*(_18614_txt)).len()); (_18631_i)++) {
		{
			jule::U8 _19613_b = (*(_18614_txt))[_18631_i];;
			if (((_18631_i > 1LL) && ((_19613_b == 'e') || (_19613_b == 'E')))) {
				__jule_func_result = _2097d9b96_floatFmtE(_18614_txt, _18631_i);
				return __jule_func_result;;
			};
			if (((_19613_b != '_') && (!(_2097d5103_IsDecimal(_19613_b))))) {
				goto _iter_end_1a52daed2;
			};
		}
	_iter_next_1a52daed2:;
	}
	_iter_end_1a52daed2:;;
	if ((_18631_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_18614_txt)).slice(0LL, _18631_i));
	return __jule_func_result;;
}



inline jule::Str _2097db1e7_commonNum(jule::Slice<jule::U8>* _21115_txt) {
	jule::Str __jule_func_result;
	jule::I64 _21213_i = 0LL;;
	_julec_label_loop:;
	for (; (_21213_i < (*(_21115_txt)).len()); (_21213_i)++) {
		{
			jule::U8 _21513_b = (*(_21115_txt))[_21213_i];;
			{
				
				if ((_21513_b == '.')) {
					_case_begin_1a52de38c:;
					{
						__jule_func_result = _2097dae50_floatNum(_21115_txt, _21213_i);
						return __jule_func_result;;
					}
				}
				else if ((_21513_b == '_')) {
					_case_begin_1a52de414:;
					{
						goto _iter_next_1a52dd721;
					}
				}
				else if (_2097db7d0_isFloatFmtE(_21513_b, _21213_i)) {
					_case_begin_1a52de48b:;
					{
						__jule_func_result = _2097d9b96_floatFmtE(_21115_txt, _21213_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_2097d5103_IsDecimal(_21513_b)))) {
					_case_begin_1a52de513:;
					{
						goto _iter_end_1a52dd721;
					}
				}
				_match_end_1a52de2b0:;
			};
		}
	_iter_next_1a52dd721:;
	}
	_iter_end_1a52dd721:;;
	if ((_21213_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_21115_txt)).slice(0LL, _21213_i));
	return __jule_func_result;;
}



inline jule::Str _2097db48e_binaryNum(jule::Slice<jule::U8>* _23415_txt) {
	jule::Str __jule_func_result;
	if ((!(_2097d9855_bytesHasPrefix(_23415_txt, jule::Str("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_23415_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _24313_i = 2LL;;
	for (; (_24313_i < (*(_23415_txt)).len()); (_24313_i)++) {
		{
			if ((((*(_23415_txt))[_24313_i] != '_') && (!(_2097d539a_IsBinary((*(_23415_txt))[_24313_i]))))) {
				goto _iter_end_1a52dd9c9;
			};
		}
	_iter_next_1a52dd9c9:;
	}
	_iter_end_1a52dd9c9:;;
	if ((_24313_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_23415_txt)).slice(0LL, _24313_i));
	return __jule_func_result;;
}



inline jule::Bool _2097db7d0_isFloatFmtE(jule::U8 _25616_b, jule::I64 _25625_i) {
	return ((_25625_i > 0LL) && ((_25616_b == 'e') || (_25616_b == 'E')));;
}



inline jule::Bool _2097dbb21_isFloatFmtP(jule::U8 _26016_b, jule::I64 _26025_i) {
	return ((_26025_i > 0LL) && ((_26016_b == 'p') || (_26016_b == 'P')));;
}



inline jule::Bool _2097dbe62_isFloatFmtDotnp(jule::Slice<jule::U8>* _26421_txt, jule::I64 _26438_i) {
	if (((*(_26421_txt))[_26438_i] != '.')) {
		return false;;
	};
	(_26438_i)++;
	_julec_label_loop:;
	for (; (_26438_i < (*(_26421_txt)).len()); (_26438_i)++) {
		{
			jule::U8 _27113_b = (*(_26421_txt))[_26438_i];;
			{
				
				if ((_27113_b == '_') || _2097d5103_IsDecimal(_27113_b)) {
					_case_begin_1a52e5c45:;
					{
						goto _iter_next_1a52e4abd;
					}
				}
				else if (_2097dbb21_isFloatFmtP(_27113_b, _26438_i)) {
					_case_begin_1a52e5cab:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1a52e5bce:;
					{
						goto _iter_end_1a52e4abd;
					}
				}
				_match_end_1a52e5b68:;
			};
		}
	_iter_next_1a52e4abd:;
	}
	_iter_end_1a52e4abd:;;
	return false;;
}



inline jule::Bool _2097dc2a3_isFloatFmtDotp(jule::Slice<jule::U8>* _28520_txt, jule::I64 _28533_i) {
	{
		
		if (((*(_28520_txt)).len() < 3LL)) {
			_case_begin_1a52e6ecc:;
			{
				goto _case_begin_1a52e7054;
			}
		}
		else if (((*(_28520_txt))[_28533_i] != '.')) {
			_case_begin_1a52e7054:;
			{
				goto _case_begin_1a52e70cb;
			}
		}
		else if ((((*(_28520_txt))[(_28533_i + 1LL)] != 'p') && ((*(_28520_txt))[(_28533_i + 1LL)] != 'P'))) {
			_case_begin_1a52e70cb:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1a52e6e66:;
			{
				return true;;
			}
		}
		_match_end_1a52e6d9a:;
	};
}



inline jule::Bool _2097dc5e4_isFloatFmtDotfp(jule::Slice<jule::U8>* _29821_txt, jule::I64 _29834_i) {
	{
		
		if (((*(_29821_txt)).len() < 4LL)) {
			_case_begin_1a52e8c26:;
			{
				goto _case_begin_1a52e8c9d;
			}
		}
		else if (((*(_29821_txt))[_29834_i] != '.')) {
			_case_begin_1a52e8c9d:;
			{
				goto _case_begin_1a52e8d25;
			}
		}
		else if ((((*(_29821_txt))[(_29834_i + 1LL)] != 'f') && ((*(_29821_txt))[(_29834_i + 1LL)] != 'F'))) {
			_case_begin_1a52e8d25:;
			{
				goto _case_begin_1a52e8d9c;
			}
		}
		else if ((((*(_29821_txt))[(_29834_i + 2LL)] != 'p') && ((*(_29821_txt))[(_29834_i + 1LL)] != 'P'))) {
			_case_begin_1a52e8d9c:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1a52e885d:;
			{
				return true;;
			}
		}
		_match_end_1a52e8792:;
	};
}



inline jule::Str _2097dca45_octalNum(jule::Slice<jule::U8>* _31314_txt) {
	jule::Str __jule_func_result;
	if (((*(_31314_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_31314_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I64 _32113_octalStart = 1LL;;
	jule::Bool _32313_o = false;;
	if (((*(_31314_txt))[1LL] == 'o')) {
		if (((*(_31314_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_32113_octalStart)++;
		_32313_o=true;
	};
	jule::I64 _33213_i = _32113_octalStart;;
	for (; (_33213_i < (*(_31314_txt)).len()); (_33213_i)++) {
		{
			jule::U8 _33413_b = (*(_31314_txt))[_33213_i];;
			if ((_33413_b == '.')) {
				if (_32313_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _2097dae50_floatNum(_31314_txt, _33213_i);
				return __jule_func_result;;
			};
			if (_2097db7d0_isFloatFmtE(_33413_b, _33213_i)) {
				__jule_func_result = _2097d9b96_floatFmtE(_31314_txt, _33213_i);
				return __jule_func_result;;
			};
			if (((_33413_b != '_') && (!(_2097d5642_IsOctal(_33413_b))))) {
				goto _iter_end_1a52ed522;
			};
		}
	_iter_next_1a52ed522:;
	}
	_iter_end_1a52ed522:;;
	if ((_33213_i == _32113_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_31314_txt)).slice(0LL, _33213_i));
	return __jule_func_result;;
}



inline jule::Str _2097dccdc_hexNum(jule::Slice<jule::U8>* _35512_txt) {
	jule::Str __jule_func_result;
	if (((*(_35512_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_35512_txt))[0LL] != '0') || (((*(_35512_txt))[1LL] != 'x') && ((*(_35512_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I64 _36413_i = 2LL;;
	_julec_label_loop:;
	for (; (_36413_i < (*(_35512_txt)).len()); (_36413_i)++) {
		{
			jule::U8 _36713_b = (*(_35512_txt))[_36413_i];;
			{
				
				if (_2097dc2a3_isFloatFmtDotp(_35512_txt, _36413_i)) {
					_case_begin_1a5302a65:;
					{
						__jule_func_result = _2097da9ee_floatFmtDotp(_35512_txt, _36413_i);
						return __jule_func_result;;
					}
				}
				else if (_2097dc5e4_isFloatFmtDotfp(_35512_txt, _36413_i)) {
					_case_begin_1a5302adc:;
					{
						__jule_func_result = _2097da6ad_floatFmtDotfp(_35512_txt, _36413_i);
						return __jule_func_result;;
					}
				}
				else if (_2097dbb21_isFloatFmtP(_36713_b, _36413_i)) {
					_case_begin_1a5302b64:;
					{
						__jule_func_result = _2097da02b_floatFmtP(_35512_txt, _36413_i);
						return __jule_func_result;;
					}
				}
				else if (_2097dbe62_isFloatFmtDotnp(_35512_txt, _36413_i)) {
					_case_begin_1a5302bdb:;
					{
						__jule_func_result = _2097da36c_floatFmtDotnp(_35512_txt, _36413_i);
						return __jule_func_result;;
					}
				}
				else if (((_36713_b != '_') && (!(_2097d58d9_IsHex(_36713_b))))) {
					_case_begin_1a5302c63:;
					{
						goto _iter_end_1a5301ed7;
					}
				}
				_match_end_1a5302977:;
			};
		}
	_iter_next_1a5301ed7:;
	}
	_iter_end_1a5301ed7:;;
	if ((_36413_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_35512_txt)).slice(0LL, _36413_i));
	return __jule_func_result;;
}



inline jule::Str _2097dd12d_hexEscape(jule::Slice<jule::U8>* _38815_txt, jule::I64 _38828_n) {
	jule::Str __jule_func_result;
	if (((*(_38815_txt)).len() < _38828_n)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _39413_i = 2LL;;
	for (; (_39413_i < _38828_n); (_39413_i)++) {
		{
			if ((!(_2097d58d9_IsHex((*(_38815_txt))[_39413_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1a530521b:;
	}
	_iter_end_1a530521b:;;
	__jule_func_result=static_cast<jule::Str>((*(_38815_txt)).slice(0LL, _38828_n));
	return __jule_func_result;;
}



inline jule::Str _2097dd3c5_bigUnicodePointEscape(jule::Slice<jule::U8>* _40627_txt) {
	return _2097dd12d_hexEscape(_40627_txt, 10LL);;
}



inline jule::Str _2097dd68e_littleUnicodePointEscape(jule::Slice<jule::U8>* _41130_txt) {
	return _2097dd12d_hexEscape(_41130_txt, 6LL);;
}



inline jule::Str _2097dd848_hexByteEscape(jule::Slice<jule::U8>* _41619_txt) {
	return _2097dd12d_hexEscape(_41619_txt, 4LL);;
}



inline jule::Str _2097ddace_byteEscape(jule::Slice<jule::U8>* _42116_txt) {
	jule::Str __jule_func_result;
	if (((*(_42116_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_2097d5642_IsOctal((*(_42116_txt))[1LL]))) || (!(_2097d5642_IsOctal((*(_42116_txt))[2LL])))) || (!(_2097d5642_IsOctal((*(_42116_txt))[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_42116_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_20943da3c_Log> _2097e35c8_Lex(jule::Ptr<_2097d6973_File> _81012_f, jule::I64 _81022_mode) {
	if ((_81012_f == nullptr)) {
		return nullptr;;
	};
	_2097de2b6_lex _81513_lex = _2097de2b6_lex{._field_mode=_81022_mode, ._field_file=_81012_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_2097e1d13_newLine(&_81513_lex);
	_2097ded11_lex(&_81513_lex);
	if ((_81513_lex._field_errors.len() > 0LL)) {
		return _81513_lex._field_errors;;
	};
	_81012_f.get()._field_Tokens=_81513_lex._field_tokens;
	return nullptr;;
}



inline jule::I64 _1dde492ee_LeadingZeros64(jule::U64 _6119_x) {
	return static_cast<jule::I64>((64LL - _1dde51779_Len64(_6119_x)));;
}



inline jule::I64 _1dde4a234_TrailingZeros(jule::U64 _8318_x) {
	;
	return static_cast<jule::I64>(_1dde4adc2_TrailingZeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8318_x))));;
}



inline jule::I64 _1dde4ab2a_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1dde49909__DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]));;
}



inline jule::I64 _1dde4adc2_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1dde49ec0__DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]));;
}



inline jule::I64 _1dde514d2_Len32(jule::U32 _35214_x) {
	jule::I64 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_35214_x)])));
	return __jule_func_result;;
}



inline jule::I64 _1dde51779_Len64(jule::U64 _36614_x) {
	jule::I64 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_36614_x)])));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1dde52439_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>(((_41510_x + _41518_y) + _41526_carry));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1dde53abc_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5019_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5029_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5039_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5049_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5059_w0 = (_5019_x0 * _5039_y0);;
	jule::U64 _5069_t = ((_5029_x1 * _5039_y0) + (_5059_w0 >> 32LLU));;
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);;
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);;
	_50713_w1+=(_5019_x0 * _5049_y1);
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>((((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LLU)));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((_49910_x * _49918_y));
	return __jule_func_result;;
}



inline jule::U32 _1ddd747ce_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _1ddd74aba_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _1ddd74d62_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _1ddd75181_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _1ddd7766c_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1a541d059:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_1dde5b443_IsInf(_4714_f, 0LL) || _1dde5ad8d_IsNaN(_4714_f)) {
			_case_begin_1a541d0d1:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1a541ce49:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1dde5b6da_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5613_x = _1ddd74d62_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I64>(((_5613_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1ddd75181_F64FromBits(_5613_x));
	return __jule_func_result;;
}



inline jule::F64 _1dde5aaa2_NaN(void) {
	return static_cast<jule::F64>(_1ddd75181_F64FromBits(9221120237041090561LLU));;
}



inline jule::Bool _1dde5ad8d_IsNaN(jule::F64 _5210_f) {
	return (_5210_f != _5210_f);;
}



inline jule::F64 _1dde5b135_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return static_cast<jule::F64>(_1ddd75181_F64FromBits(9218868437227405312LLU));;
	};
	return static_cast<jule::F64>(_1ddd75181_F64FromBits(18442240474082181120LLU));;
}



inline jule::Bool _1dde5b443_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _1dde5b6da_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_1dde5d962_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((_8214_x * 4503599627370496LLU));
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _1dde5d0c1_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1dde5ad8d_IsNaN(_1118_x) || _1dde5b443_IsInf(_1118_x, 1LL)) {
			_case_begin_1a54607c7:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1a546084e:;
			{
				return static_cast<jule::F64>(_1dde5aaa2_NaN());;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1a54608c6:;
			{
				return static_cast<jule::F64>(_1dde5b135_Inf(-1LL));;
			}
		}
		_match_end_1a546070b:;
	};
	jule::F64 _13314_f1 = 0;;
	jule::I64 _13322_ki = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1ddd7766c_Frexp(_1118_x);
		_13314_f1 = __jule_assign_result.__jule_result_arg0;
		_13322_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	};
	jule::F64 _1389_f = (_13314_f1 - 1LL);;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);;
	jule::F64 _1429_s = jule::div(_1389_f,(2LL + _1389_f));;
	jule::F64 _1439_s2 = (_1429_s * _1429_s);;
	jule::F64 _1449_s4 = (_1439_s2 * _1439_s2);;
	jule::F64 _1459_t1 = (_1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586)))))));;
	jule::F64 _1469_t2 = (_1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373)))));;
	jule::F64 _1479_R = (_1459_t1 + _1469_t2);;
	jule::F64 _1489_hfsq = ((0.5 * _1389_f) * _1389_f);;
	return static_cast<jule::F64>(((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f)));;
}



inline jule::F64 _1dde5d962_Abs(jule::F64 _438_x) {
	return static_cast<jule::F64>(_1ddd75181_F64FromBits(static_cast<jule::U64>((_1ddd74d62_F64Bits(_438_x) & 9223372036854775807LLU))));;
}



inline __jule_tuple_f64__jule_tuple_f64 _1dde653a3_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _469_absF = _1dde5d962_Abs(_449_f);;
	jule::F64 _4713_i = 0LL;;
	if ((_469_absF > 4503599627370496LL)) {
		_4713_i=_449_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_absF + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while ((_4713_i > _469_absF)) {
			{
				(_4713_i)--;
			}
		_iter_next_1a54c4b9e:;
		}
		_iter_end_1a54c4b9e:;;
		if ((_449_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		};
	};
	__jule_func_result.__jule_result_arg0 = _4713_i;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::F64>((_449_f - _4713_i));
	return __jule_func_result;;
}



inline jule::F64 _1dde65b67_Log2(jule::F64 _449_x) {
	jule::F64 _4510_frac = 0;;
	jule::I64 _4516_exp = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1ddd7766c_Frexp(_449_x);
		_4510_frac = __jule_assign_result.__jule_result_arg0;
		_4516_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));;
	};
	return static_cast<jule::F64>(((_1dde5d0c1_Log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp)));;
}



inline jule::Str _1dde8e4cb_FmtFloat(jule::F64 _7813_f, jule::U8 _7821_fmt, jule::I64 _7832_prec, jule::I64 _7843_bit_size) {
	return static_cast<jule::Str>(_1dde8ea4d_genericFtoa(jule::Slice<jule::U8>::alloc(0LL, _1dde92ad9_max(static_cast<jule::I64>((_7832_prec + 4LL)), 24LL), 0), _7813_f, _7821_fmt, _7832_prec, _7843_bit_size));;
}



inline jule::Slice<jule::U8> _1dde8ea4d_genericFtoa(jule::Slice<jule::U8> _8220_dst, jule::F64 _8233_val, jule::U8 _8243_fmt, jule::I64 _8258_prec, jule::I64 _8269_bit_size) {
	jule::U64 _8313_bits = 0LLU;;
	jule::Ptr<_1dde8d4ec_floatInfo> _8413_flt = nullptr;;
	{
		auto &_match_expr{ _8269_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1a4be5766:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_1ddd747ce_F32Bits(static_cast<jule::F32>(static_cast<jule::F32>(_8233_val)))));
				_8413_flt=((jule::Ptr<_1dde8d4ec_floatInfo>)((&(_1dde8d72d_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1a4be57cc:;
			{
				_8313_bits=static_cast<jule::U64>(_1ddd74d62_F64Bits(_8233_val));
				_8413_flt=((jule::Ptr<_1dde8d4ec_floatInfo>)((&(_1dde8da3b_f64info))));
			}
		}
		else {
			_case_begin_1a4be517d:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_1a4be3698:;
	};
	jule::Bool _969_neg = ((_8313_bits >> (_8413_flt.get()._field_expbits + _8413_flt.get()._field_mantbits)) != 0LLU);;
	jule::I64 _9713_exp = (static_cast<jule::I64>((_8313_bits >> _8413_flt.get()._field_mantbits)) & static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)));;
	jule::U64 _9813_mant = (_8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)))) {
			_case_begin_1a4be8a77:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_1a4beaa13:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'n','a','n'}));;
						}
					}
					else if (_969_neg) {
						_case_begin_1a4beac99:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'-','i','n','f'}));;
						}
					}
					else {
						_case_begin_1a4be9cdc:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'+','i','n','f'}));;
						}
					}
					_match_end_1a4be9c21:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1a4be910a:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_1a4be54ad:;
			{
				_9813_mant|=(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits);
			}
		}
		_match_end_1a4be8a22:;
	};
	_9713_exp+=_8413_flt.get()._field_bias;
	if ((_8243_fmt == 'b')) {
		return _1dde91cd6_fmtB(_8220_dst, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	if (((_8243_fmt == 'x') || (_8243_fmt == 'X'))) {
		return _1dde92457_fmtX(_8220_dst, _8258_prec, _8243_fmt, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	;
	_1dde8de8c_decimalSlice _13213_digs = _1dde8de8c_decimalSlice{};;
	jule::Bool _13313_ok = false;;
	jule::Bool _1359_shortest = (_8258_prec < 0LL);;
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL, 32LL, 0);
		_1dde9c297_ryuFtoaShortest(&(_13213_digs), _9813_mant, static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))), &((*(_8413_flt))));
		_13313_ok=true;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a4bee2db:;
				{
					_8258_prec=static_cast<jule::I64>(_1dde92ad9_max(static_cast<jule::I64>((_13213_digs._field_nd - 1LL)), 0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1a4bee352:;
				{
					_8258_prec=static_cast<jule::I64>(_1dde92ad9_max(static_cast<jule::I64>((_13213_digs._field_nd - _13213_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a4bee3c9:;
				{
					_8258_prec=_13213_digs._field_nd;
				}
			}
			_match_end_1a4bed3c8:;
		};
	} else if ((_8243_fmt != 'f')) {
		jule::I64 _15217_digits = _8258_prec;;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a4bee82a:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a4c01211:;
				{
					if ((_8258_prec == 0LL)) {
						_8258_prec=1LL;
					};
					_15217_digits=_8258_prec;
				}
			}
			else {
				_case_begin_1a4c01101:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_1a4c0109b:;
		};
		if (((_8269_bit_size == 32LL) && (_15217_digits <= 9LL))) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1dde9b0ed_ryuFtoaFixed32(&(_13213_digs), static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)), static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))), _15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1dde9b53d_ryuFtoaFixed64(&(_13213_digs), _9813_mant, static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))), _15217_digits);
			_13313_ok=true;
		};
	};
	if ((!(_13313_ok))) {
		return _1dde901be_bigFtoa(_8220_dst, _8258_prec, _8243_fmt, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	return _1dde9081d_fmtDigits(_8220_dst, _1359_shortest, _969_neg, _13213_digs, _8258_prec, _8243_fmt);;
}



inline jule::Slice<jule::U8> _1dde901be_bigFtoa(jule::Slice<jule::U8> _18216_dst, jule::I64 _18233_prec, jule::U8 _18244_fmt, jule::Bool _18255_neg, jule::U64 _1835_mant, jule::I64 _18316_exp, _1dde8d4ec_floatInfo* _18327_flt) {
	_1ddea0c90_decimal _18413_d = _1ddea0c90_decimal{};;
	_1ddea1125_assign(&_18413_d, _1835_mant);
	_1ddea139a_shift(&_18413_d, static_cast<jule::I64>((_18316_exp - static_cast<jule::I64>((*(_18327_flt))._field_mantbits))));
	_1dde8de8c_decimalSlice _18713_digs = _1dde8de8c_decimalSlice{};;
	jule::Bool _1889_shortest = (_18233_prec < 0LL);;
	if (_1889_shortest) {
		_1dde90c19_roundShortest(&(_18413_d), _1835_mant, _18316_exp, _18327_flt);
		_18713_digs=_1dde8de8c_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a4c07c73:;
				{
					_18233_prec=static_cast<jule::I64>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1a4c058ca:;
				{
					_18233_prec=static_cast<jule::I64>(_1dde92ad9_max(static_cast<jule::I64>((_18713_digs._field_nd - _18713_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a4c07cea:;
				{
					_18233_prec=_18713_digs._field_nd;
				}
			}
			_match_end_1a4c07833:;
		};
	} else {
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a4c06e4d:;
				{
					_1ddea1b1a_round(&_18413_d, static_cast<jule::I64>((_18233_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1a4c06ec5:;
				{
					_1ddea1b1a_round(&_18413_d, static_cast<jule::I64>((_18413_d._field_dp + _18233_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a4c0704c:;
				{
					if ((_18233_prec == 0LL)) {
						_18233_prec=1LL;
					};
					_1ddea1b1a_round(&_18413_d, _18233_prec);
				}
			}
			_match_end_1a4c095c1:;
		};
		_18713_digs=_1dde8de8c_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
	};
	return _1dde9081d_fmtDigits(_18216_dst, _1889_shortest, _18255_neg, _18713_digs, _18233_prec, _18244_fmt);;
}



inline jule::Slice<jule::U8> _1dde9081d_fmtDigits(jule::Slice<jule::U8> _21918_dst, jule::Bool _21931_shortest, jule::Bool _21947_neg, _1dde8de8c_decimalSlice _2205_digs, jule::I64 _22029_prec, jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1a4c0c4a3:;
			{
				return _1dde91247_fmtE(_21918_dst, _21947_neg, _2205_digs, _22029_prec, _22040_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1a4c0c519:;
			{
				return _1dde916cb_fmtF(_21918_dst, _21947_neg, _2205_digs, _22029_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1a4c0c580:;
			{
				jule::I64 _22817_eprec = _22029_prec;;
				if (((_22817_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp))) {
					_22817_eprec=_2205_digs._field_nd;
				};
				if (_21931_shortest) {
					_22817_eprec=6LL;
				};
				jule::I64 _23813_exp = (_2205_digs._field_dp - 1LL);;
				if (((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec))) {
					if ((_22029_prec > _2205_digs._field_nd)) {
						_22029_prec=_2205_digs._field_nd;
					};
					return _1dde91247_fmtE(_21918_dst, _21947_neg, _2205_digs, static_cast<jule::I64>((_22029_prec - 1LL)), static_cast<jule::U8>(((_22040_fmt + 'e') - 'g')));;
				};
				if ((_22029_prec > _2205_digs._field_dp)) {
					_22029_prec=_2205_digs._field_nd;
				};
				return _1dde916cb_fmtF(_21918_dst, _21947_neg, _2205_digs, static_cast<jule::I64>(_1dde92ad9_max(static_cast<jule::I64>((_22029_prec - _2205_digs._field_dp)), 0LL)));;
			}
		}
		_match_end_1a4c0c360:;
	};
	return jule::append(_21918_dst,jule::Slice<jule::U8>::make({'%',_22040_fmt}));;
}



inline void _1dde90c19_roundShortest(_1ddea0c90_decimal* _25723_d, jule::U64 _25735_mant, jule::I64 _25746_exp, _1dde8d4ec_floatInfo* _25757_flt) {
	if ((_25735_mant == 0LLU)) {
		(*(_25723_d))._field_nd=0LL;
		return;;
	};
	jule::I64 _2789_minexp = ((*(_25757_flt))._field_bias + 1LL);;
	if (((_25746_exp > _2789_minexp) && ((332LL * ((*(_25723_d))._field_dp - (*(_25723_d))._field_nd)) >= (100LL * (_25746_exp - static_cast<jule::I64>((*(_25757_flt))._field_mantbits)))))) {
		return;;
	};
	_1ddea0c90_decimal _28713_upper = _1ddea0c90_decimal{};;
	_1ddea1125_assign(&_28713_upper, static_cast<jule::U64>(((_25735_mant << 1LLU) + 1LLU)));
	_1ddea139a_shift(&_28713_upper, static_cast<jule::I64>(((_25746_exp - static_cast<jule::I64>((*(_25757_flt))._field_mantbits)) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;;
	jule::I64 _29813_explo = 0LL;;
	if (((_25735_mant > (1LLU << (*(_25757_flt))._field_mantbits)) || (_25746_exp == _2789_minexp))) {
		_29713_mantlo=static_cast<jule::U64>((_25735_mant - 1LLU));
		_29813_explo=_25746_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>(((_25735_mant << 1LLU) - 1LLU));
		_29813_explo=static_cast<jule::I64>((_25746_exp - 1LL));
	};
	_1ddea0c90_decimal _30613_lower = _1ddea0c90_decimal{};;
	_1ddea1125_assign(&_30613_lower, static_cast<jule::U64>(((_29713_mantlo << 1LLU) + 1LLU)));
	_1ddea139a_shift(&_30613_lower, static_cast<jule::I64>(((_29813_explo - static_cast<jule::I64>((*(_25757_flt))._field_mantbits)) - 1LL)));
	jule::Bool _3139_inclusive = ((_25735_mant & 1LL) == 0LLU);;
	jule::U8 _32613_upperdelta = 0LLU;;
	jule::I64 _33013_ui = 0LL;;
	for (; ; (_33013_ui)++) {
		{
			jule::I64 _33513_mi = ((_33013_ui - _28713_upper._field_dp) + (*(_25723_d))._field_dp);;
			if ((_33513_mi >= (*(_25723_d))._field_nd)) {
				goto _iter_end_1a4c1902b;
			};
			jule::I64 _33913_li = ((_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp);;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);;
			if (((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd))) {
				_34017_l=_30613_lower._field_d[_33913_li];
			};
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);;
			if ((_33513_mi >= 0LL)) {
				_34417_m=(*(_25723_d))._field_d[_33513_mi];
			};
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);;
			if ((_33013_ui < _28713_upper._field_nd)) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			};
			jule::Bool _35613_okdown = ((_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd)));;
			{
				
				if (((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u))) {
					_case_begin_1a4c1daad:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if (((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u))) {
					_case_begin_1a4c1db35:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if (((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0')))) {
					_case_begin_1a4c1dbac:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_1a4c1da03:;
			};
			jule::Bool _37713_okup = ((_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd)));;
			{
				
				if ((_35613_okdown && _37713_okup)) {
					_case_begin_1a4c21561:;
					{
						_1ddea1b1a_round(_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_35613_okdown) {
					_case_begin_1a4c215c7:;
					{
						_1ddea1620_roundDown(_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_37713_okup) {
					_case_begin_1a4c2163d:;
					{
						_1ddea1895_roundUp(_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				_match_end_1a4c1cd98:;
			};
		}
	_iter_next_1a4c1902b:;
	}
	_iter_end_1a4c1902b:;;
}



inline jule::Slice<jule::U8> _1dde91247_fmtE(jule::Slice<jule::U8> _39613_dst, jule::Bool _39626_neg, _1dde8de8c_decimalSlice _39637_d, jule::I64 _39654_prec, jule::U8 _39665_fmt) {
	if (_39626_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push('-'); };
	};
	jule::U8 _40313_ch = '0';;
	if ((_39637_d._field_nd != 0LL)) {
		_40313_ch=_39637_d._field_d[0LL];
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push(_40313_ch); };
	if ((_39654_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push('.'); };
		jule::I64 _41217_i = 1LL;;
		jule::I64 _41313_m = _1dde92798_min(_39637_d._field_nd, static_cast<jule::I64>((_39654_prec + 1LL)));;
		if ((_41217_i < _41313_m)) {
			(_39613_dst).append(_39637_d._field_d.slice(_41217_i, _41313_m));;
			_41217_i=_41313_m;
		};
		for (; (_41217_i <= _39654_prec); (_41217_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1a4c263ac:;
		}
		_iter_end_1a4c263ac:;;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push(_39665_fmt); };
	jule::I64 _42513_exp = (_39637_d._field_dp - 1LL);;
	if ((_39637_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	};
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I64>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push(_40313_ch); };
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_1a4c2816c:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push('0'); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(_42513_exp) + '0'))); };
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_1a4c27ed5:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0'))); };
			}
		}
		else {
			_case_begin_1a4c27ca4:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 100LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_42513_exp / 10LL)) % 10LL) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0'))); };
			}
		}
		_match_end_1a4c27435:;
	};
	return _39613_dst;;
}



inline jule::Slice<jule::U8> _1dde916cb_fmtF(jule::Slice<jule::U8> _45113_dst, jule::Bool _45126_neg, _1dde8de8c_decimalSlice _45137_d, jule::I64 _45154_prec) {
	if (_45126_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push('-'); };
	};
	if ((_45137_d._field_dp > 0LL)) {
		jule::I64 _45917_m = _1dde92798_min(_45137_d._field_nd, _45137_d._field_dp);;
		(_45113_dst).append(_45137_d._field_d.slice(0LL, _45917_m));;
		for (; (_45917_m < _45137_d._field_dp); (_45917_m)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1a4c2bc97:;
		}
		_iter_end_1a4c2bc97:;;
	} else {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push('0'); };
	};
	if ((_45154_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push('.'); };
		jule::I64 _47017_i = 0LL;;
		for (; (_47017_i < _45154_prec); (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47317_j = (_45137_d._field_dp + _47017_i);;
				if (((0LL <= _47317_j) && (_47317_j < _45137_d._field_nd))) {
					_47221_ch=_45137_d._field_d[_47317_j];
				};
				{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push(_47221_ch); };
			}
		_iter_next_1a4c2ccdc:;
		}
		_iter_end_1a4c2ccdc:;;
	};
	return _45113_dst;;
}



inline jule::Slice<jule::U8> _1dde91cd6_fmtB(jule::Slice<jule::U8> _48413_dst, jule::Bool _48426_neg, jule::U64 _48437_mant, jule::I64 _48452_exp, _1dde8d4ec_floatInfo* _48463_flt) {
	if (_48426_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48413_dst; __jule_push_dest.push('-'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1ddea5a97_fmtBits(_48413_dst, _48437_mant, 10LL, false, true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	{ jule::Slice<jule::U8> &__jule_push_dest = _48413_dst; __jule_push_dest.push('p'); };
	_48452_exp-=static_cast<jule::I64>((*(_48463_flt))._field_mantbits);
	if ((_48452_exp >= 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48413_dst; __jule_push_dest.push('+'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1ddea5a97_fmtBits(_48413_dst, static_cast<jule::U64>(static_cast<jule::U64>(_48452_exp)), 10LL, (_48452_exp < 0LL), true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48413_dst;;
}



inline jule::Slice<jule::U8> _1dde92457_fmtX(jule::Slice<jule::U8> _50613_dst, jule::I64 _50626_prec, jule::U8 _50637_fmt, jule::Bool _50648_neg, jule::U64 _5079_mant, jule::I64 _50724_exp, _1dde8d4ec_floatInfo* _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	};
	_5079_mant<<=(60LLU - (*(_50735_flt))._field_mantbits);
	while (((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_1a4c3370a:;
	}
	_iter_end_1a4c3370a:;;
	if (((_50626_prec >= 0LL) && (_50626_prec < 15LL))) {
		jule::U64 _52113_shift = static_cast<jule::U64>((_50626_prec << 2LLU));;
		jule::U64 _52213_extra = ((_5079_mant << _52113_shift) & 1152921504606846975LLU);;
		_5079_mant>>=(60LLU - _52113_shift);
		if (((_52213_extra | (_5079_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5079_mant)++;
		};
		_5079_mant<<=(60LLU - _52113_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		};
	};
	jule::Str _53513_hex = jule::Str();;
	if ((_50637_fmt == 'X')) {
		_53513_hex=jule::Str("0123456789ABCDEF", 16);
	} else {
		_53513_hex=jule::Str("0123456789abcdef", 16);
	};
	if (_50648_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push('-'); };
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push('0'); __jule_push_dest.__push(_50637_fmt); __jule_push_dest.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU))))); };
	_5079_mant<<=4LLU;
	if (((_50626_prec < 0LL) && (_5079_mant != 0LLU))) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push('.'); };
		while ((_5079_mant != 0LLU)) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]); };
				_5079_mant<<=4LLU;
			}
		_iter_next_1a4c38b72:;
		}
		_iter_end_1a4c38b72:;;
	} else if ((_50626_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push('.'); };
		jule::I64 _55817_i = 0LL;;
		for (; (_55817_i < _50626_prec); (_55817_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]); };
				_5079_mant<<=4LLU;
			}
		_iter_next_1a4c39d1b:;
		}
		_iter_end_1a4c39d1b:;;
	};
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);;
	if ((_50637_fmt == _1dde93612_lower(_50637_fmt))) {
		_56613_ch='p';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push(_56613_ch); };
	if ((_50724_exp < 0LL)) {
		_56613_ch='-';
		_50724_exp=static_cast<jule::I64>((-(_50724_exp)));
	} else {
		_56613_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push(_56613_ch); };
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_1a4c3c59e:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0'))); };
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_1a4c37445:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 100LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0'))); };
			}
		}
		else {
			_case_begin_1a4c3c208:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.alloc_for_append(4); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 1000LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_50724_exp / 100LL)) % 10LL) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0'))); };
			}
		}
		_match_end_1a4c3b9aa:;
	};
	return _50613_dst;;
}



inline jule::I64 _1dde92798_min(jule::I64 _5918_a, jule::I64 _59116_b) {
	if ((_5918_a < _59116_b)) {
		return _5918_a;;
	};
	return _59116_b;;
}



inline jule::I64 _1dde92ad9_max(jule::I64 _5988_a, jule::I64 _59816_b) {
	if ((_5988_a > _59816_b)) {
		return _5988_a;;
	};
	return _59816_b;;
}



inline jule::U8 _1dde93612_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | 32LL));;
}



inline __jule_tuple_u64__jule_tuple__216a5d88b_ConvError _1dde93a41_parseUint(jule::Str _5118_s, jule::I64 _5130_base, jule::I64 _5145_bitSize) {
	__jule_tuple_u64__jule_tuple__216a5d88b_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (_5118_s.empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5130_base) && (_5130_base <= 36LL))) {
			_case_begin_1a4c437e7:;
		}
		else if ((_5130_base == 0LL)) {
			_case_begin_1a4c436d7:;
			{
				_5130_base=10LL;
				if ((_5118_s[0LL] == '0')) {
					{
						
						if (((_5118_s.len() >= 3LL) && (_1dde93612_lower(_5118_s[1LL]) == 'b'))) {
							_case_begin_1a4c452dd:;
							{
								_5130_base=2LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_1dde93612_lower(_5118_s[1LL]) == 'o'))) {
							_case_begin_1a4c45101:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_1dde93612_lower(_5118_s[1LL]) == 'x'))) {
							_case_begin_1a4c45178:;
							{
								_5130_base=16LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1a4c44c49:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(1LL);;
							}
						}
						_match_end_1a4c44b7d:;
					};
				};
			}
		}
		else {
			_case_begin_1a4c42bae:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1a4c43022:;
	};
	if ((_5145_bitSize == 0LL)) {
		_5145_bitSize=64LL;
	} else if (((_5145_bitSize < 0LL) || (_5145_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _9013_cutoff = 0LLU;;
	{
		auto &_match_expr{ _5130_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1a4c48e7e:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1a4c4880d:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1a4c48a50:;
			{
				_9013_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5130_base)) + 1LLU));
			}
		}
		_match_end_1a4c489ea:;
	};
	jule::U64 _10013_maxVal = 0LLU;;
	{
		auto &_match_expr{ _5145_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1a4c48b60:;
			{
				_10013_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1a4c49e5d:;
			{
				_10013_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1a4c49e08:;
	};
	jule::U64 _10813_n = 0LLU;;
	{
		auto expr = &(_5118_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a4c4ad0a:;
		if (it != expr_end) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11017_d = 0LLU;;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1a4c4a27c:;
						{
							_11017_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _1dde93612_lower(_10912_c)) && (_1dde93612_lower(_10912_c) <= 'z'))) {
						_case_begin_1a4c4c01a:;
						{
							_11017_d=static_cast<jule::U8>(((_1dde93612_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1a4c4bb41:;
						{
							goto _iter_next_1a4c4ad0a;
						}
					}
					else {
						_case_begin_1a4c4baca:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1a4c4ba64:;
				};
				if ((_11017_d >= static_cast<jule::U8>(_5130_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
					return __jule_func_result;;
				};
				if ((_10813_n >= _9013_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _10013_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_10813_n*=static_cast<jule::U64>(_5130_base);
				jule::U64 _13213_n1 = (_10813_n + static_cast<jule::U64>(_11017_d));;
				if (((_13213_n1 < _10813_n) || (_13213_n1 > _10013_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _10013_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_10813_n=_13213_n1;
			}
			_iter_next_1a4c4ad0a:;
			++it;
			goto _iter_begin_1a4c4ad0a;
		}
		_iter_end_1a4c4ad0a:;
	};
	__jule_func_result.__jule_result_arg0 = _10813_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _1dde93e2b_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bit_size) {
	jule::U64 _14710_un = 0;;
	jule::I64 _14714_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__216a5d88b_ConvError __jule_assign_result = _1dde93a41_parseUint(_14618_s, _14630_base, _14645_bit_size);
		_14710_un = __jule_assign_result.__jule_result_arg0;
		_14714_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_14714_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>(jule::Any(_14714_err, &__jule_any_type0));
	};
	return jule::Exceptional<jule::U64>(jule::Any(), _14710_un);;
}



inline jule::Exceptional<jule::I64> _1dde9438d_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if (_17217_s.empty()) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
	};
	jule::Bool _17813_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_17813_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _18714_un = 0;;
	jule::I64 _18718_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__216a5d88b_ConvError __jule_assign_result = _1dde93a41_parseUint(_17217_s, _17225_base, _17240_bitSize);
		_18714_un = __jule_assign_result.__jule_result_arg0;
		_18718_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18718_err != static_cast<jule::I64>(0LL)) && (_18718_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>(jule::Any(_18718_err, &__jule_any_type0));
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1969_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17240_bitSize - 1LL))));;
	if (((!(_17813_neg)) && (_18714_un >= _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0));
	};
	if ((_17813_neg && (_18714_un > _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0));
	};
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);;
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(), _20313_n);;
}



inline __jule_tuple_f64__jule_tuple_bool _1dde94ea4_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1ddd75181_F64FromBits(9223372036854775808LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _579_clz = _1dde492ee_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U64>(_579_clz);
	;
	jule::U64 _6013_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_579_clz));;
	jule::U64 _6314_xHi = 0;;
	jule::U64 _6323_xLo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dde53abc_Mul64(_4122_man, _1dde95d1d_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_6314_xHi = __jule_assign_result.__jule_result_arg0;
		_6323_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_6314_xHi & 511LLU) == 511LLU) && ((_6323_xLo + _4122_man) < _4122_man))) {
		jule::U64 _6714_yHi = 0;;
		jule::U64 _6719_yLo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dde53abc_Mul64(_4122_man, _1dde95d1d_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_6714_yHi = __jule_assign_result.__jule_result_arg0;
			_6719_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _6818_mergedHi = 0;;
		jule::U64 _6828_mergedLo = 0;;
		({
			jule::U64 ___jule_assign_arg = _6314_xHi;
			jule::U64 _1___jule_assign_arg = (_6323_xLo + _6714_yHi);
			_6818_mergedHi = ___jule_assign_arg;
			_6828_mergedLo = _1___jule_assign_arg;
		});
		if ((_6828_mergedLo < _6323_xLo)) {
			(_6818_mergedHi)++;
		};
		if (((((_6818_mergedHi & 511LLU) == 511LLU) && ((_6828_mergedLo + 1LLU) == 0LLU)) && ((_6719_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _6818_mergedHi;
			jule::U64 _1___jule_assign_arg = _6828_mergedLo;
			_6314_xHi = ___jule_assign_arg;
			_6323_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _799_msb = (_6314_xHi >> 63LLU);;
	jule::U64 _8013_retMantissa = (_6314_xHi >> (_799_msb + 9LLU));;
	_6013_retExp2-=(1LLU ^ _799_msb);
	if ((((_6323_xLo == 0LLU) && ((_6314_xHi & 511LLU) == 0LLU)) && ((_8013_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_8013_retMantissa+=(_8013_retMantissa & 1LLU);
	_8013_retMantissa>>=1LLU;
	if (((_8013_retMantissa >> 53LLU) > 0LLU)) {
		_8013_retMantissa>>=1LLU;
		_6013_retExp2+=1LLU;
	};
	if (((_6013_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _10313_retBits = ((_6013_retExp2 << 52LLU) | (_8013_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_10313_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1ddd75181_F64FromBits(_10313_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1dde953a0_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_1ddd74aba_F32FromBits(2147483648LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _1329_clz = _1dde492ee_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U64>(_1329_clz);
	;
	jule::U64 _13513_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1329_clz));;
	jule::U64 _13814_x_hi = 0;;
	jule::U64 _13824_x_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dde53abc_Mul64(_11022_man, _1dde95d1d_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_13814_x_hi = __jule_assign_result.__jule_result_arg0;
		_13824_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _14214_y_hi = 0;;
		jule::U64 _14220_y_lo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dde53abc_Mul64(_11022_man, _1dde95d1d_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_14214_y_hi = __jule_assign_result.__jule_result_arg0;
			_14220_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _14318_merged_hi = 0;;
		jule::U64 _14329_merged_lo = 0;;
		({
			jule::U64 ___jule_assign_arg = _13814_x_hi;
			jule::U64 _1___jule_assign_arg = (_13824_x_lo + _14214_y_hi);
			_14318_merged_hi = ___jule_assign_arg;
			_14329_merged_lo = _1___jule_assign_arg;
		});
		if ((_14329_merged_lo < _13824_x_lo)) {
			(_14318_merged_hi)++;
		};
		if (((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _14318_merged_hi;
			jule::U64 _1___jule_assign_arg = _14329_merged_lo;
			_13814_x_hi = ___jule_assign_arg;
			_13824_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);;
	jule::U64 _15513_retMantissa = (_13814_x_hi >> (_1549_msb + 38LLU));;
	_13513_retExp2-=(1LLU ^ _1549_msb);
	if ((((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_15513_retMantissa+=(_15513_retMantissa & 1LLU);
	_15513_retMantissa>>=1LLU;
	if (((_15513_retMantissa >> 24LLU) > 0LLU)) {
		_15513_retMantissa>>=1LLU;
		_13513_retExp2+=1LLU;
	};
	if (((_13513_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _17813_retBits = ((_13513_retExp2 << 23LLU) | (_15513_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_17813_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_1ddd74aba_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_retBits))));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I64 _1dde970b6_commonPrefixLenIgnoreCase(jule::Str _4530_s, jule::Str _4538_prefix) {
	jule::I64 _4613_n = _4538_prefix.len();;
	if ((_4613_n > _4530_s.len())) {
		_4613_n=static_cast<jule::I64>(_4530_s.len());
	};
	jule::I64 _5013_i = 0LL;;
	for (; (_5013_i < _4613_n); (_5013_i)++) {
		{
			jule::U8 _5217_c = _4530_s[_5013_i];;
			if ((('A' <= _5217_c) && (_5217_c <= 'Z'))) {
				_5217_c+=32LL;
			};
			if ((_5217_c != _4538_prefix[_5013_i])) {
				return _5013_i;;
			};
		}
	_iter_next_1a5725020:;
	}
	_iter_end_1a5725020:;;
	return _4613_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1dde973b3_special(jule::Str _6816_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if (_6816_s.empty()) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I64 _7213_sign = 1LL;;
	jule::I64 _7313_nsign = 0LL;;
	{
		auto &_match_expr{ _6816_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1a57286e9:;
			{
				if ((_6816_s[0LL] == '-')) {
					_7213_sign=-1LL;
				};
				_7313_nsign=1LL;
				(_6816_s).mut_slice(1LL);;
				goto _case_begin_1a5728771;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1a5728771:;
			{
				jule::I64 _8317_caseN = _1dde970b6_commonPrefixLenIgnoreCase(_6816_s, jule::Str("infinity", 8));;
				if (((3LL < _8317_caseN) && (_8317_caseN < 8LL))) {
					_8317_caseN=3LL;
				};
				if (((_8317_caseN == 3LL) || (_8317_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1dde5b135_Inf(_7213_sign));
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_7313_nsign + __jule_func_result.__jule_result_arg1));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1a57287e8:;
			{
				if ((_1dde970b6_commonPrefixLenIgnoreCase(_6816_s, jule::Str("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1dde5aaa2_NaN());
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1a572862d:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1dde9765a_readFloat(jule::Str _10314_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= _10314_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_10314_s[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1a572d479:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if ((_10314_s[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1a572d710:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1a572d644:;
	};
	jule::U64 _11713_base = 10LLU;;
	jule::I64 _11813_maxMantDigits = 19LL;;
	jule::U8 _11913_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < _10314_s.len()) && (_10314_s[__jule_func_result.__jule_result_arg5] == '0')) && (_1dde93612_lower(_10314_s[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_11713_base=16LLU;
		_11813_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_11913_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _12713_sawdot = false;;
	jule::Bool _12813_sawdigits = false;;
	jule::I64 _12913_nd = 0LL;;
	jule::I64 _13013_ndMant = 0LL;;
	jule::I64 _13113_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < _10314_s.len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _13313_c = _10314_s[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_13313_c == '_')) {
					_case_begin_1a5733704:;
					{
						goto _iter_next_1a5732c97;
					}
				}
				else if ((_13313_c == '.')) {
					_case_begin_1a573377b:;
					{
						if (_12713_sawdot) {
							goto _julec_label_loop_end;
						};
						_12713_sawdot=true;
						_13113_dp=_12913_nd;
						goto _iter_next_1a5732c97;
					}
				}
				else if ((('0' <= _13313_c) && (_13313_c <= '9'))) {
					_case_begin_1a5733803:;
					{
						_12813_sawdigits=true;
						if (((_13313_c == '0') && (_12913_nd == 0LL))) {
							(_13113_dp)--;
							goto _iter_next_1a5732c97;
						};
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_11713_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((_13313_c - '0'));
							(_13013_ndMant)++;
						} else if ((_13313_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1a5732c97;
					}
				}
				else if ((((_11713_base == 16LLU) && ('a' <= _1dde93612_lower(_13313_c))) && (_1dde93612_lower(_13313_c) <= 'f'))) {
					_case_begin_1a573387a:;
					{
						_12813_sawdigits=true;
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>(((_1dde93612_lower(_13313_c) - 'a') + 10LLU));
							(_13013_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1a5732c97;
					}
				}
				_match_end_1a5733627:;
			};
			goto _iter_end_1a5732c97;
		}
	_iter_next_1a5732c97:;
	}
	_iter_end_1a5732c97:;;
	_julec_label_loop_end:;
	if ((!(_12813_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_12713_sawdot))) {
		_13113_dp=_12913_nd;
	};
	if ((_11713_base == 16LLU)) {
		_13113_dp*=4LL;
		_13013_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < _10314_s.len()) && (_1dde93612_lower(_10314_s[__jule_func_result.__jule_result_arg5]) == _11913_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= _10314_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _19617_esign = 1LL;;
		if ((_10314_s[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if ((_10314_s[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_19617_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= _10314_s.len()) || (_10314_s[__jule_func_result.__jule_result_arg5] < '0')) || (_10314_s[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _20617_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < _10314_s.len()) && ((('0' <= _10314_s[__jule_func_result.__jule_result_arg5]) && (_10314_s[__jule_func_result.__jule_result_arg5] <= '9')) || (_10314_s[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if ((_10314_s[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1a573b157;
				};
				if ((_20617_e < 10000LL)) {
					_20617_e=static_cast<jule::I64>((((_20617_e * 10LL) + static_cast<jule::I64>(_10314_s[__jule_func_result.__jule_result_arg5])) - '0'));
				};
			}
		_iter_next_1a573b157:;
		}
		_iter_end_1a573b157:;;
		_13113_dp+=(_20617_e * _19617_esign);
	} else if ((_11713_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=static_cast<jule::I64>((_13113_dp - _13013_ndMant));
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _1dde990da_atof64exact(jule::U64 _48116_mantissa, jule::I64 _48135_exp, jule::Bool _48145_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_48116_mantissa >> _1dde8da3b_f64info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(static_cast<jule::F64>(_48116_mantissa));
	if (_48145_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F64>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_48135_exp == 0LL)) {
			_case_begin_1a5744979:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48135_exp > 0LL) && (_48135_exp <= 37LL))) {
			_case_begin_1a5744a01:;
			{
				if ((_48135_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_1dde98507_f64pow10[(_48135_exp - 22LL)];
					_48135_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((__jule_func_result.__jule_result_arg0 * _1dde98507_f64pow10[_48135_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48135_exp < 0LL) && (_48135_exp >= -22LL))) {
			_case_begin_1a5744a78:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(jule::div(__jule_func_result.__jule_result_arg0,_1dde98507_f64pow10[(-(_48135_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a574433b:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1dde994c5_atof32exact(jule::U64 _51516_mantissa, jule::I64 _51535_exp, jule::Bool _51549_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_51516_mantissa >> _1dde8d72d_f32info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(static_cast<jule::F32>(_51516_mantissa));
	if (_51549_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F32>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_51535_exp == 0LL)) {
			_case_begin_1a5748cbe:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_51535_exp > 0LL) && (_51535_exp <= 17LL))) {
			_case_begin_1a5748d46:;
			{
				if ((_51535_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_1dde98848_f32pow10[(_51535_exp - 10LL)];
					_51535_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>((__jule_func_result.__jule_result_arg0 * _1dde98848_f32pow10[_51535_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_51535_exp < 0LL) && (_51535_exp >= -10LL))) {
			_case_begin_1a5748dbd:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(jule::div(__jule_func_result.__jule_result_arg0,_1dde98848_f32pow10[(-(_51535_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a5748681:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__216a5d88b_ConvError _1dde99a9c_atofHex(jule::Str _55112_s, _1dde8d4ec_floatInfo* _55121_flt, jule::U64 _55141_mantissa, jule::I64 _55160_exp, jule::Bool _55170_neg, jule::Bool _55181_trunc) {
	__jule_tuple_f64__jule_tuple__216a5d88b_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I64 _5529_maxExp = ((static_cast<jule::I64>((1LL << (*(_55121_flt))._field_expbits)) + (*(_55121_flt))._field_bias) - 2LL);;
	jule::I64 _5539_minExp = ((*(_55121_flt))._field_bias + 1LL);;
	_55160_exp+=static_cast<jule::I64>((*(_55121_flt))._field_mantbits);
	while (((_55141_mantissa != 0LLU) && ((_55141_mantissa >> ((*(_55121_flt))._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55141_mantissa<<=1LLU;
			(_55160_exp)--;
		}
	_iter_next_1a574d279:;
	}
	_iter_end_1a574d279:;;
	if (_55181_trunc) {
		_55141_mantissa|=1LLU;
	};
	while (((_55141_mantissa >> ((1LLU + (*(_55121_flt))._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_1a574ee6d:;
	}
	_iter_end_1a574ee6d:;;
	while (((_55141_mantissa > 1LLU) && (_55160_exp < (_5539_minExp - 2LL)))) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_1a5750655:;
	}
	_iter_end_1a5750655:;;
	jule::U64 _58313_round = (_55141_mantissa & 3LLU);;
	_55141_mantissa>>=2LLU;
	_58313_round|=(_55141_mantissa & 1LLU);
	_55160_exp+=2LL;
	if ((_58313_round == 3LLU)) {
		(_55141_mantissa)++;
		if ((_55141_mantissa == (1LLU << (1LLU + (*(_55121_flt))._field_mantbits)))) {
			_55141_mantissa>>=1LLU;
			(_55160_exp)++;
		};
	};
	if (((_55141_mantissa >> (*(_55121_flt))._field_mantbits) == 0LLU)) {
		_55160_exp=(*(_55121_flt))._field_bias;
	};
	jule::I64 _59813_err = static_cast<jule::I64>(0LL);;
	if ((_55160_exp > _5529_maxExp)) {
		_55141_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << (*(_55121_flt))._field_mantbits)));
		_55160_exp=static_cast<jule::I64>((_5529_maxExp + 1LL));
		_59813_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _60513_bits = (_55141_mantissa & ((1LLU << (*(_55121_flt))._field_mantbits) - 1LLU));;
	_60513_bits|=(static_cast<jule::U64>(((_55160_exp - (*(_55121_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_55121_flt))._field_expbits) - 1LL)))) << (*(_55121_flt))._field_mantbits);
	if (_55170_neg) {
		_60513_bits|=((1LLU << (*(_55121_flt))._field_mantbits) << (*(_55121_flt))._field_expbits);
	};
	if (((*(_55121_flt)) == _1dde8d72d_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_1ddd74aba_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_60513_bits)))));
		__jule_func_result.__jule_result_arg1 = _59813_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1ddd75181_F64FromBits(_60513_bits));
	__jule_func_result.__jule_result_arg1 = _59813_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__216a5d88b_ConvError _1dde99e54_atof32(jule::Str _61611_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__216a5d88b_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _61814_val = 0;;
		jule::I64 _61819__n = 0;;
		jule::Bool _61823_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dde973b3_special(_61611_s);
			_61814_val = __jule_assign_result.__jule_result_arg0;
			_61819__n = __jule_assign_result.__jule_result_arg1;
			_61823_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_61823_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_61814_val));
			__jule_func_result.__jule_result_arg1 = _61819__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _62410_mantissa = 0;;
	jule::I64 _62420_exp = 0;;
	jule::Bool _62425_neg = false;;
	jule::Bool _62430_trunc = false;;
	jule::Bool _62437_hex = false;;
	jule::I64 _62442__n = 0;;
	jule::Bool _62450_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dde9765a_readFloat(_61611_s);
		_62410_mantissa = __jule_assign_result.__jule_result_arg0;
		_62420_exp = __jule_assign_result.__jule_result_arg1;
		_62425_neg = __jule_assign_result.__jule_result_arg2;
		_62430_trunc = __jule_assign_result.__jule_result_arg3;
		_62437_hex = __jule_assign_result.__jule_result_arg4;
		_62442__n = __jule_assign_result.__jule_result_arg5;
		_62450_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62442__n;
	if ((!(_62450_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_62437_hex) {
		jule::F64 _63117_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__216a5d88b_ConvError __jule_assign_result = _1dde99a9c_atofHex(_61611_s.slice(0LL, __jule_func_result.__jule_result_arg1), &(_1dde8d72d_f32info), _62410_mantissa, _62420_exp, _62425_neg, _62430_trunc);
			_63117_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_63117_ff));
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62430_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1dde994c5_atof32exact(_62410_mantissa, _62420_exp, _62425_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62450_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62450_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1dde953a0_eiselLemire32(_62410_mantissa, _62420_exp, _62425_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62450_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62450_ok) {
			if ((!(_62430_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _65321_fUp = 0.0f;;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1dde953a0_eiselLemire32(static_cast<jule::U64>((_62410_mantissa + 1LLU)), _62420_exp, _62425_neg);
				_65321_fUp = __jule_assign_result.__jule_result_arg0;
				_62450_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62450_ok && (__jule_func_result.__jule_result_arg0 == _65321_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1ddea0c90_decimal _66213_d = _1ddea0c90_decimal{};;
	if ((!(_1dde97cba_set(&_66213_d, _61611_s.slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _66610_b = 0;;
	jule::Bool _66613_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1dde980c8_floatBits(&_66213_d, &(_1dde8d72d_f32info));
		_66610_b = __jule_assign_result.__jule_result_arg0;
		_66613_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_1ddd74aba_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_66610_b))));
	if (_66613_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__216a5d88b_ConvError _1dde9a1eb_atof64(jule::Str _67411_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__216a5d88b_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _67614_val = 0;;
		jule::I64 _67619__n = 0;;
		jule::Bool _67623_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dde973b3_special(_67411_s);
			_67614_val = __jule_assign_result.__jule_result_arg0;
			_67619__n = __jule_assign_result.__jule_result_arg1;
			_67623_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_67623_ok) {
			__jule_func_result.__jule_result_arg0 = _67614_val;
			__jule_func_result.__jule_result_arg1 = _67619__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _68210_mantissa = 0;;
	jule::I64 _68220_exp = 0;;
	jule::Bool _68225_neg = false;;
	jule::Bool _68230_trunc = false;;
	jule::Bool _68237_hex = false;;
	jule::I64 _68242__n = 0;;
	jule::Bool _68250_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dde9765a_readFloat(_67411_s);
		_68210_mantissa = __jule_assign_result.__jule_result_arg0;
		_68220_exp = __jule_assign_result.__jule_result_arg1;
		_68225_neg = __jule_assign_result.__jule_result_arg2;
		_68230_trunc = __jule_assign_result.__jule_result_arg3;
		_68237_hex = __jule_assign_result.__jule_result_arg4;
		_68242__n = __jule_assign_result.__jule_result_arg5;
		_68250_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68242__n;
	if ((!(_68250_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_68237_hex) {
		({
			__jule_tuple_f64__jule_tuple__216a5d88b_ConvError __jule_assign_result = _1dde99a9c_atofHex(_67411_s.slice(0LL, __jule_func_result.__jule_result_arg1), &(_1dde8da3b_f64info), _68210_mantissa, _68220_exp, _68225_neg, _68230_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68230_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1dde990da_atof64exact(_68210_mantissa, _68220_exp, _68225_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68250_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68250_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1dde94ea4_eiselLemire64(_68210_mantissa, _68220_exp, _68225_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68250_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68250_ok) {
			if ((!(_68230_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _71021_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1dde94ea4_eiselLemire64(static_cast<jule::U64>((_68210_mantissa + 1LLU)), _68220_exp, _68225_neg);
				_71021_fUp = __jule_assign_result.__jule_result_arg0;
				_68250_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68250_ok && (__jule_func_result.__jule_result_arg0 == _71021_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1ddea0c90_decimal _71913_d = _1ddea0c90_decimal{};;
	if ((!(_1dde97cba_set(&_71913_d, _67411_s.slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _72310_b = 0;;
	jule::Bool _72313_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1dde980c8_floatBits(&_71913_d, &(_1dde8da3b_f64info));
		_72310_b = __jule_assign_result.__jule_result_arg0;
		_72313_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1ddd75181_F64FromBits(_72310_b));
	if (_72313_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__216a5d88b_ConvError _1dde9a53c_parseFloatPrefix(jule::Str _73121_s, jule::I64 _73129_bit_size) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__216a5d88b_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73129_bit_size == 32LL)) {
		jule::F32 _73314_f = 0;;
		jule::I64 _73317_n = 0;;
		jule::I64 _73320_err = 0LL;;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__216a5d88b_ConvError __jule_assign_result = _1dde99e54_atof32(_73121_s);
			_73314_f = __jule_assign_result.__jule_result_arg0;
			_73317_n = __jule_assign_result.__jule_result_arg1;
			_73320_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_73314_f));
		__jule_func_result.__jule_result_arg1 = _73317_n;
		__jule_func_result.__jule_result_arg2 = _73320_err;
		return __jule_func_result;;
	};
	jule::F64 _73710_f = 0;;
	jule::I64 _73713_n = 0;;
	jule::I64 _73716_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__216a5d88b_ConvError __jule_assign_result = _1dde9a1eb_atof64(_73121_s);
		_73710_f = __jule_assign_result.__jule_result_arg0;
		_73713_n = __jule_assign_result.__jule_result_arg1;
		_73716_err = __jule_assign_result.__jule_result_arg2;
	});
	__jule_func_result.__jule_result_arg0 = _73710_f;
	__jule_func_result.__jule_result_arg1 = _73713_n;
	__jule_func_result.__jule_result_arg2 = _73716_err;
	return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _1dde9a87d_ParseFloat(jule::Str _76515_s, jule::I64 _76523_bit_size) {
	jule::F64 _76610_f = 0;;
	jule::I64 _76613_n = 0;;
	jule::I64 _76616_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__216a5d88b_ConvError __jule_assign_result = _1dde9a53c_parseFloatPrefix(_76515_s, _76523_bit_size);
		_76610_f = __jule_assign_result.__jule_result_arg0;
		_76613_n = __jule_assign_result.__jule_result_arg1;
		_76616_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_76613_n != _76515_s.len()) && ((_76616_err == static_cast<jule::I64>(0LL)) || (_76616_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
	};
	if ((_76616_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>(jule::Any(_76616_err, &__jule_any_type0));
	};
	return jule::Exceptional<jule::F64>(jule::Any(), _76610_f);;
}



inline void _1dde9b0ed_ryuFtoaFixed32(_1dde8de8c_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _6213_e2 = _4956_exp;;
	jule::I64 _639_b = _1dde514d2_Len32(_4945_mant);;
	if ((_639_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U64>((25LL - _639_b));
		_6213_e2+=(static_cast<jule::I64>(_639_b) - 25LL);
	};
	jule::I64 _749_q = (((-(_1dde9c53e_mulByLog2Log10(static_cast<jule::I64>((_6213_e2 + 24LL))))) + _4966_prec) - 1LL);;
	jule::Bool _7913_exact = ((_749_q <= 27LL) && (_749_q >= 0LL));;
	jule::U32 _8114_di = 0;;
	jule::I64 _8118_dexp2 = 0;;
	jule::Bool _8129_d0 = false;;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dde9dc38_mult64bitPow10(_4945_mant, _6213_e2, _749_q);
		_8114_di = __jule_assign_result.__jule_result_arg0;
		_8118_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8129_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_749_q < 0LL) && (_749_q >= -10LL)) && _1dde9e464_divisibleByPow5(static_cast<jule::U64>(static_cast<jule::U64>(_4945_mant)), static_cast<jule::I64>((-(_749_q)))))) {
		_7913_exact=true;
		_8129_d0=true;
	};
	jule::U64 _949_extra = static_cast<jule::U64>((-(_8118_dexp2)));;
	jule::U32 _959_extraMask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));;
	jule::U32 _9713_dfrac = 0LLU;;
	({
		jule::U32 ___jule_assign_arg = static_cast<jule::U32>((_8114_di >> _949_extra));
		jule::U32 _1___jule_assign_arg = static_cast<jule::U32>((_8114_di & _959_extraMask));
		_8114_di = ___jule_assign_arg;
		_9713_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _9913_roundUp = false;;
	if (_7913_exact) {
		_9913_roundUp=(((_9713_dfrac > (1LLU << (_949_extra - 1LLU))) || ((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU)));
	} else {
		_9913_roundUp=((_9713_dfrac >> (_949_extra - 1LLU)) == 1LLU);
	};
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	};
	_1dde9bd24_formatDecimal(_4924_d, static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)), (!(_8129_d0)), _9913_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_749_q;
}



inline void _1dde9b53d_ryuFtoaFixed64(_1dde8de8c_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _13113_e2 = _12156_exp;;
	jule::I64 _1329_b = _1dde51779_Len64(_12145_mant);;
	if ((_1329_b < 55LL)) {
		_12145_mant=static_cast<jule::U64>((_12145_mant << static_cast<jule::U64>((55LL - _1329_b))));
		_13113_e2+=(static_cast<jule::I64>(_1329_b) - 55LL);
	};
	jule::I64 _1469_q = (((-(_1dde9c53e_mulByLog2Log10(static_cast<jule::I64>((_13113_e2 + 54LL))))) + _12166_prec) - 1LL);;
	jule::Bool _15113_exact = ((_1469_q <= 55LL) && (_1469_q >= 0LL));;
	jule::U64 _15314_di = 0;;
	jule::I64 _15318_dexp2 = 0;;
	jule::Bool _15329_d0 = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dde9e123_mult128bitPow10(_12145_mant, _13113_e2, _1469_q);
		_15314_di = __jule_assign_result.__jule_result_arg0;
		_15318_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15329_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15318_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1469_q < 0LL) && (_1469_q >= -22LL)) && _1dde9e464_divisibleByPow5(_12145_mant, static_cast<jule::I64>((-(_1469_q)))))) {
		_15113_exact=true;
		_15329_d0=true;
	};
	jule::U64 _1669_extra = static_cast<jule::U64>((-(_15318_dexp2)));;
	jule::U64 _1679_extraMask = static_cast<jule::U64>(((1LL << _1669_extra) - 1LL));;
	jule::U64 _16913_dfrac = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_15314_di >> _1669_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_15314_di & _1679_extraMask));
		_15314_di = ___jule_assign_arg;
		_16913_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _17113_roundUp = false;;
	if (_15113_exact) {
		_17113_roundUp=(((_16913_dfrac > (1LLU << (_1669_extra - 1LLU))) || ((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && (!(_15329_d0)))) || (((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && _15329_d0) && ((_15314_di & 1LLU) == 1LLU)));
	} else {
		_17113_roundUp=((_16913_dfrac >> (_1669_extra - 1LLU)) == 1LLU);
	};
	if ((_16913_dfrac != 0LLU)) {
		_15329_d0=false;
	};
	_1dde9bd24_formatDecimal(_12124_d, _15314_di, (!(_15329_d0)), _17113_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1469_q;
}



inline void _1dde9bd24_formatDecimal(_1dde8de8c_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2019_max = _1dde9b86d_u64pow10[_20088_prec];;
	jule::I64 _20213_trimmed = 0LL;;
	while ((_20044_m >= _2019_max)) {
		{
			jule::U64 _20414_a = 0;;
			jule::U64 _20417_b = 0;;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_20414_a = ___jule_assign_arg;
				_20417_b = _1___jule_assign_arg;
			});
			_20044_m=_20414_a;
			(_20213_trimmed)++;
			if ((_20417_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20417_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20417_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1a5783e6e:;
	}
	_iter_end_1a5783e6e:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2019_max)) {
		_20044_m/=10LLU;
		(_20213_trimmed)++;
	};
	jule::U64 _22913_n = static_cast<jule::U64>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20088_prec));
	jule::U64 _23113_v = _20044_m;;
	while ((_23113_v >= 100LLU)) {
		{
			jule::U64 _23317_v1 = 0LLU;;
			jule::U64 _23417_v2 = 0LLU;;
			if (((_23113_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) / 100LLU)));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) % 100LL)));
					_23317_v1 = ___jule_assign_arg;
					_23417_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_23113_v / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_23113_v % 100LL));
					_23317_v1 = ___jule_assign_arg;
					_23417_v2 = _1___jule_assign_arg;
				});
			};
			_22913_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I64>((_22913_n + 1LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 1LLU))]);
			(*(_20023_d))._field_d[static_cast<jule::I64>((_22913_n + 0LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 0LLU))]);
			_23113_v=_23317_v1;
		}
	_iter_next_1a578723b:;
	}
	_iter_end_1a578723b:;;
	if ((_23113_v > 0LLU)) {
		(_22913_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23113_v) + 1LLU))]);
	};
	if ((_23113_v >= 10LLU)) {
		(_22913_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((2LL * _23113_v))]);
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_20213_trimmed)++;
		}
	_iter_next_1a578ca05:;
	}
	_iter_end_1a578ca05:;;
	(*(_20023_d))._field_dp=static_cast<jule::I64>(((*(_20023_d))._field_nd + _20213_trimmed));
}



inline void _1dde9c297_ryuFtoaShortest(_1dde8de8c_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1dde8d4ec_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_1dde4adc2_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U64>((-(_26157_exp)));
		_1dde9d265_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _27310_ml = 0;;
	jule::U64 _27314_mc = 0;;
	jule::U64 _27318_mu = 0;;
	jule::I64 _27326_e2 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _1dde9cbc1_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_27310_ml = __jule_assign_result.__jule_result_arg0;
		_27314_mc = __jule_assign_result.__jule_result_arg1;
		_27318_mu = __jule_assign_result.__jule_result_arg2;
		_27326_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27326_e2 == 0LL)) {
		_1dde9d265_ryuDigits(_26125_d, _27310_ml, _27314_mc, _27318_mu, true, false);
		return;;
	};
	jule::I64 _2799_q = (_1dde9c53e_mulByLog2Log10(static_cast<jule::I64>((-(_27326_e2)))) + 1LL);;
	jule::U64 _28313_dl = 0LLU;;
	jule::U64 _28413_dc = 0LLU;;
	jule::U64 _28513_du = 0LLU;;
	jule::Bool _28613_dl0 = false;;
	jule::Bool _28713_dc0 = false;;
	jule::Bool _28813_du0 = false;;
	if (((*(_26168_flt)) == _1dde8d72d_f32info)) {
		jule::U32 _29017_dl32 = 0LLU;;
		jule::U32 _29117_dc32 = 0LLU;;
		jule::U32 _29217_du32 = 0LLU;;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dde9dc38_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27310_ml)), _27326_e2, _2799_q);
			_29017_dl32 = __jule_assign_result.__jule_result_arg0;
			_28613_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dde9dc38_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27314_mc)), _27326_e2, _2799_q);
			_29117_dc32 = __jule_assign_result.__jule_result_arg0;
			_28713_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dde9dc38_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27318_mu)), _27326_e2, _2799_q);
			_29217_du32 = __jule_assign_result.__jule_result_arg0;
			_27326_e2 = __jule_assign_result.__jule_result_arg1;
			_28813_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29017_dl32));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29117_dc32));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29217_du32));
			_28313_dl = ___jule_assign_arg;
			_28413_dc = _1___jule_assign_arg;
			_28513_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dde9e123_mult128bitPow10(_27310_ml, _27326_e2, _2799_q);
			_28313_dl = __jule_assign_result.__jule_result_arg0;
			_28613_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dde9e123_mult128bitPow10(_27314_mc, _27326_e2, _2799_q);
			_28413_dc = __jule_assign_result.__jule_result_arg0;
			_28713_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dde9e123_mult128bitPow10(_27318_mu, _27326_e2, _2799_q);
			_28513_du = __jule_assign_result.__jule_result_arg0;
			_27326_e2 = __jule_assign_result.__jule_result_arg1;
			_28813_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27326_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2799_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_28613_dl0 = ___jule_assign_arg;
			_28713_dc0 = _1___jule_assign_arg;
			_28813_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2799_q < 0LL) && (_2799_q >= -24LL))) {
		if (_1dde9e464_divisibleByPow5(_27310_ml, static_cast<jule::I64>((-(_2799_q))))) {
			_28613_dl0=true;
		};
		if (_1dde9e464_divisibleByPow5(_27314_mc, static_cast<jule::I64>((-(_2799_q))))) {
			_28713_dc0=true;
		};
		if (_1dde9e464_divisibleByPow5(_27318_mu, static_cast<jule::I64>((-(_2799_q))))) {
			_28813_du0=true;
		};
	};
	jule::U64 _3259_extra = static_cast<jule::U64>((-(_27326_e2)));;
	jule::U64 _3269_extraMask = static_cast<jule::U64>(((1LL << _3259_extra) - 1LL));;
	jule::U64 _32813_fracl = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28313_dl >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28313_dl & _3269_extraMask));
		_28313_dl = ___jule_assign_arg;
		_32813_fracl = _1___jule_assign_arg;
	});
	jule::U64 _33013_fracc = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28413_dc >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28413_dc & _3269_extraMask));
		_28413_dc = ___jule_assign_arg;
		_33013_fracc = _1___jule_assign_arg;
	});
	jule::U64 _33213_fracu = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28513_du >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28513_du & _3269_extraMask));
		_28513_du = ___jule_assign_arg;
		_33213_fracu = _1___jule_assign_arg;
	});
	jule::Bool _33813_uok = ((!(_28813_du0)) || (_33213_fracu > 0LLU));;
	if ((_28813_du0 && (_33213_fracu == 0LLU))) {
		_33813_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_33813_uok))) {
		(_28513_du)--;
	};
	jule::Bool _34713_cup = false;;
	if (_28713_dc0) {
		_34713_cup=((_33013_fracc > (1LLU << (_3259_extra - 1LLU))) || ((_33013_fracc == (1LLU << (_3259_extra - 1LLU))) && ((_28413_dc & 1LLU) == 1LLU)));
	} else {
		_34713_cup=((_33013_fracc >> (_3259_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3619_lok = ((_28613_dl0 && (_32813_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3619_lok))) {
		(_28313_dl)++;
	};
	jule::Bool _3669_c0 = (_28713_dc0 && (_33013_fracc == 0LLU));;
	_1dde9d265_ryuDigits(_26125_d, _28313_dl, _28413_dc, _28513_du, _3669_c0, _34713_cup);
	(*(_26125_d))._field_dp-=_2799_q;
}



inline jule::I64 _1dde9c53e_mulByLog2Log10(jule::I64 _37719_x) {
	return static_cast<jule::I64>(((_37719_x * 78913LL) >> 18LL));;
}



inline jule::I64 _1dde9c7d6_mulByLog10Log2(jule::I64 _38719_x) {
	return static_cast<jule::I64>(((_38719_x * 108853LL) >> 15LL));;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1dde9cbc1_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1dde8d4ec_floatInfo* _3966_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != (1LLU << (*(_3966_flt))._field_mantbits)) || (_39529_exp == (((*(_3966_flt))._field_bias + 1LL) - static_cast<jule::I64>((*(_3966_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((2LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) + 1LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 1LL));
	} else {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((4LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) + 2LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 2LL));
	};
	return __jule_func_result;;
}



inline void _1dde9d265_ryuDigits(_1dde8de8c_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _41014_lhi = 0;;
	jule::U32 _41019_llo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1dde9e70b_divmod1e9(_40936_lower);
		_41014_lhi = __jule_assign_result.__jule_result_arg0;
		_41019_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _41110_chi = 0;;
	jule::U32 _41115_clo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1dde9e70b_divmod1e9(_40948_central);
		_41110_chi = __jule_assign_result.__jule_result_arg0;
		_41115_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _41210_uhi = 0;;
	jule::U32 _41215_ulo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1dde9e70b_divmod1e9(_40962_upper);
		_41210_uhi = __jule_assign_result.__jule_result_arg0;
		_41215_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_41210_uhi == 0LLU)) {
		_1dde9d84d_ryuDigits32(_40919_d, _41019_llo, _41115_clo, _41215_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_41014_lhi < _41210_uhi)) {
		if ((_41019_llo != 0LLU)) {
			(_41014_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41115_clo == 0LLU));
		_40992_cup=((_41115_clo > 500000000LL) || ((_41115_clo == 500000000LL) && _40992_cup));
		_1dde9d84d_ryuDigits32(_40919_d, _41014_lhi, _41110_chi, _41210_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U64 _42817_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42917_v = _41110_chi;;
		while ((_42917_v > 0LLU)) {
			{
				jule::U32 _43118_v1 = 0;;
				jule::U32 _43122_v2 = 0;;
				({
					jule::U32 ___jule_assign_arg = (_42917_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_42917_v % 10LL);
					_43118_v1 = ___jule_assign_arg;
					_43122_v2 = _1___jule_assign_arg;
				});
				_42917_v=_43118_v1;
				(_42817_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I64>(_42817_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43122_v2 + '0')));
			}
		_iter_next_1a57aa847:;
		}
		_iter_end_1a57aa847:;;
		(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(static_cast<jule::I64>(_42817_n));
		(*(_40919_d))._field_nd=static_cast<jule::I64>(static_cast<jule::I64>((9LL - _42817_n)));
		_1dde9d84d_ryuDigits32(_40919_d, _41019_llo, _41115_clo, _41215_ulo, _40978_c0, _40992_cup, static_cast<jule::I64>(((*(_40919_d))._field_nd + 8LL)));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1a57aacdc:;
	}
	_iter_end_1a57aacdc:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(1LL);
		}
	_iter_next_1a57a87ce:;
	}
	_iter_end_1a57a87ce:;;
}



inline void _1dde9d84d_ryuDigits32(_1dde8de8c_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		(*(_45421_d))._field_dp=static_cast<jule::I64>((_45554_endindex + 1LL));
		return;;
	};
	jule::I64 _46013_trimmed = 0LL;;
	jule::I64 _46313_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _47013_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47118_c = 0;;
			jule::U32 _47125_cdigit = 0;;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_47118_c = ___jule_assign_arg;
				_47125_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _47213_u = (_4559_upper / 10LLU);;
			if ((_47013_l > _47213_u)) {
				goto _iter_end_1a57b0ac2;
			};
			if (((_47013_l == (_47118_c + 1LLU)) && (_47118_c < _47213_u))) {
				(_47118_c)++;
				_47125_cdigit=0LLU;
				_45539_cup=false;
			};
			(_46013_trimmed)++;
			_45525_c0=(_45525_c0 && (_46313_cNextDigit == 0LL));
			_46313_cNextDigit=static_cast<jule::I64>(static_cast<jule::I64>(_47125_cdigit));
			({
				jule::U32 ___jule_assign_arg = _47013_l;
				jule::U32 _1___jule_assign_arg = _47118_c;
				jule::U32 _2___jule_assign_arg = _47213_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4559_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1a57b0ac2:;
	}
	_iter_end_1a57b0ac2:;;
	if ((_46013_trimmed > 0LL)) {
		_45539_cup=(((_46313_cNextDigit > 5LL) || ((_46313_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_46313_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_46013_trimmed;
	jule::U32 _50913_v = _45458_central;;
	jule::I64 _51013_n = _45554_endindex;;
	while ((_51013_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _51214_v1 = 0;;
			jule::U32 _51218_v2 = 0;;
			({
				jule::U32 ___jule_assign_arg = (_50913_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_50913_v % 100LL);
				_51214_v1 = ___jule_assign_arg;
				_51218_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_51013_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 1LLU))]);
			(*(_45421_d))._field_d[(_51013_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 0LLU))]);
			_51013_n-=2LL;
			_50913_v=_51214_v1;
		}
	_iter_next_1a57b6d5e:;
	}
	_iter_end_1a57b6d5e:;;
	if ((_51013_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_51013_n]=static_cast<jule::U8>(static_cast<jule::U8>((_50913_v + '0')));
	};
	(*(_45421_d))._field_nd=static_cast<jule::I64>((_45554_endindex + 1LL));
	(*(_45421_d))._field_dp=static_cast<jule::I64>(((*(_45421_d))._field_nd + _46013_trimmed));
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1dde9dc38_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_53419_m << 6LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_53431_e2 - 6LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _54313_pow = _1dde95d1d_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_54313_pow+=1LLU;
	};
	jule::U64 _54810_hi = 0;;
	jule::U64 _54814_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dde53abc_Mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53419_m)), _54313_pow);
		_54810_hi = __jule_assign_result.__jule_result_arg0;
		_54814_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_1dde9c7d6_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>(((_54810_hi << 7LLU) | (_54814_lo >> 57LLU))));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((_54814_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1dde9e123_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>((_56220_m << 8LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_56232_e2 - 8LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _57113_pow = _1dde95d1d_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_57113_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1dde9c7d6_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _57910_l1 = 0;;
	jule::U64 _57914_l0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dde53abc_Mul64(_56220_m, _57113_pow[0LL]);
		_57910_l1 = __jule_assign_result.__jule_result_arg0;
		_57914_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _58014_h1 = 0;;
	jule::U64 _58018_h0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dde53abc_Mul64(_56220_m, _57113_pow[1LL]);
		_58014_h1 = __jule_assign_result.__jule_result_arg0;
		_58018_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _58110_mid = 0;;
	jule::U64 _58115_carry = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dde52439_Add64(_57910_l1, _58018_h0, 0LLU);
		_58110_mid = __jule_assign_result.__jule_result_arg0;
		_58115_carry = __jule_assign_result.__jule_result_arg1;
	});
	_58014_h1+=_58115_carry;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(((_58014_h1 << 9LLU) | (_58110_mid >> 55LLU)));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((_58110_mid << 9LLU) == 0LLU) && (_57914_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _1dde9e464_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I64 _59013_i = 0LL;;
	for (; (_59013_i < _58632_k); (_59013_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m/=5LLU;
		}
	_iter_next_1a57c5026:;
	}
	_iter_end_1a57c5026:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _1dde9e70b_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL)));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL)));
		return __jule_func_result;;
	};
}



inline void _1ddea2478_trim(_1ddea0c90_decimal* _45314_a) {
	while ((((*(_45314_a))._field_nd > 0LL) && ((*(_45314_a))._field_d[((*(_45314_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_45314_a))._field_nd)--;
		}
	_iter_next_1a57c8546:;
	}
	_iter_end_1a57c8546:;;
	if (((*(_45314_a))._field_nd == 0LL)) {
		(*(_45314_a))._field_dp=0LL;
	};
}



inline void _1ddea2731_rightShift(_1ddea0c90_decimal* _46320_a, jule::U64 _46332_k) {
	jule::I64 _46413_r = 0LL;;
	jule::I64 _46513_w = 0LL;;
	jule::U64 _46813_n = 0LLU;;
	for (; ((_46813_n >> _46332_k) == 0LLU); (_46413_r)++) {
		{
			if ((_46413_r >= (*(_46320_a))._field_nd)) {
				if ((_46813_n == 0LLU)) {
					(*(_46320_a))._field_nd=0LL;
					return;;
				};
				while (((_46813_n >> _46332_k) == 0LLU)) {
					{
						_46813_n=static_cast<jule::U64>((_46813_n * 10LLU));
						(_46413_r)++;
					}
				_iter_next_1a57cbca8:;
				}
				_iter_end_1a57cbca8:;;
				goto _iter_end_1a57ca27e;
			};
			jule::U64 _48213_c = static_cast<jule::U64>((*(_46320_a))._field_d[_46413_r]);;
			_46813_n=static_cast<jule::U64>((((_46813_n * 10LLU) + _48213_c) - '0'));
		}
	_iter_next_1a57ca27e:;
	}
	_iter_end_1a57ca27e:;;
	(*(_46320_a))._field_dp-=(_46413_r - 1LL);
	jule::U64 _4879_mask = static_cast<jule::U64>((static_cast<jule::U64>((1LL << _46332_k)) - 1LLU));;
	for (; (_46413_r < (*(_46320_a))._field_nd); (_46413_r)++) {
		{
			jule::U64 _49113_c = static_cast<jule::U64>((*(_46320_a))._field_d[_46413_r]);;
			jule::U64 _49213_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			(*(_46320_a))._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_49213_dig + '0')));
			(_46513_w)++;
			_46813_n=static_cast<jule::U64>((((_46813_n * 10LLU) + _49113_c) - '0'));
		}
	_iter_next_1a57cdae0:;
	}
	_iter_end_1a57cdae0:;;
	while ((_46813_n > 0LLU)) {
		{
			jule::U64 _50113_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			if ((_46513_w < 800LL)) {
				(*(_46320_a))._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_50113_dig + '0')));
				(_46513_w)++;
			} else if ((_50113_dig > 0LLU)) {
				(*(_46320_a))._field_trunc=true;
			};
			_46813_n=static_cast<jule::U64>((_46813_n * 10LLU));
		}
	_iter_next_1a57d041b:;
	}
	_iter_end_1a57d041b:;;
	(*(_46320_a))._field_nd=_46513_w;
	_1ddea2478_trim(_46320_a);
}



inline jule::Bool _1ddea2b93_prefixIsLessThan(jule::Array<jule::U8,800> _51721_b, jule::I64 _51735_end, jule::Str _51745_s) {
	jule::I64 _51813_i = 0LL;;
	for (; (_51813_i < _51745_s.len()); (_51813_i)++) {
		{
			if ((_51813_i >= _51735_end)) {
				return true;;
			};
			if ((_51721_b[_51813_i] != _51745_s[_51813_i])) {
				return (_51721_b[_51813_i] < _51745_s[_51813_i]);;
			};
		}
	_iter_next_1a57d2e68:;
	}
	_iter_end_1a57d2e68:;;
	return false;;
}



inline void _1ddea2e18_leftShift(_1ddea0c90_decimal* _53119_a, jule::U64 _53131_k) {
	jule::I64 _53213_delta = _1ddea06eb_leftCheats[static_cast<jule::I64>(_53131_k)]._field_delta;;
	if (_1ddea2b93_prefixIsLessThan((*(_53119_a))._field_d, (*(_53119_a))._field_nd, _1ddea06eb_leftCheats[static_cast<jule::I64>(_53131_k)]._field_cutoff)) {
		(_53213_delta)--;
	};
	jule::I64 _53713_r = (*(_53119_a))._field_nd;;
	jule::I64 _53813_w = ((*(_53119_a))._field_nd + _53213_delta);;
	jule::U64 _54113_n = 0LLU;;
	(_53713_r)--;
	for (; (_53713_r >= 0LL); (_53713_r)--) {
		{
			_54113_n+=((static_cast<jule::U64>((*(_53119_a))._field_d[_53713_r]) - '0') << _53131_k);
			jule::U64 _54513_quo = (_54113_n / 10LLU);;
			jule::U64 _54613_rem = (_54113_n - (10LLU * _54513_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				(*(_53119_a))._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_54613_rem + '0')));
			} else if ((_54613_rem != 0LLU)) {
				(*(_53119_a))._field_trunc=true;
			};
			_54113_n=_54513_quo;
		}
	_iter_next_1a57d5993:;
	}
	_iter_end_1a57d5993:;;
	while ((_54113_n > 0LLU)) {
		{
			jule::U64 _55813_quo = (_54113_n / 10LLU);;
			jule::U64 _55913_rem = (_54113_n - (10LLU * _55813_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				(*(_53119_a))._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_55913_rem + '0')));
			} else if ((_55913_rem != 0LLU)) {
				(*(_53119_a))._field_trunc=true;
			};
			_54113_n=_55813_quo;
		}
	_iter_next_1a57d6213:;
	}
	_iter_end_1a57d6213:;;
	(*(_53119_a))._field_nd+=_53213_delta;
	if (((*(_53119_a))._field_nd >= 800LL)) {
		(*(_53119_a))._field_nd=800LL;
	};
	(*(_53119_a))._field_dp+=_53213_delta;
	_1ddea2478_trim(_53119_a);
}



inline jule::Bool _1ddea3259_shouldRoundUp(_1ddea0c90_decimal* _57819_a, jule::I64 _57831_nd) {
	if (((_57831_nd < 0LL) || (_57831_nd >= (*(_57819_a))._field_nd))) {
		return false;;
	};
	if ((((*(_57819_a))._field_d[_57831_nd] == '5') && ((_57831_nd + 1LL) == (*(_57819_a))._field_nd))) {
		if ((*(_57819_a))._field_trunc) {
			return true;;
		};
		return ((_57831_nd > 0LL) && ((((*(_57819_a))._field_d[(_57831_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_57819_a))._field_d[_57831_nd] >= '5');;
}



inline jule::Str _1ddea4876_FmtUint(jule::U64 _6012_i, jule::I64 _6020_base) {
	if (((true && (_6012_i < 100LLU)) && (_6020_base == 10LL))) {
		return _1ddea52c2_small(static_cast<jule::I64>(static_cast<jule::I64>(_6012_i)));;
	};
	jule::Str _6413_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1ddea5a97_fmtBits(nullptr, _6012_i, _6020_base, false, false);
		_6413_s = __jule_assign_result.__jule_result_arg1;
	});
	return _6413_s;;
}



inline jule::Str _1ddea4c0b_FmtInt(jule::I64 _7111_i, jule::I64 _7119_base) {
	if ((((true && (0LL <= _7111_i)) && (_7111_i < 100LL)) && (_7119_base == 10LL))) {
		return _1ddea52c2_small(static_cast<jule::I64>(static_cast<jule::I64>(_7111_i)));;
	};
	jule::Str _7513_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1ddea5a97_fmtBits(nullptr, static_cast<jule::U64>(static_cast<jule::U64>(_7111_i)), _7119_base, (_7111_i < 0LL), false);
		_7513_s = __jule_assign_result.__jule_result_arg1;
	});
	return _7513_s;;
}



inline jule::Str _1ddea4ea3_Itoa(jule::I64 _809_i) {
	return _1ddea4c0b_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_809_i)), 10LL);;
}



inline jule::Str _1ddea52c2_small(jule::I64 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i, (_8510_i + 1LL));;
	};
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU), ((_8510_i << 1LLU) + 2LL));;
}



inline jule::Bool _1ddea5569_isPowerOfTwo(jule::I64 _9217_x) {
	return ((_9217_x & (_9217_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _1ddea5a97_fmtBits(jule::Slice<jule::U8> _10116_dst, jule::U64 _10133_u, jule::I64 _10141_base, jule::Bool _10152_neg, jule::Bool _10163_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10141_base < 2LL) || (_10141_base > 36LL))) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _10713_a = jule::Slice<jule::U8>::alloc(65LL, 65LL, 0);;
	jule::I64 _10813_i = _10713_a.len();;
	if (_10152_neg) {
		_10133_u=static_cast<jule::U64>((-(_10133_u)));
	};
	if ((_10141_base == 10LL)) {
		;
		jule::U64 _14917_us = static_cast<jule::U64>(_10133_u);;
		while ((_14917_us >= 100LLU)) {
			{
				jule::U64 _15117_is = ((_14917_us % 100LL) << 1LLU);;
				_14917_us/=100LLU;
				_10813_i-=2LL;
				_10713_a[(_10813_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 1LLU))]);
				_10713_a[(_10813_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 0LLU))]);
			}
		_iter_next_1a58202a2:;
		}
		_iter_end_1a58202a2:;;
		jule::U64 _15913_is = (_14917_us << 1LLU);;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15913_is + 1LLU))]);
		if ((_14917_us >= 10LLU)) {
			(_10813_i)--;
			_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(_15913_is)]);
		};
	} else if (_1ddea5569_isPowerOfTwo(_10141_base)) {
		jule::U64 _17413_shift = (static_cast<jule::U64>(_1dde4a234_TrailingZeros(static_cast<jule::U64>(static_cast<jule::U64>(_10141_base)))) & 7LLU);;
		jule::U64 _17513_b = static_cast<jule::U64>(_10141_base);;
		jule::U64 _17613_m = (static_cast<jule::U64>(_10141_base) - 1LLU);;
		while ((_10133_u >= _17513_b)) {
			{
				(_10813_i)--;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>((static_cast<jule::U64>(_10133_u) & _17613_m))]);
				_10133_u>>=_17413_shift;
			}
		_iter_next_1a5827a29:;
		}
		_iter_end_1a5827a29:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	} else {
		jule::U64 _18713_b = static_cast<jule::U64>(_10141_base);;
		while ((_10133_u >= _18713_b)) {
			{
				(_10813_i)--;
				jule::U64 _19317_q = jule::div(_10133_u,_18713_b);;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>((_10133_u - (_19317_q * _18713_b))))]);
				_10133_u=_19317_q;
			}
		_iter_next_1a582a2ac:;
		}
		_iter_end_1a582a2ac:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	};
	if (_10152_neg) {
		(_10813_i)--;
		_10713_a[_10813_i]='-';
	};
	if (_10163_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10116_dst,_10713_a.slice(_10813_i));
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::Str>(_10713_a.slice(_10813_i));
	return __jule_func_result;;
}



inline jule::Str _1ddea6ea5_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1a5840789:;
			{
				return _1ddea6504_SysInt;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1a5840800:;
			{
				return _1ddea67bd_SysUint;;
			}
		}
		else {
			_case_begin_1a584212b:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1a583e920:;
	};
}



inline jule::I64 _1ddea724c_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1a584365a:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_1a58436c1:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_1a58431e8:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_1a584325e:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1a58432c5:;
			{
				return _1ddea623a_BitSize;;
			}
		}
		else {
			_case_begin_1a5842c20:;
			{
				return -1LL;;
			}
		}
		_match_end_1a584314e:;
	};
}



inline jule::Str _1ddea756b_IntFromBits(jule::I64 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1a5844b56:;
			{
				return jule::Str("i8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1a584553b:;
			{
				return jule::Str("i16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1a58455a2:;
			{
				return jule::Str("i32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1a5845618:;
			{
				return jule::Str("i64", 3);;
			}
		}
		else {
			_case_begin_1a58450c9:;
			{
				return jule::Str();;
			}
		}
		_match_end_1a584344b:;
	};
}



inline jule::Str _1ddea7813_UintFromBits(jule::I64 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1a5846031:;
			{
				return jule::Str("u8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1a5846729:;
			{
				return jule::Str("u16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1a5846790:;
			{
				return jule::Str("u32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1a5846806:;
			{
				return jule::Str("u64", 3);;
			}
		}
		else {
			_case_begin_1a5845b35:;
			{
				return jule::Str();;
			}
		}
		_match_end_1a5845ad0:;
	};
}



inline jule::Str _1ddea7aaa_FloatFromBits(jule::I64 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1a584721e:;
			{
				return jule::Str("f32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1a5847917:;
			{
				return jule::Str("f64", 3);;
			}
		}
		else {
			_case_begin_1a5846d23:;
			{
				return jule::Str();;
			}
		}
		_match_end_1a5846cbd:;
	};
}



inline jule::Bool _1ddea865a_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit) {
	({
		auto except = _1dde9a87d_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I64 _1ddea8902_BitsizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1a584c851:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1a584aba1:;
			{
				return 64LLU;;
			}
		}
		_match_end_1a584bc29:;
	};
}



inline jule::I64 _1ddea8b99_BitsizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_1a584d566:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_1a584d412:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_1a584d489:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1a584c9e9:;
			{
				return 64LLU;;
			}
		}
		_match_end_1a584ce39:;
	};
}



inline jule::I64 _1ddea8e41_BitsizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_1a584eee6:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_1a584eda3:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_1a584ee19:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1a584e1b0:;
			{
				return 64LLU;;
			}
		}
		_match_end_1a584e9c9:;
	};
}



inline void _1ddea90a6_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _2094d3ae3_Arch };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_1a5850c72:;
				{
					_1ddea623a_BitSize=64LLU;
					_1ddea6504_SysInt=jule::Str("i64", 3);
					_1ddea67bd_SysUint=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_1a5850cd8:;
				{
					_1ddea623a_BitSize=32LLU;
					_1ddea6504_SysInt=jule::Str("i32", 3);
					_1ddea67bd_SysUint=jule::Str("u32", 3);
				}
			}
			_match_end_1a58507ee:;
		};
	};
}



inline void _1ddea921b_init(void) {
	_1ddea90a6_UpdateTarget();
}



inline jule::I64 _1ddead055_MinI(jule::Str _6113_k) {
	_6113_k=_1ddea6ea5_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1a58501c2:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1a5852ed8:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1a585304e:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1a58530b5:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_1a58511d4:;
			{
				return 0LL;;
			}
		}
		_match_end_1a5850ea3:;
	};
}



inline jule::I64 _1ddead341_MaxI(jule::Str _7913_k) {
	_7913_k=_1ddea6ea5_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1a585324c:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1a585455b:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1a58545c2:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1a5854638:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_1a5854292:;
			{
				return 0LL;;
			}
		}
		_match_end_1a5853ea6:;
	};
}



inline jule::U64 _1ddead5d8_MaxU(jule::Str _9713_k) {
	_9713_k=_1ddea6ea5_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1a58547ae:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1a5855abd:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1a5855b34:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1a5855b9a:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_1a5855804:;
			{
				return 0LLU;;
			}
		}
		_match_end_1a5855518:;
	};
}



inline jule::F64 _1ddead7e7_Min(jule::Str _11512_k) {
	_11512_k=_1ddea6ea5_RealKindOf(_11512_k);
	jule::I64 _1179_i = _1ddead055_MinI(_11512_k);;
	if ((_1179_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1179_i));;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1a5858087:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1a5857b14:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1a5857592:;
			{
				return 0LL;;
			}
		}
		_match_end_1a5857bd0:;
	};
}



inline jule::F64 _1ddeada8e_Max(jule::Str _13312_k) {
	_13312_k=_1ddea6ea5_RealKindOf(_13312_k);
	jule::I64 _1359_i = _1ddead341_MaxI(_13312_k);;
	if ((_1359_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1359_i));;
	};
	jule::U64 _1399_u = _1ddead5d8_MaxU(_13312_k);;
	if ((_1399_u != 0LLU)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1399_u));;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1a585a375:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1a5859e02:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1a5859880:;
			{
				return 0LL;;
			}
		}
		_match_end_1a5859ebd:;
	};
}



inline jule::Bool _1ddeadee0_IsI8Compatible(jule::Str _623_k) {
	return _623_k.equal("i8", 2);;
}



inline jule::Bool _1ddeae2cb_IsI16Compatible(jule::Str _1124_k) {
	return (_1124_k.equal("i8", 2) || _1124_k.equal("i16", 3));;
}



inline jule::Bool _1ddeae573_IsI32Compatible(jule::Str _1724_k) {
	return (((_1724_k.equal("i8", 2) || _1724_k.equal("i16", 3)) || _1724_k.equal("i32", 3)) || _1724_k.equal("u8", 2));;
}



inline jule::Bool _1ddeae892_IsI64Compatible(jule::Str _2524_k) {
	return (((_2524_k.equal("i8", 2) || _2524_k.equal("i16", 3)) || _2524_k.equal("i32", 3)) || _2524_k.equal("i64", 3));;
}



inline jule::Bool _1ddeaeb39_IsU8Compatible(jule::Str _3323_k) {
	return _3323_k.equal("u8", 2);;
}



inline jule::Bool _1ddeaedd1_IsU16Compatible(jule::Str _3824_k) {
	return (_3824_k.equal("u8", 2) || _3824_k.equal("u16", 3));;
}



inline jule::Bool _1ddeb0178_IsU32Compatible(jule::Str _4324_k) {
	return ((_4324_k.equal("u8", 2) || _4324_k.equal("u16", 3)) || _4324_k.equal("u32", 3));;
}



inline jule::Bool _1ddeb04ec_IsU64Compatible(jule::Str _5024_k) {
	return (((_5024_k.equal("u8", 2) || _5024_k.equal("u16", 3)) || _5024_k.equal("u32", 3)) || _5024_k.equal("u64", 3));;
}



inline jule::Bool _1ddeb0794_IsF32Compatible(jule::Str _5824_k) {
	return _5824_k.equal("f32", 3);;
}



inline jule::Bool _1ddeb0a3b_IsF64Compatible(jule::Str _6324_k) {
	return _6324_k.equal("f64", 3);;
}



inline jule::Bool _1ddeb0d7c_TypesAreCompatible(jule::Str _7027_k1, jule::Str _7036_k2) {
	{
		auto &_match_expr{ _7027_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1a5865c98:;
			{
				return true;;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1a586510a:;
			{
				return _7036_k2.equal("int", 3);;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1a58657d1:;
			{
				return _7036_k2.equal("uintptr", 7);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1a5865847:;
			{
				return _7036_k2.equal("uint", 4);;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1a58658ad:;
			{
				return _1ddeadee0_IsI8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1a5865924:;
			{
				return _1ddeae2cb_IsI16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1a5865d0e:;
			{
				return _1ddeae573_IsI32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1a5865d75:;
			{
				return _1ddeae892_IsI64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1a5865ddb:;
			{
				return _1ddeaeb39_IsU8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1a5865e52:;
			{
				return _1ddeaedd1_IsU16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1a5865ec9:;
			{
				return _1ddeb0178_IsU32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1a5866051:;
			{
				return _1ddeb04ec_IsU64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1a58660c8:;
			{
				return _1ddeb0794_IsF32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1a5866150:;
			{
				return _1ddeb0a3b_IsF64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1a58661c7:;
			{
				return _7036_k2.equal("bool", 4);;
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1a586624e:;
			{
				return _7036_k2.equal("str", 3);;
			}
		}
		else {
			_case_begin_1a586566b:;
			{
				return false;;
			}
		}
		_match_end_1a585a74e:;
	};
}



inline jule::Bool _1ddeb1124_IsI16Greater(jule::Str _11021_k) {
	return _11021_k.equal("i8", 2);;
}



inline jule::Bool _1ddeb13bb_IsI32Greater(jule::Str _11521_k) {
	return (_11521_k.equal("i8", 2) || _11521_k.equal("i16", 3));;
}



inline jule::Bool _1ddeb1663_IsI64Greater(jule::Str _12021_k) {
	return ((_12021_k.equal("i8", 2) || _12021_k.equal("i16", 3)) || _12021_k.equal("i32", 3));;
}



inline jule::Bool _1ddeb190a_IsU16Greater(jule::Str _12721_k) {
	return _12721_k.equal("u8", 2);;
}



inline jule::Bool _1ddeb1d5b_IsU32Greater(jule::Str _13221_k) {
	return (_13221_k.equal("u8", 2) || _13221_k.equal("u16", 3));;
}



inline jule::Bool _1ddeb2103_IsU64Greater(jule::Str _13821_k) {
	return ((_13821_k.equal("u8", 2) || _13821_k.equal("u16", 3)) || _13821_k.equal("u32", 3));;
}



inline jule::Bool _1ddeb239a_IsF32Greater(jule::Str _14517_k) {
	return (!_14517_k.equal("f64", 3));;
}



inline jule::Bool _1ddeb2642_IsF64Greater(jule::Str _15017_k) {
	return true;;
}



inline jule::Bool _1ddeb2983_IsGreater(jule::Str _15518_k1, jule::Str _15527_k2) {
	{
		auto &_match_expr{ _15518_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1a586d90a:;
			{
				return _1ddeb39b7_IsSigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1a5867926:;
			{
				return _1ddeb3ca3_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1a586d7ea:;
			{
				return _1ddeb3ca3_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1a586d3ee:;
			{
				return _1ddeb1124_IsI16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1a586d465:;
			{
				return _1ddeb13bb_IsI32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1a586d4cb:;
			{
				return _1ddeb1663_IsI64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1a586d553:;
			{
				return _1ddeb190a_IsU16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1a586d971:;
			{
				return _1ddeb1d5b_IsU32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1a586d9e8:;
			{
				return _1ddeb2103_IsU64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1a586da70:;
			{
				return _1ddeb239a_IsF32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1a586dae7:;
			{
				return _1ddeb2642_IsF64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1a586db6e:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a586d2cd:;
			{
				return false;;
			}
		}
		_match_end_1a586d09c:;
	};
}



inline jule::Bool _1ddeb39b7_IsSigInt(jule::Str _2717_k) {
	return ((((_2717_k.equal("i8", 2) || _2717_k.equal("i16", 3)) || _2717_k.equal("i32", 3)) || _2717_k.equal("i64", 3)) || _2717_k.equal("int", 3));;
}



inline jule::Bool _1ddeb3ca3_IsUnsigInt(jule::Str _3619_k) {
	return (((((_3619_k.equal("u8", 2) || _3619_k.equal("u16", 3)) || _3619_k.equal("u32", 3)) || _3619_k.equal("u64", 3)) || _3619_k.equal("uint", 4)) || _3619_k.equal("uintptr", 7));;
}



inline jule::Bool _1ddeb404a_IsInt(jule::Str _4610_k) {
	return (_1ddeb39b7_IsSigInt(_4610_k) || _1ddeb3ca3_IsUnsigInt(_4610_k));;
}



inline jule::Bool _1ddeb4369_IsFloat(jule::Str _5112_k) {
	return (_5112_k.equal("f32", 3) || _5112_k.equal("f64", 3));;
}



inline jule::Bool _1ddeb4611_IsNum(jule::Str _5610_k) {
	return (_1ddeb404a_IsInt(_5610_k) || _1ddeb4369_IsFloat(_5610_k));;
}



inline jule::Bool _1ddeb48a8_IsSigNum(jule::Str _6113_k) {
	return (_1ddeb39b7_IsSigInt(_6113_k) || _1ddeb4369_IsFloat(_6113_k));;
}



inline void _1ddebd340_lshiftUnsig(_1ddeb4b1c_Const* _59021_c, _1ddeb4b1c_Const* _59032_x) {
	jule::U64 _5919_l = _1ddeb738e_AsU64(_59021_c);;
	jule::U64 _5929_r = _1ddeb738e_AsU64(_59032_x);;
	_1ddeb7aed_SetU64(_59021_c, static_cast<jule::U64>((_5919_l << _5929_r)));
}



inline void _1ddebd63c_rshiftUnsig(_1ddeb4b1c_Const* _59621_c, _1ddeb4b1c_Const* _59632_x) {
	jule::U64 _5979_l = _1ddeb738e_AsU64(_59621_c);;
	jule::U64 _5989_r = _1ddeb738e_AsU64(_59632_x);;
	_1ddeb7aed_SetU64(_59621_c, static_cast<jule::U64>((_5979_l >> _5989_r)));
}



inline jule::Bool _1abd2d325_IsAscii(jule::I32 _1012_r) {
	;
	return (_1012_r <= 127LL);;
}



inline jule::I32 _1abd2d457_ToRune(jule::Slice<jule::U8> _1811_bytes) {
	if ((_1811_bytes.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _2313_r = 0LL;;
	if (((_1811_bytes[0LL] == '\\') && (_1811_bytes.len() > 1LL))) {
		jule::I64 _2517_i = 0LL;;
		_2313_r=static_cast<jule::I32>(_1abd459ad_runeFromEsqSeq(_1811_bytes, &(_2517_i)));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2083969b8_DecodeRune(_1811_bytes);
			_2313_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _2313_r;;
}



inline jule::Str _1abd450d9_ToRawStr(jule::Slice<jule::U8> _3713_bytes) {
	return static_cast<jule::Str>(_3713_bytes);;
}



inline jule::Str _1abd45408_ToStr(jule::Slice<jule::U8> _4210_bytes) {
	if ((_4210_bytes.len() == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL, _4210_bytes.len(), 0);;
	jule::I64 _4813_i = 0LL;;
	while ((_4813_i < _4210_bytes.len())) {
		{
			jule::U8 _5013_b = _4210_bytes[_4813_i];;
			if ((_5013_b == '\\')) {
				(_4713_s).append(_1abd45cee_strEsqSeq(_4210_bytes, &(_4813_i)));;
			} else {
				jule::I32 _5418_r = 0;;
				jule::I64 _5421_size = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2083969b8_DecodeRune(_4210_bytes.slice(_4813_i));
					_5418_r = __jule_assign_result.__jule_result_arg0;
					_5421_size = __jule_assign_result.__jule_result_arg1;
				});
				_4813_i+=_5421_size;
				_4713_s=_208397d2c_AppendRune(_4713_s, _5418_r);
			};
		}
	_iter_next_1a592553e:;
	}
	_iter_end_1a592553e:;;
	return static_cast<jule::Str>(_4713_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _1abd456a0_tryBtoaCommonEsq(jule::Slice<jule::U8> _6221_bytes) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_6221_bytes.len() < 2LL) || (_6221_bytes[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _6221_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1a5929796:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1a592980c:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1a5929873:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1a59298d9:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1a5929961:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1a59299d8:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1a5929a60:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1a5929ad7:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1a5929b5e:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1a5929bd6:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1a59295dc:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1abd459ad_runeFromEsqSeq(jule::Slice<jule::U8> _9219_bytes, jule::I64* _9239_i) {
	jule::U8 _9310_b = 0;;
	jule::Bool _9313_ok = false;;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _1abd456a0_tryBtoaCommonEsq(_9219_bytes.slice((*(_9239_i))));
		_9310_b = __jule_assign_result.__jule_result_arg0;
		_9313_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_9239_i)))++;
	if (_9313_ok) {
		((*(_9239_i)))++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_9310_b));;
	};
	{
		auto &_match_expr{ _9219_bytes[(*(_9239_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1a592e15d:;
			{
				;
				jule::I32 _10313_r = static_cast<jule::I32>(({
					auto except = _1dde93e2b_ParseUint(static_cast<jule::Str>(_9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 5LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:103:22"));
					(except.result);
				}));;
				(*(_9239_i))+=5LL;
				return _10313_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1a592e8de:;
			{
				;
				jule::I32 _10813_r = static_cast<jule::I32>(({
					auto except = _1dde93e2b_ParseUint(static_cast<jule::Str>(_9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 9LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:108:22"));
					(except.result);
				}));;
				(*(_9239_i))+=9LL;
				return _10813_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1a592e2d4:;
			{
				;
				jule::Slice<jule::U8> _11313_seq = _9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 3LL));;
				(*(_9239_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1dde93e2b_ParseUint(static_cast<jule::Str>(_11313_seq), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:115:18"));
					(except.result);
				})));;
			}
		}
		else {
			_case_begin_1a592d190:;
			{
				;
				jule::Slice<jule::U8> _11813_seq = _9219_bytes.slice((*(_9239_i)), ((*(_9239_i)) + 3LL));;
				(*(_9239_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1dde93e2b_ParseUint(static_cast<jule::Str>(_11813_seq.slice(1LL)), 8LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:120:18"));
					(except.result);
				})));;
			}
		}
		_match_end_1a592d46a:;
	};
}



inline jule::Slice<jule::U8> _1abd45cee_strEsqSeq(jule::Slice<jule::U8> _12414_bytes, jule::I64* _12434_i) {
	jule::I32 _1259_r = _1abd459ad_runeFromEsqSeq(_12414_bytes, _12434_i);;
	if ((_1259_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1259_r))});;
	};
	return static_cast<jule::Slice<jule::U8>>(jule::Str::from_rune(_1259_r));;
}



inline jule::I64 _1acd5e5ec_findFormatPrefix(jule::Slice<jule::U8>* _1022_bytes, jule::I64* _1038_start) {
	jule::I64 _1113_i = (*(_1038_start));;
	while ((_1113_i < (*(_1022_bytes)).len())) {
		{
			jule::I32 _1314_r = 0;;
			jule::I64 _1317_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2083969b8_DecodeRune((*(_1022_bytes)).slice(_1113_i));
				_1314_r = __jule_assign_result.__jule_result_arg0;
				_1317_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1314_r == '{')) {
				return _1113_i;;
			};
			_1113_i+=_1317_size;
		}
	_iter_next_1a595ee08:;
	}
	_iter_end_1a595ee08:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1acd651a2_getFormatRange(jule::I64* _2724_i, jule::Slice<jule::U8>* _2737_bytes) {
	jule::I64 _289_start = (*(_2724_i));;
	jule::I64 _2913_braces = 0LL;;
	while (((*(_2724_i)) < (*(_2737_bytes)).len())) {
		{
			jule::I32 _3114_r = 0;;
			jule::I64 _3117_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2083969b8_DecodeRune((*(_2737_bytes)).slice((*(_2724_i))));
				_3114_r = __jule_assign_result.__jule_result_arg0;
				_3117_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2724_i))+=_3117_size;
			{
				auto &_match_expr{ _3114_r };
				
				if (_match_expr == '{') {
					_case_begin_1a59627bd:;
					{
						(_2913_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1a5962834:;
					{
						(_2913_braces)--;
						if ((_2913_braces == 0LL)) {
							return (*(_2737_bytes)).slice(_289_start, (*(_2724_i)));;
						};
					}
				}
				_match_end_1a59624b0:;
			};
		}
	_iter_next_1a5961a86:;
	}
	_iter_end_1a5961a86:;;
	return nullptr;;
}



inline void _1acd6545a_FmtByDefault(jule::Str* _4722_buf, jule::Any* _4733_arg) {
	if (((*(_4733_arg)) == nullptr)) {
		((*(_4722_buf))).append("<nil>", 5);
		return;;
	};
	{
		auto &_match_expr{ (*(_4733_arg)) };
		
		if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1a5964418:;
			{
				(*(_4722_buf))+=_1dde8e4cb_FmtFloat(static_cast<jule::F64>(static_cast<jule::F64>((*(_4733_arg)).cast<jule::F32>(&__jule_any_type132))), 'g', -1LL, 32LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1a5962b53:;
			{
				(*(_4722_buf))+=_1dde8e4cb_FmtFloat(static_cast<jule::F64>((*(_4733_arg)).cast<jule::F64>(&__jule_any_type6)), 'g', -1LL, 64LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_1a5963cca:;
			{
				(*(_4722_buf))+=_1ddea4c0b_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I8>(&__jule_any_type133)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1a5963d41:;
			{
				(*(_4722_buf))+=_1ddea4c0b_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I16>(&__jule_any_type134)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1a5963da7:;
			{
				(*(_4722_buf))+=_1ddea4c0b_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I32>(&__jule_any_type1)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1a5963e1d:;
			{
				(*(_4722_buf))+=_1ddea4c0b_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I64>(&__jule_any_type2)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_1a596447e:;
			{
				(*(_4722_buf))+=_1ddea4876_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U8>(&__jule_any_type131)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type135) {
			_case_begin_1a59644e5:;
			{
				(*(_4722_buf))+=_1ddea4876_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U16>(&__jule_any_type135)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type136) {
			_case_begin_1a596455b:;
			{
				(*(_4722_buf))+=_1ddea4876_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U32>(&__jule_any_type136)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1a59645c2:;
			{
				(*(_4722_buf))+=_1ddea4876_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U64>(&__jule_any_type3)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1a5964638:;
			{
				(*(_4722_buf))+=(*(_4733_arg)).cast<jule::Str>(&__jule_any_type5);
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1a596469e:;
			{
				if ((*(_4733_arg)).cast<jule::Bool>(&__jule_any_type4)) {
					((*(_4722_buf))).append("true", 4);
				} else {
					((*(_4722_buf))).append("false", 5);
				};
			}
		}
		else {
			_case_begin_1a59637ad:;
			{
				(*(_4722_buf))+=jule::to_str((*(_4733_arg)));
			}
		}
		_match_end_1a5963626:;
	};
}



inline void _1acd65834_applyFmtByDefault(jule::Str* _8627_buf, jule::I64* _8642_j, jule::Slice<jule::Any> _8650_args) {
	jule::Any _879_arg = _8650_args[(*(_8642_j))];;
	((*(_8642_j)))++;
	_1acd6545a_FmtByDefault(_8627_buf, &(_879_arg));
}



inline void _1acd65c30_applyFmt(jule::Slice<jule::U8>* _9418_fmt, jule::Str* _9436_buf, jule::I64* _9451_j, jule::Slice<jule::Any> _9459_args) {
	if (((*(_9418_fmt)).len() == 2LL)) {
		_1acd65834_applyFmtByDefault(_9436_buf, _9451_j, _9459_args);
		return;;
	};
	if (((((((*(_9418_fmt)).len() == 4LL) && ((*(_9418_fmt))[0LL] == '{')) && ((*(_9418_fmt))[1LL] == '{')) && ((*(_9418_fmt))[2LL] == '}')) && ((*(_9418_fmt))[3LL] == '}'))) {
		((*(_9436_buf))).append("{}", 2);
		return;;
	};
	_2082b52aa_PushToStrBuffer(_9436_buf, (*(_9418_fmt)));
}



inline jule::Str _1acd6603d_Format(jule::Str* _11312_fmt, jule::Slice<jule::Any> _11322_args) {
	if ((_11322_args.len() == 0LL)) {
		return (*(_11312_fmt));;
	};
	jule::Slice<jule::U8> _11713_fmtBytes = _2082b4b06_Stobs(_11312_fmt);;
	jule::Str _11813_buf = jule::Str::alloc(0LL, (*(_11312_fmt)).len());;
	jule::I64 _11913_j = 0LL;;
	jule::I64 _12013_last = 0LL;;
	jule::I64 _12113_i = _1acd5e5ec_findFormatPrefix(&(_11713_fmtBytes), &(_12013_last));;
	for (; (_12113_i != -1LL); _12113_i=static_cast<jule::I64>(_1acd5e5ec_findFormatPrefix(&(_11713_fmtBytes), &(_12113_i)))) {
		{
			_2082b52aa_PushToStrBuffer(&(_11813_buf), _11713_fmtBytes.slice(_12013_last, _12113_i));
			jule::Slice<jule::U8> _12417_format = _1acd651a2_getFormatRange(&(_12113_i), &(_11713_fmtBytes));;
			if ((_12417_format == nullptr)) {
				goto _iter_next_1a596e6cb;
			};
			_1acd65c30_applyFmt(&(_12417_format), &(_11813_buf), &(_11913_j), _11322_args);
			if ((_11913_j >= _11322_args.len())) {
				_2082b52aa_PushToStrBuffer(&(_11813_buf), _11713_fmtBytes.slice(_12113_i));
				_12013_last=static_cast<jule::I64>(_11713_fmtBytes.len());
				goto _iter_end_1a596e6cb;
			};
			_12013_last=_12113_i;
		}
	_iter_next_1a596e6cb:;
	}
	_iter_end_1a596e6cb:;;
	if ((_12013_last < _11713_fmtBytes.len())) {
		_2082b52aa_PushToStrBuffer(&(_11813_buf), _11713_fmtBytes.slice(_12013_last));
	};
	return _11813_buf;;
}



inline jule::Str _1acd67c21_Format(jule::Str _3011_fmt, jule::Slice<jule::Any> _3021_args) {
	return _1acd6603d_Format(&(_3011_fmt), _3021_args);;
}



inline jule::Bool _1acb26e97_parameterUsesGenerics(jule::Ptr<_1acb23eb6_ParamIns>* _38131_p, jule::Slice<jule::Ptr<_1acae4272_GenericDecl>>* _38146_generics) {
	if (_1acb20e80_IsSelf((*(_38131_p)).get()._field_Decl.ptr())) {
		return false;;
	};
	return _1accbe062_kindUsesGenerics(&((*(_38131_p)).get()._field_Kind), _38146_generics);;
}



inline jule::Ptr<_1accaba55_TypeSymbol> _1acb29472_buildType(jule::Ptr<_1acad72cb_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1accaba55_TypeSymbol>(_1accaba55_TypeSymbol{._field_Decl=_9418_t, });;
}



inline jule::Ptr<_1abd5ecc4_Value> _1acb2975d_buildExpr(jule::Ptr<_1acadb456_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1abd5ecc4_Value>(_1abd5ecc4_Value{._field_Expr=_10318_expr, });;
}



inline jule::Ptr<_1acca3e59_TypeAlias> _1acb29a05_buildTypeAlias(jule::Ptr<_1acaed248_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_1acca3e59_TypeAlias>(_1acca3e59_TypeAlias{._field_Scope=_11223_decl.get()._field_Scope, ._field_Public=_11223_decl.get()._field_Public, ._field_Binded=_11223_decl.get()._field_Binded, ._field_Token=_11223_decl.get()._field_Token, ._field_Ident=_11223_decl.get()._field_Ident, ._field_Kind=_1acb29472_buildType(_11223_decl.get()._field_Kind), });;
}



inline jule::Ptr<_1acb0444c_Field> _1acb29d24_buildField(jule::Ptr<_1acb01724_FieldDecl> _12319_decl) {
	return jule::new_ptr<_1acb0444c_Field>(_1acb0444c_Field{._field_Token=_12319_decl.get()._field_Token, ._field_Public=_12319_decl.get()._field_Public, ._field_Mutable=_12319_decl.get()._field_Mutable, ._field_Ident=_12319_decl.get()._field_Ident, ._field_Kind=_1acb29472_buildType(_12319_decl.get()._field_Kind), ._field_Default=_12319_decl.get()._field_Default});;
}



inline jule::Slice<jule::Ptr<_1acb0444c_Field>> _1acb2a0bb_buildFields(jule::Slice<jule::Ptr<_1acb01724_FieldDecl>>* _13421_decls) {
	jule::Slice<jule::Ptr<_1acb0444c_Field>> _13513_fields = jule::Slice<jule::Ptr<_1acb0444c_Field>>::alloc(0LL, (*(_13421_decls)).len());;
	{
		auto expr = _13421_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5c129e6:;
		if (it != expr_end) {
			jule::Ptr<_1acb01724_FieldDecl> _13617_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1acb0444c_Field>> &__jule_push_dest = _13513_fields; __jule_push_dest.push(_1acb29d24_buildField(_13617_decl)); };
			}
			_iter_next_1a5c129e6:;
			++it;
			goto _iter_begin_1a5c129e6;
		}
		_iter_end_1a5c129e6:;
	};
	return _13513_fields;;
}



inline jule::Ptr<_1acb07021_Struct> _1acb2a363_buildStruct(jule::Ptr<_1acb02071_StructDecl> _14220_decl) {
	return jule::new_ptr<_1acb07021_Struct>(_1acb07021_Struct{._field_Token=_14220_decl.get()._field_Token, ._field_Ident=_14220_decl.get()._field_Ident, ._field_Fields=_1acb2a0bb_buildFields(&(_14220_decl.get()._field_Fields)), ._field_Public=_14220_decl.get()._field_Public, ._field_Binded=_14220_decl.get()._field_Binded, ._field_Directives=_14220_decl.get()._field_Directives, ._field_Generics=_14220_decl.get()._field_Generics, });;
}



inline jule::Ptr<_1acb20897_Param> _1acb2a60a_buildParam(jule::Ptr<_1acae75d8_ParamDecl> _15419_decl) {
	return jule::new_ptr<_1acb20897_Param>(_1acb20897_Param{._field_Token=_15419_decl.get()._field_Token, ._field_Mutable=_15419_decl.get()._field_Mutable, ._field_Variadic=_15419_decl.get()._field_Variadic, ._field_Reference=_15419_decl.get()._field_Reference, ._field_Kind=_1acb29472_buildType(_15419_decl.get()._field_Kind), ._field_Ident=_15419_decl.get()._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1acb20897_Param>> _1acb2a97e_buildParams(jule::Slice<jule::Ptr<_1acae75d8_ParamDecl>>* _16521_decls) {
	jule::Slice<jule::Ptr<_1acb20897_Param>> _16613_params = jule::Slice<jule::Ptr<_1acb20897_Param>>::alloc(0LL, (*(_16521_decls)).len());;
	{
		auto expr = _16521_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5c158a6:;
		if (it != expr_end) {
			jule::Ptr<_1acae75d8_ParamDecl> _16717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1acb20897_Param>> &__jule_push_dest = _16613_params; __jule_push_dest.push(_1acb2a60a_buildParam(_16717_decl)); };
			}
			_iter_next_1a5c158a6:;
			++it;
			goto _iter_begin_1a5c158a6;
		}
		_iter_end_1a5c158a6:;
	};
	return _16613_params;;
}



inline jule::Ptr<_1acb2018d_RetType> _1acb2ac26_buildRetType(jule::Ptr<_1acada048_RetTypeDecl> _17321_decl) {
	if (((_17321_decl.get()._field_Idents == nullptr) && (_17321_decl.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1acb2018d_RetType>(_1acb2018d_RetType{._field_Kind=_1acb29472_buildType(_17321_decl.get()._field_Kind), ._field_Idents=_17321_decl.get()._field_Idents});;
}



inline jule::Ptr<_1acb221d4_Fn> _1acb2aebd_buildFn(jule::Ptr<_1acae8908_FnDecl> _18316_decl) {
	return jule::new_ptr<_1acb221d4_Fn>(_1acb221d4_Fn{._field_Token=_18316_decl.get()._field_Token, ._field_Global=_18316_decl.get()._field_Global, ._field_Unsafety=_18316_decl.get()._field_Unsafety, ._field_Public=_18316_decl.get()._field_Public, ._field_Binded=_18316_decl.get()._field_Binded, ._field_Statically=_18316_decl.get()._field_Statically, ._field_Exceptional=_18316_decl.get()._field_Exceptional, ._field_Ident=_18316_decl.get()._field_Ident, ._field_Directives=_18316_decl.get()._field_Directives, ._field_Scope=_18316_decl.get()._field_Scope, ._field_Generics=_18316_decl.get()._field_Generics, ._field_Result=_1acb2ac26_buildRetType(_18316_decl.get()._field_Result), ._field_Params=_1acb2a97e_buildParams(&(_18316_decl.get()._field_Params)), });;
}



inline jule::Slice<jule::Ptr<_1acb221d4_Fn>> _1acb2b265_buildMethods(jule::Slice<jule::Ptr<_1acae8908_FnDecl>>* _20122_decls) {
	jule::Slice<jule::Ptr<_1acb221d4_Fn>> _20213_methods = jule::Slice<jule::Ptr<_1acb221d4_Fn>>::alloc(0LL, (*(_20122_decls)).len());;
	{
		auto expr = _20122_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5c19080:;
		if (it != expr_end) {
			jule::Ptr<_1acae8908_FnDecl> _20317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1acb221d4_Fn>> &__jule_push_dest = _20213_methods; __jule_push_dest.push(_1acb2aebd_buildFn(_20317_decl)); };
			}
			_iter_next_1a5c19080:;
			++it;
			goto _iter_begin_1a5c19080;
		}
		_iter_end_1a5c19080:;
	};
	return _20213_methods;;
}



inline jule::Slice<jule::Ptr<_1accaba55_TypeSymbol>> _1acb2b50c_buildTraitInherits(jule::Slice<jule::Ptr<_1acad72cb_TypeDecl>>* _20928_inherits) {
	jule::Slice<jule::Ptr<_1accaba55_TypeSymbol>> _21013_symbols = jule::Slice<jule::Ptr<_1accaba55_TypeSymbol>>::alloc(0LL, (*(_20928_inherits)).len());;
	{
		auto expr = _20928_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5c198aa:;
		if (it != expr_end) {
			jule::Ptr<_1acad72cb_TypeDecl> _21117_it = *it;
			{
				{ jule::Slice<jule::Ptr<_1accaba55_TypeSymbol>> &__jule_push_dest = _21013_symbols; __jule_push_dest.push(_1acb29472_buildType(_21117_it)); };
			}
			_iter_next_1a5c198aa:;
			++it;
			goto _iter_begin_1a5c198aa;
		}
		_iter_end_1a5c198aa:;
	};
	return _21013_symbols;;
}



inline jule::Ptr<_1acb34405_Trait> _1acb2b7a4_buildTrait(jule::Ptr<_1acb02747_TraitDecl> _21719_decl) {
	return jule::new_ptr<_1acb34405_Trait>(_1acb34405_Trait{._field_Token=_21719_decl.get()._field_Token, ._field_Ident=_21719_decl.get()._field_Ident, ._field_Public=_21719_decl.get()._field_Public, ._field_Inherits=_1acb2b50c_buildTraitInherits(&(_21719_decl.get()._field_Inherits)), ._field_Methods=_1acb2b265_buildMethods(&(_21719_decl.get()._field_Methods)), });;
}



inline jule::Ptr<_1acb36193_EnumItem> _1acb2ba4b_buildEnumItem(jule::Ptr<_1acaeeaa7_EnumItemDecl> _22722_decl) {
	return jule::new_ptr<_1acb36193_EnumItem>(_1acb36193_EnumItem{._field_Token=_22722_decl.get()._field_Token, ._field_Ident=_22722_decl.get()._field_Ident, ._field_Value=_1acb2975d_buildExpr(_22722_decl.get()._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1acb36193_EnumItem>> _1acb2bce3_buildEnumItems(jule::Slice<jule::Ptr<_1acaeeaa7_EnumItemDecl>>* _23524_decls) {
	jule::Slice<jule::Ptr<_1acb36193_EnumItem>> _23613_items = jule::Slice<jule::Ptr<_1acb36193_EnumItem>>::alloc(0LL, (*(_23524_decls)).len());;
	{
		auto expr = _23524_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5c1c506:;
		if (it != expr_end) {
			jule::Ptr<_1acaeeaa7_EnumItemDecl> _23717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1acb36193_EnumItem>> &__jule_push_dest = _23613_items; __jule_push_dest.push(_1acb2ba4b_buildEnumItem(_23717_decl)); };
			}
			_iter_next_1a5c1c506:;
			++it;
			goto _iter_begin_1a5c1c506;
		}
		_iter_end_1a5c1c506:;
	};
	return _23613_items;;
}



inline jule::Ptr<_1acb36b88_Enum> _1acb2c244_buildEnum(jule::Ptr<_1acb005d0_EnumDecl> _24318_decl) {
	return jule::new_ptr<_1acb36b88_Enum>(_1acb36b88_Enum{._field_Token=_24318_decl.get()._field_Token, ._field_Public=_24318_decl.get()._field_Public, ._field_Ident=_24318_decl.get()._field_Ident, ._field_Kind=_1acb29472_buildType(_24318_decl.get()._field_Kind), ._field_Items=_1acb2bce3_buildEnumItems(&(_24318_decl.get()._field_Items))});;
}



inline jule::Ptr<_1acb37c00_TypeEnumItem> _1acb2c4db_buildTypeEnumItem(jule::Ptr<_1acb00da5_TypeEnumItemDecl> _25326_decl) {
	return jule::new_ptr<_1acb37c00_TypeEnumItem>(_1acb37c00_TypeEnumItem{._field_Token=_25326_decl.get()._field_Token, ._field_Ident=_25326_decl.get()._field_Ident, ._field_Kind=_1acb29472_buildType(_25326_decl.get()._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1acb37c00_TypeEnumItem>> _1acb2c783_buildTypeEnumItems(jule::Slice<jule::Ptr<_1acb00da5_TypeEnumItemDecl>>* _26128_decls) {
	jule::Slice<jule::Ptr<_1acb37c00_TypeEnumItem>> _26213_items = jule::Slice<jule::Ptr<_1acb37c00_TypeEnumItem>>::alloc(0LL, (*(_26128_decls)).len());;
	{
		auto expr = _26128_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5c1ed77:;
		if (it != expr_end) {
			jule::Ptr<_1acb00da5_TypeEnumItemDecl> _26317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1acb37c00_TypeEnumItem>> &__jule_push_dest = _26213_items; __jule_push_dest.push(_1acb2c4db_buildTypeEnumItem(_26317_decl)); };
			}
			_iter_next_1a5c1ed77:;
			++it;
			goto _iter_begin_1a5c1ed77;
		}
		_iter_end_1a5c1ed77:;
	};
	return _26213_items;;
}



inline jule::Ptr<_1acb38283_TypeEnum> _1acb2ca2a_buildTypeEnum(jule::Ptr<_1acb014b0_TypeEnumDecl> _26922_decl) {
	return jule::new_ptr<_1acb38283_TypeEnum>(_1acb38283_TypeEnum{._field_Token=_26922_decl.get()._field_Token, ._field_Public=_26922_decl.get()._field_Public, ._field_Ident=_26922_decl.get()._field_Ident, ._field_Items=_1acb2c783_buildTypeEnumItems(&(_26922_decl.get()._field_Items))});;
}



inline jule::Ptr<_1abd1497c_Var> _1acb2ccc2_buildVar(jule::Ptr<_1acae98d7_VarDecl> _27817_decl) {
	return jule::new_ptr<_1abd1497c_Var>(_1abd1497c_Var{._field_Token=_27817_decl.get()._field_Token, ._field_Ident=_27817_decl.get()._field_Ident, ._field_Binded=_27817_decl.get()._field_Binded, ._field_Constant=_27817_decl.get()._field_Constant, ._field_Mutable=_27817_decl.get()._field_Mutable, ._field_Public=_27817_decl.get()._field_Public, ._field_Statically=_27817_decl.get()._field_Statically, ._field_Reference=_27817_decl.get()._field_Reference, ._field_Kind=_1acb29472_buildType(_27817_decl.get()._field_Kind), ._field_Value=_1acb2975d_buildExpr(_27817_decl.get()._field_Expr), ._field_Refers=static__1acb27eed_new(), ._field_Directives=_27817_decl.get()._field_Directives, });;
}



inline jule::Slice<jule::Ptr<_1abd1497c_Var>> _1acb2d069_buildVars(jule::Slice<jule::Ptr<_1acae98d7_VarDecl>> _29518_decls) {
	jule::Slice<jule::Ptr<_1abd1497c_Var>> _29613_vars = jule::Slice<jule::Ptr<_1abd1497c_Var>>::alloc(0LL, _29518_decls.len());;
	{
		auto expr = &(_29518_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5c22e13:;
		if (it != expr_end) {
			jule::Ptr<_1acae98d7_VarDecl> _29717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1abd1497c_Var>> &__jule_push_dest = _29613_vars; __jule_push_dest.push(_1acb2ccc2_buildVar(_29717_decl)); };
			}
			_iter_next_1a5c22e13:;
			++it;
			goto _iter_begin_1a5c22e13;
		}
		_iter_end_1a5c22e13:;
	};
	return _29613_vars;;
}



inline jule::Ptr<_1abcb7831_Impl> _1acb2d311_buildImpl(jule::Ptr<_1acb02d52_Impl> _30318_decl) {
	return jule::new_ptr<_1abcb7831_Impl>(_1abcb7831_Impl{._field_Base=_30318_decl.get()._field_Base, ._field_Dest=_30318_decl.get()._field_Dest, ._field_Methods=_1acb2b265_buildMethods(&(_30318_decl.get()._field_Methods)), ._field_Statics=_1acb2d069_buildVars(_30318_decl.get()._field_Statics)});;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb5527d_buildAsComptimeMethodData(jule::Ptr<_1acb24d85_FnIns>* _139635_f) {
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>((*(_139635_f)), 1)}), });;
}



inline jule::Ptr<_1abcdb39e_ImportInfo> _1acb5546a_findComptimePackage(jule::Ptr<_1abce4671_Sema>* _140429_s) {
	return _1abce4ae4_SelectPackage((*(_140429_s)).ptr(), jule::Fn<jule::Bool(jule::Ptr<_1abcdb39e_ImportInfo>)>([=](jule::Ptr<_1abcdb39e_ImportInfo> _140528_pkg) mutable -> jule::Bool {
		return _140528_pkg.get()._field_LinkPath.equal("std::comptime", 13);;
	}));;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb557cd_buildComptimeTypeInfoData(jule::Ptr<_1abce4671_Sema>* _141035_s, jule::Ptr<_1acca4ba2_TypeKind>* _141050_t) {
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(_1abce4099_pushComptimeTypeInfo((*(_141035_s)).get()._field_meta.ptr(), _141050_t), 15)}), });;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acb55b0d_buildComptimeValue(jule::Ptr<_1abd5dc4b_Data>* _141828_d) {
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(jule::new_ptr<_1acb4eb7e_comptimeValue>(_1acb4eb7e_comptimeValue{._field_data=(*(_141828_d))}), 16)}), });;
}



inline jule::Bool _1acb5887a_matchConstraint(jule::Str* _14221_c, jule::Ptr<_1acca4ba2_TypeKind>* _14234_g) {
	{
		auto &_match_expr{ (*(_14221_c)) };
		
		if (_match_expr == jule::Str("signed", 6)) {
			_case_begin_1a5d81846:;
			{
				jule::Ptr<_1accac407_Prim> _14513_prim = _1acca73be_Prim((*(_14234_g)).ptr());;
				if ((_14513_prim == nullptr)) {
					return false;;
				};
				return _1ddeb48a8_IsSigNum(_14513_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("unsigned", 8)) {
			_case_begin_1a5d875b6:;
			{
				jule::Ptr<_1accac407_Prim> _15113_prim = _1acca73be_Prim((*(_14234_g)).ptr());;
				if ((_15113_prim == nullptr)) {
					return false;;
				};
				return _1ddeb3ca3_IsUnsigInt(_15113_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("float", 5)) {
			_case_begin_1a5d8762c:;
			{
				jule::Ptr<_1accac407_Prim> _15713_prim = _1acca73be_Prim((*(_14234_g)).ptr());;
				if ((_15713_prim == nullptr)) {
					return false;;
				};
				return _1ddeb4369_IsFloat(_15713_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("numeric", 7)) {
			_case_begin_1a5d86571:;
			{
				jule::Ptr<_1accac407_Prim> _16313_prim = _1acca73be_Prim((*(_14234_g)).ptr());;
				if ((_16313_prim == nullptr)) {
					return false;;
				};
				return _1ddeb4611_IsNum(_16313_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("mutable", 7)) {
			_case_begin_1a5d865d7:;
			{
				return _1acca6445_Mutable((*(_14234_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str("immutable", 9)) {
			_case_begin_1a5d8664d:;
			{
				return (!(_1acca6445_Mutable((*(_14234_g)).ptr())));;
			}
		}
		else if (_match_expr == jule::Str("comparable", 10)) {
			_case_begin_1a5d866b4:;
			{
				return _1acca61d1_Comparable((*(_14234_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str("ordered", 7)) {
			_case_begin_1a5d87781:;
			{
				return _1acca66a9_Ordered((*(_14234_g)).ptr());;
			}
		}
		else {
			_case_begin_1a5d873b8:;
			{
				return false;;
			}
		}
		_match_end_1a5d86c58:;
	};
}



inline jule::Bool _1acb58b66_isBuiltinConstraint(jule::Str* _18125_ident) {
	{
		auto expr = &(_1acb56cda_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5d8c17b:;
		if (it != expr_end) {
			jule::Str *_18212_bc = it;
			{
				if (((*(_18125_ident)) == (*(_18212_bc)))) {
					return true;;
				};
			}
			_iter_next_1a5d8c17b:;
			++it;
			goto _iter_begin_1a5d8c17b;
		}
		_iter_end_1a5d8c17b:;
	};
	return false;;
}



inline jule::Ptr<_1abcc4563_scopeChecker> _1abcb9965_newScopeCheckerBase(jule::Ptr<_1abce4671_Sema>* _5829_s, jule::Ptr<_1acb24d85_FnIns> _5843_owner) {
	return jule::new_ptr<_1abcc4563_scopeChecker>(_1abcc4563_scopeChecker{._field_s=(*(_5829_s)), ._field_owner=_5843_owner, ._field_table=jule::new_ptr<_1abd59241_SymbolTable>(), });;
}



inline jule::Ptr<_1abcc4563_scopeChecker> _1abcb9cea_newScopeChecker(jule::Ptr<_1abce4671_Sema>* _6625_s, jule::Ptr<_1acb24d85_FnIns> _6639_owner) {
	jule::Ptr<_1abcc4563_scopeChecker> _6713_base = _1abcb9965_newScopeCheckerBase(_6625_s, _6639_owner);;
	_6713_base.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1abcc32cb_scopeLabel>>>(nullptr);
	_6713_base.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1abcc374e_scopeGoto>>>(nullptr);
	return _6713_base;;
}



inline jule::Ptr<_1abcc32cb_scopeLabel> _1abcba13b_findLabelParent(jule::Str _7620_ident, jule::Ptr<_1abcc4563_scopeChecker> _7636_scope) {
	jule::Ptr<_1abcc32cb_scopeLabel> _7713_label = _1abcc7c1a_findLabelScope(_7636_scope, _7620_ident);;
	while ((_7713_label == nullptr)) {
		{
			if (((_7636_scope.get()._field_parent == nullptr) || (_7636_scope.get()._field_owner != nullptr))) {
				return nullptr;;
			};
			_7636_scope=_7636_scope.get()._field_parent;
			_7713_label=_1abcc7c1a_findLabelScope(_7636_scope, _7620_ident);
		}
	_iter_next_1a5da14d1:;
	}
	_iter_end_1a5da14d1:;;
	return _7713_label;;
}



inline jule::Bool _1abcba4c1_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_1abcbc935_Scope>* _9034_sc) {
	{
		auto &_match_expr{ _9021_Model };
		
		if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1a5da2dea:;
			{
				jule::Ptr<_1acb1106e_FnCallExprModel> _9313_fcem = _9021_Model.cast_ptr<_1acb1106e_FnCallExprModel>(&__jule_any_type35);;
				if ((_9313_fcem.get()._field_Except == (*(_9034_sc)))) {
					return true;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1a5da2e61:;
			{
				jule::Ptr<_1abd5dc4b_Data> _9813_d = _9021_Model.cast_ptr<_1abd5dc4b_Data>(&__jule_any_type24);;
				return _1abcba4c1_modelIsGotoScope(_9813_d.get()._field_Model, _9034_sc);;
			}
		}
		_match_end_1a5da1b30:;
	};
	return false;;
}



inline jule::Bool _1abcba812_stmtIsGotoScope(jule::Any* _10421_stmt, jule::Ptr<_1abcbc935_Scope>* _10434_sc) {
	{
		auto &_match_expr{ (*(_10421_stmt)) };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1a5da50b7:;
			{
				return ((*(_10421_stmt)).cast_ptr<_1abcbc935_Scope>(&__jule_any_type22) == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1a5da512d:;
			{
				return ((*(_10421_stmt)).cast_ptr<_1abcbd77c_InfIter>(&__jule_any_type37).get()._field_Scope == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1a5da5194:;
			{
				jule::Ptr<_1abcbe5d5_RangeIter> _11113_it = (*(_10421_stmt)).cast_ptr<_1abcbe5d5_RangeIter>(&__jule_any_type41);;
				return ((_11113_it.get()._field_Scope == (*(_10434_sc))) || _1abcba4c1_modelIsGotoScope(_11113_it.get()._field_Expr.get()._field_Model, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1a5da334b:;
			{
				jule::Ptr<_1abcbdc00_WhileIter> _11413_it = (*(_10421_stmt)).cast_ptr<_1abcbdc00_WhileIter>(&__jule_any_type39);;
				return (((_11413_it.get()._field_Scope == (*(_10434_sc))) || _1abcba4c1_modelIsGotoScope(_11413_it.get()._field_Expr, _10434_sc)) || _1abcba4c1_modelIsGotoScope(_11413_it.get()._field_Next, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1a5da33b2:;
			{
				jule::Ptr<_1abcc174c_Match> _11913_m = (*(_10421_stmt)).cast_ptr<_1abcc174c_Match>(&__jule_any_type48);;
				{
					auto expr = &(_11913_m.get()._field_Cases);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a5da85b5:;
					if (it != expr_end) {
						jule::Ptr<_1abcc2297_Case> *_12016_c = it;
						{
							if (((*(_12016_c)).get()._field_Scope == (*(_10434_sc)))) {
								return true;;
							};
							{
								auto expr = &((*(_12016_c)).get()._field_Exprs);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a5da92ca:;
								if (it != expr_end) {
									jule::Ptr<_1abd5dc4b_Data> *_12420_expr = it;
									{
										if (_1abcba4c1_modelIsGotoScope((*(_12420_expr)).get()._field_Model, _10434_sc)) {
											return true;;
										};
									}
									_iter_next_1a5da92ca:;
									++it;
									goto _iter_begin_1a5da92ca;
								}
								_iter_end_1a5da92ca:;
							};
						}
						_iter_next_1a5da85b5:;
						++it;
						goto _iter_begin_1a5da85b5;
					}
					_iter_end_1a5da85b5:;
				};
				return ((_11913_m.get()._field_Default != nullptr) && (_11913_m.get()._field_Default.get()._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1a5da3428:;
			{
				jule::Ptr<_1abcbd491_Conditional> _13213_c = (*(_10421_stmt)).cast_ptr<_1abcbd491_Conditional>(&__jule_any_type36);;
				{
					auto expr = &(_13213_c.get()._field_Elifs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a5daa83c:;
					if (it != expr_end) {
						jule::Ptr<_1abcbcd31_If> *_13316_elif = it;
						{
							if ((((*(_13316_elif)).get()._field_Scope == (*(_10434_sc))) || _1abcba4c1_modelIsGotoScope((*(_13316_elif)).get()._field_Expr, _10434_sc))) {
								return true;;
							};
						}
						_iter_next_1a5daa83c:;
						++it;
						goto _iter_begin_1a5daa83c;
					}
					_iter_end_1a5daa83c:;
				};
				return ((_13213_c.get()._field_Default != nullptr) && (_13213_c.get()._field_Default.get()._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1a5da348e:;
			{
				jule::Ptr<_1abd5dc4b_Data> _14013_d = (*(_10421_stmt)).cast_ptr<_1abd5dc4b_Data>(&__jule_any_type24);;
				return _1abcba4c1_modelIsGotoScope(_14013_d.get()._field_Model, _10434_sc);;
			}
		}
		else {
			_case_begin_1a5da32d5:;
			{
				return false;;
			}
		}
		_match_end_1a5da3280:;
	};
}



inline jule::I64 _1abcbab53_countMatchType(jule::Ptr<_1abcc174c_Match>* _14720_m, jule::Ptr<_1acca4ba2_TypeKind>* _14732_t) {
	jule::I64 _14813_n = 0LL;;
	jule::Str _1499_kind = _1acca5059_Str((*(_14732_t)).ptr());;
	_julec_label_loop:;
	{
		auto expr = &((*(_14720_m)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5dad521:;
		if (it != expr_end) {
			jule::Ptr<_1abcc2297_Case> *_15112_c = it;
			{
				if (((*(_15112_c)) == nullptr)) {
					goto _iter_next_1a5dad521;
				};
				{
					auto expr = &((*(_15112_c)).get()._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a5dae2ad:;
					if (it != expr_end) {
						jule::Ptr<_1abd5dc4b_Data> *_15616_expr = it;
						{
							if (((*(_15616_expr)) == nullptr)) {
								goto _iter_end_1a5dad521;
							};
							if ((_1499_kind == _1acca5059_Str((*(_15616_expr)).get()._field_Model.cast_ptr<_1acca4ba2_TypeKind>(&__jule_any_type89).ptr()))) {
								(_14813_n)++;
							};
						}
						_iter_next_1a5dae2ad:;
						++it;
						goto _iter_begin_1a5dae2ad;
					}
					_iter_end_1a5dae2ad:;
				};
			}
			_iter_next_1a5dad521:;
			++it;
			goto _iter_begin_1a5dad521;
		}
		_iter_end_1a5dad521:;
	};
	return _14813_n;;
}



inline jule::Slice<jule::Ptr<_1abd5dc4b_Data>> _1abcbadea_getDatasFromTupleData(jule::Ptr<_1abd5dc4b_Data>* _17131_d) {
	if ((_1acca905d_Tup((*(_17131_d)).get()._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*(_17131_d)).get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type87) {
				_case_begin_1a5db2d3e:;
				{
					return (*(_17131_d)).get()._field_Model.cast_ptr<_1acb14c98_TupleExprModel>(&__jule_any_type87).get()._field_Datas;;
				}
			}
			else {
				_case_begin_1a5db09c9:;
				{
					jule::Ptr<_1accb21ba_Tuple> _17721_t = _1acca905d_Tup((*(_17131_d)).get()._field_Kind.ptr());;
					jule::Slice<jule::Ptr<_1abd5dc4b_Data>> _17821_r = jule::Slice<jule::Ptr<_1abd5dc4b_Data>>::alloc(0LL, _17721_t.get()._field_Types.len());;
					{
						auto expr = &(_17721_t.get()._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a5db1cd8:;
						if (it != expr_end) {
							jule::Ptr<_1acca4ba2_TypeKind> _17925_kind = *it;
							{
								{ jule::Slice<jule::Ptr<_1abd5dc4b_Data>> &__jule_push_dest = _17821_r; __jule_push_dest.push(jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_17925_kind, ._field_Mutable=true, })); };
							}
							_iter_next_1a5db1cd8:;
							++it;
							goto _iter_begin_1a5db1cd8;
						}
						_iter_end_1a5db1cd8:;
					};
					return _17821_r;;
				}
			}
			_match_end_1a5db0853:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1abd5dc4b_Data>>::make({(*(_17131_d))});;
	};
}



inline jule::Bool _1abcbb736_checkMut(jule::Ptr<_1abce4671_Sema>* _20618_s, jule::Ptr<_1abd5dc4b_Data>* _20629_left, jule::Ptr<_1abd5dc4b_Data> _20646_right, jule::Ptr<_2097d15d8_Token> _20660_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*(_20629_left)).get()._field_Mutable))) {
			_case_begin_1a5db5814:;
			{
				_1abce7003_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str("cannot assign to immutable storage", 34), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_20646_right != nullptr) && (!(_20646_right.get()._field_Mutable))) && _1acca6445_Mutable(_20646_right.get()._field_Kind.ptr()))) {
			_case_begin_1a5db587a:;
			{
				if (((!_20660_op.get()._field_Kind.equal("=", 1)) && (_1acca8821_Struct(_20646_right.get()._field_Kind.ptr()) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_1abce7003_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_20646_right.get()._field_Kind.ptr()), &__jule_any_type5)}));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a5db579d:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a5db4e95:;
	};
}



inline jule::Bool _1abcbbbba_checkAssign(jule::Ptr<_1abce4671_Sema>* _22521_s, jule::Ptr<_1abd5dc4b_Data>* _22536_left, jule::Ptr<_1abd5dc4b_Data> _22553_right, jule::Ptr<_2097d15d8_Token> _22567_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1acb24d85_FnIns> _2269_f = _1acca85ac_Fn((*(_22536_left)).get()._field_Kind.ptr());;
	if ((((_2269_f != nullptr) && (_2269_f.get()._field_Decl != nullptr)) && _2269_f.get()._field_Decl.get()._field_Global)) {
		_1abce7003_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("type is not support assignment", 30), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1abd5e5ba_IsConst((*(_22536_left)).ptr())) {
			_case_begin_1a5db9c9c:;
			{
				_1abce7003_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("constants is can't assign", 25), jule::Slice<jule::Any>());
				_1abce7322_pushSuggestion((*(_22521_s)).ptr(), jule::Str("remove constant qualifer if you need to assign", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*(_22536_left)).get()._field_Lvalue))) {
			_case_begin_1a5db9d13:;
			{
				_1abce7003_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("invalid expression: expected lvalue for assignment", 50), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_1abcbb736_checkMut(_22521_s, _22536_left, _22553_right, _22567_op)))) {
			_case_begin_1a5db9d79:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a5db9c36:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a5db88b1:;
	};
}



inline jule::Bool _1abcbbe62_isValidAstStForNextSt(jule::Any* _24731_n) {
	{
		auto &_match_expr{ (*(_24731_n)) };
		
		if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1a5dbbb6c:;
			{
				return (!((*(_24731_n)).cast_ptr<_1acae5916_AssignSt>(&__jule_any_type59).get()._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1a5db5935:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a5dba110:;
			{
				return false;;
			}
		}
		_match_end_1a5dbb908:;
	};
}



inline jule::Bool _1abcbc209_isValidStForNextSt(jule::Any* _25824_st) {
	{
		auto &_match_expr{ (*(_25824_st)) };
		
		if (_match_expr.type == &__jule_any_type44 || _match_expr.type == &__jule_any_type45 || _match_expr.type == &__jule_any_type47) {
			_case_begin_1a5dbb9d5:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1a5dbcc4a:;
			{
				{
					auto &_match_expr{ (*(_25824_st)).cast_ptr<_1abd5dc4b_Data>(&__jule_any_type24).get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type35) {
						_case_begin_1a5dbd784:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1a5dbdb19:;
						{
							return false;;
						}
					}
					_match_end_1a5dbd872:;
				};
			}
		}
		else {
			_case_begin_1a5dbc750:;
			{
				return false;;
			}
		}
		_match_end_1a5dbc2bb:;
	};
}



inline jule::Bool _1abcbc4a1_stmtIsDef(jule::Any* _27615_st) {
	{
		auto &_match_expr{ (*(_27615_st)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a5dbe7a7:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a5dbd058:;
			{
				return false;;
			}
		}
		_match_end_1a5dbdbd5:;
	};
}



inline jule::Ptr<_1abd1497c_Var> _1abcd8ab6_findVarInPackage(jule::Slice<jule::Ptr<_1abd59241_SymbolTable>>* _4626_files, jule::Str _4649_ident, jule::Bool _4661_binded) {
	{
		auto expr = _4626_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a60199ce:;
		if (it != expr_end) {
			jule::Ptr<_1abd59241_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_1abd1497c_Var> _4817_v = _1abd59ab0_FindVar(_4717_f.ptr(), _4649_ident, _4661_binded);;
				if ((_4817_v != nullptr)) {
					return _4817_v;;
				};
			}
			_iter_next_1a60199ce:;
			++it;
			goto _iter_begin_1a60199ce;
		}
		_iter_end_1a60199ce:;
	};
	return nullptr;;
}



inline jule::Ptr<_1acca3e59_TypeAlias> _1abcd8ee5_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1abd59241_SymbolTable>>* _5832_files, jule::Str _5855_ident, jule::Bool _5867_binded) {
	{
		auto expr = _5832_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a601ae31:;
		if (it != expr_end) {
			jule::Ptr<_1abd59241_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_1acca3e59_TypeAlias> _6017_ta = _1abd59e67_FindTypeAlias(_5917_f.ptr(), _5855_ident, _5867_binded);;
				if ((_6017_ta != nullptr)) {
					return _6017_ta;;
				};
			}
			_iter_next_1a601ae31:;
			++it;
			goto _iter_begin_1a601ae31;
		}
		_iter_end_1a601ae31:;
	};
	return nullptr;;
}



inline jule::Ptr<_1acb07021_Struct> _1abcd93d0_findStructInPackage(jule::Slice<jule::Ptr<_1abd59241_SymbolTable>>* _7029_files, jule::Str _7052_ident, jule::Bool _7064_binded) {
	{
		auto expr = _7029_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a601c3c7:;
		if (it != expr_end) {
			jule::Ptr<_1abd59241_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_1acb07021_Struct> _7217_s = _1abd5a31e_FindStruct(_7117_f.ptr(), _7052_ident, _7064_binded);;
				if ((_7217_s != nullptr)) {
					return _7217_s;;
				};
			}
			_iter_next_1a601c3c7:;
			++it;
			goto _iter_begin_1a601c3c7;
		}
		_iter_end_1a601c3c7:;
	};
	return nullptr;;
}



inline jule::Ptr<_1acb221d4_Fn> _1abcd9842_findFnInPackage(jule::Slice<jule::Ptr<_1abd59241_SymbolTable>>* _8225_files, jule::Str _8248_ident, jule::Bool _8260_binded) {
	{
		auto expr = _8225_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a601d86d:;
		if (it != expr_end) {
			jule::Ptr<_1abd59241_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_1acb221d4_Fn> _8417_f = _1abd5a6c6_FindFn(_8317_file.ptr(), _8248_ident, _8260_binded);;
				if ((_8417_f != nullptr)) {
					return _8417_f;;
				};
			}
			_iter_next_1a601d86d:;
			++it;
			goto _iter_begin_1a601d86d;
		}
		_iter_end_1a601d86d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1acb34405_Trait> _1abcd9b50_findTraitInPackage(jule::Slice<jule::Ptr<_1abd59241_SymbolTable>>* _9428_files, jule::Str _9451_ident) {
	{
		auto expr = _9428_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a601eb05:;
		if (it != expr_end) {
			jule::Ptr<_1abd59241_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_1acb34405_Trait> _9617_t = _1abd5a9d4_FindTrait(_9517_f.ptr(), _9451_ident);;
				if ((_9617_t != nullptr)) {
					return _9617_t;;
				};
			}
			_iter_next_1a601eb05:;
			++it;
			goto _iter_begin_1a601eb05;
		}
		_iter_end_1a601eb05:;
	};
	return nullptr;;
}



inline jule::Ptr<_1acb36b88_Enum> _1abcd9e91_findEnumInPackage(jule::Slice<jule::Ptr<_1abd59241_SymbolTable>>* _10627_files, jule::Str _10650_ident) {
	{
		auto expr = _10627_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6020d6a:;
		if (it != expr_end) {
			jule::Ptr<_1abd59241_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_1acb36b88_Enum> _10817_e = _1abd5ace2_FindEnum(_10717_f.ptr(), _10650_ident);;
				if ((_10817_e != nullptr)) {
					return _10817_e;;
				};
			}
			_iter_next_1a6020d6a:;
			++it;
			goto _iter_begin_1a6020d6a;
		}
		_iter_end_1a6020d6a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1acb38283_TypeEnum> _1abcda2d2_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1abd59241_SymbolTable>>* _11831_files, jule::Str _11854_ident) {
	{
		auto expr = _11831_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6022124:;
		if (it != expr_end) {
			jule::Ptr<_1abd59241_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_1acb38283_TypeEnum> _12017_e = _1abd5b100_FindTypeEnum(_11917_f.ptr(), _11854_ident);;
				if ((_12017_e != nullptr)) {
					return _12017_e;;
				};
			}
			_iter_next_1a6022124:;
			++it;
			goto _iter_begin_1a6022124;
		}
		_iter_end_1a6022124:;
	};
	return nullptr;;
}



inline jule::Any _1abcda7cc_defByIdentPackage(jule::Slice<jule::Ptr<_1abd59241_SymbolTable>>* _12927_files, jule::Str* _12951_ident, jule::Bool _12963_binded) {
	{
		auto expr = _12927_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6023631:;
		if (it != expr_end) {
			jule::Ptr<_1abd59241_SymbolTable> _13017_file = *it;
			{
				jule::Any _13117_def = _1abd5bebe_defByIdent(_13017_file.ptr(), (*(_12951_ident)), _12963_binded);;
				if ((_13117_def != nullptr)) {
					return _13117_def;;
				};
			}
			_iter_next_1a6023631:;
			++it;
			goto _iter_begin_1a6023631;
		}
		_iter_end_1a6023631:;
	};
	return nullptr;;
}



inline jule::Bool _1abce1294_isStdPackage(jule::Str _35517_f, jule::Str _35525_p) {
	return _20939cdb9_HasPrefix(_35517_f, _2093a7b3d_Join(jule::Slice<jule::Str>::make({_2094d2c79_PathStdlib,_35525_p})));;
}



inline jule::Bool _1abce1eed_isValidModelForRef(jule::Any* _1228_m) {
	{
		auto &_match_expr{ (*(_1228_m)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a60334a9:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1a6033b6e:;
			{
				jule::Ptr<_1acb138e0_StructSubIdentExprModel> _1717_model = (*(_1228_m)).cast_ptr<_1acb138e0_StructSubIdentExprModel>(&__jule_any_type71);;
				return _1abce1eed_isValidModelForRef(&(_1717_model.get()._field_Expr.get()._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1a6033bd5:;
			{
				jule::Ptr<_1acb13109_TraitSubIdentExprModel> _2017_model = (*(_1228_m)).cast_ptr<_1acb13109_TraitSubIdentExprModel>(&__jule_any_type70);;
				return _1abce1eed_isValidModelForRef(&(_2017_model.get()._field_Expr));;
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1a6033c4b:;
			{
				jule::Ptr<_1acb0e5ab_UnaryExprModel> _2317_unary = (*(_1228_m)).cast_ptr<_1acb0e5ab_UnaryExprModel>(&__jule_any_type74);;
				if ((!_2317_unary.get()._field_Op.get()._field_Kind.equal("*", 1))) {
					return false;;
				};
				if ((_1acca7897_Ptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1acca7633_Sptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) == nullptr)) {
					return false;;
				};
				return _1abce1eed_isValidModelForRef(&(_2317_unary.get()._field_Expr.get()._field_Model));;
			}
		}
		else {
			_case_begin_1a6033245:;
			{
				return false;;
			}
		}
		_match_end_1a60331e0:;
	};
}



inline _20943da3c_Log _1abce2493_compilerErr(jule::Ptr<_2097d15d8_Token>* _4117_token, jule::Bool _4132_line, jule::Str _4144_fmt, jule::Slice<jule::Any> _4157_args) {
	_20943da3c_Log _4213_log = _20943da3c_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*(_4117_token)).get()._field_Row, ._field_Column=(*(_4117_token)).get()._field_Column, ._field_Path=(*(_4117_token)).get()._field_File.get()._field_Path, ._field_Text=_20943de7c_Logf(_4144_fmt, _4157_args), };;
	if (_4132_line) {
		_4213_log._field_Line=_2097d7886_GetRow((*(_4117_token)).get()._field_File.ptr(), (*(_4117_token)).get()._field_Row);
	};
	return _4213_log;;
}



inline jule::Bool _1abce27d4_impIsLookupable(jule::Ptr<_1abcdb39e_ImportInfo>* _5521_i, jule::Str _5537_ident) {
	if ((*(_5521_i)).get()._field_Binded) {
		return false;;
	};
	if ((!((*(_5521_i)).get()._field_ImportAll))) {
		if (((*(_5521_i)).get()._field_Selected.len() > 0LL)) {
			return _1abcdd956_existIdent((*(_5521_i)).ptr(), _5537_ident);;
		};
	};
	return (*(_5521_i)).get()._field_ImportAll;;
}



inline void _1abce2ad1_appendRetVars(jule::Slice<jule::Ptr<_1abd1497c_Var>>* _6723_dest, jule::Ptr<_1acb24d85_FnIns>* _6742_f) {
	if ((_1acb22646_IsVoid((*(_6742_f)).get()._field_Decl.ptr()) || ((*(_6742_f)).get()._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1acca4ba2_TypeKind>> _7213_types = _1acb25ea7_Types((*(_6742_f)).ptr());;
	{
		auto expr = &((*(_6742_f)).get()._field_Decl.get()._field_Result.get()._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a603baab:;
		if (it != expr_end) {
			jule::I64 _7310_i = it - expr->begin();
			jule::Ptr<_2097d15d8_Token> _7317_ident = *it;
			{
				if ((_2097d3d7c_IsIgnoreIdent(_7317_ident.get()._field_Kind) || _2097d4124_IsAnonIdent(_7317_ident.get()._field_Kind))) {
					goto _iter_next_1a603baab;
				};
				{ jule::Slice<jule::Ptr<_1abd1497c_Var>> &__jule_push_dest = (*(_6723_dest)); __jule_push_dest.push(jule::new_ptr<_1abd1497c_Var>(_1abd1497c_Var{._field_Scope=(*(_6742_f)).get()._field_Scope, ._field_Token=_7317_ident, ._field_Ident=_7317_ident.get()._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_1accaba55_TypeSymbol>(_1accaba55_TypeSymbol{._field_Kind=_7213_types[_7310_i]}), ._field_Value=jule::new_ptr<_1abd5ecc4_Value>(_1abd5ecc4_Value{._field_Data=jule::new_ptr<_1abd5dc4b_Data>()}), ._field_RetOrder=_7310_i, })); };
			}
			_iter_next_1a603baab:;
			++it;
			_7310_i++;
			goto _iter_begin_1a603baab;
		}
		_iter_end_1a603baab:;
	};
	if ((((*(_6742_f)).get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL) && ((*(_6723_dest)).len() == 1LL))) {
		(*(_6723_dest))[((*(_6723_dest)).len() - 1LL)].get()._field_RetOrder=-1LL;
	};
}



inline void _1abce2d89_appendParamVars(jule::Slice<jule::Ptr<_1abd1497c_Var>>* _9725_dest, jule::Ptr<_1acb24d85_FnIns>* _9744_f) {
	if (((*(_9744_f)).get()._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_9744_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6040241:;
		if (it != expr_end) {
			jule::Ptr<_1acb23eb6_ParamIns> _10217_p = *it;
			{
				if ((_2097d3d7c_IsIgnoreIdent(_10217_p.get()._field_Decl.get()._field_Ident) || _2097d4124_IsAnonIdent(_10217_p.get()._field_Decl.get()._field_Ident))) {
					goto _iter_next_1a6040241;
				};
				jule::Ptr<_1abd1497c_Var> _10717_v = jule::new_ptr<_1abd1497c_Var>(_1abd1497c_Var{._field_Scope=(*(_9744_f)).get()._field_Scope, ._field_Token=_10217_p.get()._field_Decl.get()._field_Token, ._field_Ident=_10217_p.get()._field_Decl.get()._field_Ident, ._field_Mutable=_10217_p.get()._field_Decl.get()._field_Mutable, ._field_Used=true, ._field_Reference=_10217_p.get()._field_Decl.get()._field_Reference, ._field_Kind=jule::new_ptr<_1accaba55_TypeSymbol>(), ._field_Value=jule::new_ptr<_1abd5ecc4_Value>(_1abd5ecc4_Value{._field_Data=jule::new_ptr<_1abd5dc4b_Data>()}), });;
				{
					
					if (_1acb20e80_IsSelf(_10217_p.get()._field_Decl.ptr())) {
						_case_begin_1a6042b28:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1acca4740_Kind>((*(_9744_f)).get()._field_Owner, 0)});
							_10717_v.get()._field_Reference=(!(_1acb211e4_IsRef(_10217_p.get()._field_Decl.ptr())));
							if (_1acb211e4_IsRef(_10217_p.get()._field_Decl.ptr())) {
								_10717_v.get()._field_Ident=_10717_v.get()._field_Ident.slice(1LL);
								_10717_v.get()._field_Kind.get()._field_Kind.get()._field_Kind=jule::Trait<_1acca4740_Kind>(jule::new_ptr<_1accb0b58_Sptr>(_1accb0b58_Sptr{._field_Elem=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_BindIdent=_10717_v.get()._field_Kind.get()._field_Kind.get()._field_BindIdent, ._field_Kind=_10717_v.get()._field_Kind.get()._field_Kind.get()._field_Kind})}), 21);
							};
						}
					}
					else if (_10217_p.get()._field_Decl.get()._field_Variadic) {
						_case_begin_1a604285e:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1acca4740_Kind>(jule::new_ptr<_1accb15b5_Slc>(_1accb15b5_Slc{._field_Elem=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_BindIdent=_10217_p.get()._field_Kind.get()._field_BindIdent, ._field_Kind=_10217_p.get()._field_Kind.get()._field_Kind})}), 22)});
						}
					}
					else {
						_case_begin_1a604097d:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=_10217_p.get()._field_Kind;
						}
					}
					_match_end_1a604273d:;
				};
				{ jule::Slice<jule::Ptr<_1abd1497c_Var>> &__jule_push_dest = (*(_9725_dest)); __jule_push_dest.push(_10717_v); };
			}
			_iter_next_1a6040241:;
			++it;
			goto _iter_begin_1a6040241;
		}
		_iter_end_1a6040241:;
	};
}



inline void _1abce3164_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1acca3e59_TypeAlias>>* _15734_dest, jule::Ptr<_1acb24d85_FnIns>* _15759_f) {
	jule::I64 _15813_size = (*(_15759_f)).get()._field_Generics.len();;
	if (((*(_15759_f)).get()._field_Decl.get()._field_Owner != nullptr)) {
		_15813_size+=(*(_15759_f)).get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	if ((_15813_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_15759_f)).get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a604c9e0:;
		if (it != expr_end) {
			jule::I64 _16710_i = it - expr->begin();
			jule::Ptr<_1acca3420_InsGeneric> _16717_g = *it;
			{
				jule::Ptr<_1acae4272_GenericDecl> _16817_decl = (*(_15759_f)).get()._field_Decl.get()._field_Generics[_16710_i];;
				{ jule::Slice<jule::Ptr<_1acca3e59_TypeAlias>> &__jule_push_dest = (*(_15734_dest)); __jule_push_dest.push(jule::new_ptr<_1acca3e59_TypeAlias>(_1acca3e59_TypeAlias{._field_Scope=(*(_15759_f)).get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_16817_decl.get()._field_Token, ._field_Ident=_16817_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1accaba55_TypeSymbol>(_1accaba55_TypeSymbol{._field_Kind=_16717_g.get()._field_Kind}), })); };
			}
			_iter_next_1a604c9e0:;
			++it;
			_16710_i++;
			goto _iter_begin_1a604c9e0;
		}
		_iter_end_1a604c9e0:;
	};
	if (((*(_15759_f)).get()._field_Decl.get()._field_Owner != nullptr)) {
		jule::Ptr<_1acb09d37_StructIns> _18017_owner = (*(_15759_f)).get()._field_Owner;;
		{
			auto expr = &(_18017_owner.get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a604ecde:;
			if (it != expr_end) {
				jule::I64 _18114_i = it - expr->begin();
				jule::Ptr<_1acca3420_InsGeneric> _18121_g = *it;
				{
					jule::Ptr<_1acae4272_GenericDecl> _18221_decl = _18017_owner.get()._field_Decl.get()._field_Generics[_18114_i];;
					{ jule::Slice<jule::Ptr<_1acca3e59_TypeAlias>> &__jule_push_dest = (*(_15734_dest)); __jule_push_dest.push(jule::new_ptr<_1acca3e59_TypeAlias>(_1acca3e59_TypeAlias{._field_Scope=(*(_15759_f)).get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_18221_decl.get()._field_Token, ._field_Ident=_18221_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1accaba55_TypeSymbol>(_1accaba55_TypeSymbol{._field_Kind=_18121_g.get()._field_Kind}), })); };
				}
				_iter_next_1a604ecde:;
				++it;
				_18114_i++;
				goto _iter_begin_1a604ecde;
			}
			_iter_end_1a604ecde:;
		};
	};
}



inline jule::Ptr<_1abd59241_SymbolTable> _1abce34b6_findFile(jule::Slice<jule::Ptr<_1abd59241_SymbolTable>>* _19518_files, jule::Ptr<_2097d6973_File>* _19542_handler) {
	{
		auto expr = _19518_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a60505b4:;
		if (it != expr_end) {
			jule::Ptr<_1abd59241_SymbolTable> _19617_fl = *it;
			{
				if ((_19617_fl.get()._field_File == (*(_19542_handler)))) {
					return _19617_fl;;
				};
			}
			_iter_next_1a60505b4:;
			++it;
			goto _iter_begin_1a60505b4;
		}
		_iter_end_1a60505b4:;
	};
	return nullptr;;
}



inline void _1abce3928_pushSuggestion(_20943da3c_Log* _20430_log, jule::Str _20441_fmt, jule::Slice<jule::Any> _20454_args) {
	_20430_log->_field_Suggestion=_20943de7c_Logf(_20441_fmt, _20454_args);
}



inline void _1abd12e64_pushImplemented(jule::Ptr<_1acb34405_Trait> _283424_t, jule::Ptr<_1acb07021_Struct>* _283440_d) {
	_julec_label_push:;
	{
		
		if ((_283424_t.get()._field_Implemented.len() > 0LL)) {
			_case_begin_1a605392a:;
			{
				{
					auto expr = &(_283424_t.get()._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a60544ec:;
					if (it != expr_end) {
						jule::Ptr<_1acb07021_Struct> _283816_s = *it;
						{
							if ((_283816_s == (*(_283440_d)))) {
								goto _match_end_1a605351d;
							};
						}
						_iter_next_1a60544ec:;
						++it;
						goto _iter_begin_1a60544ec;
					}
					_iter_end_1a60544ec:;
				};
				goto _case_begin_1a6053584;
			}
		}
		else {
			_case_begin_1a6053584:;
			{
				{ jule::Slice<jule::Ptr<_1acb07021_Struct>> &__jule_push_dest = _283424_t.get()._field_Implemented; __jule_push_dest.push((*(_283440_d))); };
			}
		}
		_match_end_1a605351d:;
	};
	{
		auto expr = &(_283424_t.get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6054cc2:;
		if (it != expr_end) {
			jule::Ptr<_1accaba55_TypeSymbol> _284717_i = *it;
			{
				_1abd12e64_pushImplemented(_1acca8a85_Trait(_284717_i.get()._field_Kind.ptr()), _283440_d);
			}
			_iter_next_1a6054cc2:;
			++it;
			goto _iter_begin_1a6054cc2;
		}
		_iter_end_1a6054cc2:;
	};
}



inline void _1abd1321c_pushImplements(jule::Ptr<_1acb07021_Struct>* _285224_s, jule::Ptr<_1acb34405_Trait> _285240_t) {
	_julec_label_push:;
	{
		
		if (((*(_285224_s)).get()._field_Implements.len() > 0LL)) {
			_case_begin_1a6056147:;
			{
				{
					auto expr = &((*(_285224_s)).get()._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a6056c19:;
					if (it != expr_end) {
						jule::Ptr<_1acb34405_Trait> _285616_b = *it;
						{
							if ((_285616_b == _285240_t)) {
								goto _match_end_1a6055c3a;
							};
						}
						_iter_next_1a6056c19:;
						++it;
						goto _iter_begin_1a6056c19;
					}
					_iter_end_1a6056c19:;
				};
				goto _case_begin_1a6055ca1;
			}
		}
		else {
			_case_begin_1a6055ca1:;
			{
				{ jule::Slice<jule::Ptr<_1acb34405_Trait>> &__jule_push_dest = (*(_285224_s)).get()._field_Implements; __jule_push_dest.push(_285240_t); };
			}
		}
		_match_end_1a6055c3a:;
	};
	{
		auto expr = &(_285240_t.get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a60574de:;
		if (it != expr_end) {
			jule::Ptr<_1accaba55_TypeSymbol> _286517_i = *it;
			{
				_1abd1321c_pushImplements(_285224_s, _1acca8a85_Trait(_286517_i.get()._field_Kind.ptr()));
			}
			_iter_next_1a60574de:;
			++it;
			goto _iter_begin_1a60574de;
		}
		_iter_end_1a60574de:;
	};
}



inline jule::Bool _1abd4641a_traitHasReferenceReceiver(jule::Ptr<_1acb34405_Trait>* _2631_t) {
	{
		auto expr = &((*(_2631_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a626a999:;
		if (it != expr_end) {
			jule::Ptr<_1acb221d4_Fn> *_2712_f = it;
			{
				if ((*(_2712_f)).get()._field_Statically) {
					goto _iter_next_1a626a999;
				};
				jule::Ptr<_1acb20897_Param> _3313_p = (*(_2712_f)).get()._field_Params[0LL];;
				if ((_1acb211e4_IsRef(_3313_p.ptr()) && _1acb20e80_IsSelf(_3313_p.ptr()))) {
					return true;;
				};
			}
			_iter_next_1a626a999:;
			++it;
			goto _iter_begin_1a626a999;
		}
		_iter_end_1a626a999:;
	};
	return false;;
}



inline jule::Bool _1abd466e5_floatAssignable(jule::Str _4120_kind, jule::Ptr<_1abd5dc4b_Data>* _4132_d) {
	jule::Str _429_value = _1dde8e4cb_FmtFloat(static_cast<jule::F64>(_1ddeb7603_AsF64((*(_4132_d)).get()._field_Constant.ptr())), 'g', -1LL, 64LL);;
	return _1ddea865a_CheckBitFloat(_429_value, static_cast<jule::I64>(_1ddea724c_BitsizeOf(_4120_kind)));;
}



inline jule::Bool _1abd46a36_sigAssignable(jule::Str _4618_kind, jule::Ptr<_1abd5dc4b_Data>* _4630_d) {
	jule::F64 _479_min = _1ddead7e7_Min(_4618_kind);;
	jule::F64 _489_max = _1ddeada8e_Max(_4618_kind);;
	{
		
		if (_1ddeb925e_IsF64((*(_4630_d)).get()._field_Constant.ptr())) {
			_case_begin_1a6271906:;
			{
				jule::F64 _5113_x = _1ddeb6db6_ReadF64((*(_4630_d)).get()._field_Constant.ptr());;
				jule::F64 _5214_i = 0;;
				jule::F64 _5217_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1dde653a3_Modf(_5113_x);
					_5214_i = __jule_assign_result.__jule_result_arg0;
					_5217_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_5217_frac != 0LL)) {
					return false;;
				};
				return ((_5214_i >= _479_min) && (_5214_i <= _489_max));;
			}
		}
		else if (_1ddeb8a22_IsU64((*(_4630_d)).get()._field_Constant.ptr())) {
			_case_begin_1a6271ede:;
			{
				jule::F64 _5813_x = _1ddeb7603_AsF64((*(_4630_d)).get()._field_Constant.ptr());;
				if ((_5813_x <= _489_max)) {
					return true;;
				};
			}
		}
		else if (_1ddeb87ad_IsI64((*(_4630_d)).get()._field_Constant.ptr())) {
			_case_begin_1a6272066:;
			{
				jule::F64 _6313_x = _1ddeb7603_AsF64((*(_4630_d)).get()._field_Constant.ptr());;
				return ((_479_min <= _6313_x) && (_6313_x <= _489_max));;
			}
		}
		_match_end_1a6271dbd:;
	};
	return false;;
}



inline jule::Bool _1abd46dbb_unsigAssignable(jule::Str _6920_kind, jule::Ptr<_1abd5dc4b_Data>* _6932_d) {
	jule::F64 _709_max = _1ddeada8e_Max(_6920_kind);;
	if (((*(_6932_d)).get()._field_IsRune && _6920_kind.equal("u8", 2))) {
		return _1abd2d325_IsAscii(static_cast<jule::I32>(static_cast<jule::I32>(_1ddeb6415_ReadI64((*(_6932_d)).get()._field_Constant.ptr()))));;
	};
	{
		
		if (_1ddeb925e_IsF64((*(_6932_d)).get()._field_Constant.ptr())) {
			_case_begin_1a62762e0:;
			{
				jule::F64 _7713_x = _1ddeb6db6_ReadF64((*(_6932_d)).get()._field_Constant.ptr());;
				if ((_7713_x < 0LL)) {
					return false;;
				};
				jule::F64 _8114_i = 0;;
				jule::F64 _8117_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1dde653a3_Modf(_7713_x);
					_8114_i = __jule_assign_result.__jule_result_arg0;
					_8117_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_8117_frac != 0LL)) {
					return false;;
				};
				return (_8114_i <= _709_max);;
			}
		}
		else if (_1ddeb8a22_IsU64((*(_6932_d)).get()._field_Constant.ptr())) {
			_case_begin_1a6276950:;
			{
				jule::F64 _8713_x = _1ddeb7603_AsF64((*(_6932_d)).get()._field_Constant.ptr());;
				if ((_8713_x <= _709_max)) {
					return true;;
				};
			}
		}
		else if (_1ddeb87ad_IsI64((*(_6932_d)).get()._field_Constant.ptr())) {
			_case_begin_1a62769b6:;
			{
				jule::F64 _9213_x = _1ddeb7603_AsF64((*(_6932_d)).get()._field_Constant.ptr());;
				return ((0LL <= _9213_x) && (_9213_x <= _709_max));;
			}
		}
		_match_end_1a6276389:;
	};
	return false;;
}



inline jule::Bool _1abd4720c_intAssignable(jule::Str _9818_kind, jule::Ptr<_1abd5dc4b_Data>* _9830_d) {
	{
		
		if (_1ddeb39b7_IsSigInt(_9818_kind)) {
			_case_begin_1a627a7bc:;
			{
				return _1abd46a36_sigAssignable(_9818_kind, _9830_d);;
			}
		}
		else if (_1ddeb3ca3_IsUnsigInt(_9818_kind)) {
			_case_begin_1a627a833:;
			{
				return _1abd46dbb_unsigAssignable(_9818_kind, _9830_d);;
			}
		}
		else {
			_case_begin_1a62770c1:;
			{
				return false;;
			}
		}
		_match_end_1a627a503:;
	};
}



inline jule::Ptr<_1acca4ba2_TypeKind> _1abd58130_lenKind(void) {
	return _1acd69c45_primInt;;
}



inline jule::Bool _1abd583c7_isGoodValueToInfer(jule::Ptr<_1abd5dc4b_Data>* _138224_d) {
	return (!(_1abd5e0e2_IsNil((*(_138224_d)).ptr())));;
}



inline jule::Ptr<_1acaa47b5_Directive> _1acc9db68_findDirective(jule::Slice<jule::Ptr<_1acaa47b5_Directive>>* _422623_directives, jule::Str _422654_d) {
	{
		auto expr = _422623_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6383c38:;
		if (it != expr_end) {
			jule::Ptr<_1acaa47b5_Directive> _422717_dr = *it;
			{
				if ((_422717_dr.get()._field_Tag.get()._field_Kind == _422654_d)) {
					return _422717_dr;;
				};
			}
			_iter_next_1a6383c38:;
			++it;
			goto _iter_begin_1a6383c38;
		}
		_iter_end_1a6383c38:;
	};
	return nullptr;;
}



inline jule::Any _1acc9deed_findBuiltinsImport(jule::Str _423523_ident, jule::Ptr<_1abcdb39e_ImportInfo> _423535_imp) {
	return _1acd6d1cc_findPackageBuiltinDef(_423535_imp.get()._field_LinkPath, _423523_ident);;
}



inline void _1acc9e20c_fitBitsize(jule::Ptr<_1abd5dc4b_Data>* _424220_d) {
	jule::Ptr<_1accac407_Prim> _424313_prim = _1acca73be_Prim((*(_424220_d)).get()._field_Kind.ptr());;
	jule::I64 _42449_z = _1ddea724c_BitsizeOf(_1accac737_Str(_424313_prim.ptr()));;
	if ((_42449_z == 64LLU)) {
		return;;
	};
	jule::I64 _424913_k = 0LL;;
	{
		
		if (_1ddeb87ad_IsI64((*(_424220_d)).get()._field_Constant.ptr())) {
			_case_begin_1a6386697:;
			{
				_424913_k=static_cast<jule::I64>(_1ddea8b99_BitsizeOfInt(static_cast<jule::I64>(_1ddeb6415_ReadI64((*(_424220_d)).get()._field_Constant.ptr()))));
				if ((_424913_k > _42449_z)) {
					(*(_424220_d)).get()._field_Constant.get()._field_Kind=_1ddea756b_IntFromBits(_424913_k);
					(*(_424220_d)).get()._field_Kind=_1acd6c033_findBuiltinTypeAlias((*(_424220_d)).get()._field_Constant.get()._field_Kind).get()._field_Kind.get()._field_Kind;
				};
			}
		}
		else if (_1ddeb8a22_IsU64((*(_424220_d)).get()._field_Constant.ptr())) {
			_case_begin_1a638671e:;
			{
				_424913_k=static_cast<jule::I64>(_1ddea8e41_BitsizeOfUint(static_cast<jule::U64>(_1ddeb6679_ReadU64((*(_424220_d)).get()._field_Constant.ptr()))));
				if ((_424913_k > _42449_z)) {
					(*(_424220_d)).get()._field_Constant.get()._field_Kind=_1ddea7813_UintFromBits(_424913_k);
					(*(_424220_d)).get()._field_Kind=_1acd6c033_findBuiltinTypeAlias((*(_424220_d)).get()._field_Constant.get()._field_Kind).get()._field_Kind.get()._field_Kind;
				};
			}
		}
		else if (_1ddeb925e_IsF64((*(_424220_d)).get()._field_Constant.ptr())) {
			_case_begin_1a6386796:;
			{
				_424913_k=static_cast<jule::I64>(_1ddea8902_BitsizeOfFloat(static_cast<jule::F64>(_1ddeb6db6_ReadF64((*(_424220_d)).get()._field_Constant.ptr()))));
				if ((_424913_k > _42449_z)) {
					(*(_424220_d)).get()._field_Constant.get()._field_Kind=_1ddea7aaa_FloatFromBits(_424913_k);
					(*(_424220_d)).get()._field_Kind=_1acd6c033_findBuiltinTypeAlias((*(_424220_d)).get()._field_Constant.get()._field_Kind).get()._field_Kind.get()._field_Kind;
				};
			}
		}
		_match_end_1a63865cb:;
	};
}



inline void _1acc9e509_makeStructLitAlloc(jule::Ptr<_1abd5dc4b_Data>* _427228_d, jule::Ptr<_1acb0ed5e_StructLitExprModel>* _427243_lit) {
	(*(_427228_d)).get()._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(jule::new_ptr<_1accb0b58_Sptr>(_1accb0b58_Sptr{._field_Elem=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>((*(_427243_lit)).get()._field_Strct, 0)})}), 21)});
	(*(_427228_d)).get()._field_Model=jule::Any(jule::new_ptr<_1acb1016c_AllocStructLitExprModel>(_1acb1016c_AllocStructLitExprModel{._field_Lit=(*(_427243_lit))}), &__jule_any_type115);
}



inline jule::Ptr<_1abd1497c_Var> _1acc9e84a_buildErrorVar(jule::Ptr<_1abcbc935_Scope>* _428323_s, jule::Ptr<_1acae036c_FnCallExpr>* _428339_fc) {
	return jule::new_ptr<_1abd1497c_Var>(_1abd1497c_Var{._field_Scope=(*(_428323_s)), ._field_Token=(*(_428339_fc)).get()._field_Token, ._field_Ident=jule::Str("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=_1acd6c033_findBuiltinTypeAlias(jule::Str("any", 3)).get()._field_Kind, ._field_Value=jule::new_ptr<_1abd5ecc4_Value>(_1abd5ecc4_Value{._field_Data=jule::new_ptr<_1abd5dc4b_Data>()}), });;
}



inline jule::Any _1acc9eb8b_findBuiltinsSema(jule::Str _429821_ident, jule::Ptr<_1abce4671_Sema> _429837_s) {
	{
		auto expr = &(_429837_s.get()._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a638d292:;
		if (it != expr_end) {
			jule::Ptr<_1abcdb39e_ImportInfo> _429917_imp = *it;
			{
				if ((_429917_imp.get()._field_ImportAll || _1abcdd956_existIdent(_429917_imp.ptr(), _429821_ident))) {
					jule::Any _430121_def = _1acc9deed_findBuiltinsImport(_429821_ident, _429917_imp);;
					if ((_430121_def != nullptr)) {
						return _430121_def;;
					};
				};
			}
			_iter_next_1a638d292:;
			++it;
			goto _iter_begin_1a638d292;
		}
		_iter_end_1a638d292:;
	};
	jule::Str _430913_ppath = _2097d70a0_Dir(_429837_s.get()._field_file.get()._field_File.ptr());;
	if (_20939cdb9_HasPrefix(_430913_ppath, _2094d2c79_PathStdlib)) {
		(_430913_ppath).mut_slice(_2094d2c79_PathStdlib.len());;
		_430913_ppath=(jule::Str("std", 3) + _2093a3dae_Replace(_430913_ppath, jule::Str("\\", 1), jule::Str("::", 2), -1LL));
		return _1acd6d1cc_findPackageBuiltinDef(_430913_ppath, _429821_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1acc9ee33_isOkForShifting(jule::Ptr<_1abd5dc4b_Data>* _432325_d) {
	if (_1abd5e5ba_IsConst((*(_432325_d)).ptr())) {
		{
			
			if (_1ddeb87ad_IsI64((*(_432325_d)).get()._field_Constant.ptr())) {
				_case_begin_1a6391361:;
				{
					return (_1ddeb6415_ReadI64((*(_432325_d)).get()._field_Constant.ptr()) >= 0LL);;
				}
			}
			else if (_1ddeb8a22_IsU64((*(_432325_d)).get()._field_Constant.ptr())) {
				_case_begin_1a63913c7:;
				{
					return true;;
				}
			}
			else if (_1ddeb925e_IsF64((*(_432325_d)).get()._field_Constant.ptr())) {
				_case_begin_1a639143d:;
				{
					return (_1ddeb6db6_ReadF64((*(_432325_d)).get()._field_Constant.ptr()) >= 0LL);;
				}
			}
			else {
				_case_begin_1a63912ea:;
				{
					return false;;
				}
			}
			_match_end_1a639022d:;
		};
	};
	jule::Ptr<_1accac407_Prim> _43369_prim = _1acca73be_Prim((*(_432325_d)).get()._field_Kind.ptr());;
	return ((_43369_prim != nullptr) && _1ddeb404a_IsInt(_1accac737_Str(_43369_prim.ptr())));;
}



inline jule::Bool _1acca02da_isInstancedStruct(jule::Ptr<_1acb09d37_StructIns> _434022_s) {
	return (_434022_s.get()._field_Decl.get()._field_Generics.len() == _434022_s.get()._field_Generics.len());;
}



inline jule::Bool _1acca064d_isPtrArithmeticCompatible(jule::Ptr<_1abd5dc4b_Data>* _434435_l, jule::Ptr<_1abd5dc4b_Data>* _434450_r) {
	jule::Ptr<_1accb41bc_Ptr> _43459_ptr = _1acca7897_Ptr((*(_434450_r)).get()._field_Kind.ptr());;
	if ((_43459_ptr != nullptr)) {
		return _1acca5367_Equal(_1acca7897_Ptr((*(_434435_l)).get()._field_Kind.ptr()).get()._field_Elem, _43459_ptr.get()._field_Elem);;
	};
	if (_1abd5e5ba_IsConst((*(_434450_r)).ptr())) {
		return _1abd4720c_intAssignable(jule::Str("int", 3), _434450_r);;
	};
	_1abd476b3_typeCompatibilityChecker _435213_tcc = _1abd476b3_typeCompatibilityChecker{._field_dest=_1acd69c45_primInt, ._field_src=(*(_434450_r)).get()._field_Kind, };;
	return _1abd48c58_check(&_435213_tcc);;
}



inline void _1acca0890_applyCastKindModel(jule::Ptr<_1abd5dc4b_Data>* _435928_d, jule::Ptr<_1acca4ba2_TypeKind>* _435943_t) {
	(*(_435928_d)).get()._field_Model=jule::Any(jule::new_ptr<_1acb106bc_CastingExprModel>(_1acb106bc_CastingExprModel{._field_Expr=(*(_435928_d)).get()._field_Model, ._field_Kind=(*(_435943_t)), ._field_ExprKind=(*(_435928_d)).get()._field_Kind}), &__jule_any_type98);
}



inline void _1acca0b48_applyCastKind(jule::Ptr<_1abd5dc4b_Data>* _436723_d, jule::Ptr<_1acca4ba2_TypeKind>* _436738_t) {
	_1acca0890_applyCastKindModel(_436723_d, _436738_t);
	(*(_436723_d)).get()._field_Kind=(*(_436738_t));
}



inline jule::Ptr<_1abd5dc4b_Data> _1acca0d46_buildVoidData(void) {
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd68a13_primVoid, });;
}



inline jule::Str _1acca1110_checkDataForIntegerIndexing(jule::Ptr<_1abd5dc4b_Data>* _437837_d) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_437837_d)) == nullptr)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	{
		
		if ((_1acca73be_Prim((*(_437837_d)).get()._field_Kind.ptr()) == nullptr)) {
			_case_begin_1a63980b0:;
			{
				__jule_func_result = jule::Str("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if ((!(_1ddeb404a_IsInt(_1accac737_Str(_1acca73be_Prim((*(_437837_d)).get()._field_Kind.ptr()).ptr()))))) {
			_case_begin_1a6398126:;
			{
				__jule_func_result = jule::Str("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if (_1abd5e5ba_IsConst((*(_437837_d)).ptr())) {
			_case_begin_1a639818c:;
			{
				if ((_1ddeb7603_AsF64((*(_437837_d)).get()._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = jule::Str("overflow the limit of data-type", 31);
					return __jule_func_result;;
				};
			}
		}
		else if ((_1acca73be_Prim((*(_437837_d)).get()._field_Kind.ptr()) == nullptr) || _1abd5e5ba_IsConst((*(_437837_d)).ptr()) || (_1ddea6ea5_RealKindOf(_1accac737_Str(_1acca73be_Prim((*(_437837_d)).get()._field_Kind.ptr()).ptr())) != _1ddea6ea5_RealKindOf(jule::Str("int", 3)))) {
			_case_begin_1a6398214:;
			{
				_1acca0b48_applyCastKind(_437837_d, &(_1acd69c45_primInt));
			}
		}
		_match_end_1a6397bc5:;
	};
	__jule_func_result = jule::Str();
	return __jule_func_result;;
}



inline void _1acca13c9_applyCastModelByEnum(jule::Ptr<_1abd5dc4b_Data>* _440330_d, jule::Ptr<_1acb36b88_Enum> _440344_e) {
	if ((_440344_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1accac407_Prim> _44079_p = _1acca73be_Prim(_440344_e.get()._field_Kind.get()._field_Kind.ptr());;
	if (_1accb0608_IsStr(_44079_p.ptr())) {
		return;;
	};
	_1acca0890_applyCastKindModel(_440330_d, &(_440344_e.get()._field_Kind.get()._field_Kind));
}



inline void _1acca1682_castConstByType(jule::Str* _441421_t, jule::Ptr<_1abd5dc4b_Data>* _441434_d) {
	{
		
		if (_1ddeb39b7_IsSigInt((*(_441421_t)))) {
			_case_begin_1a639c746:;
			{
				{
					auto _match_expr{ _1ddea724c_BitsizeOf(_1ddea6ea5_RealKindOf((*(_441421_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1a639d390:;
						{
							_1ddeb7878_SetI64((*(_441434_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1ddeb712a_AsI64((*(_441434_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1a639d417:;
						{
							_1ddeb7878_SetI64((*(_441434_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_1ddeb712a_AsI64((*(_441434_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1a639d47d:;
						{
							_1ddeb7878_SetI64((*(_441434_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_1ddeb712a_AsI64((*(_441434_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1a639d4e4:;
						{
							_1ddeb7878_SetI64((*(_441434_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_1ddeb712a_AsI64((*(_441434_d)).get()._field_Constant.ptr())))));
						}
					}
					_match_end_1a639c9cc:;
				};
			}
		}
		else if (_1ddeb3ca3_IsUnsigInt((*(_441421_t)))) {
			_case_begin_1a639c7bd:;
			{
				{
					auto _match_expr{ _1ddea724c_BitsizeOf(_1ddea6ea5_RealKindOf((*(_441421_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1a63a11ea:;
						{
							_1ddeb7aed_SetU64((*(_441434_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1ddeb738e_AsU64((*(_441434_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1a63a1283:;
						{
							_1ddeb7aed_SetU64((*(_441434_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_1ddeb738e_AsU64((*(_441434_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1a63a12e9:;
						{
							_1ddeb7aed_SetU64((*(_441434_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_1ddeb738e_AsU64((*(_441434_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1a63a1360:;
						{
							_1ddeb7aed_SetU64((*(_441434_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_1ddeb738e_AsU64((*(_441434_d)).get()._field_Constant.ptr())))));
						}
					}
					_match_end_1a639cbb9:;
				};
			}
		}
		else if (_1ddeb4369_IsFloat((*(_441421_t)))) {
			_case_begin_1a639c845:;
			{
				{
					auto _match_expr{ _1ddea724c_BitsizeOf(_1ddea6ea5_RealKindOf((*(_441421_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1a63a4033:;
						{
							_1ddeb836d_SetF64((*(_441434_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(_1ddeb7603_AsF64((*(_441434_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1a63a40dd:;
						{
							_1ddeb836d_SetF64((*(_441434_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_1ddeb7603_AsF64((*(_441434_d)).get()._field_Constant.ptr())))));
						}
					}
					_match_end_1a639ccda:;
				};
			}
		}
		_match_end_1a639c625:;
	};
}



inline void _1acca1b8d_updateModelToGenericIns(jule::Any* _444833_m, jule::Ptr<_1acb24d85_FnIns>* _444852_f) {
	{
		auto &_match_expr{ (*(_444833_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a63a4341:;
			{
				(*(_444833_m))=jule::Any((*(_444852_f)), &__jule_any_type7);
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1a63a43a7:;
			{
				(*(_444833_m)).cast_ptr<_1acb138e0_StructSubIdentExprModel>(&__jule_any_type71).get()._field_Method=(*(_444852_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1a63a441d:;
			{
				(*(_444833_m)).cast_ptr<_1acb13c86_StructStaticIdentExprModel>(&__jule_any_type101).get()._field_Method=(*(_444852_f));
			}
		}
		_match_end_1a63a353d:;
	};
}



inline jule::Bool _1acca1dd0_pushSubIdentFromExpr(jule::Any _445929_expr, jule::Ptr<_1acad7b7d_SubIdentTypeDecl>* _445950_t) {
	{
		auto &_match_expr{ _445929_expr };
		
		if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1a63a5b5b:;
			{
				jule::Ptr<_1acadd04b_IdentExpr> _446217_e = _445929_expr.cast_ptr<_1acadd04b_IdentExpr>(&__jule_any_type85);;
				{ jule::Slice<jule::Ptr<_1acad7892_IdentTypeDecl>> &__jule_push_dest = (*(_445950_t)).get()._field_Idents; __jule_push_dest.push(jule::new_ptr<_1acad7892_IdentTypeDecl>(_1acad7892_IdentTypeDecl{._field_Token=_446217_e.get()._field_Token, ._field_Ident=_446217_e.get()._field_Ident, })); };
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1a63a7179:;
			{
				jule::Ptr<_1acade7de_SubIdentExpr> _446817_e = _445929_expr.cast_ptr<_1acade7de_SubIdentExpr>(&__jule_any_type91);;
				if ((!(_1acca1dd0_pushSubIdentFromExpr(_446817_e.get()._field_Expr.get()._field_Kind, _445950_t)))) {
					return false;;
				};
				{ jule::Slice<jule::Ptr<_1acad7892_IdentTypeDecl>> &__jule_push_dest = (*(_445950_t)).get()._field_Idents; __jule_push_dest.push(jule::new_ptr<_1acad7892_IdentTypeDecl>(_1acad7892_IdentTypeDecl{._field_Token=_446817_e.get()._field_Ident, ._field_Ident=_446817_e.get()._field_Ident.get()._field_Kind, })); };
			}
		}
		else {
			_case_begin_1a63a6b4b:;
			{
				return false;;
			}
		}
		_match_end_1a63a6ae6:;
	};
	return true;;
}



inline jule::Str _1acca2177_constoa(jule::Ptr<_1ddeb4b1c_Const>* _448213_c) {
	{
		
		if (_1ddeb87ad_IsI64((*(_448213_c)).ptr())) {
			_case_begin_1a63aa017:;
			{
				return _1ddea4c0b_FmtInt(static_cast<jule::I64>(_1ddeb6415_ReadI64((*(_448213_c)).ptr())), 10LL);;
			}
		}
		else if (_1ddeb8a22_IsU64((*(_448213_c)).ptr())) {
			_case_begin_1a63a93bd:;
			{
				return _1ddea4876_FmtUint(static_cast<jule::U64>(_1ddeb6679_ReadU64((*(_448213_c)).ptr())), 10LL);;
			}
		}
		else {
			_case_begin_1a63a74dc:;
			{
				return jule::Str();;
			}
		}
		_match_end_1a63a71e0:;
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acca24b8_evalEnumStatic(jule::Ptr<_1acb36b88_Enum>* _449324_enm, jule::Ptr<_1acb36193_EnumItem>* _449341_item) {
	jule::Ptr<_1abd5dc4b_Data> _449413_d = jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>((*(_449324_enm)), 3)}), });;
	if (((*(_449341_item)) != nullptr)) {
		_449413_d.get()._field_Constant=jule::new_ptr<_1ddeb4b1c_Const>((*((*(_449341_item)).get()._field_Value.get()._field_Data.get()._field_Constant)));
		_449413_d.get()._field_Model=jule::Any(_449413_d.get()._field_Constant, &__jule_any_type19);
		_1acca13c9_applyCastModelByEnum(&(_449413_d), (*(_449324_enm)));
	};
	return _449413_d;;
}



inline jule::Bool _1accbe062_kindUsesGenerics(jule::Ptr<_1acca4ba2_TypeKind>* _173326_k, jule::Slice<jule::Ptr<_1acae4272_GenericDecl>>* _173341_generics) {
	{
		auto expr = _173341_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a66b84bd:;
		if (it != expr_end) {
			jule::Ptr<_1acae4272_GenericDecl> *_173412_g = it;
			{
				if (static__1accbdb66_exist(&((*(_173412_g)).get()._field_Ident), _173326_k)) {
					return true;;
				};
			}
			_iter_next_1a66b84bd:;
			++it;
			goto _iter_begin_1a66b84bd;
		}
		_iter_end_1a66b84bd:;
	};
	return false;;
}



inline jule::Bool _1accbe3e7_hasDirective(jule::Slice<jule::Ptr<_1acaa47b5_Directive>>* _174322_directives, jule::Str _174353_tag) {
	{
		auto expr = _174322_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a66b89da:;
		if (it != expr_end) {
			jule::Ptr<_1acaa47b5_Directive> _174417_dr = *it;
			{
				if ((_174417_dr.get()._field_Tag.get()._field_Kind == _174353_tag)) {
					return true;;
				};
			}
			_iter_next_1a66b89da:;
			++it;
			goto _iter_begin_1a66b89da;
		}
		_iter_end_1a66b89da:;
	};
	return false;;
}



inline jule::Bool _1accbe68e_canGetPtr(jule::Ptr<_1abd5dc4b_Data>* _175219_d) {
	if (((!((*(_175219_d)).get()._field_Lvalue)) || _1abd5e5ba_IsConst((*(_175219_d)).ptr()))) {
		return false;;
	};
	{
		
		if (((_1acca85ac_Fn((*(_175219_d)).get()._field_Kind.ptr()) != nullptr) || (_1acca7b0b_Enum((*(_175219_d)).get()._field_Kind.ptr()) != nullptr))) {
			_case_begin_1a66ba822:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1a66ba7ab:;
			{
				return true;;
			}
		}
		_match_end_1a66b9777:;
	};
}



inline jule::Bool _1accbe9ad_isValidForSptrType(jule::Ptr<_1acca4ba2_TypeKind>* _176528_t) {
	jule::Ptr<_1acb09d37_StructIns> _176613_s = _1acca8821_Struct((*(_176528_t)).ptr());;
	if ((((_176613_s != nullptr) && (_176613_s.get()._field_Decl != nullptr)) && _176613_s.get()._field_Decl.get()._field_Binded)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _1accbec55_isValidForRef(jule::Ptr<_1acca4ba2_TypeKind>* _177423_t) {
	return (_1acca85ac_Fn((*(_177423_t)).ptr()) == nullptr);;
}



inline jule::Bool _1accc001e_isBuiltinStrConvertable(jule::Ptr<_1acca4ba2_TypeKind>* _177733_t) {
	return ((((!(_1acca5e6c_Void((*(_177733_t)).ptr()))) && (_1acca85ac_Fn((*(_177733_t)).ptr()) == nullptr)) && (_1acca905d_Tup((*(_177733_t)).ptr()) == nullptr)) && (!(_1acca92c2_comptime((*(_177733_t)).ptr()))));;
}



inline jule::Str _1accc0294_buildLinkPathByTokens(jule::Slice<jule::Ptr<_2097d15d8_Token>>* _178127_tokens) {
	jule::Str _178213_s = (*(_178127_tokens))[0LL].get()._field_Kind;;
	{
		auto expr = (*(_178127_tokens)).slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a66be8c0:;
		if (it != expr_end) {
			jule::Ptr<_2097d15d8_Token> *_178312_token = it;
			{
				(_178213_s).append("::", 2);
				_178213_s+=(*(_178312_token)).get()._field_Kind;
			}
			_iter_next_1a66be8c0:;
			++it;
			goto _iter_begin_1a66be8c0;
		}
		_iter_end_1a66be8c0:;
	};
	return _178213_s;;
}



inline jule::Ptr<_1accac407_Prim> _1accc064b_buildPrimType(jule::Str _179018_kind) {
	return jule::new_ptr<_1accac407_Prim>(_1accac407_Prim{._field_Kind=_179018_kind});;
}



inline jule::Ptr<_1acb07021_Struct> _1accc08e3_getStructFromKind(jule::Ptr<_1acca4ba2_TypeKind> _179626_k) {
	{
		
		if ((_179626_k == nullptr)) {
			_case_begin_1a66c098c:;
			{
				return nullptr;;
			}
		}
		else if ((_1acca8821_Struct(_179626_k.ptr()) != nullptr)) {
			_case_begin_1a66c0a03:;
			{
				return _1acca8821_Struct(_179626_k.ptr()).get()._field_Decl;;
			}
		}
		else if ((_1acca7633_Sptr(_179626_k.ptr()) != nullptr)) {
			_case_begin_1a66c0a69:;
			{
				return _1accc08e3_getStructFromKind(_1acca7633_Sptr(_179626_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_1acca8348_Slc(_179626_k.ptr()) != nullptr)) {
			_case_begin_1a66c0ad0:;
			{
				return _1accc08e3_getStructFromKind(_1acca8348_Slc(_179626_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_1acca80d4_Arr(_179626_k.ptr()) != nullptr)) {
			_case_begin_1a66c0d55:;
			{
				return _1accc08e3_getStructFromKind(_1acca80d4_Arr(_179626_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_1acca7897_Ptr(_179626_k.ptr()) != nullptr)) {
			_case_begin_1a66c0dbb:;
			{
				return nullptr;;
			}
		}
		else {
			_case_begin_1a66c00da:;
			{
				return nullptr;;
			}
		}
		_match_end_1a66c001e:;
	};
}



inline void _1accc0b9b_applyImplicitCast(jule::Ptr<_1acca4ba2_TypeKind>* _181827_dest, jule::Ptr<_1abd5dc4b_Data>* _181849_d) {
	if (_1acca5c08_IsNil((*(_181849_d)).get()._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1accac407_Prim> _18229_destPrim = _1acca73be_Prim((*(_181827_dest)).ptr());;
	jule::Ptr<_1accac407_Prim> _18239_prim = _1acca73be_Prim((*(_181849_d)).get()._field_Kind.ptr());;
	if ((_18229_destPrim != nullptr)) {
		if (_1accb086c_IsAny(_18229_destPrim.ptr())) {
			if (((_18239_prim == nullptr) || (!(_1accb086c_IsAny(_18239_prim.ptr()))))) {
				_1acca0b48_applyCastKind(_181849_d, _181827_dest);
			};
			return;;
		};
		if (((((((!(_1acca5994_Binded((*(_181849_d)).get()._field_Kind.ptr()))) && (!((*(_181849_d)).get()._field_Kind.get()._field_Variadic))) && (!((*(_181849_d)).get()._field_Lvalue))) && (!(_1abd5e5ba_IsConst((*(_181849_d)).ptr())))) && (_18239_prim != nullptr)) && _1ddeb4611_IsNum(_18239_prim.get()._field_Kind))) {
			_1acca0b48_applyCastKind(_181849_d, _181827_dest);
		};
		return;;
	};
	jule::Ptr<_1acb34405_Trait> _18429_dt = _1acca8a85_Trait((*(_181827_dest)).ptr());;
	if ((_18429_dt != nullptr)) {
		jule::Ptr<_1acb34405_Trait> _184413_bt = _1acca8a85_Trait((*(_181849_d)).get()._field_Kind.ptr());;
		if (((_184413_bt == nullptr) || (_184413_bt != _18429_dt))) {
			_1acca0890_applyCastKindModel(_181849_d, _181827_dest);
			return;;
		};
	};
	if (((_1acca7d70_TypeEnum((*(_181827_dest)).ptr()) != nullptr) && (_1acca7d70_TypeEnum((*(_181849_d)).get()._field_Kind.ptr()) == nullptr))) {
		_1acca0890_applyCastKindModel(_181849_d, _181827_dest);
		return;;
	};
}



inline jule::Bool _1accc0e43_validTypeForXof(jule::Ptr<_1acca4ba2_TypeKind>* _185725_t) {
	return ((!(_1acca5e6c_Void((*(_185725_t)).ptr()))) && (_1acca85ac_Fn((*(_185725_t)).ptr()) == nullptr));;
}



inline __jule_tuple_x_1abd59241_SymbolTable__jule_tuple_s_20943da3c_Log _1accc3be3_buildSymbols(jule::Ptr<_1acaa352d_Ast>* _1622_ast, jule::Trait<_1abcd86ed_Importer>* _1638_importer, jule::Ptr<_1acb2d861_symbolBuilder> _1662_owner) {
	__jule_tuple_x_1abd59241_SymbolTable__jule_tuple_s_20943da3c_Log __jule_func_result;
	jule::Ptr<_1acb2d861_symbolBuilder> _1713_sb = jule::new_ptr<_1acb2d861_symbolBuilder>(_1acb2d861_symbolBuilder{._field_owner=_1662_owner, ._field_importer=(*(_1638_importer)), ._field_ast=(*(_1622_ast)), });;
	_1acb337bc_build(_1713_sb);
	if ((_1713_sb.get()._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = _1713_sb.get()._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _1713_sb.get()._field_errors;
	return __jule_func_result;;
}



inline __jule_tuple_x_1abcdded9_Package__jule_tuple_s_20943da3c_Log _1accc4122_analyzePackage(jule::Slice<jule::Ptr<_1acaa352d_Ast>>* _3024_files, jule::Trait<_1abcd86ed_Importer>* _3044_importer, jule::I64* _3065_flags) {
	__jule_tuple_x_1abcdded9_Package__jule_tuple_s_20943da3c_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1abd59241_SymbolTable>> _3213_tables = jule::Slice<jule::Ptr<_1abd59241_SymbolTable>>::alloc(0LL, (*(_3024_files)).len());;
	{
		auto expr = _3024_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a67c6cb3:;
		if (it != expr_end) {
			jule::Ptr<_1acaa352d_Ast> _3317_f = *it;
			{
				jule::Ptr<_1abd59241_SymbolTable> _3418_table;;
				jule::Slice<_20943da3c_Log> _3429_errors;;
				({
					__jule_tuple_x_1abd59241_SymbolTable__jule_tuple_s_20943da3c_Log __jule_assign_result = _1accc3be3_buildSymbols(&(_3317_f), _3044_importer, nullptr);
					_3418_table = __jule_assign_result.__jule_result_arg0;
					_3429_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_3429_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _3429_errors;
					return __jule_func_result;;
				};
				{ jule::Slice<jule::Ptr<_1abd59241_SymbolTable>> &__jule_push_dest = _3213_tables; __jule_push_dest.push(_3418_table); };
			}
			_iter_next_1a67c6cb3:;
			++it;
			goto _iter_begin_1a67c6cb3;
		}
		_iter_end_1a67c6cb3:;
	};
	jule::Ptr<_1abce4671_Sema> _4113_sema = jule::new_ptr<_1abce4671_Sema>(_1abce4671_Sema{._field_flags=(*(_3065_flags)), ._field_meta=jule::new_ptr<_1abce3b59_commonSemaMeta>()});;
	_1abd1132a_check(_4113_sema, &(_3213_tables));
	if ((_4113_sema.get()._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _4113_sema.get()._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1abcdded9_Package> _5013_pkg = jule::new_ptr<_1abcdded9_Package>(_1abcdded9_Package{._field_Files=_4113_sema.get()._field_files});;
	__jule_func_result.__jule_result_arg0 = _5013_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1abcdded9_Package__jule_tuple_s_20943da3c_Log _1accc450c_AnalyzePackage(jule::Slice<jule::Ptr<_1acaa352d_Ast>> _7423_files, jule::Trait<_1abcd86ed_Importer> _7442_importer, jule::I64 _7462_flags) {
	__jule_tuple_x_1abcdded9_Package__jule_tuple_s_20943da3c_Log __jule_func_result;
	if ((_7423_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1abcdded9_Package> _7814_package;;
	jule::Slice<_20943da3c_Log> _7827_logs;;
	({
		__jule_tuple_x_1abcdded9_Package__jule_tuple_s_20943da3c_Log __jule_assign_result = _1accc4122_analyzePackage(&(_7423_files), &(_7442_importer), &(_7462_flags));
		_7814_package = __jule_assign_result.__jule_result_arg0;
		_7827_logs = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _7814_package;
	__jule_func_result.__jule_result_arg1 = _7827_logs;
	return __jule_func_result;;
}



inline jule::Ptr<_1acb24d85_FnIns> _1acd684d5_findBuiltinFn(jule::Str _2318_ident) {
	{
		auto &_match_expr{ _2318_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1a67d0daa:;
			{
				static jule::Ptr<_1acb24d85_FnIns> _2620_f = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>(_1acd6e5eb_builtinCallerOut), });;
				return _2620_f;;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1a67cec11:;
			{
				static jule::Ptr<_1acb24d85_FnIns> _2920_f = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>(_1acd6e9d6_builtinCallerOutln), });;
				return _2920_f;;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_1a67d0e76:;
			{
				static jule::Ptr<_1acb24d85_FnIns> _3220_f = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>(_1acd70102_builtinCallerNew), });;
				return _3220_f;;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_1a67d0edc:;
			{
				static jule::Ptr<_1acb24d85_FnIns> _3520_f = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>(_1acd704dc_builtinCallerPanic), });;
				return _3520_f;;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_1a67d09ae:;
			{
				static jule::Ptr<_1acb24d85_FnIns> _3820_f = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>(_1acd708c7_builtinCallerMake), });;
				return _3820_f;;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_1a67d0a36:;
			{
				static jule::Ptr<_1acb24d85_FnIns> _4120_f = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>(_1acd70cb2_builtinCallerAppend), });;
				return _4120_f;;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_1a67d0aad:;
			{
				static jule::Ptr<_1acb24d85_FnIns> _4420_f = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>(_1acd71ab5_builtinCallerCopy), });;
				return _4420_f;;
			}
		}
		else if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1a67d0b35:;
			{
				static jule::Ptr<_1acb24d85_FnIns> _4720_f = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>(_1acd73105_builtinCallerLen), });;
				return _4720_f;;
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1a67d1064:;
			{
				static jule::Ptr<_1acb24d85_FnIns> _5020_f = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>(_1acd73b72_builtinCallerCap), });;
				return _5020_f;;
			}
		}
		else if (_match_expr == jule::Str("delete", 6)) {
			_case_begin_1a67d10db:;
			{
				static jule::Ptr<_1acb24d85_FnIns> _5320_f = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>(_1acd74623_builtinCallerDelete), });;
				return _5320_f;;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_1a67d1163:;
			{
				static jule::Ptr<_1acb24d85_FnIns> _5620_f = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>(_1acd74a0d_builtinCallerClone), });;
				return _5620_f;;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_1a67d11da:;
			{
				static jule::Ptr<_1acb24d85_FnIns> _5920_f = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>(_1acd74de8_builtinCallerAssert), });;
				return _5920_f;;
			}
		}
		else {
			_case_begin_1a67d08b0:;
			{
				return nullptr;;
			}
		}
		_match_end_1a67d077d:;
	};
}



inline jule::Ptr<_1acca3e59_TypeAlias> _1acd68716_primTypeAlias(jule::Ptr<_1acca4ba2_TypeKind>* _6623_k) {
	return jule::new_ptr<_1acca3e59_TypeAlias>(_1acca3e59_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1accaba55_TypeSymbol>(_1accaba55_TypeSymbol{._field_Kind=(*(_6623_k))}), });;
}



inline jule::Ptr<_1acca3e59_TypeAlias> _1acd6c033_findBuiltinTypeAlias(jule::Str _9325_ident) {
	{
		auto &_match_expr{ _9325_ident };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1a67d70d1:;
			{
				static jule::Ptr<_1acca3e59_TypeAlias> _9620_t = _1acd68716_primTypeAlias(&(_1acd68d21_primAny));;
				return _9620_t;;
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1a67d8456:;
			{
				static jule::Ptr<_1acca3e59_TypeAlias> _9920_t = _1acd68716_primTypeAlias(&(_1acd690da_primStr));;
				return _9920_t;;
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1a67d84bc:;
			{
				static jule::Ptr<_1acca3e59_TypeAlias> _10220_t = _1acd68716_primTypeAlias(&(_1acd693e8_primBool));;
				return _10220_t;;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1a67d8005:;
			{
				static jule::Ptr<_1acca3e59_TypeAlias> _10520_t = _1acd68716_primTypeAlias(&(_1acd696b2_primUintptr));;
				return _10520_t;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1a67d806b:;
			{
				static jule::Ptr<_1acca3e59_TypeAlias> _10820_t = _1acd68716_primTypeAlias(&(_1acd6997b_primUint));;
				return _10820_t;;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1a67d80d2:;
			{
				static jule::Ptr<_1acca3e59_TypeAlias> _11120_t = _1acd68716_primTypeAlias(&(_1acd69c45_primInt));;
				return _11120_t;;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1a67d8148:;
			{
				static jule::Ptr<_1acca3e59_TypeAlias> _11420_t = _1acd68716_primTypeAlias(&(_1acd6a11e_primI8));;
				return _11420_t;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1a67d8533:;
			{
				static jule::Ptr<_1acca3e59_TypeAlias> _11720_t = _1acd68716_primTypeAlias(&(_1acd6a3d8_primI16));;
				return _11720_t;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1a67d8599:;
			{
				static jule::Ptr<_1acca3e59_TypeAlias> _12020_t = _1acd68716_primTypeAlias(&(_1acd6a96b_primI64));;
				return _12020_t;;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1a67d8610:;
			{
				static jule::Ptr<_1acca3e59_TypeAlias> _12320_t = _1acd68716_primTypeAlias(&(_1acd6aeee_primU16));;
				return _12320_t;;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1a67d8687:;
			{
				static jule::Ptr<_1acca3e59_TypeAlias> _12620_t = _1acd68716_primTypeAlias(&(_1acd6b2b8_primU32));;
				return _12620_t;;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1a67d870e:;
			{
				static jule::Ptr<_1acca3e59_TypeAlias> _12920_t = _1acd68716_primTypeAlias(&(_1acd6b582_primU64));;
				return _12920_t;;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1a67d8786:;
			{
				static jule::Ptr<_1acca3e59_TypeAlias> _13220_t = _1acd68716_primTypeAlias(&(_1acd6ba05_primF32));;
				return _13220_t;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1a67d880d:;
			{
				static jule::Ptr<_1acca3e59_TypeAlias> _13520_t = _1acd68716_primTypeAlias(&(_1acd6bcbe_primF64));;
				return _13520_t;;
			}
		}
		else if (_match_expr == jule::Str("byte", 4) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1a67d8885:;
			{
				static jule::Ptr<_1acca3e59_TypeAlias> _13820_t = _1acd68716_primTypeAlias(&(_1acd6ac35_primU8));;
				return _13820_t;;
			}
		}
		else if (_match_expr == jule::Str("rune", 4) || _match_expr == jule::Str("i32", 3)) {
			_case_begin_1a67d890c:;
			{
				static jule::Ptr<_1acca3e59_TypeAlias> _14120_t = _1acd68716_primTypeAlias(&(_1acd6a6a2_primI32));;
				return _14120_t;;
			}
		}
		else {
			_case_begin_1a67d7884:;
			{
				return nullptr;;
			}
		}
		_match_end_1a67d782e:;
	};
}



inline jule::Any _1acd6c242_findBuiltinDef(jule::Str _14819_ident) {
	jule::Ptr<_1acb24d85_FnIns> _14913_f = _1acd684d5_findBuiltinFn(_14819_ident);;
	if ((_14913_f != nullptr)) {
		return jule::Any(_14913_f, &__jule_any_type7);;
	};
	jule::Ptr<_1acca3e59_TypeAlias> _15313_ta = _1acd6c033_findBuiltinTypeAlias(_14819_ident);;
	if ((_15313_ta != nullptr)) {
		return jule::Any(_15313_ta, &__jule_any_type67);;
	};
	return nullptr;;
}



inline jule::Any _1acd6c4d9_findBuiltinDefStdDebug(jule::Str _16027_ident) {
	{
		auto &_match_expr{ _16027_ident };
		
		if (_match_expr == jule::Str("Out", 3)) {
			_case_begin_1a67e2b36:;
			{
				static jule::Ptr<_1acb24d85_FnIns> _16320_f = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>(_1acd78638_builtinCallerStdDebugOut), });;
				return jule::Any(_16320_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Outln", 5)) {
			_case_begin_1a67e2b9c:;
			{
				static jule::Ptr<_1acb24d85_FnIns> _16620_f = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>(_1acd78a23_builtinCallerStdDebugOutln), });;
				return jule::Any(_16620_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1a67e22a6:;
			{
				return nullptr;;
			}
		}
		_match_end_1a67e21b8:;
	};
}



inline jule::Any _1acd6c781_findBuiltinDefStdMem(jule::Str _17325_ident) {
	{
		auto &_match_expr{ _17325_ident };
		
		if (_match_expr == jule::Str("SizeOf", 6)) {
			_case_begin_1a67e4374:;
			{
				static jule::Ptr<_1acb24d85_FnIns> _17620_f = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>(_1acd77060_builtinCallerStdMemSizeOf), });;
				return jule::Any(_17620_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("AlignOf", 7)) {
			_case_begin_1a67e43da:;
			{
				static jule::Ptr<_1acb24d85_FnIns> _17920_f = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>(_1acd7747d_builtinCallerStdMemAlignOf), });;
				return jule::Any(_17920_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Free", 4)) {
			_case_begin_1a67e4198:;
			{
				static jule::Ptr<_1acb24d85_FnIns> _18220_f = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>(_1acd7789b_builtinCallerStdMemFree), });;
				return jule::Any(_18220_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1a67e3e78:;
			{
				return nullptr;;
			}
		}
		_match_end_1a67e2c68:;
	};
}



inline jule::Any _1acd6ca4a_findBuiltinDefStdComptime(jule::Str _18930_ident) {
	{
		auto &_match_expr{ _18930_ident };
		
		if (_match_expr == jule::Str("TypeOf", 6)) {
			_case_begin_1a67e6453:;
			{
				static jule::Ptr<_1acb24d85_FnIns> _19220_f = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>(_1acd75305_builtinCallerStdComptimeTypeOf), });;
				return jule::Any(_19220_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("ValueOf", 7)) {
			_case_begin_1a67e6277:;
			{
				static jule::Ptr<_1acb24d85_FnIns> _19520_f = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>(_1acd75723_builtinCallerStdComptimeValueOf), });;
				return jule::Any(_19520_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Range", 5)) {
			_case_begin_1a67e62dd:;
			{
				static jule::Ptr<_1acb24d85_FnIns> _19820_f = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>(_1acd75dd8_builtinCallerStdComptimeRange), });;
				return jule::Any(_19820_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Line", 4)) {
			_case_begin_1a67e6354:;
			{
				static jule::Ptr<_1acb24d85_FnIns> _20120_f = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>(_1acd76306_builtinCallerStdComptimeLine), });;
				return jule::Any(_20120_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("File", 4)) {
			_case_begin_1a67e264c:;
			{
				static jule::Ptr<_1acb24d85_FnIns> _20420_f = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>(_1acd76724_builtinCallerStdComptimeFile), });;
				return jule::Any(_20420_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Files", 5)) {
			_case_begin_1a67e26b3:;
			{
				static jule::Ptr<_1acb24d85_FnIns> _20720_f = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>(_1acd76b42_builtinCallerStdComptimeFiles), });;
				return jule::Any(_20720_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1a67e6057:;
			{
				return nullptr;;
			}
		}
		_match_end_1a67e44a6:;
	};
}



inline jule::Any _1acd6ce02_findBuiltinDefStdJuleIntegrated(jule::Str _21436_ident) {
	{
		auto &_match_expr{ _21436_ident };
		
		if (_match_expr == jule::Str("ToStr", 5)) {
			_case_begin_1a67ea105:;
			{
				static jule::Ptr<_1acb24d85_FnIns> _21720_f = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>(_1acd77cca_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_21720_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Emit", 4)) {
			_case_begin_1a67ea16b:;
			{
				static jule::Ptr<_1acb24d85_FnIns> _22020_f = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_Decl=jule::new_ptr<_1acb221d4_Fn>(_1acb221d4_Fn{._field_Generics=jule::Slice<jule::Ptr<_1acae4272_GenericDecl>>::alloc(1LL, 1LL), }), ._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>(_1acd781e8_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_22020_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1a67e9a61:;
			{
				return nullptr;;
			}
		}
		_match_end_1a67e9c1a:;
	};
}



inline jule::Any _1acd6d1cc_findPackageBuiltinDef(jule::Str _23226_link_path, jule::Str _23242_ident) {
	{
		auto &_match_expr{ _23226_link_path };
		
		if (_match_expr == jule::Str("std::comptime", 13)) {
			_case_begin_1a67ebdd7:;
			{
				return _1acd6ca4a_findBuiltinDefStdComptime(_23242_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_1a67ebe4d:;
			{
				return _1acd6c4d9_findBuiltinDefStdDebug(_23242_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_1a67ebc0b:;
			{
				return _1acd6c781_findBuiltinDefStdMem(_23242_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_1a67ebc72:;
			{
				return _1acd6ce02_findBuiltinDefStdJuleIntegrated(_23242_ident);;
			}
		}
		else {
			_case_begin_1a67e6530:;
			{
				return nullptr;;
			}
		}
		_match_end_1a67ea1d2:;
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acd6d5d9_builtinCallerCommonPlain(jule::Ptr<_1acc78e73_Eval>* _24734_e, jule::Ptr<_1acae036c_FnCallExpr>* _24749_fc, jule::Ptr<_1abd5dc4b_Data>* _24771_d) {
	jule::Ptr<_1acb24d85_FnIns> _24813_f = _1acca85ac_Fn((*(_24771_d)).get()._field_Kind.ptr());;
	_1abd506bb_fnCallArgChecker _25013_fcac = _1abd506bb_fnCallArgChecker{._field_e=(*(_24734_e)), ._field_args=(*(_24749_fc)).get()._field_Args, ._field_errorToken=(*(_24749_fc)).get()._field_Token, ._field_f=_24813_f, ._field_dynamicAnnotation=false, };;
	if ((!(_1abd52a53_check(&_25013_fcac)))) {
		return nullptr;;
	};
	jule::Ptr<_1acb1106e_FnCallExprModel> _26113_model = jule::new_ptr<_1acb1106e_FnCallExprModel>(_1acb1106e_FnCallExprModel{._field_Token=(*(_24749_fc)).get()._field_Token, ._field_Func=_24813_f, ._field_Expr=(*(_24771_d)).get()._field_Model, ._field_Args=_25013_fcac._field_argModels, });;
	if ((_24813_f.get()._field_Result == nullptr)) {
		(*(_24771_d))=_1acca0d46_buildVoidData();
	} else {
		(*(_24771_d))=jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_24813_f.get()._field_Result, });
	};
	(*(_24771_d)).get()._field_Model=jule::Any(_26113_model, &__jule_any_type35);
	return (*(_24771_d));;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acd6d9d5_builtinCallerCommon(jule::Ptr<_1acc78e73_Eval>* _28029_e, jule::Ptr<_1acae036c_FnCallExpr>* _28044_fc, jule::Ptr<_1abd5dc4b_Data>* _28066_d) {
	return _1acd6d5d9_builtinCallerCommonPlain(_28029_e, _28044_fc, _28066_d);;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acd6ddc0_builtinCallerCommonMut(jule::Ptr<_1acc78e73_Eval>* _28432_e, jule::Ptr<_1acae036c_FnCallExpr>* _28447_fc, jule::Ptr<_1abd5dc4b_Data>* _28469_d) {
	if ((!((*(_28469_d)).get()._field_Mutable))) {
		_1acc79490_pushErr((*(_28432_e)).ptr(), (*(_28447_fc)).get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	return _1acd6d9d5_builtinCallerCommon(_28432_e, _28447_fc, _28469_d);;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acd6e211_builtinCallerError(jule::Ptr<_1acc78e73_Eval>* _29128_e, jule::Ptr<_1acae036c_FnCallExpr>* _29143_fc) {
	if (((*(_29143_fc)).get()._field_Args.len() < 1LL)) {
		_1acc79490_pushErr((*(_29128_e)).ptr(), (*(_29143_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("err", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_29143_fc)).get()._field_Args.len() > 1LL)) {
		_1acc79490_pushErr((*(_29128_e)).ptr(), (*(_29143_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("error", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_1abd5dc4b_Data> _29913_expr = _1acc95984_evalExpr((*(_29128_e)), (*(_29143_fc)).get()._field_Args[0LL]);;
	if ((_29913_expr == nullptr)) {
		return nullptr;;
	};
	if (_1abd5e0e2_IsNil(_29913_expr.ptr())) {
		_1acc79490_pushErr((*(_29128_e)).ptr(), (*(_29143_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("you cannot call error function with nil", 39), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1abd5dc4b_Data> _30813_d = _1acca0d46_buildVoidData();;
	_30813_d.get()._field_Model=jule::Any(jule::new_ptr<_1acb1d345_BuiltinErrorCallExprModel>(_1acb1d345_BuiltinErrorCallExprModel{._field_Err=_29913_expr}), &__jule_any_type23);
	return _30813_d;;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acd6e5eb_builtinCallerOut(jule::Ptr<_1acc78e73_Eval>* _31326_e, jule::Ptr<_1acae036c_FnCallExpr>* _31341_fc, jule::Ptr<_1abd5dc4b_Data>* ) {
	if (((*(_31341_fc)).get()._field_Args.len() < 1LL)) {
		_1acc79490_pushErr((*(_31326_e)).ptr(), (*(_31341_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_31341_fc)).get()._field_Args.len() > 1LL)) {
		_1acc79490_pushErr((*(_31326_e)).ptr(), (*(_31341_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("out", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_1abd5dc4b_Data> _32213_expr = _1acc95984_evalExpr((*(_31326_e)), (*(_31341_fc)).get()._field_Args[0LL]);;
	if ((_32213_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1accc001e_isBuiltinStrConvertable(&(_32213_expr.get()._field_Kind))))) {
		_1acc79490_pushErr((*(_31326_e)).ptr(), (*(_31341_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1abd5dc4b_Data> _33213_d = _1acca0d46_buildVoidData();;
	_33213_d.get()._field_Model=jule::Any(jule::new_ptr<_1acb15172_BuiltinOutCallExprModel>(_1acb15172_BuiltinOutCallExprModel{._field_Expr=_32213_expr.get()._field_Model, }), &__jule_any_type28);
	return _33213_d;;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acd6e9d6_builtinCallerOutln(jule::Ptr<_1acc78e73_Eval>* _33728_e, jule::Ptr<_1acae036c_FnCallExpr>* _33743_fc, jule::Ptr<_1abd5dc4b_Data>* _33765_d) {
	(*(_33765_d))=_1acd6e5eb_builtinCallerOut(_33728_e, _33743_fc, _33765_d);
	if (((*(_33765_d)) == nullptr)) {
		return nullptr;;
	};
	(*(_33765_d)).get()._field_Model=jule::Any(jule::new_ptr<_1acb1555c_BuiltinOutlnCallExprModel>(_1acb1555c_BuiltinOutlnCallExprModel{._field_Expr=(*(_33765_d)).get()._field_Model.cast_ptr<_1acb15172_BuiltinOutCallExprModel>(&__jule_any_type28).get()._field_Expr, }), &__jule_any_type29);
	return (*(_33765_d));;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acd70102_builtinCallerNew(jule::Ptr<_1acc78e73_Eval>* _34926_e, jule::Ptr<_1acae036c_FnCallExpr>* _34941_fc, jule::Ptr<_1abd5dc4b_Data>* _34963_d) {
	if (((*(_34941_fc)).get()._field_Args.len() < 1LL)) {
		_1acc79490_pushErr((*(_34926_e)).ptr(), (*(_34941_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_34941_fc)).get()._field_Args.len() > 2LL)) {
		_1acc79490_pushErr((*(_34926_e)).ptr(), (*(_34941_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("new", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_1abd5dc4b_Data> _35813_t = _1acc94c4c_evalExprKind((*(_34926_e)), (*(_34941_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_35813_t == nullptr)) {
		return nullptr;;
	};
	if ((!(_35813_t.get()._field_Decl))) {
		_1acc79490_pushErr((*(_34926_e)).ptr(), (*(_34941_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1accbe9ad_isValidForSptrType(&(_35813_t.get()._field_Kind))))) {
		jule::Ptr<_1acb09d37_StructIns> _36917_s = _1acca8821_Struct(_35813_t.get()._field_Kind.ptr());;
		if ((((_36917_s != nullptr) && (_36917_s.get()._field_Decl != nullptr)) && _36917_s.get()._field_Decl.get()._field_Binded)) {
			_1acc79490_pushErr((*(_34926_e)).ptr(), (*(_34941_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*(_34963_d)).get()._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(jule::new_ptr<_1accb0b58_Sptr>(_1accb0b58_Sptr{._field_Elem=_35813_t.get()._field_Kind}), 21)});
	if (((*(_34941_fc)).get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1acca4ba2_TypeKind> _38317_old = (*(_34926_e)).get()._field_prefix;;
		(*(_34926_e)).get()._field_prefix=_35813_t.get()._field_Kind;
		jule::Ptr<_1abd5dc4b_Data> _38617_init = _1acc95984_evalExpr((*(_34926_e)), (*(_34941_fc)).get()._field_Args[1LL]);;
		(*(_34926_e)).get()._field_prefix=_38317_old;
		if ((_38617_init != nullptr)) {
			jule::Ptr<_2097d15d8_Token> _39121_token = (*(_34941_fc)).get()._field_Args[1LL].get()._field_Token;;
			;
			_1abd021a6_checkValidityForInitExpr((*(_34926_e)).get()._field_s, (!((*(_34926_e)).get()._field_immutable)), false, &(_35813_t.get()._field_Kind), &(_38617_init), &(_39121_token));
			_1abcee291_checkAssignType((*(_34926_e)).get()._field_s, false, &(_35813_t.get()._field_Kind), &(_38617_init), _39121_token);
			(*(_34963_d)).get()._field_Model=jule::Any(jule::new_ptr<_1acb15c66_BuiltinNewCallExprModel>(_1acb15c66_BuiltinNewCallExprModel{._field_Kind=_35813_t.get()._field_Kind, ._field_Init=_38617_init.get()._field_Model}), &__jule_any_type116);
		};
	} else {
		(*(_34963_d)).get()._field_Model=jule::Any(jule::new_ptr<_1acb15c66_BuiltinNewCallExprModel>(_1acb15c66_BuiltinNewCallExprModel{._field_Kind=_35813_t.get()._field_Kind, }), &__jule_any_type116);
	};
	return (*(_34963_d));;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acd704dc_builtinCallerPanic(jule::Ptr<_1acc78e73_Eval>* _41128_e, jule::Ptr<_1acae036c_FnCallExpr>* _41143_fc, jule::Ptr<_1abd5dc4b_Data>* ) {
	if (((*(_41143_fc)).get()._field_Args.len() < 1LL)) {
		_1acc79490_pushErr((*(_41128_e)).ptr(), (*(_41143_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("message", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_41143_fc)).get()._field_Args.len() > 1LL)) {
		_1acc79490_pushErr((*(_41128_e)).ptr(), (*(_41143_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("panic", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_1abd5dc4b_Data> _42013_expr = _1acc95984_evalExpr((*(_41128_e)), (*(_41143_fc)).get()._field_Args[0LL]);;
	if ((_42013_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1acca73be_Prim(_42013_expr.get()._field_Kind.ptr()) == nullptr) || (!(_1accb0608_IsStr(_1acca73be_Prim(_42013_expr.get()._field_Kind.ptr()).ptr()))))) {
		_1acc79490_pushErr((*(_41128_e)).ptr(), (*(_41143_fc)).get()._field_Token, jule::Str("panic function only accepts strings", 35), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1abd5dc4b_Data> _42913_d = _1acca0d46_buildVoidData();;
	_42913_d.get()._field_Model=jule::Any(jule::new_ptr<_1acb16151_BuiltinPanicCallExprModel>(_1acb16151_BuiltinPanicCallExprModel{._field_Token=(*(_41143_fc)).get()._field_Token, ._field_Expr=_42013_expr.get()._field_Model}), &__jule_any_type30);
	return _42913_d;;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acd708c7_builtinCallerMake(jule::Ptr<_1acc78e73_Eval>* _43727_e, jule::Ptr<_1acae036c_FnCallExpr>* _43742_fc, jule::Ptr<_1abd5dc4b_Data>* _43764_d) {
	if (((*(_43742_fc)).get()._field_Args.len() < 2LL)) {
		if (((*(_43742_fc)).get()._field_Args.len() == 1LL)) {
			_1acc79490_pushErr((*(_43727_e)).ptr(), (*(_43742_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("size", 4), &__jule_any_type5)}));
			return nullptr;;
		};
		_1acc79490_pushErr((*(_43727_e)).ptr(), (*(_43742_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type, size", 10), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1abd5dc4b_Data> _44713_t = _1acc94c4c_evalExprKind((*(_43727_e)), (*(_43742_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_44713_t == nullptr)) {
		return nullptr;;
	};
	if ((!(_44713_t.get()._field_Decl))) {
		_1acc79490_pushErr((*(_43727_e)).ptr(), (*(_43742_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_43742_fc)).get()._field_Args.len() > 3LL)) {
		_1acc79490_pushErr((*(_43727_e)).ptr(), (*(_43742_fc)).get()._field_Args[3LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("make", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	(*(_43764_d)).get()._field_Kind=_44713_t.get()._field_Kind;
	jule::Ptr<_1abd5dc4b_Data> _46313_lenExpr = _1acc95984_evalExpr(_1abced988_evalp((*(_43727_e)).get()._field_s, (*(_43727_e)).get()._field_lookup, _44713_t.get()._field_Kind), (*(_43742_fc)).get()._field_Args[1LL]);;
	if ((_46313_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1acc82ab4_checkIntegerIndexingByData((*(_43727_e)).ptr(), &(_46313_lenExpr), (*(_43742_fc)).get()._field_Args[1LL].get()._field_Token);
	jule::Ptr<_1acb16aad_BuiltinMakeCallExprModel> _47013_model = jule::new_ptr<_1acb16aad_BuiltinMakeCallExprModel>(_1acb16aad_BuiltinMakeCallExprModel{._field_Kind=_44713_t.get()._field_Kind, ._field_Len=_46313_lenExpr.get()._field_Model, });;
	(*(_43764_d)).get()._field_Model=jule::Any(_47013_model, &__jule_any_type117);
	if (((*(_43742_fc)).get()._field_Args.len() == 3LL)) {
		jule::Ptr<_1abd5dc4b_Data> _47617_capExpr = _1acc95984_evalExpr(_1abced988_evalp((*(_43727_e)).get()._field_s, (*(_43727_e)).get()._field_lookup, _44713_t.get()._field_Kind), (*(_43742_fc)).get()._field_Args[2LL]);;
		if ((_47617_capExpr == nullptr)) {
			return (*(_43764_d));;
		};
		_1acc82ab4_checkIntegerIndexingByData((*(_43727_e)).ptr(), &(_47617_capExpr), (*(_43742_fc)).get()._field_Args[2LL].get()._field_Token);
		_47013_model.get()._field_Cap=_47617_capExpr.get()._field_Model;
	};
	return (*(_43764_d));;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acd70cb2_builtinCallerAppend(jule::Ptr<_1acc78e73_Eval>* _48629_e, jule::Ptr<_1acae036c_FnCallExpr>* _48644_fc, jule::Ptr<_1abd5dc4b_Data>* _48666_d) {
	if (((*(_48644_fc)).get()._field_Args.len() < 2LL)) {
		if (((*(_48644_fc)).get()._field_Args.len() == 1LL)) {
			_1acc79490_pushErr((*(_48629_e)).ptr(), (*(_48644_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3), &__jule_any_type5)}));
			return nullptr;;
		};
		_1acc79490_pushErr((*(_48629_e)).ptr(), (*(_48644_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1abd5dc4b_Data> _49613_t = _1acc95984_evalExpr((*(_48629_e)), (*(_48644_fc)).get()._field_Args[0LL]);;
	if ((_49613_t == nullptr)) {
		return nullptr;;
	};
	if ((_1acca8348_Slc(_49613_t.get()._field_Kind.ptr()) == nullptr)) {
		_1acc79490_pushErr((*(_48629_e)).ptr(), (*(_48644_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1acb24d85_FnIns> _50613_f = jule::new_ptr<_1acb24d85_FnIns>(_1acb24d85_FnIns{._field_Params=jule::Slice<jule::Ptr<_1acb23eb6_ParamIns>>::make({jule::new_ptr<_1acb23eb6_ParamIns>(_1acb23eb6_ParamIns{._field_Decl=jule::new_ptr<_1acb20897_Param>(_1acb20897_Param{._field_Mutable=true, }), ._field_Kind=_49613_t.get()._field_Kind}),jule::new_ptr<_1acb23eb6_ParamIns>(_1acb23eb6_ParamIns{._field_Decl=jule::new_ptr<_1acb20897_Param>(_1acb20897_Param{._field_Mutable=true, ._field_Variadic=true, }), ._field_Kind=_1acca8348_Slc(_49613_t.get()._field_Kind.ptr()).get()._field_Elem})}), ._field_Result=_49613_t.get()._field_Kind, ._field_caller=jule::Fn<jule::Ptr<_1abd5dc4b_Data>(jule::Ptr<_1acc78e73_Eval>*,jule::Ptr<_1acae036c_FnCallExpr>*,jule::Ptr<_1abd5dc4b_Data>*)>(_1acd6d5d9_builtinCallerCommonPlain), });;
	(*(_48666_d)).get()._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(_50613_f, 1)});
	(*(_48666_d)).get()._field_Model=jule::Any(jule::new_ptr<_1acb1443a_CommonIdentExprModel>(_1acb1443a_CommonIdentExprModel{._field_Ident=jule::Str("append", 6)}), &__jule_any_type72);
	(*(_48666_d))=_1acd6d5d9_builtinCallerCommonPlain(_48629_e, _48644_fc, _48666_d);
	if (((*(_48666_d)) != nullptr)) {
		jule::Ptr<_1acb1106e_FnCallExprModel> _53417_model = (*(_48666_d)).get()._field_Model.cast_ptr<_1acb1106e_FnCallExprModel>(&__jule_any_type35);;
		(*(_48666_d)).get()._field_Model=jule::Any(jule::new_ptr<_1acb16e98_BuiltinAppendCallExprModel>(_1acb16e98_BuiltinAppendCallExprModel{._field_Dest=_53417_model.get()._field_Args[0LL], ._field_Elements=_53417_model.get()._field_Args[1LL]}), &__jule_any_type26);
	};
	return (*(_48666_d));;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acd71246_callerCopySlice(jule::Ptr<_1abd5dc4b_Data>* _54325_dest, jule::Ptr<_1acc78e73_Eval>* _54343_e, jule::Ptr<_1acae036c_FnCallExpr>* _54358_fc, jule::Ptr<_1abd5dc4b_Data>* _54380_d) {
	if ((!((*(_54325_dest)).get()._field_Mutable))) {
		_1acc79490_pushErr((*(_54343_e)).ptr(), (*(_54358_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1abd5dc4b_Data> _54813_src = _1acc95984_evalExpr((*(_54343_e)), (*(_54358_fc)).get()._field_Args[1LL]);;
	if ((_54813_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1accb15b5_Slc> _55213_slc = _1acca8348_Slc(_54813_src.get()._field_Kind.ptr());;
	if ((_55213_slc != nullptr)) {
		if (((!(_54813_src.get()._field_Mutable)) && _1acca6445_Mutable(_55213_slc.get()._field_Elem.ptr()))) {
			_1acc79490_pushErr((*(_54343_e)).ptr(), (*(_54358_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		};
		if ((!(_1acca5367_Equal((*(_54325_dest)).get()._field_Kind, _54813_src.get()._field_Kind)))) {
			_1acc79490_pushErr((*(_54343_e)).ptr(), (*(_54358_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str((*(_54325_dest)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1acca5059_Str(_54813_src.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
	} else {
		jule::Ptr<_1accac407_Prim> _56213_destPrim = _1acca73be_Prim(_1acca8348_Slc((*(_54325_dest)).get()._field_Kind.ptr()).get()._field_Elem.ptr());;
		jule::Ptr<_1accac407_Prim> _56313_prim = _1acca73be_Prim(_54813_src.get()._field_Kind.ptr());;
		if (((((_56213_destPrim == nullptr) || (_56313_prim == nullptr)) || (!(_1accb0608_IsStr(_56313_prim.ptr())))) || (!(_1accadbcd_IsU8(_56213_destPrim.ptr()))))) {
			_1acc79490_pushErr((*(_54343_e)).ptr(), (*(_54358_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str((*(_54325_dest)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1acca5059_Str(_54813_src.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
	};
	(*(_54380_d)).get()._field_Kind=_1abd58130_lenKind();
	(*(_54380_d)).get()._field_Model=jule::Any(jule::new_ptr<_1acb1ce5a_BuiltinCopyCallExprModel>(_1acb1ce5a_BuiltinCopyCallExprModel{._field_Dest=(*(_54325_dest)), ._field_Src=_54813_src}), &__jule_any_type32);
	return (*(_54380_d));;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acd716ca_callerCopyStr(jule::Ptr<_1abd5dc4b_Data>* _57723_dest, jule::Ptr<_1acc78e73_Eval>* _57741_e, jule::Ptr<_1acae036c_FnCallExpr>* _57756_fc, jule::Ptr<_1abd5dc4b_Data>* _57778_d) {
	if ((!((*(_57723_dest)).get()._field_Mutable))) {
		_1acc79490_pushErr((*(_57741_e)).ptr(), (*(_57756_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1abd5dc4b_Data> _58213_src = _1acc95984_evalExpr((*(_57741_e)), (*(_57756_fc)).get()._field_Args[1LL]);;
	if ((_58213_src == nullptr)) {
		return nullptr;;
	};
	{
		
		if ((_1acca73be_Prim(_58213_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6835e76:;
			{
				if (_1accb0608_IsStr(_1acca73be_Prim(_58213_src.get()._field_Kind.ptr()).ptr())) {
					goto _julec_label_end;
				};
			}
		}
		else if ((_1acca8348_Slc(_58213_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6835edc:;
			{
				jule::Ptr<_1accb15b5_Slc> _59217_slc = _1acca8348_Slc(_58213_src.get()._field_Kind.ptr());;
				if (((_1acca73be_Prim(_59217_slc.get()._field_Elem.ptr()) != nullptr) && _1accadbcd_IsU8(_1acca73be_Prim(_59217_slc.get()._field_Elem.ptr()).ptr()))) {
					goto _julec_label_end;
				};
			}
		}
		_match_end_1a683620c:;
	};
	_1acc79490_pushErr((*(_57741_e)).ptr(), (*(_57756_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str((*(_57723_dest)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1acca5059_Str(_58213_src.get()._field_Kind.ptr()), &__jule_any_type5)}));
	_julec_label_end:;
	(*(_57778_d)).get()._field_Kind=_1abd58130_lenKind();
	(*(_57778_d)).get()._field_Model=jule::Any(jule::new_ptr<_1acb1ce5a_BuiltinCopyCallExprModel>(_1acb1ce5a_BuiltinCopyCallExprModel{._field_Dest=(*(_57723_dest)), ._field_Src=_58213_src}), &__jule_any_type32);
	return (*(_57778_d));;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acd71ab5_builtinCallerCopy(jule::Ptr<_1acc78e73_Eval>* _60727_e, jule::Ptr<_1acae036c_FnCallExpr>* _60742_fc, jule::Ptr<_1abd5dc4b_Data>* _60764_d) {
	if (((*(_60742_fc)).get()._field_Args.len() < 2LL)) {
		if (((*(_60742_fc)).get()._field_Args.len() == 1LL)) {
			_1acc79490_pushErr((*(_60727_e)).ptr(), (*(_60742_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3), &__jule_any_type5)}));
			return nullptr;;
		};
		_1acc79490_pushErr((*(_60727_e)).ptr(), (*(_60742_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_60742_fc)).get()._field_Args.len() > 2LL)) {
		_1acc79490_pushErr((*(_60727_e)).ptr(), (*(_60742_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("copy", 4), &__jule_any_type5)}));
	};
	jule::Ptr<_1abd5dc4b_Data> _62013_dest = _1acc95984_evalExpr((*(_60727_e)), (*(_60742_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_62013_dest == nullptr)) {
			_case_begin_1a683e666:;
			{
				return nullptr;;
			}
		}
		else if ((_1acca8348_Slc(_62013_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6840106:;
			{
				return _1acd71246_callerCopySlice(&(_62013_dest), _60727_e, _60742_fc, _60764_d);;
			}
		}
		else if (((_1acca73be_Prim(_62013_dest.get()._field_Kind.ptr()) != nullptr) && _1accb0608_IsStr(_1acca73be_Prim(_62013_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1a684016c:;
			{
				return _1acd716ca_callerCopyStr(&(_62013_dest), _60727_e, _60742_fc, _60764_d);;
			}
		}
		else {
			_case_begin_1a683e325:;
			{
				_1acc79490_pushErr((*(_60727_e)).ptr(), (*(_60742_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a683cd5c:;
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acd71e06_callerLenSlice(jule::Ptr<_1abd5dc4b_Data>* _63424_expr, jule::Ptr<_1abd5dc4b_Data>* _63442_d) {
	(*(_63442_d)).get()._field_Kind=_1abd58130_lenKind();
	(*(_63442_d)).get()._field_Model=jule::Any(jule::new_ptr<_1acb172b7_BuiltinLenCallExprModel>(_1acb172b7_BuiltinLenCallExprModel{._field_Expr=(*(_63424_expr))}), &__jule_any_type118);
	return (*(_63442_d));;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acd72247_callerLenMap(jule::Ptr<_1abd5dc4b_Data>* _64222_expr, jule::Ptr<_1abd5dc4b_Data>* _64240_d) {
	(*(_64240_d)).get()._field_Kind=_1abd58130_lenKind();
	(*(_64240_d)).get()._field_Model=jule::Any(jule::new_ptr<_1acb172b7_BuiltinLenCallExprModel>(_1acb172b7_BuiltinLenCallExprModel{._field_Expr=(*(_64222_expr))}), &__jule_any_type118);
	return (*(_64240_d));;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acd72588_callerLenArr(jule::Ptr<_1abd5dc4b_Data>* _65022_expr, jule::Ptr<_1abd5dc4b_Data>* _65040_d) {
	(*(_65040_d)).get()._field_Kind=_1abd58130_lenKind();
	(*(_65040_d)).get()._field_Constant=static__1ddeb504b_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1acca80d4_Arr((*(_65022_expr)).get()._field_Kind.ptr()).get()._field_N)));
	(*(_65040_d)).get()._field_Model=jule::Any((*(_65040_d)).get()._field_Constant, &__jule_any_type19);
	return (*(_65040_d));;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acd728c9_callerLenStr(jule::Ptr<_1abd5dc4b_Data>* _65722_expr, jule::Ptr<_1abd5dc4b_Data>* _65740_d) {
	(*(_65740_d)).get()._field_Kind=_1abd58130_lenKind();
	if (_1abd5e5ba_IsConst((*(_65722_expr)).ptr())) {
		(*(_65740_d)).get()._field_Constant=static__1ddeb504b_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1ddeb6b52_ReadStr((*(_65722_expr)).get()._field_Constant.ptr()).len())));
		(*(_65740_d)).get()._field_Model=jule::Any((*(_65740_d)).get()._field_Constant, &__jule_any_type19);
	} else {
		(*(_65740_d)).get()._field_Model=jule::Any(jule::new_ptr<_1acb172b7_BuiltinLenCallExprModel>(_1acb172b7_BuiltinLenCallExprModel{._field_Expr=(*(_65722_expr))}), &__jule_any_type118);
	};
	return (*(_65740_d));;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acd72c1a_callerLenComptime(jule::Ptr<_1abd5dc4b_Data>* _67027_d, jule::I64 _67037_n) {
	(*(_67027_d)).get()._field_Kind=_1abd58130_lenKind();
	(*(_67027_d)).get()._field_Constant=static__1ddeb504b_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_67037_n)));
	(*(_67027_d)).get()._field_Model=jule::Any((*(_67027_d)).get()._field_Constant, &__jule_any_type19);
	return (*(_67027_d));;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acd73105_builtinCallerLen(jule::Ptr<_1acc78e73_Eval>* _67726_e, jule::Ptr<_1acae036c_FnCallExpr>* _67741_fc, jule::Ptr<_1abd5dc4b_Data>* _67763_d) {
	if (((*(_67741_fc)).get()._field_Args.len() < 1LL)) {
		_1acc79490_pushErr((*(_67726_e)).ptr(), (*(_67741_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_67741_fc)).get()._field_Args.len() > 1LL)) {
		_1acc79490_pushErr((*(_67726_e)).ptr(), (*(_67741_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("len", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_1abd5dc4b_Data> _68513_dest = _1acc95676_evalExpr1((*(_67726_e)), (*(_67741_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_68513_dest == nullptr)) {
			_case_begin_1a684986e:;
			{
				return nullptr;;
			}
		}
		else if ((_1acca8348_Slc(_68513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a684a30e:;
			{
				return _1acd71e06_callerLenSlice(&(_68513_dest), _67763_d);;
			}
		}
		else if ((_1acca80d4_Arr(_68513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a684a375:;
			{
				return _1acd72588_callerLenArr(&(_68513_dest), _67763_d);;
			}
		}
		else if ((_1acca8ce9_Map(_68513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a684a199:;
			{
				return _1acd72247_callerLenMap(&(_68513_dest), _67763_d);;
			}
		}
		else if (((_1acca73be_Prim(_68513_dest.get()._field_Kind.ptr()) != nullptr) && _1accb0608_IsStr(_1acca73be_Prim(_68513_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1a684a210:;
			{
				return _1acd728c9_callerLenStr(&(_68513_dest), _67763_d);;
			}
		}
		else if ((_1acca9536_comptimeStructFields(_68513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6849594:;
			{
				return _1acd72c1a_callerLenComptime(_67763_d, static_cast<jule::I64>(_1acca9536_comptimeStructFields(_68513_dest.get()._field_Kind.ptr()).get()._field_fields.len()));;
			}
		}
		else if ((_1acca9a0e_comptimeEnumFields(_68513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a684960a:;
			{
				return _1acd72c1a_callerLenComptime(_67763_d, static_cast<jule::I64>(_1acca9a0e_comptimeEnumFields(_68513_dest.get()._field_Kind.ptr()).get()._field_fields.len()));;
			}
		}
		else if ((_1accaa724_comptimeTypeInfos(_68513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6849671:;
			{
				return _1acd72c1a_callerLenComptime(_67763_d, static_cast<jule::I64>(_1accaa724_comptimeTypeInfos(_68513_dest.get()._field_Kind.ptr()).get()._field_types.len()));;
			}
		}
		else if ((_1acca9ed7_comptimeParams(_68513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a68496d7:;
			{
				return _1acd72c1a_callerLenComptime(_67763_d, static_cast<jule::I64>(_1acca9ed7_comptimeParams(_68513_dest.get()._field_Kind.ptr()).get()._field_params.len()));;
			}
		}
		else if ((_1accaabec_comptimeStatics(_68513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a684a3db:;
			{
				return _1acd72c1a_callerLenComptime(_67763_d, static_cast<jule::I64>(_1accaabec_comptimeStatics(_68513_dest.get()._field_Kind.ptr()).get()._field_fields.len()));;
			}
		}
		else if ((_1accab69d_comptimeFiles(_68513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a684a452:;
			{
				return _1acd72c1a_callerLenComptime(_67763_d, static_cast<jule::I64>(_1accab69d_comptimeFiles(_68513_dest.get()._field_Kind.ptr()).get()._field_files.len()));;
			}
		}
		else {
			_case_begin_1a684952d:;
			{
				_1acc79490_pushErr((*(_67726_e)).ptr(), (*(_67741_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a68474c6:;
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acd73446_callerCapSlice(jule::Ptr<_1abd5dc4b_Data>* _71524_expr, jule::Ptr<_1abd5dc4b_Data>* _71542_d) {
	(*(_71542_d)).get()._field_Kind=_1abd58130_lenKind();
	(*(_71542_d)).get()._field_Model=jule::Any(jule::new_ptr<_1acb175d6_BuiltinCapCallExprModel>(_1acb175d6_BuiltinCapCallExprModel{._field_Expr=(*(_71524_expr))}), &__jule_any_type119);
	return (*(_71542_d));;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acd73787_callerCapStr(jule::Ptr<_1abd5dc4b_Data>* _72322_expr, jule::Ptr<_1abd5dc4b_Data>* _72340_d) {
	(*(_72340_d)).get()._field_Kind=_1abd58130_lenKind();
	if (_1abd5e5ba_IsConst((*(_72322_expr)).ptr())) {
		(*(_72340_d)).get()._field_Constant=static__1ddeb504b_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1ddeb6b52_ReadStr((*(_72322_expr)).get()._field_Constant.ptr()).cap())));
		(*(_72340_d)).get()._field_Model=jule::Any((*(_72340_d)).get()._field_Constant, &__jule_any_type19);
	} else {
		(*(_72340_d)).get()._field_Model=jule::Any(jule::new_ptr<_1acb175d6_BuiltinCapCallExprModel>(_1acb175d6_BuiltinCapCallExprModel{._field_Expr=(*(_72322_expr))}), &__jule_any_type119);
	};
	return (*(_72340_d));;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acd73b72_builtinCallerCap(jule::Ptr<_1acc78e73_Eval>* _73626_e, jule::Ptr<_1acae036c_FnCallExpr>* _73641_fc, jule::Ptr<_1abd5dc4b_Data>* _73663_d) {
	if (((*(_73641_fc)).get()._field_Args.len() < 1LL)) {
		_1acc79490_pushErr((*(_73626_e)).ptr(), (*(_73641_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_73641_fc)).get()._field_Args.len() > 1LL)) {
		_1acc79490_pushErr((*(_73626_e)).ptr(), (*(_73641_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("cap", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_1abd5dc4b_Data> _74413_dest = _1acc95984_evalExpr((*(_73626_e)), (*(_73641_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_74413_dest == nullptr)) {
			_case_begin_1a685753b:;
			{
				return nullptr;;
			}
		}
		else if (_74413_dest.get()._field_Decl) {
			_case_begin_1a6857ecb:;
			{
				_1acc79490_pushErr((*(_73626_e)).ptr(), (*(_73641_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1acca8348_Slc(_74413_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6858042:;
			{
				return _1acd73446_callerCapSlice(&(_74413_dest), _73663_d);;
			}
		}
		else if (((_1acca73be_Prim(_74413_dest.get()._field_Kind.ptr()) != nullptr) && _1accb0608_IsStr(_1acca73be_Prim(_74413_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1a6857d66:;
			{
				return _1acd73787_callerCapStr(&(_74413_dest), _73663_d);;
			}
		}
		else {
			_case_begin_1a68571ea:;
			{
				_1acc79490_pushErr((*(_73626_e)).ptr(), (*(_73641_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a6855193:;
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acd74238_callerDeleteMap(jule::Ptr<_1acc78e73_Eval>* _76125_e, jule::Ptr<_1acae036c_FnCallExpr>* _76140_fc, jule::Ptr<_1abd5dc4b_Data>* _76162_expr, jule::Ptr<_1abd5dc4b_Data>* _76180_d) {
	if ((!((*(_76162_expr)).get()._field_Mutable))) {
		_1acc79490_pushErr((*(_76125_e)).ptr(), (*(_76140_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	(*(_76180_d))=_1acca0d46_buildVoidData();
	jule::Ptr<_1acb1cb19_BuiltinDeleteCallExprModel> _76613_model = jule::new_ptr<_1acb1cb19_BuiltinDeleteCallExprModel>(_1acb1cb19_BuiltinDeleteCallExprModel{._field_Dest=(*(_76162_expr)), });;
	if (((*(_76140_fc)).get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1abd5dc4b_Data> _77017_key = _1acc95984_evalExpr((*(_76125_e)), (*(_76140_fc)).get()._field_Args[1LL]);;
		{
			
			if ((_77017_key == nullptr)) {
				_case_begin_1a685dd6c:;
				{
					return nullptr;;
				}
			}
			else if (_77017_key.get()._field_Decl) {
				_case_begin_1a685c772:;
				{
					_1acc79490_pushErr((*(_76125_e)).ptr(), (*(_76140_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1a685c70b:;
				{
					;
					jule::Ptr<_1acca4ba2_TypeKind> _77921_keyType = _1acca8ce9_Map((*(_76162_expr)).get()._field_Kind.ptr()).get()._field_Key;;
					if ((!(_1abcee291_checkAssignType((*(_76125_e)).get()._field_s, false, &(_77921_keyType), &(_77017_key), (*(_76140_fc)).get()._field_Args[1LL].get()._field_Token)))) {
						return nullptr;;
					};
				}
			}
			_match_end_1a685c695:;
		};
		_76613_model.get()._field_Key=_77017_key;
	};
	(*(_76180_d)).get()._field_Model=jule::Any(_76613_model, &__jule_any_type33);
	return (*(_76180_d));;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acd74623_builtinCallerDelete(jule::Ptr<_1acc78e73_Eval>* _79029_e, jule::Ptr<_1acae036c_FnCallExpr>* _79044_fc, jule::Ptr<_1abd5dc4b_Data>* _79066_d) {
	if (((*(_79044_fc)).get()._field_Args.len() < 1LL)) {
		_1acc79490_pushErr((*(_79029_e)).ptr(), (*(_79044_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("map", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_79044_fc)).get()._field_Args.len() > 2LL)) {
		_1acc79490_pushErr((*(_79029_e)).ptr(), (*(_79044_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("delete", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_1abd5dc4b_Data> _79813_dest = _1acc95984_evalExpr((*(_79029_e)), (*(_79044_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_79813_dest == nullptr)) {
			_case_begin_1a6862e81:;
			{
				return nullptr;;
			}
		}
		else if (_79813_dest.get()._field_Decl) {
			_case_begin_1a6863921:;
			{
				_1acc79490_pushErr((*(_79029_e)).ptr(), (*(_79044_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1acca8ce9_Map(_79813_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6863987:;
			{
				return _1acd74238_callerDeleteMap(_79029_e, _79044_fc, &(_79813_dest), _79066_d);;
			}
		}
		else {
			_case_begin_1a6862b40:;
			{
				_1acc79490_pushErr((*(_79029_e)).ptr(), (*(_79044_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a6860ad8:;
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acd74a0d_builtinCallerClone(jule::Ptr<_1acc78e73_Eval>* _81328_e, jule::Ptr<_1acae036c_FnCallExpr>* _81343_fc, jule::Ptr<_1abd5dc4b_Data>* ) {
	if (((*(_81343_fc)).get()._field_Args.len() < 1LL)) {
		_1acc79490_pushErr((*(_81328_e)).ptr(), (*(_81343_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_81343_fc)).get()._field_Args.len() > 1LL)) {
		_1acc79490_pushErr((*(_81328_e)).ptr(), (*(_81343_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("clone", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_1abd5dc4b_Data> _82213_d = _1acc95984_evalExpr((*(_81328_e)), (*(_81343_fc)).get()._field_Args[0LL]);;
	if ((_82213_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1acca6de6_SupportsCloning(_82213_d.get()._field_Kind.ptr())))) {
		{
			
			if ((_1acca8348_Slc(_82213_d.get()._field_Kind.ptr()) != nullptr) || (_1acca8ce9_Map(_82213_d.get()._field_Kind.ptr()) != nullptr) || (_1acca80d4_Arr(_82213_d.get()._field_Kind.ptr()) != nullptr) || (_1acca7633_Sptr(_82213_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1a68682a5:;
				{
					{
						_1acc79490_pushErr((*(_81328_e)).ptr(), (*(_81343_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ has internally types which is not supports cloning", 57), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_82213_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
					};
				}
			}
			else if ((_1acca8821_Struct(_82213_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1a6867b12:;
				{
					{
						_1acc79490_pushErr((*(_81328_e)).ptr(), (*(_81343_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is not derives @", 23), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_82213_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Clone", 5), &__jule_any_type5)}));
					};
				}
			}
			else {
				_case_begin_1a6867a9b:;
				{
					{
						_1acc79490_pushErr((*(_81328_e)).ptr(), (*(_81343_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is not support cloning", 29), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_82213_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Clone", 5), &__jule_any_type5)}));
					};
				}
			}
			_match_end_1a6867a02:;
		};
	};
	_82213_d.get()._field_Mutable=true;
	_82213_d.get()._field_Model=jule::Any(jule::new_ptr<_1acb1587b_BuiltinCloneCallExprModel>(_1acb1587b_BuiltinCloneCallExprModel{._field_Expr=_82213_d.get()._field_Model}), &__jule_any_type27);
	return _82213_d;;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acd74de8_builtinCallerAssert(jule::Ptr<_1acc78e73_Eval>* _85529_e, jule::Ptr<_1acae036c_FnCallExpr>* _85544_fc, jule::Ptr<_1abd5dc4b_Data>* ) {
	if (((*(_85544_fc)).get()._field_Args.len() < 1LL)) {
		_1acc79490_pushErr((*(_85529_e)).ptr(), (*(_85544_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_85544_fc)).get()._field_Args.len() > 2LL)) {
		_1acc79490_pushErr((*(_85529_e)).ptr(), (*(_85544_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("assert", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_1abd5dc4b_Data> _86413_expr = _1acc95984_evalExpr((*(_85529_e)), (*(_85544_fc)).get()._field_Args[0LL]);;
	if ((_86413_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1acca73be_Prim(_86413_expr.get()._field_Kind.ptr()) == nullptr) || (!(_1accb0394_IsBool(_1acca73be_Prim(_86413_expr.get()._field_Kind.ptr()).ptr()))))) {
		_1acc79490_pushErr((*(_85529_e)).ptr(), (*(_85544_fc)).get()._field_Token, jule::Str("assertion requires boolean expression", 37), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1acb16607_BuiltinAssertCallExprModel> _87313_model = jule::new_ptr<_1acb16607_BuiltinAssertCallExprModel>(_1acb16607_BuiltinAssertCallExprModel{._field_Token=(*(_85544_fc)).get()._field_Token, ._field_Expr=_86413_expr.get()._field_Model, ._field_Log=jule::Str("assertion failed", 16)});;
	if (((*(_85544_fc)).get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1abd5dc4b_Data> _88117_log = _1acc95984_evalExpr((*(_85529_e)), (*(_85544_fc)).get()._field_Args[1LL]);;
		if ((_88117_log == nullptr)) {
			return nullptr;;
		};
		if ((((!(_1abd5e5ba_IsConst(_88117_log.ptr()))) || (_1acca73be_Prim(_88117_log.get()._field_Kind.ptr()) == nullptr)) || (!(_1accb0608_IsStr(_1acca73be_Prim(_88117_log.get()._field_Kind.ptr()).ptr()))))) {
			_1acc79490_pushErr((*(_85529_e)).ptr(), (*(_85544_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("const str", 9), &__jule_any_type5),jule::Any(_1acca5059_Str(_88117_log.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return nullptr;;
		};
		_87313_model.get()._field_Log=_1ddeb6b52_ReadStr(_88117_log.get()._field_Constant.ptr());
	};
	jule::Ptr<_1abd5dc4b_Data> _89413_d = _1acca0d46_buildVoidData();;
	_89413_d.get()._field_Model=jule::Any(_87313_model, &__jule_any_type31);
	return _89413_d;;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acd75305_builtinCallerStdComptimeTypeOf(jule::Ptr<_1acc78e73_Eval>* _89940_e, jule::Ptr<_1acae036c_FnCallExpr>* _89955_fc, jule::Ptr<_1abd5dc4b_Data>* ) {
	if (((*(_89955_fc)).get()._field_Args.len() < 1LL)) {
		_1acc79490_pushErr((*(_89940_e)).ptr(), (*(_89955_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_89955_fc)).get()._field_Args.len() > 1LL)) {
		_1acc79490_pushErr((*(_89940_e)).ptr(), (*(_89955_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("TypeOf", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_1abd5dc4b_Data> _90813_d = _1acc94c4c_evalExprKind((*(_89940_e)), (*(_89955_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_90813_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1acb24d85_FnIns> _9129_f = _1acca85ac_Fn(_90813_d.get()._field_Kind.ptr());;
	if ((_9129_f != nullptr)) {
		if (_1acb2621b_IsBuiltin(_9129_f.ptr())) {
			_1acc79490_pushErr((*(_89940_e)).ptr(), (*(_89955_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(jule::Str("<built-in fn>", 13), &__jule_any_type5)}));
			return nullptr;;
		};
		if ((_9129_f.get()._field_Generics.len() != _9129_f.get()._field_Decl.get()._field_Generics.len())) {
			_1acc79490_pushErr((*(_89940_e)).ptr(), (*(_89955_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1acb09d37_StructIns> _9239_s = _1acca8821_Struct(_90813_d.get()._field_Kind.ptr());;
	if (((_9239_s != nullptr) && (_9239_s.get()._field_Generics.len() != _9239_s.get()._field_Decl.get()._field_Generics.len()))) {
		_1acc79490_pushErr((*(_89940_e)).ptr(), (*(_89955_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_1acca92c2_comptime(_90813_d.get()._field_Kind.ptr())) {
		_1acc79490_pushErr((*(_89940_e)).ptr(), (*(_89955_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_90813_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1acb557cd_buildComptimeTypeInfoData(&((*(_89940_e)).get()._field_s), &(_90813_d.get()._field_Kind));;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acd75723_builtinCallerStdComptimeValueOf(jule::Ptr<_1acc78e73_Eval>* _93541_e, jule::Ptr<_1acae036c_FnCallExpr>* _93556_fc, jule::Ptr<_1abd5dc4b_Data>* ) {
	if (((*(_93556_fc)).get()._field_Args.len() < 1LL)) {
		_1acc79490_pushErr((*(_93541_e)).ptr(), (*(_93556_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_93556_fc)).get()._field_Args.len() > 1LL)) {
		_1acc79490_pushErr((*(_93541_e)).ptr(), (*(_93556_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("ValueOf", 7), &__jule_any_type5)}));
	};
	jule::Ptr<_1abd5dc4b_Data> _94313_d = _1acc95984_evalExpr((*(_93541_e)), (*(_93556_fc)).get()._field_Args[0LL]);;
	if ((_94313_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1abd583c7_isGoodValueToInfer(&(_94313_d))))) {
		_1acc79490_pushErr((*(_93541_e)).ptr(), (*(_93556_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_94313_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("ValueOf", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1acb55b0d_buildComptimeValue(&(_94313_d));;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acd759cb_rangeData(jule::Trait<_1acb3a20d_comptimeRangeKind> _95518_kind) {
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(jule::new_ptr<_1acb3a3d9_comptimeRange>(_1acb3a3d9_comptimeRange{._field_kind=_95518_kind}), 5)}), });;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acd75dd8_builtinCallerStdComptimeRange(jule::Ptr<_1acc78e73_Eval>* _96539_e, jule::Ptr<_1acae036c_FnCallExpr>* _96554_fc, jule::Ptr<_1abd5dc4b_Data>* ) {
	if (((*(_96554_fc)).get()._field_Args.len() < 1LL)) {
		_1acc79490_pushErr((*(_96539_e)).ptr(), (*(_96554_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_96554_fc)).get()._field_Args.len() > 1LL)) {
		_1acc79490_pushErr((*(_96539_e)).ptr(), (*(_96554_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Range", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_1abd5dc4b_Data> _97413_d = _1acc94c4c_evalExprKind((*(_96539_e)), (*(_96554_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_97413_d == nullptr)) {
		return nullptr;;
	};
	{
		
		if ((_1acca9536_comptimeStructFields(_97413_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6885adb:;
			{
				return _1acd759cb_rangeData(jule::Trait<_1acb3a20d_comptimeRangeKind>(_1acca9536_comptimeStructFields(_97413_d.get()._field_Kind.ptr()), 0));;
			}
		}
		else if ((_1acca9a0e_comptimeEnumFields(_97413_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6885b52:;
			{
				return _1acd759cb_rangeData(jule::Trait<_1acb3a20d_comptimeRangeKind>(_1acca9a0e_comptimeEnumFields(_97413_d.get()._field_Kind.ptr()), 2));;
			}
		}
		else if ((_1accaa724_comptimeTypeInfos(_97413_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6885965:;
			{
				return _1acd759cb_rangeData(jule::Trait<_1acb3a20d_comptimeRangeKind>(_1accaa724_comptimeTypeInfos(_97413_d.get()._field_Kind.ptr()), 4));;
			}
		}
		else if ((_1acca9ed7_comptimeParams(_97413_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a68859cb:;
			{
				return _1acd759cb_rangeData(jule::Trait<_1acb3a20d_comptimeRangeKind>(_1acca9ed7_comptimeParams(_97413_d.get()._field_Kind.ptr()), 3));;
			}
		}
		else if ((_1accaabec_comptimeStatics(_97413_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6884a63:;
			{
				return _1acd759cb_rangeData(jule::Trait<_1acb3a20d_comptimeRangeKind>(_1accaabec_comptimeStatics(_97413_d.get()._field_Kind.ptr()), 1));;
			}
		}
		else if ((_1accab69d_comptimeFiles(_97413_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6884ac9:;
			{
				return _1acd759cb_rangeData(jule::Trait<_1acb3a20d_comptimeRangeKind>(_1accab69d_comptimeFiles(_97413_d.get()._field_Kind.ptr()), 5));;
			}
		}
		else {
			_case_begin_1a6884cb6:;
			{
				_1acc79490_pushErr((*(_96539_e)).ptr(), (*(_96554_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_97413_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Range", 5), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a68848ba:;
	};
}



inline jule::Ptr<_1abd5dc4b_Data> _1acd76306_builtinCallerStdComptimeLine(jule::Ptr<_1acc78e73_Eval>* _99738_e, jule::Ptr<_1acae036c_FnCallExpr>* _99753_fc, jule::Ptr<_1abd5dc4b_Data>* ) {
	if (((*(_99753_fc)).get()._field_Args.len() > 0LL)) {
		_1acc79490_pushErr((*(_99738_e)).ptr(), (*(_99753_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Line", 4), &__jule_any_type5)}));
	};
	jule::Ptr<_1ddeb4b1c_Const> _100113_constant = static__1ddeb504b_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_99753_fc)).get()._field_Token.get()._field_Row)));;
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd69c45_primInt, ._field_Model=jule::Any(_100113_constant, &__jule_any_type19), ._field_Constant=_100113_constant});;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acd76724_builtinCallerStdComptimeFile(jule::Ptr<_1acc78e73_Eval>* _100938_e, jule::Ptr<_1acae036c_FnCallExpr>* _100953_fc, jule::Ptr<_1abd5dc4b_Data>* ) {
	if (((*(_100953_fc)).get()._field_Args.len() > 0LL)) {
		_1acc79490_pushErr((*(_100938_e)).ptr(), (*(_100953_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("File", 4), &__jule_any_type5)}));
	};
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(jule::new_ptr<_1acb53743_comptimeFile>(_1acb53743_comptimeFile{._field_file=(*(_100938_e)).get()._field_s.get()._field_file}), 18)}), });;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acd76b42_builtinCallerStdComptimeFiles(jule::Ptr<_1acc78e73_Eval>* _102239_e, jule::Ptr<_1acae036c_FnCallExpr>* _102254_fc, jule::Ptr<_1abd5dc4b_Data>* ) {
	if (((*(_102254_fc)).get()._field_Args.len() > 0LL)) {
		_1acc79490_pushErr((*(_102239_e)).ptr(), (*(_102254_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Files", 5), &__jule_any_type5)}));
	};
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=jule::new_ptr<_1acca4ba2_TypeKind>(_1acca4ba2_TypeKind{._field_Kind=jule::Trait<_1acca4740_Kind>(jule::new_ptr<_1acb5227a_comptimeFiles>(_1acb5227a_comptimeFiles{._field_files=(*(_102239_e)).get()._field_s.get()._field_files}), 17)}), });;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acd77060_builtinCallerStdMemSizeOf(jule::Ptr<_1acc78e73_Eval>* _103535_e, jule::Ptr<_1acae036c_FnCallExpr>* _103550_fc, jule::Ptr<_1abd5dc4b_Data>* ) {
	jule::Ptr<_1abd5dc4b_Data> _103613_result = jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd6997b_primUint, });;
	if (((*(_103550_fc)).get()._field_Args.len() < 1LL)) {
		_1acc79490_pushErr((*(_103535_e)).ptr(), (*(_103550_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type5)}));
		return _103613_result;;
	};
	if (((*(_103550_fc)).get()._field_Args.len() > 1LL)) {
		_1acc79490_pushErr((*(_103535_e)).ptr(), (*(_103550_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("SizeOf", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_1abd5dc4b_Data> _104813_d = _1acc94c4c_evalExprKind((*(_103535_e)), (*(_103550_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_104813_d == nullptr)) {
		return _103613_result;;
	};
	if ((!(_1accc0e43_validTypeForXof(&(_104813_d.get()._field_Kind))))) {
		_1acc79490_pushErr((*(_103535_e)).ptr(), (*(_103550_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_104813_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("SizeOf", 6), &__jule_any_type5)}));
	};
	_103613_result.get()._field_Model=jule::Any(jule::new_ptr<_1acb1d642_SizeofExprModel>(_1acb1d642_SizeofExprModel{._field_Expr=_104813_d.get()._field_Model}), &__jule_any_type120);
	return _103613_result;;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acd7747d_builtinCallerStdMemAlignOf(jule::Ptr<_1acc78e73_Eval>* _106036_e, jule::Ptr<_1acae036c_FnCallExpr>* _106051_fc, jule::Ptr<_1abd5dc4b_Data>* ) {
	jule::Ptr<_1abd5dc4b_Data> _106113_result = jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd6997b_primUint, });;
	if (((*(_106051_fc)).get()._field_Args.len() < 1LL)) {
		_1acc79490_pushErr((*(_106036_e)).ptr(), (*(_106051_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type5)}));
		return _106113_result;;
	};
	if (((*(_106051_fc)).get()._field_Args.len() > 1LL)) {
		_1acc79490_pushErr((*(_106036_e)).ptr(), (*(_106051_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("AlignOf", 7), &__jule_any_type5)}));
	};
	jule::Ptr<_1abd5dc4b_Data> _107313_d = _1acc94c4c_evalExprKind((*(_106036_e)), (*(_106051_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_107313_d == nullptr)) {
		return _106113_result;;
	};
	if ((!(_1accc0e43_validTypeForXof(&(_107313_d.get()._field_Kind))))) {
		_1acc79490_pushErr((*(_106036_e)).ptr(), (*(_106051_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1acca5059_Str(_107313_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("AlignOf", 7), &__jule_any_type5)}));
	};
	_106113_result.get()._field_Model=jule::Any(jule::new_ptr<_1acb1d92d_AlignofExprModel>(_1acb1d92d_AlignofExprModel{._field_Expr=_107313_d.get()._field_Model}), &__jule_any_type121);
	return _106113_result;;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acd7789b_builtinCallerStdMemFree(jule::Ptr<_1acc78e73_Eval>* _108533_e, jule::Ptr<_1acae036c_FnCallExpr>* _108548_fc, jule::Ptr<_1abd5dc4b_Data>* ) {
	if (((*(_108548_fc)).get()._field_Args.len() < 1LL)) {
		_1acc79490_pushErr((*(_108533_e)).ptr(), (*(_108548_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("h", 1), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_108548_fc)).get()._field_Args.len() > 1LL)) {
		_1acc79490_pushErr((*(_108533_e)).ptr(), (*(_108548_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Free", 4), &__jule_any_type5)}));
	};
	jule::Ptr<_1abd5dc4b_Data> _109413_d = _1acc95984_evalExpr((*(_108533_e)), (*(_108548_fc)).get()._field_Args[0LL]);;
	if ((_109413_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1acca6b82_PerformsRC(_109413_d.get()._field_Kind.ptr())))) {
		_1acc79490_pushErr((*(_108533_e)).ptr(), (*(_108548_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1abd5dc4b_Data> _110313_result = _1acca0d46_buildVoidData();;
	_110313_result.get()._field_Model=jule::Any(jule::new_ptr<_1acb1e6cb_FreeExprModel>(_1acb1e6cb_FreeExprModel{._field_Expr=_109413_d.get()._field_Model}), &__jule_any_type34);
	return _110313_result;;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acd77cca_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1acc78e73_Eval>* _110845_e, jule::Ptr<_1acae036c_FnCallExpr>* _110860_fc, jule::Ptr<_1abd5dc4b_Data>* ) {
	if (((*(_110860_fc)).get()._field_Args.len() < 1LL)) {
		_1acc79490_pushErr((*(_110845_e)).ptr(), (*(_110860_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_110860_fc)).get()._field_Args.len() > 1LL)) {
		_1acc79490_pushErr((*(_110845_e)).ptr(), (*(_110860_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("ToStr", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_1abd5dc4b_Data> _111713_d = _1acc95984_evalExpr((*(_110845_e)), (*(_110860_fc)).get()._field_Args[0LL]);;
	if ((_111713_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1accc001e_isBuiltinStrConvertable(&(_111713_d.get()._field_Kind))))) {
		_1acc79490_pushErr((*(_110845_e)).ptr(), (*(_110860_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1abd5dc4b_Data>(_1abd5dc4b_Data{._field_Kind=_1acd690da_primStr, ._field_Model=jule::Any(jule::new_ptr<_1acb1e027_IntegratedToStrExprModel>(_1acb1e027_IntegratedToStrExprModel{._field_Expr=_111713_d.get()._field_Model}), &__jule_any_type122), });;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acd781e8_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1acc78e73_Eval>* _113544_e, jule::Ptr<_1acae036c_FnCallExpr>* _113559_fc, jule::Ptr<_1abd5dc4b_Data>* _113581_d) {
	if ((!(_1acc79dca_isUnsafe((*(_113544_e)).ptr())))) {
		_1acc79490_pushErr((*(_113544_e)).ptr(), (*(_113559_fc)).get()._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	if (((*(_113559_fc)).get()._field_Args.len() < 1LL)) {
		_1acc79490_pushErr((*(_113544_e)).ptr(), (*(_113559_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("code", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1abd5dc4b_Data> _114513_argd = _1acc95984_evalExpr((*(_113544_e)), (*(_113559_fc)).get()._field_Args[0LL]);;
	if ((_114513_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1acca73be_Prim(_114513_argd.get()._field_Kind.ptr()) == nullptr) || (!(_1accb0608_IsStr(_1acca73be_Prim(_114513_argd.get()._field_Kind.ptr()).ptr()))))) {
		_1acc79490_pushErr((*(_113544_e)).ptr(), (*(_113559_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_1acca5059_Str(_114513_argd.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((!(_1abd5e5ba_IsConst(_114513_argd.ptr()))) || (!(_1ddeb8eea_IsStr(_114513_argd.get()._field_Constant.ptr()))))) {
		_1acc79490_pushErr((*(_113544_e)).ptr(), (*(_113559_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1abd5dc4b_Data> _116013_r = _1acca0d46_buildVoidData();;
	jule::Ptr<_1acb24d85_FnIns> _116213_f = _1acca85ac_Fn((*(_113581_d)).get()._field_Kind.ptr());;
	if ((_116213_f.get()._field_Generics.len() > 0LL)) {
		_116013_r.get()._field_Kind=_116213_f.get()._field_Generics[0LL].get()._field_Kind;
	};
	jule::Ptr<_1acb1e3e0_BackendEmitExprModel> _116713_model = jule::new_ptr<_1acb1e3e0_BackendEmitExprModel>(_1acb1e3e0_BackendEmitExprModel{._field_Code=_1ddeb6b52_ReadStr(_114513_argd.get()._field_Constant.ptr()), });;
	if (((*(_113559_fc)).get()._field_Args.len() > 1LL)) {
		_116713_model.get()._field_Exprs=jule::Slice<jule::Any>::alloc(0LL, ((*(_113559_fc)).get()._field_Args.len() - 1LL), jule::Any(nullptr));
		{
			auto expr = (*(_113559_fc)).get()._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1a68ad98d:;
			if (it != expr_end) {
				jule::Ptr<_1acadb456_Expr> _117321_arg = *it;
				{
					_114513_argd=_1acc9505a_eval1((*(_113544_e)), _117321_arg);
					if ((_114513_argd == nullptr)) {
						return nullptr;;
					};
					{ jule::Slice<jule::Any> &__jule_push_dest = _116713_model.get()._field_Exprs; __jule_push_dest.push(_114513_argd.get()._field_Model); };
				}
				_iter_next_1a68ad98d:;
				++it;
				goto _iter_begin_1a68ad98d;
			}
			_iter_end_1a68ad98d:;
		};
	};
	_116013_r.get()._field_Model=jule::Any(_116713_model, &__jule_any_type25);
	return _116013_r;;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acd78638_builtinCallerStdDebugOut(jule::Ptr<_1acc78e73_Eval>* _118634_e, jule::Ptr<_1acae036c_FnCallExpr>* _118649_fc, jule::Ptr<_1abd5dc4b_Data>* _118671_d) {
	(*(_118671_d))=_1acd6e5eb_builtinCallerOut(_118634_e, _118649_fc, _118671_d);
	if (((*(_118671_d)) == nullptr)) {
		return nullptr;;
	};
	(*(_118671_d)).get()._field_Model.cast_ptr<_1acb15172_BuiltinOutCallExprModel>(&__jule_any_type28).get()._field_Debug=true;
	return (*(_118671_d));;
}



inline jule::Ptr<_1abd5dc4b_Data> _1acd78a23_builtinCallerStdDebugOutln(jule::Ptr<_1acc78e73_Eval>* _119536_e, jule::Ptr<_1acae036c_FnCallExpr>* _119551_fc, jule::Ptr<_1abd5dc4b_Data>* _119573_d) {
	(*(_119573_d))=_1acd6e9d6_builtinCallerOutln(_119536_e, _119551_fc, _119573_d);
	if (((*(_119573_d)) == nullptr)) {
		return nullptr;;
	};
	(*(_119573_d)).get()._field_Model.cast_ptr<_1acb1555c_BuiltinOutlnCallExprModel>(&__jule_any_type29).get()._field_Debug=true;
	return (*(_119573_d));;
}



inline jule::Bool _1ace73700_FindModuleFile(jule::Slice<jule::Ptr<_2082a94ad_DirEntry>>* _1220_dirents) {
	{
		auto expr = _1220_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a68b3795:;
		if (it != expr_end) {
			jule::Ptr<_2082a94ad_DirEntry> *_1312_d = it;
			{
				if (((!(_2082b8be8_IsDir((*(_1312_d)).get()._field_Stat.ptr()))) && (*(_1312_d)).get()._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_1a68b3795:;
			++it;
			goto _iter_begin_1a68b3795;
		}
		_iter_end_1a68b3795:;
	};
	return false;;
}



inline jule::Str _1ace73832_FindModuleFileDeep(jule::Str _2427_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_2082a94ad_DirEntry>> _2617_dirents = ({
				auto except = static__2093a8e80_Read(_2427_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1a68b39a4;
				} jule::Slice<jule::Ptr<_2082a94ad_DirEntry>>(nullptr);});
			});;
			jule::Bool _3013_exist = _1ace73700_FindModuleFile(&(_2617_dirents));;
			if (_3013_exist) {
				return _2427_path;;
			};
			jule::I64 _3513_n = _2427_path.len();;
			_2427_path=_2093a8798_Dir(_2427_path);
			if ((_2427_path.len() == _3513_n)) {
				goto _iter_end_1a68b39a4;
			};
		}
	_iter_next_1a68b39a4:;
	}
	_iter_end_1a68b39a4:;;
	return jule::Str();;
}



inline jule::Slice<_20943da3c_Log> _1ace73a30_CheckModuleFile(jule::Str _4620_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__2082b6b4c_Read(_2093a7b3d_Join(jule::Slice<jule::Str>::make({_4620_path,jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_20943da3c_Log>::make({_20943da3c_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file could not checked because of a problem", 50), }});;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _539_s = _2093a58a5_Trim(static_cast<jule::Str>(_479_bytes), jule::Str(" \n\r\t\v", 5));;
	if ((_539_s.len() != 0LL)) {
		return jule::Slice<_20943da3c_Log>::make({_20943da3c_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file has syntax error(s)", 31), }});;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3d9ceb3_FileInfo> _1a3de347b_ParseFile(jule::Ptr<_2097d6973_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a3d9ceb3_FileInfo> _2713_finf = jule::new_ptr<_1a3d9ceb3_FileInfo>();;
	({
		__jule_tuple_x_1acaa352d_Ast__jule_tuple_s_20943da3c_Log __jule_assign_result = _1a3de3a0e_parseFileset(_2318_f);
		_2713_finf.get()._field_Ast = __jule_assign_result.__jule_result_arg0;
		_2713_finf.get()._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2713_finf.get()._field_Errors.len() > 0LL)) {
		_2713_finf.get()._field_Ast=nullptr;
	};
	return _2713_finf;;
}



inline __jule_tuple_x_1acaa352d_Ast__jule_tuple_s_20943da3c_Log _1a3de3a0e_parseFileset(jule::Ptr<_2097d6973_File> _5521_f) {
	__jule_tuple_x_1acaa352d_Ast__jule_tuple_s_20943da3c_Log __jule_func_result;
	jule::Ptr<_1a3e12577_parser> _5613_p = jule::new_ptr<_1a3e12577_parser>();;
	_1a3e21e16_parse(_5613_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = _5613_p.get()._field_ast;
	__jule_func_result.__jule_result_arg1 = _5613_p.get()._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1acae6e12_ScopeTree> _1a3de4438_newScope(void) {
	return jule::new_ptr<_1acae6e12_ScopeTree>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1a3de4724_isSt(jule::Ptr<_2097d15d8_Token> _499_current, jule::Ptr<_2097d15d8_Token> _4926_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=((_499_current.get()._field_Id == static_cast<jule::U64>(4LLU)) || (_4926_prev.get()._field_Row < _499_current.get()._field_Row));
	__jule_func_result.__jule_result_arg1=(_499_current.get()._field_Id == static_cast<jule::U64>(4LLU));
	return __jule_func_result;;
}



inline jule::Bool _1a3de4a65_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_2097d15d8_Token>>* _5526_tokens, jule::I64* _5545_i) {
	if ((((*(_5545_i)) > 1LL) && ((*(_5526_tokens))[((*(_5545_i)) - 2LL)].get()._field_Id == static_cast<jule::U64>(21LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_2097d15d8_Token> _6113_prev = (*(_5526_tokens))[((*(_5545_i)) - 1LL)];;
		return ((_6113_prev.get()._field_Id == static_cast<jule::U64>(19LLU)) || (((_6113_prev.get()._field_Id == static_cast<jule::U64>(6LLU)) && _2097d20cd_IsBinOp(_6113_prev.get()._field_Kind)) && (_6113_prev.get()._field_Row < (*(_5526_tokens))[(*(_5545_i))].get()._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1a3de4dea_nextStPos(jule::Slice<jule::Ptr<_2097d15d8_Token>>* _7015_tokens, jule::I64 _7033_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _7113_braceN = 0LL;;
	jule::I64 _7213_i = _7033_start;;
	for (; (_7213_i < (*(_7015_tokens)).len()); (_7213_i)++) {
		{
			jule::Bool _7417_ok = false;;
			jule::Bool _7517_terminated = false;;
			jule::Ptr<_2097d15d8_Token> _7613_tok = (*(_7015_tokens))[_7213_i];;
			{
				auto &_match_expr{ _7613_tok.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(2LLU)) {
					_case_begin_1a6941405:;
					{
						{
							auto &_match_expr{ _7613_tok.get()._field_Kind };
							
							if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
								_case_begin_1a6943072:;
								{
									if (((_7113_braceN == 0LL) && (_7213_i > _7033_start))) {
										if ((!(_1a3de4a65_prevIsIncompleteExpr(_7015_tokens, &(_7213_i))))) {
											({
												__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a3de4724_isSt(_7613_tok, (*(_7015_tokens))[(_7213_i - 1LL)]);
												_7417_ok = __jule_assign_result.__jule_result_arg0;
												_7517_terminated = __jule_assign_result.__jule_result_arg1;
											});
											if (_7417_ok) {
												goto _julec_label_return;
											};
										};
									};
									(_7113_braceN)++;
								}
							}
							else {
								_case_begin_1a6941bdb:;
								{
									(_7113_braceN)--;
									if (((_7113_braceN == 0LL) && ((_7213_i + 1LL) < (*(_7015_tokens)).len()))) {
										({
											__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a3de4724_isSt((*(_7015_tokens))[(_7213_i + 1LL)], _7613_tok);
											_7417_ok = __jule_assign_result.__jule_result_arg0;
											_7517_terminated = __jule_assign_result.__jule_result_arg1;
										});
										if (_7417_ok) {
											(_7213_i)++;
											goto _julec_label_return;
										};
									};
								}
							}
							_match_end_1a6941a21:;
						};
						goto _iter_next_1a693ecb6;
					}
				}
				_match_end_1a694138e:;
			};
			if ((_7113_braceN != 0LL)) {
				goto _iter_next_1a693ecb6;
			};
			if ((_7213_i > _7033_start)) {
				if (_1a3de4a65_prevIsIncompleteExpr(_7015_tokens, &(_7213_i))) {
					goto _iter_next_1a693ecb6;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a3de4724_isSt(_7613_tok, (*(_7015_tokens))[(_7213_i - 1LL)]);
					_7417_ok = __jule_assign_result.__jule_result_arg0;
					_7517_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a3de4724_isSt(_7613_tok, _7613_tok);
					_7417_ok = __jule_assign_result.__jule_result_arg0;
					_7517_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_7417_ok))) {
				goto _iter_next_1a693ecb6;
			};
			_julec_label_return:;
			if (_7517_terminated) {
				(_7213_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _7213_i;
			__jule_func_result.__jule_result_arg1 = _7517_terminated;
			return __jule_func_result;;
		}
	_iter_next_1a693ecb6:;
	}
	_iter_end_1a693ecb6:;;
	__jule_func_result.__jule_result_arg0 = _7213_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_2097d15d8_Token__jule_tuple_bool _1a3de523b_skipSt(jule::I64* _13216_i, jule::Slice<jule::Ptr<_2097d15d8_Token>> _13228_tokens) {
	__jule_tuple_sx_2097d15d8_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _1339_start = (*(_13216_i));;
	jule::Bool _13413_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a3de4dea_nextStPos(&(_13228_tokens), _1339_start);
		(*(_13216_i)) = __jule_assign_result.__jule_result_arg0;
		_13413_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_2097d15d8_Token>> _13613_stTokens = _13228_tokens.slice(_1339_start, (*(_13216_i)));;
	if (_13413_terminated) {
		if ((_13613_stTokens.len() == 1LL)) {
			({
				__jule_tuple_sx_2097d15d8_Token__jule_tuple_bool __jule_assign_result = _1a3de523b_skipSt(_13216_i, _13228_tokens);
				_13613_stTokens = __jule_assign_result.__jule_result_arg0;
				_13413_terminated = __jule_assign_result.__jule_result_arg1;
			});
			__jule_func_result.__jule_result_arg0 = _13613_stTokens;
			__jule_func_result.__jule_result_arg1 = _13413_terminated;
			return __jule_func_result;;
		};
		_13613_stTokens=_13613_stTokens.slice(0LL, (_13613_stTokens.len() - 1LL));
	};
	__jule_func_result.__jule_result_arg0 = _13613_stTokens;
	__jule_func_result.__jule_result_arg1 = _13413_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1a3de5538_stmt>> _1a3de58ce_splitStmts(jule::Slice<jule::Ptr<_2097d15d8_Token>>* _15420_tokens) {
	jule::Slice<jule::Ptr<_1a3de5538_stmt>> _15513_stmts = jule::Slice<jule::Ptr<_1a3de5538_stmt>>::alloc(0LL, 20LL);;
	jule::I64 _15613_pos = 0LL;;
	while ((_15613_pos < (*(_15420_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_2097d15d8_Token>> _15818_stmt;;
			jule::Bool _15824_terminated = false;;
			({
				__jule_tuple_sx_2097d15d8_Token__jule_tuple_bool __jule_assign_result = _1a3de523b_skipSt(&(_15613_pos), (*(_15420_tokens)));
				_15818_stmt = __jule_assign_result.__jule_result_arg0;
				_15824_terminated = __jule_assign_result.__jule_result_arg1;
			});
			{ jule::Slice<jule::Ptr<_1a3de5538_stmt>> &__jule_push_dest = _15513_stmts; __jule_push_dest.push(jule::new_ptr<_1a3de5538_stmt>(_1a3de5538_stmt{._field_tokens=_15818_stmt, ._field_terminated=_15824_terminated})); };
		}
	_iter_next_1a694ac17:;
	}
	_iter_end_1a694ac17:;;
	return _15513_stmts;;
}



inline jule::Bool _1a3e0c0bb_isTypeOp(jule::Str* _89014_kind) {
	return (((*(_89014_kind)).equal("&", 1) || (*(_89014_kind)).equal("&&", 2)) || (*(_89014_kind)).equal("*", 1));;
}



inline jule::Bool _1a3e0c3a7_isTypeRange(jule::Slice<jule::Ptr<_2097d15d8_Token>>* _89721_tokens) {
	jule::Bool _89813_op = false;;
	{
		auto expr = _89721_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a69ed0a5:;
		if (it != expr_end) {
			jule::I64 _8999_i = it - expr->begin();
			jule::Ptr<_2097d15d8_Token> _89912_token = *it;
			{
				if ((_89912_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
					if (_89912_token.get()._field_Kind.equal("[", 1)) {
						if (_89813_op) {
							return true;;
						};
						jule::I64 _90525_rangeN = 0LL;;
						jule::Slice<jule::Ptr<_2097d15d8_Token>> _90625_lTokens = (*(_89721_tokens)).slice(_8999_i);;
						{
							auto expr = &(_90625_lTokens);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1a69ee34d:;
							if (it != expr_end) {
								jule::Ptr<_2097d15d8_Token> _90724_lToken = *it;
								{
									{
										auto &_match_expr{ _90724_lToken.get()._field_Id };
										
										if (_match_expr == static_cast<jule::U64>(2LLU)) {
											_case_begin_1a6a00937:;
											{
												{
													auto &_match_expr{ _90724_lToken.get()._field_Kind };
													
													if (_match_expr == jule::Str("[", 1)) {
														_case_begin_1a6a01273:;
														{
															(_90525_rangeN)++;
															goto _iter_next_1a69ee34d;
														}
													}
													else if (_match_expr == jule::Str("]", 1)) {
														_case_begin_1a6a012ea:;
														{
															(_90525_rangeN)--;
															goto _iter_next_1a69ee34d;
														}
													}
													_match_end_1a6a010a8:;
												};
											}
										}
										_match_end_1a6a006e5:;
									};
									if ((_90525_rangeN == 0LL)) {
										return _1a3e0c0bb_isTypeOp(&(_90724_lToken.get()._field_Kind));;
									};
								}
								_iter_next_1a69ee34d:;
								++it;
								goto _iter_begin_1a69ee34d;
							}
							_iter_end_1a69ee34d:;
						};
						return true;;
					};
				};
				if ((!(_1a3e0c0bb_isTypeOp(&(_89912_token.get()._field_Kind))))) {
					return false;;
				};
				_89813_op=true;
			}
			_iter_next_1a69ed0a5:;
			++it;
			_8999_i++;
			goto _iter_begin_1a69ed0a5;
		}
		_iter_end_1a69ed0a5:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_2097d15d8_Token>> _1a3e0c64e_getBlockExpr(jule::Slice<jule::Ptr<_2097d15d8_Token>>* _93522_tokens) {
	jule::I64 _93613_braceN = 0LL;;
	jule::I64 _93713_skipToNextBraceClose = 0LL;;
	{
		auto expr = _93522_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6a02818:;
		if (it != expr_end) {
			jule::I64 _9389_i = it - expr->begin();
			jule::Ptr<_2097d15d8_Token> _93812_tok = *it;
			{
				{
					auto &_match_expr{ _93812_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(15LLU) || _match_expr == static_cast<jule::U64>(16LLU) || _match_expr == static_cast<jule::U64>(33LLU)) {
						_case_begin_1a6a0350b:;
						{
							(_93713_skipToNextBraceClose)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(2LLU)) {
						_case_begin_1a6a03583:;
						{
							{
								auto &_match_expr{ _93812_tok.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1a6a04320:;
									{
										if (((_93613_braceN > 0LL) || (_93713_skipToNextBraceClose > 0LL))) {
											if ((_93713_skipToNextBraceClose > 0LL)) {
												(_93713_skipToNextBraceClose)--;
											};
											(_93613_braceN)++;
											goto _match_end_1a6a04452;
										};
										return (*(_93522_tokens)).slice(0LL, _9389_i);;
									}
								}
								else if (_match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1a6a0496e:;
									{
										(_93613_braceN)++;
									}
								}
								else {
									_case_begin_1a6a044b8:;
									{
										(_93613_braceN)--;
									}
								}
								_match_end_1a6a04452:;
							};
						}
					}
					_match_end_1a6a03462:;
				};
			}
			_iter_next_1a6a02818:;
			++it;
			_9389_i++;
			goto _iter_begin_1a6a02818;
		}
		_iter_end_1a6a02818:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_2097d15d8_Token__jule_tuple_sx_2097d15d8_Token _1a3e0c9d4_splitDelim(jule::Slice<jule::Ptr<_2097d15d8_Token>>* _96620_tokens, jule::U64 _96638_delim) {
	__jule_tuple_sx_2097d15d8_Token__jule_tuple_sx_2097d15d8_Token __jule_func_result;
	jule::I64 _96713_rangeN = 0LL;;
	{
		auto expr = _96620_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6a04c49:;
		if (it != expr_end) {
			jule::I64 _9689_i = it - expr->begin();
			jule::Ptr<_2097d15d8_Token> _96812_token = *it;
			{
				{
					auto &_match_expr{ _96812_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(2LLU)) {
						_case_begin_1a6a068a5:;
						{
							{
								auto &_match_expr{ _96812_token.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1a6a07015:;
									{
										(_96713_rangeN)++;
										goto _iter_next_1a6a04c49;
									}
								}
								else {
									_case_begin_1a6a0729b:;
									{
										(_96713_rangeN)--;
									}
								}
								_match_end_1a6a070d1:;
							};
						}
					}
					else if (_match_expr == _96638_delim) {
						_case_begin_1a6a0692c:;
						{
							if ((_96713_rangeN == 0LL)) {
								jule::Slice<jule::Ptr<_2097d15d8_Token>> _98225_l = (*(_96620_tokens)).slice(0LL, _9689_i);;
								jule::Slice<jule::Ptr<_2097d15d8_Token>> _98325_r = (*(_96620_tokens)).slice((_9689_i + 1LL));;
								__jule_func_result.__jule_result_arg0 = _98225_l;
								__jule_func_result.__jule_result_arg1 = _98325_r;
								return __jule_func_result;;
							};
						}
					}
					_match_end_1a6a06685:;
				};
			}
			_iter_next_1a6a04c49:;
			++it;
			_9689_i++;
			goto _iter_begin_1a6a04c49;
		}
		_iter_end_1a6a04c49:;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I64 _1a3e0cc7b_findLowestPrecOp(jule::Slice<jule::Ptr<_2097d15d8_Token>>* _99322_tokens) {
	jule::U8 _99813_prec = 255LLU;;
	jule::I64 _99913_precPos = -1LL;;
	jule::I64 _100113_braceN = 0LL;;
	jule::Bool _100213_skipToNextBraceOpen = false;;
	{
		auto expr = _99322_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6a09ca4:;
		if (it != expr_end) {
			jule::I64 _10039_i = it - expr->begin();
			jule::Ptr<_2097d15d8_Token> *_100312_token = it;
			{
				{
					
					if (((*(_100312_token)).get()._field_Id == static_cast<jule::U64>(2LLU))) {
						_case_begin_1a6a0a865:;
						{
							{
								auto &_match_expr{ (*(_100312_token)).get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1a6a0b415:;
									{
										_100213_skipToNextBraceOpen=false;
										goto _case_begin_1a6a0bb0d;
									}
								}
								else if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("[", 1)) {
									_case_begin_1a6a0bb0d:;
									{
										(_100113_braceN)++;
									}
								}
								else {
									_case_begin_1a6a0b69b:;
									{
										(_100113_braceN)--;
									}
								}
								_match_end_1a6a0b4d1:;
							};
							goto _iter_next_1a6a09ca4;
						}
					}
					else if (_100213_skipToNextBraceOpen) {
						_case_begin_1a6a0a8dc:;
						{
							goto _iter_next_1a6a09ca4;
						}
					}
					else if (((*(_100312_token)).get()._field_Id == static_cast<jule::U64>(15LLU))) {
						_case_begin_1a6a0a964:;
						{
							_100213_skipToNextBraceOpen=true;
							goto _iter_next_1a6a09ca4;
						}
					}
					else if ((_10039_i == 0LL)) {
						_case_begin_1a6a0a9db:;
						{
							goto _iter_next_1a6a09ca4;
						}
					}
					else if (((*(_100312_token)).get()._field_Id != static_cast<jule::U64>(6LLU))) {
						_case_begin_1a6a0aa63:;
						{
							goto _iter_next_1a6a09ca4;
						}
					}
					else if ((_100113_braceN > 0LL)) {
						_case_begin_1a6a0aada:;
						{
							goto _iter_next_1a6a09ca4;
						}
					}
					_match_end_1a6a0a711:;
				};
				jule::Ptr<_2097d15d8_Token> _103013_left = (*(_99322_tokens))[(_10039_i - 1LL)];;
				if (((_103013_left.get()._field_Id == static_cast<jule::U64>(6LLU)) || (_103013_left.get()._field_Id == static_cast<jule::U64>(10LLU)))) {
					goto _iter_next_1a6a09ca4;
				};
				if ((((_10039_i > 1LL) && (_103013_left.get()._field_Id == static_cast<jule::U64>(2LLU))) && _103013_left.get()._field_Kind.equal("]", 1))) {
					jule::Ptr<_2097d15d8_Token> _103817_lleft = (*(_99322_tokens))[(_10039_i - 2LL)];;
					if (((_103817_lleft.get()._field_Id == static_cast<jule::U64>(2LLU)) && _103817_lleft.get()._field_Kind.equal("[", 1))) {
						if (((*(_100312_token)).get()._field_Kind.equal("&", 1) || (*(_100312_token)).get()._field_Kind.equal("*", 1))) {
							goto _iter_next_1a6a09ca4;
						};
					};
				};
				jule::U8 _104713_p = _2097d194b_Prec((*(_100312_token)).ptr());;
				if (((_104713_p != 0LLU) && (_104713_p <= _99813_prec))) {
					_99813_prec=_104713_p;
					_99913_precPos=_10039_i;
				};
			}
			_iter_next_1a6a09ca4:;
			++it;
			_10039_i++;
			goto _iter_begin_1a6a09ca4;
		}
		_iter_end_1a6a09ca4:;
	};
	return _99913_precPos;;
}



inline jule::Ptr<_1acadd04b_IdentExpr> _1a3e0d023_buildIdentExpr(jule::Ptr<_2097d15d8_Token>* _105624_token) {
	return jule::new_ptr<_1acadd04b_IdentExpr>(_1acadd04b_IdentExpr{._field_Token=(*(_105624_token)), ._field_Ident=(*(_105624_token)).get()._field_Kind, ._field_Binded=false});;
}



inline __jule_tuple_sx_2097d15d8_Token__jule_tuple_int _1a3e0d2ba_getRangeExprTokens(jule::Slice<jule::Ptr<_2097d15d8_Token>>* _106428_tokens) {
	__jule_tuple_sx_2097d15d8_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I64 _106513_rangeN = 0LL;;
	jule::I64 _106613_i = ((*(_106428_tokens)).len() - 1LL);;
	for (; (_106613_i >= 0LL); (_106613_i)--) {
		{
			jule::Ptr<_2097d15d8_Token> _106813_tok = (*(_106428_tokens))[_106613_i];;
			if ((_106813_tok.get()._field_Id == static_cast<jule::U64>(2LLU))) {
				{
					auto &_match_expr{ _106813_tok.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1a6a1350a:;
						{
							(_106513_rangeN)++;
						}
					}
					else {
						_case_begin_1a6a13dac:;
						{
							(_106513_rangeN)--;
						}
					}
					_match_end_1a6a13b9d:;
				};
			};
			if ((_106513_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_106428_tokens)).slice(0LL, _106613_i);
				__jule_func_result.__jule_result_arg1 = _106513_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1a6a12ad1:;
	}
	_iter_end_1a6a12ad1:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _106513_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1a3e0e024_checkAssignTokens(jule::Slice<jule::Ptr<_2097d15d8_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_2097d5b81_IsAssign((*(_1623_tokens))[0LL].get()._field_Id))))) {
		return false;;
	};
	jule::I64 _2013_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6a9865b:;
		if (it != expr_end) {
			jule::Ptr<_2097d15d8_Token> *_2112_t = it;
			{
				if (((*(_2112_t)).get()._field_Id == static_cast<jule::U64>(2LLU))) {
					{
						auto &_match_expr{ (*(_2112_t)).get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a6a9920b:;
							{
								(_2013_braceN)++;
							}
						}
						else {
							_case_begin_1a6a994d6:;
							{
								(_2013_braceN)--;
							}
						}
						_match_end_1a6a992c7:;
					};
				};
				if ((_2013_braceN < 0LL)) {
					return false;;
				} else if ((_2013_braceN > 0LL)) {
					goto _iter_next_1a6a9865b;
				} else if ((((*(_2112_t)).get()._field_Id == static_cast<jule::U64>(6LLU)) && _2097d61c0_IsAssignOp((*(_2112_t)).get()._field_Kind))) {
					return true;;
				};
			}
			_iter_next_1a6a9865b:;
			++it;
			goto _iter_begin_1a6a9865b;
		}
		_iter_end_1a6a9865b:;
	};
	return false;;
}



inline _20943da3c_Log _1a3e10245_makeErr(jule::I64 _5212_row, jule::I64 _5222_col, jule::Ptr<_2097d6973_File>* _5233_f, jule::Str _5243_fmt, jule::Slice<jule::Any> _5256_args) {
	return _20943da3c_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_5212_row, ._field_Column=_5222_col, ._field_Path=(*(_5233_f)).get()._field_Path, ._field_Text=_20943de7c_Logf(_5243_fmt, _5256_args), };;
}



inline jule::Slice<jule::Ptr<_2097d15d8_Token>> _1a3e1071d_range(jule::I64* _7115_i, jule::Str _7123_open, jule::Str _7140_close, jule::Slice<jule::Ptr<_2097d15d8_Token>>* _7163_tokens) {
	if (((*(_7115_i)) >= (*(_7163_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_2097d15d8_Token> _759_tok = (*(_7163_tokens))[(*(_7115_i))];;
	if (((_759_tok.get()._field_Id != static_cast<jule::U64>(2LLU)) || (_759_tok.get()._field_Kind != _7123_open))) {
		return nullptr;;
	};
	((*(_7115_i)))++;
	jule::I64 _8013_rangeN = 1LL;;
	jule::I64 _819_start = (*(_7115_i));;
	for (; ((_8013_rangeN != 0LL) && ((*(_7115_i)) < (*(_7163_tokens)).len())); ((*(_7115_i)))++) {
		{
			jule::Ptr<_2097d15d8_Token> _8313_token = (*(_7163_tokens))[(*(_7115_i))];;
			if ((_8313_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
				{
					auto &_match_expr{ _8313_token.get()._field_Kind };
					
					if (_match_expr == _7123_open) {
						_case_begin_1a6a9ed7c:;
						{
							(_8013_rangeN)++;
						}
					}
					else if (_match_expr == _7140_close) {
						_case_begin_1a6a9ee04:;
						{
							(_8013_rangeN)--;
						}
					}
					_match_end_1a6a9eb5c:;
				};
			};
		}
	_iter_next_1a6a9dd8c:;
	}
	_iter_end_1a6a9dd8c:;;
	return (*(_7163_tokens)).slice(_819_start, ((*(_7115_i)) - 1LL));;
}



inline __jule_tuple_sx_2097d15d8_Token__jule_tuple_sx_2097d15d8_Token _1a3e109b5_rangeLast(jule::Slice<jule::Ptr<_2097d15d8_Token>>* _10319_tokens) {
	__jule_tuple_sx_2097d15d8_Token__jule_tuple_sx_2097d15d8_Token __jule_func_result;
	if (((*(_10319_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_10319_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	} else if (((*(_10319_tokens))[((*(_10319_tokens)).len() - 1LL)].get()._field_Id != static_cast<jule::U64>(2LLU))) {
		__jule_func_result.__jule_result_arg0 = (*(_10319_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _10913_braceN = 0LL;;
	jule::I64 _11013_i = ((*(_10319_tokens)).len() - 1LL);;
	for (; (_11013_i >= 0LL); (_11013_i)--) {
		{
			jule::Ptr<_2097d15d8_Token> _11213_token = (*(_10319_tokens))[_11013_i];;
			if ((_11213_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
				{
					auto &_match_expr{ _11213_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1a6aa2e18:;
						{
							(_10913_braceN)++;
							goto _iter_next_1a6aa0bc4;
						}
					}
					else {
						_case_begin_1a6aa37ed:;
						{
							(_10913_braceN)--;
						}
					}
					_match_end_1a6aa35de:;
				};
			};
			if ((_10913_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_10319_tokens)).slice(0LL, _11013_i);
				__jule_func_result.__jule_result_arg1 = (*(_10319_tokens)).slice(_11013_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1a6aa0bc4:;
	}
	_iter_end_1a6aa0bc4:;;
	__jule_func_result.__jule_result_arg0 = (*(_10319_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_2097d15d8_Token__jule_tuple_s_20943da3c_Log _1a3e10da0_partsKind(jule::Slice<jule::Ptr<_2097d15d8_Token>>* _13219_tokens, jule::Str _13237_kind, jule::Bool _13254_expr_must) {
	__jule_tuple_ssx_2097d15d8_Token__jule_tuple_s_20943da3c_Log __jule_func_result;
	if (((*(_13219_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>> _13713_parts = nullptr;;
	jule::Slice<_20943da3c_Log> _13813_errors = nullptr;;
	jule::I64 _14013_rangeN = 0LL;;
	jule::I64 _14113_last = 0LL;;
	{
		auto expr = _13219_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6aa6713:;
		if (it != expr_end) {
			jule::I64 _1429_i = it - expr->begin();
			jule::Ptr<_2097d15d8_Token> _14212_token = *it;
			{
				if ((_14212_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
					{
						auto &_match_expr{ _14212_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a6aa75d2:;
							{
								(_14013_rangeN)++;
								goto _iter_next_1a6aa6713;
							}
						}
						else {
							_case_begin_1a6aa78ac:;
							{
								(_14013_rangeN)--;
							}
						}
						_match_end_1a6aa769d:;
					};
				};
				if ((_14013_rangeN > 0LL)) {
					goto _iter_next_1a6aa6713;
				};
				if ((_14212_token.get()._field_Kind == _13237_kind)) {
					if ((_13254_expr_must && ((_1429_i - _14113_last) <= 0LL))) {
						_20943da3c_Log _16121_err = _1a3e10245_makeErr(_14212_token.get()._field_Row, _14212_token.get()._field_Column, &(_14212_token.get()._field_File), jule::Str("expression missing", 18), jule::Slice<jule::Any>());;
						{ jule::Slice<_20943da3c_Log> &__jule_push_dest = _13813_errors; __jule_push_dest.push(_16121_err); };
					};
					{ jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>> &__jule_push_dest = _13713_parts; __jule_push_dest.push((*(_13219_tokens)).slice(_14113_last, _1429_i)); };
					_14113_last=static_cast<jule::I64>((_1429_i + 1LL));
				};
			}
			_iter_next_1a6aa6713:;
			++it;
			_1429_i++;
			goto _iter_begin_1a6aa6713;
		}
		_iter_end_1a6aa6713:;
	};
	if ((_14113_last < (*(_13219_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>> &__jule_push_dest = _13713_parts; __jule_push_dest.push((*(_13219_tokens)).slice(_14113_last)); };
	} else if ((!(_13254_expr_must))) {
		{ jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>> &__jule_push_dest = _13713_parts; __jule_push_dest.push(jule::Slice<jule::Ptr<_2097d15d8_Token>>()); };
	};
	__jule_func_result.__jule_result_arg0 = _13713_parts;
	__jule_func_result.__jule_result_arg1 = _13813_errors;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_2097d15d8_Token__jule_tuple_s_20943da3c_Log _1a3e1128a_parts(jule::Slice<jule::Ptr<_2097d15d8_Token>>* _18415_tokens, jule::U64 _18433_id, jule::Bool _18446_expr_must) {
	__jule_tuple_ssx_2097d15d8_Token__jule_tuple_s_20943da3c_Log __jule_func_result;
	if (((*(_18415_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>> _18913_parts = nullptr;;
	jule::Slice<_20943da3c_Log> _19013_errors = nullptr;;
	jule::I64 _19213_rangeN = 0LL;;
	jule::I64 _19313_last = 0LL;;
	{
		auto expr = _18415_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6aac97d:;
		if (it != expr_end) {
			jule::I64 _1949_i = it - expr->begin();
			jule::Ptr<_2097d15d8_Token> _19412_token = *it;
			{
				if ((_19412_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
					{
						auto &_match_expr{ _19412_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a6aad84c:;
							{
								(_19213_rangeN)++;
								goto _iter_next_1a6aac97d;
							}
						}
						else {
							_case_begin_1a6aadb27:;
							{
								(_19213_rangeN)--;
							}
						}
						_match_end_1a6aad918:;
					};
				};
				if ((_19213_rangeN > 0LL)) {
					goto _iter_next_1a6aac97d;
				};
				if ((_19412_token.get()._field_Id == _18433_id)) {
					if ((_18446_expr_must && ((_1949_i - _19313_last) <= 0LL))) {
						_20943da3c_Log _21321_err = _1a3e10245_makeErr(_19412_token.get()._field_Row, _19412_token.get()._field_Column, &(_19412_token.get()._field_File), jule::Str("expression missing", 18), jule::Slice<jule::Any>());;
						{ jule::Slice<_20943da3c_Log> &__jule_push_dest = _19013_errors; __jule_push_dest.push(_21321_err); };
					};
					{ jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>> &__jule_push_dest = _18913_parts; __jule_push_dest.push((*(_18415_tokens)).slice(_19313_last, _1949_i)); };
					_19313_last=static_cast<jule::I64>((_1949_i + 1LL));
				};
			}
			_iter_next_1a6aac97d:;
			++it;
			_1949_i++;
			goto _iter_begin_1a6aac97d;
		}
		_iter_end_1a6aac97d:;
	};
	if ((_19313_last < (*(_18415_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>> &__jule_push_dest = _18913_parts; __jule_push_dest.push((*(_18415_tokens)).slice(_19313_last)); };
	} else if ((!(_18446_expr_must))) {
		{ jule::Slice<jule::Slice<jule::Ptr<_2097d15d8_Token>>> &__jule_push_dest = _18913_parts; __jule_push_dest.push(jule::Slice<jule::Ptr<_2097d15d8_Token>>()); };
	};
	__jule_func_result.__jule_result_arg0 = _18913_parts;
	__jule_func_result.__jule_result_arg1 = _19013_errors;
	return __jule_func_result;;
}



inline jule::Str _1a3e11532_getCloseKindOfBrace(jule::Str _23024_left) {
	{
		auto &_match_expr{ _23024_left };
		
		if (_match_expr == jule::Str(")", 1)) {
			_case_begin_1a6ab15db:;
			{
				return jule::Str("(", 1);;
			}
		}
		else if (_match_expr == jule::Str("}", 1)) {
			_case_begin_1a6ab217a:;
			{
				return jule::Str("{", 1);;
			}
		}
		else if (_match_expr == jule::Str("]", 1)) {
			_case_begin_1a6ab21e1:;
			{
				return jule::Str("[", 1);;
			}
		}
		else {
			_case_begin_1a6aaea3a:;
			{
				return jule::Str();;
			}
		}
		_match_end_1a6aae9d5:;
	};
}



inline _20943da3c_Log _1a3e1191c_compilerErr(jule::Ptr<_2097d15d8_Token>* _24317_token, jule::Str* _24333_fmt, jule::Slice<jule::Any> _24346_args) {
	return _20943da3c_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*(_24317_token)).get()._field_Row, ._field_Column=(*(_24317_token)).get()._field_Column, ._field_Path=(*(_24317_token)).get()._field_File.get()._field_Path, ._field_Text=_20943de7c_Logf((*(_24333_fmt)), _24346_args), ._field_Line=_2097d7886_GetRow((*(_24317_token)).get()._field_File.ptr(), (*(_24317_token)).get()._field_Row), };;
}



inline void _1a3e11d4b_pushSuggestion(_20943da3c_Log* _25430_log, jule::Str _25441_fmt, jule::Slice<jule::Any> _25454_args) {
	_25430_log->_field_Suggestion=_20943de7c_Logf(_25441_fmt, _25454_args);
}



inline jule::Str _1a3e120e3_tokstoa(jule::Slice<jule::Ptr<_2097d15d8_Token>>* _25813_tokens) {
	jule::I64 _25913_n = 0LL;;
	{
		auto expr = _25813_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6ab4e08:;
		if (it != expr_end) {
			jule::Ptr<_2097d15d8_Token> *_26012_token = it;
			{
				_25913_n+=(*(_26012_token)).get()._field_Kind.len();
			}
			_iter_next_1a6ab4e08:;
			++it;
			goto _iter_begin_1a6ab4e08;
		}
		_iter_end_1a6ab4e08:;
	};
	jule::Str _26313_s = jule::Str::alloc(0LL, _25913_n);;
	{
		auto expr = _25813_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6ab54d0:;
		if (it != expr_end) {
			jule::Ptr<_2097d15d8_Token> *_26412_token = it;
			{
				_26313_s+=(*(_26412_token)).get()._field_Kind;
			}
			_iter_next_1a6ab54d0:;
			++it;
			goto _iter_begin_1a6ab54d0;
		}
		_iter_end_1a6ab54d0:;
	};
	return _26313_s;;
}



inline jule::Bool _1a3e22235_isPub(jule::Str* _203711_ident) {
	jule::I32 _203810_r = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _208396cd7_DecodeRuneStr((*(_203711_ident)));
		_203810_r = __jule_assign_result.__jule_result_arg0;
	});
	return _209368208_IsUpper(_203810_r);;
}



inline jule::Ptr<_1acad72cb_TypeDecl> _1a3e22ac6_buildVoidType(void) {
	return jule::new_ptr<_1acad72cb_TypeDecl>();;
}



inline jule::Ptr<_1acad72cb_TypeDecl> _1a3e22d18_buildPrimType(jule::Ptr<_2097d15d8_Token> _2322_t) {
	return jule::new_ptr<_1acad72cb_TypeDecl>(_1acad72cb_TypeDecl{._field_Token=_2322_t, ._field_Kind=jule::Any(jule::new_ptr<_1acad7892_IdentTypeDecl>(_1acad7892_IdentTypeDecl{._field_Token=_2322_t, ._field_Ident=_2322_t.get()._field_Kind, }), &__jule_any_type20)});;
}



inline __jule_tuple_bool__jule_tuple_bool _1ace4c71d_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_1a6c43ac0:;
			{
				__jule_func_result.__jule_result_arg0=_209441d4d_IsWindows(_2094d3829_Os);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_1a6c434b5:;
			{
				__jule_func_result.__jule_result_arg0=_209442106_IsDarwin(_2094d3829_Os);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_1a6c4352b:;
			{
				__jule_func_result.__jule_result_arg0=_20944239d_IsLinux(_2094d3829_Os);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_1a6c43592:;
			{
				__jule_func_result.__jule_result_arg0=_209442ea3_IsUnix(_2094d3829_Os);
			}
		}
		else {
			_case_begin_1a6c42dbb:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1a6c431c9:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1ace477d4_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_1a6c456d7:;
			{
				__jule_func_result.__jule_result_arg0=_2094426bc_IsI386(_2094d3ae3_Arch);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_1a6c4574d:;
			{
				__jule_func_result.__jule_result_arg0=_209442964_IsAmd64(_2094d3ae3_Arch);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_1a6c457b4:;
			{
				__jule_func_result.__jule_result_arg0=_209442c0b_IsArm64(_2094d3ae3_Arch);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_1a6c4582a:;
			{
				__jule_func_result.__jule_result_arg0=_2094435be_Is64Bit(_2094d3ae3_Arch);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_1a6c45891:;
			{
				__jule_func_result.__jule_result_arg0=_209443327_Is32Bit(_2094d3ae3_Arch);
			}
		}
		else {
			_case_begin_1a6c450ee:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1a6c4540c:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ace479e3_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_2093a8424_Base(_5029_p);
	jule::I64 _529_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL, (_529_n - _2093a7dd5_Ext(_5029_p).len()));;
	jule::Str _5813_a1 = jule::Str();;
	jule::Str _6113_a2 = jule::Str();;
	jule::I64 _6413_i = _2093a1285_FindLastByte(_5029_p, '_');;
	if ((_6413_i == -1LL)) {
		jule::Bool _6718_ok = false;;
		jule::Bool _6726_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ace4c71d_checkOs(_5029_p);
			_6718_ok = __jule_assign_result.__jule_result_arg0;
			_6726_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6726_exist) {
			return _6718_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ace477d4_checkArch(_5029_p);
			_6718_ok = __jule_assign_result.__jule_result_arg0;
			_6726_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6726_exist)) || _6718_ok);;
	};
	if (((_6413_i + 1LL) >= _529_n)) {
		return true;;
	};
	_5813_a1=_5029_p.slice((_6413_i + 1LL));
	(_5029_p).mut_slice(0LL, _6413_i);;
	_6413_i=static_cast<jule::I64>(_2093a1285_FindLastByte(_5029_p, '_'));
	if ((_6413_i != -1LL)) {
		_6113_a2=_5029_p.slice((_6413_i + 1LL));
	};
	if (_6113_a2.empty()) {
		jule::Bool _8818_ok = false;;
		jule::Bool _8826_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ace4c71d_checkOs(_5813_a1);
			_8818_ok = __jule_assign_result.__jule_result_arg0;
			_8826_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8826_exist) {
			return _8818_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ace477d4_checkArch(_5813_a1);
			_8818_ok = __jule_assign_result.__jule_result_arg0;
			_8826_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8826_exist)) || _8818_ok);;
	};
	jule::Bool _9614_ok = false;;
	jule::Bool _9622_exist = false;;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ace477d4_checkArch(_5813_a1);
		_9614_ok = __jule_assign_result.__jule_result_arg0;
		_9622_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9622_exist) {
		if ((!(_9614_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ace4c71d_checkOs(_6113_a2);
			_9614_ok = __jule_assign_result.__jule_result_arg0;
			_9622_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9622_exist)) || _9614_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ace4c71d_checkOs(_5813_a1);
		_9614_ok = __jule_assign_result.__jule_result_arg0;
		_9622_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9622_exist)) || _9614_ok);;
}



inline void _1ace625ce_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(_2094d3829_Os); };
	if (_209442ea3_IsUnix(_2094d3829_Os)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(jule::Str("unix", 4)); };
	};
}



inline void _1ace62832_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(_2094d3ae3_Arch); };
	if (_2094435be_Is64Bit(_2094d3ae3_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str("x64", 3)); };
	};
	if (_209443327_Is32Bit(_2094d3ae3_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str("x32", 3)); };
	};
}



inline void _1ace62ada_initVars(jule::Slice<jule::Str>* _5518_vars, _1ace622c1_CompileInfo* _5532_info) {
	_1ace625ce_setOsVars(_5518_vars);
	_1ace62832_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("production", 10)); };
	};
	if ((*(_5532_info))._field_Test) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("test", 4)); };
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1a6c513d5:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("clang", 5)); };
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1a6c5144b:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("gcc", 3)); };
			}
		}
		_match_end_1a6c5136e:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1a6c51c76:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("cpp14", 5)); };
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1a6c51cdc:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("cpp17", 5)); };
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1a6c51d53:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("cpp20", 5)); };
			}
		}
		_match_end_1a6c509de:;
	};
}



inline jule::Slice<jule::U8> _1a3e26a53_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__2082b6b4c_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			;
			_2094d2790_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _20943da3c_Log _1a3e26d0b_flatCompilerErr(jule::Str _4120_text) {
	return _20943da3c_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Text=_4120_text, };;
}



inline void _1a3e2b21c_pushPasses(jule::Ptr<_1abcdded9_Package>* _11120_p, jule::Slice<jule::Str>* _11144_passes) {
	{
		auto expr = &((*(_11120_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6c80a96:;
		if (it != expr_end) {
			jule::Ptr<_1abd59241_SymbolTable> _11217_f = *it;
			{
				_julec_label_push:;
				{
					auto expr = &(_11217_f.get()._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a6c81514:;
					if (it != expr_end) {
						_1acb29120_Pass _11416_pass = *it;
						{
							if (_11416_pass._field_Text.empty()) {
								goto _iter_next_1a6c81514;
							};
							{
								auto expr = _11144_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a6c81e2c:;
								if (it != expr_end) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_1a6c81514;
										};
									}
									_iter_next_1a6c81e2c:;
									++it;
									goto _iter_begin_1a6c81e2c;
								}
								_iter_end_1a6c81e2c:;
							};
							{ jule::Slice<jule::Str> &__jule_push_dest = (*(_11144_passes)); __jule_push_dest.push(_11416_pass._field_Text); };
						}
						_iter_next_1a6c81514:;
						++it;
						goto _iter_begin_1a6c81514;
					}
					_iter_end_1a6c81514:;
				};
			}
			_iter_next_1a6c80a96:;
			++it;
			goto _iter_begin_1a6c80a96;
		}
		_iter_end_1a6c80a96:;
	};
}



inline jule::Slice<jule::Str> _1a3e2b5a2_getAllUniquePasses(jule::Ptr<_1abcdded9_Package>* _12828_pkg, jule::Slice<jule::Ptr<_1abcdb39e_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_1a3e2b21c_pushPasses(_12828_pkg, &(_12913_passes));
	{
		auto expr = &(_12853_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6c83923:;
		if (it != expr_end) {
			jule::Ptr<_1abcdb39e_ImportInfo> _13217_u = *it;
			{
				if ((!(_13217_u.get()._field_Binded))) {
					_1a3e2b21c_pushPasses(&(_13217_u.get()._field_Package), &(_12913_passes));
				};
			}
			_iter_next_1a6c83923:;
			++it;
			goto _iter_begin_1a6c83923;
		}
		_iter_end_1a6c83923:;
	};
	return _12913_passes;;
}



inline _1ace622c1_CompileInfo _1a3e2b7a0_buildCompileInfo(void) {
	_1ace622c1_CompileInfo _14213_info = _1ace622c1_CompileInfo{._field_Prod=_207305560_Production, ._field_Test=_207304b03_Test, };;
	{
		auto &_match_expr{ _207303ecb_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1a6c84b00:;
			{
				_14213_info._field_Compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1a6c84b77:;
			{
				_14213_info._field_Compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_1a6c84a89:;
	};
	{
		auto &_match_expr{ _20730441b_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1a6c8379c:;
			{
				_14213_info._field_CppStd=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1a6c8501d:;
			{
				_14213_info._field_CppStd=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1a6c85084:;
			{
				_14213_info._field_CppStd=jule::Str("cpp20", 5);
			}
		}
		_match_end_1a6c8542a:;
	};
	return _14213_info;;
}



inline void _1a4059515_EliminateDefines(jule::Ptr<_1a3e29a01_IR>* _28526_ir) {
	jule::Ptr<_1a402505d_ObjectDeadCode> _28613_ocd = static__1a40254e2_new(_28526_ir);;
	_1a4059207_elimanate(_28613_ocd);
}



inline jule::Ptr<_1acaa47b5_Directive> _1a405989a_findDirective(jule::Slice<jule::Ptr<_1acaa47b5_Directive>>* _29123_directives, jule::Str _29154_tag) {
	{
		auto expr = _29123_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6cc307d:;
		if (it != expr_end) {
			jule::Ptr<_1acaa47b5_Directive> _29217_dr = *it;
			{
				if ((_29217_dr.get()._field_Tag.get()._field_Kind == _29154_tag)) {
					return _29217_dr;;
				};
			}
			_iter_next_1a6cc307d:;
			++it;
			goto _iter_begin_1a6cc307d;
		}
		_iter_end_1a6cc307d:;
	};
	return nullptr;;
}



inline jule::Bool _1a4059bdb_hasDirective(jule::Slice<jule::Ptr<_1acaa47b5_Directive>>* _30118_directives, jule::Str _30149_tag) {
	return (_1a405989a_findDirective(_30118_directives, _30149_tag) != nullptr);;
}



inline void _1a405d838_eliminateDeadCodeOfScope(jule::Ptr<_1abcbc935_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_1abcc0174_Label>> _2429_labels = jule::Slice<jule::Ptr<_1abcc0174_Label>>::alloc(0LL, 16LLU);;
	jule::Slice<jule::Ptr<_1abcc0460_GotoSt>> _2439_gotos = jule::Slice<jule::Ptr<_1abcc0460_GotoSt>>::alloc(0LL, 16LLU);;
	jule::Ptr<_1a405a934_scopeDeadCode> _24413_sdc = jule::new_ptr<_1a405a934_scopeDeadCode>(_1a405a934_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&(_24133_s.get()._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1abcc0174_Label>>>)((&(_2429_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1abcc0460_GotoSt>>>)((&(_2439_gotos)))), });;
	{
		_1a405d508_optimizeStmts(_24413_sdc);
	};
}



inline void _1a405dabe_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1acb221d4_Fn>>* _25433_funcs) {
	{
		auto expr = _25433_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d112ec:;
		if (it != expr_end) {
			jule::Ptr<_1acb221d4_Fn> _25517_func = *it;
			{
				{
					auto expr = &(_25517_func.get()._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a6d118a2:;
					if (it != expr_end) {
						jule::Ptr<_1acb24d85_FnIns> _25621_ins = *it;
						{
							_1a405d838_eliminateDeadCodeOfScope(_25621_ins.get()._field_Scope);
						}
						_iter_next_1a6d118a2:;
						++it;
						goto _iter_begin_1a6d118a2;
					}
					_iter_end_1a6d118a2:;
				};
			}
			_iter_next_1a6d112ec:;
			++it;
			goto _iter_begin_1a6d112ec;
		}
		_iter_end_1a6d112ec:;
	};
}



inline void _1a405dd11_eliminateFunctionsScopePackage(jule::Ptr<_1abcdded9_Package>* _26240_pkg) {
	{
		auto expr = &((*(_26240_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d11d36:;
		if (it != expr_end) {
			jule::Ptr<_1abd59241_SymbolTable> _26317_f = *it;
			{
				_1a405dabe_eliminateScopeFunctions(&(_26317_f.get()._field_Funcs));
			}
			_iter_next_1a6d11d36:;
			++it;
			goto _iter_begin_1a6d11d36;
		}
		_iter_end_1a6d11d36:;
	};
}



inline void _1a405e0a8_eliminateScopePackage(jule::Ptr<_1abcdded9_Package>* _26831_pkg) {
	_1a405dd11_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _1a405e2b7_EliminateScopes(jule::Ptr<_1a3e29a01_IR>* _27325_ir) {
	jule::I64 _27413_i = ((*(_27325_ir)).get()._field_Used.len() - 1LL);;
	for (; (_27413_i >= 0LL); (_27413_i)--) {
		{
			jule::Ptr<_1abcdb39e_ImportInfo> _27617_u = (*(_27325_ir)).get()._field_Used[_27413_i];;
			if ((!(_27617_u.get()._field_Binded))) {
				_1a405e0a8_eliminateScopePackage(&(_27617_u.get()._field_Package));
			};
		}
	_iter_next_1a6d13299:;
	}
	_iter_end_1a6d13299:;;
	_1a405e0a8_eliminateScopePackage(&((*(_27325_ir)).get()._field_Main));
}



inline jule::Bool _1acd80992_isStdPackage(jule::Str _44417_f, jule::Str _44425_p) {
	return _20939cdb9_HasPrefix(_44417_f, _2093a7b3d_Join(jule::Slice<jule::Str>::make({_2094d2c79_PathStdlib,_44425_p})));;
}



inline jule::Bool _1acd80ca0_isConstantValidConditionalCase(jule::Ptr<_1abcbcd31_If>* _44836_i) {
	{
		auto &_match_expr{ (*(_44836_i)).get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a6d8215e:;
			{
				jule::Ptr<_1ddeb4b1c_Const> _45113_c = (*(_44836_i)).get()._field_Expr.cast_ptr<_1ddeb4b1c_Const>(&__jule_any_type19);;
				return (_1ddeb8c86_IsBool(_45113_c.ptr()) && _1ddeb68dd_ReadBool(_45113_c.ptr()));;
			}
		}
		_match_end_1a6d81ee9:;
	};
	return false;;
}



inline jule::Bool _1acd81058_isUnreachableExpr(jule::Any* _45723_expr) {
	{
		auto &_match_expr{ (*(_45723_expr)) };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a6d82a77:;
			{
				jule::Ptr<_1ddeb4b1c_Const> _46013_c = (*(_45723_expr)).cast_ptr<_1ddeb4b1c_Const>(&__jule_any_type19);;
				return (_1ddeb8c86_IsBool(_46013_c.ptr()) && (!(_1ddeb68dd_ReadBool(_46013_c.ptr()))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1a6d82aee:;
			{
				jule::Ptr<_1acb0e204_BinopExprModel> _46313_m = (*(_45723_expr)).cast_ptr<_1acb0e204_BinopExprModel>(&__jule_any_type114);;
				if (_46313_m.get()._field_Op.get()._field_Kind.equal("&&", 2)) {
					return (_1acd81058_isUnreachableExpr(&(_46313_m.get()._field_Left.get()._field_Model)) || _1acd81058_isUnreachableExpr(&(_46313_m.get()._field_Right.get()._field_Model)));;
				};
			}
		}
		_match_end_1a6d8222a:;
	};
	return false;;
}



inline jule::Bool _1acd81399_isConstantValidMatchCase(jule::Ptr<_1abcc2297_Case>* _47230_case) {
	{
		auto expr = &((*(_47230_case)).get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d83da8:;
		if (it != expr_end) {
			jule::Ptr<_1abd5dc4b_Data> *_47312_expr = it;
			{
				if (((_1abd5e5ba_IsConst((*(_47312_expr)).ptr()) && _1ddeb8c86_IsBool((*(_47312_expr)).get()._field_Constant.ptr())) && _1ddeb68dd_ReadBool((*(_47312_expr)).get()._field_Constant.ptr()))) {
					return true;;
				};
			}
			_iter_next_1a6d83da8:;
			++it;
			goto _iter_begin_1a6d83da8;
		}
		_iter_end_1a6d83da8:;
	};
	return false;;
}



inline jule::Bool _1acd81641_isUnreachableConditionalCase(jule::Ptr<_1abcbcd31_If>* _48134_i) {
	return _1acd81058_isUnreachableExpr(&((*(_48134_i)).get()._field_Expr));;
}



inline jule::Bool _1acd818e9_isUnreachableMatchCase(jule::Ptr<_1abcc2297_Case>* _48528_case) {
	{
		auto expr = &((*(_48528_case)).get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d8775d:;
		if (it != expr_end) {
			jule::Ptr<_1abd5dc4b_Data> *_48612_expr = it;
			{
				if ((!(_1acd81058_isUnreachableExpr(&((*(_48612_expr)).get()._field_Model))))) {
					return false;;
				};
			}
			_iter_next_1a6d8775d:;
			++it;
			goto _iter_begin_1a6d8775d;
		}
		_iter_end_1a6d8775d:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _1acd892e7_checkForBitShiftOpt(jule::Ptr<_1acb0dc3c_OperandExprModel>* _46625_l, jule::Ptr<_1acb0dc3c_OperandExprModel>* _46648_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_1ddeb404a_IsInt(_1acca5059_Str((*(_46625_l)).get()._field_Kind.ptr())))) || (!(_1ddeb404a_IsInt(_1acca5059_Str((*(_46648_r)).get()._field_Kind.ptr())))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*(_46648_r)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a6dc2413:;
			{
				goto _match_end_1a6dc2d3c;
			}
		}
		else {
			_case_begin_1a6dc2e80:;
			{
				__jule_func_result.__jule_result_arg0 = false;
				__jule_func_result.__jule_result_arg1 = 0LLU;
				return __jule_func_result;;
			}
		}
		_match_end_1a6dc2d3c:;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>(_1ddeb738e_AsU64((*(_46648_r)).get()._field_Model.cast_ptr<_1ddeb4b1c_Const>(&__jule_any_type19).ptr()));
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _4809_j = _1dde65b67_Log2(static_cast<jule::F64>(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1)));;
	jule::U64 _4819_z = static_cast<jule::U64>(_4809_j);;
	if ((static_cast<jule::F64>(_4819_z) != _4809_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _4819_z;
	return __jule_func_result;;
}



inline jule::Bool _1acd8967c_areSameLvalueExprModel(jule::Any* _48928_l, jule::Any* _48943_r) {
	{
		auto &_match_expr{ (*(_48928_l)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a6dc5eb6:;
			{
				return ((*(_48943_r)) == (*(_48928_l)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1a6dc603d:;
			{
				{
					auto &_match_expr{ (*(_48943_r)) };
					
					if (_match_expr.type == &__jule_any_type71) {
						_case_begin_1a6dc68bd:;
						{
							goto _match_end_1a6dc6956;
						}
					}
					else {
						_case_begin_1a6dc69ab:;
						{
							return false;;
						}
					}
					_match_end_1a6dc6956:;
				};
				jule::Ptr<_1acb138e0_StructSubIdentExprModel> _50213_lsi = (*(_48928_l)).cast_ptr<_1acb138e0_StructSubIdentExprModel>(&__jule_any_type71);;
				jule::Ptr<_1acb138e0_StructSubIdentExprModel> _50313_rsi = (*(_48943_r)).cast_ptr<_1acb138e0_StructSubIdentExprModel>(&__jule_any_type71);;
				if ((_50213_lsi.get()._field_Field != _50313_rsi.get()._field_Field)) {
					return false;;
				};
				return _1acd8967c_areSameLvalueExprModel(&(_50213_lsi.get()._field_Expr.get()._field_Model), &(_50313_rsi.get()._field_Expr.get()._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1a6dc60d7:;
			{
				{
					auto &_match_expr{ (*(_48943_r)) };
					
					if (_match_expr.type == &__jule_any_type74) {
						_case_begin_1a6dc898b:;
						{
							jule::Ptr<_1acb0e5ab_UnaryExprModel> _51517_ul = (*(_48928_l)).cast_ptr<_1acb0e5ab_UnaryExprModel>(&__jule_any_type74);;
							jule::Ptr<_1acb0e5ab_UnaryExprModel> _51617_ur = (*(_48943_r)).cast_ptr<_1acb0e5ab_UnaryExprModel>(&__jule_any_type74);;
							if (((_51517_ul.get()._field_Op.get()._field_Id != _51617_ur.get()._field_Op.get()._field_Id) || (_51517_ul.get()._field_Op.get()._field_Kind != _51617_ur.get()._field_Op.get()._field_Kind))) {
								return false;;
							};
							return _1acd8967c_areSameLvalueExprModel(&(_51517_ul.get()._field_Expr.get()._field_Model), &(_51617_ur.get()._field_Expr.get()._field_Model));;
						}
					}
					_match_end_1a6dc822c:;
				};
			}
		}
		_match_end_1a6dc5d95:;
	};
	return false;;
}



inline void _1acd8b937_PushOptLevel(jule::I64 _3417_level) {
	_1acd89d86_Copy=(_3417_level >= static_cast<jule::I64>(1LL));
	_1acd8a194_Deadcode=(_3417_level >= static_cast<jule::I64>(1LL));
	_1acd8a45d_Append=(_3417_level >= static_cast<jule::I64>(1LL));
	_1acd8a76b_Math=(_3417_level >= static_cast<jule::I64>(1LL));
	_1acd8aa35_Access=(_3417_level >= static_cast<jule::I64>(1LL));
	_1acd8acee_Inline=(_3417_level >= static_cast<jule::I64>(1LL));
	_1acd8b0b8_Ptr=(_3417_level >= static_cast<jule::I64>(1LL));
	_1acd8b492_Cond=(_3417_level >= static_cast<jule::I64>(1LL));
	_1acd8b75b_Str=(_3417_level >= static_cast<jule::I64>(1LL));
}



inline void _1a406826b_detectEnabled(void) {
	_1a406628b_exprEnabled=(((_1acd8b0b8_Ptr || _1acd8a76b_Math) || _1acd8aa35_Access) || _1acd8b492_Cond);
	_1a40664ab_scopeEnabled=(((_1acd8b492_Cond || _1acd8a45d_Append) || _1acd89d86_Copy) || _1acd8b75b_Str);
}



inline void _1a408b448_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_2094d2790_Exit(1LL);
}



inline jule::U64 _1a48ccb57_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));;
}



inline jule::U64 _1a48cce65_unixYearToSeconds(jule::U64 _20122_y, jule::Bool* _20140_leap) {
	if (((_20122_y - 2LLU) <= 136LLU)) {
		jule::U64 _20317_leaps = ((_20122_y - 68LLU) >> 2LLU);;
		(*(_20140_leap))=(((_20122_y - 68LLU) & 3LLU) == 0LLU);
		if ((*(_20140_leap))) {
			(_20317_leaps)--;
		};
		return static_cast<jule::U64>(((31536000LLU * (_20122_y - 70LLU)) + (86400LLU * _20317_leaps)));;
	};
	jule::U64 _21113_leaps = 0LLU;;
	jule::U64 _21213_centuries = 0LLU;;
	jule::U64 _21313_cycles = ((_20122_y - 100LLU) / 400LLU);;
	jule::U64 _21413_rem = ((_20122_y - 100LLU) % 400LL);;
	if ((_21413_rem < 0LLU)) {
		(_21313_cycles)--;
		_21413_rem+=400LLU;
	};
	if ((_21413_rem == 0LLU)) {
		(*(_20140_leap))=true;
		_21213_centuries=0LLU;
		_21113_leaps=0LLU;
	} else {
		if ((_21413_rem >= 200LLU)) {
			if ((_21413_rem >= 300LLU)) {
				_21213_centuries=3LLU;
				_21413_rem-=300LLU;
			} else {
				_21213_centuries=2LLU;
				_21413_rem-=200LLU;
			};
		} else {
			if ((_21413_rem >= 100LLU)) {
				_21213_centuries=1LLU;
				_21413_rem-=100LLU;
			} else {
				_21213_centuries=0LLU;
			};
		};
		if ((_21413_rem == 0LLU)) {
			(*(_20140_leap))=false;
			_21113_leaps=0LLU;
		} else {
			_21113_leaps=static_cast<jule::U64>((_21413_rem >> 2LLU));
			_21413_rem%=4LL;
			(*(_20140_leap))=(_21413_rem == 0LLU);
		};
	};
	_21113_leaps+=((97LLU * _21313_cycles) + (24LLU * _21213_centuries));
	if ((*(_20140_leap))) {
		(_21113_leaps)++;
	};
	return static_cast<jule::U64>((((((_20122_y - 100LLU) * 31536000LLU) + (_21113_leaps * 86400LLU)) + 946684800LLU) + 86400LLU));;
}



inline jule::U64 _1a48cd2ea_unixMonthToSeconds(jule::U64 _25823_m, jule::Bool _25836_leap) {
	jule::U64 _26013_t = 0LLU;;
	{
		auto &_match_expr{ _25823_m };
		
		if (_match_expr == 1LL) {
			_case_begin_1a6e58840:;
			{
				_26013_t=2678400LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a6e588a6:;
			{
				_26013_t=5097600LLU;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1a6e5891c:;
			{
				_26013_t=7776000LLU;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1a6e58983:;
			{
				_26013_t=10368000LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1a6e58a0a:;
			{
				_26013_t=13046400LLU;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1a6e58a82:;
			{
				_26013_t=15638400LLU;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1a6e58b09:;
			{
				_26013_t=18316800LLU;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1a6e58b81:;
			{
				_26013_t=20995200LLU;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1a6e58c08:;
			{
				_26013_t=23587200LLU;
			}
		}
		else if (_match_expr == 10LL) {
			_case_begin_1a6e58c80:;
			{
				_26013_t=26265600LLU;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1a6e58d07:;
			{
				_26013_t=28857600LLU;
			}
		}
		_match_end_1a6e586db:;
	};
	if ((_25836_leap && (_25823_m >= 2LLU))) {
		_26013_t+=86400LLU;
	};
	return _26013_t;;
}



inline jule::Bool _1a4826111_isCopyOptimizable(jule::Ptr<_1abd5dc4b_Data>* _81623_expr) {
	if ((!((*(_81623_expr)).get()._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*(_81623_expr)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1a700a9d0:;
			{
				return false;;
			}
		}
		_match_end_1a700a97a:;
	};
	return true;;
}



inline jule::Bool _1a4826496_isIterCopyOptimizable(jule::Ptr<_1abd5dc4b_Data>* _82727_expr, jule::Ptr<_1abd1497c_Var>* _82741_v) {
	if (((!((*(_82727_expr)).get()._field_Lvalue)) && (!(_1acca6445_Mutable((*(_82727_expr)).get()._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!((*(_82741_v)).get()._field_Mutable)) && (!((*(_82727_expr)).get()._field_Mutable)));;
}



inline jule::Str _1a483acc4_decomposeCommonEsq(jule::U8 _153823_b) {
	{
		auto &_match_expr{ _153823_b };
		
		if (_match_expr == '\\') {
			_case_begin_1a70ad643:;
			{
				return jule::Str("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1a70a75c6:;
			{
				return jule::Str("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1a70ad511:;
			{
				return jule::Str("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1a70ad104:;
			{
				return jule::Str("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1a70ad16a:;
			{
				return jule::Str("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1a70ad1d1:;
			{
				return jule::Str("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1a70ad247:;
			{
				return jule::Str("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1a70ad6a9:;
			{
				return jule::Str("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1a70ad720:;
			{
				return jule::Str("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1a70ad786:;
			{
				return jule::Str("\\v", 2);;
			}
		}
		else {
			_case_begin_1a70ad005:;
			{
				return jule::Str();;
			}
		}
		_match_end_1a70acdc3:;
	};
}



inline jule::Str _1a483b0b0_sbtoa(jule::U8 _156510_b) {
	if ((_156510_b == 0LLU)) {
		return jule::Str("\\x00", 4);;
	};
	if ((_156510_b < 128LLU)) {
		jule::Str _157013_seq = _1a483acc4_decomposeCommonEsq(_156510_b);;
		if ((!(_157013_seq.empty()))) {
			return _157013_seq;;
		};
		if (((32LL <= _156510_b) && (_156510_b <= 126LLU))) {
			return jule::Str::from_byte(_156510_b);;
		};
	};
	jule::Str _15789_seq = _1ddea4876_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_156510_b)), 8LL);;
	if ((_15789_seq.len() == 2LL)) {
		return (jule::Str("\\0", 2) + _15789_seq);;
	};
	return (jule::Str("\\", 1) + _15789_seq);;
}



inline jule::Str _1a483b357_cstrBytes(jule::Slice<jule::U8> _158514_bytes) {
	jule::Str _158613_lit = jule::Str::alloc(0LL, _158514_bytes.len());;
	{
		auto expr = &(_158514_bytes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a70b33e5:;
		if (it != expr_end) {
			jule::U8 *_158712_b = it;
			{
				_158613_lit+=_1a483b0b0_sbtoa((*(_158712_b)));
			}
			_iter_next_1a70b33e5:;
			++it;
			goto _iter_begin_1a70b33e5;
		}
		_iter_end_1a70b33e5:;
	};
	return _158613_lit;;
}



inline jule::Str _1a483b676_cstrLit(jule::Slice<jule::U8> _159312_bytes) {
	return ((jule::Str("\"", 1) + _1a483b357_cstrBytes(_159312_bytes)) + jule::Str("\"", 1));;
}



inline jule::Str _1a483b984_ftoa(jule::F64 _15979_f, jule::I64 _159717_bitsize) {
	if ((_159717_bitsize != 32LL)) {
		if ((_15979_f == static_cast<jule::F64>(static_cast<jule::I64>(_15979_f)))) {
			return _1a483bc2b_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_15979_f)));;
		};
		if ((_15979_f == static_cast<jule::F64>(static_cast<jule::U64>(_15979_f)))) {
			return _1a483bec3_utoa(static_cast<jule::U64>(static_cast<jule::U64>(_15979_f)));;
		};
	};
	jule::Str _160613_m = _1dde8e4cb_FmtFloat(_15979_f, 'f', -1LL, _159717_bitsize);;
	if ((!(_2093a2b16_Contains(_160613_m, jule::Str(".", 1))))) {
		(_160613_m).append(".0", 2);
	};
	return _160613_m;;
}



inline jule::Str _1a483bc2b_itoa(jule::I64 _16139_x) {
	{
		
		if ((_16139_x == jule::MAX_I64)) {
			_case_begin_1a70b686b:;
			{
				return jule::Str("jule::MAX_I64", 13);;
			}
		}
		else if ((_16139_x == jule::MIN_I64)) {
			_case_begin_1a70b6948:;
			{
				return jule::Str("jule::MIN_I64", 13);;
			}
		}
		_match_end_1a70b677d:;
	};
	jule::Str _16219_fmt = _1ddea4c0b_FmtInt(_16139_x, 10LL);;
	if (_2094435be_Is64Bit(jule::Str("arm64", 5))) {
		return (_16219_fmt + jule::Str("LL", 2));;
	};
	return (_16219_fmt + jule::Str("L", 1));;
}



inline jule::Str _1a483bec3_utoa(jule::U64 _16289_x) {
	{
		
		if ((_16289_x == jule::MAX_U64)) {
			_case_begin_1a70b8241:;
			{
				return jule::Str("jule::MAX_U64", 13);;
			}
		}
		_match_end_1a70b7b14:;
	};
	jule::Str _16349_fmt = _1ddea4876_FmtUint(_16289_x, 10LL);;
	if (_2094435be_Is64Bit(jule::Str("arm64", 5))) {
		return (_16349_fmt + jule::Str("LLU", 3));;
	};
	return (_16349_fmt + jule::Str("LU", 2));;
}



inline jule::Bool _1a483c37a_isForwarded(jule::Ptr<_1abcbc935_Scope>* _164117_s) {
	jule::Any _16429_last = (*(_164117_s)).get()._field_Stmts[((*(_164117_s)).get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _16429_last };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1a70b9055:;
			{
				{
					auto &_match_expr{ _16429_last.cast_ptr<_1abd5dc4b_Data>(&__jule_any_type24).get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1a70ba298:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1a70babc2:;
						{
							return false;;
						}
					}
					_match_end_1a70ba919:;
				};
			}
		}
		else {
			_case_begin_1a70ba045:;
			{
				return true;;
			}
		}
		_match_end_1a70b9e68:;
	};
}



inline jule::Bool _1a483c644_isBuiltinCallHasDebuginf(jule::Ptr<_1acb1106e_FnCallExprModel>* _165630_m) {
	if ((!(_1acb2621b_IsBuiltin((*(_165630_m)).get()._field_Func.ptr())))) {
		return false;;
	};
	{
		auto &_match_expr{ (*(_165630_m)).get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1a70badd1:;
			{
				jule::Ptr<_1acb1499b_CommonSubIdentExprModel> _166213_csie = (*(_165630_m)).get()._field_Expr.cast_ptr<_1acb1499b_CommonSubIdentExprModel>(&__jule_any_type73);;
				return _166213_csie.get()._field_Ident.equal("swap", 4);;
			}
		}
		else {
			_case_begin_1a70bb596:;
			{
				return false;;
			}
		}
		_match_end_1a70bb882:;
	};
}



inline jule::Bool _1a483c875_isExprComesFromBind(jule::Ptr<_1abd5dc4b_Data>* _166925_d) {
	{
		auto &_match_expr{ (*(_166925_d)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a70bc3dd:;
			{
				return (*(_166925_d)).get()._field_Model.cast_ptr<_1abd1497c_Var>(&__jule_any_type8).get()._field_Binded;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1a70bce49:;
			{
				return (*(_166925_d)).get()._field_Model.cast_ptr<_1acb138e0_StructSubIdentExprModel>(&__jule_any_type71).get()._field_Owner.get()._field_Decl.get()._field_Binded;;
			}
		}
		else {
			_case_begin_1a70bbb29:;
			{
				return false;;
			}
		}
		_match_end_1a70bbac4:;
	};
}



inline jule::Bool _1a483cb1c_isAny(jule::Ptr<_1acca4ba2_TypeKind>* _168115_t) {
	if ((_1acca7d70_TypeEnum((*(_168115_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1accac407_Prim> _16859_prim = _1acca73be_Prim((*(_168115_t)).ptr());;
	return ((_16859_prim != nullptr) && _1accb086c_IsAny(_16859_prim.ptr()));;
}



inline void _1a48e140c_iterFiles(jule::Ptr<_1abcdded9_Package>* _136719_pkg, jule::Fn<void(jule::Ptr<_1abd59241_SymbolTable>*)> _136734_f) {
	{
		auto expr = &((*(_136719_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a723a935:;
		if (it != expr_end) {
			jule::Ptr<_1abd59241_SymbolTable> _136817_file = *it;
			{
				_136734_f(&(_136817_file));
			}
			_iter_next_1a723a935:;
			++it;
			goto _iter_begin_1a723a935;
		}
		_iter_end_1a723a935:;
	};
}



inline jule::Str _1a48e16e8_concatAllParts(jule::Slice<jule::Ptr<_2097d15d8_Token>> _137419_parts) {
	jule::I64 _137513_n = 0LL;;
	{
		auto expr = &(_137419_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a723ba24:;
		if (it != expr_end) {
			jule::Ptr<_2097d15d8_Token> *_137612_part = it;
			{
				_137513_n+=(*(_137612_part)).get()._field_Kind.len();
			}
			_iter_next_1a723ba24:;
			++it;
			goto _iter_begin_1a723ba24;
		}
		_iter_end_1a723ba24:;
	};
	if ((_137513_n == 0LL)) {
		return jule::Str();;
	};
	jule::Str _138213_s = jule::Str::alloc(0LL, _137513_n);;
	{
		auto expr = &(_137419_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a723b3c5:;
		if (it != expr_end) {
			jule::Ptr<_2097d15d8_Token> *_138312_p = it;
			{
				_138213_s+=(*(_138312_p)).get()._field_Kind;
			}
			_iter_next_1a723b3c5:;
			++it;
			goto _iter_begin_1a723b3c5;
		}
		_iter_end_1a723b3c5:;
	};
	return _138213_s;;
}



inline jule::Bool _1a48e1a39_containsTraitMethod(jule::Ptr<_1acb34405_Trait>* _139029_t, jule::Str* _139041_ident) {
	{
		auto expr = &((*(_139029_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a723d471:;
		if (it != expr_end) {
			jule::Ptr<_1acb221d4_Fn> _139112_m = *it;
			{
				if ((_139112_m.get()._field_Ident == (*(_139041_ident)))) {
					return true;;
				};
			}
			_iter_next_1a723d471:;
			++it;
			goto _iter_begin_1a723d471;
		}
		_iter_end_1a723d471:;
	};
	return false;;
}



inline void _1a48e1d36_pushMethodsFromInherit(jule::Ptr<_1acb34405_Trait>* _140232_dest, jule::Ptr<_1acb34405_Trait>* _140251_src) {
	_1a48e2111_pushMethodsFromInherits(_140232_dest, _140251_src);
	{
		auto expr = &((*(_140251_src)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a723e62b:;
		if (it != expr_end) {
			jule::Ptr<_1acb221d4_Fn> _140417_m = *it;
			{
				if ((!(_1a48e1a39_containsTraitMethod(_140232_dest, &(_140417_m.get()._field_Ident))))) {
					{ jule::Slice<jule::Ptr<_1acb221d4_Fn>> &__jule_push_dest = (*(_140232_dest)).get()._field_Methods; __jule_push_dest.push(_140417_m); };
				};
			}
			_iter_next_1a723e62b:;
			++it;
			goto _iter_begin_1a723e62b;
		}
		_iter_end_1a723e62b:;
	};
}



inline void _1a48e2111_pushMethodsFromInherits(jule::Ptr<_1acb34405_Trait>* _141333_dest, jule::Ptr<_1acb34405_Trait>* _141352_src) {
	{
		auto expr = &((*(_141352_src)).get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a723e94a:;
		if (it != expr_end) {
			jule::Ptr<_1accaba55_TypeSymbol> _141417_inh = *it;
			{
				jule::Ptr<_1acb34405_Trait> _141517_t2 = _1acca8a85_Trait(_141417_inh.get()._field_Kind.ptr());;
				_1a48e1d36_pushMethodsFromInherit(_141333_dest, &(_141517_t2));
			}
			_iter_next_1a723e94a:;
			++it;
			goto _iter_begin_1a723e94a;
		}
		_iter_end_1a723e94a:;
	};
}



inline jule::Ptr<_1acaa47b5_Directive> _1a490032d_findDirective(jule::Slice<jule::Ptr<_1acaa47b5_Directive>>* _46623_directives, jule::Str _46654_tag) {
	{
		auto expr = _46623_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a732856c:;
		if (it != expr_end) {
			jule::Ptr<_1acaa47b5_Directive> _46717_dr = *it;
			{
				if ((_46717_dr.get()._field_Tag.get()._field_Kind == _46654_tag)) {
					return _46717_dr;;
				};
			}
			_iter_next_1a732856c:;
			++it;
			goto _iter_begin_1a732856c;
		}
		_iter_end_1a732856c:;
	};
	return nullptr;;
}



inline jule::Bool _1a49006b3_hasDirective(jule::Slice<jule::Ptr<_1acaa47b5_Directive>>* _47618_directives, jule::Str _47649_tag) {
	return (_1a490032d_findDirective(_47618_directives, _47649_tag) != nullptr);;
}



inline jule::Bool _1a490095a_shouldInitialized(jule::Ptr<_1acca4ba2_TypeKind>* _48327_t) {
	jule::Ptr<_1accac407_Prim> _4849_prim = _1acca73be_Prim((*(_48327_t)).ptr());;
	if ((_4849_prim != nullptr)) {
		return ((!(_1accb086c_IsAny(_4849_prim.ptr()))) && (!(_1accb0608_IsStr(_4849_prim.ptr()))));;
	};
	{
		
		if ((_1acca7633_Sptr((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1a732b284:;
			{
				return false;;
			}
		}
		else if ((_1acca8ce9_Map((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1a732ad77:;
			{
				return false;;
			}
		}
		else if ((_1acca8348_Slc((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1a732adee:;
			{
				return false;;
			}
		}
		else if ((_1acca8a85_Trait((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1a732b00e:;
			{
				return false;;
			}
		}
		else if ((_1acca85ac_Fn((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1a732b075:;
			{
				return false;;
			}
		}
		else if ((_1acca80d4_Arr((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1a732b0db:;
			{
				jule::Ptr<_1accb3760_Arr> _50017_arr = _1acca80d4_Arr((*(_48327_t)).ptr());;
				return _1a490095a_shouldInitialized(&(_50017_arr.get()._field_Elem));;
			}
		}
		else if ((_1acca8821_Struct((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1a732b152:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1a7328abc:;
			{
				return true;;
			}
		}
		_match_end_1a732a629:;
	};
}



inline void _2094d6b18_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _2094d6d6b_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_2094d6b18_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I64 _4113_max = _2094d693c_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_2094d693c_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a73b7232:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_4212_k = it;
			{
				jule::I64 _4313_n = (*(_4212_k))[0LL].len();;
				if ((_4313_n > _4113_max)) {
					_4113_max=_4313_n;
				};
			}
			_iter_next_1a73b7232:;
			++it;
			goto _iter_begin_1a73b7232;
		}
		_iter_end_1a73b7232:;
	};
	jule::Str _4913_s = jule::Str();;
	;
	{
		auto expr = &(_2094d693c_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a73b8860:;
		if (it != expr_end) {
			jule::I64 _519_i = it - expr->begin();
			jule::Array<jule::Str,2> *_5112_part = it;
			{
				_4913_s+=(*(_5112_part))[0LL];
				_4913_s+=_20939c649_Repeat(jule::Str(" ", 1), static_cast<jule::I64>(((_4113_max - (*(_5112_part))[0LL].len()) + 5LL)));
				_4913_s+=(*(_5112_part))[1LL];
				if (((_519_i + 1LL) < 5LL)) {
					(_4913_s).append("\n", 1);
				};
			}
			_iter_next_1a73b8860:;
			++it;
			_519_i++;
			goto _iter_begin_1a73b8860;
		}
		_iter_end_1a73b8860:;
	};
	jule::outln(_4913_s);
}



inline void _2094d707a_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_2094d6b18_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str("jule0.0.15 @master", 18));
}



inline void _2094d7267_toolDistos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	jule::out(jule::Str("windows", 7));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("linux", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("darwin", 6));
	jule::outln(jule::Str());
}



inline void _2094d73cc_toolDistarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	jule::out(jule::Str("amd64", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("i386", 4));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("arm64", 5));
	jule::outln(jule::Str());
}



inline void _2094d75db_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_2094d6b18_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1059_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1059_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_1a73be316:;
			{
				_2094d7267_toolDistos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_1a73be091:;
			{
				_2094d73cc_toolDistarch();
			}
		}
		else {
			_case_begin_1a73bd6de:;
			{
				_2094d6b18_printErrorMessage((jule::Str("undefined command: ", 19) + _1059_cmd));
			}
		}
		_match_end_1a73bdb1d:;
	};
}



inline void _2094d77ea_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_2094d6b18_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str("julec version: jule0.0.15 @master", 33));
	jule::outln(jule::Str("architecture: arm64", 19));
	jule::outln(jule::Str("operating system: windows", 25));
	jule::outln((jule::Str("default compiler: ", 18) + _207303ecb_Compiler));
	jule::outln((jule::Str("default C++ standard: ", 22) + _20730441b_CppStd));
}



inline void _2094d7ad6_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_2094d6b18_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_1a73c2506:;
			{
				({
					auto except = static__2082b6e9e_Write(jule::Str("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_2094d6b18_printErrorMessage(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1a73c1e73:;
			{
				_2094d6b18_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1a73c211b:;
	};
}



inline jule::Bool _2094d7d7d_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_1a73c25a0:;
			{
				_2094d6d6b_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_1a73c3a46:;
			{
				_2094d707a_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_1a73c3aac:;
			{
				_2094d75db_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_1a73c331a:;
			{
				_2094d77ea_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_1a73c3381:;
			{
				_2094d7ad6_mod(_15320_args);
			}
		}
		else {
			_case_begin_1a73c32a4:;
			{
				return false;;
			}
		}
		_match_end_1a73c2c76:;
	};
	return true;;
}



inline void _2094d7ee3_showInfo(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18913_args = _2084512ae_Args();;
	if ((_18913_args.len() < 2LL)) {
		_2094d7ee3_showInfo();
		return;;
	};
	if (_2094d7d7d_processCommand(&(_18913_args))) {
		return;;
	};
	_1a4960976_compileCommand(&(_18913_args));
}



inline void _2094d890b_enableVtp(void) {
	jule::Uintptr _199_hOut = _2082924a7_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551605LLU));;
	if ((_199_hOut == jule::MAX_U64)) {
		return;;
	};
	jule::I64 _2413_dwMode = 0LL;;
	if ((!(_20829481c_GetConsoleMode(_199_hOut, &(_2413_dwMode))))) {
		return;;
	};
	_2413_dwMode|=4LL;
	_208294dd3_SetConsoleMode(_199_hOut, _2413_dwMode);
}



inline void _2094d8ab5_init(void) {
	_2094d890b_enableVtp();
}



inline void _1a495c9c8_init(void) {
	_207303ecb_Compiler=jule::Str("clang", 5);
}



inline jule::Ptr<_2082b61e0_File> _1a495cc81_openOutput(jule::Str* _4316_path) {
	jule::Str _449_dir = _2093a8798_Dir((*(_4316_path)));;
	({
		auto except = static__2093a9c0b_Of(_449_dir);
		if (!except.ok()) {
			({
				auto except = static__2093a918e_Create(_449_dir);
				if (!except.ok()) {
					_1a408b448_Throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__2082b68a5_Create((*(_4316_path)));
		(except.ok()) ? (except.result) : ({
			_1a408b448_Throw(jule::Str("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1a495cde6_clearObjects(void) {
	({
		auto except = static__208399acb_Remove(_1a495e007_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__2093a939d_Remove(_1a495c2be_OutDir);
}



inline void _1a495d1e3_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_2094cac94_Cmd> _7313_cmd = static__2094cb1a1_New(_7214_compiler);;
	_7313_cmd.get()._field_Args=_2093a27c5_Split(_7229_compilerCmd, jule::Str(" ", 1), -1LL);
	({
		auto except = _2094cb37c_Spawn(_7313_cmd.ptr());
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1a73caa2b:;
					{
						static__1a4087a3d_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1a73cac90:;
					{
						static__1a4087a3d_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1a73cab5d:;
					{
						static__1a4087a3d_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_1a73caab4:;
			};
			_1a408b448_Throw(jule::Str());
		}
	});
	jule::I64 _869_status = ({
		auto except = _2094cb7bc_Wait(_7313_cmd.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:86:18"));
		(except.result);
	});;
	if ((_869_status != 0LL)) {
		jule::Str _8813_errorMessage = ((jule::Str("\n>>> your backend compiler (", 28) + _207303ecb_Compiler) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1a4087a3d_Print(jule::Str("\033[31m", 5), _8813_errorMessage);
		_1a408b448_Throw(jule::Str());
	};
	_1a495cde6_clearObjects();
}



inline jule::Bool _1a495d48a_isCppSourceFile(jule::Str _9920_path) {
	jule::I64 _1009_offset = _2093a1285_FindLastByte(_9920_path, '.');;
	if ((_1009_offset == -1LL)) {
		return false;;
	};
	return _209431568_IsValidCppExt(_9920_path.slice(_1009_offset));;
}



inline void _1a495d699_pushCompCmdClang(jule::Str* _10726_cmd) {
	((*(_10726_cmd))).append("-Wno-everything ", 16);
	((*(_10726_cmd))).append("--std=", 6);
	{
		auto &_match_expr{ _20730441b_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1a73c960c:;
			{
				((*(_10726_cmd))).append("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1a73ce788:;
			{
				((*(_10726_cmd))).append("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1a73ce7ee:;
			{
				((*(_10726_cmd))).append("c++20", 5);
			}
		}
		_match_end_1a73ce579:;
	};
	((*(_10726_cmd))).append(" ", 1);
	if (_207305560_Production) {
		((*(_10726_cmd))).append("-O3 ", 4);
		((*(_10726_cmd))).append("-flto ", 6);
		((*(_10726_cmd))).append("-DNDEBUG ", 9);
		((*(_10726_cmd))).append("-fomit-frame-pointer ", 21);
	} else {
		((*(_10726_cmd))).append("-O0 ", 4);
	};
}



inline void _1a495d8a8_pushCompCmdGcc(jule::Str* _13324_cmd) {
	((*(_13324_cmd))).append("-w ", 3);
	((*(_13324_cmd))).append("--std=", 6);
	{
		auto &_match_expr{ _20730441b_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1a73d1317:;
			{
				((*(_13324_cmd))).append("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1a73d1636:;
			{
				((*(_13324_cmd))).append("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1a73d169c:;
			{
				((*(_13324_cmd))).append("c++20", 5);
			}
		}
		_match_end_1a73d1438:;
	};
	((*(_13324_cmd))).append(" ", 1);
	if (_207305560_Production) {
		((*(_13324_cmd))).append("-O3 ", 4);
		((*(_13324_cmd))).append("-DNDEBUG ", 9);
		((*(_13324_cmd))).append("-fomit-frame-pointer ", 21);
	} else {
		((*(_13324_cmd))).append("-O0 ", 4);
	};
}



inline __jule_tuple_str__jule_tuple_str _1a495dd09_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1a3e29a01_IR>* _15936_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_16010_compiler = &(_2073041eb_CompilerPath);;
	jule::Str _16113_cmd = jule::Str::alloc(0LL, 64LLU);;
	{
		auto &_match_expr{ _207303ecb_Compiler };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1a73d37e2:;
			{
				_1a495d8a8_pushCompCmdGcc(&(_16113_cmd));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1a73d3858:;
			{
				_1a495d699_pushCompCmdClang(&(_16113_cmd));
			}
		}
		_match_end_1a73d3b77:;
	};
	{
		auto expr = &((*(_15936_ir)).get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a73d45e5:;
		if (it != expr_end) {
			jule::Ptr<_1abcdb39e_ImportInfo> *_17112_u = it;
			{
				if (((*(_17112_u)).get()._field_Binded && _1a495d48a_isCppSourceFile((*(_17112_u)).get()._field_Path))) {
					_16113_cmd+=(*(_17112_u)).get()._field_Path;
					(_16113_cmd).append(" ", 1);
				};
			}
			_iter_next_1a73d45e5:;
			++it;
			goto _iter_begin_1a73d45e5;
		}
		_iter_end_1a73d45e5:;
	};
	if ((!(_1a495c81e_Out.empty()))) {
		(_16113_cmd).append("-o ", 3);
		_16113_cmd+=_1a495c81e_Out;
		(_16113_cmd).append(" ", 1);
	};
	_16113_cmd+=_15918_sourcePath;
	{
		auto expr = &((*(_15936_ir)).get()._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a73d4a79:;
		if (it != expr_end) {
			jule::Str *_18612_pass = it;
			{
				(_16113_cmd).append(" ", 1);
				_16113_cmd+=(*(_18612_pass));
			}
			_iter_next_1a73d4a79:;
			++it;
			goto _iter_begin_1a73d4a79;
		}
		_iter_end_1a73d4a79:;
	};
	if (_2094d3829_Os.equal("windows", 7)) {
		(_16113_cmd).append(" -lshell32", 10);
	};
	__jule_func_result.__jule_result_arg0 = (*(_16010_compiler));
	__jule_func_result.__jule_result_arg1 = _16113_cmd;
	return __jule_func_result;;
}



inline jule::Str _1a495e007_getCompilePath(void) {
	return _2093a7b3d_Join(jule::Slice<jule::Str>::make({_1a495c2be_OutDir,_1a495c555_OutName}));;
}



inline void _1a495e249_applyTargetIndependentOptimizations(jule::Ptr<_1a3e29a01_IR>* _20545_ir) {
	jule::Ptr<_1a4066654_Optimizer> _20613_opt = static__1a4066ab6_New(_20545_ir);;
	_1a4068007_Optimize(_20613_opt.ptr());
}



inline void _1a495e3ae_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _207303ecb_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1a73d7a05:;
			{
				_1a408b448_Throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1a73d76d6:;
			{
				if (_2073041eb_CompilerPath.empty()) {
					_2073041eb_CompilerPath=jule::Str("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1a73d774c:;
			{
				if (_2073041eb_CompilerPath.empty()) {
					_2073041eb_CompilerPath=jule::Str("g++", 3);
				};
			}
		}
		else {
			_case_begin_1a73d7670:;
			{
				_1a408b448_Throw((jule::Str("invalid option value for --compiler: ", 37) + _207303ecb_Compiler));
			}
		}
		_match_end_1a73d74b6:;
	};
}



inline void _1a495e579_checkTargetArch(jule::Str _22720_arch) {
	if ((((!_22720_arch.equal("amd64", 5)) && (!_22720_arch.equal("arm64", 5))) && (!_22720_arch.equal("i386", 4)))) {
		_1a408b448_Throw((jule::Str("--target: unsupported/undefined architecture: ", 46) + _22720_arch));
	};
}



inline void _1a495e788_checkTargetOs(jule::Str _23518_os) {
	if ((((!_23518_os.equal("windows", 7)) && (!_23518_os.equal("linux", 5))) && (!_23518_os.equal("darwin", 6)))) {
		_1a408b448_Throw((jule::Str("--target: unsupported/undefined operating system: ", 50) + _23518_os));
	};
}



inline void _1a495e997_checkTargetFlag(jule::Str* _24321_target) {
	if ((*(_24321_target)).empty()) {
		_1a408b448_Throw(jule::Str("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2489_parts = _2093a27c5_Split((*(_24321_target)), jule::Str("-", 1), -1LL);;
	if ((_2489_parts.len() != 2LL)) {
		_1a408b448_Throw((jule::Str("--target: undefined platform target format: ", 44) + (*(_24321_target))));
	};
	jule::Str _25310_os;;
	jule::Str _25314_arch;;
	({
		jule::Str ___jule_assign_arg = _2489_parts[0LL];
		jule::Str _1___jule_assign_arg = _2489_parts[1LL];
		_25310_os = ___jule_assign_arg;
		_25314_arch = _1___jule_assign_arg;
	});
	if ((!_25310_os.equal("native", 6))) {
		_1a495e788_checkTargetOs(_25310_os);
		_2094d3829_Os=_25310_os;
	};
	if ((!_25314_arch.equal("native", 6))) {
		_1a495e579_checkTargetArch(_25314_arch);
		_2094d3ae3_Arch=_25314_arch;
	};
	_1ddea90a6_UpdateTarget();
}



inline void _1a495eba6_checkOptFlag(jule::Str* _26618_opt) {
	if ((*(_26618_opt)).empty()) {
		_1a408b448_Throw(jule::Str("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_26618_opt)) };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_1a73ddb4e:;
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_1a73de0e4:;
			{
				_1acd8b937_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1a73dd9a6:;
			{
				_1a408b448_Throw((jule::Str("--opt: invalid optimization level: ", 35) + (*(_26618_opt))));
			}
		}
		_match_end_1a73ddc3c:;
	};
}



inline void _1a496002a_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _20730441b_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1a73de15a:;
			{
				goto _match_end_1a73ded1a;
			}
		}
		else {
			_case_begin_1a73de7dc:;
			{
				_1a408b448_Throw((jule::Str("--cppstd: invalid cpp standard: ", 32) + _20730441b_CppStd));
			}
		}
		_match_end_1a73ded1a:;
	};
}



inline jule::Slice<jule::Str> _1a49602b1_checkFlags(jule::Slice<jule::Str>* _29116_args) {
	jule::Str _29213_opt = jule::Str("L0", 2);;
	jule::Str _29313_target = jule::Str("native-native", 13);;
	jule::Ptr<_1a495783b_FlagSet> _29513_fs = static__1a4957b27_New();;
	_1a73e1a53_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29213_opt)))), jule::Str("opt", 3), 0LL, jule::Str("Optimization level", 18));
	_1a73e1a53_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29313_target)))), jule::Str("target", 6), 0LL, jule::Str("Target system", 13));
	_1a73e1a53_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1a495c81e_Out)))), jule::Str("out", 3), 'o', jule::Str("Output identifier", 17));
	_1a73e9907_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20730463b_Shadowing)))), jule::Str("shadowing", 9), 0LL, jule::Str("Allow shadowing", 15));
	_1a73e9907_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20730485b_Transpilation)))), jule::Str("transpile", 9), 't', jule::Str("Transpile code", 14));
	_1a73e1a53_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_207303ecb_Compiler)))), jule::Str("compiler", 8), 0LL, jule::Str("Backend compiler", 16));
	_1a73e1a53_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2073041eb_CompilerPath)))), jule::Str("compiler-path", 13), 0LL, jule::Str("Path of backend compiler", 24));
	_1a73e9907_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_207305560_Production)))), jule::Str("production", 10), 'p', jule::Str("Compile for production", 22));
	_1a73e9907_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_207304dbc_RC)))), jule::Str("disable-rc", 10), 0LL, jule::Str("Disable reference counting", 26));
	_1a73e9907_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_207305296_Safety)))), jule::Str("disable-safety", 14), 0LL, jule::Str("Disable safety", 14));
	_1a73e1a53_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_20730441b_CppStd)))), jule::Str("cppstd", 6), 0LL, jule::Str("C++ standard", 12));
	_1a73e9907_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1acd89d86_Copy)))), jule::Str("opt-copy", 8), 0LL, jule::Str("Copy optimization", 17));
	_1a73e9907_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1acd8a194_Deadcode)))), jule::Str("opt-deadcode", 12), 0LL, jule::Str("Deadcode optimization", 21));
	_1a73e9907_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1acd8a45d_Append)))), jule::Str("opt-append", 10), 0LL, jule::Str("Append optimization", 19));
	_1a73e9907_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1acd8a76b_Math)))), jule::Str("opt-math", 8), 0LL, jule::Str("Math optimization", 17));
	_1a73e9907_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1acd8aa35_Access)))), jule::Str("opt-access", 10), 0LL, jule::Str("Access optimization", 19));
	_1a73e9907_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1acd8acee_Inline)))), jule::Str("opt-inline", 10), 0LL, jule::Str("Inline optimization", 19));
	_1a73e9907_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1acd8b0b8_Ptr)))), jule::Str("opt-ptr", 7), 0LL, jule::Str("Pointer optimizations", 21));
	_1a73e9907_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1acd8b492_Cond)))), jule::Str("opt-cond", 8), 0LL, jule::Str("Conditional optimizations", 25));
	_1a73e9907_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1acd8b75b_Str)))), jule::Str("opt-str", 7), 0LL, jule::Str("String optimizations", 20));
	jule::Slice<jule::Str> _31813_content = ({
		auto except = _1a49588e7_Parse(_29513_fs.ptr(), (*(_29116_args)));
		(except.ok()) ? (except.result) : ({
			_1a408b448_Throw(except.error.cast<jule::Str>(&__jule_any_type5));

			nullptr;
		});
	});;
	_1a495e3ae_checkCompilerFlag();
	_1a496002a_checkCppStdFlag();
	_1a495e997_checkTargetFlag(&(_29313_target));
	_1a495eba6_checkOptFlag(&(_29213_opt));
	return _31813_content;;
}



inline void _1a49604c0_setupSemaFlags(jule::I64* _33124_flags) {
	if (_20730463b_Shadowing) {
		(*(_33124_flags))|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1a3e29a01_IR> _1a4960767_buildIr(jule::Slice<jule::Str>* _33713_args) {
	jule::Slice<jule::Str> _3389_content = _1a49602b1_checkFlags(_33713_args);;
	jule::I64 _34013_semaFlags = static_cast<jule::I64>(0LL);;
	_1a49604c0_setupSemaFlags(&(_34013_semaFlags));
	if ((_3389_content.len() == 0LL)) {
		_1a408b448_Throw(_20943de7c_Logf(jule::Str("missing compile path", 20), jule::Slice<jule::Any>()));
	} else if ((_3389_content.len() > 1LL)) {
		_1a408b448_Throw((jule::Str("undefined content: ", 19) + _3389_content[1LL]));
	};
	jule::Str _34814_path;;
	jule::Bool _34820_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2093a817c_Abs(_3389_content[0LL]);
		_34814_path = __jule_assign_result.__jule_result_arg0;
		_34820_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34820_ok))) {
		_1a408b448_Throw(jule::Str("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_2082b8830_Status> _3549_inf = ({
		auto except = static__2093a9c0b_Of(_2094d2c79_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1a408b448_Throw(_20943de7c_Logf(jule::Str("standard library directory not found", 36), jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_2082b8830_Status>(nullptr);});
	});;
	if ((!(_2082b8be8_IsDir(_3549_inf.ptr())))) {
		_1a408b448_Throw(_20943de7c_Logf(jule::Str("standard library directory not found", 36), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1a3e29a01_IR> _36214_ir;;
	jule::Slice<_20943da3c_Log> _36218_logs;;
	({
		__jule_tuple_x_1a3e29a01_IR__jule_tuple_s_20943da3c_Log __jule_assign_result = static__1a3e29e41_Build(_34814_path, _34013_semaFlags);
		_36214_ir = __jule_assign_result.__jule_result_arg0;
		_36218_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_36214_ir == nullptr) && (_36218_logs == nullptr))) {
		_1a408b448_Throw(_20943de7c_Logf(jule::Str("there is no Jule source code in package: @", 42), jule::Slice<jule::Any>::make({jule::Any(_34814_path, &__jule_any_type5)})));
	};
	if ((_36218_logs != nullptr)) {
		static__1a408a9ca_PrintLogs(&(_36218_logs));
		_1a408b448_Throw(jule::Str());
	};
	return _36214_ir;;
}



inline void _1a4960976_compileCommand(jule::Slice<jule::Str>* _37724_args) {
	(*(_37724_args))=(*(_37724_args)).slice(1LL);
	if ((*(_37724_args))[0LL].equal("test", 4)) {
		_207304b03_Test=true;
		(*(_37724_args))=(*(_37724_args)).slice(1LL);
	};
	jule::Ptr<_1a3e29a01_IR> _38313_ir = _1a4960767_buildIr(_37724_args);;
	;
	if ((!(_207304b03_Test))) {
		jule::Ptr<_1acb221d4_Fn> _38817_main = _1abce042a_FindFn(_38313_ir.get()._field_Main.ptr(), jule::Str("main", 4), false);;
		if ((_38817_main == nullptr)) {
			_1a408b448_Throw(_20943de7c_Logf(jule::Str("missing entry point: entry point (main) function is not defined", 63), jule::Slice<jule::Any>()));
		};
	};
	_1a495e249_applyTargetIndependentOptimizations(&(_38313_ir));
	_1a3e2ada9_Order(_38313_ir.ptr());
	jule::Str _39910_compiler;;
	jule::Str _39920_compilerCmd;;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1a495dd09_genCompileCmd(_1a495e007_getCompilePath(), &(_38313_ir));
		_39910_compiler = __jule_assign_result.__jule_result_arg0;
		_39920_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1a48d4c4c_ObjectCoder> _40113_oc = static__1a48d5126_New(&(_38313_ir), _1a48d33aa_SerializationInfo{._field_Compiler=_39910_compiler, ._field_CompilerCommand=_39920_compilerCmd});;
	if (_207304b03_Test) {
		jule::Ptr<_1a483eaec_TestCoder> _40617_tc = static__1a484002b_New(&(_40113_oc));;
		_1a484125d_Serialize(_40617_tc);
	} else {
		_1a48e1055_Serialize(_40113_oc);
	};
	jule::Str _4129_path = _1a495e007_getCompilePath();;
	jule::Ptr<_2082b61e0_File> _41313_file = _1a495cc81_openOutput(&(_4129_path));;
	({
		auto except = _2082b7b1a_WriteStr(_41313_file.ptr(), &(_40113_oc.get()._field_Obj));
		if (!except.ok()) {
			_1a408b448_Throw(jule::Str("object code could not write", 27));
		}
	});
	({
		auto except = _2082b7ce6_Close(_41313_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:417:5"));
	});
	if ((!(_20730485b_Transpilation))) {
		_1a495d1e3_compileIr(_39910_compiler, _39920_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_2094d3c25_init();
	_1ddea921b_init();
	_2094d8ab5_init();
	_1a495c9c8_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}