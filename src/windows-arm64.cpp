// Auto generated by JuleC.
// JuleC version: jule0.0.15 @master
// Date: 15/8/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp -lws2_32 -lshell32 -lshell32

#define __JULE_ENABLE__PRODUCTION
#include "std/jule/integrated/integrated.hpp"                                   
#include <winsock2.h>
#include <ws2ipdef.h>
#include <windows.h>
#include <fcntl.h>
#include <io.h>
#include <cstdio>
#include <sys/stat.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   


struct _1bc71a88e_comptimeRangeKind{};
struct _1bc760ede_Importer{};
struct _1bc840c17_Kind{};
struct _1bc860c04_Lookup{};
struct _1bdeab7d2_CommonFlag{};
struct _2095d09d1_acceptRange;
struct _2096a4489_StrBuilder;
struct _1ed5e02b0_Range16;
struct _1ed5e07dd_Range32;
struct _1ed5e0c94_RangeTable;
struct _1ed643511_lazyBuff;
struct _230a4148c_DirEntry;
struct _230a41701_Directory;
struct _230a42922_File;
struct _230a44a56_Status;
struct _1eeea4bb7_cmdAttrs;
struct _1ed6c7892_Log;
struct _230d320b8_floatInfo;
struct _230d32c67_decimalSlice;
struct _230d45021_leftCheat;
struct _230d45a49_decimal;
struct _230d58386_Const;
struct _1bc583a9d_Token;
struct _1bc589367_File;
struct _1bc58b48a_kindPair;
struct _1bbcac2d8_lex;
struct _1bc59378e_Ast;
struct _1bc59463b_Node;
struct _1bc594a59_Directive;
struct _1bc59563c_TypeDecl;
struct _1bc595c47_IdentTypeDecl;
struct _1bc596044_SubIdentTypeDecl;
struct _1bc5963da_NamespaceTypeDecl;
struct _1bc5966d7_SptrTypeDecl;
struct _1bc596a6c_SlcTypeDecl;
struct _1bc596d69_TupleTypeDecl;
struct _1bc597166_PtrTypeDecl;
struct _1bc597908_ArrTypeDecl;
struct _1bc598156_MapTypeDecl;
struct _1bc598530_RetTypeDecl;
struct _1bc599971_Expr;
struct _1bc599c6d_RangeExpr;
struct _1bc59a345_UseExpr;
struct _1bc59a642_TupleExpr;
struct _1bc59aa1b_LitExpr;
struct _1bc59ade5_UnsafeExpr;
struct _1bc59b39b_IdentExpr;
struct _1bc59ba2d_UnaryExpr;
struct _1bc59be07_VariadicExpr;
struct _1bc59c2d1_CastExpr;
struct _1bc5a254a_NsSelectionExpr;
struct _1bc5a28e1_SubIdentExpr;
struct _1bc5a2d97_BinaryExpr;
struct _1bc5a3507_FnCallExpr;
struct _1bc5a3eec_FieldExprPair;
struct _1bc5a4827_StructLit;
struct _1bc5a4ccd_BraceLit;
struct _1bc5a5608_KeyValPair;
struct _1bc5a5d01_SliceExpr;
struct _1bc5a6791_IndexingExpr;
struct _1bc5a6e01_SlicingExpr;
struct _1bc5a71ed_Constraint;
struct _1bc5a76a4_GenericDecl;
struct _1bc5a7a7d_LabelSt;
struct _1bc5a7e57_GotoSt;
struct _1bc5a8254_FallSt;
struct _1bc5a88b4_AssignLeft;
struct _1bc5a8e47_AssignSt;
struct _1bc5a9d5a_Stmt;
struct _1bc5aa4ba_ScopeTree;
struct _1bc5aac07_ParamDecl;
struct _1bc5ac159_FnDecl;
struct _1bc5ad314_VarDecl;
struct _1bc5ad6dd_RetSt;
struct _1bc5ade5d_Iter;
struct _1bc5ae788_WhileKind;
struct _1bc5b0190_RangeKind;
struct _1bc5b0569_BreakSt;
struct _1bc5b0943_ContSt;
struct _1bc5b0de9_If;
struct _1bc5b12c3_Else;
struct _1bc5b1779_Conditional;
struct _1bc5b1eb6_TypeAliasDecl;
struct _1bc5b246c_Case;
struct _1bc5b2c86_MatchCase;
struct _1bc5b35a0_UseDecl;
struct _1bc5b3a56_EnumItemDecl;
struct _1bc5b4617_EnumDecl;
struct _1bc5b4e42_TypeEnumItemDecl;
struct _1bc5b55a2_TypeEnumDecl;
struct _1bc5b586b_FieldDecl;
struct _1bc5b6262_StructDecl;
struct _1bc5b699e_TraitDecl;
struct _1bc5b710e_Impl;
struct _1bc5b8440_Field;
struct _1bc5ba420_Operators;
struct _1bc5bb333_Struct;
struct _1bc5bd511_FieldIns;
struct _1ece0cc87_OperandExprModel;
struct _1ece0d282_BinaryExprModel;
struct _1ece0d65b_UnaryExprModel;
struct _1ece0db89_StructArgExprModel;
struct _1ece0e030_StructLitExprModel;
struct _1ece0e32c_AllocStructLitExprModel;
struct _1ece0e8b0_CastingExprModel;
struct _1ece10262_FnCallExprModel;
struct _1ece1063b_SliceExprModel;
struct _1ece10ae2_IndexingExprModel;
struct _1ece10ebb_AnonFnExprModel;
struct _1ece11395_KeyValPairExprModel;
struct _1ece1184b_MapExprModel;
struct _1ece11dce_SlicingExprModel;
struct _1ece12462_TraitSubIdentExprModel;
struct _1ece12d03_StructSubIdentExprModel;
struct _1ece132a9_StructStaticIdentExprModel;
struct _1ece13683_ArrayExprModel;
struct _1ece13980_TupleExprModel;
struct _1ece13d59_BuiltinOutCallExprModel;
struct _1ece14233_BuiltinOutlnCallExprModel;
struct _1ece1460c_BuiltinNewCallExprModel;
struct _1ece149d6_BuiltinPanicCallExprModel;
struct _1ece14e8c_BuiltinAssertCallExprModel;
struct _1ece15443_BuiltinMakeCallExprModel;
struct _1ece1581c_BuiltinAppendCallExprModel;
struct _1ece15b19_BuiltinLenCallExprModel;
struct _1ece15e16_BuiltinCapCallExprModel;
struct _1ece162e0_BuiltinDeleteCallExprModel;
struct _1ece166b9_BuiltinCopyCallExprModel;
struct _1ece16a93_BuiltinErrorCallExprModel;
struct _1ece1264e_SizeofExprModel;
struct _1ece172be_AlignofExprModel;
struct _1ece175bb_RuneExprModel;
struct _1ece178b8_IntegratedToStrExprModel;
struct _1ece17c92_BackendEmitExprModel;
struct _1ece1808e_FreeExprModel;
struct _1ece18d3c_RetType;
struct _1ece195bd_Param;
struct _1ece1b092_Fn;
struct _1ece1ceea_ParamIns;
struct _1ece1de96_FnIns;
struct _1ece221a8_ReferenceStack;
struct _1ece236c6_Pass;
struct _1ece2828b_symbolBuilder;
struct _1bc713a41_Trait;
struct _1bc7156d0_EnumItem;
struct _1bc71624c_Enum;
struct _1bc717380_TypeEnumItem;
struct _1bc717957_TypeEnum;
struct _1bc71aaae_comptimeRange;
struct _1bc71b582_comptimeStructField;
struct _1bc71d243_comptimeStructFields;
struct _1bc71e83d_comptimeStatic;
struct _1bc7214ee_comptimeStatics;
struct _1bc722ae9_comptimeEnumField;
struct _1bc723e91_comptimeEnumFields;
struct _1bc72558b_comptimeParam;
struct _1bc727802_comptimeParams;
struct _1bc728dec_comptimeTypeInfos;
struct _1bc72a4e7_comptimeTypeInfo;
struct _1bc731a09_comptimeValue;
struct _1bc734358_comptimeFiles;
struct _1bc735953_comptimeFile;
struct _1bc739d64_constraintChecker;
struct _1bc73c1b8_Impl;
struct _1bc74261e_Scope;
struct _1bc742a3c_If;
struct _1bc742d39_Else;
struct _1bc743257_Conditional;
struct _1bc743554_InfIter;
struct _1bc743a0a_WhileIter;
struct _1bc744456_RangeIter;
struct _1bc7447db_ContSt;
struct _1bc744bb5_BreakSt;
struct _1bc744eb2_Label;
struct _1bc74538b_GotoSt;
struct _1bc745765_Postfix;
struct _1bc745c1b_Assign;
struct _1bc7460e5_MultiAssign;
struct _1bc746755_Match;
struct _1bc74738d_Case;
struct _1bc747987_FallSt;
struct _1bc747d1c_RetSt;
struct _1bc74847c_scopeLabel;
struct _1bc748a10_scopeGoto;
struct _1bc749923_scopeChecker;
struct _1bc75c958_directiveChecker;
struct _1bc763e04_ImportInfo;
struct _1bc766d2a_Package;
struct _1bc78364e_commonSemaMeta;
struct _1bc784276_Sema;
struct _1bc7a3e44_missingRetChecker;
struct _1bc7a6353_IterRelation;
struct _1bc7a750d_Var;
struct _1bc7a8322_FuncPattern;
struct _1bc7e77d4_typeCompatibilityChecker;
struct _1bc7e9583_assignTypeChecker;
struct _1bc7eae58_dynamicTypeAnnotation;
struct _1bc800cb5_fnCallArgChecker;
struct _1bc803bec_structLitChecker;
struct _1bc8059ce_rangeChecker;
struct _1bc808240_retTypeChecker;
struct _1bc80a50b_SymbolTable;
struct _1bc8108a7_Data;
struct _1bc8119eb_Value;
struct _1bc81259b_Eval;
struct _1bc830cc3_unaryEval;
struct _1bc832c5e_binaryEval;
struct _1bc83e7d7_InsGeneric;
struct _1bc8403cb_TypeAlias;
struct _1bc8411bd_TypeKind;
struct _1bc848390_TypeSymbol;
struct _1bc848c97_Prim;
struct _1bc84c7c3_Sptr;
struct _1bc84d296_Slc;
struct _1bc84dd8a_Tuple;
struct _1bc84e93a_Map;
struct _1bc8505b7_Arr;
struct _1bc85108a_Ptr;
struct _1bc85208b_referencer;
struct _1bc85307b_typeChecker;
struct _1bc85ac10_identTypeLookup;
struct _1bd3a9e01_FileInfo;
struct _1bd400b7d_stmt;
struct _1bd40151e_scopeParser;
struct _1bd40de44_exprBuilder;
struct _1bd41b3d5_assignInfo;
struct _1bd41e7d4_parser;
struct _1bd4319b1_typeBuilder;
struct _1bcacb931_CompileInfo;
struct _1bcacce0a_directiveEval;
struct _1bd435ae7_JuleImporter;
struct _1bd43ad0b_OrderedDefines;
struct _1bd43b070_defineOrderer;
struct _1bd108a0c_liveTable;
struct _1bd13d206_scopeDeadCode;
struct _1bd14245d_exprDeadCode;
struct _1bc2d5679_SwapExprModel;
struct _1bc2d5a97_EmptyCompareExprModel;
struct _1bc2d5d94_RefExprModel;
struct _1bc9c48d4_StrCompExprModel;
struct _1bc9c4e67_MutSlicingExprModel;
struct _1bc9c5264_UnsafeBinaryExprModel;
struct _1bc9c5561_UnsafeIndexingExprModel;
struct _1bc9c5990_PushToSliceExprModel;
struct _1bc9c5d69_AppendToSliceExprModel;
struct _1bc9c7024_scopeOptimizer;
struct _1bc9cd1b2_exprOptimizer;
struct _1bd149597_Optimizer;
struct _1bd171de9_AnsiEscape;
struct _1bd173857_Logger;
struct _1bcc81256_AbsTime;
struct _1bcc8192c_Time;
struct _1bd5a2a77_scopeCoder;
struct _1bcbb68b7_exprCoder;
struct _1bcbc719c_TestCoder;
struct _1bcbc9e6e_identCoder;
struct _1bde2762c_SerializationInfo;
struct _1bde27c04_traitHash;
struct _1bde280cd_traitCast;
struct _1bde38792_customType;
struct _1bde393a8_typeCoder;
struct _1bde42779_resultCoder;
struct _1c317cd45_Flag;
struct _1c31816d9_Flag;
struct _1c3184dd5_Flag;
struct _1c3188625_Flag;
struct _1c318bd21_Flag;
struct _1bdead383_FlagSet;
struct _1bdeb0d14_argParser;
struct _1bde29145_ObjectCoder;
struct _1bd108de7_ObjectDeadCode;
struct _1bd4385ab_IR;
struct _1bc5be0b1_StructIns;
struct _1eeea092c_Cmd;
struct _2095d09d1_acceptRange {
	jule::U8 _field_lo = 0;
	jule::U8 _field_hi = 0;
	

	inline bool operator==(_2095d09d1_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_2095d09d1_acceptRange _other) { return !this->operator==(_other); }


};
struct _2096a4489_StrBuilder {
	jule::Slice<jule::U8> _field_buf;
	


};
struct _1ed5e02b0_Range16 {
	jule::U16 _field_Lo = 0;
	jule::U16 _field_Hi = 0;
	jule::U16 _field_Stride = 0;
	

	inline bool operator==(_1ed5e02b0_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_1ed5e02b0_Range16 _other) { return !this->operator==(_other); }


};
struct _1ed5e07dd_Range32 {
	jule::U32 _field_Lo = 0;
	jule::U32 _field_Hi = 0;
	jule::U32 _field_Stride = 0;
	

	inline bool operator==(_1ed5e07dd_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_1ed5e07dd_Range32 _other) { return !this->operator==(_other); }


};
struct _1ed5e0c94_RangeTable {
	jule::Slice<_1ed5e02b0_Range16> _field_R16;
	jule::Slice<_1ed5e07dd_Range32> _field_R32;
	jule::I64 _field_LatinOffset = 0;
	


};
struct _1ed643511_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I64 _field_w = 0;
	jule::Str _field_volAndPath;
	jule::I64 _field_volLen = 0;
	


};
struct _230a4148c_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_230a44a56_Status> _field_Stat;
	

	inline bool operator==(_230a4148c_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_230a4148c_DirEntry _other) { return !this->operator==(_other); }


};
struct _230a41701_Directory {
	

	inline bool operator==(_230a41701_Directory _other) { return true; }

	inline bool operator!=(_230a41701_Directory _other) { return !this->operator==(_other); }


};
struct _230a42922_File {
	jule::Uintptr _field_handle = 0;
	

	inline bool operator==(_230a42922_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_230a42922_File _other) { return !this->operator==(_other); }


};
struct _230a44a56_Status {
	jule::I64 _field_mode = 0LL;
	jule::U64 _field_size = 0;
	

	inline bool operator==(_230a44a56_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_230a44a56_Status _other) { return !this->operator==(_other); }


};
struct _1eeea4bb7_cmdAttrs {
	HANDLE _field_hProcess = nullptr;
	HANDLE _field_hThread = nullptr;
	

	inline bool operator==(_1eeea4bb7_cmdAttrs _other) {
		return 
			this->_field_hProcess == _other._field_hProcess &&
			this->_field_hThread == _other._field_hThread;
	}

	inline bool operator!=(_1eeea4bb7_cmdAttrs _other) { return !this->operator==(_other); }


};
struct _1ed6c7892_Log {
	jule::I64 _field_Kind = 0LL;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

	inline bool operator==(_1ed6c7892_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_1ed6c7892_Log _other) { return !this->operator==(_other); }


};
struct _230d320b8_floatInfo {
	jule::U64 _field_mantbits = 0;
	jule::U64 _field_expbits = 0;
	jule::I64 _field_bias = 0;
	

	inline bool operator==(_230d320b8_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_230d320b8_floatInfo _other) { return !this->operator==(_other); }


};
struct _230d32c67_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	


};
struct _230d45021_leftCheat {
	jule::I64 _field_delta = 0;
	jule::Str _field_cutoff;
	

	inline bool operator==(_230d45021_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_230d45021_leftCheat _other) { return !this->operator==(_other); }


};
struct _230d45a49_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>(0);
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	jule::Bool _field_trunc = false;
	

	inline bool operator==(_230d45a49_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_230d45a49_decimal _other) { return !this->operator==(_other); }


};
inline jule::Bool _230d5de3b_Eq(_230d58386_Const*, _230d58386_Const);
inline jule::Bool _230d5e27c_Lt(_230d58386_Const*, _230d58386_Const);
inline jule::Bool _230d5e5bd_LtEq(_230d58386_Const*, _230d58386_Const);
inline jule::Bool _230d5e90e_Gt(_230d58386_Const*, _230d58386_Const);
inline jule::Bool _230d5ec50_GtEq(_230d58386_Const*, _230d58386_Const);
struct _230d58386_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

	inline jule::Bool operator==(_230d58386_Const _other) { return _230d5de3b_Eq(this, _other); }

	inline bool operator!=(_230d58386_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_230d58386_Const _other) { return _230d5e90e_Gt(this, _other); }

	inline jule::Bool operator>=(_230d58386_Const _other) { return _230d5ec50_GtEq(this, _other); }

	inline jule::Bool operator<(_230d58386_Const _other) { return _230d5e27c_Lt(this, _other); }

	inline jule::Bool operator<=(_230d58386_Const _other) { return _230d5e5bd_LtEq(this, _other); }


};
struct _1bc583a9d_Token {
	jule::Ptr<_1bc589367_File> _field_File;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Kind;
	jule::U64 _field_Id = 0LLU;
	

	inline bool operator==(_1bc583a9d_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_1bc583a9d_Token _other) { return !this->operator==(_other); }


};
struct _1bc589367_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _field_Tokens;
	


};
struct _1bc58b48a_kindPair {
	jule::Str _field_kind = jule::Str::lit("::", 2);
	jule::U64 _field_id = 0LLU;
	

	inline bool operator==(_1bc58b48a_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1bc58b48a_kindPair _other) { return !this->operator==(_other); }


};
struct _1bbcac2d8_lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _field_tokens;
	jule::Ptr<_1bc589367_File> _field_file;
	jule::I64 _field_pos = 0;
	jule::I64 _field_column = 0;
	jule::I64 _field_row = 0;
	jule::Slice<_1ed6c7892_Log> _field_errors;
	


};
struct _1bc59378e_Ast {
	jule::Ptr<_1bc589367_File> _field_File;
	jule::Slice<jule::Ptr<_1bc594a59_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1bc5b35a0_UseDecl>> _field_UseDecls;
	jule::Slice<_1bc59463b_Node> _field_Nodes;
	


};
struct _1bc59463b_Node {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_1bc59463b_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1bc59463b_Node _other) { return !this->operator==(_other); }


};
struct _1bc594a59_Directive {
	jule::Ptr<_1bc583a9d_Token> _field_Tag;
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _field_Args;
	


};
struct _1bc59563c_TypeDecl {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_1bc59563c_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1bc59563c_TypeDecl _other) { return !this->operator==(_other); }


};
struct _1bc595c47_IdentTypeDecl {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1bc59563c_TypeDecl>> _field_Generics;
	


};
struct _1bc596044_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1bc595c47_IdentTypeDecl>> _field_Idents;
	


};
struct _1bc5963da_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _field_Idents;
	jule::Ptr<_1bc59563c_TypeDecl> _field_Kind;
	


};
struct _1bc5966d7_SptrTypeDecl {
	jule::Ptr<_1bc59563c_TypeDecl> _field_Elem;
	

	inline bool operator==(_1bc5966d7_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1bc5966d7_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1bc596a6c_SlcTypeDecl {
	jule::Ptr<_1bc59563c_TypeDecl> _field_Elem;
	

	inline bool operator==(_1bc596a6c_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1bc596a6c_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1bc596d69_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1bc59563c_TypeDecl>> _field_Types;
	


};
struct _1bc597166_PtrTypeDecl {
	jule::Ptr<_1bc59563c_TypeDecl> _field_Elem;
	

	inline bool operator==(_1bc597166_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1bc597166_PtrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1bc597908_ArrTypeDecl {
	jule::Ptr<_1bc59563c_TypeDecl> _field_Elem;
	jule::Ptr<_1bc599971_Expr> _field_Size;
	

	inline bool operator==(_1bc597908_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_1bc597908_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1bc598156_MapTypeDecl {
	jule::Ptr<_1bc59563c_TypeDecl> _field_Key;
	jule::Ptr<_1bc59563c_TypeDecl> _field_Val;
	

	inline bool operator==(_1bc598156_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1bc598156_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1bc598530_RetTypeDecl {
	jule::Ptr<_1bc59563c_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _field_Idents;
	


};
struct _1bc599971_Expr {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Ptr<_1bc583a9d_Token> _field_End;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_1bc599971_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1bc599971_Expr _other) { return !this->operator==(_other); }


};
struct _1bc599c6d_RangeExpr {
	jule::Ptr<_1bc599971_Expr> _field_Expr;
	

	inline bool operator==(_1bc599c6d_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1bc599c6d_RangeExpr _other) { return !this->operator==(_other); }


};
struct _1bc59a345_UseExpr {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Ptr<_1bc599971_Expr> _field_Expr;
	

	inline bool operator==(_1bc59a345_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1bc59a345_UseExpr _other) { return !this->operator==(_other); }


};
struct _1bc59a642_TupleExpr {
	jule::Slice<jule::Ptr<_1bc599971_Expr>> _field_Expr;
	


};
struct _1bc59aa1b_LitExpr {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Str _field_Value;
	

	inline bool operator==(_1bc59aa1b_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1bc59aa1b_LitExpr _other) { return !this->operator==(_other); }


};
struct _1bc59ade5_UnsafeExpr {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Ptr<_1bc599971_Expr> _field_Expr;
	

	inline bool operator==(_1bc59ade5_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1bc59ade5_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _1bc59b39b_IdentExpr {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	

	inline bool operator==(_1bc59b39b_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Binded == _other._field_Binded;
	}

	inline bool operator!=(_1bc59b39b_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1bc59ba2d_UnaryExpr {
	jule::Ptr<_1bc583a9d_Token> _field_Op;
	jule::Ptr<_1bc599971_Expr> _field_Expr;
	

	inline bool operator==(_1bc59ba2d_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1bc59ba2d_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1bc59be07_VariadicExpr {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Ptr<_1bc599971_Expr> _field_Expr;
	

	inline bool operator==(_1bc59be07_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1bc59be07_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1bc59c2d1_CastExpr {
	jule::Ptr<_1bc59563c_TypeDecl> _field_Kind;
	jule::Ptr<_1bc599971_Expr> _field_Expr;
	

	inline bool operator==(_1bc59c2d1_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1bc59c2d1_CastExpr _other) { return !this->operator==(_other); }


};
struct _1bc5a254a_NsSelectionExpr {
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _field_Ns;
	jule::Ptr<_1bc583a9d_Token> _field_Ident;
	


};
struct _1bc5a28e1_SubIdentExpr {
	jule::Ptr<_1bc599971_Expr> _field_Expr;
	jule::Ptr<_1bc583a9d_Token> _field_Ident;
	

	inline bool operator==(_1bc5a28e1_SubIdentExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1bc5a28e1_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1bc5a2d97_BinaryExpr {
	jule::Ptr<_1bc599971_Expr> _field_Left;
	jule::Ptr<_1bc599971_Expr> _field_Right;
	jule::Ptr<_1bc583a9d_Token> _field_Op;
	

	inline bool operator==(_1bc5a2d97_BinaryExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1bc5a2d97_BinaryExpr _other) { return !this->operator==(_other); }


};
struct _1bc5a3507_FnCallExpr {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Ptr<_1bc599971_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1bc599971_Expr>> _field_Args;
	jule::Ptr<_1bc5aa4ba_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo = false;
	


};
struct _1bc5a3eec_FieldExprPair {
	jule::Ptr<_1bc583a9d_Token> _field_Field;
	jule::Ptr<_1bc599971_Expr> _field_Expr;
	

	inline bool operator==(_1bc5a3eec_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1bc5a3eec_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1bc5a4827_StructLit {
	jule::Ptr<_1bc583a9d_Token> _field_End;
	jule::Ptr<_1bc59563c_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1bc599971_Expr>> _field_Exprs;
	


};
struct _1bc5a4ccd_BraceLit {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Ptr<_1bc583a9d_Token> _field_End;
	jule::Slice<jule::Ptr<_1bc599971_Expr>> _field_Exprs;
	


};
struct _1bc5a5608_KeyValPair {
	jule::Ptr<_1bc599971_Expr> _field_Key;
	jule::Ptr<_1bc599971_Expr> _field_Val;
	jule::Ptr<_1bc583a9d_Token> _field_Colon;
	

	inline bool operator==(_1bc5a5608_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_1bc5a5608_KeyValPair _other) { return !this->operator==(_other); }


};
struct _1bc5a5d01_SliceExpr {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Ptr<_1bc583a9d_Token> _field_End;
	jule::Slice<jule::Ptr<_1bc599971_Expr>> _field_Exprs;
	


};
struct _1bc5a6791_IndexingExpr {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Ptr<_1bc583a9d_Token> _field_End;
	jule::Ptr<_1bc599971_Expr> _field_Expr;
	jule::Ptr<_1bc599971_Expr> _field_Index;
	

	inline bool operator==(_1bc5a6791_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1bc5a6791_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1bc5a6e01_SlicingExpr {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Ptr<_1bc583a9d_Token> _field_End;
	jule::Ptr<_1bc599971_Expr> _field_Expr;
	jule::Ptr<_1bc599971_Expr> _field_Start;
	jule::Ptr<_1bc599971_Expr> _field_To;
	

	inline bool operator==(_1bc5a6e01_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_1bc5a6e01_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1bc5a71ed_Constraint {
	jule::Slice<jule::Ptr<_1bc59563c_TypeDecl>> _field_Mask;
	


};
struct _1bc5a76a4_GenericDecl {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1bc5a71ed_Constraint> _field_Constraint;
	

	inline bool operator==(_1bc5a76a4_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_1bc5a76a4_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1bc5a7a7d_LabelSt {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Str _field_Ident;
	

	inline bool operator==(_1bc5a7a7d_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1bc5a7a7d_LabelSt _other) { return !this->operator==(_other); }


};
struct _1bc5a7e57_GotoSt {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Ptr<_1bc583a9d_Token> _field_Label;
	

	inline bool operator==(_1bc5a7e57_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1bc5a7e57_GotoSt _other) { return !this->operator==(_other); }


};
struct _1bc5a8254_FallSt {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	

	inline bool operator==(_1bc5a8254_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_1bc5a8254_FallSt _other) { return !this->operator==(_other); }


};
struct _1bc5a88b4_AssignLeft {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Str _field_Ident;
	jule::Ptr<_1bc599971_Expr> _field_Expr;
	

	inline bool operator==(_1bc5a88b4_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1bc5a88b4_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1bc5a8e47_AssignSt {
	jule::Bool _field_Declarative = false;
	jule::Ptr<_1bc583a9d_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1bc5a88b4_AssignLeft>> _field_Left;
	jule::Ptr<_1bc599971_Expr> _field_Right;
	


};
struct _1bc5a9d5a_Stmt {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_1bc5a9d5a_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1bc5a9d5a_Stmt _other) { return !this->operator==(_other); }


};
struct _1bc5aa4ba_ScopeTree {
	jule::Ptr<_1bc5aa4ba_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<_1bc5a9d5a_Stmt> _field_Stmts;
	jule::Ptr<_1bc583a9d_Token> _field_End;
	


};
struct _1bc5aac07_ParamDecl {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1bc59563c_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_1bc5aac07_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1bc5aac07_ParamDecl _other) { return !this->operator==(_other); }


};
struct _1bc5ac159_FnDecl {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1bc594a59_Directive>> _field_Directives;
	jule::Ptr<_1bc5aa4ba_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1bc5a76a4_GenericDecl>> _field_Generics;
	jule::Ptr<_1bc598530_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1bc5aac07_ParamDecl>> _field_Params;
	


};
struct _1bc5ad314_VarDecl {
	jule::Ptr<_1bc5aa4ba_ScopeTree> _field_Scope;
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Ptr<_1bc583a9d_Token> _field_Setter;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Slice<jule::Ptr<_1bc594a59_Directive>> _field_Directives;
	jule::Ptr<_1bc59563c_TypeDecl> _field_Kind;
	jule::Ptr<_1bc599971_Expr> _field_Expr;
	


};
struct _1bc5ad6dd_RetSt {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Ptr<_1bc599971_Expr> _field_Expr;
	

	inline bool operator==(_1bc5ad6dd_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1bc5ad6dd_RetSt _other) { return !this->operator==(_other); }


};
struct _1bc5ade5d_Iter {
	jule::Bool _field_Comptime = false;
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	jule::Ptr<_1bc5aa4ba_ScopeTree> _field_Scope;
	

	inline bool operator==(_1bc5ade5d_Iter _other) {
		return 
			this->_field_Comptime == _other._field_Comptime &&
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1bc5ade5d_Iter _other) { return !this->operator==(_other); }


};
struct _1bc5ae788_WhileKind {
	jule::Ptr<_1bc599971_Expr> _field_Expr;
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1bc583a9d_Token> _field_NextToken;
	

	inline bool operator==(_1bc5ae788_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_1bc5ae788_WhileKind _other) { return !this->operator==(_other); }


};
struct _1bc5b0190_RangeKind {
	jule::Ptr<_1bc583a9d_Token> _field_InToken;
	jule::Ptr<_1bc599971_Expr> _field_Expr;
	jule::Ptr<_1bc5ad314_VarDecl> _field_KeyA;
	jule::Ptr<_1bc5ad314_VarDecl> _field_KeyB;
	

	inline bool operator==(_1bc5b0190_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1bc5b0190_RangeKind _other) { return !this->operator==(_other); }


};
struct _1bc5b0569_BreakSt {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Ptr<_1bc583a9d_Token> _field_Label;
	

	inline bool operator==(_1bc5b0569_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1bc5b0569_BreakSt _other) { return !this->operator==(_other); }


};
struct _1bc5b0943_ContSt {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Ptr<_1bc583a9d_Token> _field_Label;
	

	inline bool operator==(_1bc5b0943_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1bc5b0943_ContSt _other) { return !this->operator==(_other); }


};
struct _1bc5b0de9_If {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Ptr<_1bc599971_Expr> _field_Expr;
	jule::Ptr<_1bc5aa4ba_ScopeTree> _field_Scope;
	

	inline bool operator==(_1bc5b0de9_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1bc5b0de9_If _other) { return !this->operator==(_other); }


};
struct _1bc5b12c3_Else {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Ptr<_1bc5aa4ba_ScopeTree> _field_Scope;
	

	inline bool operator==(_1bc5b12c3_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1bc5b12c3_Else _other) { return !this->operator==(_other); }


};
struct _1bc5b1779_Conditional {
	jule::Ptr<_1bc5b0de9_If> _field_Head;
	jule::Slice<jule::Ptr<_1bc5b0de9_If>> _field_Tail;
	jule::Ptr<_1bc5b12c3_Else> _field_Default;
	


};
struct _1bc5b1eb6_TypeAliasDecl {
	jule::Ptr<_1bc5aa4ba_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1bc59563c_TypeDecl> _field_Kind;
	

	inline bool operator==(_1bc5b1eb6_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_Binded == _other._field_Binded &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1bc5b1eb6_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1bc5b246c_Case {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Ptr<_1bc5aa4ba_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1bc599971_Expr>> _field_Exprs;
	


};
struct _1bc5b2c86_MatchCase {
	jule::Bool _field_Comptime = false;
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Ptr<_1bc583a9d_Token> _field_End;
	jule::Bool _field_TypeMatch = false;
	jule::Ptr<_1bc599971_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1bc5b246c_Case>> _field_Cases;
	jule::Ptr<_1bc5b12c3_Else> _field_Default;
	


};
struct _1bc5b35a0_UseDecl {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full = false;
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _field_Selected;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	


};
struct _1bc5b3a56_EnumItemDecl {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1bc599971_Expr> _field_Expr;
	

	inline bool operator==(_1bc5b3a56_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1bc5b3a56_EnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1bc5b4617_EnumDecl {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1bc59563c_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1bc5b3a56_EnumItemDecl>> _field_Items;
	jule::Ptr<_1bc583a9d_Token> _field_End;
	


};
struct _1bc5b4e42_TypeEnumItemDecl {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1bc59563c_TypeDecl> _field_Kind;
	

	inline bool operator==(_1bc5b4e42_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1bc5b4e42_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1bc5b55a2_TypeEnumDecl {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1bc5b4e42_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_1bc583a9d_Token> _field_End;
	


};
struct _1bc5b586b_FieldDecl {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1bc59563c_TypeDecl> _field_Kind;
	jule::Ptr<_1bc599971_Expr> _field_Default;
	

	inline bool operator==(_1bc5b586b_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1bc5b586b_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1bc5b6262_StructDecl {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Ptr<_1bc583a9d_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1bc5b586b_FieldDecl>> _field_Fields;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1bc594a59_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1bc5a76a4_GenericDecl>> _field_Generics;
	


};
struct _1bc5b699e_TraitDecl {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Ptr<_1bc583a9d_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1bc59563c_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_1bc5ac159_FnDecl>> _field_Methods;
	


};
struct _1bc5b710e_Impl {
	jule::Ptr<_1bc583a9d_Token> _field_End;
	jule::Ptr<_1bc59563c_TypeDecl> _field_Base;
	jule::Ptr<_1bc59563c_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1bc5ac159_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1bc5ad314_VarDecl>> _field_Statics;
	


};
struct _1bc5b8440_Field {
	jule::Ptr<_1bc5bb333_Struct> _field_Owner;
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1bc848390_TypeSymbol> _field_Kind;
	jule::Ptr<_1bc599971_Expr> _field_Default;
	

	inline bool operator==(_1bc5b8440_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1bc5b8440_Field _other) { return !this->operator==(_other); }


};
struct _1bc5ba420_Operators {
	jule::Ptr<_1ece1de96_FnIns> _field_Eq;
	jule::Ptr<_1ece1de96_FnIns> _field_Gt;
	jule::Ptr<_1ece1de96_FnIns> _field_GtEq;
	jule::Ptr<_1ece1de96_FnIns> _field_Lt;
	jule::Ptr<_1ece1de96_FnIns> _field_LtEq;
	jule::Ptr<_1ece1de96_FnIns> _field_Shl;
	jule::Ptr<_1ece1de96_FnIns> _field_Shr;
	jule::Ptr<_1ece1de96_FnIns> _field_Add;
	jule::Ptr<_1ece1de96_FnIns> _field_Sub;
	jule::Ptr<_1ece1de96_FnIns> _field_Div;
	jule::Ptr<_1ece1de96_FnIns> _field_Mul;
	jule::Ptr<_1ece1de96_FnIns> _field_Mod;
	jule::Ptr<_1ece1de96_FnIns> _field_BitAnd;
	jule::Ptr<_1ece1de96_FnIns> _field_BitOr;
	jule::Ptr<_1ece1de96_FnIns> _field_BitXor;
	jule::Ptr<_1ece1de96_FnIns> _field_Neg;
	jule::Ptr<_1ece1de96_FnIns> _field_Pos;
	jule::Ptr<_1ece1de96_FnIns> _field_BitNot;
	jule::Ptr<_1ece1de96_FnIns> _field_AddAssign;
	jule::Ptr<_1ece1de96_FnIns> _field_SubAssign;
	jule::Ptr<_1ece1de96_FnIns> _field_DivAssign;
	jule::Ptr<_1ece1de96_FnIns> _field_MulAssign;
	jule::Ptr<_1ece1de96_FnIns> _field_ModAssign;
	jule::Ptr<_1ece1de96_FnIns> _field_ShlAssign;
	jule::Ptr<_1ece1de96_FnIns> _field_ShrAssign;
	jule::Ptr<_1ece1de96_FnIns> _field_BitOrAssign;
	jule::Ptr<_1ece1de96_FnIns> _field_BitAndAssign;
	jule::Ptr<_1ece1de96_FnIns> _field_BitXorAssign;
	

	inline bool operator==(_1bc5ba420_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_1bc5ba420_Operators _other) { return !this->operator==(_other); }


};
struct _1bc5bb333_Struct {
	jule::Ptr<_1bc784276_Sema> _field_sema;
	jule::Slice<jule::Ptr<_1bc5bb333_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1bc5bb333_Struct>> _field_Uses;
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1bc5b8440_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1ece1b092_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1bc7a750d_Var>> _field_Statics;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1bc594a59_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1bc5a76a4_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1bc713a41_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1bc5be0b1_StructIns>> _field_Instances;
	


};
struct _1bc5bd511_FieldIns {
	jule::Ptr<_1bc5b8440_Field> _field_Decl;
	jule::Ptr<_1bc8411bd_TypeKind> _field_Kind;
	jule::Ptr<_1bc8108a7_Data> _field_Default;
	

	inline bool operator==(_1bc5bd511_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1bc5bd511_FieldIns _other) { return !this->operator==(_other); }


};
struct _1ece0cc87_OperandExprModel {
	jule::Ptr<_1bc8411bd_TypeKind> _field_Kind;
	jule::Any _field_Model = jule::Any(nullptr);
	

	inline bool operator==(_1ece0cc87_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_1ece0cc87_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1ece0d282_BinaryExprModel {
	jule::Ptr<_1ece0cc87_OperandExprModel> _field_Left;
	jule::Ptr<_1ece0cc87_OperandExprModel> _field_Right;
	jule::Ptr<_1bc583a9d_Token> _field_Op;
	

	inline bool operator==(_1ece0d282_BinaryExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1ece0d282_BinaryExprModel _other) { return !this->operator==(_other); }


};
struct _1ece0d65b_UnaryExprModel {
	jule::Ptr<_1bc8108a7_Data> _field_Expr;
	jule::Ptr<_1bc583a9d_Token> _field_Op;
	

	inline bool operator==(_1ece0d65b_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1ece0d65b_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1ece0db89_StructArgExprModel {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Ptr<_1bc5bd511_FieldIns> _field_Field;
	jule::Ptr<_1bc8108a7_Data> _field_Expr;
	

	inline bool operator==(_1ece0db89_StructArgExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ece0db89_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1ece0e030_StructLitExprModel {
	jule::Ptr<_1bc5be0b1_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1ece0db89_StructArgExprModel>> _field_Args;
	


};
struct _1ece0e32c_AllocStructLitExprModel {
	jule::Ptr<_1ece0e030_StructLitExprModel> _field_Lit;
	

	inline bool operator==(_1ece0e32c_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_1ece0e32c_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1ece0e8b0_CastingExprModel {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1bc8411bd_TypeKind> _field_Kind;
	jule::Ptr<_1bc8411bd_TypeKind> _field_ExprKind;
	

	inline bool operator==(_1ece0e8b0_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_1ece0e8b0_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1ece10262_FnCallExprModel {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Ptr<_1ece1de96_FnIns> _field_Func;
	jule::Bool _field_IsCo = false;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1bc74261e_Scope> _field_Except;
	jule::Bool _field_Assigned = false;
	


};
struct _1ece1063b_SliceExprModel {
	jule::Ptr<_1bc8411bd_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _1ece10ae2_IndexingExprModel {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Ptr<_1bc8108a7_Data> _field_Expr;
	jule::Ptr<_1bc8108a7_Data> _field_Index;
	

	inline bool operator==(_1ece10ae2_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1ece10ae2_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1ece10ebb_AnonFnExprModel {
	jule::Ptr<_1ece1de96_FnIns> _field_Func;
	jule::Bool _field_Global = false;
	

	inline bool operator==(_1ece10ebb_AnonFnExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Global == _other._field_Global;
	}

	inline bool operator!=(_1ece10ebb_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _1ece11395_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any(nullptr);
	jule::Any _field_Val = jule::Any(nullptr);
	

	inline bool operator==(_1ece11395_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1ece11395_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1ece1184b_MapExprModel {
	jule::Ptr<_1bc8411bd_TypeKind> _field_KeyKind;
	jule::Ptr<_1bc8411bd_TypeKind> _field_ValKind;
	jule::Slice<jule::Ptr<_1ece11395_KeyValPairExprModel>> _field_Entries;
	


};
struct _1ece11dce_SlicingExprModel {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_1ece11dce_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1ece11dce_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1ece12462_TraitSubIdentExprModel {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1ece1b092_Fn> _field_Method;
	jule::Ptr<_1bc713a41_Trait> _field_Trt;
	

	inline bool operator==(_1ece12462_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_1ece12462_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1ece12d03_StructSubIdentExprModel {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Ptr<_1bc8108a7_Data> _field_Expr;
	jule::Ptr<_1ece1de96_FnIns> _field_Method;
	jule::Ptr<_1bc5bd511_FieldIns> _field_Field;
	jule::Ptr<_1bc5be0b1_StructIns> _field_Owner;
	

	inline bool operator==(_1ece12d03_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field &&
			this->_field_Owner == _other._field_Owner;
	}

	inline bool operator!=(_1ece12d03_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1ece132a9_StructStaticIdentExprModel {
	jule::Ptr<_1bc5be0b1_StructIns> _field_Structure;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1ece1de96_FnIns> _field_Method;
	

	inline bool operator==(_1ece132a9_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_1ece132a9_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1ece13683_ArrayExprModel {
	jule::Ptr<_1bc8505b7_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _1ece13980_TupleExprModel {
	jule::Slice<jule::Ptr<_1bc8108a7_Data>> _field_Datas;
	


};
struct _1ece13d59_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_1ece13d59_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1ece13d59_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ece14233_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_1ece14233_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1ece14233_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ece1460c_BuiltinNewCallExprModel {
	jule::Ptr<_1bc8411bd_TypeKind> _field_Kind;
	jule::Any _field_Init = jule::Any(nullptr);
	

	inline bool operator==(_1ece1460c_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_1ece1460c_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ece149d6_BuiltinPanicCallExprModel {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1ece149d6_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ece149d6_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ece14e8c_BuiltinAssertCallExprModel {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Log;
	

	inline bool operator==(_1ece14e8c_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_1ece14e8c_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ece15443_BuiltinMakeCallExprModel {
	jule::Ptr<_1bc8411bd_TypeKind> _field_Kind;
	jule::Any _field_Len = jule::Any(nullptr);
	jule::Any _field_Cap = jule::Any(nullptr);
	

	inline bool operator==(_1ece15443_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_1ece15443_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ece1581c_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Elements = jule::Any(nullptr);
	

	inline bool operator==(_1ece1581c_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_1ece1581c_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ece15b19_BuiltinLenCallExprModel {
	jule::Ptr<_1bc8108a7_Data> _field_Expr;
	

	inline bool operator==(_1ece15b19_BuiltinLenCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ece15b19_BuiltinLenCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ece15e16_BuiltinCapCallExprModel {
	jule::Ptr<_1bc8108a7_Data> _field_Expr;
	

	inline bool operator==(_1ece15e16_BuiltinCapCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ece15e16_BuiltinCapCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ece162e0_BuiltinDeleteCallExprModel {
	jule::Ptr<_1bc8108a7_Data> _field_Dest;
	jule::Ptr<_1bc8108a7_Data> _field_Key;
	

	inline bool operator==(_1ece162e0_BuiltinDeleteCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Key == _other._field_Key;
	}

	inline bool operator!=(_1ece162e0_BuiltinDeleteCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ece166b9_BuiltinCopyCallExprModel {
	jule::Ptr<_1bc8108a7_Data> _field_Dest;
	jule::Ptr<_1bc8108a7_Data> _field_Src;
	

	inline bool operator==(_1ece166b9_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_1ece166b9_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ece16a93_BuiltinErrorCallExprModel {
	jule::Ptr<_1ece1de96_FnIns> _field_Func;
	jule::Ptr<_1bc8108a7_Data> _field_Err;
	

	inline bool operator==(_1ece16a93_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_1ece16a93_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ece1264e_SizeofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1ece1264e_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ece1264e_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1ece172be_AlignofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1ece172be_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ece172be_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1ece175bb_RuneExprModel {
	jule::I32 _field_Code = 0;
	

	inline bool operator==(_1ece175bb_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_1ece175bb_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1ece178b8_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1ece178b8_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ece178b8_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1ece17c92_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	


};
struct _1ece1808e_FreeExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1ece1808e_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ece1808e_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1ece18d3c_RetType {
	jule::Ptr<_1bc848390_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _field_Idents;
	


};
struct _1ece195bd_Param {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1bc848390_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_1ece195bd_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1ece195bd_Param _other) { return !this->operator==(_other); }


};
struct _1ece1b092_Fn {
	jule::Ptr<_1bc784276_Sema> _field_sema;
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1bc594a59_Directive>> _field_Directives;
	jule::Ptr<_1bc5aa4ba_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1bc5a76a4_GenericDecl>> _field_Generics;
	jule::Ptr<_1ece18d3c_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1ece195bd_Param>> _field_Params;
	jule::Ptr<_1bc5bb333_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1ece1de96_FnIns>> _field_Instances;
	


};
struct _1ece1ceea_ParamIns {
	jule::Ptr<_1ece195bd_Param> _field_Decl;
	jule::Ptr<_1bc8411bd_TypeKind> _field_Kind;
	

	inline bool operator==(_1ece1ceea_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ece1ceea_ParamIns _other) { return !this->operator==(_other); }


};
struct _1ece1de96_FnIns {
	jule::Ptr<_1bc5be0b1_StructIns> _field_Owner;
	jule::Ptr<_1ece1b092_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1bc83e7d7_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1ece1ceea_ParamIns>> _field_Params;
	jule::Ptr<_1bc8411bd_TypeKind> _field_Result;
	jule::Ptr<_1bc74261e_Scope> _field_Scope;
	jule::Ptr<_1ece221a8_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon = false;
	jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)> _field_caller;
	jule::Bool _field_reloaded = false;
	


};
struct _1ece221a8_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	


};
struct _1ece236c6_Pass {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Str _field_Text;
	

	inline bool operator==(_1ece236c6_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_1ece236c6_Pass _other) { return !this->operator==(_other); }


};
struct _1ece2828b_symbolBuilder {
	jule::Ptr<_1ece2828b_symbolBuilder> _field_owner;
	jule::Trait<_1bc760ede_Importer> _field_importer;
	jule::Slice<_1ed6c7892_Log> _field_errors;
	jule::Ptr<_1bc59378e_Ast> _field_ast;
	jule::Ptr<_1bc80a50b_SymbolTable> _field_table;
	


};
struct _1bc713a41_Trait {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1bc848390_TypeSymbol>> _field_Inherits;
	jule::Slice<jule::Ptr<_1ece1b092_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1bc5bb333_Struct>> _field_Implemented;
	


};
struct _1bc7156d0_EnumItem {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1bc8119eb_Value> _field_Value;
	

	inline bool operator==(_1bc7156d0_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1bc7156d0_EnumItem _other) { return !this->operator==(_other); }


};
struct _1bc71624c_Enum {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1bc848390_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1bc7156d0_EnumItem>> _field_Items;
	


};
struct _1bc717380_TypeEnumItem {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1bc848390_TypeSymbol> _field_Kind;
	

	inline bool operator==(_1bc717380_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1bc717380_TypeEnumItem _other) { return !this->operator==(_other); }


};
struct _1bc717957_TypeEnum {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1bc717380_TypeEnumItem>> _field_Items;
	


};
struct _1bc71aaae_comptimeRange {
	jule::Trait<_1bc71a88e_comptimeRangeKind> _field_kind;
	

	inline bool operator==(_1bc71aaae_comptimeRange _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1bc71aaae_comptimeRange _other) { return !this->operator==(_other); }


};
struct _1bc71b582_comptimeStructField {
	jule::Ptr<_1bc5bd511_FieldIns> _field_field;
	

	inline bool operator==(_1bc71b582_comptimeStructField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1bc71b582_comptimeStructField _other) { return !this->operator==(_other); }


};
struct _1bc71d243_comptimeStructFields {
	jule::Slice<jule::Ptr<_1bc5bd511_FieldIns>> _field_fields;
	


};
struct _1bc71e83d_comptimeStatic {
	jule::Ptr<_1bc7a750d_Var> _field_field;
	

	inline bool operator==(_1bc71e83d_comptimeStatic _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1bc71e83d_comptimeStatic _other) { return !this->operator==(_other); }


};
struct _1bc7214ee_comptimeStatics {
	jule::Slice<jule::Ptr<_1bc7a750d_Var>> _field_fields;
	


};
struct _1bc722ae9_comptimeEnumField {
	jule::Ptr<_1bc7156d0_EnumItem> _field_field;
	

	inline bool operator==(_1bc722ae9_comptimeEnumField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1bc722ae9_comptimeEnumField _other) { return !this->operator==(_other); }


};
struct _1bc723e91_comptimeEnumFields {
	jule::Slice<jule::Ptr<_1bc7156d0_EnumItem>> _field_fields;
	


};
struct _1bc72558b_comptimeParam {
	jule::Ptr<_1ece1ceea_ParamIns> _field_param;
	

	inline bool operator==(_1bc72558b_comptimeParam _other) {
		return 
			this->_field_param == _other._field_param;
	}

	inline bool operator!=(_1bc72558b_comptimeParam _other) { return !this->operator==(_other); }


};
struct _1bc727802_comptimeParams {
	jule::Slice<jule::Ptr<_1ece1ceea_ParamIns>> _field_params;
	


};
struct _1bc728dec_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_1bc72a4e7_comptimeTypeInfo>> _field_types;
	


};
struct _1bc72a4e7_comptimeTypeInfo {
	jule::Ptr<_1bc8411bd_TypeKind> _field_base;
	

	inline bool operator==(_1bc72a4e7_comptimeTypeInfo _other) {
		return 
			this->_field_base == _other._field_base;
	}

	inline bool operator!=(_1bc72a4e7_comptimeTypeInfo _other) { return !this->operator==(_other); }


};
struct _1bc731a09_comptimeValue {
	jule::Ptr<_1bc8108a7_Data> _field_data;
	

	inline bool operator==(_1bc731a09_comptimeValue _other) {
		return 
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1bc731a09_comptimeValue _other) { return !this->operator==(_other); }


};
struct _1bc734358_comptimeFiles {
	jule::Slice<jule::Ptr<_1bc80a50b_SymbolTable>> _field_files;
	


};
struct _1bc735953_comptimeFile {
	jule::Ptr<_1bc80a50b_SymbolTable> _field_file;
	

	inline bool operator==(_1bc735953_comptimeFile _other) {
		return 
			this->_field_file == _other._field_file;
	}

	inline bool operator!=(_1bc735953_comptimeFile _other) { return !this->operator==(_other); }


};
struct _1bc739d64_constraintChecker {
	jule::Ptr<_1bc784276_Sema> _field_s;
	jule::Slice<jule::Ptr<_1bc5a76a4_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1bc83e7d7_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1bc8403cb_TypeAlias>> _field_genericsA;
	jule::Ptr<_1ece1de96_FnIns> _field_fi;
	jule::Ptr<_1bc5be0b1_StructIns> _field_si;
	jule::Ptr<_1bc583a9d_Token> _field_et;
	jule::Bool _field_uniq = false;
	


};
struct _1bc73c1b8_Impl {
	jule::Ptr<_1bc59563c_TypeDecl> _field_Base;
	jule::Ptr<_1bc59563c_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1ece1b092_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1bc7a750d_Var>> _field_Statics;
	


};
struct _1bc74261e_Scope {
	jule::Ptr<_1bc74261e_Scope> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<jule::Any> _field_Stmts;
	


};
struct _1bc742a3c_If {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1bc74261e_Scope> _field_Scope;
	

	inline bool operator==(_1bc742a3c_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1bc742a3c_If _other) { return !this->operator==(_other); }


};
struct _1bc742d39_Else {
	jule::Ptr<_1bc74261e_Scope> _field_Scope;
	

	inline bool operator==(_1bc742d39_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1bc742d39_Else _other) { return !this->operator==(_other); }


};
struct _1bc743257_Conditional {
	jule::Slice<jule::Ptr<_1bc742a3c_If>> _field_Elifs;
	jule::Ptr<_1bc742d39_Else> _field_Default;
	


};
struct _1bc743554_InfIter {
	jule::Ptr<_1bc74261e_Scope> _field_Scope;
	

	inline bool operator==(_1bc743554_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1bc743554_InfIter _other) { return !this->operator==(_other); }


};
struct _1bc743a0a_WhileIter {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1bc74261e_Scope> _field_Scope;
	

	inline bool operator==(_1bc743a0a_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1bc743a0a_WhileIter _other) { return !this->operator==(_other); }


};
struct _1bc744456_RangeIter {
	jule::Ptr<_1bc8108a7_Data> _field_Expr;
	jule::Ptr<_1bc74261e_Scope> _field_Scope;
	jule::Ptr<_1bc7a750d_Var> _field_KeyA;
	jule::Ptr<_1bc7a750d_Var> _field_KeyB;
	

	inline bool operator==(_1bc744456_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1bc744456_RangeIter _other) { return !this->operator==(_other); }


};
struct _1bc7447db_ContSt {
	jule::Uintptr _field_It = 0;
	

	inline bool operator==(_1bc7447db_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_1bc7447db_ContSt _other) { return !this->operator==(_other); }


};
struct _1bc744bb5_BreakSt {
	jule::Uintptr _field_It = 0;
	jule::Uintptr _field_Mtch = 0;
	

	inline bool operator==(_1bc744bb5_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_1bc744bb5_BreakSt _other) { return !this->operator==(_other); }


};
struct _1bc744eb2_Label {
	jule::Str _field_Ident;
	

	inline bool operator==(_1bc744eb2_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1bc744eb2_Label _other) { return !this->operator==(_other); }


};
struct _1bc74538b_GotoSt {
	jule::Str _field_Ident;
	jule::Ptr<_1bc744eb2_Label> _field_Label;
	

	inline bool operator==(_1bc74538b_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1bc74538b_GotoSt _other) { return !this->operator==(_other); }


};
struct _1bc745765_Postfix {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Op;
	

	inline bool operator==(_1bc745765_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1bc745765_Postfix _other) { return !this->operator==(_other); }


};
struct _1bc745c1b_Assign {
	jule::Ptr<_1ece0cc87_OperandExprModel> _field_L;
	jule::Ptr<_1ece0cc87_OperandExprModel> _field_R;
	jule::Ptr<_1bc583a9d_Token> _field_Op;
	

	inline bool operator==(_1bc745c1b_Assign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1bc745c1b_Assign _other) { return !this->operator==(_other); }


};
struct _1bc7460e5_MultiAssign {
	jule::Slice<jule::Ptr<_1bc8108a7_Data>> _field_L;
	jule::Any _field_R = jule::Any(nullptr);
	


};
struct _1bc746755_Match {
	jule::Ptr<_1bc8108a7_Data> _field_Expr;
	jule::Bool _field_TypeMatch = false;
	jule::Bool _field_Comptime = false;
	jule::Slice<jule::Ptr<_1bc74738d_Case>> _field_Cases;
	jule::Ptr<_1bc74738d_Case> _field_Default;
	


};
struct _1bc74738d_Case {
	jule::Ptr<_1bc746755_Match> _field_Owner;
	jule::Ptr<_1bc74261e_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1bc8108a7_Data>> _field_Exprs;
	jule::Ptr<_1bc74738d_Case> _field_Next;
	


};
struct _1bc747987_FallSt {
	jule::Uintptr _field_DestCase = 0;
	

	inline bool operator==(_1bc747987_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_1bc747987_FallSt _other) { return !this->operator==(_other); }


};
struct _1bc747d1c_RetSt {
	jule::Ptr<_1ece1de96_FnIns> _field_Func;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1bc747d1c_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1bc747d1c_RetSt _other) { return !this->operator==(_other); }


};
struct _1bc74847c_scopeLabel {
	jule::Ptr<_1bc583a9d_Token> _field_token;
	jule::Ptr<_1bc744eb2_Label> _field_label;
	jule::I64 _field_pos = 0;
	jule::Ptr<_1bc749923_scopeChecker> _field_scope;
	jule::Bool _field_used = false;
	

	inline bool operator==(_1bc74847c_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1bc74847c_scopeLabel _other) { return !this->operator==(_other); }


};
struct _1bc748a10_scopeGoto {
	jule::Ptr<_1bc74538b_GotoSt> _field_st;
	jule::Ptr<_1bc5a7e57_GotoSt> _field_gt;
	jule::Ptr<_1bc749923_scopeChecker> _field_scope;
	jule::I64 _field_pos = 0;
	

	inline bool operator==(_1bc748a10_scopeGoto _other) {
		return 
			this->_field_st == _other._field_st &&
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1bc748a10_scopeGoto _other) { return !this->operator==(_other); }


};
struct _1bc749923_scopeChecker {
	jule::Ptr<_1bc583a9d_Token> _field_calledFrom;
	jule::Ptr<_1bc784276_Sema> _field_s;
	jule::Ptr<_1ece1de96_FnIns> _field_owner;
	jule::Ptr<_1bc749923_scopeChecker> _field_parent;
	jule::I64 _field_childIndex = 0;
	jule::Ptr<_1bc80a50b_SymbolTable> _field_table;
	jule::Ptr<_1bc74261e_Scope> _field_scope;
	jule::Ptr<_1bc5aa4ba_ScopeTree> _field_tree;
	jule::Ptr<_1ece1de96_FnIns> _field_result;
	jule::Uintptr _field_it = 0;
	jule::Uintptr _field_cse = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1bc74847c_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1bc748a10_scopeGoto>>> _field_gotos;
	jule::I64 _field_i = 0;
	

	inline bool operator==(_1bc749923_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1bc749923_scopeChecker _other) { return !this->operator==(_other); }


};
struct _1bc75c958_directiveChecker {
	jule::Ptr<_1bc784276_Sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1bc594a59_Directive>>> _field_d;
	jule::Any _field_o;
	

	inline bool operator==(_1bc75c958_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1bc75c958_directiveChecker _other) { return !this->operator==(_other); }


};
struct _1bc763e04_ImportInfo {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	jule::Bool _field_ImportAll = false;
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _field_Selected;
	jule::Ptr<_1bc766d2a_Package> _field_Package;
	jule::I64 _field_ModId = 0;
	


};
struct _1bc766d2a_Package {
	jule::Slice<jule::Ptr<_1bc80a50b_SymbolTable>> _field_Files;
	


};
struct _1bc78364e_commonSemaMeta {
	jule::Slice<jule::Ptr<_1bc72a4e7_comptimeTypeInfo>> _field_comptimeTypeInfos;
	


};
struct _1bc784276_Sema {
	jule::Slice<_1ed6c7892_Log> _field_errors;
	jule::Slice<jule::Ptr<_1bc80a50b_SymbolTable>> _field_files;
	jule::Ptr<_1bc80a50b_SymbolTable> _field_file;
	jule::I64 _field_flags = 0LL;
	jule::Ptr<_1bc78364e_commonSemaMeta> _field_meta;
	


};
struct _1bc7a3e44_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled = false;
	


};
struct _1bc7a6353_IterRelation {
	jule::Ptr<_1bc7a750d_Var> _field_Range;
	

	inline bool operator==(_1bc7a6353_IterRelation _other) {
		return 
			this->_field_Range == _other._field_Range;
	}

	inline bool operator!=(_1bc7a6353_IterRelation _other) { return !this->operator==(_other); }


};
struct _1bc7a750d_Var {
	jule::Ptr<_1bc74261e_Scope> _field_Scope;
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1bc848390_TypeSymbol> _field_Kind;
	jule::Ptr<_1bc8119eb_Value> _field_Value;
	jule::Ptr<_1ece221a8_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1bc594a59_Directive>> _field_Directives;
	jule::Ptr<_1bc7a6353_IterRelation> _field_IterRelation;
	jule::I64 _field_RetOrder = -2LL;
	jule::Slice<jule::Ptr<_1bc7a750d_Var>> _field_Depends;
	


};
struct _1bc7a8322_FuncPattern {
	


};
struct _1bc7e77d4_typeCompatibilityChecker {
	jule::Ptr<_1bc784276_Sema> _field_s;
	jule::Ptr<_1bc8411bd_TypeKind> _field_dest;
	jule::Ptr<_1bc8411bd_TypeKind> _field_src;
	jule::Ptr<_1bc583a9d_Token> _field_errorToken;
	

	inline bool operator==(_1bc7e77d4_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1bc7e77d4_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
struct _1bc7e9583_assignTypeChecker {
	jule::Ptr<_1bc784276_Sema> _field_s;
	jule::Ptr<_1bc8411bd_TypeKind> _field_dest;
	jule::Ptr<_1bc8108a7_Data> _field_d;
	jule::Ptr<_1bc583a9d_Token> _field_errorToken;
	

	inline bool operator==(_1bc7e9583_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1bc7e9583_assignTypeChecker _other) { return !this->operator==(_other); }


};
struct _1bc7eae58_dynamicTypeAnnotation {
	jule::Ptr<_1bc81259b_Eval> _field_e;
	jule::Ptr<_1ece1de96_FnIns> _field_f;
	jule::Ptr<_1ece1ceea_ParamIns> _field_p;
	jule::Ptr<_1bc8108a7_Data> _field_a;
	jule::Ptr<_1bc583a9d_Token> _field_errorToken;
	jule::Ptr<_1bc8411bd_TypeKind>* _field_k = nullptr;
	jule::Ptr<_1bc59563c_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1bc8411bd_TypeKind>> _field_ignored;
	


};
struct _1bc800cb5_fnCallArgChecker {
	jule::Ptr<_1bc81259b_Eval> _field_e;
	jule::Slice<jule::Ptr<_1bc599971_Expr>> _field_args;
	jule::Ptr<_1bc583a9d_Token> _field_errorToken;
	jule::Ptr<_1ece1de96_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation = false;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1bc8411bd_TypeKind>> _field_ignored;
	


};
struct _1bc803bec_structLitChecker {
	jule::Ptr<_1bc81259b_Eval> _field_e;
	jule::Ptr<_1bc583a9d_Token> _field_errorToken;
	jule::Ptr<_1bc5be0b1_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1ece0db89_StructArgExprModel>> _field_args;
	


};
struct _1bc8059ce_rangeChecker {
	jule::Ptr<_1bc749923_scopeChecker> _field_sc;
	jule::Ptr<_1bc5b0190_RangeKind> _field_rang;
	jule::Ptr<_1bc744456_RangeIter> _field_Kind;
	jule::Ptr<_1bc8108a7_Data> _field_d;
	

	inline bool operator==(_1bc8059ce_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1bc8059ce_rangeChecker _other) { return !this->operator==(_other); }


};
struct _1bc808240_retTypeChecker {
	jule::Ptr<_1bc749923_scopeChecker> _field_sc;
	jule::Ptr<_1ece1de96_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1bc8411bd_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_1bc599971_Expr>> _field_exprs;
	jule::Ptr<_1bc583a9d_Token> _field_errorToken;
	jule::Any _field_model = jule::Any(nullptr);
	


};
struct _1bc80a50b_SymbolTable {
	jule::Ptr<_1bc589367_File> _field_File;
	jule::Slice<_1ece236c6_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1bc763e04_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1bc7a750d_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1bc8403cb_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1bc5bb333_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1ece1b092_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1bc713a41_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1bc71624c_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1bc717957_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1bc73c1b8_Impl>> _field_Impls;
	


};
struct _1bc8108a7_Data {
	jule::Bool _field_untyped = false;
	jule::Ptr<_1bc8411bd_TypeKind> _field_Kind;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Bool _field_Lvalue = false;
	jule::Bool _field_IsRune = false;
	jule::Any _field_Model = jule::Any(nullptr);
	jule::Bool _field_Decl = false;
	jule::Ptr<_230d58386_Const> _field_Constant;
	

	inline bool operator==(_1bc8108a7_Data _other) {
		return 
			this->_field_untyped == _other._field_untyped &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_1bc8108a7_Data _other) { return !this->operator==(_other); }


};
struct _1bc8119eb_Value {
	jule::Ptr<_1bc599971_Expr> _field_Expr;
	jule::Ptr<_1bc8108a7_Data> _field_Data;
	

	inline bool operator==(_1bc8119eb_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1bc8119eb_Value _other) { return !this->operator==(_other); }


};
struct _1bc81259b_Eval {
	jule::Ptr<_1bc784276_Sema> _field_s;
	jule::Trait<_1bc860c04_Lookup> _field_lookup;
	jule::Ptr<_1bc8411bd_TypeKind> _field_prefix;
	jule::Bool _field_unsafety = false;
	jule::Bool _field_immutable = false;
	jule::Bool _field_ignored = false;
	jule::Bool _field_disBuiltin = false;
	jule::Ptr<_1bc7a750d_Var> _field_owner;
	jule::Ptr<_1bc5bd511_FieldIns> _field_field;
	jule::Bool _field_arg = false;
	

	inline bool operator==(_1bc81259b_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1bc81259b_Eval _other) { return !this->operator==(_other); }


};
struct _1bc830cc3_unaryEval {
	jule::Ptr<_1bc81259b_Eval> _field_e;
	jule::Ptr<_1bc8108a7_Data> _field_d;
	jule::Ptr<_1bc59ba2d_UnaryExpr> _field_u;
	

	inline bool operator==(_1bc830cc3_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1bc830cc3_unaryEval _other) { return !this->operator==(_other); }


};
struct _1bc832c5e_binaryEval {
	jule::Ptr<_1bc81259b_Eval> _field_e;
	jule::Ptr<_1bc8108a7_Data> _field_l;
	jule::Ptr<_1bc8108a7_Data> _field_r;
	jule::Ptr<_1bc583a9d_Token> _field_op;
	

	inline bool operator==(_1bc832c5e_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1bc832c5e_binaryEval _other) { return !this->operator==(_other); }


};
struct _1bc83e7d7_InsGeneric {
	jule::Ptr<_1bc8411bd_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_1bc8411bd_TypeKind>> _field_Constraint;
	


};
struct _1bc8403cb_TypeAlias {
	jule::Ptr<_1bc5aa4ba_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Generic = false;
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1bc848390_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1bc8403cb_TypeAlias>> _field_Generics;
	


};
struct _1bc8411bd_TypeKind {
	jule::Str _field_BindIdent;
	jule::Bool _field_Generic = false;
	jule::Bool _field_Variadic = false;
	jule::Trait<_1bc840c17_Kind> _field_Kind;
	

	inline bool operator==(_1bc8411bd_TypeKind _other) {
		return 
			this->_field_BindIdent == _other._field_BindIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1bc8411bd_TypeKind _other) { return !this->operator==(_other); }


};
struct _1bc848390_TypeSymbol {
	jule::Ptr<_1bc59563c_TypeDecl> _field_Decl;
	jule::Ptr<_1bc8411bd_TypeKind> _field_Kind;
	

	inline bool operator==(_1bc848390_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1bc848390_TypeSymbol _other) { return !this->operator==(_other); }


};
struct _1bc848c97_Prim {
	jule::Str _field_Kind;
	

	inline bool operator==(_1bc848c97_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1bc848c97_Prim _other) { return !this->operator==(_other); }


};
struct _1bc84c7c3_Sptr {
	jule::Ptr<_1bc8411bd_TypeKind> _field_Elem;
	

	inline bool operator==(_1bc84c7c3_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1bc84c7c3_Sptr _other) { return !this->operator==(_other); }


};
struct _1bc84d296_Slc {
	jule::Ptr<_1bc8411bd_TypeKind> _field_Elem;
	

	inline bool operator==(_1bc84d296_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1bc84d296_Slc _other) { return !this->operator==(_other); }


};
struct _1bc84dd8a_Tuple {
	jule::Slice<jule::Ptr<_1bc8411bd_TypeKind>> _field_Types;
	


};
struct _1bc84e93a_Map {
	jule::Ptr<_1bc8411bd_TypeKind> _field_Key;
	jule::Ptr<_1bc8411bd_TypeKind> _field_Val;
	

	inline bool operator==(_1bc84e93a_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1bc84e93a_Map _other) { return !this->operator==(_other); }


};
struct _1bc8505b7_Arr {
	jule::Bool _field_Auto = false;
	jule::I64 _field_N = 0;
	jule::Ptr<_1bc8411bd_TypeKind> _field_Elem;
	

	inline bool operator==(_1bc8505b7_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1bc8505b7_Arr _other) { return !this->operator==(_other); }


};
struct _1bc85108a_Ptr {
	jule::Ptr<_1bc8411bd_TypeKind> _field_Elem;
	

	inline bool operator==(_1bc85108a_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1bc85108a_Ptr _other) { return !this->operator==(_other); }


};
struct _1bc85208b_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	inline bool operator==(_1bc85208b_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1bc85208b_referencer _other) { return !this->operator==(_other); }


};
struct _1bc85307b_typeChecker {
	jule::Ptr<_1bc784276_Sema> _field_s;
	jule::Trait<_1bc860c04_Lookup> _field_rootLookup;
	jule::Trait<_1bc860c04_Lookup> _field_lookup;
	jule::Ptr<_1bc85208b_referencer> _field_referencer;
	jule::Ptr<_1ece221a8_ReferenceStack> _field_refers;
	jule::Ptr<_1bc583a9d_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1bc5a76a4_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1bc8411bd_TypeKind>>* _field_ignoredGenerics = nullptr;
	jule::Slice<jule::Ptr<_1bc8403cb_TypeAlias>> _field_useGenerics;
	jule::Bool _field_cycleRisk = true;
	jule::Bool _field_disBuiltin = false;
	jule::Bool _field_selection = false;
	jule::Ptr<_1bc8403cb_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1bc8403cb_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch = false;
	


};
struct _1bc85ac10_identTypeLookup {
	

	inline bool operator==(_1bc85ac10_identTypeLookup _other) { return true; }

	inline bool operator!=(_1bc85ac10_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _1bd3a9e01_FileInfo {
	jule::Ptr<_1bc59378e_Ast> _field_Ast;
	jule::Slice<_1ed6c7892_Log> _field_Errors;
	


};
struct _1bd400b7d_stmt {
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _field_tokens;
	jule::Bool _field_terminated = false;
	


};
struct _1bd40151e_scopeParser {
	jule::Ptr<_1bd41e7d4_parser> _field_p;
	jule::Ptr<_1bc5aa4ba_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1bd400b7d_stmt>> _field_stmts;
	jule::I64 _field_pos = 0;
	


};
struct _1bd40de44_exprBuilder {
	jule::Ptr<_1bd41e7d4_parser> _field_p;
	

	inline bool operator==(_1bd40de44_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1bd40de44_exprBuilder _other) { return !this->operator==(_other); }


};
struct _1bd41b3d5_assignInfo {
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _field_l;
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _field_r;
	jule::Ptr<_1bc583a9d_Token> _field_setter;
	jule::Bool _field_ok = false;
	


};
struct _1bd41e7d4_parser {
	jule::Ptr<_1bc59378e_Ast> _field_ast;
	jule::Slice<jule::Ptr<_1bc594a59_Directive>> _field_directives;
	jule::Slice<_1ed6c7892_Log> _field_errors;
	jule::Ptr<_1bd40de44_exprBuilder> _field_ep;
	


};
struct _1bd4319b1_typeBuilder {
	jule::Ptr<_1bd41e7d4_parser> _field_p;
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _field_tokens;
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = false;
	


};
struct _1bcacb931_CompileInfo {
	jule::Bool _field_Prod = false;
	jule::Bool _field_Test = false;
	jule::Str _field_Compiler = jule::Str::lit("clang", 5);
	jule::Str _field_CppStd = jule::Str::lit("cpp14", 5);
	

	inline bool operator==(_1bcacb931_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_1bcacb931_CompileInfo _other) { return !this->operator==(_other); }


};
struct _1bcacce0a_directiveEval {
	jule::Slice<_1ed6c7892_Log> _field_logs;
	jule::Ptr<_1bc594a59_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _1bd435ae7_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1bc763e04_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _1bd43ad0b_OrderedDefines {
	jule::Slice<jule::Ptr<_1bc5bb333_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1bc7a750d_Var>> _field_Globals;
	


};
struct _1bd43b070_defineOrderer {
	

	inline bool operator==(_1bd43b070_defineOrderer _other) { return true; }

	inline bool operator!=(_1bd43b070_defineOrderer _other) { return !this->operator==(_other); }


};
struct _1bd108a0c_liveTable {
	jule::Slice<jule::Ptr<_1bc7a750d_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1ece1de96_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1bc5be0b1_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1bc713a41_Trait>> _field_traits;
	


};
struct _1bd13d206_scopeDeadCode {
	jule::Ptr<_1bd13d206_scopeDeadCode> _field_parent;
	jule::Ptr<_1bc74261e_Scope> _field_s;
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1bc744eb2_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1bc74538b_GotoSt>>> _field_gotos;
	jule::Bool _field_except = false;
	

	inline bool operator==(_1bd13d206_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_1bd13d206_scopeDeadCode _other) { return !this->operator==(_other); }


};
struct _1bd14245d_exprDeadCode {
	jule::Ptr<_1bd13d206_scopeDeadCode> _field_s;
	

	inline bool operator==(_1bd14245d_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1bd14245d_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _1bc2d5679_SwapExprModel {
	jule::Ptr<_1bc8108a7_Data> _field_Left;
	jule::Ptr<_1bc8108a7_Data> _field_Right;
	

	inline bool operator==(_1bc2d5679_SwapExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1bc2d5679_SwapExprModel _other) { return !this->operator==(_other); }


};
struct _1bc2d5a97_EmptyCompareExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Neg = false;
	

	inline bool operator==(_1bc2d5a97_EmptyCompareExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Neg == _other._field_Neg;
	}

	inline bool operator!=(_1bc2d5a97_EmptyCompareExprModel _other) { return !this->operator==(_other); }


};
struct _1bc2d5d94_RefExprModel {
	jule::Ptr<_1bc7a750d_Var> _field_Var;
	

	inline bool operator==(_1bc2d5d94_RefExprModel _other) {
		return 
			this->_field_Var == _other._field_Var;
	}

	inline bool operator!=(_1bc2d5d94_RefExprModel _other) { return !this->operator==(_other); }


};
struct _1bc9c48d4_StrCompExprModel {
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Ptr<_230d58386_Const> _field_Right;
	jule::Bool _field_NotEq = false;
	

	inline bool operator==(_1bc9c48d4_StrCompExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_NotEq == _other._field_NotEq;
	}

	inline bool operator!=(_1bc9c48d4_StrCompExprModel _other) { return !this->operator==(_other); }


};
struct _1bc9c4e67_MutSlicingExprModel {
	jule::Ptr<_1bc583a9d_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_1bc9c4e67_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1bc9c4e67_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1bc9c5264_UnsafeBinaryExprModel {
	jule::Ptr<_1ece0d282_BinaryExprModel> _field_Node;
	

	inline bool operator==(_1bc9c5264_UnsafeBinaryExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1bc9c5264_UnsafeBinaryExprModel _other) { return !this->operator==(_other); }


};
struct _1bc9c5561_UnsafeIndexingExprModel {
	jule::Ptr<_1ece10ae2_IndexingExprModel> _field_Node;
	

	inline bool operator==(_1bc9c5561_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1bc9c5561_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1bc9c5990_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Ptr<_1ece1063b_SliceExprModel> _field_Elems;
	

	inline bool operator==(_1bc9c5990_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1bc9c5990_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1bc9c5d69_AppendToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Slice = jule::Any(nullptr);
	

	inline bool operator==(_1bc9c5d69_AppendToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Slice == _other._field_Slice;
	}

	inline bool operator!=(_1bc9c5d69_AppendToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1bc9c7024_scopeOptimizer {
	jule::I64 _field_i = 0;
	jule::Ptr<_1bc74261e_Scope> _field_scope;
	

	inline bool operator==(_1bc9c7024_scopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1bc9c7024_scopeOptimizer _other) { return !this->operator==(_other); }


};
struct _1bc9cd1b2_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	

	inline bool operator==(_1bc9cd1b2_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1bc9cd1b2_exprOptimizer _other) { return !this->operator==(_other); }


};
struct _1bd149597_Optimizer {
	jule::Ptr<_1bd4385ab_IR> _field_ir;
	

	inline bool operator==(_1bd149597_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1bd149597_Optimizer _other) { return !this->operator==(_other); }


};
struct _1bd171de9_AnsiEscape {
	

	inline bool operator==(_1bd171de9_AnsiEscape _other) { return true; }

	inline bool operator!=(_1bd171de9_AnsiEscape _other) { return !this->operator==(_other); }


};
struct _1bd173857_Logger {
	

	inline bool operator==(_1bd173857_Logger _other) { return true; }

	inline bool operator!=(_1bd173857_Logger _other) { return !this->operator==(_other); }


};
struct _1bcc81256_AbsTime {
	jule::U64 _field_Day = 0;
	jule::U64 _field_WeekDay = 0;
	jule::U64 _field_YearDay = 0;
	jule::U64 _field_Month = 0;
	jule::U64 _field_Year = 0;
	jule::U64 _field_Second = 0;
	jule::U64 _field_Minute = 0;
	jule::U64 _field_Hour = 0;
	

	inline bool operator==(_1bcc81256_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_1bcc81256_AbsTime _other) { return !this->operator==(_other); }


};
struct _1bcc8192c_Time {
	jule::U64 _field_sec = 0;
	

	inline bool operator==(_1bcc8192c_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1bcc8192c_Time _other) { return !this->operator==(_other); }


};
struct _1bd5a2a77_scopeCoder {
	jule::Ptr<_1bde29145_ObjectCoder> _field_oc;
	

	inline bool operator==(_1bd5a2a77_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1bd5a2a77_scopeCoder _other) { return !this->operator==(_other); }


};
struct _1bcbb68b7_exprCoder {
	jule::Ptr<_1bde29145_ObjectCoder> _field_oc;
	

	inline bool operator==(_1bcbb68b7_exprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1bcbb68b7_exprCoder _other) { return !this->operator==(_other); }


};
struct _1bcbc719c_TestCoder {
	jule::Ptr<_1bc5be0b1_StructIns> _field_t;
	jule::Ptr<_1ece1b092_Fn> _field_tmReset;
	jule::Ptr<_1ece1b092_Fn> _field_tmFailed;
	jule::Ptr<_1ece1b092_Fn> _field_tmSkipped;
	jule::Ptr<_1bde29145_ObjectCoder> _field_oc;
	

	inline bool operator==(_1bcbc719c_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1bcbc719c_TestCoder _other) { return !this->operator==(_other); }


};
struct _1bcbc9e6e_identCoder {
	

	inline bool operator==(_1bcbc9e6e_identCoder _other) { return true; }

	inline bool operator!=(_1bcbc9e6e_identCoder _other) { return !this->operator==(_other); }


};
struct _1bde2762c_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

	inline bool operator==(_1bde2762c_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_1bde2762c_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1bde27c04_traitHash {
	jule::Ptr<_1bc713a41_Trait> _field_t;
	jule::Str _field_ti;
	jule::Ptr<_1bc5be0b1_StructIns> _field_s;
	jule::I64 _field_i = 0;
	

	inline bool operator==(_1bde27c04_traitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_ti == _other._field_ti &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1bde27c04_traitHash _other) { return !this->operator==(_other); }


};
struct _1bde280cd_traitCast {
	jule::Ptr<_1bc713a41_Trait> _field_t1;
	jule::Ptr<_1bc713a41_Trait> _field_t2;
	

	inline bool operator==(_1bde280cd_traitCast _other) {
		return 
			this->_field_t1 == _other._field_t1 &&
			this->_field_t2 == _other._field_t2;
	}

	inline bool operator!=(_1bde280cd_traitCast _other) { return !this->operator==(_other); }


};
struct _1bde38792_customType {
	jule::Str _field_kind;
	

	inline bool operator==(_1bde38792_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1bde38792_customType _other) { return !this->operator==(_other); }


};
struct _1bde393a8_typeCoder {
	jule::Ptr<_1bde29145_ObjectCoder> _field_oc;
	jule::Ptr<_1bde42779_resultCoder> _field_rc;
	

	inline bool operator==(_1bde393a8_typeCoder _other) {
		return 
			this->_field_oc == _other._field_oc &&
			this->_field_rc == _other._field_rc;
	}

	inline bool operator!=(_1bde393a8_typeCoder _other) { return !this->operator==(_other); }


};
struct _1bde42779_resultCoder {
	jule::Ptr<_1bde393a8_typeCoder> _field_tc;
	

	inline bool operator==(_1bde42779_resultCoder _other) {
		return 
			this->_field_tc == _other._field_tc;
	}

	inline bool operator!=(_1bde42779_resultCoder _other) { return !this->operator==(_other); }


};
struct _1c317cd45_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::I64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

	inline bool operator==(_1c317cd45_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1c317cd45_Flag _other) { return !this->operator==(_other); }


};struct _1c31816d9_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::U64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

	inline bool operator==(_1c31816d9_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1c31816d9_Flag _other) { return !this->operator==(_other); }


};struct _1c3184dd5_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::F64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

	inline bool operator==(_1c3184dd5_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1c3184dd5_Flag _other) { return !this->operator==(_other); }


};struct _1c3188625_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Bool _field_default = false;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

	inline bool operator==(_1c3188625_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1c3188625_Flag _other) { return !this->operator==(_other); }


};struct _1c318bd21_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

	inline bool operator==(_1c318bd21_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1c318bd21_Flag _other) { return !this->operator==(_other); }


};
struct _1bdead383_FlagSet {
	jule::Slice<jule::Trait<_1bdeab7d2_CommonFlag>> _field_flags;
	


};
struct _1bdeb0d14_argParser {
	_1bdead383_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I64 _field_i = 0;
	


};
struct _1bde29145_ObjectCoder {
	_2096a4489_StrBuilder _field_Buf;
	_2096a4489_StrBuilder _field_resultDecls;
	_2096a4489_StrBuilder _field_anyObj;
	jule::Ptr<_1bd4385ab_IR> _field_ir;
	_1bde2762c_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1bde27c04_traitHash>> _field_tmap;
	jule::Slice<jule::U8> _field_indentBuffer;
	jule::Map<jule::Str,jule::Bool> _field_resultMap;
	jule::Slice<jule::Ptr<_1bc8411bd_TypeKind>> _field_anyTypeMap;
	jule::Slice<_1bde280cd_traitCast> _field_traitCastMap;
	jule::Ptr<_1bcbb68b7_exprCoder> _field_ec;
	jule::Ptr<_1bd5a2a77_scopeCoder> _field_sc;
	jule::Ptr<_1bde393a8_typeCoder> _field_tc;
	jule::I64 _field_headPos = 0;
	jule::I64 _field_declPos = 0;
	


};
struct _1bd108de7_ObjectDeadCode {
	_1bd108a0c_liveTable _field_live;
	jule::Ptr<_1bd4385ab_IR> _field_ir;
	


};
struct _1bd4385ab_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1bc766d2a_Package> _field_Main;
	jule::Slice<jule::Ptr<_1bc763e04_ImportInfo>> _field_Used;
	_1bd43ad0b_OrderedDefines _field_Ordered;
	


};
struct _1bc5be0b1_StructIns {
	jule::Bool _field_Checked = false;
	jule::Ptr<_1bc5bb333_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1bc83e7d7_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1bc5bd511_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1bc7a750d_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1ece1b092_Fn>> _field_Methods;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Comparable = false;
	jule::Ptr<_1ece221a8_ReferenceStack> _field_Refers;
	_1bc5ba420_Operators _field_Operators;
	


};
struct _1eeea092c_Cmd {
	_1eeea4bb7_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	


};
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1bc8108a7_Data__jule_tuple_x_1bc8108a7_Data {
	jule::Ptr<_1bc8108a7_Data> __jule_result_arg0;
	jule::Ptr<_1bc8108a7_Data> __jule_result_arg1;
};
struct __jule_tuple_x_1bc8108a7_Data__jule_tuple_bool {
	jule::Ptr<_1bc8108a7_Data> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1bc599971_Expr__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1bc599971_Expr>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1bc5b246c_Case__jule_tuple_bool {
	jule::Ptr<_1bc5b246c_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1bc5b246c_Case__jule_tuple_x_1bc5b12c3_Else {
	jule::Slice<jule::Ptr<_1bc5b246c_Case>> __jule_result_arg0;
	jule::Ptr<_1bc5b12c3_Else> __jule_result_arg1;
};
struct __jule_tuple__1bc5a9b07_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1bc5a8e47_AssignSt__jule_tuple_bool {
	jule::Ptr<_1bc5a8e47_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1bc59563c_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1bc59563c_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1bc598530_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1bc598530_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1bc59378e_Ast__jule_tuple_s_1ed6c7892_Log {
	jule::Slice<jule::Ptr<_1bc59378e_Ast>> __jule_result_arg0;
	jule::Slice<_1ed6c7892_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_1ed6c7892_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_1ed6c7892_Log> __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1bd4385ab_IR__jule_tuple_s_1ed6c7892_Log {
	jule::Ptr<_1bd4385ab_IR> __jule_result_arg0;
	jule::Slice<_1ed6c7892_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_i32 {
	jule::I32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__200733500_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I64 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__200733500_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__200733500_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__200733500_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I64 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1bc80a50b_SymbolTable__jule_tuple_s_1ed6c7892_Log {
	jule::Ptr<_1bc80a50b_SymbolTable> __jule_result_arg0;
	jule::Slice<_1ed6c7892_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1bc766d2a_Package__jule_tuple_s_1ed6c7892_Log {
	jule::Ptr<_1bc766d2a_Package> __jule_result_arg0;
	jule::Slice<_1ed6c7892_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1bc59378e_Ast__jule_tuple_s_1ed6c7892_Log {
	jule::Ptr<_1bc59378e_Ast> __jule_result_arg0;
	jule::Slice<_1ed6c7892_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1bc583a9d_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1bc583a9d_Token__jule_tuple_sx_1bc583a9d_Token {
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_1bc583a9d_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_ssx_1bc583a9d_Token__jule_tuple_s_1ed6c7892_Log {
	jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>> __jule_result_arg0;
	jule::Slice<_1ed6c7892_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline _2096a4489_StrBuilder static__2096a48da_New(jule::I64);
inline void _2096a4b93_Write(_2096a4489_StrBuilder*, jule::Slice<jule::U8>);
inline void _2096a4e4b_WriteStr(_2096a4489_StrBuilder*, jule::Str);
inline void _2096a5204_WriteByte(_2096a4489_StrBuilder*, jule::U8);
inline jule::Str _2096a5743_Str(_2096a4489_StrBuilder*);
inline void _2096a5941_Clear(_2096a4489_StrBuilder*);
inline jule::I64 _2096a5bc7_Len(_2096a4489_StrBuilder*);
inline jule::Slice<jule::U8> _2096a61e4_Buf(_2096a4489_StrBuilder*);
inline void _2096a649c_SetBuf(_2096a4489_StrBuilder*, jule::Slice<jule::U8>);
inline jule::U8 _1ed643995_index(_1ed643511_lazyBuff*, jule::I64);
inline void _1ed643c4d_append(_1ed643511_lazyBuff*, jule::U8);
inline jule::Str _1ed643ed4_string(_1ed643511_lazyBuff*);
inline jule::Exceptional<jule::Slice<jule::Ptr<_230a4148c_DirEntry>>> static__1ed646316_Read(jule::Str);
inline jule::VoidExceptional static__1ed646547_Create(jule::Str);
inline jule::VoidExceptional static__1ed646778_Remove(jule::Str);
inline jule::Ptr<_230a42922_File> static__230a42d40_New(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_230a42922_File>> static__230a43109_Create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__230a433c3_Read(jule::Str);
inline jule::VoidExceptional static__230a43769_Write(jule::Str, jule::Slice<jule::U8>, jule::I64);
inline jule::VoidExceptional _230a43ea6_Close(_230a42922_File*);
inline jule::Exceptional<jule::Ptr<_230a42922_File>> static__2095d4694_Open(jule::Str, jule::I64, jule::I64);
inline jule::VoidExceptional static__2095d48c5_Remove(jule::Str);
inline jule::Exceptional<jule::I64> _2095d4d59_Write(_230a42922_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _2095d519a_Read(_230a42922_File*, jule::Slice<jule::U8>);
inline jule::Bool _230a44e30_IsDir(_230a44a56_Status*);
inline jule::Bool _230a451b6_IsReg(_230a44a56_Status*);
inline jule::U64 _230a4544c_Size(_230a44a56_Status*);
inline jule::Exceptional<jule::Ptr<_230a44a56_Status>> static__1ed647218_Of(jule::Str);
inline jule::Bool _230d3c414_set(_230d45a49_decimal*, jule::Slice<jule::U8>);
inline __jule_tuple_u64__jule_tuple_bool _230d3c755_floatBits(_230d45a49_decimal*, _230d320b8_floatInfo*);
inline void _230d45e01_assign(_230d45a49_decimal*, jule::U64);
inline void _230d461a9_shift(_230d45a49_decimal*, jule::I64);
inline void _230d46462_roundDown(_230d45a49_decimal*, jule::I64);
inline void _230d4671a_roundUp(_230d45a49_decimal*, jule::I64);
inline void _230d469c3_round(_230d45a49_decimal*, jule::I64);
inline jule::U64 _230d46c59_roundedInteger(_230d45a49_decimal*);
inline jule::Ptr<_230d58386_Const> static__230d587c6_NewI64(jule::I64);
inline jule::Ptr<_230d58386_Const> static__230d58a90_NewU64(jule::U64);
inline jule::Ptr<_230d58386_Const> static__230d58d59_NewBool(jule::Bool);
inline jule::Ptr<_230d58386_Const> static__230d59123_NewStr(jule::Str);
inline jule::Ptr<_230d58386_Const> static__230d593dc_NewF64(jule::F64);
inline jule::Ptr<_230d58386_Const> static__230d595eb_NewNil(void);
inline jule::I64 _230d59c5b_ReadI64(_230d58386_Const*);
inline jule::U64 _230d59ee2_ReadU64(_230d58386_Const*);
inline jule::Bool _230d5a278_ReadBool(_230d58386_Const*);
inline jule::Str _230d5a50e_ReadStr(_230d58386_Const*);
inline jule::F64 _230d5a795_ReadF64(_230d58386_Const*);
inline jule::I64 _230d5aa2b_AsI64(_230d58386_Const*);
inline jule::U64 _230d5acb2_AsU64(_230d58386_Const*);
inline jule::F64 _230d5b048_AsF64(_230d58386_Const*);
inline void _230d5b301_SetI64(_230d58386_Const*, jule::I64);
inline void _230d5b5a9_SetU64(_230d58386_Const*, jule::U64);
inline void _230d5b862_SetBool(_230d58386_Const*, jule::Bool);
inline void _230d5bb1a_SetStr(_230d58386_Const*, jule::Str);
inline void _230d5bdc3_SetF64(_230d58386_Const*, jule::F64);
inline jule::Bool _230d5c357_IsI64(_230d58386_Const*);
inline jule::Bool _230d5c5dd_IsU64(_230d58386_Const*);
inline jule::Bool _230d5c874_IsBool(_230d58386_Const*);
inline jule::Bool _230d5cb0a_IsStr(_230d58386_Const*);
inline jule::Bool _230d5cd91_IsF64(_230d58386_Const*);
inline jule::Bool _230d5d127_IsNil(_230d58386_Const*);
inline jule::Bool _230d5d7a9_And(_230d58386_Const*, _230d58386_Const);
inline jule::Bool _230d5daea_Or(_230d58386_Const*, _230d58386_Const);
inline jule::Bool _230d60091_Add(_230d58386_Const*, _230d58386_Const);
inline jule::Bool _230d603d2_Sub(_230d58386_Const*, _230d58386_Const);
inline jule::Bool _230d60723_Mul(_230d58386_Const*, _230d58386_Const);
inline jule::Bool _230d60a64_Div(_230d58386_Const*, _230d58386_Const);
inline jule::Bool _230d60da5_Mod(_230d58386_Const*, _230d58386_Const);
inline jule::Bool _230d611e6_BitwiseAnd(_230d58386_Const*, _230d58386_Const);
inline jule::Bool _230d61537_BitwiseOr(_230d58386_Const*, _230d58386_Const);
inline jule::Bool _230d61878_Xor(_230d58386_Const*, _230d58386_Const);
inline jule::Bool _230d61bb9_Lshift(_230d58386_Const*, _230d58386_Const);
inline jule::Bool _230d6200a_Rshift(_230d58386_Const*, _230d58386_Const);
inline jule::U8 _1bc583e22_Prec(_1bc583a9d_Token*);
inline void _1bc589752_Fill(_1bc589367_File*, jule::Slice<jule::U8>);
inline jule::Str _1bc5899d8_Dir(_1bc589367_File*);
inline jule::Str _1bc589c6e_Name(_1bc589367_File*);
inline jule::Str _1bc58a346_GetRow(_1bc589367_File*, jule::I64);
inline void _1bbcac86b_pushErr(_1bbcac2d8_lex*, jule::Str, jule::Slice<jule::Any>);
inline void _1bbcacdcc_lex(_1bbcac2d8_lex*);
inline jule::Str _1bbcad21d_id(_1bbcac2d8_lex*, jule::Slice<jule::U8>*);
inline jule::Slice<jule::U8> _1bbcad4a4_resume(_1bbcac2d8_lex*);
inline void _1bbcad75c_lexLineComment(_1bbcac2d8_lex*, jule::Ptr<_1bc583a9d_Token>*);
inline void _1bbcada15_lexRangeComment(_1bbcac2d8_lex*, jule::Ptr<_1bc583a9d_Token>*);
inline jule::Str _1bc590280_num(_1bbcac2d8_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1bc59058d_escapeSeq(_1bbcac2d8_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1bc590989_getRune(_1bbcac2d8_lex*, jule::Slice<jule::U8>*, jule::Bool);
inline jule::Str _1bc590cca_lexRune(_1bbcac2d8_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1bc591061_lexStr(_1bbcac2d8_lex*);
inline void _1bc5914e5_newLine(_1bbcac2d8_lex*);
inline jule::Bool _1bc591a56_isOp(_1bbcac2d8_lex*, jule::Slice<jule::U8>*, jule::Str, jule::U64, jule::Ptr<_1bc583a9d_Token>*);
inline jule::Bool _1bc591e52_lexBasicOps(_1bbcac2d8_lex*, jule::Slice<jule::U8>, jule::Ptr<_1bc583a9d_Token>*);
inline jule::Bool _1bc59234d_lexId(_1bbcac2d8_lex*, jule::Slice<jule::U8>*, jule::Ptr<_1bc583a9d_Token>*);
inline jule::Bool _1bc592749_lexNum(_1bbcac2d8_lex*, jule::Slice<jule::U8>*, jule::Ptr<_1bc583a9d_Token>*);
inline jule::Ptr<_1bc583a9d_Token> _1bc5929d0_token(_1bbcac2d8_lex*);
inline jule::Bool _1bc5974c9_IsUnsafe(_1bc597166_PtrTypeDecl*);
inline jule::Bool _1bc597c6b_AutoSized(_1bc597908_ArrTypeDecl*);
inline jule::Bool _1bc5a387b_Unhandled(_1bc5a3507_FnCallExpr*);
inline jule::Bool _1bc5a3b12_Ignored(_1bc5a3507_FnCallExpr*);
inline jule::Bool _1bc5ab07b_IsSelf(_1bc5aac07_ParamDecl*);
inline jule::Bool _1bc5ac4bc_IsAnon(_1bc5ac159_FnDecl*);
inline jule::Bool _1bc5ae2c1_IsInf(_1bc5ade5d_Iter*);
inline jule::Bool _1bc5aeaeb_IsWhileNext(_1bc5ae788_WhileKind*);
inline jule::Ptr<_1bc5bd511_FieldIns> _1bc5b87b4_instance(jule::Ptr<_1bc5b8440_Field>);
inline jule::Ptr<_1bc5be0b1_StructIns> _1bc5bb795_instance(jule::Ptr<_1bc5bb333_Struct>);
inline jule::Ptr<_1bc5be0b1_StructIns> _1bc5bbaa3_appendInstance(_1bc5bb333_Struct*, jule::Ptr<_1bc5be0b1_StructIns>*);
inline jule::Ptr<_1ece1b092_Fn> _1bc5bbe9e_FindMethod(_1bc5bb333_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_1bc7a750d_Var> _1bc5bc2e0_FindStatic(_1bc5bb333_Struct*, jule::Str);
inline jule::Ptr<_1bc5b8440_Field> _1bc5bc631_FindField(_1bc5bb333_Struct*, jule::Str);
inline jule::Bool _1bc5bc972_IsImplements(_1bc5bb333_Struct*, jule::Ptr<_1bc713a41_Trait>);
inline jule::Bool _1bc5bccb3_IsUses(_1bc5bb333_Struct*, jule::Ptr<_1bc5bb333_Struct>);
inline jule::Ptr<_1ece1ceea_ParamIns> _1ece19953_instance(jule::Ptr<_1ece195bd_Param>);
inline jule::Bool _1ece19bd9_IsSelf(_1ece195bd_Param*);
inline jule::Bool _1ece19e70_IsRef(_1ece195bd_Param*);
inline jule::Bool _1ece1b515_IsVoid(_1ece1b092_Fn*);
inline jule::Bool _1ece1b79b_IsMethod(_1ece1b092_Fn*);
inline jule::Bool _1ece1ba32_IsEntryPoint(_1ece1b092_Fn*);
inline jule::Bool _1ece1bcb8_IsInit(_1ece1b092_Fn*);
inline jule::Bool _1ece1c04e_IsAnon(_1ece1b092_Fn*);
inline jule::Bool _1ece1c2d5_AnyVar(_1ece1b092_Fn*);
inline jule::Ptr<_1ece1de96_FnIns> _1ece1c56b_instanceForce(jule::Ptr<_1ece1b092_Fn>);
inline jule::Ptr<_1ece1de96_FnIns> _1ece1c802_instance(jule::Ptr<_1ece1b092_Fn>);
inline jule::Ptr<_1ece1de96_FnIns> _1ece1cb10_appendInstance(_1ece1b092_Fn*, jule::Ptr<_1ece1de96_FnIns>*);
inline jule::Str _1ece1d35d_Str(_1ece1ceea_ParamIns*);
inline jule::Str _1ece1e2d7_Str(_1ece1de96_FnIns*);
inline jule::Bool _1ece1e628_Equal(jule::Ptr<_1ece1de96_FnIns>, jule::Ptr<_1bc8411bd_TypeKind>);
inline jule::Bool _1ece1eabd_EqualFn(jule::Ptr<_1ece1de96_FnIns>, jule::Ptr<_1ece1de96_FnIns>*);
inline jule::Bool _1ece1ee0e_equalTrait(jule::Ptr<_1ece1de96_FnIns>, jule::Ptr<_1ece1de96_FnIns>*);
inline jule::Slice<jule::Ptr<_1bc8411bd_TypeKind>> _1ece20195_Types(_1ece1de96_FnIns*);
inline jule::Bool _1ece2042b_IsBuiltin(_1ece1de96_FnIns*);
inline jule::Bool _1ece206b2_IsAnon(_1ece1de96_FnIns*);
inline jule::Bool _1ece20a03_Same(_1ece1de96_FnIns*, jule::Ptr<_1ece1de96_FnIns>);
inline jule::Str _1ece20d44_GetKindStr(_1ece1de96_FnIns*, jule::Bool);
inline jule::Ptr<_1ece221a8_ReferenceStack> static__1ece224a5_new(void);
inline jule::I64 _1ece228a1_Len(_1ece221a8_ReferenceStack*);
inline jule::Any _1ece22be2_At(_1ece221a8_ReferenceStack*, jule::I64);
inline void _1ece22e9a_Push(_1ece221a8_ReferenceStack*, jule::Any);
inline jule::Bool _1c1a78a0b_Exist(_1ece221a8_ReferenceStack*, jule::Ptr<_1ece1de96_FnIns>);
inline jule::Bool _1c1d598ad_Exist(_1ece221a8_ReferenceStack*, jule::Ptr<_1bc7a750d_Var>);
inline jule::Bool _1c1e1ae03_Exist(_1ece221a8_ReferenceStack*, jule::Ptr<_1bc5be0b1_StructIns>);
inline jule::Bool _1c0a1c4ea_Exist(_1ece221a8_ReferenceStack*, jule::Ptr<_1bc713a41_Trait>);
inline void _1bc70d2aa_pushErr(_1ece2828b_symbolBuilder*, jule::Ptr<_1bc583a9d_Token>*, jule::Str, jule::Slice<jule::Any>);
inline void _1bc70da3b_pushSuggestion(_1ece2828b_symbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1bc70de37_checkCppUseDeclPath(_1ece2828b_symbolBuilder*, jule::Ptr<_1bc5b35a0_UseDecl>*, jule::Str*);
inline jule::Ptr<_1bc763e04_ImportInfo> _1bc70e245_buildCppHeaderImport(_1ece2828b_symbolBuilder*, jule::Ptr<_1bc5b35a0_UseDecl>*);
inline jule::Ptr<_1bc763e04_ImportInfo> _1bc70e586_buildStdImport(_1ece2828b_symbolBuilder*, jule::Ptr<_1bc5b35a0_UseDecl>*);
inline jule::Ptr<_1bc763e04_ImportInfo> _1bc70e8c7_buildIdentImport(jule::Ptr<_1ece2828b_symbolBuilder>, jule::Ptr<_1bc5b35a0_UseDecl>*);
inline jule::Ptr<_1bc763e04_ImportInfo> _1bc70ec18_buildImport(jule::Ptr<_1ece2828b_symbolBuilder>, jule::Ptr<_1bc5b35a0_UseDecl>*);
inline jule::Bool _1bc710059_checkDuplicateUseDecl(_1ece2828b_symbolBuilder*, jule::Ptr<_1bc763e04_ImportInfo>*);
inline void _1bc7103bc_implImportSelections(_1ece2828b_symbolBuilder*, jule::Ptr<_1bc763e04_ImportInfo>*, jule::Ptr<_1bc5b35a0_UseDecl>*);
inline jule::Str _1bc71070d_getAsLinkPath(jule::Ptr<_1ece2828b_symbolBuilder>, jule::Str);
inline void _1bc710b2b_pushCycleError(jule::Ptr<_1ece2828b_symbolBuilder>, jule::Ptr<_1ece2828b_symbolBuilder>*, jule::Str, _2096a4489_StrBuilder*);
inline void _1bc711049_pushCrossCycleError(jule::Ptr<_1ece2828b_symbolBuilder>, jule::Ptr<_1ece2828b_symbolBuilder>*, jule::Ptr<_1bc763e04_ImportInfo>*, jule::Ptr<_1bc583a9d_Token>*);
inline jule::Bool _1bc711445_checkImportCycles(jule::Ptr<_1ece2828b_symbolBuilder>, jule::Ptr<_1bc763e04_ImportInfo>, jule::Ptr<_1bc5b35a0_UseDecl>*);
inline void _1bc711863_checkPackageAccessibility(_1ece2828b_symbolBuilder*, jule::Ptr<_1bc5b35a0_UseDecl>*, jule::Str*, jule::Str*);
inline jule::Bool _1bc711c5e_importPackage(jule::Ptr<_1ece2828b_symbolBuilder>, jule::Ptr<_1bc763e04_ImportInfo>*, jule::Ptr<_1bc5b35a0_UseDecl>*);
inline jule::Ptr<_1bc763e04_ImportInfo> _1bc7120a0_importUseDecl(jule::Ptr<_1ece2828b_symbolBuilder>, jule::Ptr<_1bc5b35a0_UseDecl>*);
inline void _1bc71229d_importUseDecls(jule::Ptr<_1ece2828b_symbolBuilder>);
inline void _1bc712556_appendNode(_1ece2828b_symbolBuilder*, _1bc59463b_Node*);
inline void _1bc712754_appendNodes(_1ece2828b_symbolBuilder*);
inline void _1bc712a0c_pushDirectivePass(_1ece2828b_symbolBuilder*, jule::Ptr<_1bc594a59_Directive>*);
inline void _1bc712c0a_appendTopDirectives(_1ece2828b_symbolBuilder*);
inline void _1bc712e08_build(jule::Ptr<_1ece2828b_symbolBuilder>);
inline jule::Str _1bc713e09_Str(_1bc713a41_Trait*);
inline jule::Bool _1bc71424a_Equal(jule::Ptr<_1bc713a41_Trait>, jule::Ptr<_1bc8411bd_TypeKind>);
inline jule::Ptr<_1ece1b092_Fn> _1bc7146e0_FindMethod(_1bc713a41_Trait*, jule::Str);
inline jule::Ptr<_1ece1b092_Fn> _1bc714d72_findMethodInherit(_1bc713a41_Trait*, jule::Str*);
inline jule::Bool _1bc715a87_AutoExpr(_1bc7156d0_EnumItem*);
inline jule::Str _1bc7165c1_Str(_1bc71624c_Enum*);
inline jule::Bool _1bc716912_Equal(jule::Ptr<_1bc71624c_Enum>, jule::Ptr<_1bc8411bd_TypeKind>);
inline jule::Ptr<_1bc7156d0_EnumItem> _1bc716d41_FindItem(_1bc71624c_Enum*, jule::Str);
inline jule::Str _1bc717c98_Str(_1bc717957_TypeEnum*);
inline jule::Bool _1bc7180d9_Equal(jule::Ptr<_1bc717957_TypeEnum>, jule::Ptr<_1bc8411bd_TypeKind>);
inline jule::Ptr<_1bc717380_TypeEnumItem> _1bc718518_FindItem(_1bc717957_TypeEnum*, jule::Str);
inline jule::Str _1bc71ae33_Str(_1bc71aaae_comptimeRange*);
inline jule::Bool _1bc71b274_Equal(jule::Ptr<_1bc71aaae_comptimeRange>, jule::Ptr<_1bc8411bd_TypeKind>);
inline jule::Str _1bc71b94a_Str(_1bc71b582_comptimeStructField*);
inline jule::Bool _1bc71bc8b_Equal(jule::Ptr<_1bc71b582_comptimeStructField>, jule::Ptr<_1bc8411bd_TypeKind>);
inline jule::Ptr<_1bc8108a7_Data> _1bc71c330__Name(jule::Ptr<_1bc71b582_comptimeStructField>, jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc71c72b__Type(jule::Ptr<_1bc71b582_comptimeStructField>, jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc71cb27__Public(jule::Ptr<_1bc71b582_comptimeStructField>, jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc71ce35_subIdent(jule::Ptr<_1bc71b582_comptimeStructField>, jule::Str*);
inline jule::Str _1bc71d5b7_Str(_1bc71d243_comptimeStructFields*);
inline jule::Bool _1bc71d908_Equal(jule::Ptr<_1bc71d243_comptimeStructFields>, jule::Ptr<_1bc8411bd_TypeKind>);
inline void _1bc71dd7b_ready(_1bc71d243_comptimeStructFields*, jule::Ptr<_1bc7a750d_Var>*, jule::Ptr<_1bc7a750d_Var>*);
inline void _1bc71e299_step(_1bc71d243_comptimeStructFields*, jule::I64, jule::Ptr<_1bc7a750d_Var>*, jule::Ptr<_1bc7a750d_Var>*);
inline jule::I64 _1bc71e530_len(_1bc71d243_comptimeStructFields*);
inline jule::Str _1bc71ebb2_Str(_1bc71e83d_comptimeStatic*);
inline jule::Bool _1bc720003_Equal(jule::Ptr<_1bc71e83d_comptimeStatic>, jule::Ptr<_1bc8411bd_TypeKind>);
inline jule::Ptr<_1bc8108a7_Data> _1bc720630__Name(jule::Ptr<_1bc71e83d_comptimeStatic>, jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc720a2b__Type(jule::Ptr<_1bc71e83d_comptimeStatic>, jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc720e27__Public(jule::Ptr<_1bc71e83d_comptimeStatic>, jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc721268_subIdent(jule::Ptr<_1bc71e83d_comptimeStatic>, jule::Str*);
inline jule::Str _1bc721873_Str(_1bc7214ee_comptimeStatics*);
inline jule::Bool _1bc721bb4_Equal(jule::Ptr<_1bc7214ee_comptimeStatics>, jule::Ptr<_1bc8411bd_TypeKind>);
inline void _1bc722137_ready(_1bc7214ee_comptimeStatics*, jule::Ptr<_1bc7a750d_Var>*, jule::Ptr<_1bc7a750d_Var>*);
inline void _1bc722555_step(_1bc7214ee_comptimeStatics*, jule::I64, jule::Ptr<_1bc7a750d_Var>*, jule::Ptr<_1bc7a750d_Var>*);
inline jule::I64 _1bc7227db_len(_1bc7214ee_comptimeStatics*);
inline jule::Str _1bc72307d_Str(_1bc722ae9_comptimeEnumField*);
inline jule::Bool _1bc7233be_Equal(jule::Ptr<_1bc722ae9_comptimeEnumField>, jule::Ptr<_1bc8411bd_TypeKind>);
inline jule::Ptr<_1bc8108a7_Data> _1bc723842__Name(jule::Ptr<_1bc722ae9_comptimeEnumField>, jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc723b83_subIdent(jule::Ptr<_1bc722ae9_comptimeEnumField>, jule::Str*);
inline jule::Str _1bc724315_Str(_1bc723e91_comptimeEnumFields*);
inline jule::Bool _1bc724656_Equal(jule::Ptr<_1bc723e91_comptimeEnumFields>, jule::Ptr<_1bc8411bd_TypeKind>);
inline void _1bc724ac9_ready(_1bc723e91_comptimeEnumFields*, jule::Ptr<_1bc7a750d_Var>*, jule::Ptr<_1bc7a750d_Var>*);
inline void _1bc724ee7_step(_1bc723e91_comptimeEnumFields*, jule::I64, jule::Ptr<_1bc7a750d_Var>*, jule::Ptr<_1bc7a750d_Var>*);
inline jule::I64 _1bc72527d_len(_1bc723e91_comptimeEnumFields*);
inline jule::Str _1bc725910_Str(_1bc72558b_comptimeParam*);
inline jule::Bool _1bc725c51_Equal(jule::Ptr<_1bc72558b_comptimeParam>, jule::Ptr<_1bc8411bd_TypeKind>);
inline jule::Ptr<_1bc8108a7_Data> _1bc7264b0__Name(jule::Ptr<_1bc72558b_comptimeParam>, jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc7268ab__Type(jule::Ptr<_1bc72558b_comptimeParam>, jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc726ca7__Variadic(jule::Ptr<_1bc72558b_comptimeParam>, jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc7271a3__Reference(jule::Ptr<_1bc72558b_comptimeParam>, jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc7274e4_subIdent(jule::Ptr<_1bc72558b_comptimeParam>, jule::Str*);
inline jule::Str _1bc727b76_Str(_1bc727802_comptimeParams*);
inline jule::Bool _1bc727eb7_Equal(jule::Ptr<_1bc727802_comptimeParams>, jule::Ptr<_1bc8411bd_TypeKind>);
inline void _1bc72843a_ready(_1bc727802_comptimeParams*, jule::Ptr<_1bc7a750d_Var>*, jule::Ptr<_1bc7a750d_Var>*);
inline void _1bc728858_step(_1bc727802_comptimeParams*, jule::I64, jule::Ptr<_1bc7a750d_Var>*, jule::Ptr<_1bc7a750d_Var>*);
inline jule::I64 _1bc728ade_len(_1bc727802_comptimeParams*);
inline jule::Str _1bc729271_Str(_1bc728dec_comptimeTypeInfos*);
inline jule::Bool _1bc7295b2_Equal(jule::Ptr<_1bc728dec_comptimeTypeInfos>, jule::Ptr<_1bc8411bd_TypeKind>);
inline void _1bc729a35_ready(_1bc728dec_comptimeTypeInfos*, jule::Ptr<_1bc7a750d_Var>*, jule::Ptr<_1bc7a750d_Var>*);
inline void _1bc729e53_step(_1bc728dec_comptimeTypeInfos*, jule::I64, jule::Ptr<_1bc7a750d_Var>*, jule::Ptr<_1bc7a750d_Var>*);
inline jule::I64 _1bc72a1d9_len(_1bc728dec_comptimeTypeInfos*);
inline jule::Str _1bc72a86b_Str(_1bc72a4e7_comptimeTypeInfo*);
inline jule::Bool _1bc72abac_Equal(jule::Ptr<_1bc72a4e7_comptimeTypeInfo>, jule::Ptr<_1bc8411bd_TypeKind>);
inline jule::Ptr<_1bc8108a7_Data> _1bc72b30b__Str(jule::Ptr<_1bc72a4e7_comptimeTypeInfo>, jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc72b707__Kind(jule::Ptr<_1bc72a4e7_comptimeTypeInfo>, jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc72bb03__Bits(jule::Ptr<_1bc72a4e7_comptimeTypeInfo>, jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc72beee__Elem(jule::Ptr<_1bc72a4e7_comptimeTypeInfo>, jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc72c3ea__Size(jule::Ptr<_1bc72a4e7_comptimeTypeInfo>, jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc72c7e6__Key(jule::Ptr<_1bc72a4e7_comptimeTypeInfo>, jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc72cbe2__Value(jule::Ptr<_1bc72a4e7_comptimeTypeInfo>, jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc72d0dd__Fields(jule::Ptr<_1bc72a4e7_comptimeTypeInfo>, jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc72d4d9__Statics(jule::Ptr<_1bc72a4e7_comptimeTypeInfo>, jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc72d8d5__Public(jule::Ptr<_1bc72a4e7_comptimeTypeInfo>, jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc72dcd1__Binded(jule::Ptr<_1bc72a4e7_comptimeTypeInfo>, jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc72e1cc__Ordered(jule::Ptr<_1bc72a4e7_comptimeTypeInfo>, jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc72e5c8__Comparable(jule::Ptr<_1bc72a4e7_comptimeTypeInfo>, jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc72e9c4__Mutable(jule::Ptr<_1bc72a4e7_comptimeTypeInfo>, jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc72edc0__Types(jule::Ptr<_1bc72a4e7_comptimeTypeInfo>, jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc7302bb__Exceptional(jule::Ptr<_1bc72a4e7_comptimeTypeInfo>, jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc7306b7__CanNil(jule::Ptr<_1bc72a4e7_comptimeTypeInfo>, jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc730ab3__RC(jule::Ptr<_1bc72a4e7_comptimeTypeInfo>, jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc730eae__Result(jule::Ptr<_1bc72a4e7_comptimeTypeInfo>, jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc7313aa__Params(jule::Ptr<_1bc72a4e7_comptimeTypeInfo>, jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc7316eb_subIdent(jule::Ptr<_1bc72a4e7_comptimeTypeInfo>, jule::Str*);
inline jule::Str _1bc731d7d_Str(_1bc731a09_comptimeValue*);
inline jule::Bool _1bc7321be_Equal(jule::Ptr<_1bc731a09_comptimeValue>, jule::Ptr<_1bc8411bd_TypeKind>);
inline jule::Ptr<_1bc8108a7_Data> _1bc73271e__Unwrap(jule::Ptr<_1bc731a09_comptimeValue>, jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc732b1a__Type(jule::Ptr<_1bc731a09_comptimeValue>, jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc733016__Lvalue(jule::Ptr<_1bc731a09_comptimeValue>, jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc733412__Mutable(jule::Ptr<_1bc731a09_comptimeValue>, jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc73380d__Const(jule::Ptr<_1bc731a09_comptimeValue>, jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc733c09__Field(jule::Ptr<_1bc731a09_comptimeValue>, jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc73404a_subIdent(jule::Ptr<_1bc731a09_comptimeValue>, jule::Str*);
inline jule::Str _1bc7346cc_Str(_1bc734358_comptimeFiles*);
inline jule::Bool _1bc734a1d_Equal(jule::Ptr<_1bc734358_comptimeFiles>, jule::Ptr<_1bc8411bd_TypeKind>);
inline void _1bc734e91_ready(_1bc734358_comptimeFiles*, jule::Ptr<_1bc7a750d_Var>*, jule::Ptr<_1bc7a750d_Var>*);
inline void _1bc7353ae_step(_1bc734358_comptimeFiles*, jule::I64, jule::Ptr<_1bc7a750d_Var>*, jule::Ptr<_1bc7a750d_Var>*);
inline jule::I64 _1bc735645_len(_1bc734358_comptimeFiles*);
inline jule::Str _1bc735de8_Str(_1bc735953_comptimeFile*);
inline jule::Bool _1bc736239_Equal(jule::Ptr<_1bc735953_comptimeFile>, jule::Ptr<_1bc8411bd_TypeKind>);
inline jule::Ptr<_1bc8108a7_Data> _1bc736756__Path(jule::Ptr<_1bc735953_comptimeFile>, jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc736b52__Name(jule::Ptr<_1bc735953_comptimeFile>, jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc73704d__Dir(jule::Ptr<_1bc735953_comptimeFile>, jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc73738e_subIdent(jule::Ptr<_1bc735953_comptimeFile>, jule::Str*);
inline jule::Fn<jule::Bool(jule::Ptr<_1bc784276_Sema>*,jule::Slice<jule::Ptr<_1bc8403cb_TypeAlias>>*)> _1bc73a260_readyFn(jule::Ptr<_1bc739d64_constraintChecker>);
inline jule::Bool _1bc73a4e6_readyFi(jule::Ptr<_1bc739d64_constraintChecker>);
inline jule::Bool _1bc73a77c_readySi(jule::Ptr<_1bc739d64_constraintChecker>);
inline jule::Bool _1bc73aa13_ready(jule::Ptr<_1bc739d64_constraintChecker>);
inline jule::Bool _1bc73ac99_check(jule::Ptr<_1bc739d64_constraintChecker>);
inline jule::Bool _1bc73c581_IsTraitImpl(_1bc73c1b8_Impl*);
inline jule::Bool _1bc73c817_IsStructImpl(_1bc73c1b8_Impl*);
inline jule::Ptr<_1bc763e04_ImportInfo> _1bc749db8_SelectPackage(_1bc749923_scopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_1bc763e04_ImportInfo>)>);
inline jule::Ptr<_1bc7a750d_Var> _1bc74a2b4_FindVar(_1bc749923_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1bc8403cb_TypeAlias> _1bc74a6b0_FindTypeAlias(_1bc749923_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1bc5bb333_Struct> _1bc74aaab_FindStruct(_1bc749923_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1ece1b092_Fn> _1bc74aea7_FindFn(_1bc749923_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1bc713a41_Trait> _1bc74b2e8_FindTrait(_1bc749923_scopeChecker*, jule::Str);
inline jule::Ptr<_1bc71624c_Enum> _1bc74b639_FindEnum(_1bc749923_scopeChecker*, jule::Str);
inline jule::Ptr<_1bc717957_TypeEnum> _1bc74b97a_FindTypeEnum(_1bc749923_scopeChecker*, jule::Str);
inline jule::Bool _1bc74bccc_isUnsafe(jule::Ptr<_1bc749923_scopeChecker>);
inline jule::Bool _1bc74c063_isRoot(_1bc749923_scopeChecker*);
inline void _1bc74c261_stop(_1bc749923_scopeChecker*);
inline jule::Bool _1bc74c4e7_stopped(_1bc749923_scopeChecker*);
inline jule::Bool _1bc74c77d_isDeferred(jule::Ptr<_1bc749923_scopeChecker>);
inline jule::Ptr<_1bc749923_scopeChecker> _1bc74ca14_getRoot(jule::Ptr<_1bc749923_scopeChecker>);
inline jule::Ptr<_1bc749923_scopeChecker> _1bc74cc9a_getHardRoot(jule::Ptr<_1bc749923_scopeChecker>);
inline jule::Ptr<_1bc744eb2_Label> _1bc74d0db_findLabel(_1bc749923_scopeChecker*, jule::Str*);
inline jule::Ptr<_1bc74847c_scopeLabel> _1bc74d42c_findLabelScope(jule::Ptr<_1bc749923_scopeChecker>, jule::Str*);
inline jule::Ptr<_1bc74847c_scopeLabel> _1bc74d76d_findLabelAll(_1bc749923_scopeChecker*, jule::Str*);
inline jule::Bool _1bc74db69_isDuplicatedIdent(_1bc749923_scopeChecker*, jule::Uintptr, jule::Str*);
inline void _1bc74de22_checkVarDecl(jule::Ptr<_1bc749923_scopeChecker>, jule::Ptr<_1bc5ad314_VarDecl>);
inline void _1bc74e1ca_checkTypeAlias(jule::Ptr<_1bc749923_scopeChecker>, jule::Ptr<_1bc8403cb_TypeAlias>*);
inline void _1bc74e483_checkTypeAliasDecl(jule::Ptr<_1bc749923_scopeChecker>, jule::Ptr<_1bc5b1eb6_TypeAliasDecl>);
inline jule::Ptr<_1bc74261e_Scope> _1bc74e719_getChild(_1bc749923_scopeChecker*);
inline void _1bc74eb37_checkChildSsc(jule::Ptr<_1bc749923_scopeChecker>, jule::Ptr<_1bc5aa4ba_ScopeTree>*, jule::Ptr<_1bc74261e_Scope>*, jule::Ptr<_1bc749923_scopeChecker>*);
inline jule::Ptr<_1bc74261e_Scope> _1bc750033_checkChildSc(jule::Ptr<_1bc749923_scopeChecker>, jule::Ptr<_1bc5aa4ba_ScopeTree>*, jule::Ptr<_1bc749923_scopeChecker>*);
inline jule::Ptr<_1bc74261e_Scope> _1bc750374_checkChild(jule::Ptr<_1bc749923_scopeChecker>, jule::Ptr<_1bc5aa4ba_ScopeTree>*);
inline void _1bc75062c_checkAnonScope(jule::Ptr<_1bc749923_scopeChecker>, jule::Ptr<_1bc5aa4ba_ScopeTree>);
inline void _1bc750990_processErrorCall(jule::Ptr<_1bc749923_scopeChecker>, jule::Ptr<_1ece16a93_BuiltinErrorCallExprModel>*, jule::Ptr<_1bc583a9d_Token>);
inline void _1bc750c48_checkExpr(jule::Ptr<_1bc749923_scopeChecker>, jule::Ptr<_1bc599971_Expr>);
inline jule::Ptr<_1bc742a3c_If> _1bc751089_checkIf(jule::Ptr<_1bc749923_scopeChecker>, jule::Ptr<_1bc5b0de9_If>);
inline jule::Ptr<_1bc742d39_Else> _1bc7513ca_checkElse(jule::Ptr<_1bc749923_scopeChecker>, jule::Ptr<_1bc5b12c3_Else>);
inline void _1bc751683_checkConditional(jule::Ptr<_1bc749923_scopeChecker>, jule::Ptr<_1bc5b1779_Conditional>);
inline void _1bc751b5b_checkIterScopeSsc(jule::Ptr<_1bc749923_scopeChecker>, jule::Uintptr, jule::Ptr<_1bc5aa4ba_ScopeTree>, jule::Ptr<_1bc74261e_Scope>*, jule::Ptr<_1bc749923_scopeChecker>);
inline jule::Ptr<_1bc74261e_Scope> _1bc752112_checkIterScopeSc(jule::Ptr<_1bc749923_scopeChecker>, jule::Uintptr, jule::Ptr<_1bc5aa4ba_ScopeTree>, jule::Ptr<_1bc749923_scopeChecker>);
inline jule::Ptr<_1bc74261e_Scope> _1bc75250d_checkIterScope(jule::Ptr<_1bc749923_scopeChecker>, jule::Uintptr, jule::Ptr<_1bc5aa4ba_ScopeTree>*);
inline void _1bc7527b6_checkInfIter(jule::Ptr<_1bc749923_scopeChecker>, jule::Ptr<_1bc5ade5d_Iter>*);
inline void _1bc752a6e_checkWhileIter(jule::Ptr<_1bc749923_scopeChecker>, jule::Ptr<_1bc5ade5d_Iter>*);
inline void _1bc752e8c_checkComptimeRangeIter(jule::Ptr<_1bc749923_scopeChecker>, jule::Ptr<_1bc5ade5d_Iter>*, jule::Ptr<_1bc744456_RangeIter>*, jule::Ptr<_1bc8108a7_Data>*);
inline void _1bc753245_checkRangeIter(jule::Ptr<_1bc749923_scopeChecker>, jule::Ptr<_1bc5ade5d_Iter>*);
inline void _1bc7534ed_checkIter(jule::Ptr<_1bc749923_scopeChecker>, jule::Ptr<_1bc5ade5d_Iter>);
inline jule::Bool _1bc75383e_checkValidContLabel(jule::Ptr<_1bc749923_scopeChecker>, jule::Uintptr);
inline jule::Bool _1bc753b80_checkValidBreakLabel(jule::Ptr<_1bc749923_scopeChecker>, jule::Uintptr);
inline jule::Ptr<_1bc7447db_ContSt> _1bc753ec1_checkContValidScope(jule::Ptr<_1bc749923_scopeChecker>, jule::Ptr<_1bc5b0943_ContSt>);
inline void _1bc754279_checkCont(jule::Ptr<_1bc749923_scopeChecker>, jule::Ptr<_1bc5b0943_ContSt>);
inline void _1bc754532_checkLabel(jule::Ptr<_1bc749923_scopeChecker>, jule::Ptr<_1bc5a7a7d_LabelSt>);
inline void _1bc7547da_pushGoto(jule::Ptr<_1bc749923_scopeChecker>, jule::Ptr<_1bc5a7e57_GotoSt>);
inline void _1bc754a93_checkPostfix(jule::Ptr<_1bc749923_scopeChecker>, jule::Ptr<_1bc5a8e47_AssignSt>);
inline jule::Bool _1bc754dd4_isNewAssignIdent(_1bc749923_scopeChecker*, jule::Str);
inline void _1bc75518c_removeInteriorMutRisk(jule::Ptr<_1bc749923_scopeChecker>, jule::Ptr<_1bc8108a7_Data>*);
inline jule::Bool _1bc755643_checkStructureAssignOp(jule::Ptr<_1bc749923_scopeChecker>, jule::Ptr<_1bc5be0b1_StructIns>*, jule::Ptr<_1bc5a8e47_AssignSt>*, jule::Ptr<_1bc8108a7_Data>*);
inline void _1bc7558eb_checkSingleAssign(jule::Ptr<_1bc749923_scopeChecker>, jule::Ptr<_1bc5a8e47_AssignSt>*);
inline void _1bc755e7e_processEndPartOfMultiAssign(_1bc749923_scopeChecker*, jule::Ptr<_1bc7460e5_MultiAssign>*, jule::Ptr<_1bc5a8e47_AssignSt>*, jule::Ptr<_1bc5a88b4_AssignLeft>*, jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc8108a7_Data>*);
inline void _1bc756237_checkMultiAssign(jule::Ptr<_1bc749923_scopeChecker>, jule::Ptr<_1bc5a8e47_AssignSt>*);
inline void _1bc7564e0_checkAssignSt(jule::Ptr<_1bc749923_scopeChecker>, jule::Ptr<_1bc5a8e47_AssignSt>);
inline jule::Ptr<_1bc74261e_Scope> _1bc7568db_checkCaseScope(jule::Ptr<_1bc749923_scopeChecker>, jule::Ptr<_1bc74738d_Case>*, jule::Ptr<_1bc5aa4ba_ScopeTree>*);
inline jule::Ptr<_1bc74738d_Case> _1bc756e4c_checkCase(jule::Ptr<_1bc749923_scopeChecker>, jule::Ptr<_1bc746755_Match>, jule::I64, jule::Ptr<_1bc5b246c_Case>, jule::Ptr<_1bc8108a7_Data>);
inline void _1bc75736a_checkCases(jule::Ptr<_1bc749923_scopeChecker>, jule::Ptr<_1bc5b2c86_MatchCase>*, jule::Ptr<_1bc746755_Match>, jule::Ptr<_1bc8108a7_Data>);
inline jule::Ptr<_1bc74738d_Case> _1bc757766_checkDefault(jule::Ptr<_1bc749923_scopeChecker>, jule::Ptr<_1bc746755_Match>, jule::Ptr<_1bc5b12c3_Else>);
inline void _1bc757ac9_checkComptimePanic(jule::Ptr<_1bc749923_scopeChecker>, jule::Ptr<_1bc583a9d_Token>, jule::Ptr<_1bc74261e_Scope>*);
inline void _1bc757e3c_processConstMatch(jule::Ptr<_1bc749923_scopeChecker>, jule::Ptr<_1bc746755_Match>*, jule::Ptr<_1bc5b2c86_MatchCase>*);
inline void _1bc7581e5_checkTypeMatch(jule::Ptr<_1bc749923_scopeChecker>, jule::Ptr<_1bc5b2c86_MatchCase>*);
inline void _1bc75849d_checkCommonMatch(jule::Ptr<_1bc749923_scopeChecker>, jule::Ptr<_1bc5b2c86_MatchCase>*);
inline void _1bc758756_checkMatch(jule::Ptr<_1bc749923_scopeChecker>, jule::Ptr<_1bc5b2c86_MatchCase>);
inline void _1bc758a0e_checkFall(jule::Ptr<_1bc749923_scopeChecker>, jule::Ptr<_1bc5a8254_FallSt>);
inline jule::Ptr<_1bc744bb5_BreakSt> _1bc758d50_checkBreakWithLabel(jule::Ptr<_1bc749923_scopeChecker>, jule::Ptr<_1bc5b0569_BreakSt>);
inline jule::Ptr<_1bc744bb5_BreakSt> _1bc759191_checkPlainBreak(jule::Ptr<_1bc749923_scopeChecker>, jule::Ptr<_1bc5b0569_BreakSt>);
inline void _1bc759449_checkBreak(jule::Ptr<_1bc749923_scopeChecker>, jule::Ptr<_1bc5b0569_BreakSt>);
inline void _1bc759702_checkRet(jule::Ptr<_1bc749923_scopeChecker>, jule::Ptr<_1bc5ad6dd_RetSt>);
inline void _1bc7599aa_checkUseExpr(jule::Ptr<_1bc749923_scopeChecker>, jule::Ptr<_1bc59a345_UseExpr>);
inline void _1bc759c63_checkNode(jule::Ptr<_1bc749923_scopeChecker>, jule::Any*);
inline void _1bc759e61_checkResult(jule::Ptr<_1bc749923_scopeChecker>);
inline void _1bc75a15e_checkTree(jule::Ptr<_1bc749923_scopeChecker>);
inline void _1bc75a4c2_checkGoto(_1bc749923_scopeChecker*, jule::Ptr<_1bc748a10_scopeGoto>*, jule::Ptr<_1bc74847c_scopeLabel>*);
inline void _1bc75a6c0_checkGotos(_1bc749923_scopeChecker*);
inline void _1bc75a8bd_checkLabels(_1bc749923_scopeChecker*);
inline void _1bc75aabb_checkVars(_1bc749923_scopeChecker*);
inline void _1bc75acb9_checkAliases(_1bc749923_scopeChecker*);
inline void _1bc75b12c_check(jule::Ptr<_1bc749923_scopeChecker>, jule::Ptr<_1bc5aa4ba_ScopeTree>*, jule::Ptr<_1bc74261e_Scope>*);
inline jule::Ptr<_1bc749923_scopeChecker> _1bc75b3b3_newChildChecker(jule::Ptr<_1bc749923_scopeChecker>);
inline void _1bc75cd65_checkCdef(_1bc75c958_directiveChecker*, jule::Ptr<_1bc594a59_Directive>*);
inline void _1bc75d11d_checkTypedef(_1bc75c958_directiveChecker*, jule::Ptr<_1bc594a59_Directive>*);
inline void _1bc75d3c6_checkNamespace(_1bc75c958_directiveChecker*, jule::Ptr<_1bc594a59_Directive>*);
inline void _1bc75d67e_checkDeprecated(_1bc75c958_directiveChecker*, jule::Ptr<_1bc594a59_Directive>*);
inline void _1bc75d937_checkTest(_1bc75c958_directiveChecker*, jule::Ptr<_1bc594a59_Directive>*);
inline void _1bc75dbe0_checkDirective(_1bc75c958_directiveChecker*, jule::Ptr<_1bc594a59_Directive>*);
inline void _1bc75dddd_check(_1bc75c958_directiveChecker*);
inline jule::Ptr<_1bc763e04_ImportInfo> _1bc7643dd_SelectPackage(_1bc763e04_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_1bc763e04_ImportInfo>)>);
inline jule::Ptr<_1bc7a750d_Var> _1bc7647d9_FindVar(_1bc763e04_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1bc8403cb_TypeAlias> _1bc764bd5_FindTypeAlias(_1bc763e04_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1bc5bb333_Struct> _1bc7650d1_FindStruct(_1bc763e04_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1ece1b092_Fn> _1bc7654cc_FindFn(_1bc763e04_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1bc713a41_Trait> _1bc76581d_FindTrait(_1bc763e04_ImportInfo*, jule::Str);
inline jule::Ptr<_1bc71624c_Enum> _1bc765b5e_FindEnum(_1bc763e04_ImportInfo*, jule::Str);
inline jule::Ptr<_1bc717957_TypeEnum> _1bc765ea0_FindTypeEnum(_1bc763e04_ImportInfo*, jule::Str);
inline jule::Bool _1bc766445_isLookupable(_1bc763e04_ImportInfo*, jule::Str*);
inline jule::Bool _1bc766786_existIdent(_1bc763e04_ImportInfo*, jule::Str);
inline jule::Bool _1bc766a1c_isAccessibleViaSelection(_1bc763e04_ImportInfo*);
inline jule::Ptr<_1bc763e04_ImportInfo> _1bc7672c0_SelectPackage(_1bc766d2a_Package*, jule::Fn<jule::Bool(jule::Ptr<_1bc763e04_ImportInfo>)>);
inline jule::Ptr<_1bc7a750d_Var> _1bc7676bb_FindVar(_1bc766d2a_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1bc8403cb_TypeAlias> _1bc767ab7_FindTypeAlias(_1bc766d2a_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1bc5bb333_Struct> _1bc767eb3_FindStruct(_1bc766d2a_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1ece1b092_Fn> _1bc7683ae_FindFn(_1bc766d2a_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1bc713a41_Trait> _1bc768700_FindTrait(_1bc766d2a_Package*, jule::Str);
inline jule::Ptr<_1bc71624c_Enum> _1bc768a41_FindEnum(_1bc766d2a_Package*, jule::Str);
inline jule::Ptr<_1bc717957_TypeEnum> _1bc768d82_FindTypeEnum(_1bc766d2a_Package*, jule::Str);
inline jule::Ptr<_1bc72a4e7_comptimeTypeInfo> _1bc783ab1_pushComptimeTypeInfo(_1bc78364e_commonSemaMeta*, jule::Ptr<_1bc8411bd_TypeKind>*);
inline jule::Ptr<_1bc763e04_ImportInfo> _1bc78471b_SelectPackage(_1bc784276_Sema*, jule::Fn<jule::Bool(jule::Ptr<_1bc763e04_ImportInfo>)>);
inline jule::Ptr<_1bc7a750d_Var> _1bc784b17_FindVar(_1bc784276_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1bc8403cb_TypeAlias> _1bc785013_FindTypeAlias(_1bc784276_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1bc5bb333_Struct> _1bc78540e_FindStruct(_1bc784276_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1ece1b092_Fn> _1bc78580a_FindFn(_1bc784276_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1bc713a41_Trait> _1bc785b4b_FindTrait(_1bc784276_Sema*, jule::Str);
inline jule::Ptr<_1bc71624c_Enum> _1bc785e8c_FindEnum(_1bc784276_Sema*, jule::Str);
inline jule::Ptr<_1bc717957_TypeEnum> _1bc7862cd_FindTypeEnum(_1bc784276_Sema*, jule::Str);
inline jule::Bool _1bc7866da_isFlag(_1bc784276_Sema*, jule::I64);
inline void _1bc786993_setCurrentFile(_1bc784276_Sema*, jule::Ptr<_1bc80a50b_SymbolTable>);
inline void _1bc786db1_pushErr(_1bc784276_Sema*, jule::Ptr<_1bc583a9d_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1bc787224_pushSuggestion(_1bc784276_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1bc787620_isAccessibleDefine(_1bc784276_Sema*, jule::Bool, jule::Ptr<_1bc583a9d_Token>);
inline jule::Bool _1bc787ac6_isDuplicatedIdent(_1bc784276_Sema*, jule::Uintptr, jule::Str*, jule::Bool);
inline void _1bc787e39_checkDirectives(jule::Ptr<_1bc784276_Sema>, jule::Slice<jule::Ptr<_1bc594a59_Directive>>*, jule::Any);
inline jule::Bool _1bc7883e0_checkGenericQuantity(_1bc784276_Sema*, jule::I64, jule::I64, jule::Ptr<_1bc583a9d_Token>);
inline jule::Bool _1bc7887db_isDuplicatedImportSelection(_1bc784276_Sema*, jule::Uintptr, jule::Str*);
inline jule::Any _1bc788bd7_getImportDef(_1bc784276_Sema*, jule::Str*, jule::Ptr<_1bc763e04_ImportInfo>*);
inline jule::Bool _1c1923cc4_checkImportSelection(_1bc784276_Sema*, jule::Ptr<_1bc583a9d_Token>*, jule::Ptr<_1bc7a750d_Var>*);
inline jule::Bool _1c1927e1b_checkImportSelection(_1bc784276_Sema*, jule::Ptr<_1bc583a9d_Token>*, jule::Ptr<_1bc8403cb_TypeAlias>*);
inline jule::Bool _1c1931d7b_checkImportSelection(_1bc784276_Sema*, jule::Ptr<_1bc583a9d_Token>*, jule::Ptr<_1bc5bb333_Struct>*);
inline jule::Bool _1c193626a_checkImportSelection(_1bc784276_Sema*, jule::Ptr<_1bc583a9d_Token>*, jule::Ptr<_1bc713a41_Trait>*);
inline jule::Bool _1c193a390_checkImportSelection(_1bc784276_Sema*, jule::Ptr<_1bc583a9d_Token>*, jule::Ptr<_1bc71624c_Enum>*);
inline jule::Bool _1c193e4b5_checkImportSelection(_1bc784276_Sema*, jule::Ptr<_1bc583a9d_Token>*, jule::Ptr<_1bc717957_TypeEnum>*);
inline jule::Bool _1c19435b8_checkImportSelection(_1bc784276_Sema*, jule::Ptr<_1bc583a9d_Token>*, jule::Ptr<_1ece1b092_Fn>*);
inline jule::Bool _1bc789424_checkImportSelectedSelections(_1bc784276_Sema*, jule::Ptr<_1bc763e04_ImportInfo>*);
inline jule::Bool _1c1947c93_checkImportsAllSelectionsFromCollection(_1bc784276_Sema*, jule::Slice<jule::Ptr<_1bc7a750d_Var>>*, jule::Ptr<_1bc583a9d_Token>*);
inline jule::Bool _1c1948e2b_checkImportsAllSelectionsFromCollection(_1bc784276_Sema*, jule::Slice<jule::Ptr<_1bc8403cb_TypeAlias>>*, jule::Ptr<_1bc583a9d_Token>*);
inline jule::Bool _1c194b6d1_checkImportsAllSelectionsFromCollection(_1bc784276_Sema*, jule::Slice<jule::Ptr<_1bc5bb333_Struct>>*, jule::Ptr<_1bc583a9d_Token>*);
inline jule::Bool _1c194de31_checkImportsAllSelectionsFromCollection(_1bc784276_Sema*, jule::Slice<jule::Ptr<_1ece1b092_Fn>>*, jule::Ptr<_1bc583a9d_Token>*);
inline jule::Bool _1c195162b_checkImportsAllSelectionsFromCollection(_1bc784276_Sema*, jule::Slice<jule::Ptr<_1bc713a41_Trait>>*, jule::Ptr<_1bc583a9d_Token>*);
inline jule::Bool _1c1953e03_checkImportsAllSelectionsFromCollection(_1bc784276_Sema*, jule::Slice<jule::Ptr<_1bc71624c_Enum>>*, jule::Ptr<_1bc583a9d_Token>*);
inline jule::Bool _1c195660e_checkImportsAllSelectionsFromCollection(_1bc784276_Sema*, jule::Slice<jule::Ptr<_1bc717957_TypeEnum>>*, jule::Ptr<_1bc583a9d_Token>*);
inline jule::Bool _1bc789b61_checkImportAllSelections(_1bc784276_Sema*, jule::Ptr<_1bc763e04_ImportInfo>*);
inline jule::Bool _1bc789ea2_checkImportSelections(_1bc784276_Sema*, jule::Ptr<_1bc763e04_ImportInfo>*);
inline jule::Bool _1bc78a2e3_isUseAliasDuplication(_1bc784276_Sema*, jule::Ptr<_1bc763e04_ImportInfo>*);
inline jule::Bool _1bc78a634_checkImport(_1bc784276_Sema*, jule::Ptr<_1bc763e04_ImportInfo>*);
inline void _1bc78a832_checkImports(_1bc784276_Sema*);
inline void _1bc78aa30_implFileImpls(jule::Ptr<_1bc784276_Sema>);
inline void _1bc78ac2d_implImpls(jule::Ptr<_1bc784276_Sema>);
inline void _1bc78ae2b_checkEnums(jule::Ptr<_1bc784276_Sema>);
inline void _1bc78b129_checkFileInherits(jule::Ptr<_1bc784276_Sema>);
inline void _1bc78b327_checkInherits(jule::Ptr<_1bc784276_Sema>);
inline _1bc85307b_typeChecker _1bc78b7cd_typeChecker(jule::Ptr<_1bc784276_Sema>, jule::Trait<_1bc860c04_Lookup>, jule::Slice<jule::Ptr<_1bc8403cb_TypeAlias>>, jule::Ptr<_1bc85208b_referencer>);
inline jule::Ptr<_1bc8411bd_TypeKind> _1bc78bd3e_buildTypeWithRefers(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc59563c_TypeDecl>*, jule::Trait<_1bc860c04_Lookup>, jule::Slice<jule::Ptr<_1bc8403cb_TypeAlias>>, jule::Ptr<_1bc85208b_referencer>);
inline jule::Bool _1bc78c3a0_checkTypeWithRefers(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc848390_TypeSymbol>*, jule::Trait<_1bc860c04_Lookup>, jule::Slice<jule::Ptr<_1bc8403cb_TypeAlias>>, jule::Ptr<_1bc85208b_referencer>);
inline jule::Ptr<_1bc739d64_constraintChecker> _1bc78c636_constraintChecker(jule::Ptr<_1bc784276_Sema>);
inline jule::Bool _1bc78ca32_checkType(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc848390_TypeSymbol>*, jule::Trait<_1bc860c04_Lookup>);
inline jule::Ptr<_1bc8411bd_TypeKind> _1bc78ced8_buildTypeWithGenerics(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc59563c_TypeDecl>*, jule::Slice<jule::Ptr<_1bc8403cb_TypeAlias>>, jule::Ptr<_1ece221a8_ReferenceStack>);
inline jule::Ptr<_1bc8411bd_TypeKind> _1bc78d66a_selectType(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc59563c_TypeDecl>*);
inline jule::Ptr<_1bc81259b_Eval> _1bc78db21_evalpd(jule::Ptr<_1bc784276_Sema>, jule::Trait<_1bc860c04_Lookup>, jule::Ptr<_1bc8411bd_TypeKind>, jule::Ptr<_1bc7a750d_Var>);
inline jule::Ptr<_1bc81259b_Eval> _1bc78e01c_evalp(jule::Ptr<_1bc784276_Sema>, jule::Trait<_1bc860c04_Lookup>, jule::Ptr<_1bc8411bd_TypeKind>);
inline jule::Ptr<_1bc81259b_Eval> _1bc78e35d_eval(jule::Ptr<_1bc784276_Sema>, jule::Trait<_1bc860c04_Lookup>);
inline jule::Bool _1bc78e8be_checkAssignType(jule::Ptr<_1bc784276_Sema>, jule::Bool, jule::Ptr<_1bc8411bd_TypeKind>*, jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc583a9d_Token>);
inline jule::Bool _1bc78ed75__checkTypeCompatibility(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc8411bd_TypeKind>*, jule::Ptr<_1bc8411bd_TypeKind>*, jule::Ptr<_1bc583a9d_Token>);
inline jule::Bool _1bc79032b_checkTypeCompatibility(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc8411bd_TypeKind>*, jule::Ptr<_1bc8411bd_TypeKind>*, jule::Ptr<_1bc583a9d_Token>*);
inline void _1bc790749_pushCompatiblityError(_1bc784276_Sema*, jule::Ptr<_1bc8411bd_TypeKind>*, jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc583a9d_Token>*);
inline jule::Bool _1bc790c00_checkTypeCompatibility1(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc8411bd_TypeKind>*, jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc583a9d_Token>*);
inline jule::Ptr<_1bc8411bd_TypeKind> _1bc7911a6_buildNonGenericTypeKind(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc59563c_TypeDecl>*, jule::Slice<jule::Ptr<_1bc5a76a4_GenericDecl>>*, jule::Slice<jule::Ptr<_1bc8411bd_TypeKind>>*);
inline jule::Bool _1bc7915a2_buildFnNonGenericTypeKinds(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1ece1de96_FnIns>*, jule::Slice<jule::Ptr<_1bc8411bd_TypeKind>>*);
inline jule::Ptr<_1ece1de96_FnIns> _1bc7918e3_getTraitCheckFnKind(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1ece1b092_Fn>*);
inline jule::Bool _1bc791d99_checkConstraintsFn(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1ece1de96_FnIns>*, jule::Ptr<_1bc583a9d_Token>*, jule::Ptr<_1ece1de96_FnIns>);
inline jule::Bool _1bc792350_checkConstraintsStruct(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc5be0b1_StructIns>*, jule::Ptr<_1bc583a9d_Token>*, jule::Ptr<_1bc5be0b1_StructIns>);
inline jule::Bool _1bc79274b_fnEnvironment(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1ece1de96_FnIns>*, jule::Fn<jule::Bool(jule::Ptr<_1bc784276_Sema>*,jule::Slice<jule::Ptr<_1bc8403cb_TypeAlias>>*)>);
inline void _1bc792a04_checkFnParamKind(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1ece1ceea_ParamIns>*);
inline jule::Bool _1bc792d45_reloadFnInsTypes(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1ece1de96_FnIns>);
inline jule::Bool _1bc7932eb_checkRefValidityForInitExpr(jule::Ptr<_1bc784276_Sema>, jule::Bool, jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc583a9d_Token>*);
inline jule::Bool _1bc79363c_isMutRiskyStruct(_1bc784276_Sema*, jule::Ptr<_1bc5be0b1_StructIns>*);
inline jule::Bool _1bc793c58_checkValidityForInitExpr(jule::Ptr<_1bc784276_Sema>, jule::Bool, jule::Bool, jule::Ptr<_1bc8411bd_TypeKind>*, jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc583a9d_Token>*);
inline jule::Bool _1bc794154_checkTypeAliasDeclKind(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc8403cb_TypeAlias>*, jule::Trait<_1bc860c04_Lookup>);
inline void _1bc7944b7_checkTypeAliasDecl(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc8403cb_TypeAlias>*, jule::Trait<_1bc860c04_Lookup>);
inline void _1bc794770_checkTypeAliasDeclDup(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc8403cb_TypeAlias>*);
inline jule::Bool _1bc794a06_checkTypeAliasDecls(jule::Ptr<_1bc784276_Sema>);
inline void _1c1718aec_checkEnumItemsDup(_1bc784276_Sema*, jule::Slice<jule::Ptr<_1bc7156d0_EnumItem>>);
inline void _1c02030cc_checkEnumItemsDup(_1bc784276_Sema*, jule::Slice<jule::Ptr<_1bc717380_TypeEnumItem>>);
inline void _1bc795067_checkEnumItemsStr(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc71624c_Enum>*);
inline void _1c16e945c_checkEnumItemInt(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc71624c_Enum>*, jule::Ptr<_1bc848c97_Prim>*, jule::Ptr<_1bc7156d0_EnumItem>*, jule::U64*);
inline void _1c1709615_checkEnumItemInt(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc71624c_Enum>*, jule::Ptr<_1bc848c97_Prim>*, jule::Ptr<_1bc7156d0_EnumItem>*, jule::I64*);
inline void _1c16e55e0_checkEnumItemsInt1(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc848c97_Prim>*, jule::Ptr<_1bc71624c_Enum>*);
inline void _1c1706711_checkEnumItemsInt1(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc848c97_Prim>*, jule::Ptr<_1bc71624c_Enum>*);
inline void _1bc795c16_checkEnumItemsInt(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc71624c_Enum>*);
inline void _1bc795ebe_checkEnumDecl(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc71624c_Enum>*);
inline void _1bc796277_checkTypeEnumDecl(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc717957_TypeEnum>*);
inline jule::Bool _1bc79650d_checkEnumDecls(jule::Ptr<_1bc784276_Sema>);
inline jule::Bool _1bc796794_checkTypeEnumDecls(jule::Ptr<_1bc784276_Sema>);
inline jule::Bool _1bc796ad5_checkDeclGenerics(_1bc784276_Sema*, jule::Slice<jule::Ptr<_1bc5a76a4_GenericDecl>>*);
inline jule::Bool _1bc796e26_checkFnDeclParamsDup(_1bc784276_Sema*, jule::Ptr<_1ece1b092_Fn>*);
inline jule::Bool _1bc797267_checkFnDeclResultDup(_1bc784276_Sema*, jule::Ptr<_1ece1b092_Fn>*);
inline jule::Bool _1bc7975a8_checkFnVariadicParam(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1ece1b092_Fn>*);
inline void _1bc797861_checkFnDeclPrototype(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1ece1b092_Fn>*);
inline jule::Bool _1bc797d17_catchTraitInheritCycle(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc713a41_Trait>, jule::Ptr<_1bc713a41_Trait>, _2096a4489_StrBuilder*);
inline jule::Bool _1bc798158__checkTraitDeclInherits(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc713a41_Trait>*);
inline void _1bc798411_checkTraitDeclInherits(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc713a41_Trait>*);
inline void _1bc7986b9_checkTraitDeclMethod(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1ece1b092_Fn>*);
inline void _1bc798972_checkTraitDeclMethods(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc713a41_Trait>*);
inline void _1bc798c2a_checkTraitDecl(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc713a41_Trait>*);
inline jule::Bool _1bc798eb1_checkTraitDecls(jule::Ptr<_1bc784276_Sema>);
inline jule::Bool _1bc7993ac_checkTraitImplMethods(_1bc784276_Sema*, jule::Ptr<_1bc713a41_Trait>*, jule::Ptr<_1bc73c1b8_Impl>*);
inline jule::Bool _1bc7997a8_implToStruct(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc5bb333_Struct>*, jule::Ptr<_1bc73c1b8_Impl>*);
inline void _1bc799a61_implTrait(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc73c1b8_Impl>*);
inline void _1bc799d19_implStruct(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc73c1b8_Impl>*);
inline void _1bc79a0c2_implImpl(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc73c1b8_Impl>*);
inline void _1bc79a435_checkVarDecl(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc7a750d_Var>*, jule::Trait<_1bc860c04_Lookup>);
inline void _1bc79a6dd_checkGlobalVarDecl(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc7a750d_Var>*);
inline jule::Bool _1bc79a974_checkGlobalDecls(jule::Ptr<_1bc784276_Sema>);
inline jule::Bool _1bc79ad70_checkStructTraitImpl(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc5bb333_Struct>*, jule::Ptr<_1bc713a41_Trait>*);
inline jule::Bool _1bc79b1b1_checkStructImpls(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc5bb333_Struct>*);
inline jule::Bool _1bc79b502_checkStructFields(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc5bb333_Struct>*);
inline void _1bc79b7aa_checkStructDecl(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc5bb333_Struct>*);
inline jule::Bool _1bc79ba41_checkStructDecls(jule::Ptr<_1bc784276_Sema>);
inline void _1bc79bce9_checkAnonFuncDecl(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1ece1b092_Fn>*);
inline void _1bc79c0a2_checkFuncDecl(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1ece1b092_Fn>*);
inline jule::Bool _1bc79c3e3_checkFuncDeclsBy(jule::Ptr<_1bc784276_Sema>, jule::Slice<jule::Ptr<_1ece1b092_Fn>>*);
inline jule::Bool _1bc79c679_checkFuncDecls(jule::Ptr<_1bc784276_Sema>);
inline void _1bc79ca97_pushCycleError(_1bc784276_Sema*, jule::Str*, jule::Str*, _2096a4489_StrBuilder*);
inline void _1bc79d24b_checkPackageDecls(jule::Ptr<_1bc784276_Sema>);
inline void _1bc79d5ae_checkDataForTypeInference(_1bc784276_Sema*, jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc583a9d_Token>*);
inline void _1bc79d867_checkVarValue(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc7a750d_Var>*);
inline void _1bc79dbca_evalVarValue(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc7a750d_Var>*, jule::Trait<_1bc860c04_Lookup>);
inline void _1bc79e03d_checkVar(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc7a750d_Var>*, jule::Trait<_1bc860c04_Lookup>);
inline void _1bc79e23b_checkGlobals(jule::Ptr<_1bc784276_Sema>);
inline jule::Ptr<_1ece1de96_FnIns> _1bc79e637_readyToCheckFn(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc5be0b1_StructIns>*, jule::Ptr<_1ece1b092_Fn>*);
inline void _1bc79e99a_checkTypeMethod(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc5be0b1_StructIns>*, jule::Ptr<_1ece1b092_Fn>*);
inline jule::Ptr<_1ece1de96_FnIns> _1bc79ee51_checkStructInsOp(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc5be0b1_StructIns>*, jule::Ptr<_1ece1b092_Fn>*, jule::Fn<jule::Bool(jule::Ptr<_1ece1b092_Fn>)>);
inline jule::Bool _1bc7a034c_checkStructEnv(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc5be0b1_StructIns>*, jule::Ptr<_1bc583a9d_Token>);
inline jule::Bool _1bc7a0748_precheckStructIns(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc5be0b1_StructIns>*, jule::Ptr<_1bc583a9d_Token>);
inline void _1bc7a0a01_checkStructIns(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc5be0b1_StructIns>*);
inline void _1bc7a0ca9_checkTypeStruct(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc5bb333_Struct>*);
inline void _1bc7a0ea7_checkStructTypes(jule::Ptr<_1bc784276_Sema>);
inline void _1bc7a1260_checkStructInsOperators(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc5be0b1_StructIns>);
inline void _1bc7a1518_precheckStructType(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1bc5bb333_Struct>*);
inline void _1bc7a1716_precheckStructTypes(jule::Ptr<_1bc784276_Sema>);
inline void _1bc7a19be_checkRets(_1bc784276_Sema*, jule::Ptr<_1ece1de96_FnIns>*);
inline void _1bc7a1d32_checkFnInsSc(_1bc784276_Sema*, jule::Ptr<_1ece1de96_FnIns>*, jule::Ptr<_1bc749923_scopeChecker>*);
inline void _1bc7a2195_checkFnInsCaller(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1ece1de96_FnIns>*, jule::Ptr<_1bc583a9d_Token>);
inline void _1bc7a244d_checkFnIns(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1ece1de96_FnIns>*);
inline void _1bc7a2706_checkFunc(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1ece1b092_Fn>*);
inline void _1bc7a29ae_checkTestFn(_1bc784276_Sema*, jule::Ptr<_1ece1de96_FnIns>*);
inline void _1bc7a2c67_precheckFunc(jule::Ptr<_1bc784276_Sema>, jule::Ptr<_1ece1b092_Fn>*);
inline void _1bc7a2e65_precheckFuncs(jule::Ptr<_1bc784276_Sema>);
inline void _1bc7a3163_checkFuncs(jule::Ptr<_1bc784276_Sema>);
inline void _1bc7a3361_checkPackageTypes(jule::Ptr<_1bc784276_Sema>);
inline void _1bc7a355e_setFileSemaFields(jule::Ptr<_1bc784276_Sema>);
inline void _1bc7a375c_setSemaFields(jule::Ptr<_1bc784276_Sema>);
inline void _1bc7a3a15_check(jule::Ptr<_1bc784276_Sema>, jule::Slice<jule::Ptr<_1bc80a50b_SymbolTable>>*);
inline _1bc7a3e44_missingRetChecker static__1bc7a430c_new(void);
inline jule::Bool _1bc7a461a_checkConditional(_1bc7a3e44_missingRetChecker*, jule::Ptr<_1bc743257_Conditional>);
inline jule::Bool _1bc7a495b_checkMatch(_1bc7a3e44_missingRetChecker*, jule::Ptr<_1bc746755_Match>);
inline jule::Bool _1bc7a4c9c_checkInfIter(_1bc7a3e44_missingRetChecker*, jule::Ptr<_1bc743554_InfIter>);
inline jule::Bool _1bc7a50dd_checkScope(_1bc7a3e44_missingRetChecker*, jule::Ptr<_1bc74261e_Scope>);
inline jule::Bool _1bc7a542e_check(_1bc7a3e44_missingRetChecker*, jule::Ptr<_1bc74261e_Scope>);
inline jule::Bool _1bc7a7893_IsInitialized(_1bc7a750d_Var*);
inline jule::Bool _1bc7a7b29_IsTypeInferred(_1bc7a750d_Var*);
inline jule::Bool _1bc7a7db0_untypedConstant(_1bc7a750d_Var*);
inline jule::Bool static__1bc7a8960_Dispose(jule::Ptr<_1ece1b092_Fn>);
inline jule::Bool static__1bc7a8c29_Str(jule::Ptr<_1ece1b092_Fn>);
inline jule::Bool static__1bc7a909d_logical(jule::Ptr<_1ece1b092_Fn>*, jule::Str);
inline jule::Bool static__1bc7a9367_Eq(jule::Ptr<_1ece1b092_Fn>);
inline jule::Bool static__1bc7a9631_Gt(jule::Ptr<_1ece1b092_Fn>);
inline jule::Bool static__1bc7a98ea_GtEq(jule::Ptr<_1ece1b092_Fn>);
inline jule::Bool static__1bc7a9bb4_Lt(jule::Ptr<_1ece1b092_Fn>);
inline jule::Bool static__1bc7a9e7d_LtEq(jule::Ptr<_1ece1b092_Fn>);
inline jule::Bool static__1bc7aa302_result(jule::Ptr<_1ece1b092_Fn>*, jule::Str);
inline jule::Bool static__1bc7aa5bb_Shl(jule::Ptr<_1ece1b092_Fn>);
inline jule::Bool static__1bc7aa885_Shr(jule::Ptr<_1ece1b092_Fn>);
inline jule::Bool static__1bc7aab4e_Add(jule::Ptr<_1ece1b092_Fn>);
inline jule::Bool static__1bc7aae18_Sub(jule::Ptr<_1ece1b092_Fn>);
inline jule::Bool static__1bc7ab1d2_Div(jule::Ptr<_1ece1b092_Fn>);
inline jule::Bool static__1bc7ab49b_Mul(jule::Ptr<_1ece1b092_Fn>);
inline jule::Bool static__1bc7ab765_Mod(jule::Ptr<_1ece1b092_Fn>);
inline jule::Bool static__1bc7aba2e_BitAnd(jule::Ptr<_1ece1b092_Fn>);
inline jule::Bool static__1bc7abce8_BitOr(jule::Ptr<_1ece1b092_Fn>);
inline jule::Bool static__1bc7ac0b2_BitXor(jule::Ptr<_1ece1b092_Fn>);
inline jule::Bool static__1bc7ac436_unary(jule::Ptr<_1ece1b092_Fn>*, jule::Str);
inline jule::Bool static__1bc7ac700_Neg(jule::Ptr<_1ece1b092_Fn>);
inline jule::Bool static__1bc7ac9b9_Pos(jule::Ptr<_1ece1b092_Fn>);
inline jule::Bool static__1bc7acc83_BitNot(jule::Ptr<_1ece1b092_Fn>);
inline jule::Bool static__1bc7ad107_assign(jule::Ptr<_1ece1b092_Fn>*, jule::Str);
inline jule::Bool static__1bc7ad3c1_AddAssign(jule::Ptr<_1ece1b092_Fn>);
inline jule::Bool static__1bc7ad68a_SubAssign(jule::Ptr<_1ece1b092_Fn>);
inline jule::Bool static__1bc7ad954_DivAssign(jule::Ptr<_1ece1b092_Fn>);
inline jule::Bool static__1bc7adc1d_MulAssign(jule::Ptr<_1ece1b092_Fn>);
inline jule::Bool static__1bc7aded7_ModAssign(jule::Ptr<_1ece1b092_Fn>);
inline jule::Bool static__1bc7ae2a1_ShlAssign(jule::Ptr<_1ece1b092_Fn>);
inline jule::Bool static__1bc7ae56a_ShrAssign(jule::Ptr<_1ece1b092_Fn>);
inline jule::Bool static__1bc7ae834_BitOrAssign(jule::Ptr<_1ece1b092_Fn>);
inline jule::Bool static__1bc7aeaed_BitAndAssign(jule::Ptr<_1ece1b092_Fn>);
inline jule::Bool static__1bc7aedb7_BitXorAssign(jule::Ptr<_1ece1b092_Fn>);
inline void _1bc7e7cce_pushErr(_1bc7e77d4_typeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1bc7e8065_checkTrait(_1bc7e77d4_typeCompatibilityChecker*);
inline jule::Bool _1bc7e82eb_checkPtr(_1bc7e77d4_typeCompatibilityChecker*);
inline jule::Bool _1bc7e8582_checkPrim(_1bc7e77d4_typeCompatibilityChecker*);
inline jule::Bool _1bc7e897d_typeEnum(_1bc7e77d4_typeCompatibilityChecker*, jule::Ptr<_1bc717957_TypeEnum>*, jule::Ptr<_1bc8411bd_TypeKind>*);
inline jule::Bool _1bc7e8c14_checkTypeEnum(_1bc7e77d4_typeCompatibilityChecker*);
inline jule::Bool _1bc7e8e9a_check(_1bc7e77d4_typeCompatibilityChecker*);
inline void _1bc7e9a17_pushErr(_1bc7e9583_assignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1bc7e9c9d_checkValidity(_1bc7e9583_assignTypeChecker*);
inline jule::Bool _1bc7ea034_checkConst(_1bc7e9583_assignTypeChecker*);
inline jule::Bool _1bc7ea2ba_checkCompatibility(_1bc7e9583_assignTypeChecker*);
inline jule::Bool _1bc7ea551_check(_1bc7e9583_assignTypeChecker*);
inline jule::Bool _1c1c4bea9_annotateConstraintElem(_1bc7eae58_dynamicTypeAnnotation*, jule::Ptr<_1bc8411bd_TypeKind>*);
inline jule::Bool _1c1c4c3c7_annotateConstraintElem(_1bc7eae58_dynamicTypeAnnotation*, jule::Ptr<_1bc8411bd_TypeKind>*);
inline jule::Bool _1c1c4d9c2_annotateConstraintElem(_1bc7eae58_dynamicTypeAnnotation*, jule::Ptr<_1bc8411bd_TypeKind>*);
inline jule::Bool _1c1c5480d_annotateConstraintElem(_1bc7eae58_dynamicTypeAnnotation*, jule::Ptr<_1bc8411bd_TypeKind>*);
inline jule::Bool _1bc7eb84e_annotateConstraintMap(_1bc7eae58_dynamicTypeAnnotation*, jule::Ptr<_1bc8411bd_TypeKind>*);
inline jule::Bool _1bc7ebb90_annotateConstraintTup(_1bc7eae58_dynamicTypeAnnotation*, jule::Ptr<_1bc8411bd_TypeKind>*);
inline jule::Bool _1bc7ebed1_annotateConstraintFn(_1bc7eae58_dynamicTypeAnnotation*, jule::Ptr<_1bc8411bd_TypeKind>*);
inline jule::Bool _1bc7ec322_annotateConstraintIdent(_1bc7eae58_dynamicTypeAnnotation*, jule::Ptr<_1bc8411bd_TypeKind>*);
inline jule::Bool _1bc7ec663_annotateConstraint(_1bc7eae58_dynamicTypeAnnotation*, jule::Ptr<_1bc8411bd_TypeKind>*);
inline void _1bc7ec9c6_pushGeneric(_1bc7eae58_dynamicTypeAnnotation*, jule::Ptr<_1bc8411bd_TypeKind>*, jule::I64);
inline jule::Bool _1bc7ecd17_annotatePrim(_1bc7eae58_dynamicTypeAnnotation*, jule::Ptr<_1bc8411bd_TypeKind>*);
inline jule::Bool _1bc7ed158_annotateArr(_1bc7eae58_dynamicTypeAnnotation*, jule::Ptr<_1bc8411bd_TypeKind>*);
inline jule::Bool _1bc7ed499_annotateSlc(_1bc7eae58_dynamicTypeAnnotation*, jule::Ptr<_1bc8411bd_TypeKind>*);
inline jule::Bool _1bc7ed895_checkMapKey(_1bc7eae58_dynamicTypeAnnotation*, jule::Ptr<_1bc8411bd_TypeKind>*, jule::Ptr<_1bc8411bd_TypeKind>*);
inline jule::Bool _1bc7edbd6_annotateMap(_1bc7eae58_dynamicTypeAnnotation*, jule::Ptr<_1bc8411bd_TypeKind>*);
inline jule::Bool _1bc7ee027_annotateFn(_1bc7eae58_dynamicTypeAnnotation*, jule::Ptr<_1bc8411bd_TypeKind>*);
inline jule::Bool _1bc7ee368_annotatePtr(_1bc7eae58_dynamicTypeAnnotation*, jule::Ptr<_1bc8411bd_TypeKind>*);
inline jule::Bool _1bc7ee6a9_annotateSptr(_1bc7eae58_dynamicTypeAnnotation*, jule::Ptr<_1bc8411bd_TypeKind>*);
inline jule::Bool _1bc7ee9ea_annotateStruct(_1bc7eae58_dynamicTypeAnnotation*, jule::Ptr<_1bc8411bd_TypeKind>*);
inline jule::Bool _1bc7eed3b_annotateAny(_1bc7eae58_dynamicTypeAnnotation*, jule::Ptr<_1bc8411bd_TypeKind>*);
inline jule::Bool _1bc80017c_annotateKind(_1bc7eae58_dynamicTypeAnnotation*, jule::Ptr<_1bc8411bd_TypeKind>*);
inline jule::Bool _1bc800413_annotate(_1bc7eae58_dynamicTypeAnnotation*);
inline void _1bc801359_pushErrToken(_1bc800cb5_fnCallArgChecker*, jule::Ptr<_1bc583a9d_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1bc8016bc_pushErr(_1bc800cb5_fnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1ece1ceea_ParamIns>> _1bc801953_getParams(_1bc800cb5_fnCallArgChecker*);
inline jule::Bool _1bc801c61_checkCounts(_1bc800cb5_fnCallArgChecker*, jule::Slice<jule::Ptr<_1ece1ceea_ParamIns>>*);
inline jule::Bool _1bc802217_checkArg(_1bc800cb5_fnCallArgChecker*, jule::Ptr<_1ece1ceea_ParamIns>*, jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc583a9d_Token>*);
inline jule::Bool _1bc802613_push(_1bc800cb5_fnCallArgChecker*, jule::Ptr<_1ece1ceea_ParamIns>*, jule::Ptr<_1bc599971_Expr>);
inline jule::Bool _1bc802a0e_pushVariadic(_1bc800cb5_fnCallArgChecker*, jule::Ptr<_1ece1ceea_ParamIns>*, jule::I64);
inline jule::Bool _1bc802d50_checkArgs(_1bc800cb5_fnCallArgChecker*, jule::Slice<jule::Ptr<_1ece1ceea_ParamIns>>*);
inline jule::Bool _1bc8030d6_checkDynamicTypeAnnotation(_1bc800cb5_fnCallArgChecker*);
inline jule::Bool _1bc80336c_check(_1bc800cb5_fnCallArgChecker*);
inline void _1bc80424c_pushErr(_1bc803bec_structLitChecker*, jule::Ptr<_1bc583a9d_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1bc8045b0_pushSuggestion(_1bc803bec_structLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _1bc8049cd_pushMatch(_1bc803bec_structLitChecker*, jule::Ptr<_1bc5bd511_FieldIns>*, jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc583a9d_Token>*);
inline void _1bc804d41_checkPair(_1bc803bec_structLitChecker*, jule::Ptr<_1bc5a3eec_FieldExprPair>*, jule::Slice<jule::Ptr<_1bc599971_Expr>>*);
inline jule::Bool _1bc805182_readyExprs(_1bc803bec_structLitChecker*, jule::Slice<jule::Ptr<_1bc599971_Expr>>*);
inline void _1bc80543a_check(_1bc803bec_structLitChecker*, jule::Slice<jule::Ptr<_1bc599971_Expr>>*);
inline jule::Ptr<_1bc7a750d_Var> _1bc805eb8_buildVar(_1bc8059ce_rangeChecker*, jule::Ptr<_1bc5ad314_VarDecl>*);
inline void _1bc8061b6_setSizeKey(_1bc8059ce_rangeChecker*);
inline void _1bc8065d4_checkRangeExprValidity(_1bc8059ce_rangeChecker*, jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc7a750d_Var>*, jule::Ptr<_1bc8411bd_TypeKind>*);
inline void _1bc8067d2_checkSlice(_1bc8059ce_rangeChecker*);
inline void _1bc8069d0_checkArray(_1bc8059ce_rangeChecker*);
inline void _1bc806bcd_checkMapKeyA(_1bc8059ce_rangeChecker*);
inline void _1bc806dcb_checkMapKeyB(_1bc8059ce_rangeChecker*);
inline void _1bc8070c9_checkMap(_1bc8059ce_rangeChecker*);
inline void _1bc8072c7_checkStr(_1bc8059ce_rangeChecker*);
inline void _1bc8074c5_checkComptime(_1bc8059ce_rangeChecker*);
inline jule::Bool _1bc80775b_checkComptimeRange(_1bc8059ce_rangeChecker*);
inline jule::Bool _1bc8079e2_check(_1bc8059ce_rangeChecker*);
inline void _1bc80865d_prepareTypes(_1bc808240_retTypeChecker*);
inline void _1bc808916_prepareExprs(_1bc808240_retTypeChecker*, jule::Ptr<_1bc599971_Expr>*);
inline void _1bc808b14_checkExprs(_1bc808240_retTypeChecker*);
inline jule::Bool _1bc808e55_check(_1bc808240_retTypeChecker*, jule::Ptr<_1bc599971_Expr>*);
inline jule::Ptr<_1bc763e04_ImportInfo> _1bc80a9e5_SelectPackage(_1bc80a50b_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_1bc763e04_ImportInfo>)>);
inline jule::Ptr<_1bc7a750d_Var> _1bc80ade1_FindVar(_1bc80a50b_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1bc8403cb_TypeAlias> _1bc80b2dc_FindTypeAlias(_1bc80a50b_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1bc5bb333_Struct> _1bc80b6d8_FindStruct(_1bc80a50b_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1ece1b092_Fn> _1bc80bad4_FindFn(_1bc80a50b_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1bc713a41_Trait> _1bc80be25_FindTrait(_1bc80a50b_SymbolTable*, jule::Str);
inline jule::Ptr<_1bc71624c_Enum> _1bc80c266_FindEnum(_1bc80a50b_SymbolTable*, jule::Str);
inline jule::Ptr<_1bc717957_TypeEnum> _1bc80c5a7_FindTypeEnum(_1bc80a50b_SymbolTable*, jule::Str);
inline jule::Ptr<_1bc7a750d_Var> _1bc80cbc3_findVar(_1bc80a50b_SymbolTable*, jule::Str*, jule::Bool, jule::Bool);
inline jule::Ptr<_1bc8403cb_TypeAlias> _1bc80d179_findTypeAlias(_1bc80a50b_SymbolTable*, jule::Str*, jule::Bool, jule::Bool);
inline jule::Any _1bc80d575_defByIdent(_1bc80a50b_SymbolTable*, jule::Str*, jule::Bool);
inline jule::Bool _1bc80da2b_isDuplicatedIdent(_1bc80a50b_SymbolTable*, jule::Uintptr, jule::Str*, jule::Bool);
inline jule::Bool _1bc810c5e_IsNil(_1bc8108a7_Data*);
inline jule::Bool _1bc810ee5_IsVoid(_1bc8108a7_Data*);
inline jule::Bool _1bc81127b_IsConst(_1bc8108a7_Data*);
inline jule::Bool _1bc8115bc_GoodOperand(_1bc8108a7_Data*, jule::Ptr<_1bc8108a7_Data>*);
inline void _1bc812aeb_pushErr(_1bc81259b_Eval*, jule::Ptr<_1bc583a9d_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1bc812e5e_pushSuggestion(_1bc81259b_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _1bc81315c_allowBuiltin(_1bc81259b_Eval*);
inline void _1bc81335a_disallowBuiltin(_1bc81259b_Eval*);
inline jule::Bool _1bc8135e1_isUnsafe(_1bc81259b_Eval*);
inline jule::Bool _1bc813877_isGlobal(_1bc81259b_Eval*);
inline jule::Bool _1bc813b85_applyNumericPrefix(_1bc81259b_Eval*, jule::Ptr<_1bc8108a7_Data>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc813ec6_litStr(_1bc81259b_Eval*, jule::Ptr<_1bc59aa1b_LitExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc814317_litRune(_1bc81259b_Eval*, jule::Ptr<_1bc59aa1b_LitExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc814658_litFloat(_1bc81259b_Eval*, jule::Ptr<_1bc59aa1b_LitExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc814999_litInt(_1bc81259b_Eval*, jule::Ptr<_1bc59aa1b_LitExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc814cda_litNum(_1bc81259b_Eval*, jule::Ptr<_1bc59aa1b_LitExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc81512b_evalLit(_1bc81259b_Eval*, jule::Ptr<_1bc59aa1b_LitExpr>);
inline jule::Any _1bc81546c_findBuiltins(_1bc81259b_Eval*, jule::Str*);
inline jule::Any _1bc815868_getDef(_1bc81259b_Eval*, jule::Str*, jule::Bool);
inline jule::Ptr<_1ece221a8_ReferenceStack> _1bc815aee_getOwnerRefers(_1bc81259b_Eval*);
inline void _1c1a766c9_pushReference(_1bc81259b_Eval*, jule::Ptr<_1ece1de96_FnIns>*);
inline void _1c1d575d1_pushReference(_1bc81259b_Eval*, jule::Ptr<_1bc7a750d_Var>*);
inline void _1c1e18ac1_pushReference(_1bc81259b_Eval*, jule::Ptr<_1bc5be0b1_StructIns>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc8161e8__evalEnum(_1bc81259b_Eval*, jule::Ptr<_1bc71624c_Enum>);
inline jule::Ptr<_1bc8108a7_Data> _1bc8165e4_evalEnum(_1bc81259b_Eval*, jule::Ptr<_1bc71624c_Enum>, jule::Ptr<_1bc583a9d_Token>);
inline jule::Ptr<_1bc8108a7_Data> _1bc816935__evalTypeEnum(_1bc81259b_Eval*, jule::Ptr<_1bc717957_TypeEnum>);
inline jule::Ptr<_1bc8108a7_Data> _1bc816d31_evalTypeEnum(_1bc81259b_Eval*, jule::Ptr<_1bc717957_TypeEnum>, jule::Ptr<_1bc583a9d_Token>);
inline jule::Ptr<_1bc8108a7_Data> _1bc817172__evalStruct(_1bc81259b_Eval*, jule::Ptr<_1bc5be0b1_StructIns>);
inline jule::Ptr<_1bc8108a7_Data> _1bc81756d_evalStruct(_1bc81259b_Eval*, jule::Ptr<_1bc5be0b1_StructIns>, jule::Ptr<_1bc583a9d_Token>);
inline jule::Ptr<_1bc8108a7_Data> _1bc8178ae_evalFnIns(_1bc81259b_Eval*, jule::Ptr<_1ece1de96_FnIns>);
inline void _1bc817c22_checkDeprecated(_1bc81259b_Eval*, jule::Slice<jule::Ptr<_1bc594a59_Directive>>*, jule::Ptr<_1bc583a9d_Token>);
inline jule::Ptr<_1bc8108a7_Data> _1bc81811d_evalFn(_1bc81259b_Eval*, jule::Ptr<_1ece1b092_Fn>, jule::Ptr<_1bc583a9d_Token>);
inline void _1bc81853b_pushIllegalCycleError(_1bc81259b_Eval*, jule::Ptr<_1bc7a750d_Var>*, jule::Ptr<_1bc7a750d_Var>*, _2096a4489_StrBuilder*);
inline jule::Bool _1bc818937_checkCrossCycle(_1bc81259b_Eval*, jule::Ptr<_1bc7a750d_Var>*, _2096a4489_StrBuilder*);
inline jule::Bool _1bc818d33_checkIllegalCycles(_1bc81259b_Eval*, jule::Ptr<_1bc7a750d_Var>*, jule::Ptr<_1bc583a9d_Token>);
inline jule::Ptr<_1bc8108a7_Data> _1bc81922e_evalVar(_1bc81259b_Eval*, jule::Ptr<_1bc7a750d_Var>, jule::Ptr<_1bc583a9d_Token>);
inline jule::Ptr<_1bc8108a7_Data> _1bc81962a_evalTypeAlias(_1bc81259b_Eval*, jule::Ptr<_1bc8403cb_TypeAlias>, jule::Ptr<_1bc583a9d_Token>);
inline jule::Ptr<_1bc8108a7_Data> _1bc819a26_evalDef(_1bc81259b_Eval*, jule::Any*, jule::Ptr<_1bc583a9d_Token>);
inline jule::Ptr<_1bc8108a7_Data> _1bc819d67_evalIdent(_1bc81259b_Eval*, jule::Ptr<_1bc59b39b_IdentExpr>);
inline jule::Ptr<_1bc8108a7_Data> _1bc81a1a8_evalUnary(jule::Ptr<_1bc81259b_Eval>, jule::Ptr<_1bc59ba2d_UnaryExpr>);
inline jule::Ptr<_1bc8108a7_Data> _1bc81a4e9_evalVariadic(jule::Ptr<_1bc81259b_Eval>, jule::Ptr<_1bc59be07_VariadicExpr>);
inline jule::Ptr<_1bc8108a7_Data> _1bc81a83a_evalUnsafe(jule::Ptr<_1bc81259b_Eval>, jule::Ptr<_1bc59ade5_UnsafeExpr>);
inline jule::Ptr<_1bc8108a7_Data> _1bc81ab7b_evalArr(jule::Ptr<_1bc81259b_Eval>, jule::Ptr<_1bc5a5d01_SliceExpr>);
inline jule::Ptr<_1bc8108a7_Data> _1bc81b132_evalExpSlc(jule::Ptr<_1bc81259b_Eval>, jule::Ptr<_1bc5a5d01_SliceExpr>, jule::Ptr<_1bc8411bd_TypeKind>, jule::Any);
inline jule::Ptr<_1bc8108a7_Data> _1bc81b473_evalSliceExpr(jule::Ptr<_1bc81259b_Eval>, jule::Ptr<_1bc5a5d01_SliceExpr>);
inline void _1bc81b7d6_checkIntegerIndexingByData(_1bc81259b_Eval*, jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc583a9d_Token>);
inline void _1bc81bc04_indexingPtr(_1bc81259b_Eval*, jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc5a6791_IndexingExpr>*);
inline void _1bc81c122_indexingArr(_1bc81259b_Eval*, jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc5a6791_IndexingExpr>*);
inline void _1bc81c540_indexingSlc(_1bc81259b_Eval*, jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc5a6791_IndexingExpr>*);
inline void _1bc81c95d_indexingMap(_1bc81259b_Eval*, jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc5a6791_IndexingExpr>*);
inline void _1bc81cd7b_indexingStr(_1bc81259b_Eval*, jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc5a6791_IndexingExpr>*);
inline void _1bc81d299_toIndexing(_1bc81259b_Eval*, jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc5a6791_IndexingExpr>*);
inline jule::Bool _1bc81d750_pushGenericsFromExprSubIdent(jule::Ptr<_1bc81259b_Eval>, jule::Ptr<_1bc5a28e1_SubIdentExpr>*, jule::Slice<jule::Ptr<_1bc59563c_TypeDecl>>*, jule::Ptr<_1bc599971_Expr>*);
inline jule::Bool _1bc81db4b_pushGenericsFromData(jule::Ptr<_1bc81259b_Eval>, jule::Slice<jule::Ptr<_1bc59563c_TypeDecl>>*, jule::Ptr<_1bc599971_Expr>*);
inline void _1bc81deae_evalIdentDeclFromIndexing(jule::Ptr<_1bc81259b_Eval>, jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc5a6791_IndexingExpr>*);
inline jule::Bool _1bc81e465_checkGenericFn(jule::Ptr<_1bc81259b_Eval>, jule::Ptr<_1ece1de96_FnIns>*, jule::Ptr<_1bc583a9d_Token>*, jule::Any*);
inline void _1bc81e7c8_evalFnGenericFromIndexing(jule::Ptr<_1bc81259b_Eval>, jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc5a6791_IndexingExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc81eb19_evalIndexing(jule::Ptr<_1bc81259b_Eval>, jule::Ptr<_1bc5a6791_IndexingExpr>);
inline __jule_tuple_x_1bc8108a7_Data__jule_tuple_x_1bc8108a7_Data _1bc81ee5a_evalSlicingExprs(jule::Ptr<_1bc81259b_Eval>, jule::Ptr<_1bc5a6e01_SlicingExpr>*);
inline void _1bc820213_slicingArr(_1bc81259b_Eval*, jule::Ptr<_1bc8108a7_Data>*);
inline void _1bc820631_slicingStr(_1bc81259b_Eval*, jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc8108a7_Data>*);
inline void _1bc820b09_checkSlicing(_1bc81259b_Eval*, jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc5a6e01_SlicingExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc820e4a_evalSlicing(jule::Ptr<_1bc81259b_Eval>, jule::Ptr<_1bc5a6e01_SlicingExpr>);
inline void _1bc821368_castPtr(_1bc81259b_Eval*, jule::Ptr<_1bc8411bd_TypeKind>, jule::Ptr<_1bc8108a7_Data>, jule::Ptr<_1bc583a9d_Token>);
inline void _1bc821786_castStruct(_1bc81259b_Eval*, jule::Ptr<_1bc8411bd_TypeKind>, jule::Ptr<_1bc8108a7_Data>, jule::Ptr<_1bc583a9d_Token>);
inline void _1bc821ba4_castRef(_1bc81259b_Eval*, jule::Ptr<_1bc8411bd_TypeKind>, jule::Ptr<_1bc8108a7_Data>, jule::Ptr<_1bc583a9d_Token>);
inline void _1bc8220c2_castSlc(_1bc81259b_Eval*, jule::Ptr<_1bc8411bd_TypeKind>, jule::Ptr<_1bc8108a7_Data>, jule::Ptr<_1bc583a9d_Token>);
inline void _1bc822435_castStr(_1bc81259b_Eval*, jule::Ptr<_1bc8108a7_Data>, jule::Ptr<_1bc583a9d_Token>);
inline void _1bc822853_castInt(_1bc81259b_Eval*, jule::Ptr<_1bc8411bd_TypeKind>, jule::Ptr<_1bc8108a7_Data>, jule::Ptr<_1bc583a9d_Token>);
inline void _1bc822c71_castNum(_1bc81259b_Eval*, jule::Ptr<_1bc8411bd_TypeKind>, jule::Ptr<_1bc8108a7_Data>, jule::Ptr<_1bc583a9d_Token>);
inline void _1bc82318e_castPrim(_1bc81259b_Eval*, jule::Ptr<_1bc8411bd_TypeKind>, jule::Ptr<_1bc8108a7_Data>, jule::Ptr<_1bc583a9d_Token>);
inline void _1bc823502_castConstant(_1bc81259b_Eval*, jule::Ptr<_1bc8411bd_TypeKind>*, jule::Ptr<_1bc8108a7_Data>*);
inline void _1bc823920_castTypeEnum(_1bc81259b_Eval*, jule::Ptr<_1bc8411bd_TypeKind>*, jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc583a9d_Token>*);
inline void _1bc823d3d_castTypeEnumT(_1bc81259b_Eval*, jule::Ptr<_1bc8411bd_TypeKind>*, jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc583a9d_Token>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc8242e4_evalCastByTypeNData(_1bc81259b_Eval*, jule::Ptr<_1bc8411bd_TypeKind>, jule::Ptr<_1bc8108a7_Data>, jule::Ptr<_1bc583a9d_Token>);
inline jule::Ptr<_1bc8108a7_Data> _1bc82479a_evalCastT(jule::Ptr<_1bc81259b_Eval>, jule::Ptr<_1bc8411bd_TypeKind>*, jule::Ptr<_1bc599971_Expr>*, jule::Ptr<_1bc583a9d_Token>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc824adb_evalCast(jule::Ptr<_1bc81259b_Eval>, jule::Ptr<_1bc59c2d1_CastExpr>);
inline jule::Ptr<_1bc8108a7_Data> _1bc824e2c_evalNsSelection(_1bc81259b_Eval*, jule::Ptr<_1bc5a254a_NsSelectionExpr>);
inline jule::Ptr<_1bc8108a7_Data> _1bc8253d3_evalStructLitExplicit(jule::Ptr<_1bc81259b_Eval>, jule::Ptr<_1bc5be0b1_StructIns>, jule::Slice<jule::Ptr<_1bc599971_Expr>>, jule::Ptr<_1bc583a9d_Token>);
inline jule::Ptr<_1bc8108a7_Data> _1bc825724_evalStructLit(jule::Ptr<_1bc81259b_Eval>, jule::Ptr<_1bc5a4827_StructLit>);
inline _1bc85307b_typeChecker _1bc8259aa_typeChecker(_1bc81259b_Eval*);
inline jule::Ptr<_1bc8108a7_Data> _1bc825ceb_evalType(_1bc81259b_Eval*, jule::Ptr<_1bc59563c_TypeDecl>);
inline void _1bc82615e_callTypeFn(jule::Ptr<_1bc81259b_Eval>, jule::Ptr<_1bc5a3507_FnCallExpr>*, jule::Ptr<_1bc8108a7_Data>*);
inline void _1bc8264c2_callBuiltinFn(jule::Ptr<_1bc81259b_Eval>, jule::Ptr<_1bc5a3507_FnCallExpr>*, jule::Ptr<_1bc8108a7_Data>*);
inline void _1bc826835_checkFnOfConcurrentCall(_1bc81259b_Eval*, jule::Ptr<_1ece1de96_FnIns>*, jule::Ptr<_1bc583a9d_Token>);
inline void _1bc826c53_processExceptionalHandler(_1bc81259b_Eval*, jule::Ptr<_1ece1de96_FnIns>*, jule::Ptr<_1bc5a3507_FnCallExpr>*, jule::Ptr<_1bc8108a7_Data>*);
inline void _1bc8270b6_callFn(jule::Ptr<_1bc81259b_Eval>, jule::Ptr<_1bc5a3507_FnCallExpr>*, jule::Ptr<_1bc8108a7_Data>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc827407_evalFnCall(jule::Ptr<_1bc81259b_Eval>, jule::Ptr<_1bc5a3507_FnCallExpr>);
inline jule::Ptr<_1bc8108a7_Data> _1bc827803_evalEnumStatic(_1bc81259b_Eval*, jule::Ptr<_1bc71624c_Enum>, jule::Ptr<_1bc583a9d_Token>);
inline jule::Ptr<_1bc8108a7_Data> _1bc827bee_evalTypeEnumStatic(_1bc81259b_Eval*, jule::Ptr<_1bc717957_TypeEnum>, jule::Ptr<_1bc583a9d_Token>);
inline jule::Ptr<_1bc8108a7_Data> _1bc8280ea_evalStructStatic(_1bc81259b_Eval*, jule::Ptr<_1bc5be0b1_StructIns>, jule::Ptr<_1bc583a9d_Token>);
inline jule::Ptr<_1bc8108a7_Data> _1bc8285a1_evalTraitSubIdent(_1bc81259b_Eval*, jule::Ptr<_1bc8108a7_Data>, jule::Ptr<_1bc713a41_Trait>, jule::Ptr<_1bc583a9d_Token>);
inline jule::Ptr<_1bc8108a7_Data> _1bc828b12_evalStructSubIdentField(_1bc81259b_Eval*, jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc5be0b1_StructIns>*, jule::Ptr<_1bc583a9d_Token>*, jule::Ptr<_1bc5bd511_FieldIns>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc829173_evalStructSubIdent(_1bc81259b_Eval*, jule::Ptr<_1bc8108a7_Data>, jule::Ptr<_1bc5be0b1_StructIns>, jule::Ptr<_1bc5a28e1_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_1bc8108a7_Data> _1bc8294b4_evalIntTypeStatic(_1bc81259b_Eval*, jule::Ptr<_1bc583a9d_Token>);
inline jule::Ptr<_1bc8108a7_Data> _1bc829805_evalUintTypeStatic(_1bc81259b_Eval*, jule::Ptr<_1bc583a9d_Token>);
inline jule::Ptr<_1bc8108a7_Data> _1bc829b46_evalI8TypeStatic(_1bc81259b_Eval*, jule::Ptr<_1bc583a9d_Token>);
inline jule::Ptr<_1bc8108a7_Data> _1bc829e87_evalI16TypeStatic(_1bc81259b_Eval*, jule::Ptr<_1bc583a9d_Token>);
inline jule::Ptr<_1bc8108a7_Data> _1bc82a2c8_evalI32TypeStatic(_1bc81259b_Eval*, jule::Ptr<_1bc583a9d_Token>);
inline jule::Ptr<_1bc8108a7_Data> _1bc82a619_evalI64TypeStatic(_1bc81259b_Eval*, jule::Ptr<_1bc583a9d_Token>);
inline jule::Ptr<_1bc8108a7_Data> _1bc82a95a_evalU8TypeStatic(_1bc81259b_Eval*, jule::Ptr<_1bc583a9d_Token>);
inline jule::Ptr<_1bc8108a7_Data> _1bc82ac9b_evalU16TypeStatic(_1bc81259b_Eval*, jule::Ptr<_1bc583a9d_Token>);
inline jule::Ptr<_1bc8108a7_Data> _1bc82b0dc_evalU32TypeStatic(_1bc81259b_Eval*, jule::Ptr<_1bc583a9d_Token>);
inline jule::Ptr<_1bc8108a7_Data> _1bc82b42d_evalU64TypeStatic(_1bc81259b_Eval*, jule::Ptr<_1bc583a9d_Token>);
inline jule::Ptr<_1bc8108a7_Data> _1bc82b76e_evalF32TypeStatic(_1bc81259b_Eval*, jule::Ptr<_1bc583a9d_Token>);
inline jule::Ptr<_1bc8108a7_Data> _1bc82bab0_evalF64TypeStatic(_1bc81259b_Eval*, jule::Ptr<_1bc583a9d_Token>);
inline jule::Ptr<_1bc8108a7_Data> _1bc82beab_evalPrimStatic(_1bc81259b_Eval*, jule::Str, jule::Ptr<_1bc583a9d_Token>);
inline jule::Ptr<_1bc8108a7_Data> _1bc82c3a7_evalTypeStatic(_1bc81259b_Eval*, jule::Ptr<_1bc8108a7_Data>, jule::Ptr<_1bc5a28e1_SubIdentExpr>);
inline jule::Ptr<_1bc8108a7_Data> _1c175284a_comptimeObjSubIdent(_1bc81259b_Eval*, jule::Ptr<_1bc72a4e7_comptimeTypeInfo>*, jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc5a28e1_SubIdentExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1c1756e26_comptimeObjSubIdent(_1bc81259b_Eval*, jule::Ptr<_1bc71b582_comptimeStructField>*, jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc5a28e1_SubIdentExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1c175b48b_comptimeObjSubIdent(_1bc81259b_Eval*, jule::Ptr<_1bc722ae9_comptimeEnumField>*, jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc5a28e1_SubIdentExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1c1760a45_comptimeObjSubIdent(_1bc81259b_Eval*, jule::Ptr<_1bc72558b_comptimeParam>*, jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc5a28e1_SubIdentExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1c17651ed_comptimeObjSubIdent(_1bc81259b_Eval*, jule::Ptr<_1bc71e83d_comptimeStatic>*, jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc5a28e1_SubIdentExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1c1769763_comptimeObjSubIdent(_1bc81259b_Eval*, jule::Ptr<_1bc731a09_comptimeValue>*, jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc5a28e1_SubIdentExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1c176dcc8_comptimeObjSubIdent(_1bc81259b_Eval*, jule::Ptr<_1bc735953_comptimeFile>*, jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc5a28e1_SubIdentExpr>*);
inline __jule_tuple_x_1bc8108a7_Data__jule_tuple_bool _1bc82cc59_tryComptimeObjSubIdent(_1bc81259b_Eval*, jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc5a28e1_SubIdentExpr>);
inline jule::Ptr<_1bc8108a7_Data> _1bc82d155_evalObjSubIdent(_1bc81259b_Eval*, jule::Ptr<_1bc8108a7_Data>, jule::Ptr<_1bc5a28e1_SubIdentExpr>);
inline jule::Ptr<_1bc8108a7_Data> _1bc82d496_evalSubIdent(jule::Ptr<_1bc81259b_Eval>, jule::Ptr<_1bc5a28e1_SubIdentExpr>);
inline jule::Ptr<_1bc8108a7_Data> _1bc82d7d7_evalTuple(jule::Ptr<_1bc81259b_Eval>, jule::Ptr<_1bc59a642_TupleExpr>);
inline jule::Ptr<_1bc8108a7_Data> _1bc82dbd3_evalMap(jule::Ptr<_1bc81259b_Eval>, jule::Ptr<_1bc84e93a_Map>, jule::Ptr<_1bc5a4ccd_BraceLit>);
inline jule::Ptr<_1bc8108a7_Data> _1bc82e024_evalBraceLit(jule::Ptr<_1bc81259b_Eval>, jule::Ptr<_1bc5a4ccd_BraceLit>);
inline jule::Ptr<_1bc8108a7_Data> _1bc82e365_evalAnonFunc(jule::Ptr<_1bc81259b_Eval>, jule::Ptr<_1bc5ac159_FnDecl>);
inline jule::Ptr<_1bc8108a7_Data> _1bc82e6a6_evalBinary(jule::Ptr<_1bc81259b_Eval>, jule::Ptr<_1bc5a2d97_BinaryExpr>);
inline jule::Ptr<_1bc8108a7_Data> _1bc82e9e7_evalExprKind(jule::Ptr<_1bc81259b_Eval>, jule::Any);
inline jule::Ptr<_1bc8108a7_Data> _1bc82ed38_eval1(jule::Ptr<_1bc81259b_Eval>, jule::Ptr<_1bc599971_Expr>);
inline jule::Ptr<_1bc8108a7_Data> _1bc830179_eval(jule::Ptr<_1bc81259b_Eval>, jule::Ptr<_1bc599971_Expr>);
inline jule::Ptr<_1bc8108a7_Data> _1bc8304ba_evalExpr1(jule::Ptr<_1bc81259b_Eval>, jule::Ptr<_1bc599971_Expr>);
inline jule::Ptr<_1bc8108a7_Data> _1bc83080b_evalExpr(jule::Ptr<_1bc81259b_Eval>, jule::Ptr<_1bc599971_Expr>);
inline _1bc830cc3_unaryEval static__1bc831213_new(jule::Ptr<_1bc81259b_Eval>);
inline void _1bc831411_minus(_1bc830cc3_unaryEval*);
inline void _1bc83160e_plus(_1bc830cc3_unaryEval*);
inline void _1bc83180c_caret(_1bc830cc3_unaryEval*);
inline void _1bc831a0a_excl(_1bc830cc3_unaryEval*);
inline void _1bc831c08_star(_1bc830cc3_unaryEval*);
inline void _1bc831e06_amper(_1bc830cc3_unaryEval*);
inline void _1bc832104_typeDecl(_1bc830cc3_unaryEval*);
inline void _1bc832302_evalData(_1bc830cc3_unaryEval*);
inline jule::Ptr<_1bc8108a7_Data> _1bc832643_eval(_1bc830cc3_unaryEval*, jule::Ptr<_1bc59ba2d_UnaryExpr>);
inline _1bc832c5e_binaryEval static__1bc833347_newPlain(jule::Ptr<_1bc81259b_Eval>);
inline _1bc832c5e_binaryEval static__1bc833688_new(jule::Ptr<_1bc81259b_Eval>, jule::Ptr<_1bc583a9d_Token>);
inline jule::Bool _1bc83391e_checkTypeCompatibility(_1bc832c5e_binaryEval*);
inline jule::Bool _1bc833ba5_checkStructCommonOperatorCompatibility(_1bc832c5e_binaryEval*);
inline jule::Ptr<_1bc8108a7_Data> _1bc833e3b_evalComptimeTypeInfo(_1bc832c5e_binaryEval*);
inline jule::Ptr<_1bc8108a7_Data> _1bc8341c2_evalNil(_1bc832c5e_binaryEval*);
inline jule::Ptr<_1bc8108a7_Data> _1bc834458_evalEnum(_1bc832c5e_binaryEval*);
inline jule::Ptr<_1bc8108a7_Data> _1bc8346de_evalTypeEnum(_1bc832c5e_binaryEval*);
inline jule::Ptr<_1bc8108a7_Data> _1bc834975_evalSptr(_1bc832c5e_binaryEval*);
inline jule::Ptr<_1bc8108a7_Data> _1bc834c0b_evalPtr(_1bc832c5e_binaryEval*);
inline jule::Ptr<_1bc8108a7_Data> _1bc834e92_evalArr(_1bc832c5e_binaryEval*);
inline jule::Ptr<_1bc8108a7_Data> _1bc835228_evalSlc(_1bc832c5e_binaryEval*);
inline jule::Ptr<_1bc8108a7_Data> _1bc8354ae_evalStruct(_1bc832c5e_binaryEval*);
inline jule::Ptr<_1bc8108a7_Data> _1bc835745_evalTrait(_1bc832c5e_binaryEval*);
inline jule::Ptr<_1bc8108a7_Data> _1bc8359cb_evalAny(_1bc832c5e_binaryEval*);
inline jule::Ptr<_1bc8108a7_Data> _1bc835c62_evalBool(_1bc832c5e_binaryEval*);
inline jule::Ptr<_1bc8108a7_Data> _1bc835ee8_evalStr(_1bc832c5e_binaryEval*);
inline void _1bc8361e6_setTypeToGreater(_1bc832c5e_binaryEval*);
inline void _1bc83649e_checkModData(_1bc832c5e_binaryEval*, jule::Ptr<_1bc8108a7_Data>*);
inline void _1bc83669c_mod(_1bc832c5e_binaryEval*);
inline jule::Bool _1bc836a98_numbersAreCompatibile(_1bc832c5e_binaryEval*, jule::Str*, jule::Str*);
inline jule::Ptr<_1bc8108a7_Data> _1bc836d2e_evalFloat(_1bc832c5e_binaryEval*);
inline jule::Ptr<_1bc8108a7_Data> _1bc8370b5_evalInt(_1bc832c5e_binaryEval*);
inline jule::Ptr<_1bc8108a7_Data> _1bc83734b_evalPrim(_1bc832c5e_binaryEval*);
inline void _1bc837549_checkSpecialCases(_1bc832c5e_binaryEval*);
inline jule::Ptr<_1bc8108a7_Data> _1bc8377d0_evalOp(_1bc832c5e_binaryEval*);
inline void _1bc837a88_evalConst(_1bc832c5e_binaryEval*, jule::Ptr<_1bc8108a7_Data>*);
inline void _1bc837d41_checkData(_1bc832c5e_binaryEval*, jule::Ptr<_1bc8108a7_Data>*);
inline void _1bc83803e_checkDatas(_1bc832c5e_binaryEval*);
inline void _1bc8382e7_setModel(_1bc832c5e_binaryEval*, jule::Ptr<_1bc8108a7_Data>*);
inline void _1bc8385a0_postEval(_1bc832c5e_binaryEval*, jule::Ptr<_1bc8108a7_Data>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc83899b_solveExplicit(_1bc832c5e_binaryEval*, jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc8108a7_Data>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc838cdc_eval(_1bc832c5e_binaryEval*, jule::Ptr<_1bc5a2d97_BinaryExpr>*);
inline jule::Str _1bc841586_Str(_1bc8411bd_TypeKind*);
inline jule::Bool _1bc8418c7_Equal(jule::Ptr<_1bc8411bd_TypeKind>, jule::Ptr<_1bc8411bd_TypeKind>);
inline jule::Bool _1bc842015_Binded(_1bc8411bd_TypeKind*);
inline jule::Bool _1bc84229b_IsNil(_1bc8411bd_TypeKind*);
inline jule::Bool _1bc842532_Void(_1bc8411bd_TypeKind*);
inline jule::Bool _1bc8427b8_Comparable(_1bc8411bd_TypeKind*);
inline jule::Bool _1bc842a4e_Mutable(_1bc8411bd_TypeKind*);
inline jule::Bool _1bc842cd5_Ordered(_1bc8411bd_TypeKind*);
inline jule::Bool _1bc84306b_NilCompatible(_1bc8411bd_TypeKind*);
inline jule::Bool _1bc843302_PerformsRC(_1bc8411bd_TypeKind*);
inline jule::Bool _1bc843588_Variadicable(_1bc8411bd_TypeKind*);
inline jule::Ptr<_1bc848c97_Prim> _1bc84381e_Prim(_1bc8411bd_TypeKind*);
inline jule::Ptr<_1bc84c7c3_Sptr> _1bc843aa5_Sptr(_1bc8411bd_TypeKind*);
inline jule::Ptr<_1bc85108a_Ptr> _1bc843d3b_Ptr(_1bc8411bd_TypeKind*);
inline jule::Ptr<_1bc71624c_Enum> _1bc8440c2_Enum(_1bc8411bd_TypeKind*);
inline jule::Ptr<_1bc717957_TypeEnum> _1bc844358_TypeEnum(_1bc8411bd_TypeKind*);
inline jule::Ptr<_1bc8505b7_Arr> _1bc8445de_Arr(_1bc8411bd_TypeKind*);
inline jule::Ptr<_1bc84d296_Slc> _1bc844875_Slc(_1bc8411bd_TypeKind*);
inline jule::Ptr<_1ece1de96_FnIns> _1bc844b0b_Fn(_1bc8411bd_TypeKind*);
inline jule::Ptr<_1bc5be0b1_StructIns> _1bc844d92_Struct(_1bc8411bd_TypeKind*);
inline jule::Ptr<_1bc713a41_Trait> _1bc845128_Trait(_1bc8411bd_TypeKind*);
inline jule::Ptr<_1bc84e93a_Map> _1bc8453ae_Map(_1bc8411bd_TypeKind*);
inline jule::Ptr<_1bc84dd8a_Tuple> _1bc845645_Tup(_1bc8411bd_TypeKind*);
inline jule::Bool _1bc8458cb_comptime(_1bc8411bd_TypeKind*);
inline jule::Ptr<_1bc71d243_comptimeStructFields> _1bc845b62_comptimeStructFields(_1bc8411bd_TypeKind*);
inline jule::Ptr<_1bc71b582_comptimeStructField> _1bc845de8_comptimeStructField(_1bc8411bd_TypeKind*);
inline jule::Ptr<_1bc723e91_comptimeEnumFields> _1bc84617e_comptimeEnumFields(_1bc8411bd_TypeKind*);
inline jule::Ptr<_1bc722ae9_comptimeEnumField> _1bc846415_comptimeEnumField(_1bc8411bd_TypeKind*);
inline jule::Ptr<_1bc727802_comptimeParams> _1bc84669b_comptimeParams(_1bc8411bd_TypeKind*);
inline jule::Ptr<_1bc72558b_comptimeParam> _1bc846932_comptimeParam(_1bc8411bd_TypeKind*);
inline jule::Ptr<_1bc71aaae_comptimeRange> _1bc846bb8_comptimeRange(_1bc8411bd_TypeKind*);
inline jule::Ptr<_1bc728dec_comptimeTypeInfos> _1bc846e4e_comptimeTypeInfos(_1bc8411bd_TypeKind*);
inline jule::Ptr<_1bc72a4e7_comptimeTypeInfo> _1bc8471d5_comptimeTypeInfo(_1bc8411bd_TypeKind*);
inline jule::Ptr<_1bc7214ee_comptimeStatics> _1bc84746b_comptimeStatics(_1bc8411bd_TypeKind*);
inline jule::Ptr<_1bc71e83d_comptimeStatic> _1bc847702_comptimeStatic(_1bc8411bd_TypeKind*);
inline jule::Ptr<_1bc731a09_comptimeValue> _1bc847988_comptimeValue(_1bc8411bd_TypeKind*);
inline jule::Ptr<_1bc735953_comptimeFile> _1bc847c1e_comptimeFile(_1bc8411bd_TypeKind*);
inline jule::Ptr<_1bc734358_comptimeFiles> _1bc847ea5_comptimeFiles(_1bc8411bd_TypeKind*);
inline jule::Bool _1bc848714_checked(_1bc848390_TypeSymbol*);
inline jule::Str _1bc8490d8_Str(_1bc848c97_Prim*);
inline jule::Bool _1bc849429_Equal(jule::Ptr<_1bc848c97_Prim>, jule::Ptr<_1bc8411bd_TypeKind>);
inline jule::Bool _1bc8498be_IsConstraint(_1bc848c97_Prim*);
inline jule::Bool _1bc849b55_IsI8(_1bc848c97_Prim*);
inline jule::Bool _1bc849ddb_IsI16(_1bc848c97_Prim*);
inline jule::Bool _1bc84a172_IsI32(_1bc848c97_Prim*);
inline jule::Bool _1bc84a408_IsI64(_1bc848c97_Prim*);
inline jule::Bool _1bc84a68e_IsU8(_1bc848c97_Prim*);
inline jule::Bool _1bc84a925_IsU16(_1bc848c97_Prim*);
inline jule::Bool _1bc84abab_IsU32(_1bc848c97_Prim*);
inline jule::Bool _1bc84ae42_IsU64(_1bc848c97_Prim*);
inline jule::Bool _1bc84b1c8_IsF32(_1bc848c97_Prim*);
inline jule::Bool _1bc84b45e_IsF64(_1bc848c97_Prim*);
inline jule::Bool _1bc84b6e5_IsInt(_1bc848c97_Prim*);
inline jule::Bool _1bc84b97b_IsUint(_1bc848c97_Prim*);
inline jule::Bool _1bc84bc12_IsUintptr(_1bc848c97_Prim*);
inline jule::Bool _1bc84be98_IsBool(_1bc848c97_Prim*);
inline jule::Bool _1bc84c22e_IsStr(_1bc848c97_Prim*);
inline jule::Bool _1bc84c4b5_IsAny(_1bc848c97_Prim*);
inline jule::Str _1bc84cb47_Str(_1bc84c7c3_Sptr*);
inline jule::Bool _1bc84ce88_Equal(jule::Ptr<_1bc84c7c3_Sptr>, jule::Ptr<_1bc8411bd_TypeKind>);
inline jule::Str _1bc84d72a_Str(_1bc84d296_Slc*);
inline jule::Bool _1bc84da6b_Equal(jule::Ptr<_1bc84d296_Slc>, jule::Ptr<_1bc8411bd_TypeKind>);
inline jule::Str _1bc84e20e_Str(_1bc84dd8a_Tuple*);
inline jule::Bool _1bc84e550_Equal(jule::Ptr<_1bc84dd8a_Tuple>, jule::Ptr<_1bc8411bd_TypeKind>);
inline jule::Str _1bc84ecae_Str(_1bc84e93a_Map*);
inline jule::Bool _1bc850100_Equal(jule::Ptr<_1bc84e93a_Map>, jule::Ptr<_1bc8411bd_TypeKind>);
inline jule::Str _1bc85093b_Str(_1bc8505b7_Arr*);
inline jule::Bool _1bc850c7c_Equal(jule::Ptr<_1bc8505b7_Arr>, jule::Ptr<_1bc8411bd_TypeKind>);
inline jule::Str _1bc85140e_Str(_1bc85108a_Ptr*);
inline jule::Bool _1bc851750_Equal(jule::Ptr<_1bc85108a_Ptr>, jule::Ptr<_1bc8411bd_TypeKind>);
inline jule::Bool _1bc851ac4_IsUnsafe(_1bc85108a_Ptr*);
inline void _1bc8537b8_pushErr(_1bc85307b_typeChecker*, jule::Ptr<_1bc583a9d_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1bc8539b6_allowBuiltin(_1bc85307b_typeChecker*);
inline void _1bc853bb4_disallowBuiltin(_1bc85307b_typeChecker*);
inline void _1c0a17d75_pushReference(_1bc85307b_typeChecker*, jule::Ptr<_1bc5be0b1_StructIns>*);
inline void _1c0a1a75c_pushReference(_1bc85307b_typeChecker*, jule::Ptr<_1bc713a41_Trait>*);
inline void _1bc854225_pushReferenceByKind(_1bc85307b_typeChecker*, jule::Ptr<_1bc8411bd_TypeKind>*);
inline void _1bc854643_pushCycleError(_1bc85307b_typeChecker*, jule::Any, jule::Any, _2096a4489_StrBuilder*);
inline jule::Bool _1bc854a3e_checkCrossCycle(_1bc85307b_typeChecker*, jule::Any, _2096a4489_StrBuilder*);
inline jule::Bool _1bc854e3a_checkIllegalCycles(_1bc85307b_typeChecker*, jule::Ptr<_1bc595c47_IdentTypeDecl>*, jule::Any);
inline jule::Trait<_1bc840c17_Kind> _1bc855336_fromTypeAlias(_1bc85307b_typeChecker*, jule::Ptr<_1bc595c47_IdentTypeDecl>*, jule::Ptr<_1bc8403cb_TypeAlias>*);
inline jule::Ptr<_1bc71624c_Enum> _1bc855732_fromEnum(_1bc85307b_typeChecker*, jule::Ptr<_1bc595c47_IdentTypeDecl>*, jule::Ptr<_1bc71624c_Enum>*);
inline jule::Ptr<_1bc717957_TypeEnum> _1bc855b2d_fromTypeEnum(_1bc85307b_typeChecker*, jule::Ptr<_1bc595c47_IdentTypeDecl>*, jule::Ptr<_1bc717957_TypeEnum>*);
inline jule::Ptr<_1bc713a41_Trait> _1bc856029_fromTrait(_1bc85307b_typeChecker*, jule::Ptr<_1bc595c47_IdentTypeDecl>*, jule::Ptr<_1bc713a41_Trait>*);
inline jule::Bool _1bc856425_checkStructIns(_1bc85307b_typeChecker*, jule::Ptr<_1bc5be0b1_StructIns>*, jule::Ptr<_1bc583a9d_Token>*);
inline void _1bc8566cd_appendUsedStructReference(_1bc85307b_typeChecker*, jule::Ptr<_1bc5bb333_Struct>*);
inline jule::Ptr<_1bc5be0b1_StructIns> _1bc856ac9_buildStructInstance(_1bc85307b_typeChecker*, jule::Ptr<_1bc595c47_IdentTypeDecl>*, jule::Ptr<_1bc5bb333_Struct>*);
inline jule::Ptr<_1bc5be0b1_StructIns> _1bc856ec5_fromStruct(_1bc85307b_typeChecker*, jule::Ptr<_1bc595c47_IdentTypeDecl>*, jule::Ptr<_1bc5bb333_Struct>*);
inline jule::Trait<_1bc840c17_Kind> _1bc857316_getDef(_1bc85307b_typeChecker*, jule::Ptr<_1bc595c47_IdentTypeDecl>*);
inline jule::Trait<_1bc840c17_Kind> _1bc857657_buildIdent(_1bc85307b_typeChecker*, jule::Ptr<_1bc595c47_IdentTypeDecl>);
inline jule::Trait<_1bc840c17_Kind> _1bc857998_buildSubIdent(_1bc85307b_typeChecker*, jule::Ptr<_1bc596044_SubIdentTypeDecl>);
inline jule::Ptr<_1bc84c7c3_Sptr> _1bc857cd9_buildSptrFromType(_1bc85307b_typeChecker*, jule::Ptr<_1bc8411bd_TypeKind>*);
inline jule::Ptr<_1bc84c7c3_Sptr> _1bc85812a_buildSptr(_1bc85307b_typeChecker*, jule::Ptr<_1bc5966d7_SptrTypeDecl>);
inline jule::Ptr<_1bc85108a_Ptr> _1bc85846b_buildPtrFromType(_1bc85307b_typeChecker*, jule::Ptr<_1bc8411bd_TypeKind>*);
inline jule::Ptr<_1bc85108a_Ptr> _1bc8587ac_buildPtr(_1bc85307b_typeChecker*, jule::Ptr<_1bc597166_PtrTypeDecl>);
inline jule::Ptr<_1bc84d296_Slc> _1bc858aed_buildSlc(_1bc85307b_typeChecker*, jule::Ptr<_1bc596a6c_SlcTypeDecl>);
inline jule::Ptr<_1bc8505b7_Arr> _1bc858e3e_buildArr(_1bc85307b_typeChecker*, jule::Ptr<_1bc597908_ArrTypeDecl>);
inline jule::Ptr<_1bc84e93a_Map> _1bc859280_buildMap(_1bc85307b_typeChecker*, jule::Ptr<_1bc598156_MapTypeDecl>);
inline jule::Ptr<_1bc84dd8a_Tuple> _1bc8595c1_buildTuple(_1bc85307b_typeChecker*, jule::Ptr<_1bc596d69_TupleTypeDecl>);
inline jule::Bool _1bc859912_checkFuncTypes(_1bc85307b_typeChecker*, jule::Ptr<_1ece1de96_FnIns>*);
inline jule::Ptr<_1ece1de96_FnIns> _1bc859c53_buildFunc(_1bc85307b_typeChecker*, jule::Ptr<_1bc5ac159_FnDecl>);
inline jule::Trait<_1bc840c17_Kind> _1bc85a094_buildByNamespace(_1bc85307b_typeChecker*, jule::Ptr<_1bc5963da_NamespaceTypeDecl>);
inline jule::Ptr<_1bc8411bd_TypeKind> _1bc85a3d5_build(_1bc85307b_typeChecker*, jule::Any*);
inline jule::Ptr<_1bc8411bd_TypeKind> _1bc85a726_checkDecl(_1bc85307b_typeChecker*, jule::Ptr<_1bc59563c_TypeDecl>*);
inline jule::Bool static__1bc85b172_prim(jule::Str*, jule::Ptr<_1bc848c97_Prim>);
inline jule::Bool static__1bc85b4e6_exist(jule::Str*, jule::Ptr<_1bc8411bd_TypeKind>*);
inline void _1bd401b90_stop(_1bd40151e_scopeParser*);
inline jule::Bool _1bd401e26_stopped(_1bd40151e_scopeParser*);
inline jule::Bool _1bd4021ac_finished(_1bd40151e_scopeParser*);
inline jule::Bool _1bd402443_isLastSt(_1bd40151e_scopeParser*);
inline void _1bd4027a6_pushErr(_1bd40151e_scopeParser*, jule::Ptr<_1bc583a9d_Token>, jule::Str);
inline void _1bd402b19_pushSuggestion(_1bd40151e_scopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _1bd402dc2_insertAsNext(_1bd40151e_scopeParser*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Ptr<_1bd400b7d_stmt> _1bd403158_next(_1bd40151e_scopeParser*);
inline jule::Ptr<_1bc5aa4ba_ScopeTree> _1bd403554_buildScope(_1bd40151e_scopeParser*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*, jule::Ptr<_1bc583a9d_Token>);
inline jule::Ptr<_1bc5ad314_VarDecl> _1bd403895_buildVarSt(_1bd40151e_scopeParser*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Ptr<_1bc5ad6dd_RetSt> _1bd403bd6_buildRetSt(_1bd40151e_scopeParser*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>);
inline jule::Ptr<_1bc5ade5d_Iter> _1bd404027_buildWhileNextIter(_1bd40151e_scopeParser*, jule::Ptr<_1bd400b7d_stmt>*);
inline jule::Ptr<_1bc5ae788_WhileKind> _1bd404368_buildWhileIterKind(_1bd40151e_scopeParser*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>> _1bd4046a9_getRangeKindKeysTokens(_1bd40151e_scopeParser*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Ptr<_1bc5ad314_VarDecl> _1bd4049ea_buildRangeKindKey(_1bd40151e_scopeParser*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Slice<jule::Ptr<_1bc5ad314_VarDecl>> _1bd404d3b_buildRangeKindKeys(_1bd40151e_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>>*);
inline void _1bd40519e_setupRangeKindKeysPlain(_1bd40151e_scopeParser*, jule::Ptr<_1bc5b0190_RangeKind>*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline void _1bd405512_setupRangeKindKeysExplicit(_1bd40151e_scopeParser*, jule::Ptr<_1bc5b0190_RangeKind>*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline void _1bd405875_setupRangeKindKeys(_1bd40151e_scopeParser*, jule::Ptr<_1bc5b0190_RangeKind>*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Ptr<_1bc5b0190_RangeKind> _1bd405d2b_buildRangeIterKind(_1bd40151e_scopeParser*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*, jule::Ptr<_1bc583a9d_Token>*);
inline jule::Any _1bd406227_buildCommonIterKind(_1bd40151e_scopeParser*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*, jule::Ptr<_1bc583a9d_Token>*);
inline jule::Ptr<_1bc5ade5d_Iter> _1bd406568_buildCommonIter(_1bd40151e_scopeParser*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>);
inline jule::Ptr<_1bc5ade5d_Iter> _1bd4068a9_buildIterSt(_1bd40151e_scopeParser*, jule::Ptr<_1bd400b7d_stmt>*);
inline jule::Ptr<_1bc5b0569_BreakSt> _1bd406bea_buildBreakSt(_1bd40151e_scopeParser*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Ptr<_1bc5b0943_ContSt> _1bd40703b_buildContSt(_1bd40151e_scopeParser*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Ptr<_1bc5b0de9_If> _1bd40737c_buildIf(_1bd40151e_scopeParser*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Ptr<_1bc5b12c3_Else> _1bd4076bd_buildElse(_1bd40151e_scopeParser*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Ptr<_1bc5b1779_Conditional> _1bd407a0e_buildIfElseChain(_1bd40151e_scopeParser*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>);
inline jule::Ptr<_1bc599971_Expr> _1bd407d50_buildCoCallSt(_1bd40151e_scopeParser*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>);
inline jule::Ptr<_1bc5a7e57_GotoSt> _1bd408191_buildGotoSt(_1bd40151e_scopeParser*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Ptr<_1bc5a8254_FallSt> _1bd4084d2_buildFallSt(_1bd40151e_scopeParser*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Ptr<_1bc5b1eb6_TypeAliasDecl> _1bd408823_buildTypeAliasSt(_1bd40151e_scopeParser*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline void _1bd408ceb_pushCaseExpr(_1bd40151e_scopeParser*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>, jule::Ptr<_1bc583a9d_Token>, jule::Bool, jule::Slice<jule::Ptr<_1bc599971_Expr>>*);
inline __jule_tuple_sx_1bc599971_Expr__jule_tuple_bool _1bd4092a2_buildCaseExprs(_1bd40151e_scopeParser*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*, jule::Ptr<_1bc583a9d_Token>*, jule::Bool);
inline jule::Ptr<_1bc5aa4ba_ScopeTree> _1bd4095e3_buildCaseScope(_1bd40151e_scopeParser*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline __jule_tuple_x_1bc5b246c_Case__jule_tuple_bool _1bd4099de_buildCase(_1bd40151e_scopeParser*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*, jule::Bool);
inline __jule_tuple_sx_1bc5b246c_Case__jule_tuple_x_1bc5b12c3_Else _1bd409dda_buildCases(_1bd40151e_scopeParser*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>, jule::Bool);
inline jule::Ptr<_1bc5b2c86_MatchCase> _1bd40a22b_buildMatchCase(_1bd40151e_scopeParser*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>);
inline jule::Ptr<_1bc5aa4ba_ScopeTree> _1bd40a56c_buildScopeSt(_1bd40151e_scopeParser*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>);
inline jule::Ptr<_1bc5a7a7d_LabelSt> _1bd40a8ad_buildLabelSt(_1bd40151e_scopeParser*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline __jule_tuple__1bc5a9b07_StmtData__jule_tuple_bool _1bd40abee_buildIdSt(_1bd40151e_scopeParser*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Ptr<_1bd41b3d5_assignInfo> _1bd40b040_buildAssignInfo(_1bd40151e_scopeParser*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Ptr<_1bc5a88b4_AssignLeft> _1bd40b381_buildAssignL(_1bd40151e_scopeParser*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Slice<jule::Ptr<_1bc5a88b4_AssignLeft>> _1bd40b6c2_buildAssignLs(_1bd40151e_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>>*);
inline __jule_tuple__1bc5a9b07_StmtData__jule_tuple_bool _1bd40ba13_buildPlainAssign(_1bd40151e_scopeParser*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Bool _1bd40be0e_buildDeclAssign1(_1bd40151e_scopeParser*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*, jule::Ptr<_1bc5a8e47_AssignSt>*);
inline __jule_tuple_x_1bc5a8e47_AssignSt__jule_tuple_bool _1bd40c250_buildDeclAssign(_1bd40151e_scopeParser*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>);
inline __jule_tuple__1bc5a9b07_StmtData__jule_tuple_bool _1bd40c591_buildAssignSt(_1bd40151e_scopeParser*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Ptr<_1bc59a345_UseExpr> _1bd40c8d2_buildUseExpr(_1bd40151e_scopeParser*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Any _1bd40cc23_buildConstSt(_1bd40151e_scopeParser*, jule::Ptr<_1bd400b7d_stmt>*);
inline jule::Any _1bd40d064_buildSt(_1bd40151e_scopeParser*, jule::Ptr<_1bd400b7d_stmt>*);
inline void _1bd40d3c7_build(_1bd40151e_scopeParser*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*, jule::Ptr<_1bc5aa4ba_ScopeTree>*);
inline void _1bd40e72a_pushErr(_1bd40de44_exprBuilder*, jule::Ptr<_1bc583a9d_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1bd40ea8d_pushSuggestion(_1bd40de44_exprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1bc59a642_TupleExpr> _1bd40edce_buildTuple(_1bd40de44_exprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>>*);
inline jule::Ptr<_1bc59aa1b_LitExpr> _1bd410220_buildLit(_1bd40de44_exprBuilder*, jule::Ptr<_1bc583a9d_Token>);
inline jule::Any _1bd4108a2_buildSingle(_1bd40de44_exprBuilder*, jule::Ptr<_1bc583a9d_Token>);
inline jule::Ptr<_1bc59b39b_IdentExpr> _1bd410be3_buildBindIdent(_1bd40de44_exprBuilder*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Ptr<_1bc59ba2d_UnaryExpr> _1bd411034_buildUnary(_1bd40de44_exprBuilder*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>);
inline jule::Ptr<_1bc5a28e1_SubIdentExpr> _1bd411375_buildObjSubIdent(_1bd40de44_exprBuilder*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>);
inline jule::Ptr<_1bc5a254a_NsSelectionExpr> _1bd4116b6_buildNsSubIdent(_1bd40de44_exprBuilder*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Ptr<_1bc59563c_TypeDecl> _1bd411a07_buildType(_1bd40de44_exprBuilder*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Any _1bd411d48_buildSubIdent(_1bd40de44_exprBuilder*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Ptr<_1bc59be07_VariadicExpr> _1bd412189_buildVariadic(_1bd40de44_exprBuilder*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>);
inline jule::Ptr<_1bc599c6d_RangeExpr> _1bd4124ca_buildBetweenParentheses(_1bd40de44_exprBuilder*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>);
inline jule::Ptr<_1bc59c2d1_CastExpr> _1bd41281b_tryBuildCast(_1bd40de44_exprBuilder*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline void _1bd412c39_pushArg(_1bd40de44_exprBuilder*, jule::Slice<jule::Ptr<_1bc599971_Expr>>*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>, jule::Ptr<_1bc583a9d_Token>);
inline jule::Slice<jule::Ptr<_1bc599971_Expr>> _1bd41307a_buildArgs(_1bd40de44_exprBuilder*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>);
inline jule::Ptr<_1bc5a3507_FnCallExpr> _1bd413872_buildFnCall(_1bd40de44_exprBuilder*, jule::Ptr<_1bc583a9d_Token>*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Any _1bd413bb3_buildParenthesesRange(_1bd40de44_exprBuilder*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Ptr<_1bc59ade5_UnsafeExpr> _1bd414004_buildUnsafeExpr(_1bd40de44_exprBuilder*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>);
inline jule::Ptr<_1bc5ac159_FnDecl> _1bd414345_buildAnonFn(_1bd40de44_exprBuilder*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Any _1bd414686_buildUnsafe(_1bd40de44_exprBuilder*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline void _1bd414aa4_pushRangeLitPart(_1bd40de44_exprBuilder*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>, jule::Ptr<_1bc583a9d_Token>, jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>> _1bd414de5_getBraceRangeLitExprParts(_1bd40de44_exprBuilder*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>);
inline jule::Ptr<_1bc5a3eec_FieldExprPair> _1bd415236_buildFieldExprPair(_1bd40de44_exprBuilder*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>);
inline jule::Ptr<_1bc599971_Expr> _1bd415577_buildStructLitExpr(_1bd40de44_exprBuilder*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Slice<jule::Ptr<_1bc599971_Expr>> _1bd4158b8_buildStructLitExprs(_1bd40de44_exprBuilder*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Ptr<_1bc5a4827_StructLit> _1bd415c09_buildTypedStructLiteral(_1bd40de44_exprBuilder*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>);
inline jule::Ptr<_1bc599971_Expr> _1bd41604a_buildBraceLitPart(_1bd40de44_exprBuilder*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Ptr<_1bc5a4ccd_BraceLit> _1bd41638b_buildBraceLit(_1bd40de44_exprBuilder*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Any _1bd4166cc_buildBraceRange(_1bd40de44_exprBuilder*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>> _1bd416a1d_getEnumerableParts(_1bd40de44_exprBuilder*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>);
inline jule::Ptr<_1bc5a5d01_SliceExpr> _1bd416d5e_buildSlice(_1bd40de44_exprBuilder*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>);
inline jule::Ptr<_1bc5a6791_IndexingExpr> _1bd417315_buildIndexing(_1bd40de44_exprBuilder*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>, jule::Slice<jule::Ptr<_1bc583a9d_Token>>, jule::Ptr<_1bc583a9d_Token>);
inline jule::Ptr<_1bc5a6e01_SlicingExpr> _1bd417931_buildSlicing(_1bd40de44_exprBuilder*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*, jule::Ptr<_1bc583a9d_Token>*, jule::Ptr<_1bc583a9d_Token>);
inline jule::Any _1bd417c72_buildBracketRange(_1bd40de44_exprBuilder*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>);
inline jule::Any _1bd4180b3_buildExclRight(_1bd40de44_exprBuilder*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Any _1bd418404_buildData(_1bd40de44_exprBuilder*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Any _1bd418800_buildBinary(_1bd40de44_exprBuilder*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*, jule::I64);
inline jule::Any _1bd418b41_build(_1bd40de44_exprBuilder*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Any _1bd418e82_buildKind(_1bd40de44_exprBuilder*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Ptr<_1bc599971_Expr> _1bd4192c3_buildFromTokens(_1bd40de44_exprBuilder*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>);
inline void _1bd41ead1_stop(_1bd41e7d4_parser*);
inline jule::Bool _1bd41ed67_stopped(_1bd41e7d4_parser*);
inline void _1bd420285_pushErr(_1bd41e7d4_parser*, jule::Ptr<_1bc583a9d_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1bd4205e8_pushSuggestion(_1bd41e7d4_parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1bc599971_Expr> _1bd420939_buildExpr(jule::Ptr<_1bd41e7d4_parser>, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Ptr<_1bc594a59_Directive> _1bd420c7a_buildDirective(_1bd41e7d4_parser*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>);
inline void _1bd421033_pushDirective(_1bd41e7d4_parser*, jule::Ptr<_1bc594a59_Directive>);
inline jule::Ptr<_1bc5aa4ba_ScopeTree> _1bd42142e_buildScope(jule::Ptr<_1bd41e7d4_parser>, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*, jule::Ptr<_1bc583a9d_Token>);
inline __jule_tuple_x_1bc59563c_TypeDecl__jule_tuple_bool _1bd4218d5__buildType(jule::Ptr<_1bd41e7d4_parser>, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*, jule::I64*, jule::Bool);
inline __jule_tuple_x_1bc59563c_TypeDecl__jule_tuple_bool _1bd421d8b_buildType(jule::Ptr<_1bd41e7d4_parser>, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*, jule::I64*, jule::Bool);
inline jule::Ptr<_1bc5b1eb6_TypeAliasDecl> _1bd4221cc_buildTypeAliasDecl(jule::Ptr<_1bd41e7d4_parser>, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline void _1bd422540_buildVarTypeAndExpr(jule::Ptr<_1bd41e7d4_parser>, jule::Ptr<_1bc5ad314_VarDecl>*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline void _1bd4228a3_buildVarCommon(jule::Ptr<_1bd41e7d4_parser>, jule::Ptr<_1bc5ad314_VarDecl>*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>);
inline void _1bd422cc1_buildVarBegin(_1bd41e7d4_parser*, jule::Ptr<_1bc5ad314_VarDecl>*, jule::I64*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Ptr<_1bc5ad314_VarDecl> _1bd423112_buildVar(jule::Ptr<_1bd41e7d4_parser>, jule::Slice<jule::Ptr<_1bc583a9d_Token>>);
inline jule::Ptr<_1bc5a76a4_GenericDecl> _1bd423453_buildGeneric(jule::Ptr<_1bd41e7d4_parser>, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Slice<jule::Ptr<_1bc5a76a4_GenericDecl>> _1bd42384e_buildGenerics(jule::Ptr<_1bd41e7d4_parser>, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*, jule::Ptr<_1bc583a9d_Token>*);
inline jule::Ptr<_1bc5aac07_ParamDecl> _1bd423b90_buildSelfParam(_1bd41e7d4_parser*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>);
inline void _1bd4240ad_paramTypeBegin(_1bd41e7d4_parser*, jule::Ptr<_1bc5aac07_ParamDecl>*, jule::I64*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline void _1bd424421_buildParamType(jule::Ptr<_1bd41e7d4_parser>, jule::Ptr<_1bc5aac07_ParamDecl>*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline void _1bd424784_buildParamBody(jule::Ptr<_1bd41e7d4_parser>, jule::Ptr<_1bc5aac07_ParamDecl>*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>);
inline jule::Ptr<_1bc5aac07_ParamDecl> _1bd424ac5_buildParam(jule::Ptr<_1bd41e7d4_parser>, jule::Slice<jule::Ptr<_1bc583a9d_Token>>);
inline void _1bd424d7d_checkParams(_1bd41e7d4_parser*, jule::Slice<jule::Ptr<_1bc5aac07_ParamDecl>>*);
inline jule::Slice<jule::Ptr<_1bc5aac07_ParamDecl>> _1bd425279_buildParams(jule::Ptr<_1bd41e7d4_parser>, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*, jule::Bool);
inline __jule_tuple_x_1bc598530_RetTypeDecl__jule_tuple_bool _1bd425675_buildMultiRetType(jule::Ptr<_1bd41e7d4_parser>, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*, jule::I64*);
inline __jule_tuple_x_1bc598530_RetTypeDecl__jule_tuple_bool _1bd425a71_buildRetType(jule::Ptr<_1bd41e7d4_parser>, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*, jule::I64*);
inline jule::Ptr<_1bc5ac159_FnDecl> _1bd426027_buildFnPrototype(jule::Ptr<_1bd41e7d4_parser>, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*, jule::I64*, jule::Bool);
inline jule::Ptr<_1bc5ac159_FnDecl> _1bd4264cd_buildFn(jule::Ptr<_1bd41e7d4_parser>, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_1bc583a9d_Token>> _1bd42681e_getUseDeclSelectors(_1bd41e7d4_parser*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>);
inline void _1bd426b82_buildBindUseDecl(_1bd41e7d4_parser*, jule::Ptr<_1bc5b35a0_UseDecl>*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Str _1bd426ec3_useDeclTokstoa(_1bd41e7d4_parser*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline void _1bd427336_buildStdUseDecl(_1bd41e7d4_parser*, jule::Ptr<_1bc5b35a0_UseDecl>*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>);
inline void _1bd427699_buildIdentUseDecl(_1bd41e7d4_parser*, jule::Ptr<_1bc5b35a0_UseDecl>*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>);
inline void _1bd427a0c_parseUseDecl(_1bd41e7d4_parser*, jule::Ptr<_1bc5b35a0_UseDecl>*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>);
inline jule::Ptr<_1bc5b35a0_UseDecl> _1bd427e08_buildUseDecl(_1bd41e7d4_parser*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>, jule::Bool);
inline jule::Ptr<_1bc59563c_TypeDecl> _1bd428304_buildTypeEnumItemKind(jule::Ptr<_1bd41e7d4_parser>, jule::I64*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Slice<jule::Ptr<_1bc5b4e42_TypeEnumItemDecl>> _1bd428645_buildTypeEnumItems(jule::Ptr<_1bd41e7d4_parser>, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Ptr<_1bc5b55a2_TypeEnumDecl> _1bd428986_buildTypeEnumDecl(jule::Ptr<_1bd41e7d4_parser>, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Ptr<_1bc599971_Expr> _1bd428d82_buildEnumItemExpr(jule::Ptr<_1bd41e7d4_parser>, jule::I64*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Slice<jule::Ptr<_1bc5b3a56_EnumItemDecl>> _1bd4291c3_buildEnumItems(jule::Ptr<_1bd41e7d4_parser>, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Ptr<_1bc5b4617_EnumDecl> _1bd429514_buildEnumDecl(jule::Ptr<_1bd41e7d4_parser>, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Any _1bd429855_buildNodeEnumDecl(jule::Ptr<_1bd41e7d4_parser>, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Ptr<_1bc5b586b_FieldDecl> _1bd429b96_buildField(jule::Ptr<_1bd41e7d4_parser>, jule::Slice<jule::Ptr<_1bc583a9d_Token>>);
inline jule::Slice<jule::Ptr<_1bc5b586b_FieldDecl>> _1bd429ed7_buildStructDeclFields(jule::Ptr<_1bd41e7d4_parser>, jule::Slice<jule::Ptr<_1bc583a9d_Token>>);
inline jule::Ptr<_1bc5b6262_StructDecl> _1bd42a328_buildStructDecl(jule::Ptr<_1bd41e7d4_parser>, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline void _1bd42a5d1_checkMethodReceiver(_1bd41e7d4_parser*, jule::Ptr<_1bc5ac159_FnDecl>*);
inline void _1bd42a944_buildTraitBody(jule::Ptr<_1bd41e7d4_parser>, jule::Ptr<_1bc5b699e_TraitDecl>*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>);
inline jule::Ptr<_1bc5b699e_TraitDecl> _1bd42ac85_buildTraitDecl(jule::Ptr<_1bd41e7d4_parser>, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Ptr<_1bc5ac159_FnDecl> _1bd42b0c6_buildBindFn(jule::Ptr<_1bd41e7d4_parser>, jule::Slice<jule::Ptr<_1bc583a9d_Token>>);
inline jule::Ptr<_1bc5ad314_VarDecl> _1bd42b417_buildBindVar(jule::Ptr<_1bd41e7d4_parser>, jule::Slice<jule::Ptr<_1bc583a9d_Token>>);
inline jule::Ptr<_1bc5b6262_StructDecl> _1bd42b758_buildBindStruct(jule::Ptr<_1bd41e7d4_parser>, jule::Slice<jule::Ptr<_1bc583a9d_Token>>);
inline jule::Ptr<_1bc5b1eb6_TypeAliasDecl> _1bd42ba99_buildBindTypeAlias(jule::Ptr<_1bd41e7d4_parser>, jule::Slice<jule::Ptr<_1bc583a9d_Token>>);
inline jule::Ptr<_1bc5b35a0_UseDecl> _1bd42bdda_buildBindUse(jule::Ptr<_1bd41e7d4_parser>, jule::Slice<jule::Ptr<_1bc583a9d_Token>>);
inline jule::Any _1bd42c22b_buildBind(jule::Ptr<_1bd41e7d4_parser>, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Ptr<_1bc5ac159_FnDecl> _1bd42c56c_getMethod(jule::Ptr<_1bd41e7d4_parser>, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline void _1bd42c8d0_parseImplBody(jule::Ptr<_1bd41e7d4_parser>, jule::Ptr<_1bc5b710e_Impl>*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Ptr<_1bc5b710e_Impl> _1bd42cc21_buildImpl(jule::Ptr<_1bd41e7d4_parser>, jule::Slice<jule::Ptr<_1bc583a9d_Token>>);
inline jule::Any _1bd42d062_buildNodeData(jule::Ptr<_1bd41e7d4_parser>, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline void _1bd42d31a_applyFnMeta(_1bd41e7d4_parser*, jule::Ptr<_1bc5ac159_FnDecl>*);
inline void _1bd42d5c3_applyMeta(_1bd41e7d4_parser*, _1bc59463b_Node*);
inline void _1bd42d87b_pushUseDecl(jule::Ptr<_1bd41e7d4_parser>, jule::Ptr<_1bc5b35a0_UseDecl>*);
inline jule::Bool _1bd42dbbc_pushMetaNodes(jule::Ptr<_1bd41e7d4_parser>, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline _1bc59463b_Node _1bd42e00d_parseNode(jule::Ptr<_1bd41e7d4_parser>, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline void _1bd42e2b6_appendNode(jule::Ptr<_1bd41e7d4_parser>, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline void _1bd42e78e_removeRange(_1bd41e7d4_parser*, jule::I64, jule::U64, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*, jule::Slice<jule::I64>*);
inline void _1bd42ebac_pushWrongOrderCloseErr(_1bd41e7d4_parser*, jule::Ptr<_1bc583a9d_Token>*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*, jule::Slice<jule::I64>*);
inline void _1bd430185_pushRangeClose(_1bd41e7d4_parser*, jule::Ptr<_1bc583a9d_Token>, jule::U64, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*, jule::Slice<jule::I64>*);
inline void _1bd43043d_checkRanges(_1bd41e7d4_parser*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline void _1bd4306e6_parse(jule::Ptr<_1bd41e7d4_parser>, jule::Ptr<_1bc589367_File>*);
inline void _1bd432055_pushErr(_1bd4319b1_typeBuilder*, jule::Ptr<_1bc583a9d_Token>, jule::Str);
inline void _1bd4323b8_pushSuggestion(_1bd4319b1_typeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1bc59563c_TypeDecl> _1bd43264e_buildNamespace(_1bd4319b1_typeBuilder*);
inline jule::Slice<jule::Ptr<_1bc59563c_TypeDecl>> _1bd4328d5_buildGenerics(_1bd4319b1_typeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>> _1bd432b6b_identGenerics(_1bd4319b1_typeBuilder*);
inline jule::Ptr<_1bc59563c_TypeDecl> _1bd432e02_buildIdent(_1bd4319b1_typeBuilder*);
inline jule::Ptr<_1bc59563c_TypeDecl> _1bd433188_buildCppLink(_1bd4319b1_typeBuilder*);
inline jule::Ptr<_1bc59563c_TypeDecl> _1bd43341e_buildFn(_1bd4319b1_typeBuilder*);
inline jule::Ptr<_1bc59563c_TypeDecl> _1bd4336a5_buildPtr(_1bd4319b1_typeBuilder*);
inline jule::Ptr<_1bc59563c_TypeDecl> _1bd43393b_buildSptr(_1bd4319b1_typeBuilder*);
inline jule::Ptr<_1bc59563c_TypeDecl> _1bd433bc2_buildSlc(_1bd4319b1_typeBuilder*);
inline jule::Ptr<_1bc59563c_TypeDecl> _1bd433e58_buildArr(_1bd4319b1_typeBuilder*);
inline jule::Ptr<_1bc59563c_TypeDecl> _1bd4341de_buildMap(_1bd4319b1_typeBuilder*);
inline jule::Ptr<_1bc59563c_TypeDecl> _1bd434475_buildEnumerable(_1bd4319b1_typeBuilder*);
inline jule::Ptr<_1bc59563c_TypeDecl> _1bd43470b_step(_1bd4319b1_typeBuilder*);
inline __jule_tuple_x_1bc59563c_TypeDecl__jule_tuple_bool _1bd434992_build(_1bd4319b1_typeBuilder*);
inline void _1bcacd45a_pushErr(_1bcacce0a_directiveEval*, jule::Ptr<_1bc583a9d_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>> _1bcacd856_splitOperans(_1bcacce0a_directiveEval*, jule::U64, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Bool _1bcacdb97_evalDirectiveIdent(_1bcacce0a_directiveEval*, jule::Str);
inline jule::Bool _1bcacded8_evalDirectivePart(_1bcacce0a_directiveEval*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>);
inline jule::Bool _1bcace26e_eval(_1bcacce0a_directiveEval*);
inline jule::Ptr<_1bd435ae7_JuleImporter> static__1bd435ee3_New(_1bcacb931_CompileInfo);
inline jule::Slice<jule::Ptr<_1bc763e04_ImportInfo>> _1bd436279_AllPackages(_1bd435ae7_JuleImporter*);
inline void _1bd4366b9_SetModPath(_1bd435ae7_JuleImporter*, jule::Str);
inline jule::Str _1bd436950_GetModPath(_1bd435ae7_JuleImporter*);
inline jule::Str _1bd436c91_ModById(_1bd435ae7_JuleImporter*, jule::I64);
inline jule::Ptr<_1bc763e04_ImportInfo> _1bd4370d2_GetImport(_1bd435ae7_JuleImporter*, jule::Str);
inline __jule_tuple_sx_1bc59378e_Ast__jule_tuple_s_1ed6c7892_Log _1bd4374cd_ImportPackage(_1bd435ae7_JuleImporter*, jule::Str, jule::Bool);
inline void _1bd437786_Imported(_1bd435ae7_JuleImporter*, jule::Ptr<_1bc763e04_ImportInfo>);
inline __jule_tuple_bool__jule_tuple_s_1ed6c7892_Log _1bd437bb5_isPassBuildDirectives(_1bd435ae7_JuleImporter*, jule::Ptr<_1bc59378e_Ast>*);
inline jule::Bool _1c28e4090_isCommonOrdered(jule::Slice<jule::Ptr<_1bc5bb333_Struct>>, jule::Ptr<_1bc5bb333_Struct>);
inline jule::Bool _1c28e902e_isCommonOrdered(jule::Slice<jule::Ptr<_1bc7a750d_Var>>, jule::Ptr<_1bc7a750d_Var>);
inline void _1c28e06eb_orderCommon(jule::Slice<jule::Ptr<_1bc5bb333_Struct>>*);
inline void _1c28e4931_orderCommon(jule::Slice<jule::Ptr<_1bc7a750d_Var>>*);
inline void static__1bd43b966_orderStructures(jule::Slice<jule::Ptr<_1bc5bb333_Struct>>*);
inline void static__1bd43bb97_orderVars(jule::Slice<jule::Ptr<_1bc7a750d_Var>>*);
inline void _1bd13d6ac_optimizeChild(jule::Ptr<_1bd13d206_scopeDeadCode>, jule::Ptr<_1bc74261e_Scope>*);
inline void _1bd13d965_optimizeBodyChildExceptional(jule::Ptr<_1bd13d206_scopeDeadCode>, jule::Ptr<_1bc74261e_Scope>*);
inline void _1bd13dc1d_optimizeBodyChild(jule::Ptr<_1bd13d206_scopeDeadCode>, jule::Ptr<_1bc74261e_Scope>*);
inline void _1bd13dec6_optimizeExprModel(jule::Ptr<_1bd13d206_scopeDeadCode>, jule::Any*);
inline void _1bd13e1c4_eliminateFollowed(_1bd13d206_scopeDeadCode*);
inline void _1bd13e47c_pushGoto(jule::Ptr<_1bd13d206_scopeDeadCode>, jule::Ptr<_1bc74538b_GotoSt>);
inline void _1bd13e735_pushLabel(jule::Ptr<_1bd13d206_scopeDeadCode>, jule::Ptr<_1bc744eb2_Label>);
inline void _1bd13e9dd_optimizeRangeIter(jule::Ptr<_1bd13d206_scopeDeadCode>, jule::Ptr<_1bc744456_RangeIter>);
inline void _1bd13ec96_optimizeWhileIter(jule::Ptr<_1bd13d206_scopeDeadCode>, jule::Ptr<_1bc743a0a_WhileIter>);
inline void _1bd14004e_optimizeInfIter(jule::Ptr<_1bd13d206_scopeDeadCode>, jule::Ptr<_1bc743554_InfIter>);
inline void _1bd140307_optimizeConditional(jule::Ptr<_1bd13d206_scopeDeadCode>, jule::Ptr<_1bc743257_Conditional>);
inline void _1bd1405b0_optimizeMatch(jule::Ptr<_1bd13d206_scopeDeadCode>, jule::Ptr<_1bc746755_Match>);
inline void _1bd140868_optimizeAssign(jule::Ptr<_1bd13d206_scopeDeadCode>, jule::Ptr<_1bc745c1b_Assign>);
inline void _1bd140b21_optimizeMultiAssign(jule::Ptr<_1bd13d206_scopeDeadCode>, jule::Ptr<_1bc7460e5_MultiAssign>);
inline void _1bd140dc9_optimizeStmt(jule::Ptr<_1bd13d206_scopeDeadCode>, jule::Any);
inline void _1bd1410c7_optimizeStmts(jule::Ptr<_1bd13d206_scopeDeadCode>);
inline _1bd14245d_exprDeadCode static__1bd142a9b_new(jule::Ptr<_1bd13d206_scopeDeadCode>*);
inline void _1bd142d54_binary(_1bd14245d_exprDeadCode*, jule::Ptr<_1ece0d282_BinaryExprModel>);
inline void _1bd14310c_unary(_1bd14245d_exprDeadCode*, jule::Ptr<_1ece0d65b_UnaryExprModel>);
inline void _1bd1433b5_structureLit(_1bd14245d_exprDeadCode*, jule::Ptr<_1ece0e030_StructLitExprModel>);
inline void _1bd14366d_allocStructure(_1bd14245d_exprDeadCode*, jule::Ptr<_1ece0e32c_AllocStructLitExprModel>);
inline void _1bd143926_casting(_1bd14245d_exprDeadCode*, jule::Ptr<_1ece0e8b0_CastingExprModel>);
inline void _1bd143bce_args(_1bd14245d_exprDeadCode*, jule::Slice<jule::Any>*);
inline void _1bd143e87_funcCall(_1bd14245d_exprDeadCode*, jule::Ptr<_1ece10262_FnCallExprModel>);
inline void _1bd144240_slice(_1bd14245d_exprDeadCode*, jule::Ptr<_1ece1063b_SliceExprModel>);
inline void _1bd1444e8_array(_1bd14245d_exprDeadCode*, jule::Ptr<_1ece13683_ArrayExprModel>);
inline void _1bd1447a1_indexing(_1bd14245d_exprDeadCode*, jule::Ptr<_1ece10ae2_IndexingExprModel>);
inline void _1bd144a59_anonFunc(_1bd14245d_exprDeadCode*, jule::Ptr<_1ece10ebb_AnonFnExprModel>);
inline void _1bd144d12_mapExpr(_1bd14245d_exprDeadCode*, jule::Ptr<_1ece1184b_MapExprModel>);
inline void _1bd1450ba_slicing(_1bd14245d_exprDeadCode*, jule::Ptr<_1ece11dce_SlicingExprModel>);
inline void _1bd145373_traitSub(_1bd14245d_exprDeadCode*, jule::Ptr<_1ece12462_TraitSubIdentExprModel>);
inline void _1bd14562b_structureSub(_1bd14245d_exprDeadCode*, jule::Ptr<_1ece12d03_StructSubIdentExprModel>);
inline void _1bd1458d4_tuple(_1bd14245d_exprDeadCode*, jule::Ptr<_1ece13980_TupleExprModel>);
inline void _1bd145b8c_newCall(_1bd14245d_exprDeadCode*, jule::Ptr<_1ece1460c_BuiltinNewCallExprModel>);
inline void _1bd145e45_outCall(_1bd14245d_exprDeadCode*, jule::Ptr<_1ece13d59_BuiltinOutCallExprModel>);
inline void _1bd1461ed_outlnCall(_1bd14245d_exprDeadCode*, jule::Ptr<_1ece14233_BuiltinOutlnCallExprModel>);
inline void _1bd1464a6_panicCall(_1bd14245d_exprDeadCode*, jule::Ptr<_1ece149d6_BuiltinPanicCallExprModel>);
inline void _1bd14675e_assertCall(_1bd14245d_exprDeadCode*, jule::Ptr<_1ece14e8c_BuiltinAssertCallExprModel>);
inline void _1bd146a17_errorCall(_1bd14245d_exprDeadCode*, jule::Ptr<_1ece16a93_BuiltinErrorCallExprModel>);
inline void _1bd146cc0_makeCall(_1bd14245d_exprDeadCode*, jule::Ptr<_1ece15443_BuiltinMakeCallExprModel>);
inline void _1bd147078_appendCall(_1bd14245d_exprDeadCode*, jule::Ptr<_1ece1581c_BuiltinAppendCallExprModel>);
inline void _1bd147331_lenCall(_1bd14245d_exprDeadCode*, jule::Ptr<_1ece15b19_BuiltinLenCallExprModel>);
inline void _1bd1475d9_capCall(_1bd14245d_exprDeadCode*, jule::Ptr<_1ece15e16_BuiltinCapCallExprModel>);
inline void _1bd147892_deleteCall(_1bd14245d_exprDeadCode*, jule::Ptr<_1ece162e0_BuiltinDeleteCallExprModel>);
inline void _1bd147b4a_sizeof(_1bd14245d_exprDeadCode*, jule::Ptr<_1ece1264e_SizeofExprModel>);
inline void _1bd147e03_alignof(_1bd14245d_exprDeadCode*, jule::Ptr<_1ece172be_AlignofExprModel>);
inline void _1bd1481ab_integratedToStr(_1bd14245d_exprDeadCode*, jule::Ptr<_1ece178b8_IntegratedToStrExprModel>);
inline void _1bd148464_free(_1bd14245d_exprDeadCode*, jule::Ptr<_1ece1808e_FreeExprModel>);
inline void _1bd14871c_backendEmit(_1bd14245d_exprDeadCode*, jule::Ptr<_1ece17c92_BackendEmitExprModel>);
inline void _1bd1489c5_optimize(_1bd14245d_exprDeadCode*, jule::Any*);
inline jule::Ptr<_1bc9c7024_scopeOptimizer> static__1bc9c7563_new(jule::Ptr<_1bc74261e_Scope>);
inline void _1bc9c781b_setCurrentStmt(_1bc9c7024_scopeOptimizer*, jule::Any);
inline void _1bc9c7a19_removeCurrent(_1bc9c7024_scopeOptimizer*);
inline void _1bc9c7cc2_optimizeData(_1bc9c7024_scopeOptimizer*, jule::Ptr<_1bc8108a7_Data>);
inline void _1bc9c807a_optimizeVar(_1bc9c7024_scopeOptimizer*, jule::Ptr<_1bc7a750d_Var>);
inline void _1bc9c8333_optimizeConditional(_1bc9c7024_scopeOptimizer*, jule::Ptr<_1bc743257_Conditional>);
inline void _1bc9c8751_buildDefaultConstantTrueCase(_1bc9c7024_scopeOptimizer*, jule::Ptr<_1bc74738d_Case>, jule::I64*, jule::Ptr<_1bc746755_Match>*);
inline void _1bc9c8a09_optimizeMatch(_1bc9c7024_scopeOptimizer*, jule::Ptr<_1bc746755_Match>);
inline void _1bc9c8cb2_optimizeRangeIter(_1bc9c7024_scopeOptimizer*, jule::Ptr<_1bc744456_RangeIter>);
inline void _1bc9c906a_optimizeWhileIter(_1bc9c7024_scopeOptimizer*, jule::Ptr<_1bc743a0a_WhileIter>);
inline jule::Bool _1bc9c93ab_substr(_1bc9c7024_scopeOptimizer*, jule::Ptr<_1bc745c1b_Assign>);
inline jule::Bool _1bc9c96ec_strAssign(_1bc9c7024_scopeOptimizer*, jule::Ptr<_1bc745c1b_Assign>);
inline jule::Bool _1bc9c9a3d_sliceAssign(_1bc9c7024_scopeOptimizer*, jule::Ptr<_1bc745c1b_Assign>);
inline void _1bc9c9ce6_optimizeAssign(_1bc9c7024_scopeOptimizer*, jule::Ptr<_1bc745c1b_Assign>);
inline jule::Bool _1bc9ca137_tryOptimizeSwap(_1bc9c7024_scopeOptimizer*, jule::Ptr<_1bc7460e5_MultiAssign>*);
inline void _1bc9ca3e0_optimizeMultiAssign(_1bc9c7024_scopeOptimizer*, jule::Ptr<_1bc7460e5_MultiAssign>);
inline void _1bc9ca698_optimizeRet(_1bc9c7024_scopeOptimizer*, jule::Ptr<_1bc747d1c_RetSt>);
inline void _1bc9ca951_optimizeStmt(_1bc9c7024_scopeOptimizer*, jule::Any);
inline void _1bc9cac09_optimizeChild(_1bc9c7024_scopeOptimizer*, jule::Ptr<_1bc74261e_Scope>);
inline void _1bc9cae07_optimize(_1bc9c7024_scopeOptimizer*);
inline void static__1bc9cd79a_optimize(jule::Any*);
inline jule::Bool _1bc9cdadb_selfCmpCond(_1bc9cd1b2_exprOptimizer*, jule::Ptr<_1ece0d282_BinaryExprModel>*);
inline jule::Bool _1bc9cde2c_boolCond(_1bc9cd1b2_exprOptimizer*, jule::Ptr<_1ece0d282_BinaryExprModel>*);
inline jule::Bool _1bc9ce26d_strCond(_1bc9cd1b2_exprOptimizer*, jule::Ptr<_1ece0d282_BinaryExprModel>);
inline jule::Bool _1bc9ce724_tryNeutralElement1(_1bc9cd1b2_exprOptimizer*, jule::Ptr<_1ece0d282_BinaryExprModel>*, jule::Ptr<_230d58386_Const>, jule::Ptr<_1ece0cc87_OperandExprModel>*);
inline jule::Bool _1bc9cea65_tryNeutralElement(_1bc9cd1b2_exprOptimizer*, jule::Ptr<_1ece0d282_BinaryExprModel>*);
inline void _1bc9ced1d_binary(_1bc9cd1b2_exprOptimizer*, jule::Ptr<_1ece0d282_BinaryExprModel>);
inline void _1bc9d00c6_unary(_1bc9cd1b2_exprOptimizer*, jule::Ptr<_1ece0d65b_UnaryExprModel>);
inline void _1bc9d037e_structureLit(_1bc9cd1b2_exprOptimizer*, jule::Ptr<_1ece0e030_StructLitExprModel>);
inline void _1bc9d0637_allocStructure(_1bc9cd1b2_exprOptimizer*, jule::Ptr<_1ece0e32c_AllocStructLitExprModel>);
inline void _1bc9d08e0_casting(_1bc9cd1b2_exprOptimizer*, jule::Ptr<_1ece0e8b0_CastingExprModel>);
inline void _1bc9d0b98_args(_1bc9cd1b2_exprOptimizer*, jule::Slice<jule::Any>*);
inline void _1bc9d0e51_scope(_1bc9cd1b2_exprOptimizer*, jule::Ptr<_1bc74261e_Scope>*);
inline void _1bc9d1209_funcCall(_1bc9cd1b2_exprOptimizer*, jule::Ptr<_1ece10262_FnCallExprModel>);
inline void _1bc9d14b2_slice(_1bc9cd1b2_exprOptimizer*, jule::Ptr<_1ece1063b_SliceExprModel>);
inline void _1bc9d176a_array(_1bc9cd1b2_exprOptimizer*, jule::Ptr<_1ece13683_ArrayExprModel>);
inline void _1bc9d1a23_indexing(_1bc9cd1b2_exprOptimizer*, jule::Ptr<_1ece10ae2_IndexingExprModel>);
inline void _1bc9d1ccb_anonFunc(_1bc9cd1b2_exprOptimizer*, jule::Ptr<_1ece10ebb_AnonFnExprModel>);
inline void _1bc9d2084_mapExpr(_1bc9cd1b2_exprOptimizer*, jule::Ptr<_1ece1184b_MapExprModel>);
inline void _1bc9d233c_slicing(_1bc9cd1b2_exprOptimizer*, jule::Ptr<_1ece11dce_SlicingExprModel>);
inline void _1bc9d25e5_traitSub(_1bc9cd1b2_exprOptimizer*, jule::Ptr<_1ece12462_TraitSubIdentExprModel>);
inline void _1bc9d289d_structureSub(_1bc9cd1b2_exprOptimizer*, jule::Ptr<_1ece12d03_StructSubIdentExprModel>);
inline void _1bc9d2b56_tuple(_1bc9cd1b2_exprOptimizer*, jule::Ptr<_1ece13980_TupleExprModel>);
inline void _1bc9d2e0e_newCall(_1bc9cd1b2_exprOptimizer*, jule::Ptr<_1ece1460c_BuiltinNewCallExprModel>);
inline void _1bc9d31b7_outCall(_1bc9cd1b2_exprOptimizer*, jule::Ptr<_1ece13d59_BuiltinOutCallExprModel>);
inline void _1bc9d3470_outlnCall(_1bc9cd1b2_exprOptimizer*, jule::Ptr<_1ece14233_BuiltinOutlnCallExprModel>);
inline void _1bc9d3728_panicCall(_1bc9cd1b2_exprOptimizer*, jule::Ptr<_1ece149d6_BuiltinPanicCallExprModel>);
inline void _1bc9d39d1_assertCall(_1bc9cd1b2_exprOptimizer*, jule::Ptr<_1ece14e8c_BuiltinAssertCallExprModel>);
inline void _1bc9d3c89_errorCall(_1bc9cd1b2_exprOptimizer*, jule::Ptr<_1ece16a93_BuiltinErrorCallExprModel>);
inline void _1bc9d4042_makeCall(_1bc9cd1b2_exprOptimizer*, jule::Ptr<_1ece15443_BuiltinMakeCallExprModel>);
inline void _1bc9d42ea_appendCall(_1bc9cd1b2_exprOptimizer*, jule::Ptr<_1ece1581c_BuiltinAppendCallExprModel>);
inline void _1bc9d45a3_lenCall(_1bc9cd1b2_exprOptimizer*, jule::Ptr<_1ece15b19_BuiltinLenCallExprModel>);
inline void _1bc9d485b_capCall(_1bc9cd1b2_exprOptimizer*, jule::Ptr<_1ece15e16_BuiltinCapCallExprModel>);
inline void _1bc9d4b14_deleteCall(_1bc9cd1b2_exprOptimizer*, jule::Ptr<_1ece162e0_BuiltinDeleteCallExprModel>);
inline void _1bc9d4dbc_sizeof(_1bc9cd1b2_exprOptimizer*, jule::Ptr<_1ece1264e_SizeofExprModel>);
inline void _1bc9d5175_alignof(_1bc9cd1b2_exprOptimizer*, jule::Ptr<_1ece172be_AlignofExprModel>);
inline void _1bc9d542d_integratedToStr(_1bc9cd1b2_exprOptimizer*, jule::Ptr<_1ece178b8_IntegratedToStrExprModel>);
inline void _1bc9d56d6_free(_1bc9cd1b2_exprOptimizer*, jule::Ptr<_1ece1808e_FreeExprModel>);
inline void _1bc9d598e_backendEmit(_1bc9cd1b2_exprOptimizer*, jule::Ptr<_1ece17c92_BackendEmitExprModel>);
inline void _1bc9d5b8c_do(_1bc9cd1b2_exprOptimizer*);
inline jule::Ptr<_1bd149597_Optimizer> static__1bd149a1a_New(jule::Ptr<_1bd4385ab_IR>*);
inline void _1bd149cc3_optimizeGlobal(_1bd149597_Optimizer*, jule::Ptr<_1bc7a750d_Var>*);
inline void _1bd14a07b_optimizeFunction(_1bd149597_Optimizer*, jule::Ptr<_1ece1b092_Fn>*);
inline void _1bd14a334_optimizeStruct(_1bd149597_Optimizer*, jule::Ptr<_1bc5bb333_Struct>*);
inline void _1bd14a5dc_optimizeGlobals(_1bd149597_Optimizer*, jule::Ptr<_1bc766d2a_Package>*);
inline void _1bd14a895_optimizeFunctions(_1bd149597_Optimizer*, jule::Ptr<_1bc766d2a_Package>*);
inline void _1bd14ab4d_optimizeStructs(_1bd149597_Optimizer*, jule::Ptr<_1bc766d2a_Package>*);
inline void _1bd14ae06_optimizePackage(_1bd149597_Optimizer*, jule::Ptr<_1bc766d2a_Package>*);
inline void _1bd14b104_Optimize(_1bd149597_Optimizer*);
inline void static__1bd170cc7_Reset(void);
inline void static__1bd1721d5_Print(jule::Str, jule::Str);
inline void static__1bd173b32_LogFlat(_1ed6c7892_Log*);
inline void static__1bd173d63_LogError(_1ed6c7892_Log*);
inline void static__1bd174094_Log(_1ed6c7892_Log*);
inline void static__1bd1742c5_PrintLogs(jule::Slice<_1ed6c7892_Log>*);
inline _1bcc8192c_Time static__1bcc81cd4_Unix(jule::U64);
inline _1bcc8192c_Time static__1bcc81ee3_Now(void);
inline _1bcc81256_AbsTime _1bcc836cb_Abs(_1bcc8192c_Time*);
inline jule::Ptr<_1bd5a2a77_scopeCoder> static__1bd5a3193_new(jule::Ptr<_1bde29145_ObjectCoder>*);
inline void _1c2c121b0_iterHead(jule::Ptr<_1bd5a2a77_scopeCoder>, jule::Ptr<_1bc744456_RangeIter>*, jule::Bool*, jule::Str);
inline void _1bd5a3869_rangeIndexIter(jule::Ptr<_1bd5a2a77_scopeCoder>, jule::Ptr<_1bc744456_RangeIter>*);
inline void _1bd5a3b22_rangeHashmapIter(jule::Ptr<_1bd5a2a77_scopeCoder>, jule::Ptr<_1bc744456_RangeIter>*);
inline void _1bd5a3dca_ifCase(jule::Ptr<_1bd5a2a77_scopeCoder>, jule::Ptr<_1bc742a3c_If>);
inline void _1bd5a4183_conditional(jule::Ptr<_1bd5a2a77_scopeCoder>, jule::Ptr<_1bc743257_Conditional>);
inline void _1bd5a443b_infIter(jule::Ptr<_1bd5a2a77_scopeCoder>, jule::Ptr<_1bc743554_InfIter>);
inline void _1bd5a46e4_whileIter(jule::Ptr<_1bd5a2a77_scopeCoder>, jule::Ptr<_1bc743a0a_WhileIter>);
inline void _1bd5a499c_rangeIter(jule::Ptr<_1bd5a2a77_scopeCoder>, jule::Ptr<_1bc744456_RangeIter>);
inline void _1bd5a4c55_cont(jule::Ptr<_1bd5a2a77_scopeCoder>, jule::Ptr<_1bc7447db_ContSt>);
inline void _1bd5a500d_label(jule::Ptr<_1bd5a2a77_scopeCoder>, jule::Ptr<_1bc744eb2_Label>);
inline void _1bd5a52b6_gotoSt(jule::Ptr<_1bd5a2a77_scopeCoder>, jule::Ptr<_1bc74538b_GotoSt>);
inline void _1bd5a556e_postfix(jule::Ptr<_1bd5a2a77_scopeCoder>, jule::Ptr<_1bc745765_Postfix>);
inline void _1bd5a5827_assign(jule::Ptr<_1bd5a2a77_scopeCoder>, jule::Ptr<_1bc745c1b_Assign>);
inline void _1bd5a5ad0_mapLookupAssign(jule::Ptr<_1bd5a2a77_scopeCoder>, jule::Ptr<_1bc7460e5_MultiAssign>*);
inline void _1bd5a5d88_multiAssignTup(jule::Ptr<_1bd5a2a77_scopeCoder>, jule::Ptr<_1bc7460e5_MultiAssign>*);
inline void _1bcbb0c57_multiAssignFn(jule::Ptr<_1bd5a2a77_scopeCoder>, jule::Ptr<_1bc7460e5_MultiAssign>*);
inline void _1bcbb1010_multiAssign(jule::Ptr<_1bd5a2a77_scopeCoder>, jule::Ptr<_1bc7460e5_MultiAssign>);
inline jule::Fn<void(void)> _1bcbb1351_matchExpr(jule::Ptr<_1bd5a2a77_scopeCoder>, jule::Ptr<_1bc746755_Match>);
inline void _1bcbb16b4_case(jule::Ptr<_1bd5a2a77_scopeCoder>, jule::Ptr<_1bc746755_Match>, jule::Ptr<_1bc74738d_Case>);
inline void _1bcbb196c_matchSt(jule::Ptr<_1bd5a2a77_scopeCoder>, jule::Ptr<_1bc746755_Match>);
inline void _1bcbb1c25_fallSt(jule::Ptr<_1bd5a2a77_scopeCoder>, jule::Ptr<_1bc747987_FallSt>);
inline void _1bcbb1ecd_breakSt(jule::Ptr<_1bd5a2a77_scopeCoder>, jule::Ptr<_1bc744bb5_BreakSt>);
inline void _1bcbb2286_setResult(jule::Ptr<_1bd5a2a77_scopeCoder>, jule::Ptr<_1bc747d1c_RetSt>);
inline void _1bcbb253e_retSt(jule::Ptr<_1bd5a2a77_scopeCoder>, jule::Ptr<_1bc747d1c_RetSt>);
inline void _1bcbb27e7_var(jule::Ptr<_1bd5a2a77_scopeCoder>, jule::Ptr<_1bc7a750d_Var>);
inline void _1bcbb2aa0_mutSlicing(jule::Ptr<_1bd5a2a77_scopeCoder>, jule::Ptr<_1bc9c4e67_MutSlicingExprModel>);
inline void _1bcbb2d58_swap(jule::Ptr<_1bd5a2a77_scopeCoder>, jule::Ptr<_1bc2d5679_SwapExprModel>);
inline void _1bcbb3111_st(jule::Ptr<_1bd5a2a77_scopeCoder>, jule::Any);
inline void _1bcbb33b9_scopeStmts(jule::Ptr<_1bd5a2a77_scopeCoder>, jule::Ptr<_1bc74261e_Scope>*);
inline void _1bcbb3672_scope(jule::Ptr<_1bd5a2a77_scopeCoder>, jule::Ptr<_1bc74261e_Scope>);
inline void _1bcbb392a_funcScope(jule::Ptr<_1bd5a2a77_scopeCoder>, jule::Ptr<_1ece1de96_FnIns>);
inline jule::Ptr<_1bcbb68b7_exprCoder> static__1bcbb6c80_new(jule::Ptr<_1bde29145_ObjectCoder>*);
inline void _1bcbb7038_string(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_230d58386_Const>*);
inline void _1bcbb72e1_boolean(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Bool);
inline void _1bcbb74de_nilLit(jule::Ptr<_1bcbb68b7_exprCoder>);
inline jule::Bool _1bcbb7830_ftoaSpecialCases(jule::Ptr<_1bcbb68b7_exprCoder>, jule::F64*);
inline void _1bcbb7ad8_float32(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_230d58386_Const>*);
inline void _1bcbb7d91_float64(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_230d58386_Const>*);
inline void _1bcbb8149_constant(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_230d58386_Const>);
inline void _1bcbb8567_divByZeroBinary(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1bc583a9d_Token>*, jule::Ptr<_1ece0cc87_OperandExprModel>*, jule::Ptr<_1ece0cc87_OperandExprModel>*);
inline void _1bcbb8820_unsafeBinary(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece0d282_BinaryExprModel>);
inline void _1bcbb8ac8_binary(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece0d282_BinaryExprModel>);
inline void _1bcbb8d81_var(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1bc7a750d_Var>);
inline void _1bcbb9139_structureIns(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1bc5be0b1_StructIns>);
inline void _1bcbb93e2_unary(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece0d65b_UnaryExprModel>);
inline void _1bcbb969a_structureLit(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece0e030_StructLitExprModel>);
inline void _1bcbb9953_allocStructure(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece0e32c_AllocStructLitExprModel>);
inline void _1bcbb9c0b_possibleRefExpr(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Any);
inline void _1bcbba129_castTraitFromTrait(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece0e8b0_CastingExprModel>*, jule::Ptr<_1bc713a41_Trait>, jule::Ptr<_1bc713a41_Trait>);
inline void _1bcbba3d2_casting(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece0e8b0_CastingExprModel>);
inline void _1bcbba68a_models(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Slice<jule::Any>);
inline void _1bcbba943_args(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece10262_FnCallExprModel>*);
inline void _1bcbbabeb_modelForCall(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Any);
inline void _1bcbbaea4_pushCallInf(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece10262_FnCallExprModel>*);
inline jule::Bool _1bcbbb2e5_isWrapped(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece10262_FnCallExprModel>*);
inline void _1bcbbb59d_pureFuncCall(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece10262_FnCallExprModel>*);
inline void _1bcbbb856_coFuncCall(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece10262_FnCallExprModel>*);
inline void _1bcbbbbb9_writeUseExpr(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece1de96_FnIns>*, jule::Ptr<_1bc8108a7_Data>);
inline void _1bcbbbe72_funcCall(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece10262_FnCallExprModel>);
inline void _1bcbbc22a_slice(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece1063b_SliceExprModel>);
inline void _1bcbbc4d3_indexing(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece10ae2_IndexingExprModel>);
inline void _1bcbbc78b_unsafeIndexing(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1bc9c5561_UnsafeIndexingExprModel>);
inline void _1bcbbca44_anonFunc(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece10ebb_AnonFnExprModel>);
inline void _1bcbbccec_mapExpr(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece1184b_MapExprModel>);
inline void _1bcbbd0a5_slicing(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece11dce_SlicingExprModel>);
inline void _1bcbbd35d_traitSub(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece12462_TraitSubIdentExprModel>);
inline void _1bcbbd616_structureSub(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece12d03_StructSubIdentExprModel>);
inline void _1bcbbd8be_array(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece13683_ArrayExprModel>);
inline void _1bcbbdb77_funcInsCommon(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece1de96_FnIns>);
inline void _1bcbbde30_funcIns(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece1de96_FnIns>);
inline void _1bcbbe1d8_tuple(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece13980_TupleExprModel>);
inline void _1bcbbe491_newCall(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece1460c_BuiltinNewCallExprModel>);
inline void _1bcbbe749_outCall(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece13d59_BuiltinOutCallExprModel>);
inline void _1bcbbea02_outlnCall(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece14233_BuiltinOutlnCallExprModel>);
inline void _1bcbbecaa_panicCall(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece149d6_BuiltinPanicCallExprModel>);
inline void _1bcbc0063_assertCall(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece14e8c_BuiltinAssertCallExprModel>);
inline void _1bcbc031b_errorCall(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece16a93_BuiltinErrorCallExprModel>);
inline void _1bcbc05c4_copyCall(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece166b9_BuiltinCopyCallExprModel>);
inline void _1bcbc087c_lenCall(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece15b19_BuiltinLenCallExprModel>);
inline void _1bcbc0b35_capCall(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece15e16_BuiltinCapCallExprModel>);
inline void _1bcbc0ddd_deleteCall(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece162e0_BuiltinDeleteCallExprModel>);
inline void _1bcbc1196_makeCallSlice(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece15443_BuiltinMakeCallExprModel>*);
inline void _1bcbc144e_makeCallStr(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece15443_BuiltinMakeCallExprModel>*);
inline void _1bcbc1707_makeCall(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece15443_BuiltinMakeCallExprModel>);
inline void _1bcbc19b0_pushToSlice(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1bc9c5990_PushToSliceExprModel>);
inline void _1bcbc1c68_appendToSlice(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1bc9c5d69_AppendToSliceExprModel>);
inline void _1bcbc2021_appendCall(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece1581c_BuiltinAppendCallExprModel>);
inline void _1bcbc22c9_sizeof(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece1264e_SizeofExprModel>);
inline void _1bcbc2582_alignof(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece172be_AlignofExprModel>);
inline void _1bcbc283a_runeLit(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece175bb_RuneExprModel>);
inline void _1bcbc2ae3_structureStatic(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece132a9_StructStaticIdentExprModel>);
inline void _1bcbc2d9b_integratedToStr(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece178b8_IntegratedToStrExprModel>);
inline void _1bcbc3154_backendEmit(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece17c92_BackendEmitExprModel>);
inline void _1bcbc340c_free(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1ece1808e_FreeExprModel>);
inline void _1bcbc36b5_strComp(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1bc9c48d4_StrCompExprModel>);
inline void _1bcbc396d_emptyCompare(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1bc2d5a97_EmptyCompareExprModel>);
inline void _1bcbc3c26_model(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Any);
inline void _1bcbc3ece_initExpr(jule::Ptr<_1bcbb68b7_exprCoder>, jule::Ptr<_1bc8411bd_TypeKind>);
inline jule::Ptr<_1bcbc719c_TestCoder> static__1bcbc75dc_New(jule::Ptr<_1bde29145_ObjectCoder>*);
inline jule::Ptr<_1bc763e04_ImportInfo> _1bcbc7873_findTestingPackage(jule::Ptr<_1bcbc719c_TestCoder>);
inline void _1bcbc7b2b_appendTest(jule::Ptr<_1bcbc719c_TestCoder>, jule::Ptr<_1ece1de96_FnIns>);
inline void _1bcbc7dd4_appendPackageTests(jule::Ptr<_1bcbc719c_TestCoder>, jule::Ptr<_1bc766d2a_Package>*);
inline jule::Bool _1bcbc816a_readyTestingPackage(jule::Ptr<_1bcbc719c_TestCoder>);
inline void _1bcbc8368_callTmReset(jule::Ptr<_1bcbc719c_TestCoder>);
inline void _1bcbc8566_callTmFailed(jule::Ptr<_1bcbc719c_TestCoder>);
inline void _1bcbc8764_callTmSkipped(jule::Ptr<_1bcbc719c_TestCoder>);
inline void _1bcbc8962_Serialize(jule::Ptr<_1bcbc719c_TestCoder>);
inline void static__1bcbca49c_writeIdentTo(_2096a4489_StrBuilder*, jule::Str*);
inline void static__1bcbca843_toOut(_2096a4489_StrBuilder*, jule::Str, jule::Uintptr);
inline void static__1bcbcac94_toLocal(_2096a4489_StrBuilder*, jule::I64, jule::I64, jule::Str*);
inline void static__1bcbcb080_func(_2096a4489_StrBuilder*, jule::Ptr<_1ece1b092_Fn>*);
inline void static__1bcbcb36b_funcIns(_2096a4489_StrBuilder*, jule::Ptr<_1ece1de96_FnIns>*);
inline void static__1bcbcb657_traitDecl(_2096a4489_StrBuilder*, jule::Ptr<_1bc713a41_Trait>);
inline void static__1bcbcb943_param(_2096a4489_StrBuilder*, jule::Ptr<_1ece195bd_Param>*);
inline void static__1bcbcbc2e_structure(_2096a4489_StrBuilder*, jule::Ptr<_1bc5bb333_Struct>*);
inline void static__1bcbcc01a_structureIns(_2096a4489_StrBuilder*, jule::Ptr<_1bc5be0b1_StructIns>*);
inline void static__1bcbcc306_field(_2096a4489_StrBuilder*, jule::Ptr<_1bc5b8440_Field>*);
inline void static__1bcbcc5e2_var(_2096a4489_StrBuilder*, jule::Ptr<_1bc7a750d_Var>);
inline void static__1bcbcc8cd_iterBegin(_2096a4489_StrBuilder*, jule::Uintptr);
inline void static__1bcbccbb9_iterEnd(_2096a4489_StrBuilder*, jule::Uintptr);
inline void static__1bcbccea5_iterNext(_2096a4489_StrBuilder*, jule::Uintptr);
inline void static__1bcbcd291_label(_2096a4489_StrBuilder*, jule::Uintptr);
inline void static__1bcbcd57c_matchEnd(_2096a4489_StrBuilder*, jule::Uintptr);
inline void static__1bcbcd868_caseBegin(_2096a4489_StrBuilder*, jule::Uintptr);
inline jule::Str _1bde38b38_Str(_1bde38792_customType*);
inline jule::Bool _1bde38e79_Equal(jule::Ptr<_1bde38792_customType>, jule::Ptr<_1bc8411bd_TypeKind>);
inline jule::Ptr<_1bde393a8_typeCoder> static__1bde398e7_new(jule::Ptr<_1bde29145_ObjectCoder>*);
inline void _1bde39c5a_toType(_1bde393a8_typeCoder*, _2096a4489_StrBuilder*, jule::Str);
inline void _1bde3a0bd_prim(_1bde393a8_typeCoder*, _2096a4489_StrBuilder*, jule::Ptr<_1bc848c97_Prim>);
inline void _1bde3a431_tuple(_1bde393a8_typeCoder*, _2096a4489_StrBuilder*, jule::Ptr<_1bc84dd8a_Tuple>);
inline void _1bde3a794_asSptr(_1bde393a8_typeCoder*, _2096a4489_StrBuilder*, jule::Slice<jule::U8>);
inline void _1bde3ab07_sptr(_1bde393a8_typeCoder*, _2096a4489_StrBuilder*, jule::Ptr<_1bc84c7c3_Sptr>);
inline void _1bde3ae6a_ptr(_1bde393a8_typeCoder*, _2096a4489_StrBuilder*, jule::Ptr<_1bc85108a_Ptr>);
inline void _1bde3b2cd_enumDecl(_1bde393a8_typeCoder*, _2096a4489_StrBuilder*, jule::Ptr<_1bc71624c_Enum>);
inline void _1bde3b641_typeEnumDecl(_1bde393a8_typeCoder*, _2096a4489_StrBuilder*, jule::Ptr<_1bc717957_TypeEnum>);
inline void _1bde3b9a4_asSlice(_1bde393a8_typeCoder*, _2096a4489_StrBuilder*, jule::Ptr<_1bc8411bd_TypeKind>);
inline void _1bde3bd17_slice(_1bde393a8_typeCoder*, _2096a4489_StrBuilder*, jule::Ptr<_1bc84d296_Slc>);
inline void _1bde3c17a_mapType(_1bde393a8_typeCoder*, _2096a4489_StrBuilder*, jule::Ptr<_1bc84e93a_Map>);
inline void _1bde3c851_traitDecl(_1bde393a8_typeCoder*, _2096a4489_StrBuilder*, jule::Ptr<_1bc713a41_Trait>);
inline void _1bde3cbb4_structure(_1bde393a8_typeCoder*, _2096a4489_StrBuilder*, jule::Ptr<_1bc5bb333_Struct>);
inline void _1bde3d027_structureIns(_1bde393a8_typeCoder*, _2096a4489_StrBuilder*, jule::Ptr<_1bc5be0b1_StructIns>);
inline void _1bde3d38a_array(_1bde393a8_typeCoder*, _2096a4489_StrBuilder*, jule::Ptr<_1bc8505b7_Arr>);
inline void _1bde3da61_paramIns(_1bde393a8_typeCoder*, _2096a4489_StrBuilder*, jule::Ptr<_1ece1ceea_ParamIns>*);
inline void _1bde3e237_funcInsResult(_1bde393a8_typeCoder*, _2096a4489_StrBuilder*, jule::Ptr<_1ece1de96_FnIns>*);
inline void _1bde3e59a_anonFunc(_1bde393a8_typeCoder*, _2096a4489_StrBuilder*, jule::Ptr<_1ece1de96_FnIns>);
inline void _1bde3e90d_func(_1bde393a8_typeCoder*, _2096a4489_StrBuilder*, jule::Ptr<_1ece1de96_FnIns>);
inline void _1bde3ec71_kind(_1bde393a8_typeCoder*, _2096a4489_StrBuilder*, jule::Ptr<_1bc8411bd_TypeKind>);
inline jule::Ptr<_1bde42779_resultCoder> static__1bde42c52_new(jule::Ptr<_1bde393a8_typeCoder>*);
inline void _1bde430b5_ptr(_1bde42779_resultCoder*, _2096a4489_StrBuilder*, jule::Ptr<_1bc85108a_Ptr>);
inline void _1bde43428_sptr(_1bde42779_resultCoder*, _2096a4489_StrBuilder*, jule::Ptr<_1bc84c7c3_Sptr>);
inline void _1bde4378b_mapType(_1bde42779_resultCoder*, _2096a4489_StrBuilder*, jule::Ptr<_1bc84e93a_Map>);
inline void _1bde43aee_slice(_1bde42779_resultCoder*, _2096a4489_StrBuilder*, jule::Ptr<_1bc84d296_Slc>);
inline void _1bde43e62_arr(_1bde42779_resultCoder*, _2096a4489_StrBuilder*, jule::Ptr<_1bc8505b7_Arr>);
inline void _1bde442c5_func(_1bde42779_resultCoder*, _2096a4489_StrBuilder*, jule::Ptr<_1ece1de96_FnIns>);
inline void _1bde44638_tup(_1bde42779_resultCoder*, _2096a4489_StrBuilder*, jule::Ptr<_1bc84dd8a_Tuple>);
inline void _1bde4499b_codeMut(_1bde42779_resultCoder*, _2096a4489_StrBuilder*, jule::Ptr<_1bc8411bd_TypeKind>*);
inline void _1bde44d0e_codeMut1(_1bde42779_resultCoder*, _2096a4489_StrBuilder*, jule::Ptr<_1bc8411bd_TypeKind>*);
inline jule::Slice<jule::U8> _1bde4511c_code(_1bde42779_resultCoder*, jule::Ptr<_1bc8411bd_TypeKind>*);
inline jule::Str _1c317cbad_Name(_1c317cd45_Flag*);
inline jule::Str _1c317d131_What(_1c317cd45_Flag*);
inline void _1c317d274_Reset(_1c317cd45_Flag*);
inline jule::I32 _1c317d3b7_Short(_1c317cd45_Flag*);
inline jule::Str _1c3181310_Name(_1c31816d9_Flag*);
inline jule::Str _1c31819c5_What(_1c31816d9_Flag*);
inline void _1c3181b18_Reset(_1c31816d9_Flag*);
inline jule::I32 _1c3181c5b_Short(_1c31816d9_Flag*);
inline jule::Str _1c3184a0b_Name(_1c3184dd5_Flag*);
inline jule::Str _1c31851c1_What(_1c3184dd5_Flag*);
inline void _1c3185314_Reset(_1c3184dd5_Flag*);
inline jule::I32 _1c3185457_Short(_1c3184dd5_Flag*);
inline jule::Str _1c318824b_Name(_1c3188625_Flag*);
inline jule::Str _1c3188911_What(_1c3188625_Flag*);
inline void _1c3188a54_Reset(_1c3188625_Flag*);
inline jule::I32 _1c3188b97_Short(_1c3188625_Flag*);
inline jule::Str _1c318b947_Name(_1c318bd21_Flag*);
inline jule::Str _1c318c10c_What(_1c318bd21_Flag*);
inline void _1c318c250_Reset(_1c318bd21_Flag*);
inline jule::I32 _1c318c393_Short(_1c318bd21_Flag*);
inline jule::Ptr<_1bdead383_FlagSet> static__1bdead66e_New(void);
inline jule::Trait<_1bdeab7d2_CommonFlag> _1bdeadae2_FindFlag(_1bdead383_FlagSet*, jule::Str);
inline jule::Trait<_1bdeab7d2_CommonFlag> _1bdeade33_FindFlagShort(_1bdead383_FlagSet*, jule::I32);
inline jule::Exceptional<jule::Slice<jule::Str>> _1bdeae50a_Parse(_1bdead383_FlagSet*, jule::Slice<jule::Str>);
inline jule::Ptr<_1c318bd21_Flag> _1c3207694_addFlagCommon(_1bdead383_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_1c3188625_Flag> _1c320e4c0_addFlagCommon(_1bdead383_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _1c3205384_AddVar(_1bdead383_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _1c320c204_AddVar(_1bdead383_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
inline __jule_tuple_i64__jule_tuple_bool _1c319ec46_parseInteger(_1bdeb0d14_argParser*, jule::Str*, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>);
inline __jule_tuple_u64__jule_tuple_bool _1c31a7523_parseInteger(_1bdeb0d14_argParser*, jule::Str*, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>);
inline jule::Str _1bdeb162d_getData(_1bdeb0d14_argParser*);
inline jule::VoidExceptional _1bdeb18a3_processFlag(_1bdeb0d14_argParser*, jule::Trait<_1bdeab7d2_CommonFlag>*);
inline jule::VoidExceptional _1bdeb1b5b_singleDash(_1bdeb0d14_argParser*, jule::Str*);
inline jule::VoidExceptional _1bdeb1e14_doubleDash(_1bdeb0d14_argParser*, jule::Str*);
inline jule::VoidExceptional _1bdeb2112_tryArg(_1bdeb0d14_argParser*);
inline jule::VoidExceptional _1bdeb2310_parse(_1bdeb0d14_argParser*);
inline jule::Ptr<_1bde29145_ObjectCoder> static__1bde29541_New(jule::Ptr<_1bd4385ab_IR>*, _1bde2762c_SerializationInfo);
inline void _1bde297e9_write(jule::Ptr<_1bde29145_ObjectCoder>, jule::Str);
inline void _1bde29aa2_writeBytes(jule::Ptr<_1bde29145_ObjectCoder>, jule::Slice<jule::U8>);
inline void _1bde29ca0_addIndent(jule::Ptr<_1bde29145_ObjectCoder>);
inline void _1bde29e9d_doneIndent(jule::Ptr<_1bde29145_ObjectCoder>);
inline void _1bde2a19b_indent(jule::Ptr<_1bde29145_ObjectCoder>);
inline jule::I64 _1bde2a4dc_findAnyType(jule::Ptr<_1bde29145_ObjectCoder>, jule::Ptr<_1bc8411bd_TypeKind>*);
inline jule::I64 _1bde2a82d_pushAnyType(jule::Ptr<_1bde29145_ObjectCoder>, jule::Ptr<_1bc8411bd_TypeKind>);
inline void _1bde2aad6_pushResultIns(jule::Ptr<_1bde29145_ObjectCoder>, jule::Ptr<_1ece1de96_FnIns>*);
inline void _1bde2ad8e_pushResult(jule::Ptr<_1bde29145_ObjectCoder>, jule::Ptr<_1ece1b092_Fn>*);
inline jule::I64 _1bde2b28a_findTypeOffsetS(_1bde29145_ObjectCoder*, jule::Ptr<_1bc713a41_Trait>, jule::Ptr<_1bc5be0b1_StructIns>);
inline jule::I64 _1bde2b686_findTypeOffset(_1bde29145_ObjectCoder*, jule::Ptr<_1bc713a41_Trait>, jule::Ptr<_1bc8411bd_TypeKind>);
inline void _1bde2b9e9_pushAndWriteMaskMapper(jule::Ptr<_1bde29145_ObjectCoder>, jule::Ptr<_1bc713a41_Trait>, jule::Ptr<_1bc713a41_Trait>);
inline void _1bde2bca2_locInfo(jule::Ptr<_1bde29145_ObjectCoder>, jule::Ptr<_1bc583a9d_Token>*);
inline void _1bde2bea0_head(jule::Ptr<_1bde29145_ObjectCoder>);
inline void _1bde2c19d_links(jule::Ptr<_1bde29145_ObjectCoder>);
inline void _1bde2c456_prepareStructure(_1bde29145_ObjectCoder*, jule::Ptr<_1bc5bb333_Struct>*);
inline void _1bde2c654_prepareStructures(jule::Ptr<_1bde29145_ObjectCoder>);
inline void _1bde2c90c_iterPackages(jule::Ptr<_1bde29145_ObjectCoder>, jule::Fn<void(jule::Ptr<_1bc766d2a_Package>*)>);
inline void _1bde2cb0a_buildTraitMap(jule::Ptr<_1bde29145_ObjectCoder>);
inline void _1bde2cd08_traitDecls(jule::Ptr<_1bde29145_ObjectCoder>);
inline void _1bde2d0b1_structurePlainDecl(jule::Ptr<_1bde29145_ObjectCoder>, jule::Ptr<_1bc5bb333_Struct>*);
inline void _1bde2d2ae_structurePlainDecls(jule::Ptr<_1bde29145_ObjectCoder>);
inline void _1bde2d567_fieldDecl(jule::Ptr<_1bde29145_ObjectCoder>, jule::Ptr<_1bc5bd511_FieldIns>*);
inline void _1bde2d820_structureDestructor(jule::Ptr<_1bde29145_ObjectCoder>, jule::Ptr<_1bc5be0b1_StructIns>*);
inline void _1bde2db83_structureOperatorEq(jule::Ptr<_1bde29145_ObjectCoder>, jule::Slice<jule::U8>, jule::Ptr<_1bc5be0b1_StructIns>*);
inline void _1bde2dee6_structureOperatorNotEq(jule::Ptr<_1bde29145_ObjectCoder>, jule::Slice<jule::U8>, jule::Ptr<_1bc5be0b1_StructIns>*);
inline void _1bde2e414_structureOperator(jule::Ptr<_1bde29145_ObjectCoder>, jule::Slice<jule::U8>, jule::Ptr<_1ece1de96_FnIns>*, jule::Str);
inline void _1bde2e6bc_structureOperators(jule::Ptr<_1bde29145_ObjectCoder>, jule::Ptr<_1bc5be0b1_StructIns>*);
inline void _1bde2e975_structureInsDecl(jule::Ptr<_1bde29145_ObjectCoder>, jule::Ptr<_1bc5be0b1_StructIns>*);
inline void _1bde2ec2d_structureDecl(jule::Ptr<_1bde29145_ObjectCoder>, jule::Ptr<_1bc5bb333_Struct>*);
inline void _1bde2ee2b_structureDecls(jule::Ptr<_1bde29145_ObjectCoder>);
inline void _1bde30129_structureMethodDecls(jule::Ptr<_1bde29145_ObjectCoder>);
inline void _1bde303d2_paramsDecls(jule::Ptr<_1bde29145_ObjectCoder>, jule::Slice<jule::Ptr<_1ece1ceea_ParamIns>>*);
inline void _1bde30745_funcHead(jule::Ptr<_1bde29145_ObjectCoder>, jule::Ptr<_1ece1de96_FnIns>*, jule::Bool);
inline void _1bde30aa8_funcDeclIns(jule::Ptr<_1bde29145_ObjectCoder>, jule::Ptr<_1ece1de96_FnIns>*, jule::Bool);
inline void _1bde30e1b_funcDecl(jule::Ptr<_1bde29145_ObjectCoder>, jule::Ptr<_1ece1b092_Fn>*, jule::Bool);
inline void _1bde31339_funcDeclTrait(jule::Ptr<_1bde29145_ObjectCoder>, jule::Ptr<_1bc713a41_Trait>*, jule::Ptr<_1ece1b092_Fn>*, jule::Bool);
inline void _1bde31537_funcDecls(jule::Ptr<_1bde29145_ObjectCoder>);
inline void _1bde3189a_traitDataTypeMethods(jule::Ptr<_1bde29145_ObjectCoder>, jule::Ptr<_1bc713a41_Trait>*, jule::Ptr<_1bc713a41_Trait>*);
inline void _1bde31a98_traitDataTypes(jule::Ptr<_1bde29145_ObjectCoder>);
inline void _1bde31d51_paramIns(jule::Ptr<_1bde29145_ObjectCoder>, jule::Ptr<_1ece1ceea_ParamIns>*);
inline void _1bde32109_paramsIns(jule::Ptr<_1bde29145_ObjectCoder>, jule::Slice<jule::Ptr<_1ece1ceea_ParamIns>>*);
inline void _1bde3246c_varInitExpr(jule::Ptr<_1bde29145_ObjectCoder>, jule::Ptr<_1bc7a750d_Var>*, jule::Fn<void(void)>);
inline void _1bde32725_var(jule::Ptr<_1bde29145_ObjectCoder>, jule::Ptr<_1bc7a750d_Var>);
inline void _1bde329cd_funcIns(jule::Ptr<_1bde29145_ObjectCoder>, jule::Ptr<_1ece1de96_FnIns>*);
inline void _1bde32c86_func(jule::Ptr<_1bde29145_ObjectCoder>, jule::Ptr<_1ece1b092_Fn>*);
inline void _1bde330e9_funcTrait(jule::Ptr<_1bde29145_ObjectCoder>, jule::Ptr<_1bde27c04_traitHash>*, jule::Ptr<_1ece1b092_Fn>*);
inline void _1bde3345c_traitWrapper(jule::Ptr<_1bde29145_ObjectCoder>, jule::Ptr<_1ece1b092_Fn>*, jule::Ptr<_1bde27c04_traitHash>*);
inline void _1bde3365a_traitWrappers(jule::Ptr<_1bde29145_ObjectCoder>);
inline void _1bde339bd_traitDataMethods(jule::Ptr<_1bde29145_ObjectCoder>, jule::Ptr<_1bc713a41_Trait>*, jule::Ptr<_1bde27c04_traitHash>*);
inline void _1bde33d31_traitData(jule::Ptr<_1bde29145_ObjectCoder>, jule::Ptr<_1bde27c04_traitHash>*, jule::Ptr<_1bc713a41_Trait>*);
inline void _1bde3402e_traitDatas(jule::Ptr<_1bde29145_ObjectCoder>);
inline void _1bde3422c_globals(jule::Ptr<_1bde29145_ObjectCoder>);
inline void _1bde3442a_decls(jule::Ptr<_1bde29145_ObjectCoder>);
inline void _1bde346d3_structureMethods(jule::Ptr<_1bde29145_ObjectCoder>, jule::Ptr<_1bc5be0b1_StructIns>*);
inline void _1bde3498b_structureOstream(jule::Ptr<_1bde29145_ObjectCoder>, jule::Ptr<_1bc5be0b1_StructIns>*);
inline void _1bde34c44_structureIns(jule::Ptr<_1bde29145_ObjectCoder>, jule::Ptr<_1bc5be0b1_StructIns>*);
inline void _1bde34eec_structure(jule::Ptr<_1bde29145_ObjectCoder>, jule::Ptr<_1bc5bb333_Struct>*);
inline void _1bde351ea_structures(jule::Ptr<_1bde29145_ObjectCoder>);
inline void _1bde353e8_funcs(jule::Ptr<_1bde29145_ObjectCoder>);
inline void _1bde356a1_pushInit(jule::Ptr<_1bde29145_ObjectCoder>, jule::Ptr<_1bc766d2a_Package>*);
inline void _1bde3589e_initCaller(jule::Ptr<_1bde29145_ObjectCoder>);
inline void _1bde35a9c_end(jule::Ptr<_1bde29145_ObjectCoder>);
inline void _1bde35c9a_serializeHead(jule::Ptr<_1bde29145_ObjectCoder>);
inline void _1bde35e98_Serialize(jule::Ptr<_1bde29145_ObjectCoder>);
inline jule::Ptr<_1bd108de7_ObjectDeadCode> static__1bd138db1_new(jule::Ptr<_1bd4385ab_IR>*);
inline jule::Bool _1c2922288_isLive(jule::Ptr<_1bd108de7_ObjectDeadCode>, jule::Ptr<_1bc713a41_Trait>*);
inline jule::Bool _1c2927d0a_isLive(jule::Ptr<_1bd108de7_ObjectDeadCode>, jule::Ptr<_1ece1de96_FnIns>*);
inline jule::Bool _1c292dae1_isLive(jule::Ptr<_1bd108de7_ObjectDeadCode>, jule::Ptr<_1bc5be0b1_StructIns>*);
inline jule::Bool _1c2935e6c_isLive(jule::Ptr<_1bd108de7_ObjectDeadCode>, jule::Ptr<_1bc7a750d_Var>*);
inline void _1c2922695_pushLive(jule::Ptr<_1bd108de7_ObjectDeadCode>, jule::Ptr<_1bc713a41_Trait>);
inline void _1c29281b2_pushLive(jule::Ptr<_1bd108de7_ObjectDeadCode>, jule::Ptr<_1ece1de96_FnIns>);
inline void _1c292e1eb_pushLive(jule::Ptr<_1bd108de7_ObjectDeadCode>, jule::Ptr<_1bc5be0b1_StructIns>);
inline void _1c2936379_pushLive(jule::Ptr<_1bd108de7_ObjectDeadCode>, jule::Ptr<_1bc7a750d_Var>);
inline void _1bd139730_setReferencesAsLive(jule::Ptr<_1bd108de7_ObjectDeadCode>, jule::Ptr<_1ece221a8_ReferenceStack>*);
inline void _1bd1399d8_inits(jule::Ptr<_1bd108de7_ObjectDeadCode>, jule::Ptr<_1bc766d2a_Package>*);
inline void _1bd139c91_collectLivePackage(jule::Ptr<_1bd108de7_ObjectDeadCode>, jule::Ptr<_1bc766d2a_Package>*);
inline void _1bd139e8e_collectLive(jule::Ptr<_1bd108de7_ObjectDeadCode>);
inline void _1bd13a247_removeDeadGlobals(jule::Ptr<_1bd108de7_ObjectDeadCode>, jule::Slice<jule::Ptr<_1bc7a750d_Var>>*);
inline void _1bd13a500_removeDeadFns(jule::Ptr<_1bd108de7_ObjectDeadCode>, jule::Slice<jule::Ptr<_1ece1b092_Fn>>*);
inline void _1bd13a7a8_removeDeadStructs(jule::Ptr<_1bd108de7_ObjectDeadCode>, jule::Slice<jule::Ptr<_1bc5bb333_Struct>>*);
inline void _1bd13aa61_removeDeadTraits(jule::Ptr<_1bd108de7_ObjectDeadCode>, jule::Slice<jule::Ptr<_1bc713a41_Trait>>*);
inline void _1bd13ad19_removeDeadsFile(jule::Ptr<_1bd108de7_ObjectDeadCode>, jule::Ptr<_1bc80a50b_SymbolTable>*);
inline void _1bd13b0c2_removeDeadsPackage(jule::Ptr<_1bd108de7_ObjectDeadCode>, jule::Ptr<_1bc766d2a_Package>*);
inline void _1bd13b2c0_removeDeads(jule::Ptr<_1bd108de7_ObjectDeadCode>);
inline void _1bd13b4bd_elimanate(jule::Ptr<_1bd108de7_ObjectDeadCode>);
inline __jule_tuple_x_1bd4385ab_IR__jule_tuple_s_1ed6c7892_Log static__1bd438a1d_Build(jule::Str, jule::I64);
inline void _1bd439007_appendStructs(_1bd4385ab_IR*, jule::Ptr<_1bc766d2a_Package>*, jule::Slice<jule::Ptr<_1bc5bb333_Struct>>*);
inline jule::Slice<jule::Ptr<_1bc5bb333_Struct>> _1bd43928d_GetAllStructures(_1bd4385ab_IR*);
inline void _1bd439601_appendGlobals(_1bd4385ab_IR*, jule::Ptr<_1bc766d2a_Package>*, jule::Slice<jule::Ptr<_1bc7a750d_Var>>*);
inline jule::Slice<jule::Ptr<_1bc7a750d_Var>> _1bd439887_GetAllGlobals(_1bd4385ab_IR*);
inline void _1bd439a85_Order(_1bd4385ab_IR*);
inline jule::Str _1bc5be435_Str(_1bc5be0b1_StructIns*);
inline jule::Bool _1bc5be776_Equal(jule::Ptr<_1bc5be0b1_StructIns>, jule::Ptr<_1bc8411bd_TypeKind>);
inline jule::Bool _1bc5bec2c_Same(_1bc5be0b1_StructIns*, jule::Ptr<_1bc5be0b1_StructIns>);
inline jule::Ptr<_1ece1b092_Fn> _1bc5c0128_FindMethod(_1bc5be0b1_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_1bc5bd511_FieldIns> _1bc5c0469_FindField(_1bc5be0b1_StructIns*, jule::Str);
inline jule::Ptr<_1bc7a750d_Var> _1bc5c07aa_FindStatic(_1bc5be0b1_StructIns*, jule::Str);
inline jule::Ptr<_1eeea092c_Cmd> static__1eeea0d4a_New(jule::Str);
inline jule::VoidExceptional _1eeea1048_Spawn(_1eeea092c_Cmd*);
inline jule::Exceptional<jule::I64> _1eeea14cc_Wait(_1eeea092c_Cmd*);
inline jule::VoidExceptional _1eeea503b_spawn(_1eeea092c_Cmd*);
inline jule::Exceptional<jule::I64> _1eeea54c0_wait(_1eeea092c_Cmd*);
inline jule::I32 _2309ed207_DecodeRune(jule::I32, jule::I32);
inline __jule_tuple_i32__jule_tuple_i32 _2309ed4c1_EncodeRune(jule::I32);
inline jule::Slice<jule::U16> _2309ed812_Encode(jule::Slice<jule::I32>);
inline jule::Slice<jule::I32> _2309edacb_Decode(jule::Slice<jule::U16>);
inline jule::Slice<jule::U16> _2309ede1c_AppendRune(jule::Slice<jule::U16>, jule::I32);
inline jule::Slice<jule::U16> _2309ee170_UTF16FromStr(jule::Str);
inline jule::Str _2309ee47d_UTF16ToStr(jule::Slice<jule::U16>);
inline jule::Str _2309ee747_U16PtrToStr(jule::U16*);
inline jule::I64 _223064da8_GetLastErrno(void);
inline jule::Uintptr _230a28809_GetStdHandle(jule::Uintptr);
inline jule::Bool _230a28ac3_CloseHandle(jule::Uintptr);
inline jule::I64 _230a28e47_Wstat(jule::U16*, struct _stat*);
inline jule::I64 _230a29376_Wopen(jule::U16*, jule::I64, jule::I64);
inline jule::U32 _230a29585_GetLastError(void);
inline jule::U32 _230a29909_GetCurrentDirectory(jule::U32, jule::U16*);
inline jule::Bool _230a29e8c_DeleteFile(jule::U16*);
inline jule::Bool _230a2a256_CreateDirectory(jule::U16*);
inline jule::Bool _230a2a520_RemoveDirectory(jule::U16*);
inline jule::U32 _230a2aa09_GetFullPathName(jule::U16*, jule::U32, jule::U16*, jule::U16**);
inline jule::Bool _230a2ad7d_GetConsoleMode(jule::Uintptr, jule::I64*);
inline jule::Bool _230a2b455_SetConsoleMode(jule::Uintptr, jule::I64);
inline jule::Bool _230a2b9d8_WriteConsole(jule::Uintptr, jule::U16*, jule::I64, jule::I64*, void*);
inline jule::Bool _230a2bec2_ReadConsole(jule::Uintptr, jule::U16*, jule::I64, jule::I64*);
inline jule::Uintptr _230a2c555_FindFirstFile(jule::U16*, WIN32_FIND_DATAW*);
inline jule::I64 _230a2c8c9_FindNextFile(jule::Uintptr, WIN32_FIND_DATAW*);
inline jule::I64 _230a2cb93_FindClose(jule::Uintptr);
inline jule::I64 _230a2eca5_Read(jule::I64, void*, jule::U64);
inline jule::I64 _230a3014b_Close(jule::I64);
inline jule::I64 _230a3057a_Write(jule::I64, void*, jule::U64);
inline void _230a307ab_Exit(jule::I64);
inline __jule_tuple_i32__jule_tuple_int _2095d15e7_DecodeRune(jule::Slice<jule::U8>);
inline __jule_tuple_i32__jule_tuple_int _2095d1938_DecodeRuneStr(jule::Str);
inline __jule_tuple_i32__jule_tuple_int _2095d1ebb_DecodeLastRuneStr(jule::Str);
inline jule::I64 _2095d2285_RuneLen(jule::I32);
inline jule::I64 _2095d26d6_EncodeRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _2095d2a5a_AppendRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _2095d2dce_appendRuneNonASCII(jule::Slice<jule::U8>, jule::I32);
inline jule::I64 _2095d3462_RuneCountStr(jule::Str);
inline jule::Bool _2095d372b_RuneStart(jule::U8);
inline jule::Str _209697878_Str(jule::U8*, jule::I64);
inline jule::Slice<jule::U8> _1be0b60b2_Slice(jule::U8*, jule::I64);
inline jule::Slice<jule::U8> _2096a3620_StrBytes(jule::Str);
inline jule::Str _2096a38d9_BytesStr(jule::Slice<jule::U8>);
inline jule::Str _2096a3ba3_StrFromBytes(jule::Slice<jule::U8>);
inline jule::I64 _2096d78c9_getLastOsErrorWindows(void);
inline jule::Slice<jule::Str> _2096d8963_Args(void);
inline jule::Exceptional<jule::Str> _2096d8e08_WorkingDir(void);
inline jule::Exceptional<jule::Str> _2096d9843_getwd(void);
inline jule::Bool _1ed57948b_IsLetter(jule::I32);
inline jule::Bool _1ed5e204d_is16(jule::Slice<_1ed5e02b0_Range16>, jule::U16);
inline jule::Bool _1ed5e23c2_is32(jule::Slice<_1ed5e07dd_Range32>, jule::U32);
inline jule::Bool _1ed5e2bca_isExcludingLatin(jule::Ptr<_1ed5e0c94_RangeTable>, jule::I32);
inline jule::Bool _1ed5e2e94_IsUpper(jule::I32);
inline jule::I64 _1ed63855b_findLastByte(jule::U8*, jule::U8*, jule::U8);
inline jule::I64 _1ed638bdd_FindByteStr(jule::Str, jule::U8);
inline jule::I64 _1ed639062_FindLastByteStr(jule::Str, jule::U8);
inline jule::Str _1ed63935e_Repeat(jule::Str, jule::I64);
inline jule::Bool _1ed6397d2_hasPrefix(jule::Str*, jule::Str*, jule::I64);
inline jule::Bool _1ed639b56_HasPrefix(jule::Str, jule::Str);
inline jule::Bool _1ed63a10c_hasSuffix(jule::Str*, jule::Str*, jule::I64);
inline jule::Bool _1ed63a44d_HasSuffix(jule::Str, jule::Str);
inline jule::I64 _1ed63a87c_FindAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _1ed63ac01_Find(jule::Str, jule::Str);
inline jule::I64 _1ed63b240_FindLastAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _1ed63b5b4_FindLast(jule::Str, jule::Str);
inline jule::I64 _1ed63cd13_FindLastByte(jule::Str, jule::U8);
inline jule::I64 _1ed63d341_FindRune(jule::Str, jule::I32);
inline jule::I64 _1ed63da39_FindAny(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _1ed63e2dc_Split(jule::Str, jule::Str, jule::I64);
inline jule::Bool _1ed63e661_Contains(jule::Str, jule::Str);
inline jule::Bool _1ed6401cd_ContainsAny(jule::Str, jule::Str);
inline jule::I64 _1ed640552_Count(jule::Str, jule::Str);
inline jule::Str _1ed640a3b_Replace(jule::Str, jule::Str, jule::Str, jule::I64);
inline jule::Str _1ed6417b7_TrimLeft(jule::Str, jule::Str);
inline jule::Str _1ed641b3b_TrimRight(jule::Str, jule::Str);
inline jule::Str _1ed642213_Trim(jule::Str, jule::Str);
inline jule::Bool _2096a702a_IsPathSep(jule::U8);
inline jule::Bool _2096a7338_isSlash(jule::U8);
inline jule::U8 _2096a7602_toUpper(jule::U8);
inline jule::I64 _2096a7c0c_volumeNameLen(jule::Str);
inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _2096a7ec6_cutPath(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _2096a8290_fullPath(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _2096a8636_abs(jule::Str);
inline jule::Str _2096a8900_join(jule::Slice<jule::Str>);
inline jule::Str _1ed64439c_Clean(jule::Str);
inline jule::Str _1ed644974_FromSlash(jule::Str);
inline jule::Str _1ed644c2c_Join(jule::Slice<jule::Str>);
inline jule::Str _1ed644ee6_Ext(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _1ed6452b0_Abs(jule::Str);
inline jule::Str _1ed645579_Base(jule::Str);
inline jule::Str _1ed645920_Dir(jule::Str);
inline jule::Str _1ed645bd9_VolumeName(jule::Str);
inline jule::I64 _230a40d3d_getLastFsError(void);
inline jule::Bool _2095d551e_isConsoleHandle(jule::Uintptr);
inline void _1eeea5877_appendEscapeArg(_2096a4489_StrBuilder*, jule::Str);
inline jule::Str _1eeea5b41_makeCmdLine(jule::Slice<jule::Str>);
inline jule::Exceptional<jule::Slice<jule::U16>> _1eeea601a_createEnvBlock(jule::Slice<jule::Str>);
inline jule::I64 _1eeea704e_processErrorFromCode(jule::I64);
inline jule::I64 _1eeea726e_getLastProcessError(void);
inline void _1eeea7a88_Exit(jule::I64);
inline jule::Str _1eeea7c97_Executable(void);
inline jule::Bool _1ed6ba313_IsStdHeaderPath(jule::Str);
inline jule::Bool _1ed6ba5dd_IsValidHeaderExt(jule::Str);
inline jule::Bool _1ed6ba8a7_IsValidCppExt(jule::Str);
inline jule::Str _1ed6c7d04_Logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1ed6c8112_argToStr(jule::Any);
inline jule::I64 _1ed6c83cb_findNextFmt(jule::Str);
inline jule::Str _1ed6c8794_applyFmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1ed6c960d_IsTopDirective(jule::Str);
inline jule::Bool _1ed6caa60_IsWindows(jule::Str);
inline jule::Bool _1ed6cad3a_IsDarwin(jule::Str);
inline jule::Bool _1ed6cb104_IsLinux(jule::Str);
inline jule::Bool _1ed6cb445_IsI386(jule::Str);
inline jule::Bool _1ed6cb70e_IsAmd64(jule::Str);
inline jule::Bool _1ed6cb9c8_IsArm64(jule::Str);
inline jule::Bool _1ed6cbc92_IsUnix(jule::Str);
inline jule::Bool _1ed6cc138_Is32Bit(jule::Str);
inline jule::Bool _1ed6cc402_Is64Bit(jule::Str);
inline void _1eeea9073_init(void);
inline jule::I64 _230cdb292_LeadingZeros64(jule::U64);
inline jule::I64 _230cdc1e9_TrailingZeros(jule::U64);
inline jule::I64 _230cdcb56_TrailingZeros32(jule::U32);
inline jule::I64 _230cdce20_TrailingZeros64(jule::U64);
inline jule::I64 _230ce38c6_Len32(jule::U32);
inline jule::I64 _230ce3b90_Len64(jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _230ce492c_Add64(jule::U64, jule::U64, jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _230ce6236_Mul64(jule::U64, jule::U64);
inline jule::U32 _1d4650a10_F32Bits(jule::F32);
inline jule::F32 _1d4650d1d_F32FromBits(jule::U32);
inline jule::U64 _1d46510d7_F64Bits(jule::F64);
inline jule::F64 _1d4651428_F64FromBits(jule::U64);
inline __jule_tuple_f64__jule_tuple_int _1d46539d0_Frexp(jule::F64);
inline jule::F64 _230ced64a_NaN(void);
inline jule::Bool _230ced958_IsNaN(jule::F64);
inline jule::F64 _230cedc22_Inf(jule::I64);
inline jule::Bool _230cee063_IsInf(jule::F64, jule::I64);
inline __jule_tuple_f64__jule_tuple_int _230cee32c_normalize(jule::F64);
inline jule::F64 _230d00d12_Log(jule::F64);
inline jule::F64 _230d01807_Abs(jule::F64);
inline __jule_tuple_f64__jule_tuple_f64 _230d08501_Modf(jule::F64);
inline jule::F64 _230d08d09_Log2(jule::F64);
inline jule::Str _230d332ea_FmtFloat(jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _230d338d3_genericFtoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _230d34054_bigFtoa(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _230d320b8_floatInfo*);
inline jule::Slice<jule::U8> _230d3472a_fmtDigits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _230d32c67_decimalSlice, jule::I64, jule::U8);
inline void _230d34b7b_roundShortest(_230d45a49_decimal*, jule::U64, jule::I64, _230d320b8_floatInfo*);
inline jule::Slice<jule::U8> _230d35220_fmtE(jule::Slice<jule::U8>, jule::Bool, _230d32c67_decimalSlice, jule::I64, jule::U8);
inline jule::Slice<jule::U8> _230d35709_fmtF(jule::Slice<jule::U8>, jule::Bool, _230d32c67_decimalSlice, jule::I64);
inline jule::Slice<jule::U8> _230d35d7a_fmtB(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I64, _230d320b8_floatInfo*);
inline jule::Slice<jule::U8> _230d36584_fmtX(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _230d320b8_floatInfo*);
inline jule::I64 _230d36908_min(jule::I64, jule::I64);
inline jule::I64 _230d36c7c_max(jule::I64, jule::I64);
inline jule::U8 _230d378b5_lower(jule::U8);
inline __jule_tuple_u64__jule_tuple__200733500_ConvError _230d37d38_parseUint(jule::Str*, jule::I64, jule::I64);
inline jule::Exceptional<jule::U64> _230d38267_ParseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _230d3871d_ParseInt(jule::Str, jule::I64, jule::I64);
inline __jule_tuple_f64__jule_tuple_bool _230d39411_eiselLemire64(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _230d39851_eiselLemire32(jule::U64, jule::I64, jule::Bool);
inline jule::I64 _230d3b699_commonPrefixLenIgnoreCase(jule::Str, jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _230d3b9a7_special(jule::Str);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _230d3bc71_readFloat(jule::Str*);
inline __jule_tuple_f64__jule_tuple_bool _230d3d800_atof64exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _230d3dc2e_atof32exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f64__jule_tuple__200733500_ConvError _230d3e2c3_atofHex(_230d320b8_floatInfo*, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__200733500_ConvError _230d3e69c_atof32(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__200733500_ConvError _230d3e966_atof64(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__200733500_ConvError _230d3ecda_parseFloatPrefix(jule::Str*, jule::I64);
inline jule::Exceptional<jule::F64> _230d4015e_ParseFloat(jule::Str, jule::I64);
inline void _230d40967_ryuFtoaFixed32(_230d32c67_decimalSlice*, jule::U32, jule::I64, jule::I64);
inline void _230d40e0c_ryuFtoaFixed64(_230d32c67_decimalSlice*, jule::U64, jule::I64, jule::I64);
inline void _230d41759_formatDecimal(_230d32c67_decimalSlice*, jule::U64, jule::Bool, jule::Bool, jule::I64);
inline void _230d41c32_ryuFtoaShortest(_230d32c67_decimalSlice*, jule::U64, jule::I64, _230d320b8_floatInfo*);
inline jule::I64 _230d41eeb_mulByLog2Log10(jule::I64);
inline jule::I64 _230d422b5_mulByLog10Log2(jule::I64);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _230d426e4_computeBounds(jule::U64, jule::I64, _230d320b8_floatInfo*);
inline void _230d42d10_ryuDigits(_230d32c67_decimalSlice*, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _230d43481_ryuDigits32(_230d32c67_decimalSlice*, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I64);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _230d438b0_mult64bitPow10(jule::U32, jule::I64, jule::I64);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _230d43cde_mult128bitPow10(jule::U64, jule::I64, jule::I64);
inline jule::Bool _230d44163_divisibleByPow5(jule::U64, jule::I64);
inline __jule_tuple_u32__jule_tuple_u32 _230d4442c_divmod1e9(jule::U64);
inline void _230d47397_trim(_230d45a49_decimal*);
inline void _230d47683_rightShift(_230d45a49_decimal*, jule::U64);
inline jule::Bool _230d47b39_prefixIsLessThan(jule::Array<jule::U8,800>, jule::I64, jule::Str*);
inline void _230d47de2_leftShift(_230d45a49_decimal*, jule::U64);
inline jule::Bool _230d48266_shouldRoundUp(_230d45a49_decimal*, jule::I64);
inline jule::Str _230d49a4d_FmtUint(jule::U64, jule::I64);
inline jule::Str _230d49e16_FmtInt(jule::I64, jule::I64);
inline jule::Str _230d4a1d0_Itoa(jule::I64);
inline jule::Str _230d4a521_small(jule::I64);
inline jule::Bool _230d4a7da_isPowerOfTwo(jule::I64);
inline __jule_tuple_su8__jule_tuple_str _230d4ad7e_fmtBits(jule::Slice<jule::U8>, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline jule::Str _230d4c37a_RealKindOf(jule::Str);
inline jule::I64 _230d4c644_BitsizeOf(jule::Str);
inline jule::Str _230d4c985_IntFromBits(jule::I64);
inline jule::Str _230d4cc4e_UintFromBits(jule::I64);
inline jule::Str _230d4d018_FloatFromBits(jule::I64);
inline jule::Bool _230d4db62_CheckBitFloat(jule::Str, jule::I64);
inline jule::I64 _230d4de2b_BitsizeOfFloat(jule::F64);
inline jule::I64 _230d4e1e5_BitsizeOfInt(jule::I64);
inline jule::I64 _230d4e4ae_BitsizeOfUint(jule::U64);
inline void _230d4e635_UpdateTarget(void);
inline void _230d4e7ab_init(void);
inline jule::I64 _230d53617_MinI(jule::Str);
inline jule::I64 _230d53925_MaxI(jule::Str);
inline jule::U64 _230d53bde_MaxU(jule::Str);
inline jule::F64 _230d53e20_Min(jule::Str);
inline jule::F64 _230d541d9_Max(jule::Str);
inline jule::Bool _230d5465c_IsI16Greater(jule::Str);
inline jule::Bool _230d5496a_IsI32Greater(jule::Str);
inline jule::Bool _230d54c34_IsI64Greater(jule::Str);
inline jule::Bool _230d55075_IsU16Greater(jule::Str);
inline jule::Bool _230d5533e_IsU32Greater(jule::Str);
inline jule::Bool _230d55608_IsU64Greater(jule::Str);
inline jule::Bool _230d558c2_IsF32Greater(jule::Str);
inline jule::Bool _230d55c68_IsF64Greater(jule::Str);
inline jule::Bool _230d560dc_IsGreater(jule::Str, jule::Str);
inline jule::Bool _230d571cb_IsSigInt(jule::Str);
inline jule::Bool _230d574d9_IsUnsigInt(jule::Str);
inline jule::Bool _230d577a3_IsInt(jule::Str);
inline jule::Bool _230d57ae4_IsFloat(jule::Str);
inline jule::Bool _230d57dad_IsNum(jule::Str);
inline jule::Bool _230d58177_IsSigNum(jule::Str);
inline void _230d623a1_lshiftUnsig(_230d58386_Const*, _230d58386_Const*);
inline void _230d626d1_rshiftUnsig(_230d58386_Const*, _230d58386_Const*);
inline jule::Bool _1bc5842da_IsUnaryOp(jule::U64);
inline jule::Bool _1bc5845e8_IsBinOp(jule::U64);
inline jule::Bool _1bc584c03_IsStr(jule::Str);
inline jule::Bool _1bc584ebc_IsRawStr(jule::Str);
inline jule::Bool _1bc585286_IsRune(jule::Str);
inline jule::Bool _1bc585bb0_IsFloat(jule::Str);
inline jule::Bool _1bc585e79_IsNum(jule::Str);
inline jule::Bool _1bc58650c_IsIgnoreIdent(jule::Str);
inline jule::Bool _1bc5867c6_IsAnonIdent(jule::Str);
inline jule::Bool _1bc586d59_IsSpace(jule::I32);
inline jule::Bool _1bc5872cc_IsLetter(jule::I32);
inline jule::Bool _1bc587860_IsDecimal(jule::U8);
inline jule::Bool _1bc587b29_IsBinary(jule::U8);
inline jule::Bool _1bc587de3_IsOctal(jule::U8);
inline jule::Bool _1bc5881ac_IsHex(jule::U8);
inline jule::Bool _1bc588476_IsAssign(jule::U64);
inline jule::Bool _1bc588740_IsPostfixOp(jule::U64);
inline jule::Bool _1bc588a09_IsAssignOp(jule::U64);
inline jule::Ptr<_1bc589367_File> _1bc58a70e_NewFileSet(jule::Str);
inline _1ed6c7892_Log _1bc58c25a_makeErr(jule::I64, jule::I64, jule::Ptr<_1bc589367_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1bc58c623_bytesHasPrefix(jule::Slice<jule::U8>*, jule::Str);
inline jule::Str _1bc58c997_floatFmtE(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1bc58cd60_floatFmtP(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1bc58d1d4_floatFmtDotnp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1bc58d558_floatFmtDotfp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1bc58d8cc_floatFmtDotp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1bc58dd61_floatNum(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1bc58e12a_commonNum(jule::Slice<jule::U8>*);
inline jule::Str _1bc58e3e4_binaryNum(jule::Slice<jule::U8>*);
inline jule::Bool _1bc58e768_isFloatFmtE(jule::U8, jule::I64);
inline jule::Bool _1bc58eadc_isFloatFmtP(jule::U8, jule::I64);
inline jule::Bool _1bc58ee61_isFloatFmtDotnp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Bool _230d63616_isFloatFmtDotp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Bool _230d63858_isFloatFmtDotfp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _230d62e2e_octalNum(jule::Slice<jule::U8>*);
inline jule::Str _230d631c6_hexNum(jule::Slice<jule::U8>*);
inline jule::Str _1bbcaaeb8_hexEscape(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1bbcab21b_bigUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _1bbcab4d5_littleUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _1bbcab79e_hexByteEscape(jule::Slice<jule::U8>*);
inline jule::Str _1bbcaba68_byteEscape(jule::Slice<jule::U8>*);
inline jule::Slice<_1ed6c7892_Log> _1bc592e53_Lex(jule::Ptr<_1bc589367_File>, jule::I64);
inline jule::Bool _1bc780470_FindModuleFile(jule::Slice<jule::Ptr<_230a4148c_DirEntry>>*);
inline jule::Str _1bc780728_FindModuleFileDeep(jule::Str);
inline jule::Slice<_1ed6c7892_Log> _1bc7809e2_CheckModuleFile(jule::Str*);
inline jule::Bool _1bc781372_IsPub(jule::Str);
inline jule::Bool _1bc7c9376_IsAscii(jule::I32);
inline jule::I32 _1bc7e4ade_ToRune(jule::Str);
inline jule::Str _1bc7e4d0e_ToRawStr(jule::Str);
inline jule::Str _1bc7e5150_ToStr(jule::Str);
inline __jule_tuple_u8__jule_tuple_bool _1bc7e5419_tryBtoaCommonEsq(jule::Str);
inline jule::I32 _1bc7e575a_runeFromEsqSeq(jule::Str, jule::I64*);
inline void _1bc7e5b01_strEsqSeq(jule::Slice<jule::U8>*, jule::Str, jule::I64*);
inline jule::I64 _1bc2be421_findFormatPrefix(jule::Slice<jule::U8>*, jule::I64);
inline jule::Slice<jule::U8> _1bc2be7d9_getFormatRange(jule::I64*, jule::Slice<jule::U8>*);
inline void _1bc2beac5_FmtByDefault(_2096a4489_StrBuilder*, jule::Any*);
inline void _1bc2beee3_applyFmtByDefault(_2096a4489_StrBuilder*, jule::I64*, jule::Slice<jule::Any>);
inline void _1bc2c0444_applyFmt(jule::Slice<jule::U8>*, _2096a4489_StrBuilder*, jule::I64*, jule::Slice<jule::Any>);
inline jule::Slice<jule::U8> _1bc2c0785_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1bc2c28a8_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1ece21273_parameterUsesGenerics(jule::Ptr<_1ece1ceea_ParamIns>*, jule::Slice<jule::Ptr<_1bc5a76a4_GenericDecl>>*);
inline jule::Ptr<_1bc848390_TypeSymbol> _1ece23a39_buildType(jule::Ptr<_1bc59563c_TypeDecl>);
inline jule::Ptr<_1bc8119eb_Value> _1ece23d47_buildExpr(jule::Ptr<_1bc599971_Expr>);
inline jule::Ptr<_1bc8403cb_TypeAlias> _1ece24111_buildTypeAlias(jule::Ptr<_1bc5b1eb6_TypeAliasDecl>);
inline jule::Ptr<_1bc5b8440_Field> _1ece24452_buildField(jule::Ptr<_1bc5b586b_FieldDecl>);
inline jule::Slice<jule::Ptr<_1bc5b8440_Field>> _1ece2471b_buildFields(jule::Slice<jule::Ptr<_1bc5b586b_FieldDecl>>*);
inline jule::Ptr<_1bc5bb333_Struct> _1ece249d5_buildStruct(jule::Ptr<_1bc5b6262_StructDecl>);
inline jule::Ptr<_1ece195bd_Param> _1ece24c9e_buildParam(jule::Ptr<_1bc5aac07_ParamDecl>);
inline jule::Slice<jule::Ptr<_1ece195bd_Param>> _1ece25145_buildParams(jule::Slice<jule::Ptr<_1bc5aac07_ParamDecl>>*);
inline jule::Ptr<_1ece18d3c_RetType> _1ece2540e_buildRetType(jule::Ptr<_1bc598530_RetTypeDecl>);
inline jule::Ptr<_1ece1b092_Fn> _1ece256c8_buildFunc(jule::Ptr<_1bc5ac159_FnDecl>);
inline jule::Slice<jule::Ptr<_1ece1b092_Fn>> _1ece25992_buildMethods(jule::Slice<jule::Ptr<_1bc5ac159_FnDecl>>*);
inline jule::Slice<jule::Ptr<_1bc848390_TypeSymbol>> _1ece25c5b_buildTraitInherits(jule::Slice<jule::Ptr<_1bc59563c_TypeDecl>>*);
inline jule::Ptr<_1bc713a41_Trait> _1ece26025_buildTrait(jule::Ptr<_1bc5b699e_TraitDecl>);
inline jule::Ptr<_1bc7156d0_EnumItem> _1ece262de_buildEnumItem(jule::Ptr<_1bc5b3a56_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1bc7156d0_EnumItem>> _1ece265a8_buildEnumItems(jule::Slice<jule::Ptr<_1bc5b3a56_EnumItemDecl>>*);
inline jule::Ptr<_1bc71624c_Enum> _1ece26a2b_buildEnum(jule::Ptr<_1bc5b4617_EnumDecl>);
inline jule::Ptr<_1bc717380_TypeEnumItem> _1ece26ce5_buildTypeEnumItem(jule::Ptr<_1bc5b4e42_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_1bc717380_TypeEnumItem>> _1ece270ae_buildTypeEnumItems(jule::Slice<jule::Ptr<_1bc5b4e42_TypeEnumItemDecl>>*);
inline jule::Ptr<_1bc717957_TypeEnum> _1ece27378_buildTypeEnum(jule::Ptr<_1bc5b55a2_TypeEnumDecl>);
inline jule::Ptr<_1bc7a750d_Var> _1ece27642_buildVar(jule::Ptr<_1bc5ad314_VarDecl>);
inline jule::Slice<jule::Ptr<_1bc7a750d_Var>> _1ece2790b_buildVars(jule::Slice<jule::Ptr<_1bc5ad314_VarDecl>>);
inline jule::Ptr<_1bc73c1b8_Impl> _1ece27bc5_buildImpl(jule::Ptr<_1bc5b710e_Impl>);
inline jule::Ptr<_1bc8108a7_Data> _1bc737713_buildAsComptimeMethodData(jule::Ptr<_1ece1de96_FnIns>*);
inline jule::Ptr<_1bc763e04_ImportInfo> _1bc737a21_findComptimePackage(jule::Ptr<_1bc784276_Sema>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc737d95_buildComptimeTypeInfoData(jule::Ptr<_1bc784276_Sema>*, jule::Ptr<_1bc8411bd_TypeKind>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc7380c6_buildComptimeValue(jule::Ptr<_1bc8108a7_Data>*);
inline jule::Str _1bc73b162_toStrConstraints(jule::Ptr<_1bc83e7d7_InsGeneric>);
inline jule::Bool _1bc73b52a_matchConstraint(jule::Str*, jule::Ptr<_1bc8411bd_TypeKind>*);
inline jule::Bool _1bc73b7e4_isBuiltinConstraint(jule::Str*);
inline jule::Ptr<_1bc749923_scopeChecker> _1bc73e3eb_newScopeCheckerBase(jule::Ptr<_1bc784276_Sema>*, jule::Ptr<_1ece1de96_FnIns>);
inline jule::Ptr<_1bc749923_scopeChecker> _1bc73e7b4_newScopeChecker(jule::Ptr<_1bc784276_Sema>*, jule::Ptr<_1ece1de96_FnIns>);
inline jule::Ptr<_1bc74847c_scopeLabel> _1bc73eb38_findLabelParent(jule::Str*, jule::Ptr<_1bc749923_scopeChecker>);
inline jule::Bool _1bc740001_modelIsGotoScope(jule::Any, jule::Ptr<_1bc74261e_Scope>*);
inline jule::Bool _1bc740375_stmtIsGotoScope(jule::Any*, jule::Ptr<_1bc74261e_Scope>*);
inline jule::I64 _1bc7406e9_countMatchType(jule::Ptr<_1bc746755_Match>*, jule::Ptr<_1bc8411bd_TypeKind>*);
inline jule::Slice<jule::Ptr<_1bc8108a7_Data>> _1bc7409b3_getDatasFromTupleData(jule::Ptr<_1bc8108a7_Data>*);
inline jule::Bool _1bc741376_checkMut(jule::Ptr<_1bc784276_Sema>*, jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc8108a7_Data>, jule::Ptr<_1bc583a9d_Token>);
inline jule::Bool _1bc741860_checkAssign(jule::Ptr<_1bc784276_Sema>*, jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc8108a7_Data>, jule::Ptr<_1bc583a9d_Token>);
inline jule::Bool _1bc741b29_isValidAstStForNextSt(jule::Any*);
inline jule::Bool _1bc741de3_isValidStForNextSt(jule::Any*);
inline jule::Bool _1bc7421ac_stmtIsDef(jule::Any*);
inline jule::U64 _1bc75b737_removeEqFromOp(jule::U64);
inline void _1bc75b968_makeComptimeRange(jule::Ptr<_1bc8108a7_Data>*);
inline jule::Bool _1bc75be63_canComptimeMatch(jule::Ptr<_1bc8108a7_Data>*);
inline jule::Ptr<_1bc7a750d_Var> _1bc7613da_findVarInPackage(jule::Slice<jule::Ptr<_1bc80a50b_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1bc8403cb_TypeAlias> _1bc76185d_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1bc80a50b_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1bc5bb333_Struct> _1bc761c8c_findStructInPackage(jule::Slice<jule::Ptr<_1bc80a50b_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1ece1b092_Fn> _1bc762243_findFnInPackage(jule::Slice<jule::Ptr<_1bc80a50b_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1bc713a41_Trait> _1bc762584_findTraitInPackage(jule::Slice<jule::Ptr<_1bc80a50b_SymbolTable>>*, jule::Str*);
inline jule::Ptr<_1bc71624c_Enum> _1bc762908_findEnumInPackage(jule::Slice<jule::Ptr<_1bc80a50b_SymbolTable>>*, jule::Str*);
inline jule::Ptr<_1bc717957_TypeEnum> _1bc762c7c_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1bc80a50b_SymbolTable>>*, jule::Str*);
inline jule::Any _1bc7632bb_defByIdentPackage(jule::Slice<jule::Ptr<_1bc80a50b_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Bool _1bc769305_isStdPackage(jule::Str*, jule::Str);
inline jule::Bool _1bc781916_isValidModelForRef(jule::Any*);
inline _1ed6c7892_Log _1bc781e44_compilerErr(jule::Ptr<_1bc583a9d_Token>*, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1bc7822b8_impIsLookupable(jule::Ptr<_1bc763e04_ImportInfo>*, jule::Str*);
inline void _1bc782571_appendRetVars(jule::Slice<jule::Ptr<_1bc7a750d_Var>>*, jule::Ptr<_1ece1de96_FnIns>*);
inline void _1bc78285c_appendParamVars(jule::Slice<jule::Ptr<_1bc7a750d_Var>>*, jule::Ptr<_1ece1de96_FnIns>*);
inline void _1bc782b48_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1bc8403cb_TypeAlias>>*, jule::Ptr<_1ece1de96_FnIns>*);
inline jule::Ptr<_1bc80a50b_SymbolTable> _1bc782ebc_findFile(jule::Slice<jule::Ptr<_1bc80a50b_SymbolTable>>*, jule::Ptr<_1bc589367_File>*);
inline void _1bc783473_pushSuggestion(_1ed6c7892_Log*, jule::Str, jule::Slice<jule::Any>);
inline void _1bc7a57c5_pushImplemented(jule::Ptr<_1bc713a41_Trait>, jule::Ptr<_1bc5bb333_Struct>*);
inline void _1bc7a5ab1_pushImplements(jule::Ptr<_1bc5bb333_Struct>*, jule::Ptr<_1bc713a41_Trait>);
inline jule::Bool _1bc7e63a4_traitHasReferenceReceiver(jule::Ptr<_1bc713a41_Trait>*);
inline jule::Bool _1bc7e6739_floatAssignable(jule::Str*, jule::Ptr<_1bc8108a7_Data>*);
inline jule::Bool _1bc7e6aad_sigAssignable(jule::Str, jule::Ptr<_1bc8108a7_Data>*);
inline jule::Bool _1bc7e6e76_unsigAssignable(jule::Str, jule::Ptr<_1bc8108a7_Data>*);
inline jule::Bool _1bc7e72ea_intAssignable(jule::Str, jule::Ptr<_1bc8108a7_Data>*);
inline void _1bc803713_checkMutRiskOfStructLit(jule::Ptr<_1bc784276_Sema>*, jule::Ptr<_1ece0e030_StructLitExprModel>*);
inline jule::Ptr<_1bc8411bd_TypeKind> _1bc8092a7_lenKind(void);
inline jule::Bool _1bc809609_isGoodValueToInfer(jule::Ptr<_1bc8108a7_Data>*);
inline jule::Ptr<_1bc594a59_Directive> _1bc83921b_findDirective(jule::Slice<jule::Ptr<_1bc594a59_Directive>>*, jule::Str);
inline jule::Any _1bc8395d4_findBuiltinsImport(jule::Str*, jule::Ptr<_1bc763e04_ImportInfo>);
inline void _1bc839815_fitBitsize(jule::Ptr<_1bc8108a7_Data>*);
inline void _1bc839b45_makeStructLitAlloc(jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1ece0e030_StructLitExprModel>*);
inline jule::Ptr<_1bc7a750d_Var> _1bc839eb9_buildErrorVar(jule::Ptr<_1bc74261e_Scope>*, jule::Ptr<_1bc5a3507_FnCallExpr>*);
inline jule::Any _1bc83a33d_findBuiltinsSema(jule::Str*, jule::Ptr<_1bc784276_Sema>);
inline jule::Bool _1bc83a607_isOkForShifting(jule::Ptr<_1bc8108a7_Data>*);
inline jule::Bool _1bc83a9d1_isInstancedStruct(jule::Ptr<_1bc5be0b1_StructIns>);
inline jule::Bool _1bc83ad55_isPtrArithmeticCompatible(jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc8108a7_Data>*);
inline void _1bc83b141_applyCastKindModel(jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc8411bd_TypeKind>*);
inline void _1bc83b42c_applyCastKind(jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc8411bd_TypeKind>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc83b63b_buildVoidData(void);
inline jule::Str _1bc83b905_checkDataForIntegerIndexing(jule::Ptr<_1bc8108a7_Data>*);
inline void _1bc83bbe1_applyCastModelByEnum(jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc71624c_Enum>);
inline void _1bc83becc_castConstByType(jule::Str*, jule::Ptr<_1bc8108a7_Data>*);
inline void _1bc83c472_updateModelToGenericIns(jule::Any*, jule::Ptr<_1ece1de96_FnIns>*);
inline jule::Bool _1bc83c7e6_pushSubIdentFromExpr(jule::Any, jule::Ptr<_1bc596044_SubIdentTypeDecl>*);
inline jule::Str _1bc83cab0_constoa(jule::Ptr<_230d58386_Const>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc83ce34_evalEnumStatic(jule::Ptr<_1bc71624c_Enum>*, jule::Ptr<_1bc7156d0_EnumItem>*);
inline jule::Ptr<_1ece0e030_StructLitExprModel> _1bc83d1ed_isLitBased(jule::Any*);
inline void _1bc83d4d9_makeImplicitDeref(jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc583a9d_Token>);
inline void _1c1dd3360_updateRefer(jule::Ptr<_1ece221a8_ReferenceStack>, jule::Ptr<_1ece1de96_FnIns>*, jule::Ptr<_1ece1de96_FnIns>*);
inline jule::Bool _1bc85b925_kindUsesGenerics(jule::Ptr<_1bc8411bd_TypeKind>*, jule::Slice<jule::Ptr<_1bc5a76a4_GenericDecl>>*);
inline jule::Bool _1bc85bcdd_hasDirective(jule::Slice<jule::Ptr<_1bc594a59_Directive>>*, jule::Str);
inline jule::Bool _1bc85c0a7_canGetPtr(jule::Ptr<_1bc8108a7_Data>*);
inline jule::Bool _1bc85c3e8_isValidForSptrType(jule::Ptr<_1bc8411bd_TypeKind>*);
inline jule::Bool _1bc85c6b2_isValidForRef(jule::Ptr<_1bc8411bd_TypeKind>*);
inline jule::Bool _1bc85c97b_isBuiltinStrConvertable(jule::Ptr<_1bc8411bd_TypeKind>*);
inline jule::Str _1bc85cc45_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Ptr<_1bc848c97_Prim> _1bc85d0db_buildPrimType(jule::Str);
inline void _1bc85d691_applyImplicitCast(jule::Ptr<_1bc8411bd_TypeKind>*, jule::Ptr<_1bc8108a7_Data>*);
inline jule::Bool _1bc85d95a_validTypeForXof(jule::Ptr<_1bc8411bd_TypeKind>*);
inline __jule_tuple_x_1bc80a50b_SymbolTable__jule_tuple_s_1ed6c7892_Log _1bc8619e6_buildSymbols(jule::Ptr<_1bc59378e_Ast>*, jule::Trait<_1bc760ede_Importer>*, jule::Ptr<_1ece2828b_symbolBuilder>);
inline __jule_tuple_x_1bc766d2a_Package__jule_tuple_s_1ed6c7892_Log _1bc861e69_analyzePackage(jule::Slice<jule::Ptr<_1bc59378e_Ast>>*, jule::Trait<_1bc760ede_Importer>*, jule::I64*);
inline __jule_tuple_x_1bc766d2a_Package__jule_tuple_s_1ed6c7892_Log _1bc862398_AnalyzePackage(jule::Slice<jule::Ptr<_1bc59378e_Ast>>, jule::Trait<_1bc760ede_Importer>, jule::I64);
inline jule::Ptr<_1ece1de96_FnIns> _1bc2c33ae_findBuiltinFunc(jule::Str*);
inline jule::Ptr<_1bc8403cb_TypeAlias> _1bc2c36bc_primTypeAlias(jule::Ptr<_1bc8411bd_TypeKind>*);
inline jule::Ptr<_1bc7a750d_Var> _1bc2c72c5_findBuiltinVar(jule::Str*);
inline jule::Ptr<_1bc8403cb_TypeAlias> _1bc2c7506_findBuiltinTypeAlias(jule::Str);
inline jule::Any _1bc2c77c0_findBuiltinDef(jule::Str*);
inline jule::Any _1bc2c7a89_findBuiltinDefStdDebug(jule::Str*);
inline jule::Any _1bc2c7d53_findBuiltinDefStdMem(jule::Str*);
inline jule::Any _1bc2c81e9_findBuiltinDefStdComptime(jule::Str*);
inline jule::Any _1bc2c84b3_findBuiltinDefStdJuleIntegrated(jule::Str*);
inline jule::Any _1bc2c8837_findPackageBuiltinDef(jule::Str*, jule::Str*);
inline jule::Ptr<_1bc8108a7_Data> _1bc2c8c66_builtinCallerCommonPlain(jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*, jule::Ptr<_1bc8108a7_Data>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc2c90da_builtinCallerError(jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc2c9519_builtinCallerOut(jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*, jule::Ptr<_1bc8108a7_Data>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc2c9948_builtinCallerOutln(jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*, jule::Ptr<_1bc8108a7_Data>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc2c9d77_builtinCallerNew(jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*, jule::Ptr<_1bc8108a7_Data>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc2ca460_builtinCallerPanic(jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*, jule::Ptr<_1bc8108a7_Data>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc2ca88e_builtinCallerMake(jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*, jule::Ptr<_1bc8108a7_Data>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc2cacbd_builtinCallerAppend(jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*, jule::Ptr<_1bc8108a7_Data>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc2cb2a7_callerCopySlice(jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*, jule::Ptr<_1bc8108a7_Data>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc2cb6d6_builtinCallerCopy(jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*, jule::Ptr<_1bc8108a7_Data>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc2cba5a_callerLenSlice(jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc8108a7_Data>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc2cbdce_callerLenMap(jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc8108a7_Data>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc2cc253_callerLenArr(jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc8108a7_Data>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc2cc5c7_callerLenStr(jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc8108a7_Data>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc2cc94b_callerLenComptime(jule::Ptr<_1bc8108a7_Data>*, jule::I64);
inline jule::Ptr<_1bc8108a7_Data> _1bc2ccd7a_builtinCallerLen(jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*, jule::Ptr<_1bc8108a7_Data>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc2cd1ee_callerCapSlice(jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc8108a7_Data>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc2cd62d_builtinCallerCap(jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*, jule::Ptr<_1bc8108a7_Data>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc2cdb17_callerDeleteMap(jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*, jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc8108a7_Data>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc2ce046_builtinCallerDelete(jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*, jule::Ptr<_1bc8108a7_Data>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc2ce475_builtinCallerAssert(jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*, jule::Ptr<_1bc8108a7_Data>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc2cea4c_builtinCallerStdComptimeTypeOf(jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*, jule::Ptr<_1bc8108a7_Data>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc2cee15_builtinCallerStdComptimeValueOf(jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*, jule::Ptr<_1bc8108a7_Data>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc2d0344_builtinCallerStdComptimeLine(jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*, jule::Ptr<_1bc8108a7_Data>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc2d0773_builtinCallerStdComptimeFile(jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*, jule::Ptr<_1bc8108a7_Data>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc2d0ba2_builtinCallerStdComptimeFiles(jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*, jule::Ptr<_1bc8108a7_Data>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc2d10d1_builtinCallerStdComptimeTypeAlias(jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*, jule::Ptr<_1bc8108a7_Data>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc2d1510_builtinCallerStdMemSizeOf(jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*, jule::Ptr<_1bc8108a7_Data>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc2d193e_builtinCallerStdMemAlignOf(jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*, jule::Ptr<_1bc8108a7_Data>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc2d1d6d_builtinCallerStdMemFree(jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*, jule::Ptr<_1bc8108a7_Data>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc2d229c_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*, jule::Ptr<_1bc8108a7_Data>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc2d26cb_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*, jule::Ptr<_1bc8108a7_Data>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc2d2b0a_builtinCallerStdDebugOut(jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*, jule::Ptr<_1bc8108a7_Data>*);
inline jule::Ptr<_1bc8108a7_Data> _1bc2d3039_builtinCallerStdDebugOutln(jule::Ptr<_1bc81259b_Eval>*, jule::Ptr<_1bc5a3507_FnCallExpr>*, jule::Ptr<_1bc8108a7_Data>*);
inline jule::Ptr<_1bd3a9e01_FileInfo> _1bd3ed890_ParseFile(jule::Ptr<_1bc589367_File>);
inline __jule_tuple_x_1bc59378e_Ast__jule_tuple_s_1ed6c7892_Log _1bd3ede67_parseFileset(jule::Ptr<_1bc589367_File>);
inline jule::Ptr<_1bc5aa4ba_ScopeTree> _1bd3ee907_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1bd3eec8c_isSt(jule::Ptr<_1bc583a9d_Token>, jule::Ptr<_1bc583a9d_Token>);
inline jule::Bool _1bd400111_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1bc583a9d_Token>>*, jule::I64*);
inline __jule_tuple_int__jule_tuple_bool _1bd4004c9_nextStPos(jule::Slice<jule::Ptr<_1bc583a9d_Token>>*, jule::I64);
inline __jule_tuple_sx_1bc583a9d_Token__jule_tuple_bool _1bd40084d_skipSt(jule::I64*, jule::Slice<jule::Ptr<_1bc583a9d_Token>>);
inline jule::Slice<jule::Ptr<_1bd400b7d_stmt>> _1bd401035_splitStmts(jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Bool _1bd41968b_isTypeOp(jule::U64*);
inline jule::Bool _1bd419999_isTypeRange(jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Slice<jule::Ptr<_1bc583a9d_Token>> _1bd419c63_getBlockExpr(jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline __jule_tuple_sx_1bc583a9d_Token__jule_tuple_sx_1bc583a9d_Token _1bd41a12b_splitDelim(jule::Slice<jule::Ptr<_1bc583a9d_Token>>*, jule::U64);
inline jule::I64 _1bd41a3e5_findLowestPrecOp(jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Ptr<_1bc59b39b_IdentExpr> _1bd41a6ae_buildIdentExpr(jule::Ptr<_1bc583a9d_Token>*);
inline __jule_tuple_sx_1bc583a9d_Token__jule_tuple_int _1bd41a978_getRangeExprTokens(jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline jule::Bool _1bd41b78c_checkAssignTokens(jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline _1ed6c7892_Log _1bd41c98b_makeErr(jule::I64, jule::I64, jule::Ptr<_1bc589367_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1bc583a9d_Token>> _1bd41ce86_range(jule::I64*, jule::U64, jule::U64, jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline __jule_tuple_sx_1bc583a9d_Token__jule_tuple_sx_1bc583a9d_Token _1bd41d250_rangeLast(jule::Slice<jule::Ptr<_1bc583a9d_Token>>*);
inline __jule_tuple_ssx_1bc583a9d_Token__jule_tuple_s_1ed6c7892_Log _1bd41d706_parts(jule::Slice<jule::Ptr<_1bc583a9d_Token>>*, jule::U64, jule::Bool);
inline jule::U64 _1bd41d9c0_getCloseOfBrace(jule::U64);
inline _1ed6c7892_Log _1bd41ddee_compilerErr(jule::Ptr<_1bc583a9d_Token>*, jule::Str*, jule::Slice<jule::Any>);
inline void _1bd41e295_pushSuggestion(_1ed6c7892_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1bc59563c_TypeDecl> _1bd4311ec_buildVoidType(void);
inline __jule_tuple_bool__jule_tuple_bool _1bcab11c9_checkOs(jule::Str);
inline __jule_tuple_bool__jule_tuple_bool _1bcab131c_checkArch(jule::Str);
inline jule::Bool _1bcacaac8_isPassFileAnnotation(jule::Str);
inline void _1bcacbc50_setOsVars(jule::Slice<jule::Str>*);
inline void _1bcacbec5_setArchVars(jule::Slice<jule::Str>*);
inline void _1bcacc2b1_initVars(jule::Slice<jule::Str>*, _1bcacb931_CompileInfo*);
inline jule::Slice<jule::U8> _1bd435333_readBuff(jule::Str);
inline _1ed6c7892_Log _1bd43560d_flatCompilerErr(jule::Str);
inline void _1bd439e2b_pushPasses(jule::Ptr<_1bc766d2a_Package>*, jule::Slice<jule::Str>*);
inline jule::Slice<jule::Str> _1bd43a2e4_getAllUniquePasses(jule::Ptr<_1bc766d2a_Package>*, jule::Slice<jule::Ptr<_1bc763e04_ImportInfo>>);
inline _1bcacb931_CompileInfo _1bd43a503_buildCompileInfo(void);
inline void _1bd13b7ed_EliminateDefines(jule::Ptr<_1bd4385ab_IR>*);
inline jule::Ptr<_1bc594a59_Directive> _1bd13bbb6_findDirective(jule::Slice<jule::Ptr<_1bc594a59_Directive>>*, jule::Str);
inline jule::Bool _1bd13c03a_hasDirective(jule::Slice<jule::Ptr<_1bc594a59_Directive>>*, jule::Str);
inline jule::Bool _1bd13c403_isTraitMethod(jule::Ptr<_1bc5be0b1_StructIns>*, jule::Ptr<_1ece1de96_FnIns>*);
inline void _1bd141407_eliminateDeadCodeOfScope(jule::Ptr<_1bc74261e_Scope>);
inline void _1bd14167c_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1ece1b092_Fn>>*);
inline void _1bd1418ad_eliminateFunctionsScopePackage(jule::Ptr<_1bc766d2a_Package>*);
inline void _1bd141b66_eliminateScopePackage(jule::Ptr<_1bc766d2a_Package>*);
inline void _1bd141d97_EliminateScopes(jule::Ptr<_1bd4385ab_IR>*);
inline jule::Uintptr _1bc2d338b_typeData(jule::Any*);
inline jule::Bool _1bc2d3754_equalConst(jule::Ptr<_230d58386_Const>, jule::Ptr<_230d58386_Const>);
inline jule::Bool _1bc2d3ac8_equalCasting(jule::Ptr<_1ece0e8b0_CastingExprModel>, jule::Ptr<_1ece0e8b0_CastingExprModel>);
inline jule::Bool _1bc2d3e91_equalUnary(jule::Ptr<_1ece0d65b_UnaryExprModel>, jule::Ptr<_1ece0d65b_UnaryExprModel>);
inline jule::Bool _1bc2d4315_equalIndexing(jule::Ptr<_1ece10ae2_IndexingExprModel>, jule::Ptr<_1ece10ae2_IndexingExprModel>);
inline jule::Bool _1bc2d4689_equalBinary(jule::Ptr<_1ece0d282_BinaryExprModel>, jule::Ptr<_1ece0d282_BinaryExprModel>);
inline jule::Bool _1bc2d4a0d_equalModels(jule::Any, jule::Any);
inline jule::Bool _1bc9cb37a_isStdPackage(jule::Str*, jule::Str);
inline jule::Bool _1bc9cb688_isConstantValidConditionalCase(jule::Ptr<_1bc742a3c_If>*);
inline jule::Bool _1bc9cb952_isUnreachableExpr(jule::Any*);
inline jule::Bool _1bc9cbc93_isConstantValidMatchCase(jule::Ptr<_1bc74738d_Case>*);
inline jule::Bool _1bc9cc05c_isUnreachableConditionalCase(jule::Ptr<_1bc742a3c_If>*);
inline jule::Bool _1bc9cc326_isUnreachableMatchCase(jule::Ptr<_1bc74738d_Case>*);
inline __jule_tuple_bool__jule_tuple_u64 _1bc9d6110_checkForBitShiftOpt(jule::Ptr<_1ece0cc87_OperandExprModel>*, jule::Ptr<_1ece0cc87_OperandExprModel>*);
inline jule::Bool _1bc9d64c8_areSameLvalueExprModel(jule::Any*, jule::Any*);
inline void _1bc9d8ce4_PushOptLevel(jule::I64);
inline void _1bd14b379_detectEnabled(void);
inline void _1bd174c98_Throw(jule::Str);
inline jule::U64 _1bcc83a1c_unix(void);
inline jule::Bool _1bcbb3ce3_isCopyOptimizable(jule::Ptr<_1bc8108a7_Data>*);
inline jule::Bool _1bcbb41ab_isIterCopyOptimizable(jule::Ptr<_1bc8108a7_Data>*, jule::Ptr<_1bc7a750d_Var>*);
inline jule::Str _1bcbc4397_decomposeCommonEsq(jule::U8);
inline jule::Str _1bcbc46a5_sbtoa(jule::U8);
inline void _1bcbc4991_cstrBytes(_2096a4489_StrBuilder*, jule::Str);
inline void _1bcbc4cc1_cstrLit(_2096a4489_StrBuilder*, jule::Str);
inline void _1bcbc5167_ftoa(_2096a4489_StrBuilder*, jule::F64, jule::I64);
inline void _1bcbc5453_itoa(_2096a4489_StrBuilder*, jule::I64);
inline void _1bcbc573e_utoa(_2096a4489_StrBuilder*, jule::U64);
inline jule::Bool _1bcbc5b18_isForwarded(jule::Ptr<_1bc74261e_Scope>*);
inline jule::Bool _1bcbc5dd2_isExprComesFromBind(jule::Ptr<_1bc8108a7_Data>*);
inline jule::Bool _1bcbc619b_isAny(jule::Ptr<_1bc8411bd_TypeKind>*);
inline void _1bde36383_iterFiles(jule::Ptr<_1bc766d2a_Package>*, jule::Fn<void(jule::Ptr<_1bc80a50b_SymbolTable>*)>);
inline jule::Slice<jule::U8> _1bde36691_concatAllParts(jule::Slice<jule::Ptr<_1bc583a9d_Token>>);
inline jule::Bool _1bde36a15_containsTraitMethod(jule::Ptr<_1bc713a41_Trait>*, jule::Str*);
inline void _1bde36d45_pushMethodsFromInherit(jule::Ptr<_1bc713a41_Trait>*, jule::Ptr<_1bc713a41_Trait>*);
inline void _1bde37131_pushMethodsFromInherits(jule::Ptr<_1bc713a41_Trait>*, jule::Ptr<_1bc713a41_Trait>*);
inline jule::Bool _1bde373ea_isOpMethod(jule::Ptr<_1ece1b092_Fn>*);
inline jule::Bool _1bde376b4_isHeadDecl(jule::Ptr<_1ece1b092_Fn>*);
inline jule::Ptr<_1bc594a59_Directive> _1bde46a7a_findDirective(jule::Slice<jule::Ptr<_1bc594a59_Directive>>*, jule::Str);
inline jule::Bool _1bde46e43_hasDirective(jule::Slice<jule::Ptr<_1bc594a59_Directive>>*, jule::Str);
inline jule::Bool _1bde4720c_shouldInitialized(jule::Ptr<_1bc8411bd_TypeKind>*);
inline void _1eeeac087_printErrorMessage(jule::Str);
inline void _1eeeac30c_help(jule::Slice<jule::Str>*);
inline void _1eeeac53d_version(jule::Slice<jule::Str>*);
inline void _1eeeac73b_toolDistos(void);
inline void _1eeeac8b2_toolDistarch(void);
inline void _1eeeacae3_tool(jule::Slice<jule::Str>*);
inline void _1eeeacd24_julenv(jule::Slice<jule::Str>*);
inline void _1eeead132_mod(jule::Slice<jule::Str>*);
inline jule::Bool _1eeead3eb_processCommand(jule::Slice<jule::Str>*);
inline void _1eeead572_showInfo(void);
void entry_point(void);
inline void _1eeeade8a_enableVtp(void);
inline void _1eeeae155_init(void);
inline void _1bdeb3ad6_init(void);
inline jule::Ptr<_230a42922_File> _1bdeb3db1_openOutput(jule::Str*);
inline void _1bdeb4037_clearObjects(void);
inline void _1bdeb4367_compileIr(jule::Str, jule::Str);
inline jule::Bool _1bdeb4631_isCppSourceFile(jule::Str);
inline void _1bdeb4862_pushCompCmdClang(_2096a4489_StrBuilder*);
inline void _1bdeb4a93_pushCompCmdGcc(_2096a4489_StrBuilder*);
inline __jule_tuple_str__jule_tuple_str _1bdeb5027_genCompileCmd(jule::Str, jule::Ptr<_1bd4385ab_IR>*);
inline jule::Str _1bdeb5236_getCompilePath(void);
inline void _1bdeb5467_applyTargetIndependentOptimizations(jule::Ptr<_1bd4385ab_IR>*);
inline void _1bdeb55dd_checkCompilerFlag(void);
inline void _1bdeb581e_checkTargetArch(jule::Str);
inline void _1bdeb5a50_checkTargetOs(jule::Str);
inline void _1bdeb5c81_checkTargetFlag(jule::Str*);
inline void _1bdeb5eb2_checkOptFlag(jule::Str*);
inline void _1bdeb6347_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1bdeb65ab_checkFlags(jule::Slice<jule::Str>*);
inline void _1bdeb67dc_setupSemaFlags(jule::I64*);
inline jule::Ptr<_1bd4385ab_IR> _1bdeb6aa6_buildIr(jule::Slice<jule::Str>*);
inline void _1bdeb6cd7_compileCommand(jule::Slice<jule::Str>*);


struct _1bc71a88e_comptimeRangeKindMptrData {
	void(*_1bc71a086_ready)(jule::Trait<_1bc71a88e_comptimeRangeKind>, jule::Ptr<_1bc7a750d_Var>*, jule::Ptr<_1bc7a750d_Var>*);
	void(*_1bc71a4a4_step)(jule::Trait<_1bc71a88e_comptimeRangeKind>, jule::I64, jule::Ptr<_1bc7a750d_Var>*, jule::Ptr<_1bc7a750d_Var>*);
	jule::I64(*_1bc71a73a_len)(jule::Trait<_1bc71a88e_comptimeRangeKind>);
};

struct _1bc760ede_ImporterMptrData {
	void(*_1bc75ecbd_SetModPath)(jule::Trait<_1bc760ede_Importer>, jule::Str);
	jule::Str(*_1bc760054_GetModPath)(jule::Trait<_1bc760ede_Importer>);
	jule::Str(*_1bc760395_ModById)(jule::Trait<_1bc760ede_Importer>, jule::I64);
	jule::Ptr<_1bc763e04_ImportInfo>(*_1bc7606d6_GetImport)(jule::Trait<_1bc760ede_Importer>, jule::Str);
	__jule_tuple_sx_1bc59378e_Ast__jule_tuple_s_1ed6c7892_Log(*_1bc760ad2_ImportPackage)(jule::Trait<_1bc760ede_Importer>, jule::Str, jule::Bool);
	void(*_1bc760d8a_Imported)(jule::Trait<_1bc760ede_Importer>, jule::Ptr<_1bc763e04_ImportInfo>);
};

struct _1bc840c17_KindMptrData {
	jule::Str(*_1bc840772_Str)(jule::Trait<_1bc840c17_Kind>);
	jule::Bool(*_1bc840ab3_Equal)(jule::Trait<_1bc840c17_Kind>, jule::Ptr<_1bc8411bd_TypeKind>);
};

struct _1bc860c04_LookupMptrData {
	jule::Ptr<_1bc763e04_ImportInfo>(*_1bc85dedd_SelectPackage)(jule::Trait<_1bc860c04_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_1bc763e04_ImportInfo>)>);
	jule::Ptr<_1bc7a750d_Var>(*_1bc85e3d9_FindVar)(jule::Trait<_1bc860c04_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1bc8403cb_TypeAlias>(*_1bc85e7d5_FindTypeAlias)(jule::Trait<_1bc860c04_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1bc5bb333_Struct>(*_1bc85ebd1_FindStruct)(jule::Trait<_1bc860c04_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1ece1b092_Fn>(*_1bc8600cc_FindFn)(jule::Trait<_1bc860c04_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1bc713a41_Trait>(*_1bc86041d_FindTrait)(jule::Trait<_1bc860c04_Lookup>, jule::Str);
	jule::Ptr<_1bc71624c_Enum>(*_1bc86075e_FindEnum)(jule::Trait<_1bc860c04_Lookup>, jule::Str);
	jule::Ptr<_1bc717957_TypeEnum>(*_1bc860aa0_FindTypeEnum)(jule::Trait<_1bc860c04_Lookup>, jule::Str);
};

struct _1bdeab7d2_CommonFlagMptrData {
	jule::Str(*_1bde7a9b0_Name)(jule::Trait<_1bdeab7d2_CommonFlag>);
	jule::I32(*_1bde7ab03_Short)(jule::Trait<_1bdeab7d2_CommonFlag>);
	jule::Str(*_1bdeab54b_What)(jule::Trait<_1bdeab7d2_CommonFlag>);
	void(*_1bdeab68e_Reset)(jule::Trait<_1bdeab7d2_CommonFlag>);
};



inline void _1bc71a086_ready_comptimeRangeKind_0(jule::Trait<_1bc71a88e_comptimeRangeKind> _self_, jule::Ptr<_1bc7a750d_Var>* _2429_keyA, jule::Ptr<_1bc7a750d_Var>* _2446_keyB) {
	_1bc71dd7b_ready(_self_.safe_ptr<_1bc71d243_comptimeStructFields>(), _2429_keyA, _2446_keyB);
}
inline void _1bc71a4a4_step_comptimeRangeKind_0(jule::Trait<_1bc71a88e_comptimeRangeKind> _self_, jule::I64 _2523_i, jule::Ptr<_1bc7a750d_Var>* _2536_keyA, jule::Ptr<_1bc7a750d_Var>* _2553_keyB) {
	_1bc71e299_step(_self_.safe_ptr<_1bc71d243_comptimeStructFields>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I64 _1bc71a73a_len_comptimeRangeKind_0(jule::Trait<_1bc71a88e_comptimeRangeKind> _self_) {
	return _1bc71e530_len(_self_.safe_ptr<_1bc71d243_comptimeStructFields>());
}
inline void _1bc71a086_ready_comptimeRangeKind_1(jule::Trait<_1bc71a88e_comptimeRangeKind> _self_, jule::Ptr<_1bc7a750d_Var>* _2429_keyA, jule::Ptr<_1bc7a750d_Var>* _2446_keyB) {
	_1bc722137_ready(_self_.safe_ptr<_1bc7214ee_comptimeStatics>(), _2429_keyA, _2446_keyB);
}
inline void _1bc71a4a4_step_comptimeRangeKind_1(jule::Trait<_1bc71a88e_comptimeRangeKind> _self_, jule::I64 _2523_i, jule::Ptr<_1bc7a750d_Var>* _2536_keyA, jule::Ptr<_1bc7a750d_Var>* _2553_keyB) {
	_1bc722555_step(_self_.safe_ptr<_1bc7214ee_comptimeStatics>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I64 _1bc71a73a_len_comptimeRangeKind_1(jule::Trait<_1bc71a88e_comptimeRangeKind> _self_) {
	return _1bc7227db_len(_self_.safe_ptr<_1bc7214ee_comptimeStatics>());
}
inline void _1bc71a086_ready_comptimeRangeKind_2(jule::Trait<_1bc71a88e_comptimeRangeKind> _self_, jule::Ptr<_1bc7a750d_Var>* _2429_keyA, jule::Ptr<_1bc7a750d_Var>* _2446_keyB) {
	_1bc724ac9_ready(_self_.safe_ptr<_1bc723e91_comptimeEnumFields>(), _2429_keyA, _2446_keyB);
}
inline void _1bc71a4a4_step_comptimeRangeKind_2(jule::Trait<_1bc71a88e_comptimeRangeKind> _self_, jule::I64 _2523_i, jule::Ptr<_1bc7a750d_Var>* _2536_keyA, jule::Ptr<_1bc7a750d_Var>* _2553_keyB) {
	_1bc724ee7_step(_self_.safe_ptr<_1bc723e91_comptimeEnumFields>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I64 _1bc71a73a_len_comptimeRangeKind_2(jule::Trait<_1bc71a88e_comptimeRangeKind> _self_) {
	return _1bc72527d_len(_self_.safe_ptr<_1bc723e91_comptimeEnumFields>());
}
inline void _1bc71a086_ready_comptimeRangeKind_3(jule::Trait<_1bc71a88e_comptimeRangeKind> _self_, jule::Ptr<_1bc7a750d_Var>* _2429_keyA, jule::Ptr<_1bc7a750d_Var>* _2446_keyB) {
	_1bc72843a_ready(_self_.safe_ptr<_1bc727802_comptimeParams>(), _2429_keyA, _2446_keyB);
}
inline void _1bc71a4a4_step_comptimeRangeKind_3(jule::Trait<_1bc71a88e_comptimeRangeKind> _self_, jule::I64 _2523_i, jule::Ptr<_1bc7a750d_Var>* _2536_keyA, jule::Ptr<_1bc7a750d_Var>* _2553_keyB) {
	_1bc728858_step(_self_.safe_ptr<_1bc727802_comptimeParams>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I64 _1bc71a73a_len_comptimeRangeKind_3(jule::Trait<_1bc71a88e_comptimeRangeKind> _self_) {
	return _1bc728ade_len(_self_.safe_ptr<_1bc727802_comptimeParams>());
}
inline void _1bc71a086_ready_comptimeRangeKind_4(jule::Trait<_1bc71a88e_comptimeRangeKind> _self_, jule::Ptr<_1bc7a750d_Var>* _2429_keyA, jule::Ptr<_1bc7a750d_Var>* _2446_keyB) {
	_1bc729a35_ready(_self_.safe_ptr<_1bc728dec_comptimeTypeInfos>(), _2429_keyA, _2446_keyB);
}
inline void _1bc71a4a4_step_comptimeRangeKind_4(jule::Trait<_1bc71a88e_comptimeRangeKind> _self_, jule::I64 _2523_i, jule::Ptr<_1bc7a750d_Var>* _2536_keyA, jule::Ptr<_1bc7a750d_Var>* _2553_keyB) {
	_1bc729e53_step(_self_.safe_ptr<_1bc728dec_comptimeTypeInfos>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I64 _1bc71a73a_len_comptimeRangeKind_4(jule::Trait<_1bc71a88e_comptimeRangeKind> _self_) {
	return _1bc72a1d9_len(_self_.safe_ptr<_1bc728dec_comptimeTypeInfos>());
}
inline void _1bc71a086_ready_comptimeRangeKind_5(jule::Trait<_1bc71a88e_comptimeRangeKind> _self_, jule::Ptr<_1bc7a750d_Var>* _2429_keyA, jule::Ptr<_1bc7a750d_Var>* _2446_keyB) {
	_1bc734e91_ready(_self_.safe_ptr<_1bc734358_comptimeFiles>(), _2429_keyA, _2446_keyB);
}
inline void _1bc71a4a4_step_comptimeRangeKind_5(jule::Trait<_1bc71a88e_comptimeRangeKind> _self_, jule::I64 _2523_i, jule::Ptr<_1bc7a750d_Var>* _2536_keyA, jule::Ptr<_1bc7a750d_Var>* _2553_keyB) {
	_1bc7353ae_step(_self_.safe_ptr<_1bc734358_comptimeFiles>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I64 _1bc71a73a_len_comptimeRangeKind_5(jule::Trait<_1bc71a88e_comptimeRangeKind> _self_) {
	return _1bc735645_len(_self_.safe_ptr<_1bc734358_comptimeFiles>());
}
inline void _1bc75ecbd_SetModPath_Importer_0(jule::Trait<_1bc760ede_Importer> _self_, jule::Str _1729_path) {
	_1bd4366b9_SetModPath(_self_.safe_ptr<_1bd435ae7_JuleImporter>(), _1729_path);
}
inline jule::Str _1bc760054_GetModPath_Importer_0(jule::Trait<_1bc760ede_Importer> _self_) {
	return _1bd436950_GetModPath(_self_.safe_ptr<_1bd435ae7_JuleImporter>());
}
inline jule::Str _1bc760395_ModById_Importer_0(jule::Trait<_1bc760ede_Importer> _self_, jule::I64 _2522_id) {
	return _1bd436c91_ModById(_self_.safe_ptr<_1bd435ae7_JuleImporter>(), _2522_id);
}
inline jule::Ptr<_1bc763e04_ImportInfo> _1bc7606d6_GetImport_Importer_0(jule::Trait<_1bc760ede_Importer> _self_, jule::Str _3128_path) {
	return _1bd4370d2_GetImport(_self_.safe_ptr<_1bd435ae7_JuleImporter>(), _3128_path);
}
inline __jule_tuple_sx_1bc59378e_Ast__jule_tuple_s_1ed6c7892_Log _1bc760ad2_ImportPackage_Importer_0(jule::Trait<_1bc760ede_Importer> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod) {
	return _1bd4374cd_ImportPackage(_self_.safe_ptr<_1bd435ae7_JuleImporter>(), _3732_path, _3743_update_mod);
}
inline void _1bc760d8a_Imported_Importer_0(jule::Trait<_1bc760ede_Importer> _self_, jule::Ptr<_1bc763e04_ImportInfo> _4131__0) {
	_1bd437786_Imported(_self_.safe_ptr<_1bd435ae7_JuleImporter>(), _4131__0);
}
inline jule::Str _1bc840772_Str_Kind_0(jule::Trait<_1bc840c17_Kind> _self_) {
	return _1bc5be435_Str(_self_.safe_ptr<_1bc5be0b1_StructIns>());
}
inline jule::Bool _1bc840ab3_Equal_Kind_0(jule::Trait<_1bc840c17_Kind> _self_, jule::Ptr<_1bc8411bd_TypeKind> _5621_other) {
	return _1bc5be776_Equal(_self_.data.as<_1bc5be0b1_StructIns>(), _5621_other);
}
inline jule::Str _1bc840772_Str_Kind_1(jule::Trait<_1bc840c17_Kind> _self_) {
	return _1ece1e2d7_Str(_self_.safe_ptr<_1ece1de96_FnIns>());
}
inline jule::Bool _1bc840ab3_Equal_Kind_1(jule::Trait<_1bc840c17_Kind> _self_, jule::Ptr<_1bc8411bd_TypeKind> _5621_other) {
	return _1ece1e628_Equal(_self_.data.as<_1ece1de96_FnIns>(), _5621_other);
}
inline jule::Str _1bc840772_Str_Kind_2(jule::Trait<_1bc840c17_Kind> _self_) {
	return _1bc713e09_Str(_self_.safe_ptr<_1bc713a41_Trait>());
}
inline jule::Bool _1bc840ab3_Equal_Kind_2(jule::Trait<_1bc840c17_Kind> _self_, jule::Ptr<_1bc8411bd_TypeKind> _5621_other) {
	return _1bc71424a_Equal(_self_.data.as<_1bc713a41_Trait>(), _5621_other);
}
inline jule::Str _1bc840772_Str_Kind_3(jule::Trait<_1bc840c17_Kind> _self_) {
	return _1bc7165c1_Str(_self_.safe_ptr<_1bc71624c_Enum>());
}
inline jule::Bool _1bc840ab3_Equal_Kind_3(jule::Trait<_1bc840c17_Kind> _self_, jule::Ptr<_1bc8411bd_TypeKind> _5621_other) {
	return _1bc716912_Equal(_self_.data.as<_1bc71624c_Enum>(), _5621_other);
}
inline jule::Str _1bc840772_Str_Kind_4(jule::Trait<_1bc840c17_Kind> _self_) {
	return _1bc717c98_Str(_self_.safe_ptr<_1bc717957_TypeEnum>());
}
inline jule::Bool _1bc840ab3_Equal_Kind_4(jule::Trait<_1bc840c17_Kind> _self_, jule::Ptr<_1bc8411bd_TypeKind> _5621_other) {
	return _1bc7180d9_Equal(_self_.data.as<_1bc717957_TypeEnum>(), _5621_other);
}
inline jule::Str _1bc840772_Str_Kind_5(jule::Trait<_1bc840c17_Kind> _self_) {
	return _1bc71ae33_Str(_self_.safe_ptr<_1bc71aaae_comptimeRange>());
}
inline jule::Bool _1bc840ab3_Equal_Kind_5(jule::Trait<_1bc840c17_Kind> _self_, jule::Ptr<_1bc8411bd_TypeKind> _5621_other) {
	return _1bc71b274_Equal(_self_.data.as<_1bc71aaae_comptimeRange>(), _5621_other);
}
inline jule::Str _1bc840772_Str_Kind_6(jule::Trait<_1bc840c17_Kind> _self_) {
	return _1bc71b94a_Str(_self_.safe_ptr<_1bc71b582_comptimeStructField>());
}
inline jule::Bool _1bc840ab3_Equal_Kind_6(jule::Trait<_1bc840c17_Kind> _self_, jule::Ptr<_1bc8411bd_TypeKind> _5621_other) {
	return _1bc71bc8b_Equal(_self_.data.as<_1bc71b582_comptimeStructField>(), _5621_other);
}
inline jule::Str _1bc840772_Str_Kind_7(jule::Trait<_1bc840c17_Kind> _self_) {
	return _1bc71d5b7_Str(_self_.safe_ptr<_1bc71d243_comptimeStructFields>());
}
inline jule::Bool _1bc840ab3_Equal_Kind_7(jule::Trait<_1bc840c17_Kind> _self_, jule::Ptr<_1bc8411bd_TypeKind> _5621_other) {
	return _1bc71d908_Equal(_self_.data.as<_1bc71d243_comptimeStructFields>(), _5621_other);
}
inline jule::Str _1bc840772_Str_Kind_8(jule::Trait<_1bc840c17_Kind> _self_) {
	return _1bc71ebb2_Str(_self_.safe_ptr<_1bc71e83d_comptimeStatic>());
}
inline jule::Bool _1bc840ab3_Equal_Kind_8(jule::Trait<_1bc840c17_Kind> _self_, jule::Ptr<_1bc8411bd_TypeKind> _5621_other) {
	return _1bc720003_Equal(_self_.data.as<_1bc71e83d_comptimeStatic>(), _5621_other);
}
inline jule::Str _1bc840772_Str_Kind_9(jule::Trait<_1bc840c17_Kind> _self_) {
	return _1bc721873_Str(_self_.safe_ptr<_1bc7214ee_comptimeStatics>());
}
inline jule::Bool _1bc840ab3_Equal_Kind_9(jule::Trait<_1bc840c17_Kind> _self_, jule::Ptr<_1bc8411bd_TypeKind> _5621_other) {
	return _1bc721bb4_Equal(_self_.data.as<_1bc7214ee_comptimeStatics>(), _5621_other);
}
inline jule::Str _1bc840772_Str_Kind_10(jule::Trait<_1bc840c17_Kind> _self_) {
	return _1bc72307d_Str(_self_.safe_ptr<_1bc722ae9_comptimeEnumField>());
}
inline jule::Bool _1bc840ab3_Equal_Kind_10(jule::Trait<_1bc840c17_Kind> _self_, jule::Ptr<_1bc8411bd_TypeKind> _5621_other) {
	return _1bc7233be_Equal(_self_.data.as<_1bc722ae9_comptimeEnumField>(), _5621_other);
}
inline jule::Str _1bc840772_Str_Kind_11(jule::Trait<_1bc840c17_Kind> _self_) {
	return _1bc724315_Str(_self_.safe_ptr<_1bc723e91_comptimeEnumFields>());
}
inline jule::Bool _1bc840ab3_Equal_Kind_11(jule::Trait<_1bc840c17_Kind> _self_, jule::Ptr<_1bc8411bd_TypeKind> _5621_other) {
	return _1bc724656_Equal(_self_.data.as<_1bc723e91_comptimeEnumFields>(), _5621_other);
}
inline jule::Str _1bc840772_Str_Kind_12(jule::Trait<_1bc840c17_Kind> _self_) {
	return _1bc725910_Str(_self_.safe_ptr<_1bc72558b_comptimeParam>());
}
inline jule::Bool _1bc840ab3_Equal_Kind_12(jule::Trait<_1bc840c17_Kind> _self_, jule::Ptr<_1bc8411bd_TypeKind> _5621_other) {
	return _1bc725c51_Equal(_self_.data.as<_1bc72558b_comptimeParam>(), _5621_other);
}
inline jule::Str _1bc840772_Str_Kind_13(jule::Trait<_1bc840c17_Kind> _self_) {
	return _1bc727b76_Str(_self_.safe_ptr<_1bc727802_comptimeParams>());
}
inline jule::Bool _1bc840ab3_Equal_Kind_13(jule::Trait<_1bc840c17_Kind> _self_, jule::Ptr<_1bc8411bd_TypeKind> _5621_other) {
	return _1bc727eb7_Equal(_self_.data.as<_1bc727802_comptimeParams>(), _5621_other);
}
inline jule::Str _1bc840772_Str_Kind_14(jule::Trait<_1bc840c17_Kind> _self_) {
	return _1bc729271_Str(_self_.safe_ptr<_1bc728dec_comptimeTypeInfos>());
}
inline jule::Bool _1bc840ab3_Equal_Kind_14(jule::Trait<_1bc840c17_Kind> _self_, jule::Ptr<_1bc8411bd_TypeKind> _5621_other) {
	return _1bc7295b2_Equal(_self_.data.as<_1bc728dec_comptimeTypeInfos>(), _5621_other);
}
inline jule::Str _1bc840772_Str_Kind_15(jule::Trait<_1bc840c17_Kind> _self_) {
	return _1bc72a86b_Str(_self_.safe_ptr<_1bc72a4e7_comptimeTypeInfo>());
}
inline jule::Bool _1bc840ab3_Equal_Kind_15(jule::Trait<_1bc840c17_Kind> _self_, jule::Ptr<_1bc8411bd_TypeKind> _5621_other) {
	return _1bc72abac_Equal(_self_.data.as<_1bc72a4e7_comptimeTypeInfo>(), _5621_other);
}
inline jule::Str _1bc840772_Str_Kind_16(jule::Trait<_1bc840c17_Kind> _self_) {
	return _1bc731d7d_Str(_self_.safe_ptr<_1bc731a09_comptimeValue>());
}
inline jule::Bool _1bc840ab3_Equal_Kind_16(jule::Trait<_1bc840c17_Kind> _self_, jule::Ptr<_1bc8411bd_TypeKind> _5621_other) {
	return _1bc7321be_Equal(_self_.data.as<_1bc731a09_comptimeValue>(), _5621_other);
}
inline jule::Str _1bc840772_Str_Kind_17(jule::Trait<_1bc840c17_Kind> _self_) {
	return _1bc7346cc_Str(_self_.safe_ptr<_1bc734358_comptimeFiles>());
}
inline jule::Bool _1bc840ab3_Equal_Kind_17(jule::Trait<_1bc840c17_Kind> _self_, jule::Ptr<_1bc8411bd_TypeKind> _5621_other) {
	return _1bc734a1d_Equal(_self_.data.as<_1bc734358_comptimeFiles>(), _5621_other);
}
inline jule::Str _1bc840772_Str_Kind_18(jule::Trait<_1bc840c17_Kind> _self_) {
	return _1bc735de8_Str(_self_.safe_ptr<_1bc735953_comptimeFile>());
}
inline jule::Bool _1bc840ab3_Equal_Kind_18(jule::Trait<_1bc840c17_Kind> _self_, jule::Ptr<_1bc8411bd_TypeKind> _5621_other) {
	return _1bc736239_Equal(_self_.data.as<_1bc735953_comptimeFile>(), _5621_other);
}
inline jule::Str _1bc840772_Str_Kind_19(jule::Trait<_1bc840c17_Kind> _self_) {
	return _1bc841586_Str(_self_.safe_ptr<_1bc8411bd_TypeKind>());
}
inline jule::Bool _1bc840ab3_Equal_Kind_19(jule::Trait<_1bc840c17_Kind> _self_, jule::Ptr<_1bc8411bd_TypeKind> _5621_other) {
	return _1bc8418c7_Equal(_self_.data.as<_1bc8411bd_TypeKind>(), _5621_other);
}
inline jule::Str _1bc840772_Str_Kind_20(jule::Trait<_1bc840c17_Kind> _self_) {
	return _1bc8490d8_Str(_self_.safe_ptr<_1bc848c97_Prim>());
}
inline jule::Bool _1bc840ab3_Equal_Kind_20(jule::Trait<_1bc840c17_Kind> _self_, jule::Ptr<_1bc8411bd_TypeKind> _5621_other) {
	return _1bc849429_Equal(_self_.data.as<_1bc848c97_Prim>(), _5621_other);
}
inline jule::Str _1bc840772_Str_Kind_21(jule::Trait<_1bc840c17_Kind> _self_) {
	return _1bc84cb47_Str(_self_.safe_ptr<_1bc84c7c3_Sptr>());
}
inline jule::Bool _1bc840ab3_Equal_Kind_21(jule::Trait<_1bc840c17_Kind> _self_, jule::Ptr<_1bc8411bd_TypeKind> _5621_other) {
	return _1bc84ce88_Equal(_self_.data.as<_1bc84c7c3_Sptr>(), _5621_other);
}
inline jule::Str _1bc840772_Str_Kind_22(jule::Trait<_1bc840c17_Kind> _self_) {
	return _1bc84d72a_Str(_self_.safe_ptr<_1bc84d296_Slc>());
}
inline jule::Bool _1bc840ab3_Equal_Kind_22(jule::Trait<_1bc840c17_Kind> _self_, jule::Ptr<_1bc8411bd_TypeKind> _5621_other) {
	return _1bc84da6b_Equal(_self_.data.as<_1bc84d296_Slc>(), _5621_other);
}
inline jule::Str _1bc840772_Str_Kind_23(jule::Trait<_1bc840c17_Kind> _self_) {
	return _1bc84e20e_Str(_self_.safe_ptr<_1bc84dd8a_Tuple>());
}
inline jule::Bool _1bc840ab3_Equal_Kind_23(jule::Trait<_1bc840c17_Kind> _self_, jule::Ptr<_1bc8411bd_TypeKind> _5621_other) {
	return _1bc84e550_Equal(_self_.data.as<_1bc84dd8a_Tuple>(), _5621_other);
}
inline jule::Str _1bc840772_Str_Kind_24(jule::Trait<_1bc840c17_Kind> _self_) {
	return _1bc84ecae_Str(_self_.safe_ptr<_1bc84e93a_Map>());
}
inline jule::Bool _1bc840ab3_Equal_Kind_24(jule::Trait<_1bc840c17_Kind> _self_, jule::Ptr<_1bc8411bd_TypeKind> _5621_other) {
	return _1bc850100_Equal(_self_.data.as<_1bc84e93a_Map>(), _5621_other);
}
inline jule::Str _1bc840772_Str_Kind_25(jule::Trait<_1bc840c17_Kind> _self_) {
	return _1bc85093b_Str(_self_.safe_ptr<_1bc8505b7_Arr>());
}
inline jule::Bool _1bc840ab3_Equal_Kind_25(jule::Trait<_1bc840c17_Kind> _self_, jule::Ptr<_1bc8411bd_TypeKind> _5621_other) {
	return _1bc850c7c_Equal(_self_.data.as<_1bc8505b7_Arr>(), _5621_other);
}
inline jule::Str _1bc840772_Str_Kind_26(jule::Trait<_1bc840c17_Kind> _self_) {
	return _1bc85140e_Str(_self_.safe_ptr<_1bc85108a_Ptr>());
}
inline jule::Bool _1bc840ab3_Equal_Kind_26(jule::Trait<_1bc840c17_Kind> _self_, jule::Ptr<_1bc8411bd_TypeKind> _5621_other) {
	return _1bc851750_Equal(_self_.data.as<_1bc85108a_Ptr>(), _5621_other);
}
inline jule::Str _1bc840772_Str_Kind_27(jule::Trait<_1bc840c17_Kind> _self_) {
	return _1bde38b38_Str(_self_.safe_ptr<_1bde38792_customType>());
}
inline jule::Bool _1bc840ab3_Equal_Kind_27(jule::Trait<_1bc840c17_Kind> _self_, jule::Ptr<_1bc8411bd_TypeKind> _5621_other) {
	return _1bde38e79_Equal(_self_.data.as<_1bde38792_customType>(), _5621_other);
}
inline jule::Ptr<_1bc763e04_ImportInfo> _1bc85dedd_SelectPackage_Lookup_0(jule::Trait<_1bc860c04_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1bc763e04_ImportInfo>)> _932_selector) {
	return _1bc749db8_SelectPackage(_self_.safe_ptr<_1bc749923_scopeChecker>(), _932_selector);
}
inline jule::Ptr<_1bc7a750d_Var> _1bc85e3d9_FindVar_Lookup_0(jule::Trait<_1bc860c04_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1bc74a2b4_FindVar(_self_.safe_ptr<_1bc749923_scopeChecker>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1bc8403cb_TypeAlias> _1bc85e7d5_FindTypeAlias_Lookup_0(jule::Trait<_1bc860c04_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1bc74a6b0_FindTypeAlias(_self_.safe_ptr<_1bc749923_scopeChecker>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1bc5bb333_Struct> _1bc85ebd1_FindStruct_Lookup_0(jule::Trait<_1bc860c04_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1bc74aaab_FindStruct(_self_.safe_ptr<_1bc749923_scopeChecker>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1ece1b092_Fn> _1bc8600cc_FindFn_Lookup_0(jule::Trait<_1bc860c04_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1bc74aea7_FindFn(_self_.safe_ptr<_1bc749923_scopeChecker>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1bc713a41_Trait> _1bc86041d_FindTrait_Lookup_0(jule::Trait<_1bc860c04_Lookup> _self_, jule::Str _2928_ident) {
	return _1bc74b2e8_FindTrait(_self_.safe_ptr<_1bc749923_scopeChecker>(), _2928_ident);
}
inline jule::Ptr<_1bc71624c_Enum> _1bc86075e_FindEnum_Lookup_0(jule::Trait<_1bc860c04_Lookup> _self_, jule::Str _3327_ident) {
	return _1bc74b639_FindEnum(_self_.safe_ptr<_1bc749923_scopeChecker>(), _3327_ident);
}
inline jule::Ptr<_1bc717957_TypeEnum> _1bc860aa0_FindTypeEnum_Lookup_0(jule::Trait<_1bc860c04_Lookup> _self_, jule::Str _3731_ident) {
	return _1bc74b97a_FindTypeEnum(_self_.safe_ptr<_1bc749923_scopeChecker>(), _3731_ident);
}
inline jule::Ptr<_1bc763e04_ImportInfo> _1bc85dedd_SelectPackage_Lookup_1(jule::Trait<_1bc860c04_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1bc763e04_ImportInfo>)> _932_selector) {
	return _1bc7643dd_SelectPackage(_self_.safe_ptr<_1bc763e04_ImportInfo>(), _932_selector);
}
inline jule::Ptr<_1bc7a750d_Var> _1bc85e3d9_FindVar_Lookup_1(jule::Trait<_1bc860c04_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1bc7647d9_FindVar(_self_.safe_ptr<_1bc763e04_ImportInfo>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1bc8403cb_TypeAlias> _1bc85e7d5_FindTypeAlias_Lookup_1(jule::Trait<_1bc860c04_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1bc764bd5_FindTypeAlias(_self_.safe_ptr<_1bc763e04_ImportInfo>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1bc5bb333_Struct> _1bc85ebd1_FindStruct_Lookup_1(jule::Trait<_1bc860c04_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1bc7650d1_FindStruct(_self_.safe_ptr<_1bc763e04_ImportInfo>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1ece1b092_Fn> _1bc8600cc_FindFn_Lookup_1(jule::Trait<_1bc860c04_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1bc7654cc_FindFn(_self_.safe_ptr<_1bc763e04_ImportInfo>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1bc713a41_Trait> _1bc86041d_FindTrait_Lookup_1(jule::Trait<_1bc860c04_Lookup> _self_, jule::Str _2928_ident) {
	return _1bc76581d_FindTrait(_self_.safe_ptr<_1bc763e04_ImportInfo>(), _2928_ident);
}
inline jule::Ptr<_1bc71624c_Enum> _1bc86075e_FindEnum_Lookup_1(jule::Trait<_1bc860c04_Lookup> _self_, jule::Str _3327_ident) {
	return _1bc765b5e_FindEnum(_self_.safe_ptr<_1bc763e04_ImportInfo>(), _3327_ident);
}
inline jule::Ptr<_1bc717957_TypeEnum> _1bc860aa0_FindTypeEnum_Lookup_1(jule::Trait<_1bc860c04_Lookup> _self_, jule::Str _3731_ident) {
	return _1bc765ea0_FindTypeEnum(_self_.safe_ptr<_1bc763e04_ImportInfo>(), _3731_ident);
}
inline jule::Ptr<_1bc763e04_ImportInfo> _1bc85dedd_SelectPackage_Lookup_2(jule::Trait<_1bc860c04_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1bc763e04_ImportInfo>)> _932_selector) {
	return _1bc7672c0_SelectPackage(_self_.safe_ptr<_1bc766d2a_Package>(), _932_selector);
}
inline jule::Ptr<_1bc7a750d_Var> _1bc85e3d9_FindVar_Lookup_2(jule::Trait<_1bc860c04_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1bc7676bb_FindVar(_self_.safe_ptr<_1bc766d2a_Package>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1bc8403cb_TypeAlias> _1bc85e7d5_FindTypeAlias_Lookup_2(jule::Trait<_1bc860c04_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1bc767ab7_FindTypeAlias(_self_.safe_ptr<_1bc766d2a_Package>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1bc5bb333_Struct> _1bc85ebd1_FindStruct_Lookup_2(jule::Trait<_1bc860c04_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1bc767eb3_FindStruct(_self_.safe_ptr<_1bc766d2a_Package>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1ece1b092_Fn> _1bc8600cc_FindFn_Lookup_2(jule::Trait<_1bc860c04_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1bc7683ae_FindFn(_self_.safe_ptr<_1bc766d2a_Package>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1bc713a41_Trait> _1bc86041d_FindTrait_Lookup_2(jule::Trait<_1bc860c04_Lookup> _self_, jule::Str _2928_ident) {
	return _1bc768700_FindTrait(_self_.safe_ptr<_1bc766d2a_Package>(), _2928_ident);
}
inline jule::Ptr<_1bc71624c_Enum> _1bc86075e_FindEnum_Lookup_2(jule::Trait<_1bc860c04_Lookup> _self_, jule::Str _3327_ident) {
	return _1bc768a41_FindEnum(_self_.safe_ptr<_1bc766d2a_Package>(), _3327_ident);
}
inline jule::Ptr<_1bc717957_TypeEnum> _1bc860aa0_FindTypeEnum_Lookup_2(jule::Trait<_1bc860c04_Lookup> _self_, jule::Str _3731_ident) {
	return _1bc768d82_FindTypeEnum(_self_.safe_ptr<_1bc766d2a_Package>(), _3731_ident);
}
inline jule::Ptr<_1bc763e04_ImportInfo> _1bc85dedd_SelectPackage_Lookup_3(jule::Trait<_1bc860c04_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1bc763e04_ImportInfo>)> _932_selector) {
	return _1bc78471b_SelectPackage(_self_.safe_ptr<_1bc784276_Sema>(), _932_selector);
}
inline jule::Ptr<_1bc7a750d_Var> _1bc85e3d9_FindVar_Lookup_3(jule::Trait<_1bc860c04_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1bc784b17_FindVar(_self_.safe_ptr<_1bc784276_Sema>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1bc8403cb_TypeAlias> _1bc85e7d5_FindTypeAlias_Lookup_3(jule::Trait<_1bc860c04_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1bc785013_FindTypeAlias(_self_.safe_ptr<_1bc784276_Sema>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1bc5bb333_Struct> _1bc85ebd1_FindStruct_Lookup_3(jule::Trait<_1bc860c04_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1bc78540e_FindStruct(_self_.safe_ptr<_1bc784276_Sema>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1ece1b092_Fn> _1bc8600cc_FindFn_Lookup_3(jule::Trait<_1bc860c04_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1bc78580a_FindFn(_self_.safe_ptr<_1bc784276_Sema>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1bc713a41_Trait> _1bc86041d_FindTrait_Lookup_3(jule::Trait<_1bc860c04_Lookup> _self_, jule::Str _2928_ident) {
	return _1bc785b4b_FindTrait(_self_.safe_ptr<_1bc784276_Sema>(), _2928_ident);
}
inline jule::Ptr<_1bc71624c_Enum> _1bc86075e_FindEnum_Lookup_3(jule::Trait<_1bc860c04_Lookup> _self_, jule::Str _3327_ident) {
	return _1bc785e8c_FindEnum(_self_.safe_ptr<_1bc784276_Sema>(), _3327_ident);
}
inline jule::Ptr<_1bc717957_TypeEnum> _1bc860aa0_FindTypeEnum_Lookup_3(jule::Trait<_1bc860c04_Lookup> _self_, jule::Str _3731_ident) {
	return _1bc7862cd_FindTypeEnum(_self_.safe_ptr<_1bc784276_Sema>(), _3731_ident);
}
inline jule::Ptr<_1bc763e04_ImportInfo> _1bc85dedd_SelectPackage_Lookup_4(jule::Trait<_1bc860c04_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1bc763e04_ImportInfo>)> _932_selector) {
	return _1bc80a9e5_SelectPackage(_self_.safe_ptr<_1bc80a50b_SymbolTable>(), _932_selector);
}
inline jule::Ptr<_1bc7a750d_Var> _1bc85e3d9_FindVar_Lookup_4(jule::Trait<_1bc860c04_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1bc80ade1_FindVar(_self_.safe_ptr<_1bc80a50b_SymbolTable>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1bc8403cb_TypeAlias> _1bc85e7d5_FindTypeAlias_Lookup_4(jule::Trait<_1bc860c04_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1bc80b2dc_FindTypeAlias(_self_.safe_ptr<_1bc80a50b_SymbolTable>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1bc5bb333_Struct> _1bc85ebd1_FindStruct_Lookup_4(jule::Trait<_1bc860c04_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1bc80b6d8_FindStruct(_self_.safe_ptr<_1bc80a50b_SymbolTable>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1ece1b092_Fn> _1bc8600cc_FindFn_Lookup_4(jule::Trait<_1bc860c04_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1bc80bad4_FindFn(_self_.safe_ptr<_1bc80a50b_SymbolTable>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1bc713a41_Trait> _1bc86041d_FindTrait_Lookup_4(jule::Trait<_1bc860c04_Lookup> _self_, jule::Str _2928_ident) {
	return _1bc80be25_FindTrait(_self_.safe_ptr<_1bc80a50b_SymbolTable>(), _2928_ident);
}
inline jule::Ptr<_1bc71624c_Enum> _1bc86075e_FindEnum_Lookup_4(jule::Trait<_1bc860c04_Lookup> _self_, jule::Str _3327_ident) {
	return _1bc80c266_FindEnum(_self_.safe_ptr<_1bc80a50b_SymbolTable>(), _3327_ident);
}
inline jule::Ptr<_1bc717957_TypeEnum> _1bc860aa0_FindTypeEnum_Lookup_4(jule::Trait<_1bc860c04_Lookup> _self_, jule::Str _3731_ident) {
	return _1bc80c5a7_FindTypeEnum(_self_.safe_ptr<_1bc80a50b_SymbolTable>(), _3731_ident);
}
inline jule::Str _1bde7a9b0_Name_CommonFlag_0(jule::Trait<_1bdeab7d2_CommonFlag> _self_) {
	return _1c317cbad_Name(_self_.safe_ptr<_1c317cd45_Flag>());
}
inline jule::I32 _1bde7ab03_Short_CommonFlag_0(jule::Trait<_1bdeab7d2_CommonFlag> _self_) {
	return _1c317d3b7_Short(_self_.safe_ptr<_1c317cd45_Flag>());
}
inline jule::Str _1bdeab54b_What_CommonFlag_0(jule::Trait<_1bdeab7d2_CommonFlag> _self_) {
	return _1c317d131_What(_self_.safe_ptr<_1c317cd45_Flag>());
}
inline void _1bdeab68e_Reset_CommonFlag_0(jule::Trait<_1bdeab7d2_CommonFlag> _self_) {
	_1c317d274_Reset(_self_.safe_ptr<_1c317cd45_Flag>());
}
inline jule::Str _1bde7a9b0_Name_CommonFlag_1(jule::Trait<_1bdeab7d2_CommonFlag> _self_) {
	return _1c3181310_Name(_self_.safe_ptr<_1c31816d9_Flag>());
}
inline jule::I32 _1bde7ab03_Short_CommonFlag_1(jule::Trait<_1bdeab7d2_CommonFlag> _self_) {
	return _1c3181c5b_Short(_self_.safe_ptr<_1c31816d9_Flag>());
}
inline jule::Str _1bdeab54b_What_CommonFlag_1(jule::Trait<_1bdeab7d2_CommonFlag> _self_) {
	return _1c31819c5_What(_self_.safe_ptr<_1c31816d9_Flag>());
}
inline void _1bdeab68e_Reset_CommonFlag_1(jule::Trait<_1bdeab7d2_CommonFlag> _self_) {
	_1c3181b18_Reset(_self_.safe_ptr<_1c31816d9_Flag>());
}
inline jule::Str _1bde7a9b0_Name_CommonFlag_2(jule::Trait<_1bdeab7d2_CommonFlag> _self_) {
	return _1c3184a0b_Name(_self_.safe_ptr<_1c3184dd5_Flag>());
}
inline jule::I32 _1bde7ab03_Short_CommonFlag_2(jule::Trait<_1bdeab7d2_CommonFlag> _self_) {
	return _1c3185457_Short(_self_.safe_ptr<_1c3184dd5_Flag>());
}
inline jule::Str _1bdeab54b_What_CommonFlag_2(jule::Trait<_1bdeab7d2_CommonFlag> _self_) {
	return _1c31851c1_What(_self_.safe_ptr<_1c3184dd5_Flag>());
}
inline void _1bdeab68e_Reset_CommonFlag_2(jule::Trait<_1bdeab7d2_CommonFlag> _self_) {
	_1c3185314_Reset(_self_.safe_ptr<_1c3184dd5_Flag>());
}
inline jule::Str _1bde7a9b0_Name_CommonFlag_3(jule::Trait<_1bdeab7d2_CommonFlag> _self_) {
	return _1c318824b_Name(_self_.safe_ptr<_1c3188625_Flag>());
}
inline jule::I32 _1bde7ab03_Short_CommonFlag_3(jule::Trait<_1bdeab7d2_CommonFlag> _self_) {
	return _1c3188b97_Short(_self_.safe_ptr<_1c3188625_Flag>());
}
inline jule::Str _1bdeab54b_What_CommonFlag_3(jule::Trait<_1bdeab7d2_CommonFlag> _self_) {
	return _1c3188911_What(_self_.safe_ptr<_1c3188625_Flag>());
}
inline void _1bdeab68e_Reset_CommonFlag_3(jule::Trait<_1bdeab7d2_CommonFlag> _self_) {
	_1c3188a54_Reset(_self_.safe_ptr<_1c3188625_Flag>());
}
inline jule::Str _1bde7a9b0_Name_CommonFlag_4(jule::Trait<_1bdeab7d2_CommonFlag> _self_) {
	return _1c318b947_Name(_self_.safe_ptr<_1c318bd21_Flag>());
}
inline jule::I32 _1bde7ab03_Short_CommonFlag_4(jule::Trait<_1bdeab7d2_CommonFlag> _self_) {
	return _1c318c393_Short(_self_.safe_ptr<_1c318bd21_Flag>());
}
inline jule::Str _1bdeab54b_What_CommonFlag_4(jule::Trait<_1bdeab7d2_CommonFlag> _self_) {
	return _1c318c10c_What(_self_.safe_ptr<_1c318bd21_Flag>());
}
inline void _1bdeab68e_Reset_CommonFlag_4(jule::Trait<_1bdeab7d2_CommonFlag> _self_) {
	_1c318c250_Reset(_self_.safe_ptr<_1c318bd21_Flag>());
}


static _1bc71a88e_comptimeRangeKindMptrData _1bc71a88e_comptimeRangeKind_mptr_data[] = {
	{
		._1bc71a086_ready=_1bc71a086_ready_comptimeRangeKind_0,
		._1bc71a4a4_step=_1bc71a4a4_step_comptimeRangeKind_0,
		._1bc71a73a_len=_1bc71a73a_len_comptimeRangeKind_0,
	},
	{
		._1bc71a086_ready=_1bc71a086_ready_comptimeRangeKind_1,
		._1bc71a4a4_step=_1bc71a4a4_step_comptimeRangeKind_1,
		._1bc71a73a_len=_1bc71a73a_len_comptimeRangeKind_1,
	},
	{
		._1bc71a086_ready=_1bc71a086_ready_comptimeRangeKind_2,
		._1bc71a4a4_step=_1bc71a4a4_step_comptimeRangeKind_2,
		._1bc71a73a_len=_1bc71a73a_len_comptimeRangeKind_2,
	},
	{
		._1bc71a086_ready=_1bc71a086_ready_comptimeRangeKind_3,
		._1bc71a4a4_step=_1bc71a4a4_step_comptimeRangeKind_3,
		._1bc71a73a_len=_1bc71a73a_len_comptimeRangeKind_3,
	},
	{
		._1bc71a086_ready=_1bc71a086_ready_comptimeRangeKind_4,
		._1bc71a4a4_step=_1bc71a4a4_step_comptimeRangeKind_4,
		._1bc71a73a_len=_1bc71a73a_len_comptimeRangeKind_4,
	},
	{
		._1bc71a086_ready=_1bc71a086_ready_comptimeRangeKind_5,
		._1bc71a4a4_step=_1bc71a4a4_step_comptimeRangeKind_5,
		._1bc71a73a_len=_1bc71a73a_len_comptimeRangeKind_5,
	},
};
static _1bc760ede_ImporterMptrData _1bc760ede_Importer_mptr_data[] = {
	{
		._1bc75ecbd_SetModPath=_1bc75ecbd_SetModPath_Importer_0,
		._1bc760054_GetModPath=_1bc760054_GetModPath_Importer_0,
		._1bc760395_ModById=_1bc760395_ModById_Importer_0,
		._1bc7606d6_GetImport=_1bc7606d6_GetImport_Importer_0,
		._1bc760ad2_ImportPackage=_1bc760ad2_ImportPackage_Importer_0,
		._1bc760d8a_Imported=_1bc760d8a_Imported_Importer_0,
	},
};
static _1bc840c17_KindMptrData _1bc840c17_Kind_mptr_data[] = {
	{
		._1bc840772_Str=_1bc840772_Str_Kind_0,
		._1bc840ab3_Equal=_1bc840ab3_Equal_Kind_0,
	},
	{
		._1bc840772_Str=_1bc840772_Str_Kind_1,
		._1bc840ab3_Equal=_1bc840ab3_Equal_Kind_1,
	},
	{
		._1bc840772_Str=_1bc840772_Str_Kind_2,
		._1bc840ab3_Equal=_1bc840ab3_Equal_Kind_2,
	},
	{
		._1bc840772_Str=_1bc840772_Str_Kind_3,
		._1bc840ab3_Equal=_1bc840ab3_Equal_Kind_3,
	},
	{
		._1bc840772_Str=_1bc840772_Str_Kind_4,
		._1bc840ab3_Equal=_1bc840ab3_Equal_Kind_4,
	},
	{
		._1bc840772_Str=_1bc840772_Str_Kind_5,
		._1bc840ab3_Equal=_1bc840ab3_Equal_Kind_5,
	},
	{
		._1bc840772_Str=_1bc840772_Str_Kind_6,
		._1bc840ab3_Equal=_1bc840ab3_Equal_Kind_6,
	},
	{
		._1bc840772_Str=_1bc840772_Str_Kind_7,
		._1bc840ab3_Equal=_1bc840ab3_Equal_Kind_7,
	},
	{
		._1bc840772_Str=_1bc840772_Str_Kind_8,
		._1bc840ab3_Equal=_1bc840ab3_Equal_Kind_8,
	},
	{
		._1bc840772_Str=_1bc840772_Str_Kind_9,
		._1bc840ab3_Equal=_1bc840ab3_Equal_Kind_9,
	},
	{
		._1bc840772_Str=_1bc840772_Str_Kind_10,
		._1bc840ab3_Equal=_1bc840ab3_Equal_Kind_10,
	},
	{
		._1bc840772_Str=_1bc840772_Str_Kind_11,
		._1bc840ab3_Equal=_1bc840ab3_Equal_Kind_11,
	},
	{
		._1bc840772_Str=_1bc840772_Str_Kind_12,
		._1bc840ab3_Equal=_1bc840ab3_Equal_Kind_12,
	},
	{
		._1bc840772_Str=_1bc840772_Str_Kind_13,
		._1bc840ab3_Equal=_1bc840ab3_Equal_Kind_13,
	},
	{
		._1bc840772_Str=_1bc840772_Str_Kind_14,
		._1bc840ab3_Equal=_1bc840ab3_Equal_Kind_14,
	},
	{
		._1bc840772_Str=_1bc840772_Str_Kind_15,
		._1bc840ab3_Equal=_1bc840ab3_Equal_Kind_15,
	},
	{
		._1bc840772_Str=_1bc840772_Str_Kind_16,
		._1bc840ab3_Equal=_1bc840ab3_Equal_Kind_16,
	},
	{
		._1bc840772_Str=_1bc840772_Str_Kind_17,
		._1bc840ab3_Equal=_1bc840ab3_Equal_Kind_17,
	},
	{
		._1bc840772_Str=_1bc840772_Str_Kind_18,
		._1bc840ab3_Equal=_1bc840ab3_Equal_Kind_18,
	},
	{
		._1bc840772_Str=_1bc840772_Str_Kind_19,
		._1bc840ab3_Equal=_1bc840ab3_Equal_Kind_19,
	},
	{
		._1bc840772_Str=_1bc840772_Str_Kind_20,
		._1bc840ab3_Equal=_1bc840ab3_Equal_Kind_20,
	},
	{
		._1bc840772_Str=_1bc840772_Str_Kind_21,
		._1bc840ab3_Equal=_1bc840ab3_Equal_Kind_21,
	},
	{
		._1bc840772_Str=_1bc840772_Str_Kind_22,
		._1bc840ab3_Equal=_1bc840ab3_Equal_Kind_22,
	},
	{
		._1bc840772_Str=_1bc840772_Str_Kind_23,
		._1bc840ab3_Equal=_1bc840ab3_Equal_Kind_23,
	},
	{
		._1bc840772_Str=_1bc840772_Str_Kind_24,
		._1bc840ab3_Equal=_1bc840ab3_Equal_Kind_24,
	},
	{
		._1bc840772_Str=_1bc840772_Str_Kind_25,
		._1bc840ab3_Equal=_1bc840ab3_Equal_Kind_25,
	},
	{
		._1bc840772_Str=_1bc840772_Str_Kind_26,
		._1bc840ab3_Equal=_1bc840ab3_Equal_Kind_26,
	},
	{
		._1bc840772_Str=_1bc840772_Str_Kind_27,
		._1bc840ab3_Equal=_1bc840ab3_Equal_Kind_27,
	},
};
static _1bc860c04_LookupMptrData _1bc860c04_Lookup_mptr_data[] = {
	{
		._1bc85dedd_SelectPackage=_1bc85dedd_SelectPackage_Lookup_0,
		._1bc85e3d9_FindVar=_1bc85e3d9_FindVar_Lookup_0,
		._1bc85e7d5_FindTypeAlias=_1bc85e7d5_FindTypeAlias_Lookup_0,
		._1bc85ebd1_FindStruct=_1bc85ebd1_FindStruct_Lookup_0,
		._1bc8600cc_FindFn=_1bc8600cc_FindFn_Lookup_0,
		._1bc86041d_FindTrait=_1bc86041d_FindTrait_Lookup_0,
		._1bc86075e_FindEnum=_1bc86075e_FindEnum_Lookup_0,
		._1bc860aa0_FindTypeEnum=_1bc860aa0_FindTypeEnum_Lookup_0,
	},
	{
		._1bc85dedd_SelectPackage=_1bc85dedd_SelectPackage_Lookup_1,
		._1bc85e3d9_FindVar=_1bc85e3d9_FindVar_Lookup_1,
		._1bc85e7d5_FindTypeAlias=_1bc85e7d5_FindTypeAlias_Lookup_1,
		._1bc85ebd1_FindStruct=_1bc85ebd1_FindStruct_Lookup_1,
		._1bc8600cc_FindFn=_1bc8600cc_FindFn_Lookup_1,
		._1bc86041d_FindTrait=_1bc86041d_FindTrait_Lookup_1,
		._1bc86075e_FindEnum=_1bc86075e_FindEnum_Lookup_1,
		._1bc860aa0_FindTypeEnum=_1bc860aa0_FindTypeEnum_Lookup_1,
	},
	{
		._1bc85dedd_SelectPackage=_1bc85dedd_SelectPackage_Lookup_2,
		._1bc85e3d9_FindVar=_1bc85e3d9_FindVar_Lookup_2,
		._1bc85e7d5_FindTypeAlias=_1bc85e7d5_FindTypeAlias_Lookup_2,
		._1bc85ebd1_FindStruct=_1bc85ebd1_FindStruct_Lookup_2,
		._1bc8600cc_FindFn=_1bc8600cc_FindFn_Lookup_2,
		._1bc86041d_FindTrait=_1bc86041d_FindTrait_Lookup_2,
		._1bc86075e_FindEnum=_1bc86075e_FindEnum_Lookup_2,
		._1bc860aa0_FindTypeEnum=_1bc860aa0_FindTypeEnum_Lookup_2,
	},
	{
		._1bc85dedd_SelectPackage=_1bc85dedd_SelectPackage_Lookup_3,
		._1bc85e3d9_FindVar=_1bc85e3d9_FindVar_Lookup_3,
		._1bc85e7d5_FindTypeAlias=_1bc85e7d5_FindTypeAlias_Lookup_3,
		._1bc85ebd1_FindStruct=_1bc85ebd1_FindStruct_Lookup_3,
		._1bc8600cc_FindFn=_1bc8600cc_FindFn_Lookup_3,
		._1bc86041d_FindTrait=_1bc86041d_FindTrait_Lookup_3,
		._1bc86075e_FindEnum=_1bc86075e_FindEnum_Lookup_3,
		._1bc860aa0_FindTypeEnum=_1bc860aa0_FindTypeEnum_Lookup_3,
	},
	{
		._1bc85dedd_SelectPackage=_1bc85dedd_SelectPackage_Lookup_4,
		._1bc85e3d9_FindVar=_1bc85e3d9_FindVar_Lookup_4,
		._1bc85e7d5_FindTypeAlias=_1bc85e7d5_FindTypeAlias_Lookup_4,
		._1bc85ebd1_FindStruct=_1bc85ebd1_FindStruct_Lookup_4,
		._1bc8600cc_FindFn=_1bc8600cc_FindFn_Lookup_4,
		._1bc86041d_FindTrait=_1bc86041d_FindTrait_Lookup_4,
		._1bc86075e_FindEnum=_1bc86075e_FindEnum_Lookup_4,
		._1bc860aa0_FindTypeEnum=_1bc860aa0_FindTypeEnum_Lookup_4,
	},
};
static _1bdeab7d2_CommonFlagMptrData _1bdeab7d2_CommonFlag_mptr_data[] = {
	{
		._1bde7a9b0_Name=_1bde7a9b0_Name_CommonFlag_0,
		._1bde7ab03_Short=_1bde7ab03_Short_CommonFlag_0,
		._1bdeab54b_What=_1bdeab54b_What_CommonFlag_0,
		._1bdeab68e_Reset=_1bdeab68e_Reset_CommonFlag_0,
	},
	{
		._1bde7a9b0_Name=_1bde7a9b0_Name_CommonFlag_1,
		._1bde7ab03_Short=_1bde7ab03_Short_CommonFlag_1,
		._1bdeab54b_What=_1bdeab54b_What_CommonFlag_1,
		._1bdeab68e_Reset=_1bdeab68e_Reset_CommonFlag_1,
	},
	{
		._1bde7a9b0_Name=_1bde7a9b0_Name_CommonFlag_2,
		._1bde7ab03_Short=_1bde7ab03_Short_CommonFlag_2,
		._1bdeab54b_What=_1bdeab54b_What_CommonFlag_2,
		._1bdeab68e_Reset=_1bdeab68e_Reset_CommonFlag_2,
	},
	{
		._1bde7a9b0_Name=_1bde7a9b0_Name_CommonFlag_3,
		._1bde7ab03_Short=_1bde7ab03_Short_CommonFlag_3,
		._1bdeab54b_What=_1bdeab54b_What_CommonFlag_3,
		._1bdeab68e_Reset=_1bdeab68e_Reset_CommonFlag_3,
	},
	{
		._1bde7a9b0_Name=_1bde7a9b0_Name_CommonFlag_4,
		._1bde7ab03_Short=_1bde7ab03_Short_CommonFlag_4,
		._1bdeab54b_What=_1bdeab54b_What_CommonFlag_4,
		._1bdeab68e_Reset=_1bdeab68e_Reset_CommonFlag_4,
	},
};


void __jule_any_type0_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type0_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_any_type0_dealloc, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type0_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type0 && __jule_any_type0_eq(any.data.alloc, (void*)&other); }
void __jule_any_type1_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type1_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_any_type1_dealloc, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type1_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type1 && __jule_any_type1_eq(any.data.alloc, (void*)&other); }
void __jule_any_type2_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other); }
jule::Str __jule_any_type2_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_any_type2_dealloc, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type2_compare(const jule::Any &any, const jule::U64 &other) { return any.type == &__jule_any_type2 && __jule_any_type2_eq(any.data.alloc, (void*)&other); }
void __jule_any_type3_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other); }
jule::Str __jule_any_type3_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_any_type3_dealloc, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type3_compare(const jule::Any &any, const jule::Bool &other) { return any.type == &__jule_any_type3 && __jule_any_type3_eq(any.data.alloc, (void*)&other); }
void __jule_any_type4_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other); }
jule::Str __jule_any_type4_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_any_type4_dealloc, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type4_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type4 && __jule_any_type4_eq(any.data.alloc, (void*)&other); }
void __jule_any_type5_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other); }
jule::Str __jule_any_type5_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_any_type5_dealloc, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type5_compare(const jule::Any &any, const jule::F64 &other) { return any.type == &__jule_any_type5 && __jule_any_type5_eq(any.data.alloc, (void*)&other); }
void __jule_any_type6_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type6_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_any_type6_dealloc, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
jule::Bool __jule_any_type6_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type6 && __jule_any_type6_eq(any.data.alloc, (void*)&other); }
void __jule_any_type7_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ece1de96_FnIns>().dealloc(); }
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_any_type7_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_1ece1de96_FnIns> &other) { return any.type == &__jule_any_type7 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type8_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc7a750d_Var>().dealloc(); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_any_type8_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_1bc7a750d_Var> &other) { return any.type == &__jule_any_type8 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type9_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc5be0b1_StructIns>().dealloc(); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_any_type9_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1bc5be0b1_StructIns> &other) { return any.type == &__jule_any_type9 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type10_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc713a41_Trait>().dealloc(); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_any_type10_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1bc713a41_Trait> &other) { return any.type == &__jule_any_type10 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type11_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc5b710e_Impl>().dealloc(); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_any_type11_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1bc5b710e_Impl> &other) { return any.type == &__jule_any_type11 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type12_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc5b1eb6_TypeAliasDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_any_type12_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1bc5b1eb6_TypeAliasDecl> &other) { return any.type == &__jule_any_type12 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type13_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc5b6262_StructDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_any_type13_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1bc5b6262_StructDecl> &other) { return any.type == &__jule_any_type13 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type14_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc5ac159_FnDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_any_type14_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1bc5ac159_FnDecl> &other) { return any.type == &__jule_any_type14 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type15_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc5b699e_TraitDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_any_type15_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1bc5b699e_TraitDecl> &other) { return any.type == &__jule_any_type15 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type16_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc5ad314_VarDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_any_type16_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1bc5ad314_VarDecl> &other) { return any.type == &__jule_any_type16 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type17_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc5b4617_EnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_any_type17_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1bc5b4617_EnumDecl> &other) { return any.type == &__jule_any_type17 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type18_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc5b55a2_TypeEnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_any_type18_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_1bc5b55a2_TypeEnumDecl> &other) { return any.type == &__jule_any_type18 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type19_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_230d58386_Const>().dealloc(); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_any_type19_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_230d58386_Const> &other) { return any.type == &__jule_any_type19 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type20_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc595c47_IdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_any_type20_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1bc595c47_IdentTypeDecl> &other) { return any.type == &__jule_any_type20 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type21_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc744eb2_Label>().dealloc(); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_any_type21_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1bc744eb2_Label> &other) { return any.type == &__jule_any_type21 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type22_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc74261e_Scope>().dealloc(); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_any_type22_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1bc74261e_Scope> &other) { return any.type == &__jule_any_type22 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type23_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ece16a93_BuiltinErrorCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_any_type23_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1ece16a93_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type23 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type24_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc8108a7_Data>().dealloc(); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_any_type24_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1bc8108a7_Data> &other) { return any.type == &__jule_any_type24 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type25_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ece17c92_BackendEmitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_any_type25_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1ece17c92_BackendEmitExprModel> &other) { return any.type == &__jule_any_type25 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type26_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ece1581c_BuiltinAppendCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_any_type26_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1ece1581c_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type26 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type27_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ece13d59_BuiltinOutCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_any_type27_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1ece13d59_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type27 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type28_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ece14233_BuiltinOutlnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_any_type28_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1ece14233_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type28 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type29_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ece149d6_BuiltinPanicCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_any_type29_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1ece149d6_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type29 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type30_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ece14e8c_BuiltinAssertCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_any_type30_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1ece14e8c_BuiltinAssertCallExprModel> &other) { return any.type == &__jule_any_type30 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type31_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ece166b9_BuiltinCopyCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_any_type31_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1ece166b9_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type31 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type32_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ece162e0_BuiltinDeleteCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_any_type32_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1ece162e0_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type32 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type33_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ece1808e_FreeExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_any_type33_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1ece1808e_FreeExprModel> &other) { return any.type == &__jule_any_type33 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type34_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ece10262_FnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_any_type34_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1ece10262_FnCallExprModel> &other) { return any.type == &__jule_any_type34 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type35_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc743257_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_any_type35_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1bc743257_Conditional> &other) { return any.type == &__jule_any_type35 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type36_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc743554_InfIter>().dealloc(); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_any_type36_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1bc743554_InfIter> &other) { return any.type == &__jule_any_type36 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type37_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc5ae788_WhileKind>().dealloc(); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_any_type37_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1bc5ae788_WhileKind> &other) { return any.type == &__jule_any_type37 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type38_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc743a0a_WhileIter>().dealloc(); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_any_type38_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1bc743a0a_WhileIter> &other) { return any.type == &__jule_any_type38 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type39_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc5b0190_RangeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_any_type39_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1bc5b0190_RangeKind> &other) { return any.type == &__jule_any_type39 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type40_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc744456_RangeIter>().dealloc(); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_any_type40_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1bc744456_RangeIter> &other) { return any.type == &__jule_any_type40 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type41_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc7447db_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_any_type41_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1bc7447db_ContSt> &other) { return any.type == &__jule_any_type41 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type42_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc74538b_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_any_type42_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1bc74538b_GotoSt> &other) { return any.type == &__jule_any_type42 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type43_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc745765_Postfix>().dealloc(); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_any_type43_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1bc745765_Postfix> &other) { return any.type == &__jule_any_type43 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type44_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc745c1b_Assign>().dealloc(); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_any_type44_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1bc745c1b_Assign> &other) { return any.type == &__jule_any_type44 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type45_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ece10ae2_IndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_any_type45_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1ece10ae2_IndexingExprModel> &other) { return any.type == &__jule_any_type45 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type46_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc7460e5_MultiAssign>().dealloc(); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_any_type46_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1bc7460e5_MultiAssign> &other) { return any.type == &__jule_any_type46 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type47_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc746755_Match>().dealloc(); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_any_type47_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1bc746755_Match> &other) { return any.type == &__jule_any_type47 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type48_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc747987_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_any_type48_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1bc747987_FallSt> &other) { return any.type == &__jule_any_type48 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type49_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc744bb5_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_any_type49_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1bc744bb5_BreakSt> &other) { return any.type == &__jule_any_type49 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type50_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc747d1c_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_any_type50_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1bc747d1c_RetSt> &other) { return any.type == &__jule_any_type50 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type51_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc5aa4ba_ScopeTree>().dealloc(); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_any_type51_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1bc5aa4ba_ScopeTree> &other) { return any.type == &__jule_any_type51 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type52_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc599971_Expr>().dealloc(); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_any_type52_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1bc599971_Expr> &other) { return any.type == &__jule_any_type52 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type53_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc5b1779_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_any_type53_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1bc5b1779_Conditional> &other) { return any.type == &__jule_any_type53 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type54_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc5ade5d_Iter>().dealloc(); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_any_type54_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1bc5ade5d_Iter> &other) { return any.type == &__jule_any_type54 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type55_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc5b0943_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_any_type55_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1bc5b0943_ContSt> &other) { return any.type == &__jule_any_type55 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type56_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc5a7a7d_LabelSt>().dealloc(); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_any_type56_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1bc5a7a7d_LabelSt> &other) { return any.type == &__jule_any_type56 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type57_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc5a7e57_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_any_type57_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1bc5a7e57_GotoSt> &other) { return any.type == &__jule_any_type57 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type58_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc5a8e47_AssignSt>().dealloc(); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_any_type58_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1bc5a8e47_AssignSt> &other) { return any.type == &__jule_any_type58 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type59_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc5b2c86_MatchCase>().dealloc(); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_any_type59_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1bc5b2c86_MatchCase> &other) { return any.type == &__jule_any_type59 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type60_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc5a8254_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_any_type60_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1bc5a8254_FallSt> &other) { return any.type == &__jule_any_type60 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type61_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc5b0569_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_any_type61_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1bc5b0569_BreakSt> &other) { return any.type == &__jule_any_type61 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type62_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc5ad6dd_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_any_type62_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1bc5ad6dd_RetSt> &other) { return any.type == &__jule_any_type62 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type63_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc59a345_UseExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_any_type63_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1bc59a345_UseExpr> &other) { return any.type == &__jule_any_type63 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type64_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ece1b092_Fn>().dealloc(); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_any_type64_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1ece1b092_Fn> &other) { return any.type == &__jule_any_type64 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type65_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc5bb333_Struct>().dealloc(); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_any_type65_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1bc5bb333_Struct> &other) { return any.type == &__jule_any_type65 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type66_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc8403cb_TypeAlias>().dealloc(); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_any_type66_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1bc8403cb_TypeAlias> &other) { return any.type == &__jule_any_type66 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type67_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc71624c_Enum>().dealloc(); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_any_type67_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1bc71624c_Enum> &other) { return any.type == &__jule_any_type67 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type68_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc717957_TypeEnum>().dealloc(); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_any_type68_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1bc717957_TypeEnum> &other) { return any.type == &__jule_any_type68 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type69_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc597908_ArrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_any_type69_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1bc597908_ArrTypeDecl> &other) { return any.type == &__jule_any_type69 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type70_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc596a6c_SlcTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_any_type70_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1bc596a6c_SlcTypeDecl> &other) { return any.type == &__jule_any_type70 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type71_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc597166_PtrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_any_type71_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1bc597166_PtrTypeDecl> &other) { return any.type == &__jule_any_type71 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type72_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc5966d7_SptrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_any_type72_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1bc5966d7_SptrTypeDecl> &other) { return any.type == &__jule_any_type72 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type73_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc598156_MapTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_any_type73_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1bc598156_MapTypeDecl> &other) { return any.type == &__jule_any_type73 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type74_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc596d69_TupleTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_any_type74_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1bc596d69_TupleTypeDecl> &other) { return any.type == &__jule_any_type74 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type75_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc59be07_VariadicExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_any_type75_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_1bc59be07_VariadicExpr> &other) { return any.type == &__jule_any_type75 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type76_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ece1063b_SliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_any_type76_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1ece1063b_SliceExprModel> &other) { return any.type == &__jule_any_type76 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type77_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc5a3eec_FieldExprPair>().dealloc(); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_any_type77_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_1bc5a3eec_FieldExprPair> &other) { return any.type == &__jule_any_type77 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type78_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc5a5608_KeyValPair>().dealloc(); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_any_type78_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1bc5a5608_KeyValPair> &other) { return any.type == &__jule_any_type78 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type79_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc59b39b_IdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_any_type79_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1bc59b39b_IdentExpr> &other) { return any.type == &__jule_any_type79 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type80_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc59a642_TupleExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_any_type80_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1bc59a642_TupleExpr> &other) { return any.type == &__jule_any_type80 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type81_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ece13980_TupleExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_any_type81_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_1ece13980_TupleExprModel> &other) { return any.type == &__jule_any_type81 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type82_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ece175bb_RuneExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_any_type82_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1ece175bb_RuneExprModel> &other) { return any.type == &__jule_any_type82 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type83_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc8411bd_TypeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_any_type83_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1bc8411bd_TypeKind> &other) { return any.type == &__jule_any_type83 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type84_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ece13683_ArrayExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_any_type84_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1ece13683_ArrayExprModel> &other) { return any.type == &__jule_any_type84 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type85_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc5a28e1_SubIdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_any_type85_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1bc5a28e1_SubIdentExpr> &other) { return any.type == &__jule_any_type85 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type86_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc596044_SubIdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_any_type86_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1bc596044_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type86 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type87_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc59ba2d_UnaryExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_any_type87_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1bc59ba2d_UnaryExpr> &other) { return any.type == &__jule_any_type87 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type88_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc59563c_TypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_any_type88_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1bc59563c_TypeDecl> &other) { return any.type == &__jule_any_type88 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type89_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc5a254a_NsSelectionExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_any_type89_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1bc5a254a_NsSelectionExpr> &other) { return any.type == &__jule_any_type89 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type90_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc5963da_NamespaceTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_any_type90_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1bc5963da_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type90 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type91_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ece11dce_SlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_any_type91_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1ece11dce_SlicingExprModel> &other) { return any.type == &__jule_any_type91 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type92_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ece0e8b0_CastingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_any_type92_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1ece0e8b0_CastingExprModel> &other) { return any.type == &__jule_any_type92 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type93_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc5a5d01_SliceExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_any_type93_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1bc5a5d01_SliceExpr> &other) { return any.type == &__jule_any_type93 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type94_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ece0e030_StructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_any_type94_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1ece0e030_StructLitExprModel> &other) { return any.type == &__jule_any_type94 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type95_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ece132a9_StructStaticIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_any_type95_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1ece132a9_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type95 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type96_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ece12462_TraitSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_any_type96_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1ece12462_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type96 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type97_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ece12d03_StructSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_any_type97_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1ece12d03_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type97 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type98_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ece1184b_MapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_any_type98_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1ece1184b_MapExprModel> &other) { return any.type == &__jule_any_type98 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type99_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ece10ebb_AnonFnExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_any_type99_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_1ece10ebb_AnonFnExprModel> &other) { return any.type == &__jule_any_type99 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type100_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc599c6d_RangeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_any_type100_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1bc599c6d_RangeExpr> &other) { return any.type == &__jule_any_type100 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type101_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc59aa1b_LitExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_any_type101_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_1bc59aa1b_LitExpr> &other) { return any.type == &__jule_any_type101 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type102_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc59ade5_UnsafeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_any_type102_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1bc59ade5_UnsafeExpr> &other) { return any.type == &__jule_any_type102 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type103_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc5a6791_IndexingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_any_type103_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1bc5a6791_IndexingExpr> &other) { return any.type == &__jule_any_type103 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type104_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc5a6e01_SlicingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_any_type104_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1bc5a6e01_SlicingExpr> &other) { return any.type == &__jule_any_type104 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type105_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc59c2d1_CastExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_any_type105_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1bc59c2d1_CastExpr> &other) { return any.type == &__jule_any_type105 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type106_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc5a4827_StructLit>().dealloc(); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_any_type106_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1bc5a4827_StructLit> &other) { return any.type == &__jule_any_type106 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type107_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc5a3507_FnCallExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_any_type107_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1bc5a3507_FnCallExpr> &other) { return any.type == &__jule_any_type107 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type108_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc5a4ccd_BraceLit>().dealloc(); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_any_type108_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1bc5a4ccd_BraceLit> &other) { return any.type == &__jule_any_type108 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type109_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc5a2d97_BinaryExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_any_type109_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1bc5a2d97_BinaryExpr> &other) { return any.type == &__jule_any_type109 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type110_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ece0d65b_UnaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_any_type110_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1ece0d65b_UnaryExprModel> &other) { return any.type == &__jule_any_type110 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type111_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ece0d282_BinaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_any_type111_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1ece0d282_BinaryExprModel> &other) { return any.type == &__jule_any_type111 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type112_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ece0e32c_AllocStructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_any_type112_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1ece0e32c_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type112 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type113_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ece1460c_BuiltinNewCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_any_type113_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1ece1460c_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type113 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type114_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ece15443_BuiltinMakeCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_any_type114_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1ece15443_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type114 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type115_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ece15b19_BuiltinLenCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_any_type115_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1ece15b19_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type115 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type116_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ece15e16_BuiltinCapCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_any_type116_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_1ece15e16_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type116 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type117_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ece1264e_SizeofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_any_type117_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1ece1264e_SizeofExprModel> &other) { return any.type == &__jule_any_type117 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type118_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ece172be_AlignofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_any_type118_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_1ece172be_AlignofExprModel> &other) { return any.type == &__jule_any_type118 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type119_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ece178b8_IntegratedToStrExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_any_type119_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1ece178b8_IntegratedToStrExprModel> &other) { return any.type == &__jule_any_type119 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type120_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc9c4e67_MutSlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_any_type120_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1bc9c4e67_MutSlicingExprModel> &other) { return any.type == &__jule_any_type120 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type121_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc9c5990_PushToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_any_type121_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1bc9c5990_PushToSliceExprModel> &other) { return any.type == &__jule_any_type121 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type122_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc9c5d69_AppendToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_any_type122_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1bc9c5d69_AppendToSliceExprModel> &other) { return any.type == &__jule_any_type122 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type123_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2d5679_SwapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_any_type123_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1bc2d5679_SwapExprModel> &other) { return any.type == &__jule_any_type123 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type124_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2d5a97_EmptyCompareExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_any_type124_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1bc2d5a97_EmptyCompareExprModel> &other) { return any.type == &__jule_any_type124 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type125_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc9c48d4_StrCompExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_any_type125_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1bc9c48d4_StrCompExprModel> &other) { return any.type == &__jule_any_type125 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type126_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc9c5264_UnsafeBinaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_any_type126_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_1bc9c5264_UnsafeBinaryExprModel> &other) { return any.type == &__jule_any_type126 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type127_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2d5d94_RefExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_any_type127_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1bc2d5d94_RefExprModel> &other) { return any.type == &__jule_any_type127 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type128_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc9c5561_UnsafeIndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_any_type128_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_1bc9c5561_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type128 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type129_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
jule::Bool __jule_any_type129_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other); }
jule::Str __jule_any_type129_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_any_type129_dealloc, .eq=__jule_any_type129_eq, .to_str=__jule_any_type129_to_str};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::U8 &other) { return any.type == &__jule_any_type129 && __jule_any_type129_eq(any.data.alloc, (void*)&other); }
void __jule_any_type130_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
jule::Bool __jule_any_type130_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other); }
jule::Str __jule_any_type130_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_any_type130_dealloc, .eq=__jule_any_type130_eq, .to_str=__jule_any_type130_to_str};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::F32 &other) { return any.type == &__jule_any_type130 && __jule_any_type130_eq(any.data.alloc, (void*)&other); }
void __jule_any_type131_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
jule::Bool __jule_any_type131_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other); }
jule::Str __jule_any_type131_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_any_type131_dealloc, .eq=__jule_any_type131_eq, .to_str=__jule_any_type131_to_str};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::I8 &other) { return any.type == &__jule_any_type131 && __jule_any_type131_eq(any.data.alloc, (void*)&other); }
void __jule_any_type132_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
jule::Bool __jule_any_type132_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other); }
jule::Str __jule_any_type132_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_any_type132_dealloc, .eq=__jule_any_type132_eq, .to_str=__jule_any_type132_to_str};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::I16 &other) { return any.type == &__jule_any_type132 && __jule_any_type132_eq(any.data.alloc, (void*)&other); }
void __jule_any_type133_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
jule::Bool __jule_any_type133_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other); }
jule::Str __jule_any_type133_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_any_type133_dealloc, .eq=__jule_any_type133_eq, .to_str=__jule_any_type133_to_str};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::U16 &other) { return any.type == &__jule_any_type133 && __jule_any_type133_eq(any.data.alloc, (void*)&other); }
void __jule_any_type134_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
jule::Bool __jule_any_type134_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other); }
jule::Str __jule_any_type134_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_any_type134_dealloc, .eq=__jule_any_type134_eq, .to_str=__jule_any_type134_to_str};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::U32 &other) { return any.type == &__jule_any_type134 && __jule_any_type134_eq(any.data.alloc, (void*)&other); }
jule::Array<jule::Array<jule::Str,2>,5> _1eeeabd9a_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str::lit("help", 4),jule::Str::lit("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str::lit("version", 7),jule::Str::lit("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str::lit("tool", 4),jule::Str::lit("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str::lit("julenv", 6),jule::Str::lit("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str::lit("mod", 3),jule::Str::lit("Module management", 17)})});
jule::Str _1bdeb3366_OutDir = jule::Str::lit("dist", 4);
jule::Str _1bdeb3663_OutName = jule::Str::lit("ir.cpp", 6);
jule::Str _1bdeb392c_Out = jule::Str();
jule::Str _23b848860_Compiler = jule::Str();
jule::Str _23b849be6_CompilerPath = jule::Str();
jule::Str _23b849e49_CppStd = jule::Str::lit("cpp17", 5);
jule::Bool _23b84a1d0_Shadowing = false;
jule::Bool _23b84a499_Transpilation = false;
jule::Bool _23b84a763_Test = false;
jule::Bool _23b84aa2c_RC = true;
jule::Bool _23b84ae06_Safety = true;
jule::Bool _23b84b1c0_Production = false;
jule::Uintptr _230a28034_STDIN = _230a28809_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551606LLU));
jule::Uintptr _230a282ed_STDOUT = _230a28809_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551605LLU));
jule::Uintptr _230a28584_STDERR = _230a28809_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551604LLU));
jule::Array<jule::U8,256> _2095d044d_first = jule::Array<jule::U8,256>({});
jule::Array<_2095d09d1_acceptRange,16> _2095d0cde_acceptRanges = jule::Array<_2095d09d1_acceptRange,16>({_2095d09d1_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_2095d09d1_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_2095d09d1_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_2095d09d1_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_2095d09d1_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Ptr<_1ed5e0c94_RangeTable> _1ed57b559__L = jule::new_ptr<_1ed5e0c94_RangeTable>(_1ed5e0c94_RangeTable{._field_R16=jule::Slice<_1ed5e02b0_Range16>::make({_1ed5e02b0_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_1ed5e02b0_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_1ed5e02b0_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_1ed5e02b0_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_1ed5e02b0_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_1ed5e02b0_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_1ed5e02b0_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_1ed5e02b0_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_1ed5e02b0_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_1ed5e02b0_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_1ed5e02b0_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_1ed5e02b0_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_1ed5e02b0_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_1ed5e02b0_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_1ed5e02b0_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_1ed5e02b0_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_1ed5e02b0_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_1ed5e02b0_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_1ed5e02b0_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_1ed5e02b0_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_1ed5e02b0_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_1ed5e02b0_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_1ed5e02b0_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_1ed5e02b0_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_1ed5e02b0_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_1ed5e02b0_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_1ed5e02b0_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_1ed5e02b0_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_1ed5e02b0_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_1ed5e02b0_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_1ed5e02b0_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_1ed5e02b0_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_1ed5e02b0_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_1ed5e02b0_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_1ed5e02b0_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_1ed5e02b0_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_1ed5e02b0_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_1ed5e02b0_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_1ed5e02b0_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_1ed5e02b0_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_1ed5e02b0_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_1ed5e02b0_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_1ed5e02b0_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_1ed5e02b0_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_1ed5e02b0_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_1ed5e02b0_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_1ed5e02b0_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_1ed5e02b0_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_1ed5e02b0_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_1ed5e02b0_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_1ed5e02b0_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_1ed5e02b0_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_1ed5e02b0_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_1ed5e02b0_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_1ed5e02b0_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_1ed5e02b0_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_1ed5e02b0_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_1ed5e02b0_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_1ed5e02b0_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_1ed5e02b0_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_1ed5e07dd_Range32>::make({_1ed5e07dd_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_1ed5e07dd_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_1ed5e07dd_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_1ed5e07dd_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_1ed5e07dd_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_1ed5e07dd_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_1ed5e07dd_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_1ed5e07dd_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_1ed5e07dd_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_1ed5e07dd_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_1ed5e07dd_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_1ed5e07dd_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_1ed5e07dd_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_1ed5e07dd_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_1ed5e07dd_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_1ed5e07dd_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_1ed5e07dd_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_1ed5e07dd_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_1ed5e07dd_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_1ed5e07dd_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_1ed5e07dd_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_1ed5e07dd_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_1ed5e07dd_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_1ed5e07dd_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_1ed5e07dd_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_1ed5e07dd_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_1ed5e07dd_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_1ed5e07dd_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_1ed5e07dd_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_1ed5e07dd_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_1ed5e07dd_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_1ed5e07dd_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_1ed5e07dd_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_1ed5e07dd_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_1ed5e07dd_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_1ed5e07dd_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_1ed5e07dd_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_1ed5e07dd_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_1ed5e07dd_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_1ed5e07dd_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_1ed5e07dd_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_1ed5e07dd_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_1ed5e07dd_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_1ed5e0c94_RangeTable> _1ed57c549__LU = jule::new_ptr<_1ed5e0c94_RangeTable>(_1ed5e0c94_RangeTable{._field_R16=jule::Slice<_1ed5e02b0_Range16>::make({_1ed5e02b0_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_1ed5e02b0_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_1ed5e02b0_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_1ed5e02b0_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_1ed5e02b0_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_1ed5e02b0_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_1ed5e02b0_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_1ed5e02b0_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_1ed5e02b0_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_1ed5e02b0_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_1ed5e02b0_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_1ed5e02b0_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_1ed5e02b0_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_1ed5e02b0_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_1ed5e02b0_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_1ed5e02b0_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_1ed5e02b0_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_1ed5e07dd_Range32>::make({_1ed5e07dd_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_1ed5e07dd_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_1ed5e07dd_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_1ed5e07dd_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_1ed5e07dd_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_1ed5e07dd_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_1ed5e07dd_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Array<jule::U8,256> _1ed5d95c8__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::Str,4> _1ed647801_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str::lit(".h", 2),jule::Str::lit(".hpp", 4),jule::Str::lit(".hxx", 4),jule::Str::lit(".hh", 3)});
jule::Array<jule::Str,3> _1ed647900_CppExts = jule::Array<jule::Str,3>({jule::Str::lit(".cpp", 4),jule::Str::lit(".cc", 3),jule::Str::lit(".cxx", 4)});
jule::Array<jule::Str,1> _1ed6b86c9_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str::lit(".mm", 3)});
jule::Str _1eeea8094_PathStdlib = jule::Str();
jule::Str _1eeea82e7_PathExec = jule::Str();
jule::Str _1eeea85a0_PathWd = jule::Str();
jule::Str _1eeea88ad_PathApi = jule::Str();
jule::Str _1eeea8b77_Os = jule::Str::lit("windows", 7);
jule::Str _1eeea8e41_Arch = jule::Str::lit("arm64", 5);
jule::Array<jule::U8,32> _230cdb8ad__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _230cdbe74__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_230d320b8_floatInfo _230d324b4_f32info = _230d320b8_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_230d320b8_floatInfo _230d327c2_f64info = _230d320b8_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _230d3a269_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _230d3c0c3_powtab = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _230d3cb95_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _230d3ced6_f32pow10 = jule::Slice<jule::F32>::make({1.0f,10.0f,100.0f,1000.0f,10000.0f,100000.0f,1000000.0f,10000000.0f,100000000.0f,1000000000.0f,10000000000.0f});
jule::Array<jule::U64,20> _230d4124d_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_230d45021_leftCheat> _230d45450_leftCheats = jule::Slice<_230d45021_leftCheat>::make({_230d45021_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_230d45021_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("5", 1)},_230d45021_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("25", 2)},_230d45021_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("125", 3)},_230d45021_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("625", 3)},_230d45021_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("3125", 4)},_230d45021_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("15625", 5)},_230d45021_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("78125", 5)},_230d45021_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("390625", 6)},_230d45021_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("1953125", 7)},_230d45021_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("9765625", 7)},_230d45021_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("48828125", 8)},_230d45021_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("244140625", 9)},_230d45021_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("1220703125", 10)},_230d45021_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("6103515625", 10)},_230d45021_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("30517578125", 11)},_230d45021_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("152587890625", 12)},_230d45021_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("762939453125", 12)},_230d45021_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("3814697265625", 13)},_230d45021_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("19073486328125", 14)},_230d45021_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("95367431640625", 14)},_230d45021_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("476837158203125", 15)},_230d45021_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("2384185791015625", 16)},_230d45021_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("11920928955078125", 17)},_230d45021_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("59604644775390625", 17)},_230d45021_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("298023223876953125", 18)},_230d45021_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("1490116119384765625", 19)},_230d45021_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("7450580596923828125", 19)},_230d45021_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("37252902984619140625", 20)},_230d45021_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("186264514923095703125", 21)},_230d45021_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("931322574615478515625", 21)},_230d45021_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("4656612873077392578125", 22)},_230d45021_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("23283064365386962890625", 23)},_230d45021_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("116415321826934814453125", 24)},_230d45021_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("582076609134674072265625", 24)},_230d45021_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("2910383045673370361328125", 25)},_230d45021_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("14551915228366851806640625", 26)},_230d45021_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("72759576141834259033203125", 26)},_230d45021_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("363797880709171295166015625", 27)},_230d45021_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("1818989403545856475830078125", 28)},_230d45021_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("9094947017729282379150390625", 28)},_230d45021_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("45474735088646411895751953125", 29)},_230d45021_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("227373675443232059478759765625", 30)},_230d45021_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("1136868377216160297393798828125", 31)},_230d45021_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("5684341886080801486968994140625", 31)},_230d45021_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("28421709430404007434844970703125", 32)},_230d45021_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("142108547152020037174224853515625", 33)},_230d45021_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("710542735760100185871124267578125", 33)},_230d45021_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("3552713678800500929355621337890625", 34)},_230d45021_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("17763568394002504646778106689453125", 35)},_230d45021_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("88817841970012523233890533447265625", 35)},_230d45021_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("444089209850062616169452667236328125", 36)},_230d45021_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("2220446049250313080847263336181640625", 37)},_230d45021_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("11102230246251565404236316680908203125", 38)},_230d45021_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("55511151231257827021181583404541015625", 38)},_230d45021_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("277555756156289135105907917022705078125", 39)},_230d45021_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("1387778780781445675529539585113525390625", 40)},_230d45021_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("6938893903907228377647697925567626953125", 40)},_230d45021_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("34694469519536141888238489627838134765625", 41)},_230d45021_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("173472347597680709441192448139190673828125", 42)},_230d45021_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str::lit("867361737988403547205962240695953369140625", 42)}});
jule::I64 _230d4b566_BitSize = 0LL;
jule::Str _230d4b874_SysInt = jule::Str();
jule::Str _230d4bb3d_SysUint = jule::Str();
jule::Array<jule::I32,5> _1bc4d9471_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::U64,6> _1bc4d9691_UnaryOps = jule::Array<jule::U64,6>({static_cast<jule::U64>(61LLU),static_cast<jule::U64>(60LLU),static_cast<jule::U64>(67LLU),static_cast<jule::U64>(68LLU),static_cast<jule::U64>(62LLU),static_cast<jule::U64>(65LLU)});
jule::Array<jule::U64,18> _1bc4d9938_BinOps = jule::Array<jule::U64,18>({static_cast<jule::U64>(60LLU),static_cast<jule::U64>(61LLU),static_cast<jule::U64>(62LLU),static_cast<jule::U64>(63LLU),static_cast<jule::U64>(64LLU),static_cast<jule::U64>(65LLU),static_cast<jule::U64>(66LLU),static_cast<jule::U64>(67LLU),static_cast<jule::U64>(56LLU),static_cast<jule::U64>(57LLU),static_cast<jule::U64>(69LLU),static_cast<jule::U64>(70LLU),static_cast<jule::U64>(53LLU),static_cast<jule::U64>(52LLU),static_cast<jule::U64>(54LLU),static_cast<jule::U64>(55LLU),static_cast<jule::U64>(50LLU),static_cast<jule::U64>(51LLU)});
jule::Array<jule::U64,2> _1bc57d05e_PostfixOps = jule::Array<jule::U64,2>({static_cast<jule::U64>(58LLU),static_cast<jule::U64>(59LLU)});
jule::Array<jule::U64,11> _1bc57d35b_AssignOps = jule::Array<jule::U64,11>({static_cast<jule::U64>(71LLU),static_cast<jule::U64>(40LLU),static_cast<jule::U64>(41LLU),static_cast<jule::U64>(43LLU),static_cast<jule::U64>(42LLU),static_cast<jule::U64>(44LLU),static_cast<jule::U64>(46LLU),static_cast<jule::U64>(45LLU),static_cast<jule::U64>(49LLU),static_cast<jule::U64>(48LLU),static_cast<jule::U64>(47LLU)});
jule::Array<_1bc58b48a_kindPair,28> _1bc58b8b9_keywords = jule::Array<_1bc58b48a_kindPair,28>({_1bc58b48a_kindPair{._field_kind=jule::Str::lit("const", 5), ._field_id=static_cast<jule::U64>(6LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("ret", 3), ._field_id=static_cast<jule::U64>(2LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("type", 4), ._field_id=static_cast<jule::U64>(7LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("for", 3), ._field_id=static_cast<jule::U64>(9LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("break", 5), ._field_id=static_cast<jule::U64>(10LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("continue", 8), ._field_id=static_cast<jule::U64>(11LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("in", 2), ._field_id=static_cast<jule::U64>(12LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("if", 2), ._field_id=static_cast<jule::U64>(13LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("else", 4), ._field_id=static_cast<jule::U64>(14LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("use", 3), ._field_id=static_cast<jule::U64>(16LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("goto", 4), ._field_id=static_cast<jule::U64>(18LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("enum", 4), ._field_id=static_cast<jule::U64>(20LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("struct", 6), ._field_id=static_cast<jule::U64>(21LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("co", 2), ._field_id=static_cast<jule::U64>(22LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("match", 5), ._field_id=static_cast<jule::U64>(23LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("self", 4), ._field_id=static_cast<jule::U64>(24LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("trait", 5), ._field_id=static_cast<jule::U64>(25LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("impl", 4), ._field_id=static_cast<jule::U64>(26LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("cpp", 3), ._field_id=static_cast<jule::U64>(27LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("fall", 4), ._field_id=static_cast<jule::U64>(28LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("fn", 2), ._field_id=static_cast<jule::U64>(29LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("let", 3), ._field_id=static_cast<jule::U64>(30LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("unsafe", 6), ._field_id=static_cast<jule::U64>(31LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("mut", 3), ._field_id=static_cast<jule::U64>(32LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("defer", 5), ._field_id=static_cast<jule::U64>(33LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("static", 6), ._field_id=static_cast<jule::U64>(34LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("error", 5), ._field_id=static_cast<jule::U64>(36LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("map", 3), ._field_id=static_cast<jule::U64>(37LLU)}});
jule::Array<_1bc58b48a_kindPair,46> _1bc58bc0a_basicOps = jule::Array<_1bc58b48a_kindPair,46>({_1bc58b48a_kindPair{._field_kind=jule::Str::lit("::", 2), ._field_id=static_cast<jule::U64>(19LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit(":=", 2), ._field_id=static_cast<jule::U64>(38LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit(":", 1), ._field_id=static_cast<jule::U64>(8LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit(";", 1), ._field_id=static_cast<jule::U64>(3LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit(",", 1), ._field_id=static_cast<jule::U64>(5LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("...", 3), ._field_id=static_cast<jule::U64>(39LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit(".", 1), ._field_id=static_cast<jule::U64>(17LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("+=", 2), ._field_id=static_cast<jule::U64>(40LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("-=", 2), ._field_id=static_cast<jule::U64>(41LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("*=", 2), ._field_id=static_cast<jule::U64>(42LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("/=", 2), ._field_id=static_cast<jule::U64>(43LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("%=", 2), ._field_id=static_cast<jule::U64>(44LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("<<=", 3), ._field_id=static_cast<jule::U64>(45LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit(">>=", 3), ._field_id=static_cast<jule::U64>(46LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("^=", 2), ._field_id=static_cast<jule::U64>(47LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("&=", 2), ._field_id=static_cast<jule::U64>(48LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("|=", 2), ._field_id=static_cast<jule::U64>(49LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("==", 2), ._field_id=static_cast<jule::U64>(50LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("!=", 2), ._field_id=static_cast<jule::U64>(51LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit(">=", 2), ._field_id=static_cast<jule::U64>(52LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("<=", 2), ._field_id=static_cast<jule::U64>(53LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("&&", 2), ._field_id=static_cast<jule::U64>(54LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("||", 2), ._field_id=static_cast<jule::U64>(55LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("<<", 2), ._field_id=static_cast<jule::U64>(56LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit(">>", 2), ._field_id=static_cast<jule::U64>(57LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("++", 2), ._field_id=static_cast<jule::U64>(58LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("--", 2), ._field_id=static_cast<jule::U64>(59LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("+", 1), ._field_id=static_cast<jule::U64>(60LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("-", 1), ._field_id=static_cast<jule::U64>(61LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("*", 1), ._field_id=static_cast<jule::U64>(62LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("/", 1), ._field_id=static_cast<jule::U64>(63LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("%", 1), ._field_id=static_cast<jule::U64>(64LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("&", 1), ._field_id=static_cast<jule::U64>(65LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("|", 1), ._field_id=static_cast<jule::U64>(66LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("^", 1), ._field_id=static_cast<jule::U64>(67LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("!", 1), ._field_id=static_cast<jule::U64>(68LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("<", 1), ._field_id=static_cast<jule::U64>(69LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit(">", 1), ._field_id=static_cast<jule::U64>(70LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("=", 1), ._field_id=static_cast<jule::U64>(71LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("#", 1), ._field_id=static_cast<jule::U64>(35LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("{", 1), ._field_id=static_cast<jule::U64>(72LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("}", 1), ._field_id=static_cast<jule::U64>(73LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("[", 1), ._field_id=static_cast<jule::U64>(76LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("]", 1), ._field_id=static_cast<jule::U64>(77LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit("(", 1), ._field_id=static_cast<jule::U64>(74LLU)},_1bc58b48a_kindPair{._field_kind=jule::Str::lit(")", 1), ._field_id=static_cast<jule::U64>(75LLU)}});
jule::Slice<jule::Str> _1bc739517_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str::lit("signed", 6),jule::Str::lit("unsigned", 8),jule::Str::lit("float", 5),jule::Str::lit("numeric", 7),jule::Str::lit("mutable", 7),jule::Str::lit("immutable", 9),jule::Str::lit("ordered", 7),jule::Str::lit("comparable", 10)});
jule::Ptr<_1bc8411bd_TypeKind> _1bc2c39ca_primNil = jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=nullptr});
jule::Ptr<_1bc8411bd_TypeKind> _1bc2c3cd8_primVoid = jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(_1bc85d0db_buildPrimType(jule::Str::lit("void", 4)), 20)});
jule::Ptr<_1bc8411bd_TypeKind> _1bc2c40a2_primAny = jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(_1bc85d0db_buildPrimType(jule::Str::lit("any", 3)), 20)});
jule::Ptr<_1bc8411bd_TypeKind> _1bc2c43b0_primStr = jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(_1bc85d0db_buildPrimType(jule::Str::lit("str", 3)), 20)});
jule::Ptr<_1bc8411bd_TypeKind> _1bc2c4679_primBool = jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(_1bc85d0db_buildPrimType(jule::Str::lit("bool", 4)), 20)});
jule::Ptr<_1bc8411bd_TypeKind> _1bc2c4943_primUintptr = jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(_1bc85d0db_buildPrimType(jule::Str::lit("uintptr", 7)), 20)});
jule::Ptr<_1bc8411bd_TypeKind> _1bc2c4c0c_primUint = jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(_1bc85d0db_buildPrimType(jule::Str::lit("uint", 4)), 20)});
jule::Ptr<_1bc8411bd_TypeKind> _1bc2c50d6_primInt = jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(_1bc85d0db_buildPrimType(jule::Str::lit("int", 3)), 20)});
jule::Ptr<_1bc8411bd_TypeKind> _1bc2c53a0_primI8 = jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(_1bc85d0db_buildPrimType(jule::Str::lit("i8", 2)), 20)});
jule::Ptr<_1bc8411bd_TypeKind> _1bc2c5669_primI16 = jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(_1bc85d0db_buildPrimType(jule::Str::lit("i16", 3)), 20)});
jule::Ptr<_1bc8411bd_TypeKind> _1bc2c5933_primI32 = jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(_1bc85d0db_buildPrimType(jule::Str::lit("i32", 3)), 20)});
jule::Ptr<_1bc8411bd_TypeKind> _1bc2c5bec_primI64 = jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(_1bc85d0db_buildPrimType(jule::Str::lit("i64", 3)), 20)});
jule::Ptr<_1bc8411bd_TypeKind> _1bc2c5eb6_primU8 = jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(_1bc85d0db_buildPrimType(jule::Str::lit("u8", 2)), 20)});
jule::Ptr<_1bc8411bd_TypeKind> _1bc2c6280_primU16 = jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(_1bc85d0db_buildPrimType(jule::Str::lit("u16", 3)), 20)});
jule::Ptr<_1bc8411bd_TypeKind> _1bc2c6549_primU32 = jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(_1bc85d0db_buildPrimType(jule::Str::lit("u32", 3)), 20)});
jule::Ptr<_1bc8411bd_TypeKind> _1bc2c69bc_primU64 = jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(_1bc85d0db_buildPrimType(jule::Str::lit("u64", 3)), 20)});
jule::Ptr<_1bc8411bd_TypeKind> _1bc2c6c86_primF32 = jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(_1bc85d0db_buildPrimType(jule::Str::lit("f32", 3)), 20)});
jule::Ptr<_1bc8411bd_TypeKind> _1bc2c7050_primF64 = jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(_1bc85d0db_buildPrimType(jule::Str::lit("f64", 3)), 20)});
jule::Bool _1bc9d6b9e_Copy = false;
jule::Bool _1bc9d6eac_Deadcode = false;
jule::Bool _1bc9d7276_Append = false;
jule::Bool _1bc9d7584_Math = false;
jule::Bool _1bc9d784d_Access = false;
jule::Bool _1bc9d7b17_Inline = false;
jule::Bool _1bc9d7dd1_Ptr = false;
jule::Bool _1bc9d82aa_Cond = false;
jule::Bool _1bc9d8574_Str = false;
jule::Bool _1bc9d883d_Slice = false;
jule::Bool _1bc9d8b07_Assign = false;
jule::Bool _1bd14908b_exprEnabled = false;
jule::Bool _1bd149388_scopeEnabled = false;
jule::Array<jule::U64,12> _1bcc8072d_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Str _1bd5a244a_assignArgName = jule::Str::lit("__jule_assign_arg", 17);
jule::Ptr<_1ed5e0c94_RangeTable> _1ed589c4e_Upper = _1ed57c549__LU;
jule::Ptr<_1ed5e0c94_RangeTable> _1ed5836e8_Letter = _1ed57b559__L;



std::ostream &operator<<(std::ostream &_Stream, _2095d09d1_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline _2096a4489_StrBuilder static__2096a48da_New(jule::I64 _1519_cap) {
	if ((_1519_cap < 0LL)) {
		jule::panic(jule::Str::lit("std::strings: StrBuilder.New: cap < 0", 37) + jule::Str("\nlocation: std/internal/strings/builder.jule:17:13"));;
	};
	return _2096a4489_StrBuilder{._field_buf=jule::Slice<jule::U8>::alloc(0LL, _1519_cap, 0)};;
}



inline void _2096a4b93_Write(_2096a4489_StrBuilder* _self_, jule::Slice<jule::U8> _2524_b) {
	((*(_self_))._field_buf).append(_2524_b);;
}



inline void _2096a4e4b_WriteStr(_2096a4489_StrBuilder* _self_, jule::Str _3027_s) {
	((*(_self_))._field_buf).append(_2096a3620_StrBytes(_3027_s));;
}



inline void _2096a5204_WriteByte(_2096a4489_StrBuilder* _self_, jule::U8 _3528_b) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(_3528_b); };
}



inline jule::Str _2096a5743_Str(_2096a4489_StrBuilder* _self_) {
	jule::Str _5013_s = _2096a3ba3_StrFromBytes((*(_self_))._field_buf);;
	_2096a5941_Clear(_self_);
	return _5013_s;;
}



inline void _2096a5941_Clear(_2096a4489_StrBuilder* _self_) {
	(*(_self_))._field_buf=nullptr;
}



inline jule::I64 _2096a5bc7_Len(_2096a4489_StrBuilder* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_buf.len());;
}



inline jule::Slice<jule::U8> _2096a61e4_Buf(_2096a4489_StrBuilder* _self_) {
	return (*(_self_))._field_buf;;
}



inline void _2096a649c_SetBuf(_2096a4489_StrBuilder* _self_, jule::Slice<jule::U8> _7736_buf) {
	(*(_self_))._field_buf=_7736_buf;
}





std::ostream &operator<<(std::ostream &_Stream, _2096a4489_StrBuilder _Src) {
	_Stream << "StrBuilder{";
	_Stream << "buf:" << _Src._field_buf;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ed5e02b0_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ed5e07dd_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ed5e0c94_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1ed643995_index(_1ed643511_lazyBuff* _self_, jule::I64 _5524_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5524_i];;
	};
	return (*(_self_))._field_path[_5524_i];;
}



inline void _1ed643c4d_append(_1ed643511_lazyBuff* _self_, jule::U8 _6225_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6225_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len(), 0);
		jule::copy(((*(_self_))._field_buff), ((*(_self_))._field_path.slice(0LL, (*(_self_))._field_w)).fake_slice());
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6225_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _1ed643ed4_string(_1ed643511_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + _2096a38d9_BytesStr((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}





std::ostream &operator<<(std::ostream &_Stream, _1ed643511_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _230a4148c_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_230a4148c_DirEntry>>> static__1ed646316_Read(jule::Str _1520_path) {
	jule::Slice<jule::Ptr<_230a4148c_DirEntry>> __jule_func_result;
	jule::Slice<jule::U16> _169_utf16Path = _2309ee170_UTF16FromStr(_1ed644c2c_Join(jule::Slice<jule::Str>::make({_1520_path,jule::Str::lit("*", 1)})));;
	WIN32_FIND_DATAW _1713_data = (WIN32_FIND_DATAW){};;
	jule::Uintptr _189_handle = _230a2c555_FindFirstFile((&(_169_utf16Path[0LL])), (&(_1713_data)));;
	if ((_189_handle == jule::MAX_U64)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_230a4148c_DirEntry>>>{.result=__jule_func_result};;
	};
	for (;;) {
		{
			jule::Ptr<_230a4148c_DirEntry> _2317_entry = jule::new_ptr<_230a4148c_DirEntry>(_230a4148c_DirEntry{._field_Name=_2309ee747_U16PtrToStr(((jule::U16*)(_1713_data.cFileName))), });;
			(*(_2317_entry))._field_Stat=({
				auto except = static__1ed647218_Of(_1ed644c2c_Join(jule::Slice<jule::Str>::make({_1520_path,(*(_2317_entry))._field_Name})));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_230a4148c_DirEntry>>>{.error=except.error};
				} jule::Ptr<_230a44a56_Status>(nullptr);});
			});
			{ jule::Slice<jule::Ptr<_230a4148c_DirEntry>> &__jule_push_dest = __jule_func_result; __jule_push_dest.push(_2317_entry); };
			if ((_230a2c8c9_FindNextFile(_189_handle, (&(_1713_data))) == 0LL)) {
				goto _iter_end_1c034289d;
			};
		}
	_iter_next_1c034289d:;
	}
	_iter_end_1c034289d:;;
	_230a2cb93_FindClose(_189_handle);
	return jule::Exceptional<jule::Slice<jule::Ptr<_230a4148c_DirEntry>>>{.result=__jule_func_result};;
}



inline jule::VoidExceptional static__1ed646547_Create(jule::Str _3922_path) {
	jule::Slice<jule::U16> _449_utf16Path = _2309ee170_UTF16FromStr(_3922_path);;
	if ((!(_230a2a256_CreateDirectory((&(_449_utf16Path[0LL])))))) {
		return jule::VoidExceptional{.error=jule::Any(_230a40d3d_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional static__1ed646778_Remove(jule::Str _5322_path) {
	jule::Slice<jule::U16> _549_utf16Path = _2309ee170_UTF16FromStr(_5322_path);;
	if ((!(_230a2a520_RemoveDirectory((&(_549_utf16Path[0LL])))))) {
		return jule::VoidExceptional{.error=jule::Any(_230a40d3d_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}





std::ostream &operator<<(std::ostream &_Stream, _230a41701_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_230a42922_File> static__230a42d40_New(jule::Uintptr _4519_handle) {
	return jule::new_ptr<_230a42922_File>(_230a42922_File{._field_handle=_4519_handle});;
}



inline jule::Exceptional<jule::Ptr<_230a42922_File>> static__230a43109_Create(jule::Str _5522_path) {
	return jule::Exceptional<jule::Ptr<_230a42922_File>>{.result=({
		auto except = static__2095d4694_Open(_5522_path, static_cast<jule::I64>(770LL), 438LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Ptr<_230a42922_File>>{.error=except.error};
		} jule::Ptr<_230a42922_File>(nullptr);});
	})};;
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__230a433c3_Read(jule::Str _6720_path) {
	jule::Ptr<_230a44a56_Status> _689_s = ({
		auto except = static__1ed647218_Of(_6720_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} jule::Ptr<_230a44a56_Status>(nullptr);});
	});;
	if ((!(_230a451b6_IsReg(_689_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>{.error=jule::Any(static_cast<jule::I64>(14LL), &__jule_any_type0)};
	};
	if ((_230a4544c_Size(_689_s.ptr()) == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>{.result=jule::Slice<jule::U8>::alloc(0LL, 0LL, 0)};;
	};
	jule::Ptr<_230a42922_File> _7813_f = ({
		auto except = static__2095d4694_Open(_6720_path, static_cast<jule::I64>(0LL), 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} jule::Ptr<_230a42922_File>(nullptr);});
	});;
	__JULE_DEFER({
		({
			auto except = _230a43ea6_Close(_7813_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:79:17"));
		});
	});;
	jule::Slice<jule::U8> _8113_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_230a4544c_Size(_689_s.ptr())), static_cast<jule::I64>(_230a4544c_Size(_689_s.ptr())), 0);;
	jule::I64 _829_n = ({
		auto except = _2095d519a_Read(_7813_f.ptr(), _8113_buff);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} 0;});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>{.result=_8113_buff.slice(0LL, _829_n)};;
}



inline jule::VoidExceptional static__230a43769_Write(jule::Str _9121_path, jule::Slice<jule::U8> _9132_data, jule::I64 _9146_perm) {
	jule::Ptr<_230a42922_File> _9213_f = ({
		auto except = static__2095d4694_Open(_9121_path, static_cast<jule::I64>(769LL), _9146_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional{.error=std::move(except.error)};
		} jule::Ptr<_230a42922_File>(nullptr);});
	});;
	({
		auto except = _2095d4d59_Write(_9213_f.ptr(), _9132_data);
		if (!except.ok()) {
			return jule::VoidExceptional{.error=std::move(except.error)};
		}
	});
	({
		auto except = _230a43ea6_Close(_9213_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional{.error=std::move(except.error)};
		}
	});
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _230a43ea6_Close(_230a42922_File* _self_) {
	if ((_230a3014b_Close(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle))) == -1LL)) {
		return jule::VoidExceptional{.error=jule::Any(_230a40d3d_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::Ptr<_230a42922_File>> static__2095d4694_Open(jule::Str _2120_path, jule::I64 _2131_flag, jule::I64 _2144_mode) {
	jule::Slice<jule::U16> _229_utf16Path = _2309ee170_UTF16FromStr(_2120_path);;
	jule::I64 _239_handle = _230a29376_Wopen((&(_229_utf16Path[0LL])), static_cast<jule::I64>(_2131_flag), _2144_mode);;
	if ((_239_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_230a42922_File>>{.error=jule::Any(_230a40d3d_getLastFsError(), &__jule_any_type0)};
	};
	return jule::Exceptional<jule::Ptr<_230a42922_File>>{.result=static__230a42d40_New(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_239_handle)))};;
}



inline jule::VoidExceptional static__2095d48c5_Remove(jule::Str _3422_path) {
	jule::Slice<jule::U16> _359_utf16Path = _2309ee170_UTF16FromStr(_3422_path);;
	if ((!(_230a29e8c_DeleteFile((&(_359_utf16Path[0LL])))))) {
		return jule::VoidExceptional{.error=jule::Any(_230a40d3d_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _2095d4d59_Write(_230a42922_File* _self_, jule::Slice<jule::U8> _4924_buf) {
	jule::I64 __jule_func_result = 0;
	if ((_4924_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	if (_2095d551e_isConsoleHandle((*(_self_))._field_handle)) {
		jule::Slice<jule::U16> _5513_utf16Buf = _2309ee170_UTF16FromStr(static_cast<jule::Str>(_4924_buf));;
		jule::Bool _5613_ok = _230a2b9d8_WriteConsole((*(_self_))._field_handle, (&(_5513_utf16Buf[0LL])), static_cast<jule::I64>(_5513_utf16Buf.len()), &(__jule_func_result), nullptr);;
		if ((!(_5613_ok))) {
			return jule::Exceptional<jule::I64>{.error=jule::Any(_230a40d3d_getLastFsError(), &__jule_any_type0)};
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	__jule_func_result=static_cast<jule::I64>(_230a3057a_Write(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle)), (&(_4924_buf[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_4924_buf.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_230a40d3d_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
}



inline jule::Exceptional<jule::I64> _2095d519a_Read(_230a42922_File* _self_, jule::Slice<jule::U8> _7927_buf) {
	jule::I64 __jule_func_result = 0;
	if ((_7927_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	if (_2095d551e_isConsoleHandle((*(_self_))._field_handle)) {
		jule::Slice<jule::U16> _8517_codepage = jule::Slice<jule::U16>::alloc(_7927_buf.len(), _7927_buf.len(), 0);;
		jule::Bool _8613_ok = _230a2bec2_ReadConsole((*(_self_))._field_handle, (&(_8517_codepage[0LL])), static_cast<jule::I64>(_7927_buf.len()), &(__jule_func_result));;
		if ((!(_8613_ok))) {
			return jule::Exceptional<jule::I64>{.error=jule::Any(_230a40d3d_getLastFsError(), &__jule_any_type0)};
		};
		jule::Slice<jule::I32> _9113_runes = _2309edacb_Decode(_8517_codepage.slice(0LL, __jule_func_result));;
		__jule_func_result=0LL;
		{
			auto expr = &(_9113_runes);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c0359d16:;
			if (it != expr_end) {
				jule::I32 *_9320_r = it;
				{
					jule::I64 _9417_size = _2095d2285_RuneLen((*(_9320_r)));;
					if (((__jule_func_result + _9417_size) > _7927_buf.len())) {
						goto _iter_end_1c0359d16;
					};
					_2095d26d6_EncodeRune(_7927_buf.slice(__jule_func_result), (*(_9320_r)));
					__jule_func_result+=_9417_size;
				}
				_iter_next_1c0359d16:;
				++it;
				goto _iter_begin_1c0359d16;
			}
			_iter_end_1c0359d16:;
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	__jule_func_result=static_cast<jule::I64>(_230a2eca5_Read(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle)), (&(_7927_buf[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_7927_buf.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_230a40d3d_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
}





std::ostream &operator<<(std::ostream &_Stream, _230a42922_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _230a44e30_IsDir(_230a44a56_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL));;
}



inline jule::Bool _230a451b6_IsReg(_230a44a56_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(2LL)) == static_cast<jule::I64>(2LL));;
}



inline jule::U64 _230a4544c_Size(_230a44a56_Status* _self_) {
	return (*(_self_))._field_size;;
}



inline jule::Exceptional<jule::Ptr<_230a44a56_Status>> static__1ed647218_Of(jule::Str _1218_path) {
	if ((_1218_path).empty()) {
		return jule::Exceptional<jule::Ptr<_230a44a56_Status>>{.error=jule::Any(static_cast<jule::I64>(4LL), &__jule_any_type0)};
	};
	jule::Slice<jule::U16> _169_utf16Path = _2309ee170_UTF16FromStr(_1218_path);;
	struct _stat _1713_handle = (struct _stat){};;
	jule::I64 _189_code = _230a28e47_Wstat((&(_169_utf16Path[0LL])), (&(_1713_handle)));;
	if ((_189_code == -1LL)) {
		return jule::Exceptional<jule::Ptr<_230a44a56_Status>>{.error=jule::Any(_230a40d3d_getLastFsError(), &__jule_any_type0)};
	};
	jule::Ptr<_230a44a56_Status> _2213_stat = jule::new_ptr<_230a44a56_Status>();;
	(*(_2213_stat))._field_size=_1713_handle.st_size;
	if (((_1713_handle.st_mode & 16384LLU) == 16384LLU)) {
		(*(_2213_stat))._field_mode|=static_cast<jule::I64>(1LL);
	} else if (((_1713_handle.st_mode & 32768LLU) == 32768LLU)) {
		(*(_2213_stat))._field_mode|=static_cast<jule::I64>(2LL);
	};
	return jule::Exceptional<jule::Ptr<_230a44a56_Status>>{.result=_2213_stat};;
}





std::ostream &operator<<(std::ostream &_Stream, _230a44a56_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1eeea4bb7_cmdAttrs _Src) {
	_Stream << "cmdAttrs{";
	_Stream << "hProcess:" << _Src._field_hProcess << ", ";
	_Stream << "hThread:" << _Src._field_hThread;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ed6c7892_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _230d320b8_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _230d32c67_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _230d45021_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _230d3c414_set(_230d45a49_decimal* _self_, jule::Slice<jule::U8> _23822_s) {
	jule::Bool __jule_func_result = false;
	jule::I64 _23913_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_23913_i >= _23822_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23822_s[_23913_i] == '+')) {
			_case_begin_1c109e450:;
			{
				(_23913_i)++;
			}
		}
		else if ((_23822_s[_23913_i] == '-')) {
			_case_begin_1c109e64d:;
			{
				(*(_self_))._field_neg=true;
				(_23913_i)++;
			}
		}
		_match_end_1c109e560:;
	};
	jule::Bool _25613_sawdot = false;;
	jule::Bool _25713_sawdigits = false;;
	for (; (_23913_i < _23822_s.len()); (_23913_i)++) {
		{
			{
				
				if ((_23822_s[_23913_i] == '_')) {
					_case_begin_1c10a1100:;
					{
						goto _iter_next_1c10a097e;
					}
				}
				else if ((_23822_s[_23913_i] == '.')) {
					_case_begin_1c10a1177:;
					{
						if (_25613_sawdot) {
							return __jule_func_result;;
						};
						_25613_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1c10a097e;
					}
				}
				else if ((('0' <= _23822_s[_23913_i]) && (_23822_s[_23913_i] <= '9'))) {
					_case_begin_1c10a11ee:;
					{
						_25713_sawdigits=true;
						if (((_23822_s[_23913_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1c10a097e;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23822_s[_23913_i];
							((*(_self_))._field_nd)++;
						} else if ((_23822_s[_23913_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1c10a097e;
					}
				}
				_match_end_1c10a0ece:;
			};
			goto _iter_end_1c10a097e;
		}
	_iter_next_1c10a097e:;
	}
	_iter_end_1c10a097e:;;
	if ((!(_25713_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_25613_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_23913_i < _23822_s.len()) && (_230d378b5_lower(_23822_s[_23913_i]) == 'e'))) {
		(_23913_i)++;
		if ((_23913_i >= _23822_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _30217_esign = 1LL;;
		if ((_23822_s[_23913_i] == '+')) {
			(_23913_i)++;
		} else if ((_23822_s[_23913_i] == '-')) {
			(_23913_i)++;
			_30217_esign=-1LL;
		};
		if ((((_23913_i >= _23822_s.len()) || (_23822_s[_23913_i] < '0')) || (_23822_s[_23913_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _31217_e = 0LL;;
		for (; ((_23913_i < _23822_s.len()) && ((('0' <= _23822_s[_23913_i]) && (_23822_s[_23913_i] <= '9')) || (_23822_s[_23913_i] == '_'))); (_23913_i)++) {
			{
				if ((_23822_s[_23913_i] == '_')) {
					goto _iter_next_1c10a6db4;
				};
				if ((_31217_e < 10000LL)) {
					_31217_e=static_cast<jule::I64>((((_31217_e * 10LL) + static_cast<jule::I64>(_23822_s[_23913_i])) - '0'));
				};
			}
		_iter_next_1c10a6db4:;
		}
		_iter_end_1c10a6db4:;;
		(*(_self_))._field_dp+=(_31217_e * _30217_esign);
	};
	if ((_23913_i != _23822_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _230d3c755_floatBits(_230d45a49_decimal* _self_, _230d320b8_floatInfo* _33229_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _33313_exp = 0LL;;
	jule::U64 _33413_mant = static_cast<jule::U64>(0LLU);;
	if (((*(_self_))._field_nd == 0LL)) {
		_33413_mant=0LLU;
		_33313_exp=(*(_33229_flt))._field_bias;
		goto _julec_label_1c10b64de;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_1c10acc88;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_33413_mant=0LLU;
		_33313_exp=(*(_33229_flt))._field_bias;
		goto _julec_label_1c10b64de;
	};
	_33313_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I64 _35917_n = 0LL;;
			if (((*(_self_))._field_dp >= _230d3c0c3_powtab.len())) {
				_35917_n=27LL;
			} else {
				_35917_n=_230d3c0c3_powtab[(*(_self_))._field_dp];
			};
			_230d461a9_shift(_self_, static_cast<jule::I64>((-(_35917_n))));
			_33313_exp+=_35917_n;
		}
	_iter_next_1c10ac826:;
	}
	_iter_end_1c10ac826:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I64 _36917_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _230d3c0c3_powtab.len())) {
				_36917_n=27LL;
			} else {
				_36917_n=_230d3c0c3_powtab[(-((*(_self_))._field_dp))];
			};
			_230d461a9_shift(_self_, _36917_n);
			_33313_exp-=_36917_n;
		}
	_iter_next_1c10adeed:;
	}
	_iter_end_1c10adeed:;;
	(_33313_exp)--;
	if ((_33313_exp < ((*(_33229_flt))._field_bias + 1LL))) {
		jule::I64 _38613_n = (((*(_33229_flt))._field_bias + 1LL) - _33313_exp);;
		_230d461a9_shift(_self_, static_cast<jule::I64>((-(_38613_n))));
		_33313_exp+=_38613_n;
	};
	if (((_33313_exp - (*(_33229_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) {
		goto _julec_label_1c10acc88;
	};
	_230d461a9_shift(_self_, static_cast<jule::I64>(static_cast<jule::I64>((1LL + (*(_33229_flt))._field_mantbits))));
	_33413_mant=static_cast<jule::U64>(_230d46c59_roundedInteger(_self_));
	if ((_33413_mant == (2LLU << (*(_33229_flt))._field_mantbits))) {
		_33413_mant>>=1LLU;
		(_33313_exp)++;
		if (((_33313_exp - (*(_33229_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) {
			goto _julec_label_1c10acc88;
		};
	};
	if (((_33413_mant & (1LLU << (*(_33229_flt))._field_mantbits)) == 0LLU)) {
		_33313_exp=(*(_33229_flt))._field_bias;
	};
	goto _julec_label_1c10b64de;
	_julec_label_1c10acc88:;
	_33413_mant=0LLU;
	_33313_exp=static_cast<jule::I64>(static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << (*(_33229_flt))._field_expbits) - 1LLU) + static_cast<jule::U64>((*(_33229_flt))._field_bias))));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_1c10b64de:;
	jule::U64 _42213_bits = (_33413_mant & ((1LLU << (*(_33229_flt))._field_mantbits) - 1LLU));;
	_42213_bits|=(static_cast<jule::U64>(((_33313_exp - (*(_33229_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) << (*(_33229_flt))._field_mantbits);
	if ((*(_self_))._field_neg) {
		_42213_bits|=((1LLU << (*(_33229_flt))._field_mantbits) << (*(_33229_flt))._field_expbits);
	};
	__jule_func_result.__jule_result_arg0 = _42213_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _230d45e01_assign(_230d45a49_decimal* _self_, jule::U64 _15129_v) {
	jule::Array<jule::U8,24> _15217_buf = jule::Array<jule::U8,24>(0);;
	jule::I64 _15513_n = 0LL;;
	while ((_15129_v > 0LLU)) {
		{
			jule::U64 _15713_v1 = (_15129_v / 10LLU);;
			_15129_v-=(10LLU * _15713_v1);
			_15217_buf[_15513_n]=static_cast<jule::U8>(static_cast<jule::U8>((_15129_v + '0')));
			(_15513_n)++;
			_15129_v=_15713_v1;
		}
	_iter_next_1c10b9e71:;
	}
	_iter_end_1c10b9e71:;;
	(*(_self_))._field_nd=0LL;
	(_15513_n)--;
	for (; (_15513_n >= 0LL); (_15513_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_15217_buf[_15513_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1c10ba8cd:;
	}
	_iter_end_1c10ba8cd:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_230d47397_trim(_self_);
}



inline void _230d461a9_shift(_230d45a49_decimal* _self_, jule::I64 _17628_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1c10bc88b:;
		}
		else if ((_17628_k > 0LL)) {
			_case_begin_1c10bc913:;
			{
				while ((_17628_k > 60LL)) {
					{
						_230d47de2_leftShift(_self_, 60LLU);
						_17628_k-=60LL;
					}
				_iter_next_1c10bd55c:;
				}
				_iter_end_1c10bd55c:;;
				_230d47de2_leftShift(_self_, static_cast<jule::U64>(static_cast<jule::U64>(_17628_k)));
			}
		}
		else if ((_17628_k < 0LL)) {
			_case_begin_1c10bc98a:;
			{
				while ((_17628_k < -60LL)) {
					{
						_230d47683_rightShift(_self_, 60LLU);
						_17628_k+=60LL;
					}
				_iter_next_1c10bd4d5:;
				}
				_iter_end_1c10bd4d5:;;
				_230d47683_rightShift(_self_, static_cast<jule::U64>(static_cast<jule::U64>((-(_17628_k)))));
			}
		}
		_match_end_1c10bc76a:;
	};
}



inline void _230d46462_roundDown(_230d45a49_decimal* _self_, jule::I64 _19628_nd) {
	if (((_19628_nd < 0LL) || (_19628_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_19628_nd;
	_230d47397_trim(_self_);
}



inline void _230d4671a_roundUp(_230d45a49_decimal* _self_, jule::I64 _20526_nd) {
	if (((_20526_nd < 0LL) || (_20526_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I64 _21113_i = (_20526_nd - 1LL);;
	for (; (_21113_i >= 0LL); (_21113_i)--) {
		{
			jule::U8 _21313_c = (*(_self_))._field_d[_21113_i];;
			if ((_21313_c < '9')) {
				((*(_self_))._field_d[_21113_i])++;
				(*(_self_))._field_nd=static_cast<jule::I64>((_21113_i + 1LL));
				return;;
			};
		}
	_iter_next_1c10c1a38:;
	}
	_iter_end_1c10c1a38:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _230d469c3_round(_230d45a49_decimal* _self_, jule::I64 _23224_nd) {
	if (((_23224_nd < 0LL) || (_23224_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_230d48266_shouldRoundUp(_self_, _23224_nd)) {
		_230d4671a_roundUp(_self_, _23224_nd);
	} else {
		_230d46462_roundDown(_self_, _23224_nd);
	};
}



inline jule::U64 _230d46c59_roundedInteger(_230d45a49_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I64 _24913_i = 0LL;;
	jule::U64 _25013_n = static_cast<jule::U64>(0LLU);;
	for (; ((_24913_i < (*(_self_))._field_dp) && (_24913_i < (*(_self_))._field_nd)); (_24913_i)++) {
		{
			_25013_n=static_cast<jule::U64>(((_25013_n * 10LLU) + static_cast<jule::U64>(((*(_self_))._field_d[_24913_i] - '0'))));
		}
	_iter_next_1c10c494d:;
	}
	_iter_end_1c10c494d:;;
	for (; (_24913_i < (*(_self_))._field_dp); (_24913_i)++) {
		{
			_25013_n*=10LLU;
		}
	_iter_next_1c10c6994:;
	}
	_iter_end_1c10c6994:;;
	if (_230d48266_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_25013_n)++;
	};
	return _25013_n;;
}





std::ostream &operator<<(std::ostream &_Stream, _230d45a49_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_230d58386_Const> static__230d587c6_NewI64(jule::I64 _1622_x) {
	return jule::new_ptr<_230d58386_Const>(_230d58386_Const{._field_data=jule::Any(_1622_x, &__jule_any_type1)});;
}



inline jule::Ptr<_230d58386_Const> static__230d58a90_NewU64(jule::U64 _1922_x) {
	return jule::new_ptr<_230d58386_Const>(_230d58386_Const{._field_data=jule::Any(_1922_x, &__jule_any_type2)});;
}



inline jule::Ptr<_230d58386_Const> static__230d58d59_NewBool(jule::Bool _2223_x) {
	return jule::new_ptr<_230d58386_Const>(_230d58386_Const{._field_data=jule::Any(_2223_x, &__jule_any_type3)});;
}



inline jule::Ptr<_230d58386_Const> static__230d59123_NewStr(jule::Str _2522_x) {
	return jule::new_ptr<_230d58386_Const>(_230d58386_Const{._field_data=jule::Any(_2522_x, &__jule_any_type4)});;
}



inline jule::Ptr<_230d58386_Const> static__230d593dc_NewF64(jule::F64 _2822_x) {
	return jule::new_ptr<_230d58386_Const>(_230d58386_Const{._field_data=jule::Any(_2822_x, &__jule_any_type5)});;
}



inline jule::Ptr<_230d58386_Const> static__230d595eb_NewNil(void) {
	return jule::new_ptr<_230d58386_Const>(_230d58386_Const{._field_data=nullptr});;
}



inline jule::I64 _230d59c5b_ReadI64(_230d58386_Const* _self_) {
	if ((!(_230d5c357_IsI64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1));;
}



inline jule::U64 _230d59ee2_ReadU64(_230d58386_Const* _self_) {
	if ((!(_230d5c5dd_IsU64(_self_)))) {
		return 0LLU;;
	};
	return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2));;
}



inline jule::Bool _230d5a278_ReadBool(_230d58386_Const* _self_) {
	if ((!(_230d5c874_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type3);;
}



inline jule::Str _230d5a50e_ReadStr(_230d58386_Const* _self_) {
	if ((!(_230d5cb0a_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type4);;
}



inline jule::F64 _230d5a795_ReadF64(_230d58386_Const* _self_) {
	if ((!(_230d5cd91_IsF64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5));;
}



inline jule::I64 _230d5aa2b_AsI64(_230d58386_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1c1142191:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1c114256a:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1c11425d1:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5)));;
			}
		}
		else {
			_case_begin_1c1142504:;
			{
				return 0LL;;
			}
		}
		_match_end_1c114234a:;
	};
}



inline jule::U64 _230d5acb2_AsU64(_230d58386_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1c1143428:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2));;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1c1143da7:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1c1143e1d:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5)));;
			}
		}
		else {
			_case_begin_1c1142d40:;
			{
				return 0LLU;;
			}
		}
		_match_end_1c1142cda:;
	};
}



inline jule::F64 _230d5b048_AsF64(_230d58386_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1c1144baa:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5));;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1c1145639:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1c11456a0:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2)));;
			}
		}
		else {
			_case_begin_1c11445c2:;
			{
				return 0LL;;
			}
		}
		_match_end_1c114456c:;
	};
}



inline void _230d5b301_SetI64(_230d58386_Const* _self_, jule::I64 _13825_x) {
	(*(_self_))._field_data=jule::Any(_13825_x, &__jule_any_type1);
}



inline void _230d5b5a9_SetU64(_230d58386_Const* _self_, jule::U64 _14125_x) {
	(*(_self_))._field_data=jule::Any(_14125_x, &__jule_any_type2);
}



inline void _230d5b862_SetBool(_230d58386_Const* _self_, jule::Bool _14426_x) {
	(*(_self_))._field_data=jule::Any(_14426_x, &__jule_any_type3);
}



inline void _230d5bb1a_SetStr(_230d58386_Const* _self_, jule::Str _14725_x) {
	(*(_self_))._field_data=jule::Any(_14725_x, &__jule_any_type4);
}



inline void _230d5bdc3_SetF64(_230d58386_Const* _self_, jule::F64 _15025_x) {
	(*(_self_))._field_data=jule::Any(_15025_x, &__jule_any_type5);
}



inline jule::Bool _230d5c357_IsI64(_230d58386_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1c11493eb:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c114963d:;
			{
				return false;;
			}
		}
		_match_end_1c11495d8:;
	};
}



inline jule::Bool _230d5c5dd_IsU64(_230d58386_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1c1149ce2:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c114a045:;
			{
				return false;;
			}
		}
		_match_end_1c1149ee0:;
	};
}



inline jule::Bool _230d5c874_IsBool(_230d58386_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1c114a74e:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c114a9a2:;
			{
				return false;;
			}
		}
		_match_end_1c114a94c:;
	};
}



inline jule::Bool _230d5cb0a_IsStr(_230d58386_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1c114b1ab:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c114b40e:;
			{
				return false;;
			}
		}
		_match_end_1c114b3a9:;
	};
}



inline jule::Bool _230d5cd91_IsF64(_230d58386_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1c114bb18:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c114bd6b:;
			{
				return false;;
			}
		}
		_match_end_1c114bd16:;
	};
}



inline jule::Bool _230d5d127_IsNil(_230d58386_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _230d5d7a9_And(_230d58386_Const* _self_, _230d58386_Const _23818_x) {
	{
		
		if ((_230d5c874_IsBool(_self_) && _230d5c874_IsBool(&_23818_x))) {
			_case_begin_1c115116c:;
			{
				return (_230d5a278_ReadBool(_self_) && _230d5a278_ReadBool(&_23818_x));;
			}
		}
		else {
			_case_begin_1c11510b2:;
			{
				return false;;
			}
		}
		_match_end_1c1150bc7:;
	};
}



inline jule::Bool _230d5daea_Or(_230d58386_Const* _self_, _230d58386_Const _24917_x) {
	{
		
		if ((_230d5c874_IsBool(_self_) && _230d5c874_IsBool(&_24917_x))) {
			_case_begin_1c115247b:;
			{
				return (_230d5a278_ReadBool(_self_) || _230d5a278_ReadBool(&_24917_x));;
			}
		}
		else {
			_case_begin_1c1151b1d:;
			{
				return false;;
			}
		}
		_match_end_1c1151a74:;
	};
}



inline jule::Bool _230d5de3b_Eq(_230d58386_Const* _self_, _230d58386_Const _26017_x) {
	{
		
		if (_230d5d127_IsNil(_self_)) {
			_case_begin_1c11537ac:;
			{
				return _230d5d127_IsNil(&_26017_x);;
			}
		}
		else if (_230d5c874_IsBool(_self_)) {
			_case_begin_1c1153834:;
			{
				return (_230d5c874_IsBool(&_26017_x) && (_230d5a278_ReadBool(_self_) == _230d5a278_ReadBool(&_26017_x)));;
			}
		}
		else if (_230d5cb0a_IsStr(_self_)) {
			_case_begin_1c1153aa9:;
			{
				return (_230d5cb0a_IsStr(&_26017_x) && (_230d5a50e_ReadStr(_self_) == _230d5a50e_ReadStr(&_26017_x)));;
			}
		}
		else if (_230d5c357_IsI64(_self_)) {
			_case_begin_1c1153b20:;
			{
				return (_230d59c5b_ReadI64(_self_) == _230d5aa2b_AsI64(&_26017_x));;
			}
		}
		else if (_230d5c5dd_IsU64(_self_)) {
			_case_begin_1c1153b86:;
			{
				return (_230d59ee2_ReadU64(_self_) == _230d5acb2_AsU64(&_26017_x));;
			}
		}
		else if (_230d5cd91_IsF64(_self_)) {
			_case_begin_1c1153bec:;
			{
				return (_230d5a795_ReadF64(_self_) == _230d5b048_AsF64(&_26017_x));;
			}
		}
		else {
			_case_begin_1c1152de9:;
			{
				return false;;
			}
		}
		_match_end_1c1152d50:;
	};
}



inline jule::Bool _230d5e27c_Lt(_230d58386_Const* _self_, _230d58386_Const _28717_x) {
	{
		
		if (_230d5cb0a_IsStr(_self_)) {
			_case_begin_1c1157470:;
			{
				return (_230d5cb0a_IsStr(&_28717_x) && (_230d5a50e_ReadStr(_self_) < _230d5a50e_ReadStr(&_28717_x)));;
			}
		}
		else if (_230d5c357_IsI64(_self_)) {
			_case_begin_1c11574d6:;
			{
				return (_230d59c5b_ReadI64(_self_) < _230d5aa2b_AsI64(&_28717_x));;
			}
		}
		else if (_230d5c5dd_IsU64(_self_)) {
			_case_begin_1c115755d:;
			{
				return (_230d59ee2_ReadU64(_self_) < _230d5acb2_AsU64(&_28717_x));;
			}
		}
		else if (_230d5cd91_IsF64(_self_)) {
			_case_begin_1c115778e:;
			{
				return (_230d5a795_ReadF64(_self_) < _230d5b048_AsF64(&_28717_x));;
			}
		}
		else {
			_case_begin_1c1154192:;
			{
				return false;;
			}
		}
		_match_end_1c11540c6:;
	};
}



inline jule::Bool _230d5e5bd_LtEq(_230d58386_Const* _self_, _230d58386_Const _31019_x) {
	{
		
		if (_230d5cb0a_IsStr(_self_)) {
			_case_begin_1c115a132:;
			{
				return (_230d5cb0a_IsStr(&_31019_x) && (_230d5a50e_ReadStr(_self_) <= _230d5a50e_ReadStr(&_31019_x)));;
			}
		}
		else if (_230d5c357_IsI64(_self_)) {
			_case_begin_1c115a198:;
			{
				return (_230d59c5b_ReadI64(_self_) <= _230d5aa2b_AsI64(&_31019_x));;
			}
		}
		else if (_230d5c5dd_IsU64(_self_)) {
			_case_begin_1c115a220:;
			{
				return (_230d59ee2_ReadU64(_self_) <= _230d5acb2_AsU64(&_31019_x));;
			}
		}
		else if (_230d5cd91_IsF64(_self_)) {
			_case_begin_1c115a451:;
			{
				return (_230d5a795_ReadF64(_self_) <= _230d5b048_AsF64(&_31019_x));;
			}
		}
		else {
			_case_begin_1c1157ccd:;
			{
				return false;;
			}
		}
		_match_end_1c1157c12:;
	};
}



inline jule::Bool _230d5e90e_Gt(_230d58386_Const* _self_, _230d58386_Const _33317_x) {
	{
		
		if (_230d5cb0a_IsStr(_self_)) {
			_case_begin_1c115cce4:;
			{
				return (_230d5cb0a_IsStr(&_33317_x) && (_230d5a50e_ReadStr(_self_) > _230d5a50e_ReadStr(&_33317_x)));;
			}
		}
		else if (_230d5c357_IsI64(_self_)) {
			_case_begin_1c115cd5a:;
			{
				return (_230d59c5b_ReadI64(_self_) > _230d5aa2b_AsI64(&_33317_x));;
			}
		}
		else if (_230d5c5dd_IsU64(_self_)) {
			_case_begin_1c115cdd2:;
			{
				return (_230d59ee2_ReadU64(_self_) > _230d5acb2_AsU64(&_33317_x));;
			}
		}
		else if (_230d5cd91_IsF64(_self_)) {
			_case_begin_1c115d113:;
			{
				return (_230d5a795_ReadF64(_self_) > _230d5b048_AsF64(&_33317_x));;
			}
		}
		else {
			_case_begin_1c115a990:;
			{
				return false;;
			}
		}
		_match_end_1c115a8c4:;
	};
}



inline jule::Bool _230d5ec50_GtEq(_230d58386_Const* _self_, _230d58386_Const _35619_x) {
	{
		
		if (_230d5cb0a_IsStr(_self_)) {
			_case_begin_1c11609a6:;
			{
				return (_230d5cb0a_IsStr(&_35619_x) && (_230d5a50e_ReadStr(_self_) >= _230d5a50e_ReadStr(&_35619_x)));;
			}
		}
		else if (_230d5c357_IsI64(_self_)) {
			_case_begin_1c1160a1c:;
			{
				return (_230d59c5b_ReadI64(_self_) >= _230d5aa2b_AsI64(&_35619_x));;
			}
		}
		else if (_230d5c5dd_IsU64(_self_)) {
			_case_begin_1c1160a94:;
			{
				return (_230d59ee2_ReadU64(_self_) >= _230d5acb2_AsU64(&_35619_x));;
			}
		}
		else if (_230d5cd91_IsF64(_self_)) {
			_case_begin_1c1160cc5:;
			{
				return (_230d5a795_ReadF64(_self_) >= _230d5b048_AsF64(&_35619_x));;
			}
		}
		else {
			_case_begin_1c115d652:;
			{
				return false;;
			}
		}
		_match_end_1c115d586:;
	};
}



inline jule::Bool _230d60091_Add(_230d58386_Const* _self_, _230d58386_Const _37722_x) {
	{
		
		if (_230d5cb0a_IsStr(_self_)) {
			_case_begin_1c1163668:;
			{
				if ((!(_230d5cb0a_IsStr(&_37722_x)))) {
					return false;;
				};
				_230d5bb1a_SetStr(_self_, (_230d5a50e_ReadStr(_self_) + _230d5a50e_ReadStr(&_37722_x)));
			}
		}
		else if (_230d5cd91_IsF64(_self_)) {
			_case_begin_1c11636ce:;
			{
				_230d5bdc3_SetF64(_self_, static_cast<jule::F64>((_230d5a795_ReadF64(_self_) + _230d5b048_AsF64(&_37722_x))));
			}
		}
		else if (_230d5c357_IsI64(_self_)) {
			_case_begin_1c1163756:;
			{
				if (_230d5cd91_IsF64(&_37722_x)) {
					_230d5bdc3_SetF64(_self_, static_cast<jule::F64>((_230d5b048_AsF64(_self_) + _230d5a795_ReadF64(&_37722_x))));
				} else {
					_230d5b301_SetI64(_self_, static_cast<jule::I64>((_230d59c5b_ReadI64(_self_) + _230d5aa2b_AsI64(&_37722_x))));
				};
			}
		}
		else if (_230d5c5dd_IsU64(_self_)) {
			_case_begin_1c1163987:;
			{
				if (_230d5cd91_IsF64(&_37722_x)) {
					_230d5bdc3_SetF64(_self_, static_cast<jule::F64>((_230d5b048_AsF64(_self_) + _230d5a795_ReadF64(&_37722_x))));
				} else {
					_230d5b5a9_SetU64(_self_, static_cast<jule::U64>((_230d59ee2_ReadU64(_self_) + _230d5acb2_AsU64(&_37722_x))));
				};
			}
		}
		else {
			_case_begin_1c1161314:;
			{
				return false;;
			}
		}
		_match_end_1c1161248:;
	};
	return true;;
}



inline jule::Bool _230d603d2_Sub(_230d58386_Const* _self_, _230d58386_Const _40622_x) {
	{
		
		if (_230d5cd91_IsF64(_self_)) {
			_case_begin_1c1168591:;
			{
				_230d5bdc3_SetF64(_self_, static_cast<jule::F64>((_230d5a795_ReadF64(_self_) - _230d5b048_AsF64(&_40622_x))));
			}
		}
		else if (_230d5c357_IsI64(_self_)) {
			_case_begin_1c1168618:;
			{
				if (_230d5cd91_IsF64(&_40622_x)) {
					_230d5bdc3_SetF64(_self_, static_cast<jule::F64>((_230d5b048_AsF64(_self_) - _230d5a795_ReadF64(&_40622_x))));
				} else {
					_230d5b301_SetI64(_self_, static_cast<jule::I64>((_230d59c5b_ReadI64(_self_) - _230d5aa2b_AsI64(&_40622_x))));
				};
			}
		}
		else if (_230d5c5dd_IsU64(_self_)) {
			_case_begin_1c1168690:;
			{
				if (_230d5cd91_IsF64(&_40622_x)) {
					_230d5bdc3_SetF64(_self_, static_cast<jule::F64>((_230d5b048_AsF64(_self_) - _230d5a795_ReadF64(&_40622_x))));
				} else {
					_230d5b5a9_SetU64(_self_, static_cast<jule::U64>((_230d59ee2_ReadU64(_self_) - _230d5acb2_AsU64(&_40622_x))));
				};
			}
		}
		else {
			_case_begin_1c1167d65:;
			{
				return false;;
			}
		}
		_match_end_1c1167c99:;
	};
	return true;;
}



inline jule::Bool _230d60723_Mul(_230d58386_Const* _self_, _230d58386_Const _43022_x) {
	{
		
		if (_230d5cd91_IsF64(_self_)) {
			_case_begin_1c116c63e:;
			{
				_230d5bdc3_SetF64(_self_, static_cast<jule::F64>((_230d5a795_ReadF64(_self_) * _230d5b048_AsF64(&_43022_x))));
			}
		}
		else if (_230d5c357_IsI64(_self_)) {
			_case_begin_1c116c6b6:;
			{
				if (_230d5cd91_IsF64(&_43022_x)) {
					_230d5bdc3_SetF64(_self_, static_cast<jule::F64>((_230d5b048_AsF64(_self_) * _230d5a795_ReadF64(&_43022_x))));
				} else {
					_230d5b301_SetI64(_self_, static_cast<jule::I64>((_230d59c5b_ReadI64(_self_) * _230d5aa2b_AsI64(&_43022_x))));
				};
			}
		}
		else if (_230d5c5dd_IsU64(_self_)) {
			_case_begin_1c116c73d:;
			{
				if (_230d5cd91_IsF64(&_43022_x)) {
					_230d5bdc3_SetF64(_self_, static_cast<jule::F64>((_230d5b048_AsF64(_self_) * _230d5a795_ReadF64(&_43022_x))));
				} else {
					_230d5b5a9_SetU64(_self_, static_cast<jule::U64>((_230d59ee2_ReadU64(_self_) * _230d5acb2_AsU64(&_43022_x))));
				};
			}
		}
		else {
			_case_begin_1c116bcc0:;
			{
				return false;;
			}
		}
		_match_end_1c116bc04:;
	};
	return true;;
}



inline jule::Bool _230d60a64_Div(_230d58386_Const* _self_, _230d58386_Const _45822_x) {
	{
		
		if (_230d5cd91_IsF64(_self_)) {
			_case_begin_1c11716dc:;
			{
				jule::F64 _46113_l = _230d5b048_AsF64(&_45822_x);;
				if ((_46113_l == 0LL)) {
					return false;;
				};
				_230d5bdc3_SetF64(_self_, static_cast<jule::F64>(jule::div(_230d5a795_ReadF64(_self_),_46113_l)));
			}
		}
		else if (_230d5c357_IsI64(_self_)) {
			_case_begin_1c1171764:;
			{
				jule::F64 _46713_l = _230d5b048_AsF64(&_45822_x);;
				if ((_46713_l == 0LL)) {
					return false;;
				};
				_230d5bdc3_SetF64(_self_, static_cast<jule::F64>(jule::div(_230d5b048_AsF64(_self_),_46713_l)));
			}
		}
		else if (_230d5c5dd_IsU64(_self_)) {
			_case_begin_1c11717db:;
			{
				jule::F64 _47313_l = _230d5b048_AsF64(&_45822_x);;
				if ((_47313_l == 0LL)) {
					return false;;
				};
				_230d5bdc3_SetF64(_self_, static_cast<jule::F64>(jule::div(_230d5b048_AsF64(_self_),_47313_l)));
			}
		}
		else {
			_case_begin_1c1170d6d:;
			{
				return false;;
			}
		}
		_match_end_1c1170ca2:;
	};
	return true;;
}



inline jule::Bool _230d60da5_Mod(_230d58386_Const* _self_, _230d58386_Const _48722_x) {
	{
		
		if (_230d5c357_IsI64(_self_)) {
			_case_begin_1c11758bc:;
			{
				jule::I64 _49013_l = _230d5aa2b_AsI64(&_48722_x);;
				if ((_49013_l == 0LL)) {
					return false;;
				};
				_230d5b301_SetI64(_self_, static_cast<jule::I64>(jule::mod(_230d59c5b_ReadI64(_self_),_49013_l)));
			}
		}
		else if (_230d5c5dd_IsU64(_self_)) {
			_case_begin_1c1175944:;
			{
				jule::U64 _49613_l = _230d5acb2_AsU64(&_48722_x);;
				if ((_49613_l == 0LLU)) {
					return false;;
				};
				_230d5b5a9_SetU64(_self_, static_cast<jule::U64>(jule::mod(_230d59ee2_ReadU64(_self_),_49613_l)));
			}
		}
		else {
			_case_begin_1c1175812:;
			{
				return false;;
			}
		}
		_match_end_1c11744d1:;
	};
	return true;;
}



inline jule::Bool _230d611e6_BitwiseAnd(_230d58386_Const* _self_, _230d58386_Const _50929_x) {
	{
		
		if (_230d5c357_IsI64(_self_)) {
			_case_begin_1c11787e3:;
			{
				_230d5b301_SetI64(_self_, static_cast<jule::I64>((_230d59c5b_ReadI64(_self_) & _230d5aa2b_AsI64(&_50929_x))));
			}
		}
		else if (_230d5c5dd_IsU64(_self_)) {
			_case_begin_1c117886a:;
			{
				_230d5b5a9_SetU64(_self_, static_cast<jule::U64>((_230d59ee2_ReadU64(_self_) & _230d5acb2_AsU64(&_50929_x))));
			}
		}
		else {
			_case_begin_1c1178738:;
			{
				return false;;
			}
		}
		_match_end_1c1177407:;
	};
	return true;;
}



inline jule::Bool _230d61537_BitwiseOr(_230d58386_Const* _self_, _230d58386_Const _52328_x) {
	{
		
		if (_230d5c357_IsI64(_self_)) {
			_case_begin_1c117a66e:;
			{
				_230d5b301_SetI64(_self_, static_cast<jule::I64>((_230d59c5b_ReadI64(_self_) | _230d5aa2b_AsI64(&_52328_x))));
			}
		}
		else if (_230d5c5dd_IsU64(_self_)) {
			_case_begin_1c117a6e6:;
			{
				_230d5b5a9_SetU64(_self_, static_cast<jule::U64>((_230d59ee2_ReadU64(_self_) | _230d5acb2_AsU64(&_52328_x))));
			}
		}
		else {
			_case_begin_1c117a5a3:;
			{
				return false;;
			}
		}
		_match_end_1c117a4d7:;
	};
	return true;;
}



inline jule::Bool _230d61878_Xor(_230d58386_Const* _self_, _230d58386_Const _53722_x) {
	{
		
		if (_230d5c357_IsI64(_self_)) {
			_case_begin_1c117c4ea:;
			{
				_230d5b301_SetI64(_self_, static_cast<jule::I64>((_230d59c5b_ReadI64(_self_) ^ _230d5aa2b_AsI64(&_53722_x))));
			}
		}
		else if (_230d5c5dd_IsU64(_self_)) {
			_case_begin_1c117c572:;
			{
				_230d5b5a9_SetU64(_self_, static_cast<jule::U64>((_230d59ee2_ReadU64(_self_) ^ _230d5acb2_AsU64(&_53722_x))));
			}
		}
		else {
			_case_begin_1c117c42e:;
			{
				return false;;
			}
		}
		_match_end_1c117c363:;
	};
	return true;;
}



inline jule::Bool _230d61bb9_Lshift(_230d58386_Const* _self_, _230d58386_Const _55125_x) {
	{
		
		if (_230d5c357_IsI64(_self_)) {
			_case_begin_1c117e376:;
			{
				jule::I64 _55413_l = _230d5aa2b_AsI64(_self_);;
				if ((_55413_l < 0LL)) {
					jule::U64 _55617_r = _230d5acb2_AsU64(&_55125_x);;
					_230d5b301_SetI64(_self_, static_cast<jule::I64>((_55413_l << _55617_r)));
				} else {
					_230d623a1_lshiftUnsig(_self_, &(_55125_x));
				};
			}
		}
		else if (_230d5c5dd_IsU64(_self_)) {
			_case_begin_1c117e3ed:;
			{
				_230d623a1_lshiftUnsig(_self_, &(_55125_x));
			}
		}
		else {
			_case_begin_1c117e2aa:;
			{
				return false;;
			}
		}
		_match_end_1c117e1de:;
	};
	return true;;
}



inline jule::Bool _230d6200a_Rshift(_230d58386_Const* _self_, _230d58386_Const _57125_x) {
	{
		
		if (_230d5c357_IsI64(_self_)) {
			_case_begin_1c1181950:;
			{
				jule::I64 _57413_l = _230d5aa2b_AsI64(_self_);;
				if ((_57413_l < 0LL)) {
					jule::U64 _57617_r = _230d5acb2_AsU64(&_57125_x);;
					_230d5b301_SetI64(_self_, static_cast<jule::I64>((_57413_l >> _57617_r)));
				} else {
					_230d626d1_rshiftUnsig(_self_, &(_57125_x));
				};
			}
		}
		else if (_230d5c5dd_IsU64(_self_)) {
			_case_begin_1c11819c7:;
			{
				_230d626d1_rshiftUnsig(_self_, &(_57125_x));
			}
		}
		else {
			_case_begin_1c1181884:;
			{
				return false;;
			}
		}
		_match_end_1c11817b8:;
	};
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _230d58386_Const _Src) {
	_Stream << "Const{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1bc583e22_Prec(_1bc583a9d_Token* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(57LLU) || _match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1c11da39e:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1c11da536:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(71LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1c11da59c:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1c11da624:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1c11da69b:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1c11d9c1c:;
			{
				return 0LLU;;
			}
		}
		_match_end_1c11d9b73:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1bc583a9d_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline void _1bc589752_Fill(_1bc589367_File* _self_, jule::Slice<jule::U8> _1727_data) {
	(*(_self_))._field_Data=_1727_data;
}



inline jule::Str _1bc5899d8_Dir(_1bc589367_File* _self_) {
	return _1ed645920_Dir((*(_self_))._field_Path);;
}



inline jule::Str _1bc589c6e_Name(_1bc589367_File* _self_) {
	return _1ed645579_Base((*(_self_))._field_Path);;
}



inline jule::Str _1bc58a346_GetRow(_1bc589367_File* _self_, jule::I64 _3821_row) {
	jule::I64 _3913_n = 0LL;;
	jule::I64 _4013_lineStart = 0LL;;
	jule::I64 _4113_i = 0LL;;
	for (; (_4113_i < (*(_self_))._field_Data.len()); (_4113_i)++) {
		{
			if (((*(_self_))._field_Data[_4113_i] != '\n')) {
				goto _iter_next_1c11e0827;
			};
			(_3913_n)++;
			if ((_3913_n == _3821_row)) {
				return static_cast<jule::Str>((*(_self_))._field_Data.slice(_4013_lineStart, _4113_i));;
			};
			_4013_lineStart=static_cast<jule::I64>((_4113_i + 1LL));
		}
	_iter_next_1c11e0827:;
	}
	_iter_end_1c11e0827:;;
	return jule::Str();;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc589367_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc58b48a_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1bbcac86b_pushErr(_1bbcac2d8_lex* _self_, jule::Str _44726_fmt, jule::Slice<jule::Any> _44739_args) {
	{ jule::Slice<_1ed6c7892_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1bc58c25a_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _44726_fmt, _44739_args)); };
}



inline void _1bbcacdcc_lex(_1bbcac2d8_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_1bc5914e5_newLine(_self_);
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len())) {
		{
			jule::Ptr<_1bc583a9d_Token> _46217_token = _1bc5929d0_token(_self_);;
			if (((*(_46217_token))._field_Id != static_cast<jule::U64>(0LLU))) {
				{ jule::Slice<jule::Ptr<_1bc583a9d_Token>> &__jule_push_dest = (*(_self_))._field_tokens; __jule_push_dest.push(_46217_token); };
			};
		}
	_iter_next_1c121e614:;
	}
	_iter_end_1c121e614:;;
}



inline jule::Str _1bbcad21d_id(_1bbcac2d8_lex* _self_, jule::Slice<jule::U8>* _47122_ln) {
	if (((*(_47122_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _4759_r = 0;;
	jule::I64 _47516_i = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2095d15e7_DecodeRune((*(_47122_ln)));
		_4759_r = __jule_assign_result.__jule_result_arg0;
		_47516_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_4759_r != '_') && (!(_1bc5872cc_IsLetter(_4759_r))))) {
		return jule::Str();;
	};
	while ((_47516_i < (*(_47122_ln)).len())) {
		{
			jule::I32 _48113_pr = 0;;
			jule::I64 _48117_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2095d15e7_DecodeRune((*(_47122_ln)).slice(_47516_i));
				_48113_pr = __jule_assign_result.__jule_result_arg0;
				_48117_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_48113_pr != '_') && (!(_1bc587860_IsDecimal(static_cast<jule::U8>(static_cast<jule::U8>(_48113_pr)))))) && (!(_1bc5872cc_IsLetter(_48113_pr))))) {
				(*(_self_))._field_pos+=_47516_i;
				return static_cast<jule::Str>((*(_47122_ln)).slice(0LL, _47516_i));;
			};
			_47516_i+=_48117_n;
		}
	_iter_next_1c1223030:;
	}
	_iter_end_1c1223030:;;
	(*(_self_))._field_pos+=(*(_47122_ln)).len();
	return static_cast<jule::Str>((*(_47122_ln)));;
}



inline jule::Slice<jule::U8> _1bbcad4a4_resume(_1bbcac2d8_lex* _self_) {
	jule::I64 _49613_i = (*(_self_))._field_pos;;
	for (; (_49613_i < (*((*(_self_))._field_file))._field_Data.len()); (_49613_i)++) {
		{
			jule::I32 _49813_r = static_cast<jule::I32>((*((*(_self_))._field_file))._field_Data[_49613_i]);;
			if (_1bc586d59_IsSpace(_49813_r)) {
				;
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _49813_r };
					
					if (_match_expr == '\n') {
						_case_begin_1c12271aa:;
						{
							_1bc5914e5_newLine(_self_);
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1c12270bc:;
						{
							(*(_self_))._field_column+=8LL;
						}
					}
					else {
						_case_begin_1c12269c3:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1c1226bd2:;
				};
				goto _iter_next_1c122344d;
			};
			jule::I64 _51317_j = _49613_i;;
			for (; (_51317_j < (*((*(_self_))._field_file))._field_Data.len()); (_51317_j)++) {
				{
					if (((*((*(_self_))._field_file))._field_Data[_51317_j] == '\n')) {
						goto _iter_end_1c1225b59;
					};
				}
			_iter_next_1c1225b59:;
			}
			_iter_end_1c1225b59:;;
			return (*((*(_self_))._field_file))._field_Data.slice(_49613_i, _51317_j);;
		}
	_iter_next_1c122344d:;
	}
	_iter_end_1c122344d:;;
	return nullptr;;
}



inline void _1bbcad75c_lexLineComment(_1bbcac2d8_lex* _self_, jule::Ptr<_1bc583a9d_Token>* _52438_token) {
	jule::I64 _5259_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _52813_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if (((_52813_r == '\n') || (_52813_r == '\r'))) {
				goto _iter_end_1c1229b2a;
			};
		}
	_iter_next_1c1229b2a:;
	}
	_iter_end_1c1229b2a:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		(*((*(_52438_token))))._field_Id=static_cast<jule::U64>(15LLU);
		(*((*(_52438_token))))._field_Kind=static_cast<jule::Str>((*((*(_self_))._field_file))._field_Data.slice(_5259_start, (*(_self_))._field_pos));
	};
}



inline void _1bbcada15_lexRangeComment(_1bbcac2d8_lex* _self_, jule::Ptr<_1bc583a9d_Token>* _53939_token) {
	jule::I64 _5409_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _54313_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_54313_r == '\r')) {
				goto _iter_next_1c122d16c;
			};
			if ((_54313_r == '\n')) {
				_1bc5914e5_newLine(_self_);
				goto _iter_next_1c122d16c;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*((*(_self_))._field_file))._field_Data.len()) && (_54313_r == '*')) && ((*((*(_self_))._field_file))._field_Data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					(*((*(_53939_token))))._field_Id=static_cast<jule::U64>(15LLU);
					(*((*(_53939_token))))._field_Kind=static_cast<jule::Str>((*((*(_self_))._field_file))._field_Data.slice(_5409_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1c122d16c:;
	}
	_iter_end_1c122d16c:;;
	_1bbcac86b_pushErr(_self_, jule::Str::lit("missing block comment close", 27), jule::Slice<jule::Any>());
}



inline jule::Str _1bc590280_num(_1bbcac2d8_lex* _self_, jule::Slice<jule::U8>* _56723_txt) {
	jule::Str __jule_func_result;
	if (((*(_56723_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_230d631c6_hexNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1c123367d;
	};
	__jule_func_result=_230d62e2e_octalNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1c123367d;
	};
	__jule_func_result=_1bc58e3e4_binaryNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1c123367d;
	};
	__jule_func_result=_1bc58e12a_commonNum(_56723_txt);
	_julec_label_1c123367d:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _1bc59058d_escapeSeq(_1bbcac2d8_lex* _self_, jule::Slice<jule::U8>* _58929_txt) {
	jule::Str _59013_seq = jule::Str();;
	if (((*(_58929_txt)).len() < 2LL)) {
		goto _julec_label_1c0aecac5;
	};
	{
		auto &_match_expr{ (*(_58929_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1c0aeaa6d:;
			{
				(*(_self_))._field_pos+=2LL;
				return static_cast<jule::Str>((*(_58929_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1c0aeac16:;
			{
				_59013_seq=_1bbcab21b_bigUnicodePointEscape(_58929_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1c0aea7a4:;
			{
				_59013_seq=_1bbcab4d5_littleUnicodePointEscape(_58929_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1c0aea81a:;
			{
				_59013_seq=_1bbcab79e_hexByteEscape(_58929_txt);
			}
		}
		else {
			_case_begin_1c0aea144:;
			{
				_59013_seq=_1bbcaba68_byteEscape(_58929_txt);
			}
		}
		_match_end_1c0aea683:;
	};
	_julec_label_1c0aecac5:;
	if ((_59013_seq).empty()) {
		((*(_self_))._field_pos)++;
		_1bbcac86b_pushErr(_self_, jule::Str::lit("invalid escape sequence", 23), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_59013_seq.len();
	return _59013_seq;;
}



inline jule::Str _1bc590989_getRune(_1bbcac2d8_lex* _self_, jule::Slice<jule::U8>* _61927_txt, jule::Bool _61940_raw) {
	if (((!(_61940_raw)) && ((*(_61927_txt))[0LL] == '\\'))) {
		return _1bc59058d_escapeSeq(_self_, _61927_txt);;
	};
	jule::I32 _6239_r = 0;;
	jule::I64 _62312_n = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2095d15e7_DecodeRune((*(_61927_txt)));
		_6239_r = __jule_assign_result.__jule_result_arg0;
		_62312_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_62312_n;
	return jule::Str::from_rune(_6239_r);;
}



inline jule::Str _1bc590cca_lexRune(_1bbcac2d8_lex* _self_, jule::Slice<jule::U8>* _62827_txt) {
	_2096a4489_StrBuilder _62913_run = static__2096a48da_New(8LL);;
	_2096a5204_WriteByte(&_62913_run, '\'');
	((*(_self_))._field_column)++;
	jule::I64 _63213_n = 0LL;;
	jule::I64 _63313_i = 1LL;;
	for (; (_63313_i < (*(_62827_txt)).len()); (_63313_i)++) {
		{
			if (((*(_62827_txt))[_63313_i] == '\r')) {
				goto _iter_next_1c0b01d0a;
			};
			if (((*(_62827_txt))[_63313_i] == '\n')) {
				_1bbcac86b_pushErr(_self_, jule::Str::lit("rune is not finished", 20), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_1bc5914e5_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _64513_part = (*(_62827_txt)).slice(_63313_i);;
			jule::Str _64613_r = _1bc590989_getRune(_self_, &(_64513_part), false);;
			_2096a4e4b_WriteStr(&_62913_run, _64613_r);
			(*(_self_))._field_column+=_2095d3462_RuneCountStr(_64613_r);
			if (_64613_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1c0b01d0a;
			};
			if ((_64613_r.len() > 1LL)) {
				_63313_i+=(_64613_r.len() - 1LL);
			};
			(_63213_n)++;
		}
	_iter_next_1c0b01d0a:;
	}
	_iter_end_1c0b01d0a:;;
	if ((_63213_n == 0LL)) {
		_1bbcac86b_pushErr(_self_, jule::Str::lit("rune is cannot empty", 20), jule::Slice<jule::Any>());
	} else if ((_63213_n > 1LL)) {
		_1bbcac86b_pushErr(_self_, jule::Str::lit("rune is should be single", 24), jule::Slice<jule::Any>());
	};
	return _2096a5743_Str(&_62913_run);;
}



inline jule::Str _1bc591061_lexStr(_1bbcac2d8_lex* _self_) {
	_2096a4489_StrBuilder _66913_s = static__2096a48da_New(16LL);;
	jule::U8 _6709_mark = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _6729_raw = (_6709_mark == '`');;
	_2096a5204_WriteByte(&_66913_s, _6709_mark);
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len())) {
		{
			jule::U8 _67713_ch = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_67713_ch == '\r')) {
				goto _iter_next_1c0b073d7;
			};
			if ((_67713_ch == '\n')) {
				_1bc5914e5_newLine(_self_);
				if ((!(_6729_raw))) {
					_1bbcac86b_pushErr(_self_, jule::Str::lit("string is not finished", 22), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _68917_part = (*((*(_self_))._field_file))._field_Data.slice((*(_self_))._field_pos);;
			jule::Str _69013_r = _1bc590989_getRune(_self_, &(_68917_part), _6729_raw);;
			_2096a4e4b_WriteStr(&_66913_s, _69013_r);
			(*(_self_))._field_column+=_2095d3462_RuneCountStr(_69013_r);
			if ((_67713_ch == _6709_mark)) {
				goto _iter_end_1c0b073d7;
			};
		}
	_iter_next_1c0b073d7:;
	}
	_iter_end_1c0b073d7:;;
	return _2096a5743_Str(&_66913_s);;
}



inline void _1bc5914e5_newLine(_1bbcac2d8_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _1bc591a56_isOp(_1bbcac2d8_lex* _self_, jule::Slice<jule::U8>* _71024_txt, jule::Str _71037_kind, jule::U64 _71048_id, jule::Ptr<_1bc583a9d_Token>* _71066_t) {
	if ((!(_1bc58c623_bytesHasPrefix(_71024_txt, _71037_kind)))) {
		return false;;
	};
	(*((*(_71066_t))))._field_Kind=_71037_kind;
	(*((*(_71066_t))))._field_Id=_71048_id;
	(*(_self_))._field_pos+=_71037_kind.len();
	return true;;
}



inline jule::Bool _1bc591e52_lexBasicOps(_1bbcac2d8_lex* _self_, jule::Slice<jule::U8> _72030_txt, jule::Ptr<_1bc583a9d_Token>* _72048_tok) {
	{
		auto expr = &(_1bc58bc0a_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0b0de05:;
		if (it != expr_end) {
			_1bc58b48a_kindPair *_72116_pair = it;
			{
				if (_1bc591a56_isOp(_self_, &(_72030_txt), (*(_72116_pair))._field_kind, (*(_72116_pair))._field_id, _72048_tok)) {
					return true;;
				};
			}
			_iter_next_1c0b0de05:;
			++it;
			goto _iter_begin_1c0b0de05;
		}
		_iter_end_1c0b0de05:;
	};
	return false;;
}



inline jule::Bool _1bc59234d_lexId(_1bbcac2d8_lex* _self_, jule::Slice<jule::U8>* _72925_txt, jule::Ptr<_1bc583a9d_Token>* _72943_t) {
	jule::Str _7309_lex = _1bbcad21d_id(_self_, _72925_txt);;
	if ((_7309_lex).empty()) {
		return false;;
	};
	(*((*(_72943_t))))._field_Kind=_7309_lex;
	(*((*(_72943_t))))._field_Id=static_cast<jule::U64>(1LLU);
	return true;;
}



inline jule::Bool _1bc592749_lexNum(_1bbcac2d8_lex* _self_, jule::Slice<jule::U8>* _73926_txt, jule::Ptr<_1bc583a9d_Token>* _73944_t) {
	jule::Str _7409_lex = _1bc590280_num(_self_, _73926_txt);;
	if ((_7409_lex).empty()) {
		return false;;
	};
	(*((*(_73944_t))))._field_Kind=_7409_lex;
	(*((*(_73944_t))))._field_Id=static_cast<jule::U64>(4LLU);
	return true;;
}



inline jule::Ptr<_1bc583a9d_Token> _1bc5929d0_token(_1bbcac2d8_lex* _self_) {
	jule::Ptr<_1bc583a9d_Token> _75113_t = jule::new_ptr<_1bc583a9d_Token>(_1bc583a9d_Token{._field_File=(*(_self_))._field_file, ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _7569_txt = _1bbcad4a4_resume(_self_);;
	if ((_7569_txt == nullptr)) {
		return _75113_t;;
	};
	(*(_75113_t))._field_Column=(*(_self_))._field_column;
	(*(_75113_t))._field_Row=(*(_self_))._field_row;
	{
		
		if (_1bc592749_lexNum(_self_, &(_7569_txt), &(_75113_t))) {
			_case_begin_1c0b15ea6:;
			{
				goto _match_end_1c0b13e1b;
			}
		}
		else if ((_7569_txt[0LL] == '\'')) {
			_case_begin_1c0b1559e:;
			{
				(*(_75113_t))._field_Kind=_1bc590cca_lexRune(_self_, &(_7569_txt));
				(*(_75113_t))._field_Id=static_cast<jule::U64>(4LLU);
				return _75113_t;;
			}
		}
		else if (((_7569_txt[0LL] == '\"') || (_7569_txt[0LL] == '`'))) {
			_case_begin_1c0b15615:;
			{
				(*(_75113_t))._field_Kind=_1bc591061_lexStr(_self_);
				(*(_75113_t))._field_Id=static_cast<jule::U64>(4LLU);
				return _75113_t;;
			}
		}
		else if (_1bc58c623_bytesHasPrefix(&(_7569_txt), jule::Str::lit("//", 2))) {
			_case_begin_1c0b1567b:;
			{
				_1bbcad75c_lexLineComment(_self_, &(_75113_t));
				return _75113_t;;
			}
		}
		else if (_1bc58c623_bytesHasPrefix(&(_7569_txt), jule::Str::lit("/*", 2))) {
			_case_begin_1c0b14a21:;
			{
				_1bbcada15_lexRangeComment(_self_, &(_75113_t));
				return _75113_t;;
			}
		}
		else if (_1bc591e52_lexBasicOps(_self_, _7569_txt, &(_75113_t))) {
			_case_begin_1c0b14a87:;
			{
				goto _match_end_1c0b13e1b;
			}
		}
		else if (_1bc59234d_lexId(_self_, &(_7569_txt), &(_75113_t))) {
			_case_begin_1c0b14aed:;
			{
				{
					auto expr = &(_1bc58b8b9_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c0b192d9:;
					if (it != expr_end) {
						_1bc58b48a_kindPair *_78820_pair = it;
						{
							if (((*(_78820_pair))._field_kind == (*(_75113_t))._field_Kind)) {
								(*(_75113_t))._field_Id=(*(_78820_pair))._field_id;
								goto _iter_end_1c0b192d9;
							};
						}
						_iter_next_1c0b192d9:;
						++it;
						goto _iter_begin_1c0b192d9;
					}
					_iter_end_1c0b192d9:;
				};
			}
		}
		else {
			_case_begin_1c0b149aa:;
			{
				jule::I32 _79513_r = 0;;
				jule::I64 _79516_sz = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2095d15e7_DecodeRune(_7569_txt);
					_79513_r = __jule_assign_result.__jule_result_arg0;
					_79516_sz = __jule_assign_result.__jule_result_arg1;
				});
				_1bbcac86b_pushErr(_self_, jule::Str::lit("undefined token: @", 18), jule::Slice<jule::Any>::make({jule::Any(_79513_r, &__jule_any_type6)}));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_79516_sz;
				return _75113_t;;
			}
		}
		_match_end_1c0b13e1b:;
	};
	(*(_self_))._field_column+=_2095d3462_RuneCountStr((*(_75113_t))._field_Kind);
	return _75113_t;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bbcac2d8_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc59378e_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc59463b_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc594a59_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc59563c_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc595c47_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc596044_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5963da_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5966d7_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc596a6c_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc596d69_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1bc5974c9_IsUnsafe(_1bc597166_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc597166_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1bc597c6b_AutoSized(_1bc597908_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc597908_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc598156_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc598530_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc599971_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc599c6d_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc59a345_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc59a642_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc59aa1b_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc59ade5_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc59b39b_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc59ba2d_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc59be07_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc59c2d1_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5a254a_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5a28e1_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5a2d97_BinaryExpr _Src) {
	_Stream << "BinaryExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1bc5a387b_Unhandled(_1bc5a3507_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _1bc5a3b12_Ignored(_1bc5a3507_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*((*(_self_))._field_Exception))._field_Deferred);;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5a3507_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5a3eec_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5a4827_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5a4ccd_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5a5608_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5a5d01_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5a6791_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5a6e01_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5a71ed_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5a76a4_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5a7a7d_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5a7e57_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5a8254_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5a88b4_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5a8e47_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5a9d5a_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5aa4ba_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1bc5ab07b_IsSelf(_1bc5aac07_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5aac07_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1bc5ac4bc_IsAnon(_1bc5ac159_FnDecl* _self_) {
	return (*(_self_))._field_Ident.equal("<anonymous>", 11);;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5ac159_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5ad314_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5ad6dd_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1bc5ae2c1_IsInf(_1bc5ade5d_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5ade5d_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1bc5aeaeb_IsWhileNext(_1bc5ae788_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5ae788_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5b0190_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5b0569_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5b0943_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5b0de9_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5b12c3_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5b1779_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5b1eb6_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5b246c_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5b2c86_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5b35a0_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5b3a56_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5b4617_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5b4e42_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5b55a2_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5b586b_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5b6262_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5b699e_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Inherits:" << _Src._field_Inherits << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5b710e_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1bc5bd511_FieldIns> _1bc5b87b4_instance(jule::Ptr<_1bc5b8440_Field> _self_) {
	return jule::new_ptr<_1bc5bd511_FieldIns>(_1bc5bd511_FieldIns{._field_Decl=_self_, });;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5b8440_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5ba420_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1bc5be0b1_StructIns> _1bc5bb795_instance(jule::Ptr<_1bc5bb333_Struct> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	jule::Ptr<_1bc5be0b1_StructIns> _10013_ins = jule::new_ptr<_1bc5be0b1_StructIns>(_1bc5be0b1_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_1bc5bd511_FieldIns>>::alloc(0LL, (*(_self_))._field_Fields.len()), ._field_Statics=jule::Slice<jule::Ptr<_1bc7a750d_Var>>::alloc(0LL, (*(_self_))._field_Statics.len()), ._field_Refers=static__1ece224a5_new(), });;
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1370ed5:;
		if (it != expr_end) {
			jule::Ptr<_1bc7a750d_Var> _10721_s = *it;
			{
				{ jule::Slice<jule::Ptr<_1bc7a750d_Var>> &__jule_push_dest = (*(_10013_ins))._field_Statics; __jule_push_dest.push(jule::new_ptr<_1bc7a750d_Var>((*(_10721_s)))); };
			}
			_iter_next_1c1370ed5:;
			++it;
			goto _iter_begin_1c1370ed5;
		}
		_iter_end_1c1370ed5:;
	};
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1371425:;
		if (it != expr_end) {
			jule::Ptr<_1bc5b8440_Field> _11121_f = *it;
			{
				{ jule::Slice<jule::Ptr<_1bc5bd511_FieldIns>> &__jule_push_dest = (*(_10013_ins))._field_Fields; __jule_push_dest.push(_1bc5b87b4_instance(_11121_f)); };
				if ((((!((*(_11121_f))._field_Mutable)) && ((*((*(_11121_f))._field_Kind))._field_Kind != nullptr)) && _1bc842a4e_Mutable((*((*(_11121_f))._field_Kind))._field_Kind.ptr()))) {
					(*(_10013_ins))._field_Mutable=true;
				};
			}
			_iter_next_1c1371425:;
			++it;
			goto _iter_begin_1c1371425;
		}
		_iter_end_1c1371425:;
	};
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		(*(_10013_ins))._field_Methods=(*(_self_))._field_Methods;
	} else {
		(*(_10013_ins))._field_Methods=jule::Slice<jule::Ptr<_1ece1b092_Fn>>::alloc(0LL, (*(_self_))._field_Methods.len());
		{
			auto expr = &((*(_self_))._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c1375a78:;
			if (it != expr_end) {
				jule::Ptr<_1ece1b092_Fn> _12225_f = *it;
				{
					jule::Ptr<_1ece1b092_Fn> _12321_fins = jule::new_ptr<_1ece1b092_Fn>((*(_12225_f)));;
					(*(_12321_fins))._field_Instances=nullptr;
					{ jule::Slice<jule::Ptr<_1ece1b092_Fn>> &__jule_push_dest = (*(_10013_ins))._field_Methods; __jule_push_dest.push(_12321_fins); };
				}
				_iter_next_1c1375a78:;
				++it;
				goto _iter_begin_1c1375a78;
			}
			_iter_end_1c1375a78:;
		};
	};
	return _10013_ins;;
}



inline jule::Ptr<_1bc5be0b1_StructIns> _1bc5bbaa3_appendInstance(_1bc5bb333_Struct* _self_, jule::Ptr<_1bc5be0b1_StructIns>* _13438_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1377e32:;
		if (it != expr_end) {
			jule::Ptr<_1bc5be0b1_StructIns> _14021_ains = *it;
			{
				if (_1bc5bec2c_Same(_14021_ains.ptr(), (*(_13438_ins)))) {
					return _14021_ains;;
				};
			}
			_iter_next_1c1377e32:;
			++it;
			goto _iter_begin_1c1377e32;
		}
		_iter_end_1c1377e32:;
	};
	{ jule::Slice<jule::Ptr<_1bc5be0b1_StructIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13438_ins))); };
	return nullptr;;
}



inline jule::Ptr<_1ece1b092_Fn> _1bc5bbe9e_FindMethod(_1bc5bb333_Struct* _self_, jule::Str _15229_ident, jule::Bool _15241_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c13794d8:;
		if (it != expr_end) {
			jule::Ptr<_1ece1b092_Fn> _15321_f = *it;
			{
				if ((((*(_15321_f))._field_Statically == _15241_statically) && ((*(_15321_f))._field_Ident == _15229_ident))) {
					return _15321_f;;
				};
			}
			_iter_next_1c13794d8:;
			++it;
			goto _iter_begin_1c13794d8;
		}
		_iter_end_1c13794d8:;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc7a750d_Var> _1bc5bc2e0_FindStatic(_1bc5bb333_Struct* _self_, jule::Str _16329_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c137a83b:;
		if (it != expr_end) {
			jule::Ptr<_1bc7a750d_Var> _16421_v = *it;
			{
				if (((*(_16421_v))._field_Ident == _16329_ident)) {
					return _16421_v;;
				};
			}
			_iter_next_1c137a83b:;
			++it;
			goto _iter_begin_1c137a83b;
		}
		_iter_end_1c137a83b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc5b8440_Field> _1bc5bc631_FindField(_1bc5bb333_Struct* _self_, jule::Str _17428_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c137b84d:;
		if (it != expr_end) {
			jule::Ptr<_1bc5b8440_Field> _17521_f = *it;
			{
				if (((*(_17521_f))._field_Ident == _17428_ident)) {
					return _17521_f;;
				};
			}
			_iter_next_1c137b84d:;
			++it;
			goto _iter_begin_1c137b84d;
		}
		_iter_end_1c137b84d:;
	};
	return nullptr;;
}



inline jule::Bool _1bc5bc972_IsImplements(_1bc5bb333_Struct* _self_, jule::Ptr<_1bc713a41_Trait> _18427_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c137c84e:;
		if (it != expr_end) {
			jule::Ptr<_1bc713a41_Trait> *_18516_it = it;
			{
				if ((_18427_t == (*(_18516_it)))) {
					return true;;
				};
			}
			_iter_next_1c137c84e:;
			++it;
			goto _iter_begin_1c137c84e;
		}
		_iter_end_1c137c84e:;
	};
	return false;;
}



inline jule::Bool _1bc5bccb3_IsUses(_1bc5bb333_Struct* _self_, jule::Ptr<_1bc5bb333_Struct> _19421_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c137d630:;
		if (it != expr_end) {
			jule::Ptr<_1bc5bb333_Struct> *_19516_u = it;
			{
				while ((_19421_s == (*(_19516_u)))) {
					{
						return true;;
					}
				_iter_next_1c137dcb2:;
				}
				_iter_end_1c137dcb2:;;
			}
			_iter_next_1c137d630:;
			++it;
			goto _iter_begin_1c137d630;
		}
		_iter_end_1c137d630:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5bb333_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5bd511_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ece0cc87_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ece0d282_BinaryExprModel _Src) {
	_Stream << "BinaryExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ece0d65b_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ece0db89_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ece0e030_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ece0e32c_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ece0e8b0_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ece10262_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ece1063b_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ece10ae2_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ece10ebb_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ece11395_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ece1184b_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ece11dce_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ece12462_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ece12d03_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ece132a9_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ece13683_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ece13980_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ece13d59_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ece14233_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ece1460c_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ece149d6_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ece14e8c_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ece15443_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ece1581c_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ece15b19_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ece15e16_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ece162e0_BuiltinDeleteCallExprModel _Src) {
	_Stream << "BuiltinDeleteCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Key:" << _Src._field_Key;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ece166b9_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ece16a93_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ece1264e_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ece172be_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ece175bb_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ece178b8_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ece17c92_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ece1808e_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ece18d3c_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ece1ceea_ParamIns> _1ece19953_instance(jule::Ptr<_1ece195bd_Param> _self_) {
	return jule::new_ptr<_1ece1ceea_ParamIns>(_1ece1ceea_ParamIns{._field_Decl=_self_, });;
}



inline jule::Bool _1ece19bd9_IsSelf(_1ece195bd_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1ece19e70_IsRef(_1ece195bd_Param* _self_) {
	return (!((*(_self_))._field_Ident).empty() && ((*(_self_))._field_Ident[0LL] == '&'));;
}





std::ostream &operator<<(std::ostream &_Stream, _1ece195bd_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ece1b515_IsVoid(_1ece1b092_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _1ece1b79b_IsMethod(_1ece1b092_Fn* _self_) {
	return ((*(_self_))._field_Owner != nullptr);;
}



inline jule::Bool _1ece1ba32_IsEntryPoint(_1ece1b092_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _1ece1bcb8_IsInit(_1ece1b092_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _1ece1c04e_IsAnon(_1ece1b092_Fn* _self_) {
	return _1bc5867c6_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _1ece1c2d5_AnyVar(_1ece1b092_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*((*(_self_))._field_Result))._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_1ece1de96_FnIns> _1ece1c56b_instanceForce(jule::Ptr<_1ece1b092_Fn> _self_) {
	jule::Ptr<_1ece1de96_FnIns> _10113_ins = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_1bc74261e_Scope>(), ._field_Refers=static__1ece224a5_new(), });;
	(*(_10113_ins))._field_Params=jule::Slice<jule::Ptr<_1ece1ceea_ParamIns>>::alloc(0LL, (*(_self_))._field_Params.len());
	{
		auto expr = &((*(_self_))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1395acb:;
		if (it != expr_end) {
			jule::Ptr<_1ece195bd_Param> _10821_p = *it;
			{
				{ jule::Slice<jule::Ptr<_1ece1ceea_ParamIns>> &__jule_push_dest = (*(_10113_ins))._field_Params; __jule_push_dest.push(_1ece19953_instance(_10821_p)); };
			}
			_iter_next_1c1395acb:;
			++it;
			goto _iter_begin_1c1395acb;
		}
		_iter_end_1c1395acb:;
	};
	if (((*((*(_10113_ins))._field_Decl))._field_Result != nullptr)) {
		(*(_10113_ins))._field_Result=(*((*((*((*(_10113_ins))._field_Decl))._field_Result))._field_Kind))._field_Kind;
	};
	return _10113_ins;;
}



inline jule::Ptr<_1ece1de96_FnIns> _1ece1c802_instance(jule::Ptr<_1ece1b092_Fn> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	return _1ece1c56b_instanceForce(_self_);;
}



inline jule::Ptr<_1ece1de96_FnIns> _1ece1cb10_appendInstance(_1ece1b092_Fn* _self_, jule::Ptr<_1ece1de96_FnIns>* _12938_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		{ jule::Slice<jule::Ptr<_1ece1de96_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		{ jule::Slice<jule::Ptr<_1ece1de96_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c139b021:;
		if (it != expr_end) {
			jule::Ptr<_1ece1de96_FnIns> _14521_ains = *it;
			{
				if (_1ece20a03_Same(_14521_ains.ptr(), (*(_12938_ins)))) {
					return _14521_ains;;
				};
			}
			_iter_next_1c139b021:;
			++it;
			goto _iter_begin_1c139b021;
		}
		_iter_end_1c139b021:;
	};
	{ jule::Slice<jule::Ptr<_1ece1de96_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ece1b092_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ece1d35d_Str(_1ece1ceea_ParamIns* _self_) {
	_2096a4489_StrBuilder _16713_s = static__2096a48da_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Mutable) {
		_2096a4e4b_WriteStr(&_16713_s, jule::Str::lit("mut ", 4));
	};
	if ((*((*(_self_))._field_Decl))._field_Reference) {
		_2096a4e4b_WriteStr(&_16713_s, jule::Str::lit("&_:", 3));
	};
	if (_1ece19bd9_IsSelf((*(_self_))._field_Decl.ptr())) {
		if (_1ece19e70_IsRef((*(_self_))._field_Decl.ptr())) {
			_2096a5204_WriteByte(&_16713_s, '&');
		};
		_2096a4e4b_WriteStr(&_16713_s, jule::Str::lit("self", 4));
		return _2096a5743_Str(&_16713_s);;
	};
	if ((*((*(_self_))._field_Decl))._field_Variadic) {
		_2096a4e4b_WriteStr(&_16713_s, jule::Str::lit("...", 3));
	};
	if (((*(_self_))._field_Kind != nullptr)) {
		_2096a4e4b_WriteStr(&_16713_s, _1bc841586_Str((*(_self_))._field_Kind.ptr()));
	};
	return _2096a5743_Str(&_16713_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ece1ceea_ParamIns _Src) {
	_Stream << _1ece1d35d_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ece1e2d7_Str(_1ece1de96_FnIns* _self_) {
	;
	return _1ece20d44_GetKindStr(_self_, false);;
}



inline jule::Bool _1ece1e628_Equal(jule::Ptr<_1ece1de96_FnIns> _self_, jule::Ptr<_1bc8411bd_TypeKind> _21821_other) {
	jule::Ptr<_1ece1de96_FnIns> _2199_f = _1bc844b0b_Fn(_21821_other.ptr());;
	if ((_2199_f == nullptr)) {
		return false;;
	};
	return _1ece1eabd_EqualFn(_self_, &(_2199_f));;
}



inline jule::Bool _1ece1eabd_EqualFn(jule::Ptr<_1ece1de96_FnIns> _self_, jule::Ptr<_1ece1de96_FnIns>* _22924_f) {
	if (((*((*(_self_))._field_Decl))._field_Exceptional != (*((*((*(_22924_f))))._field_Decl))._field_Exceptional)) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Unsafety != (*((*((*(_22924_f))))._field_Decl))._field_Unsafety)) {
		return false;;
	};
	if ((_1ece1b515_IsVoid((*(_self_))._field_Decl.ptr()) != _1ece1b515_IsVoid((*((*(_22924_f))))._field_Decl.ptr()))) {
		return false;;
	};
	jule::Fn<jule::Bool(jule::Ptr<_1ece1ceea_ParamIns>,jule::Ptr<_1ece1ceea_ParamIns>)> _2399_checkParams = jule::Fn<jule::Bool(jule::Ptr<_1ece1ceea_ParamIns>,jule::Ptr<_1ece1ceea_ParamIns>)>([=](jule::Ptr<_1ece1ceea_ParamIns> _23927_p1, jule::Ptr<_1ece1ceea_ParamIns> _23942_p2) mutable -> jule::Bool {
		if (((*((*(_23927_p1))._field_Decl))._field_Mutable != (*((*(_23942_p2))._field_Decl))._field_Mutable)) {
			return false;;
		};
		if (_1ece19bd9_IsSelf((*(_23927_p1))._field_Decl.ptr())) {
			if ((!(_1ece19bd9_IsSelf((*(_23942_p2))._field_Decl.ptr())))) {
				return false;;
			};
			if ((_1ece19e70_IsRef((*(_23927_p1))._field_Decl.ptr()) != _1ece19e70_IsRef((*(_23942_p2))._field_Decl.ptr()))) {
				return false;;
			};
			return true;;
		};
		if (((*((*(_23927_p1))._field_Decl))._field_Reference != (*((*(_23942_p2))._field_Decl))._field_Reference)) {
			return false;;
		};
		if (((*((*(_23927_p1))._field_Decl))._field_Variadic != (*((*(_23942_p2))._field_Decl))._field_Variadic)) {
			return false;;
		};
		return _1bc8418c7_Equal((*(_23927_p1))._field_Kind, (*(_23942_p2))._field_Kind);;
	});;
	if (((*((*(_22924_f))))._field_Params.len() != (*(_self_))._field_Params.len())) {
		return false;;
	};
	jule::I64 _27113_i = 0LL;;
	for (; (_27113_i < (*(_self_))._field_Params.len()); (_27113_i)++) {
		{
			if ((!(_2399_checkParams((*(_self_))._field_Params[_27113_i], (*((*(_22924_f))))._field_Params[_27113_i])))) {
				return false;;
			};
		}
	_iter_next_1c151c879:;
	}
	_iter_end_1c151c879:;;
	if ((!(_1ece1b515_IsVoid((*(_self_))._field_Decl.ptr())))) {
		if ((!(_1bc8418c7_Equal((*(_self_))._field_Result, (*((*(_22924_f))))._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1ece1ee0e_equalTrait(jule::Ptr<_1ece1de96_FnIns> _self_, jule::Ptr<_1ece1de96_FnIns>* _28827_other) {
	if (((*((*(_self_))._field_Decl))._field_Public != (*((*((*(_28827_other))))._field_Decl))._field_Public)) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Ident != (*((*((*(_28827_other))))._field_Decl))._field_Ident)) {
		return false;;
	};
	if ((!(_1ece1eabd_EqualFn(_self_, _28827_other)))) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Generics.len() != (*((*((*(_28827_other))))._field_Decl))._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1bc8411bd_TypeKind>> _1ece20195_Types(_1ece1de96_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1c1523044:;
			{
				return nullptr;;
			}
		}
		else if ((_1bc845645_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1c15230aa:;
			{
				return jule::Slice<jule::Ptr<_1bc8411bd_TypeKind>>::make({(*(_self_))._field_Result});;
			}
		}
		else {
			_case_begin_1c1522ecd:;
			{
				return (*(_1bc845645_Tup((*(_self_))._field_Result.ptr())))._field_Types;;
			}
		}
		_match_end_1c1522e12:;
	};
}



inline jule::Bool _1ece2042b_IsBuiltin(_1ece1de96_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _1ece206b2_IsAnon(_1ece1de96_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _1ece1c04e_IsAnon((*(_self_))._field_Decl.ptr())));;
}



inline jule::Bool _1ece20a03_Same(_1ece1de96_FnIns* _self_, jule::Ptr<_1ece1de96_FnIns> _33119_f) {
	if ((((*(_self_))._field_Decl != (*(_33119_f))._field_Decl) || ((*(_33119_f))._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1526960:;
		if (it != expr_end) {
			jule::I64 _33613_i = it - expr->begin();
			jule::Ptr<_1bc83e7d7_InsGeneric> *_33616_g = it;
			{
				jule::Ptr<_1bc83e7d7_InsGeneric> _33713_g2 = (*(_33119_f))._field_Generics[_33613_i];;
				if ((((*((*((*(_33616_g))))._field_Kind))._field_BindIdent != (*((*(_33713_g2))._field_Kind))._field_BindIdent) || (!(_1bc8418c7_Equal((*((*(_33616_g))))._field_Kind, (*(_33713_g2))._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1c1526960:;
			++it;
			_33613_i++;
			goto _iter_begin_1c1526960;
		}
		_iter_end_1c1526960:;
	};
	return true;;
}



inline jule::Str _1ece20d44_GetKindStr(_1ece1de96_FnIns* _self_, jule::Bool _34825_ident) {
	_2096a4489_StrBuilder _34913_s = static__2096a48da_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Unsafety) {
		_2096a4e4b_WriteStr(&_34913_s, jule::Str::lit("unsafe ", 7));
	};
	_2096a4e4b_WriteStr(&_34913_s, jule::Str::lit("fn", 2));
	if ((_34825_ident && ((*(_self_))._field_Decl != nullptr))) {
		_2096a5204_WriteByte(&_34913_s, ' ');
		_2096a4e4b_WriteStr(&_34913_s, (*((*(_self_))._field_Decl))._field_Ident);
	};
	_2096a5204_WriteByte(&_34913_s, '(');
	jule::I64 _3639_n = (*(_self_))._field_Params.len();;
	if ((_3639_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c152bcb7:;
			if (it != expr_end) {
				jule::I64 _36517_i = it - expr->begin();
				jule::Ptr<_1ece1ceea_ParamIns> *_36520_p = it;
				{
					_2096a4e4b_WriteStr(&_34913_s, _1ece1d35d_Str((*(_36520_p)).ptr()));
					if ((_36517_i < ((*(_self_))._field_Params.len() - 1LL))) {
						_2096a5204_WriteByte(&_34913_s, ',');
					};
				}
				_iter_next_1c152bcb7:;
				++it;
				_36517_i++;
				goto _iter_begin_1c152bcb7;
			}
			_iter_end_1c152bcb7:;
		};
	};
	_2096a5204_WriteByte(&_34913_s, ')');
	if ((*((*(_self_))._field_Decl))._field_Exceptional) {
		_2096a5204_WriteByte(&_34913_s, '!');
	};
	if ((!(_1ece1b515_IsVoid((*(_self_))._field_Decl.ptr())))) {
		_2096a5204_WriteByte(&_34913_s, ':');
		_2096a4e4b_WriteStr(&_34913_s, _1bc841586_Str((*(_self_))._field_Result.ptr()));
	};
	return _2096a5743_Str(&_34913_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ece1de96_FnIns _Src) {
	_Stream << _1ece1e2d7_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1ece221a8_ReferenceStack> static__1ece224a5_new(void) {
	return jule::new_ptr<_1ece221a8_ReferenceStack>(_1ece221a8_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL, 10LL)});;
}



inline jule::I64 _1ece228a1_Len(_1ece221a8_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_buffer.len());;
}



inline jule::Any _1ece22be2_At(_1ece221a8_ReferenceStack* _self_, jule::I64 _6821_i) {
	return (*(_self_))._field_buffer[_6821_i];;
}



inline void _1ece22e9a_Push(_1ece221a8_ReferenceStack* _self_, jule::Any _7327_ref) {
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_buffer; __jule_push_dest.push(_7327_ref); };
}



inline jule::Bool _1c1a78a0b_Exist(_1ece221a8_ReferenceStack* _self_, jule::Ptr<_1ece1de96_FnIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1a79db4:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type7_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1c1a79db4:;
			++it;
			goto _iter_begin_1c1a79db4;
		}
		_iter_end_1c1a79db4:;
	};
	return false;;
}

inline jule::Bool _1c1d598ad_Exist(_1ece221a8_ReferenceStack* _self_, jule::Ptr<_1bc7a750d_Var> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1d5ac22:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type8_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1c1d5ac22:;
			++it;
			goto _iter_begin_1c1d5ac22;
		}
		_iter_end_1c1d5ac22:;
	};
	return false;;
}

inline jule::Bool _1c1e1ae03_Exist(_1ece221a8_ReferenceStack* _self_, jule::Ptr<_1bc5be0b1_StructIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1e1c2ab:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type9_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1c1e1c2ab:;
			++it;
			goto _iter_begin_1c1e1c2ab;
		}
		_iter_end_1c1e1c2ab:;
	};
	return false;;
}

inline jule::Bool _1c0a1c4ea_Exist(_1ece221a8_ReferenceStack* _self_, jule::Ptr<_1bc713a41_Trait> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0a1d82b:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type10_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1c0a1d82b:;
			++it;
			goto _iter_begin_1c0a1d82b;
		}
		_iter_end_1c0a1d82b:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ece221a8_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ece236c6_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline void _1bc70d2aa_pushErr(_1ece2828b_symbolBuilder* _self_, jule::Ptr<_1bc583a9d_Token>* _33227_token, jule::Str _33242_fmt, jule::Slice<jule::Any> _33255_args) {
	{ jule::Slice<_1ed6c7892_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1bc781e44_compilerErr(_33227_token, true, _33242_fmt, _33255_args)); };
}



inline void _1bc70da3b_pushSuggestion(_1ece2828b_symbolBuilder* _self_, jule::Str _34133_fmt, jule::Slice<jule::Any> _34146_args) {
	{
		_1bc783473_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _34133_fmt, _34146_args);
	};
}



inline jule::Bool _1bc70de37_checkCppUseDeclPath(_1ece2828b_symbolBuilder* _self_, jule::Ptr<_1bc5b35a0_UseDecl>* _34539_decl, jule::Str* _34556_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _3469_ext = _1ed644ee6_Ext((*(_34556_path)));;
	if (((!(_1ed6ba5dd_IsValidHeaderExt(_3469_ext))) && (!(_1ed6ba8a7_IsValidCppExt(_3469_ext))))) {
		_1bc70d2aa_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str::lit("invalid C++ extension: @", 24), jule::Slice<jule::Any>::make({jule::Any(_3469_ext, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_230a44a56_Status> _3539_info = ({
		auto except = static__1ed647218_Of((*(_34556_path)));
		(except.ok()) ? (except.result) : ({{
			_1bc70d2aa_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_34539_decl))))._field_LinkPath, &__jule_any_type4)}));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_230a44a56_Status>(nullptr);});
	});;
	if (_230a44e30_IsDir(_3539_info.ptr())) {
		_1bc70d2aa_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_34539_decl))))._field_LinkPath, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1bc763e04_ImportInfo> _1bc70e245_buildCppHeaderImport(_1ece2828b_symbolBuilder* _self_, jule::Ptr<_1bc5b35a0_UseDecl>* _36544_decl) {
	jule::Str _36613_path = (*((*(_36544_decl))))._field_LinkPath;;
	if ((!(_1ed6ba313_IsStdHeaderPath((*((*(_36544_decl))))._field_LinkPath)))) {
		_36613_path=_1ed644c2c_Join(jule::Slice<jule::Str>::make({_1bc5899d8_Dir((*((*((*(_36544_decl))))._field_Token))._field_File.ptr()),(*((*(_36544_decl))))._field_LinkPath}));
		jule::Bool _37017_ok = _1bc70de37_checkCppUseDeclPath(_self_, _36544_decl, &(_36613_path));;
		if ((!(_37017_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1ed6452b0_Abs(_36613_path);
			_36613_path = __jule_assign_result.__jule_result_arg0;
			_37017_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_37017_ok))) {
			_1bc70d2aa_pushErr(_self_, &((*((*(_36544_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_36544_decl))))._field_LinkPath, &__jule_any_type4)}));
		};
	};
	return jule::new_ptr<_1bc763e04_ImportInfo>(_1bc763e04_ImportInfo{._field_Token=(*((*(_36544_decl))))._field_Token, ._field_Path=_36613_path, ._field_LinkPath=(*((*(_36544_decl))))._field_LinkPath, ._field_Ident=jule::Str(), ._field_Binded=true, ._field_Std=false, ._field_Package=nullptr, });;
}



inline jule::Ptr<_1bc763e04_ImportInfo> _1bc70e586_buildStdImport(_1ece2828b_symbolBuilder* _self_, jule::Ptr<_1bc5b35a0_UseDecl>* _39338_decl) {
	jule::Str _39513_path = (*((*(_39338_decl))))._field_LinkPath.slice(5LL);;
	_39513_path=_1ed640a3b_Replace(_39513_path, jule::Str::lit("::", 2), jule::Str::lit("\\", 1), -1LL);
	_39513_path=_1ed644c2c_Join(jule::Slice<jule::Str>::make({_1eeea8094_PathStdlib,_39513_path}));
	jule::Bool _39815_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1ed6452b0_Abs(_39513_path);
		_39513_path = __jule_assign_result.__jule_result_arg0;
		_39815_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_39815_ok))) {
		_1bc70d2aa_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_230a44a56_Status> _4059_info = ({
		auto except = static__1ed647218_Of(_39513_path);
		(except.ok()) ? (except.result) : ({{
			_1bc70d2aa_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
			return nullptr;;
		} jule::Ptr<_230a44a56_Status>(nullptr);});
	});;
	if ((!(_230a44e30_IsDir(_4059_info.ptr())))) {
		_1bc70d2aa_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _4159_i = (_1ed63b5b4_FindLast((*((*(_39338_decl))))._field_LinkPath, jule::Str::lit("::", 2)) + 1LL);;
	jule::Str _4169_ident = (*((*(_39338_decl))))._field_LinkPath.slice(_4159_i);;
	return jule::new_ptr<_1bc763e04_ImportInfo>(_1bc763e04_ImportInfo{._field_Token=(*((*(_39338_decl))))._field_Token, ._field_Path=_39513_path, ._field_LinkPath=(*((*(_39338_decl))))._field_LinkPath, ._field_Ident=_4169_ident, ._field_Alias=(*((*(_39338_decl))))._field_Alias, ._field_Binded=false, ._field_Std=true, ._field_ImportAll=(*((*(_39338_decl))))._field_Full, ._field_Package=jule::new_ptr<_1bc766d2a_Package>(_1bc766d2a_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1bc763e04_ImportInfo> _1bc70e8c7_buildIdentImport(jule::Ptr<_1ece2828b_symbolBuilder> _self_, jule::Ptr<_1bc5b35a0_UseDecl>* _43341_decl) {
	if ((((*((*(_43341_decl))))._field_LinkPath.equal("_", 1) || (_1ed63ac01_Find((*((*(_43341_decl))))._field_LinkPath, jule::Str::lit("::_::", 5)) != -1LL)) || _1ed63a44d_HasSuffix((*((*(_43341_decl))))._field_LinkPath, jule::Str::lit("::_", 3)))) {
		_1bc70d2aa_pushErr(_self_.ptr(), &((*((*(_43341_decl))))._field_Token), jule::Str::lit("use declaration paths cannot contain blank identifier", 53), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _4419_modPath = _1bc760ede_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1bc760054_GetModPath((*(_self_))._field_importer);;
	if ((_4419_modPath.len() == 0LL)) {
		_1bc70d2aa_pushErr(_self_.ptr(), &((*((*(_43341_decl))))._field_Token), jule::Str::lit("no module file found in current directory or any parent directory", 65), jule::Slice<jule::Any>());
		_1bc70da3b_pushSuggestion(_self_.ptr(), jule::Str::lit("use \"julec mod init\" command to initialize module", 49), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _44813_path = (*((*(_43341_decl))))._field_LinkPath;;
	_44813_path=_1ed640a3b_Replace(_44813_path, jule::Str::lit("::", 2), jule::Str::lit("\\", 1), -1LL);
	_44813_path=_1ed644c2c_Join(jule::Slice<jule::Str>::make({_4419_modPath,_44813_path}));
	jule::Bool _45215_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1ed6452b0_Abs(_44813_path);
		_44813_path = __jule_assign_result.__jule_result_arg0;
		_45215_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_45215_ok))) {
		_1bc70d2aa_pushErr(_self_.ptr(), &((*((*(_43341_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43341_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_230a44a56_Status> _4599_info = ({
		auto except = static__1ed647218_Of(_44813_path);
		(except.ok()) ? (except.result) : ({{
			_1bc70d2aa_pushErr(_self_.ptr(), &((*((*(_43341_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43341_decl))))._field_LinkPath, &__jule_any_type4)}));
			return nullptr;;
		} jule::Ptr<_230a44a56_Status>(nullptr);});
	});;
	if ((!(_230a44e30_IsDir(_4599_info.ptr())))) {
		_1bc70d2aa_pushErr(_self_.ptr(), &((*((*(_43341_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43341_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _4699_i = (_1ed63b5b4_FindLast((*((*(_43341_decl))))._field_LinkPath, jule::Str::lit("::", 2)) + 1LL);;
	jule::Str _4709_ident = (*((*(_43341_decl))))._field_LinkPath.slice(_4699_i);;
	return jule::new_ptr<_1bc763e04_ImportInfo>(_1bc763e04_ImportInfo{._field_Token=(*((*(_43341_decl))))._field_Token, ._field_Path=_44813_path, ._field_LinkPath=(*((*(_43341_decl))))._field_LinkPath, ._field_Ident=_4709_ident, ._field_Alias=(*((*(_43341_decl))))._field_Alias, ._field_Binded=false, ._field_Std=false, ._field_ImportAll=(*((*(_43341_decl))))._field_Full, ._field_Package=jule::new_ptr<_1bc766d2a_Package>(_1bc766d2a_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1bc763e04_ImportInfo> _1bc70ec18_buildImport(jule::Ptr<_1ece2828b_symbolBuilder> _self_, jule::Ptr<_1bc5b35a0_UseDecl>* _48736_decl) {
	{
		
		if ((*((*(_48736_decl))))._field_Binded) {
			_case_begin_1c156b741:;
			{
				return _1bc70e245_buildCppHeaderImport(_self_.ptr(), _48736_decl);;
			}
		}
		else if ((*((*(_48736_decl))))._field_Std) {
			_case_begin_1c156b7a7:;
			{
				return _1bc70e586_buildStdImport(_self_.ptr(), _48736_decl);;
			}
		}
		else {
			_case_begin_1c156b6ca:;
			{
				return _1bc70e8c7_buildIdentImport(_self_, _48736_decl);;
			}
		}
		_match_end_1c156b60e:;
	};
}



inline jule::Bool _1bc710059_checkDuplicateUseDecl(_1ece2828b_symbolBuilder* _self_, jule::Ptr<_1bc763e04_ImportInfo>* _49841_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1bc763e04_ImportInfo> _5009_lpkg = _1bc80a9e5_SelectPackage((*(_self_))._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_1bc763e04_ImportInfo>)>([=](jule::Ptr<_1bc763e04_ImportInfo> _50045_spkg) mutable -> jule::Bool {
		return ((*((*(_49841_pkg))))._field_Path == (*(_50045_spkg))._field_Path);;
	}));;
	if ((_5009_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_1bc70d2aa_pushErr(_self_, &((*((*(_49841_pkg))))._field_Token), jule::Str::lit("use declaration duplication: @ is already used above", 52), jule::Slice<jule::Any>::make({jule::Any((*((*(_49841_pkg))))._field_LinkPath, &__jule_any_type4)}));
	_1bc70da3b_pushSuggestion(_self_, jule::Str::lit("remove this use declaration, already used, it is safe", 53), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline void _1bc7103bc_implImportSelections(_1ece2828b_symbolBuilder* _self_, jule::Ptr<_1bc763e04_ImportInfo>* _51244_imp, jule::Ptr<_1bc5b35a0_UseDecl>* _51267_decl) {
	(*((*(_51244_imp))))._field_Selected=(*((*(_51267_decl))))._field_Selected;
	{
		auto expr = &((*((*(_51244_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1571768:;
		if (it != expr_end) {
			jule::Ptr<_1bc583a9d_Token> _51416_item = *it;
			{
				{
					auto expr = &((*((*(_51244_imp))))._field_Selected);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c157215e:;
					if (it != expr_end) {
						jule::Ptr<_1bc583a9d_Token> _51520_citem = *it;
						{
							if ((_51416_item == _51520_citem)) {
								goto _iter_end_1c157215e;
							} else if (((*(_51416_item))._field_Kind == (*(_51520_citem))._field_Kind)) {
								_1bc70d2aa_pushErr(_self_, &(_51416_item), jule::Str::lit("duplicated selection: @ is already selected", 43), jule::Slice<jule::Any>::make({jule::Any((*(_51416_item))._field_Kind, &__jule_any_type4)}));
								_1bc70da3b_pushSuggestion(_self_, jule::Str::lit("remove this use selection, already selected, it is safe", 55), jule::Slice<jule::Any>());
								goto _iter_end_1c157215e;
							};
						}
						_iter_next_1c157215e:;
						++it;
						goto _iter_begin_1c157215e;
					}
					_iter_end_1c157215e:;
				};
			}
			_iter_next_1c1571768:;
			++it;
			goto _iter_begin_1c1571768;
		}
		_iter_end_1c1571768:;
	};
}



inline jule::Str _1bc71070d_getAsLinkPath(jule::Ptr<_1ece2828b_symbolBuilder> _self_, jule::Str _52737_path) {
	if (_1ed639b56_HasPrefix(_52737_path, _1eeea8094_PathStdlib)) {
		(_52737_path).mut_slice(_1eeea8094_PathStdlib.len());;
		return (jule::Str::lit("std", 3) + _1ed640a3b_Replace(_52737_path, jule::Str::lit("\\", 1), jule::Str::lit("::", 2), -1LL));;
	};
	jule::Str _5339_root;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1ed6452b0_Abs(_1bc760ede_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1bc760054_GetModPath((*(_self_))._field_importer));
		_5339_root = __jule_assign_result.__jule_result_arg0;
	});
	(_52737_path).mut_slice(_5339_root.len());;
	if ((_52737_path[0LL] == 92LLU)) {
		(_52737_path).mut_slice(1LL);;
	};
	return _1ed640a3b_Replace(_52737_path, jule::Str::lit("\\", 1), jule::Str::lit("::", 2), -1LL);;
}



inline void _1bc710b2b_pushCycleError(jule::Ptr<_1ece2828b_symbolBuilder> _self_, jule::Ptr<_1ece2828b_symbolBuilder>* _54135_sb, jule::Str _54155_path, _2096a4489_StrBuilder* _54171_message) {
	;
	jule::Str _5439_refersTo = _1ed6c7d04_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_1bc71070d_getAsLinkPath(_self_, _1bc5899d8_Dir((*((*((*(_54135_sb))))._field_table))._field_File.ptr())), &__jule_any_type4),jule::Any(_1bc71070d_getAsLinkPath(_self_, _54155_path), &__jule_any_type4)}));;
	jule::Str _5479_m = _2096a5743_Str(_54171_message);;
	_2096a4e4b_WriteStr(_54171_message, _1ed63935e_Repeat(jule::Str::lit(" ", 1), 7LL));
	_2096a4e4b_WriteStr(_54171_message, _5439_refersTo);
	_2096a5204_WriteByte(_54171_message, '\n');
	_2096a4e4b_WriteStr(_54171_message, _5479_m);
}



inline void _1bc711049_pushCrossCycleError(jule::Ptr<_1ece2828b_symbolBuilder> _self_, jule::Ptr<_1ece2828b_symbolBuilder>* _55440_target, jule::Ptr<_1bc763e04_ImportInfo>* _55465_imp, jule::Ptr<_1bc583a9d_Token>* _55484_errorToken) {
	_2096a4489_StrBuilder _55513_message = static__2096a48da_New(32LL);;
	_1bc710b2b_pushCycleError(_self_, &(_self_), (*((*(_55465_imp))))._field_Path, &(_55513_message));
	jule::Ptr<_1ece2828b_symbolBuilder> _55913_owner = (*(_self_))._field_owner;;
	jule::Ptr<_1ece2828b_symbolBuilder> _56013_old = _self_;;
	while (((*(_55913_owner))._field_owner != nullptr)) {
		{
			_1bc710b2b_pushCycleError(_self_, &((*(_56013_old))._field_owner), _1bc5899d8_Dir((*((*(_56013_old))._field_table))._field_File.ptr()), &(_55513_message));
			if (((*(_55913_owner))._field_owner == (*(_55440_target)))) {
				_1bc710b2b_pushCycleError(_self_, _55440_target, _1bc5899d8_Dir((*((*(_55913_owner))._field_table))._field_File.ptr()), &(_55513_message));
				goto _iter_end_1c157984d;
			};
			_56013_old=_55913_owner;
			_55913_owner=(*(_55913_owner))._field_owner;
		}
	_iter_next_1c157984d:;
	}
	_iter_end_1c157984d:;;
	_1bc70d2aa_pushErr(_self_.ptr(), _55484_errorToken, jule::Str::lit("illegal cross cycle in use declarations;\n@", 42), jule::Slice<jule::Any>::make({jule::Any(_2096a5743_Str(&_55513_message), &__jule_any_type4)}));
}



inline jule::Bool _1bc711445_checkImportCycles(jule::Ptr<_1ece2828b_symbolBuilder> _self_, jule::Ptr<_1bc763e04_ImportInfo> _57737_imp, jule::Ptr<_1bc5b35a0_UseDecl>* _57756_decl) {
	if (((*(_57737_imp))._field_Path == _1bc5899d8_Dir((*((*(_self_))._field_table))._field_File.ptr()))) {
		_1bc70d2aa_pushErr(_self_.ptr(), &((*((*(_57756_decl))))._field_Token), jule::Str::lit("illegal cycle in use declaration, package @ refers to itself", 60), jule::Slice<jule::Any>::make({jule::Any(_1bc71070d_getAsLinkPath(_self_, (*(_57737_imp))._field_Path), &__jule_any_type4)}));
		return false;;
	};
	if (((*(_self_))._field_owner == nullptr)) {
		return true;;
	};
	jule::Ptr<_1ece2828b_symbolBuilder> _58713_owner = (*(_self_))._field_owner;;
	_julec_label_1c15813b0:;
	if ((_1bc5899d8_Dir((*((*(_58713_owner))._field_table))._field_File.ptr()) == (*(_57737_imp))._field_Path)) {
		_1bc711049_pushCrossCycleError(_self_, &(_58713_owner), &(_57737_imp), &((*((*(_57756_decl))))._field_Token));
		return false;;
	};
	if (((*(_58713_owner))._field_owner != nullptr)) {
		_58713_owner=(*(_58713_owner))._field_owner;
		goto _julec_label_1c15813b0;
	};
	return true;;
}



inline void _1bc711863_checkPackageAccessibility(_1ece2828b_symbolBuilder* _self_, jule::Ptr<_1bc5b35a0_UseDecl>* _60845_decl, jule::Str* _60862_mod, jule::Str* _60873_path) {
	if (((_1bc760ede_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1bc760054_GetModPath((*(_self_))._field_importer) != (*(_60862_mod))) && _1ed63e661_Contains((*(_60873_path)), jule::Str::lit("internal", 8)))) {
		_1bc70d2aa_pushErr(_self_, &((*((*(_60845_decl))))._field_Token), jule::Str::lit("you cannot access to internal packages", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1bc711c5e_importPackage(jule::Ptr<_1ece2828b_symbolBuilder> _self_, jule::Ptr<_1bc763e04_ImportInfo>* _61438_imp, jule::Ptr<_1bc5b35a0_UseDecl>* _61461_decl) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_61438_imp))))._field_Binded) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1bc763e04_ImportInfo> _61913_port = _1bc760ede_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1bc7606d6_GetImport((*(_self_))._field_importer, (*((*(_61438_imp))))._field_Path);;
	if ((_61913_port != nullptr)) {
		(*((*(_61438_imp))))._field_Package=(*(_61913_port))._field_Package;
		(*((*(_61438_imp))))._field_Duplicate=true;
		jule::Str _62413_oldMod = _1bc760ede_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1bc760054_GetModPath((*(_self_))._field_importer);;
		_1bc760ede_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1bc75ecbd_SetModPath((*(_self_))._field_importer, _1bc760ede_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1bc760395_ModById((*(_self_))._field_importer, (*((*(_61438_imp))))._field_ModId));
		_1bc711863_checkPackageAccessibility(_self_.ptr(), _61461_decl, &(_62413_oldMod), &((*(_61913_port))._field_Path));
		_1bc760ede_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1bc75ecbd_SetModPath((*(_self_))._field_importer, _62413_oldMod);
	} else {
		if ((!(_1bc711445_checkImportCycles(_self_, (*(_61438_imp)), _61461_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _63313_oldMod = _1bc760ede_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1bc760054_GetModPath((*(_self_))._field_importer);;
		__JULE_DEFER({
			_1bc760ede_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1bc75ecbd_SetModPath((*(_self_))._field_importer, _63313_oldMod);
		});;
		if ((*((*(_61438_imp))))._field_Std) {
			_1bc760ede_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1bc75ecbd_SetModPath((*(_self_))._field_importer, _1eeea8094_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1bc59378e_Ast>> _63817_asts;;
		jule::Slice<_1ed6c7892_Log> _63827_errors;;
		({
			__jule_tuple_sx_1bc59378e_Ast__jule_tuple_s_1ed6c7892_Log __jule_assign_result = _1bc760ede_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1bc760ad2_ImportPackage((*(_self_))._field_importer, (*((*(_61438_imp))))._field_Path, (!((*((*(_61438_imp))))._field_Std)));
			_63817_asts = __jule_assign_result.__jule_result_arg0;
			_63827_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_63827_errors.len() > 0LL)) {
			((*(_self_))._field_errors).append(_63827_errors);;
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1bc711863_checkPackageAccessibility(_self_.ptr(), _61461_decl, &(_63313_oldMod), &((*((*(_61438_imp))))._field_Path));
		{
			auto expr = &(_63817_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c158c29a:;
			if (it != expr_end) {
				jule::Ptr<_1bc59378e_Ast> _64625_ast = *it;
				{
					jule::Ptr<_1bc80a50b_SymbolTable> _64725_table = nullptr;;
					({
						__jule_tuple_x_1bc80a50b_SymbolTable__jule_tuple_s_1ed6c7892_Log __jule_assign_result = _1bc8619e6_buildSymbols(&(_64625_ast), &((*(_self_))._field_importer), _self_);
						_64725_table = __jule_assign_result.__jule_result_arg0;
						_63827_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_63827_errors.len() > 0LL)) {
						((*(_self_))._field_errors).append(_63827_errors);;
						__jule_func_result = false;
						return __jule_func_result;;
					};
					{ jule::Slice<jule::Ptr<_1bc80a50b_SymbolTable>> &__jule_push_dest = (*((*((*(_61438_imp))))._field_Package))._field_Files; __jule_push_dest.push(_64725_table); };
				}
				_iter_next_1c158c29a:;
				++it;
				goto _iter_begin_1c158c29a;
			}
			_iter_end_1c158c29a:;
		};
	};
	_1bc7103bc_implImportSelections(_self_.ptr(), _61438_imp, _61461_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1bc763e04_ImportInfo> _1bc7120a0_importUseDecl(jule::Ptr<_1ece2828b_symbolBuilder> _self_, jule::Ptr<_1bc5b35a0_UseDecl>* _66138_decl) {
	jule::Ptr<_1bc763e04_ImportInfo> _66213_imp = _1bc70ec18_buildImport(_self_, _66138_decl);;
	if ((_66213_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _66813_ok = _1bc710059_checkDuplicateUseDecl(_self_.ptr(), &(_66213_imp));;
	if ((!(_66813_ok))) {
		return nullptr;;
	};
	_66813_ok=_1bc711c5e_importPackage(_self_, &(_66213_imp), _66138_decl);
	{ jule::Slice<jule::Ptr<_1bc763e04_ImportInfo>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Imports; __jule_push_dest.push(_66213_imp); };
	if (_66813_ok) {
		_1bc760ede_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1bc760d8a_Imported((*(_self_))._field_importer, _66213_imp);
		return _66213_imp;;
	};
	return nullptr;;
}



inline void _1bc71229d_importUseDecls(jule::Ptr<_1ece2828b_symbolBuilder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c15933e4:;
		if (it != expr_end) {
			jule::Ptr<_1bc5b35a0_UseDecl> _68321_decl = *it;
			{
				_1bc7120a0_importUseDecl(_self_, &(_68321_decl));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					goto _iter_end_1c15933e4;
				};
			}
			_iter_next_1c15933e4:;
			++it;
			goto _iter_begin_1c15933e4;
		}
		_iter_end_1c15933e4:;
	};
}



inline void _1bc712556_appendNode(_1ece2828b_symbolBuilder* _self_, _1bc59463b_Node* _69234_node) {
	{
		auto &_match_expr{ (*(_69234_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1c1594659:;
			{
				{ jule::Slice<jule::Ptr<_1bc73c1b8_Impl>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Impls; __jule_push_dest.push(_1ece27bc5_buildImpl((*(_69234_node))._field_Data.cast_ptr<_1bc5b710e_Impl>(&__jule_any_type11))); };
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1c159499a:;
			{
				jule::Ptr<_1bc8403cb_TypeAlias> _69717_ta = _1ece24111_buildTypeAlias((*(_69234_node))._field_Data.cast_ptr<_1bc5b1eb6_TypeAliasDecl>(&__jule_any_type12));;
				{ jule::Slice<jule::Ptr<_1bc8403cb_TypeAlias>> &__jule_push_dest = (*((*(_self_))._field_table))._field_TypeAliases; __jule_push_dest.push(_69717_ta); };
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1c1594a11:;
			{
				jule::Ptr<_1bc5bb333_Struct> _70017_srct = _1ece249d5_buildStruct((*(_69234_node))._field_Data.cast_ptr<_1bc5b6262_StructDecl>(&__jule_any_type13));;
				{ jule::Slice<jule::Ptr<_1bc5bb333_Struct>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Structs; __jule_push_dest.push(_70017_srct); };
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1c1595270:;
			{
				jule::Ptr<_1ece1b092_Fn> _70317_f = _1ece256c8_buildFunc((*(_69234_node))._field_Data.cast_ptr<_1bc5ac159_FnDecl>(&__jule_any_type14));;
				{ jule::Slice<jule::Ptr<_1ece1b092_Fn>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Funcs; __jule_push_dest.push(_70317_f); };
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1c15952d6:;
			{
				jule::Ptr<_1bc713a41_Trait> _70617_t = _1ece26025_buildTrait((*(_69234_node))._field_Data.cast_ptr<_1bc5b699e_TraitDecl>(&__jule_any_type15));;
				{ jule::Slice<jule::Ptr<_1bc713a41_Trait>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Traits; __jule_push_dest.push(_70617_t); };
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1c159534c:;
			{
				jule::Ptr<_1bc7a750d_Var> _70917_v = _1ece27642_buildVar((*(_69234_node))._field_Data.cast_ptr<_1bc5ad314_VarDecl>(&__jule_any_type16));;
				{ jule::Slice<jule::Ptr<_1bc7a750d_Var>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Vars; __jule_push_dest.push(_70917_v); };
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1c15953b3:;
			{
				jule::Ptr<_1bc71624c_Enum> _71217_e = _1ece26a2b_buildEnum((*(_69234_node))._field_Data.cast_ptr<_1bc5b4617_EnumDecl>(&__jule_any_type17));;
				{ jule::Slice<jule::Ptr<_1bc71624c_Enum>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Enums; __jule_push_dest.push(_71217_e); };
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1c1595429:;
			{
				jule::Ptr<_1bc717957_TypeEnum> _71517_e = _1ece27378_buildTypeEnum((*(_69234_node))._field_Data.cast_ptr<_1bc5b55a2_TypeEnumDecl>(&__jule_any_type18));;
				{ jule::Slice<jule::Ptr<_1bc717957_TypeEnum>> &__jule_push_dest = (*((*(_self_))._field_table))._field_TypeEnums; __jule_push_dest.push(_71517_e); };
			}
		}
		else {
			_case_begin_1c159488a:;
			{
				_1bc70d2aa_pushErr(_self_, &((*(_69234_node))._field_Token), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c1594835:;
	};
}



inline void _1bc712754_appendNodes(_1ece2828b_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c159cec0:;
		if (it != expr_end) {
			_1bc59463b_Node _72321_node = *it;
			{
				_1bc712556_appendNode(_self_, &(_72321_node));
			}
			_iter_next_1c159cec0:;
			++it;
			goto _iter_begin_1c159cec0;
		}
		_iter_end_1c159cec0:;
	};
}



inline void _1bc712a0c_pushDirectivePass(_1ece2828b_symbolBuilder* _self_, jule::Ptr<_1bc594a59_Directive>* _72841_d) {
	if (((*((*(_72841_d))))._field_Args.len() == 0LL)) {
		_1bc70d2aa_pushErr(_self_, &((*((*(_72841_d))))._field_Tag), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_72841_d))))._field_Args.len() > 1LL)) {
		jule::Ptr<_1bc583a9d_Token> _73313_arg = (*((*(_72841_d))))._field_Args[1LL];;
		_1bc70d2aa_pushErr(_self_, &(_73313_arg), jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_72841_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1bc583a9d_Token> _7379_arg = (*((*(_72841_d))))._field_Args[0LL];;
	if (((*(_7379_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1bc70d2aa_pushErr(_self_, &(_7379_arg), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_7379_arg))._field_Kind[0LL] != '\"')) {
		_1bc70d2aa_pushErr(_self_, &(_7379_arg), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<_1ece236c6_Pass> &__jule_push_dest = (*((*(_self_))._field_table))._field_Passes; __jule_push_dest.push(_1ece236c6_Pass{._field_Token=(*((*(_72841_d))))._field_Tag, ._field_Text=(*(_7379_arg))._field_Kind.slice(1LL, ((*(_7379_arg))._field_Kind.len() - 1LL))}); };
}



inline void _1bc712c0a_appendTopDirectives(_1ece2828b_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c15a4867:;
		if (it != expr_end) {
			jule::Ptr<_1bc594a59_Directive> _75521_d = *it;
			{
				{
					auto &_match_expr{ (*((*(_75521_d))._field_Tag))._field_Kind };
					
					if (_match_expr == jule::Str::lit("pass", 4)) {
						_case_begin_1c15a668d:;
						{
							_1bc712a0c_pushDirectivePass(_self_, &(_75521_d));
						}
					}
					_match_end_1c15a65c2:;
				};
			}
			_iter_next_1c15a4867:;
			++it;
			goto _iter_begin_1c15a4867;
		}
		_iter_end_1c15a4867:;
	};
}



inline void _1bc712e08_build(jule::Ptr<_1ece2828b_symbolBuilder> _self_) {
	(*(_self_))._field_table=jule::new_ptr<_1bc80a50b_SymbolTable>(_1bc80a50b_SymbolTable{._field_File=(*((*(_self_))._field_ast))._field_File, });
	_1bc712c0a_appendTopDirectives(_self_.ptr());
	_1bc71229d_importUseDecls(_self_);
	if (((*(_self_))._field_errors.len() > 0LL)) {
		return;;
	};
	_1bc712754_appendNodes(_self_.ptr());
	if (((*(_self_))._field_errors.len() > 0LL)) {
		return;;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ece2828b_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1bc713e09_Str(_1bc713a41_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1bc71424a_Equal(jule::Ptr<_1bc713a41_Trait> _self_, jule::Ptr<_1bc8411bd_TypeKind> _2521_other) {
	jule::Ptr<_1bc713a41_Trait> _269_trt = _1bc845128_Trait(_2521_other.ptr());;
	return (_self_ == _269_trt);;
}



inline jule::Ptr<_1ece1b092_Fn> _1bc7146e0_FindMethod(_1bc713a41_Trait* _self_, jule::Str _3429_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c15aa0cb:;
		if (it != expr_end) {
			jule::Ptr<_1ece1b092_Fn> _3521_f = *it;
			{
				if (((*(_3521_f))._field_Ident == _3429_ident)) {
					return _3521_f;;
				};
			}
			_iter_next_1c15aa0cb:;
			++it;
			goto _iter_begin_1c15aa0cb;
		}
		_iter_end_1c15aa0cb:;
	};
	return _1bc714d72_findMethodInherit(_self_, &(_3429_ident));;
}



inline jule::Ptr<_1ece1b092_Fn> _1bc714d72_findMethodInherit(_1bc713a41_Trait* _self_, jule::Str* _5537_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c15ad2cc:;
		if (it != expr_end) {
			jule::Ptr<_1bc848390_TypeSymbol> _5621_i = *it;
			{
				if (((*(_5621_i))._field_Kind == nullptr)) {
					goto _iter_next_1c15ad2cc;
				};
				jule::Ptr<_1bc713a41_Trait> _6017_t = _1bc845128_Trait((*(_5621_i))._field_Kind.ptr());;
				if ((_6017_t != nullptr)) {
					jule::Ptr<_1ece1b092_Fn> _6221_f2 = _1bc7146e0_FindMethod(_6017_t.ptr(), (*(_5537_ident)));;
					if ((_6221_f2 != nullptr)) {
						return _6221_f2;;
					};
				};
			}
			_iter_next_1c15ad2cc:;
			++it;
			goto _iter_begin_1c15ad2cc;
		}
		_iter_end_1c15ad2cc:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc713a41_Trait _Src) {
	_Stream << _1bc713e09_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1bc715a87_AutoExpr(_1bc7156d0_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc7156d0_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1bc7165c1_Str(_1bc71624c_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1bc716912_Equal(jule::Ptr<_1bc71624c_Enum> _self_, jule::Ptr<_1bc8411bd_TypeKind> _3821_other) {
	jule::Ptr<_1bc71624c_Enum> _399_enm = _1bc8440c2_Enum(_3821_other.ptr());;
	return (_self_ == _399_enm);;
}



inline jule::Ptr<_1bc7156d0_EnumItem> _1bc716d41_FindItem(_1bc71624c_Enum* _self_, jule::Str _4727_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c15b1b2c:;
		if (it != expr_end) {
			jule::Ptr<_1bc7156d0_EnumItem> _4821_item = *it;
			{
				if (((*(_4821_item))._field_Ident == _4727_ident)) {
					return _4821_item;;
				};
			}
			_iter_next_1c15b1b2c:;
			++it;
			goto _iter_begin_1c15b1b2c;
		}
		_iter_end_1c15b1b2c:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc71624c_Enum _Src) {
	_Stream << _1bc7165c1_Str(&_Src);
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc717380_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1bc717c98_Str(_1bc717957_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1bc7180d9_Equal(jule::Ptr<_1bc717957_TypeEnum> _self_, jule::Ptr<_1bc8411bd_TypeKind> _8021_other) {
	jule::Ptr<_1bc717957_TypeEnum> _819_tenm = _1bc844358_TypeEnum(_8021_other.ptr());;
	return (_self_ == _819_tenm);;
}



inline jule::Ptr<_1bc717380_TypeEnumItem> _1bc718518_FindItem(_1bc717957_TypeEnum* _self_, jule::Str _8927_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c15b3e2b:;
		if (it != expr_end) {
			jule::Ptr<_1bc717380_TypeEnumItem> _9021_item = *it;
			{
				if (((*(_9021_item))._field_Ident == _8927_ident)) {
					return _9021_item;;
				};
			}
			_iter_next_1c15b3e2b:;
			++it;
			goto _iter_begin_1c15b3e2b;
		}
		_iter_end_1c15b3e2b:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc717957_TypeEnum _Src) {
	_Stream << _1bc717c98_Str(&_Src);
	return _Stream;
}



inline jule::Str _1bc71ae33_Str(_1bc71aaae_comptimeRange* _self_) {
	return jule::Str::lit("comptimeRange", 13);;
}



inline jule::Bool _1bc71b274_Equal(jule::Ptr<_1bc71aaae_comptimeRange> _self_, jule::Ptr<_1bc8411bd_TypeKind> _3621_other) {
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc71aaae_comptimeRange _Src) {
	_Stream << _1bc71ae33_Str(&_Src);
	return _Stream;
}



inline jule::Str _1bc71b94a_Str(_1bc71b582_comptimeStructField* _self_) {
	return jule::Str::lit("comptimeStructField", 19);;
}



inline jule::Bool _1bc71bc8b_Equal(jule::Ptr<_1bc71b582_comptimeStructField> _self_, jule::Ptr<_1bc8411bd_TypeKind> _4621_other) {
	return false;;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc71c330__Name(jule::Ptr<_1bc71b582_comptimeStructField> _self_, jule::Ptr<_1bc81259b_Eval>* _5026_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _5041_fc) {
	if (((*((*(_5041_fc))))._field_Args.len() > 0LL)) {
		_1bc812aeb_pushErr((*(_5026_e)).ptr(), (*((*((*(_5041_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_230d58386_Const> _5513_constant = static__230d59123_NewStr((*((*((*(_self_))._field_field))._field_Decl))._field_Ident);;
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c43b0_primStr, ._field_Model=jule::Any(_5513_constant, &__jule_any_type19), ._field_Constant=_5513_constant});;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc71c72b__Type(jule::Ptr<_1bc71b582_comptimeStructField> _self_, jule::Ptr<_1bc81259b_Eval>* _6330_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _6345_fc) {
	if (((*((*(_6345_fc))))._field_Args.len() > 0LL)) {
		_1bc812aeb_pushErr((*(_6330_e)).ptr(), (*((*((*(_6345_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1bc737d95_buildComptimeTypeInfoData(&((*((*(_6330_e))))._field_s), &((*((*(_self_))._field_field))._field_Kind));;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc71cb27__Public(jule::Ptr<_1bc71b582_comptimeStructField> _self_, jule::Ptr<_1bc81259b_Eval>* _7132_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _7147_fc) {
	if (((*((*(_7147_fc))))._field_Args.len() > 0LL)) {
		_1bc812aeb_pushErr((*(_7132_e)).ptr(), (*((*((*(_7147_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_230d58386_Const> _7613_constant = static__230d58d59_NewBool((*((*((*(_self_))._field_field))._field_Decl))._field_Public);;
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c4679_primBool, ._field_Model=jule::Any(_7613_constant, &__jule_any_type19), ._field_Constant=_7613_constant});;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc71ce35_subIdent(jule::Ptr<_1bc71b582_comptimeStructField> _self_, jule::Str* _8429_ident) {
	{
		auto &_match_expr{ (*(_8429_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1c15c17c9:;
			{
				jule::Ptr<_1ece1de96_FnIns> _8717_method = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>([=](jule::Ptr<_1bc81259b_Eval>* _8833_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _8848_fc, jule::Ptr<_1bc8108a7_Data>* ) mutable -> jule::Ptr<_1bc8108a7_Data> {
					return _1bc71c330__Name(_self_, _8833_e, _8848_fc);;
				}), });;
				return _1bc737713_buildAsComptimeMethodData(&(_8717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1c15c1840:;
			{
				jule::Ptr<_1ece1de96_FnIns> _9417_method = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>([=](jule::Ptr<_1bc81259b_Eval>* _9533_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _9548_fc, jule::Ptr<_1bc8108a7_Data>* ) mutable -> jule::Ptr<_1bc8108a7_Data> {
					return _1bc71cb27__Public(_self_, _9533_e, _9548_fc);;
				}), });;
				return _1bc737713_buildAsComptimeMethodData(&(_9417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1c15c18a6:;
			{
				jule::Ptr<_1ece1de96_FnIns> _10117_method = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>([=](jule::Ptr<_1bc81259b_Eval>* _10233_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _10248_fc, jule::Ptr<_1bc8108a7_Data>* ) mutable -> jule::Ptr<_1bc8108a7_Data> {
					return _1bc71c72b__Type(_self_, _10233_e, _10248_fc);;
				}), });;
				return _1bc737713_buildAsComptimeMethodData(&(_10117_method));;
			}
		}
		else {
			_case_begin_1c15c1763:;
			{
				return nullptr;;
			}
		}
		_match_end_1c15c170d:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1bc71b582_comptimeStructField _Src) {
	_Stream << _1bc71b94a_Str(&_Src);
	return _Stream;
}



inline jule::Str _1bc71d5b7_Str(_1bc71d243_comptimeStructFields* _self_) {
	return jule::Str::lit("comptimeStructFields", 20);;
}



inline jule::Bool _1bc71d908_Equal(jule::Ptr<_1bc71d243_comptimeStructFields> _self_, jule::Ptr<_1bc8411bd_TypeKind> _12021_other) {
	return false;;
}



inline void _1bc71dd7b_ready(_1bc71d243_comptimeStructFields* _self_, jule::Ptr<_1bc7a750d_Var>* _12429_keyA, jule::Ptr<_1bc7a750d_Var>* _12446_keyB) {
	if (((*(_12429_keyA)) != nullptr)) {
		(*((*(_12429_keyA))))._field_Constant=true;
		(*((*(_12429_keyA))))._field_Value=jule::new_ptr<_1bc8119eb_Value>(_1bc8119eb_Value{._field_Data=jule::new_ptr<_1bc8108a7_Data>()});
		(*((*(_12429_keyA))))._field_Kind=(*(_1bc2c7506_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_12446_keyB)) != nullptr)) {
		(*((*(_12446_keyB))))._field_Constant=true;
		(*((*(_12446_keyB))))._field_Value=jule::new_ptr<_1bc8119eb_Value>(_1bc8119eb_Value{._field_Data=jule::new_ptr<_1bc8108a7_Data>()});
		(*((*(_12446_keyB))))._field_Kind=jule::new_ptr<_1bc848390_TypeSymbol>(_1bc848390_TypeSymbol{._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(jule::new_ptr<_1bc71b582_comptimeStructField>(), 6)})});
	};
}



inline void _1bc71e299_step(_1bc71d243_comptimeStructFields* _self_, jule::I64 _14523_i, jule::Ptr<_1bc7a750d_Var>* _14536_keyA, jule::Ptr<_1bc7a750d_Var>* _14553_keyB) {
	if (((*(_14536_keyA)) != nullptr)) {
		(*((*((*((*(_14536_keyA))))._field_Value))._field_Data))._field_Constant=static__230d587c6_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_14523_i)));
		(*((*((*((*(_14536_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_14536_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_14553_keyB)) != nullptr)) {
		(*(_1bc845de8_comptimeStructField((*((*((*(_14553_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_14523_i];
	};
}



inline jule::I64 _1bc71e530_len(_1bc71d243_comptimeStructFields* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc71d243_comptimeStructFields _Src) {
	_Stream << _1bc71d5b7_Str(&_Src);
	return _Stream;
}



inline jule::Str _1bc71ebb2_Str(_1bc71e83d_comptimeStatic* _self_) {
	return jule::Str::lit("comptimeStatic", 14);;
}



inline jule::Bool _1bc720003_Equal(jule::Ptr<_1bc71e83d_comptimeStatic> _self_, jule::Ptr<_1bc8411bd_TypeKind> _16921_other) {
	return false;;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc720630__Name(jule::Ptr<_1bc71e83d_comptimeStatic> _self_, jule::Ptr<_1bc81259b_Eval>* _17326_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _17341_fc) {
	if (((*((*(_17341_fc))))._field_Args.len() > 0LL)) {
		_1bc812aeb_pushErr((*(_17326_e)).ptr(), (*((*((*(_17341_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_230d58386_Const> _17813_constant = static__230d59123_NewStr((*((*(_self_))._field_field))._field_Ident);;
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c43b0_primStr, ._field_Model=jule::Any(_17813_constant, &__jule_any_type19), ._field_Constant=_17813_constant});;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc720a2b__Type(jule::Ptr<_1bc71e83d_comptimeStatic> _self_, jule::Ptr<_1bc81259b_Eval>* _18630_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _18645_fc) {
	if (((*((*(_18645_fc))))._field_Args.len() > 0LL)) {
		_1bc812aeb_pushErr((*(_18630_e)).ptr(), (*((*((*(_18645_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1bc737d95_buildComptimeTypeInfoData(&((*((*(_18630_e))))._field_s), &((*((*((*(_self_))._field_field))._field_Kind))._field_Kind));;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc720e27__Public(jule::Ptr<_1bc71e83d_comptimeStatic> _self_, jule::Ptr<_1bc81259b_Eval>* _19432_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _19447_fc) {
	if (((*((*(_19447_fc))))._field_Args.len() > 0LL)) {
		_1bc812aeb_pushErr((*(_19432_e)).ptr(), (*((*((*(_19447_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_230d58386_Const> _19913_constant = static__230d58d59_NewBool((*((*(_self_))._field_field))._field_Public);;
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c4679_primBool, ._field_Model=jule::Any(_19913_constant, &__jule_any_type19), ._field_Constant=_19913_constant});;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc721268_subIdent(jule::Ptr<_1bc71e83d_comptimeStatic> _self_, jule::Str* _20729_ident) {
	{
		auto &_match_expr{ (*(_20729_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1c15d71a2:;
			{
				jule::Ptr<_1ece1de96_FnIns> _21017_method = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>([=](jule::Ptr<_1bc81259b_Eval>* _21133_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _21148_fc, jule::Ptr<_1bc8108a7_Data>* ) mutable -> jule::Ptr<_1bc8108a7_Data> {
					return _1bc720630__Name(_self_, _21133_e, _21148_fc);;
				}), });;
				return _1bc737713_buildAsComptimeMethodData(&(_21017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1c15d7218:;
			{
				jule::Ptr<_1ece1de96_FnIns> _21717_method = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>([=](jule::Ptr<_1bc81259b_Eval>* _21833_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _21848_fc, jule::Ptr<_1bc8108a7_Data>* ) mutable -> jule::Ptr<_1bc8108a7_Data> {
					return _1bc720e27__Public(_self_, _21833_e, _21848_fc);;
				}), });;
				return _1bc737713_buildAsComptimeMethodData(&(_21717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1c15d727e:;
			{
				jule::Ptr<_1ece1de96_FnIns> _22417_method = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>([=](jule::Ptr<_1bc81259b_Eval>* _22533_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _22548_fc, jule::Ptr<_1bc8108a7_Data>* ) mutable -> jule::Ptr<_1bc8108a7_Data> {
					return _1bc720a2b__Type(_self_, _22533_e, _22548_fc);;
				}), });;
				return _1bc737713_buildAsComptimeMethodData(&(_22417_method));;
			}
		}
		else {
			_case_begin_1c15d713b:;
			{
				return nullptr;;
			}
		}
		_match_end_1c15d70d6:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1bc71e83d_comptimeStatic _Src) {
	_Stream << _1bc71ebb2_Str(&_Src);
	return _Stream;
}



inline jule::Str _1bc721873_Str(_1bc7214ee_comptimeStatics* _self_) {
	return jule::Str::lit("comptimeStatics", 15);;
}



inline jule::Bool _1bc721bb4_Equal(jule::Ptr<_1bc7214ee_comptimeStatics> _self_, jule::Ptr<_1bc8411bd_TypeKind> _24321_other) {
	return false;;
}



inline void _1bc722137_ready(_1bc7214ee_comptimeStatics* _self_, jule::Ptr<_1bc7a750d_Var>* _24729_keyA, jule::Ptr<_1bc7a750d_Var>* _24746_keyB) {
	if (((*(_24729_keyA)) != nullptr)) {
		(*((*(_24729_keyA))))._field_Constant=true;
		(*((*(_24729_keyA))))._field_Value=jule::new_ptr<_1bc8119eb_Value>(_1bc8119eb_Value{._field_Data=jule::new_ptr<_1bc8108a7_Data>()});
		(*((*(_24729_keyA))))._field_Kind=(*(_1bc2c7506_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_24746_keyB)) != nullptr)) {
		(*((*(_24746_keyB))))._field_Constant=true;
		(*((*(_24746_keyB))))._field_Value=jule::new_ptr<_1bc8119eb_Value>(_1bc8119eb_Value{._field_Data=jule::new_ptr<_1bc8108a7_Data>()});
		(*((*(_24746_keyB))))._field_Kind=jule::new_ptr<_1bc848390_TypeSymbol>(_1bc848390_TypeSymbol{._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(jule::new_ptr<_1bc71e83d_comptimeStatic>(), 8)})});
	};
}



inline void _1bc722555_step(_1bc7214ee_comptimeStatics* _self_, jule::I64 _26823_i, jule::Ptr<_1bc7a750d_Var>* _26836_keyA, jule::Ptr<_1bc7a750d_Var>* _26853_keyB) {
	if (((*(_26836_keyA)) != nullptr)) {
		(*((*((*((*(_26836_keyA))))._field_Value))._field_Data))._field_Constant=static__230d587c6_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_26823_i)));
		(*((*((*((*(_26836_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_26836_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_26853_keyB)) != nullptr)) {
		(*(_1bc847702_comptimeStatic((*((*((*(_26853_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_26823_i];
	};
}



inline jule::I64 _1bc7227db_len(_1bc7214ee_comptimeStatics* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc7214ee_comptimeStatics _Src) {
	_Stream << _1bc721873_Str(&_Src);
	return _Stream;
}



inline jule::Str _1bc72307d_Str(_1bc722ae9_comptimeEnumField* _self_) {
	return jule::Str::lit("comptimeEnumField", 17);;
}



inline jule::Bool _1bc7233be_Equal(jule::Ptr<_1bc722ae9_comptimeEnumField> _self_, jule::Ptr<_1bc8411bd_TypeKind> _29221_other) {
	return false;;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc723842__Name(jule::Ptr<_1bc722ae9_comptimeEnumField> _self_, jule::Ptr<_1bc81259b_Eval>* _29626_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _29641_fc) {
	if (((*((*(_29641_fc))))._field_Args.len() > 0LL)) {
		_1bc812aeb_pushErr((*(_29626_e)).ptr(), (*((*((*(_29641_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_230d58386_Const> _30113_constant = static__230d59123_NewStr((*((*(_self_))._field_field))._field_Ident);;
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c43b0_primStr, ._field_Model=jule::Any(_30113_constant, &__jule_any_type19), ._field_Constant=_30113_constant});;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc723b83_subIdent(jule::Ptr<_1bc722ae9_comptimeEnumField> _self_, jule::Str* _30929_ident) {
	{
		auto &_match_expr{ (*(_30929_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1c15e7dc7:;
			{
				jule::Ptr<_1ece1de96_FnIns> _31217_method = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>([=](jule::Ptr<_1bc81259b_Eval>* _31333_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _31348_fc, jule::Ptr<_1bc8108a7_Data>* ) mutable -> jule::Ptr<_1bc8108a7_Data> {
					return _1bc723842__Name(_self_, _31333_e, _31348_fc);;
				}), });;
				return _1bc737713_buildAsComptimeMethodData(&(_31217_method));;
			}
		}
		else {
			_case_begin_1c15e7d61:;
			{
				return nullptr;;
			}
		}
		_match_end_1c15e7d0b:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1bc722ae9_comptimeEnumField _Src) {
	_Stream << _1bc72307d_Str(&_Src);
	return _Stream;
}



inline jule::Str _1bc724315_Str(_1bc723e91_comptimeEnumFields* _self_) {
	return jule::Str::lit("comptimeEnumFields", 18);;
}



inline jule::Bool _1bc724656_Equal(jule::Ptr<_1bc723e91_comptimeEnumFields> _self_, jule::Ptr<_1bc8411bd_TypeKind> _33121_other) {
	return false;;
}



inline void _1bc724ac9_ready(_1bc723e91_comptimeEnumFields* _self_, jule::Ptr<_1bc7a750d_Var>* _33529_keyA, jule::Ptr<_1bc7a750d_Var>* _33546_keyB) {
	if (((*(_33529_keyA)) != nullptr)) {
		(*((*(_33529_keyA))))._field_Constant=true;
		(*((*(_33529_keyA))))._field_Value=jule::new_ptr<_1bc8119eb_Value>(_1bc8119eb_Value{._field_Data=jule::new_ptr<_1bc8108a7_Data>()});
		(*((*(_33529_keyA))))._field_Kind=(*(_1bc2c7506_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_33546_keyB)) != nullptr)) {
		(*((*(_33546_keyB))))._field_Constant=true;
		(*((*(_33546_keyB))))._field_Value=jule::new_ptr<_1bc8119eb_Value>(_1bc8119eb_Value{._field_Data=jule::new_ptr<_1bc8108a7_Data>()});
		(*((*(_33546_keyB))))._field_Kind=jule::new_ptr<_1bc848390_TypeSymbol>(_1bc848390_TypeSymbol{._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(jule::new_ptr<_1bc722ae9_comptimeEnumField>(), 10)})});
	};
}



inline void _1bc724ee7_step(_1bc723e91_comptimeEnumFields* _self_, jule::I64 _35623_i, jule::Ptr<_1bc7a750d_Var>* _35636_keyA, jule::Ptr<_1bc7a750d_Var>* _35653_keyB) {
	if (((*(_35636_keyA)) != nullptr)) {
		(*((*((*((*(_35636_keyA))))._field_Value))._field_Data))._field_Constant=static__230d587c6_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_35623_i)));
		(*((*((*((*(_35636_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_35636_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_35653_keyB)) != nullptr)) {
		(*(_1bc846415_comptimeEnumField((*((*((*(_35653_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_35623_i];
	};
}



inline jule::I64 _1bc72527d_len(_1bc723e91_comptimeEnumFields* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc723e91_comptimeEnumFields _Src) {
	_Stream << _1bc724315_Str(&_Src);
	return _Stream;
}



inline jule::Str _1bc725910_Str(_1bc72558b_comptimeParam* _self_) {
	return jule::Str::lit("comptimeParam", 13);;
}



inline jule::Bool _1bc725c51_Equal(jule::Ptr<_1bc72558b_comptimeParam> _self_, jule::Ptr<_1bc8411bd_TypeKind> _38021_other) {
	return false;;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc7264b0__Name(jule::Ptr<_1bc72558b_comptimeParam> _self_, jule::Ptr<_1bc81259b_Eval>* _38426_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _38441_fc) {
	if (((*((*(_38441_fc))))._field_Args.len() > 0LL)) {
		_1bc812aeb_pushErr((*(_38426_e)).ptr(), (*((*((*(_38441_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_230d58386_Const> _38913_constant = static__230d59123_NewStr((*((*((*(_self_))._field_param))._field_Decl))._field_Ident);;
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c43b0_primStr, ._field_Model=jule::Any(_38913_constant, &__jule_any_type19), ._field_Constant=_38913_constant});;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc7268ab__Type(jule::Ptr<_1bc72558b_comptimeParam> _self_, jule::Ptr<_1bc81259b_Eval>* _39730_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _39745_fc) {
	if (((*((*(_39745_fc))))._field_Args.len() > 0LL)) {
		_1bc812aeb_pushErr((*(_39730_e)).ptr(), (*((*((*(_39745_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1bc737d95_buildComptimeTypeInfoData(&((*((*(_39730_e))))._field_s), &((*((*(_self_))._field_param))._field_Kind));;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc726ca7__Variadic(jule::Ptr<_1bc72558b_comptimeParam> _self_, jule::Ptr<_1bc81259b_Eval>* _40534_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _40549_fc) {
	if (((*((*(_40549_fc))))._field_Args.len() > 0LL)) {
		_1bc812aeb_pushErr((*(_40534_e)).ptr(), (*((*((*(_40549_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_230d58386_Const> _41013_constant = static__230d58d59_NewBool((*((*((*(_self_))._field_param))._field_Decl))._field_Variadic);;
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c4679_primBool, ._field_Model=jule::Any(_41013_constant, &__jule_any_type19), ._field_Constant=_41013_constant});;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc7271a3__Reference(jule::Ptr<_1bc72558b_comptimeParam> _self_, jule::Ptr<_1bc81259b_Eval>* _41835_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _41850_fc) {
	if (((*((*(_41850_fc))))._field_Args.len() > 0LL)) {
		_1bc812aeb_pushErr((*(_41835_e)).ptr(), (*((*((*(_41850_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_230d58386_Const> _42313_constant = static__230d58d59_NewBool((*((*((*(_self_))._field_param))._field_Decl))._field_Reference);;
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c4679_primBool, ._field_Model=jule::Any(_42313_constant, &__jule_any_type19), ._field_Constant=_42313_constant});;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc7274e4_subIdent(jule::Ptr<_1bc72558b_comptimeParam> _self_, jule::Str* _43129_ident) {
	{
		auto &_match_expr{ (*(_43129_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1c0864111:;
			{
				jule::Ptr<_1ece1de96_FnIns> _43417_method = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>([=](jule::Ptr<_1bc81259b_Eval>* _43533_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _43548_fc, jule::Ptr<_1bc8108a7_Data>* ) mutable -> jule::Ptr<_1bc8108a7_Data> {
					return _1bc7264b0__Name(_self_, _43533_e, _43548_fc);;
				}), });;
				return _1bc737713_buildAsComptimeMethodData(&(_43417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Variadic", 8)) {
			_case_begin_1c0864177:;
			{
				jule::Ptr<_1ece1de96_FnIns> _44117_method = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>([=](jule::Ptr<_1bc81259b_Eval>* _44233_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _44248_fc, jule::Ptr<_1bc8108a7_Data>* ) mutable -> jule::Ptr<_1bc8108a7_Data> {
					return _1bc726ca7__Variadic(_self_, _44233_e, _44248_fc);;
				}), });;
				return _1bc737713_buildAsComptimeMethodData(&(_44117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Reference", 9)) {
			_case_begin_1c08641dd:;
			{
				jule::Ptr<_1ece1de96_FnIns> _44817_method = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>([=](jule::Ptr<_1bc81259b_Eval>* _44933_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _44948_fc, jule::Ptr<_1bc8108a7_Data>* ) mutable -> jule::Ptr<_1bc8108a7_Data> {
					return _1bc7271a3__Reference(_self_, _44933_e, _44948_fc);;
				}), });;
				return _1bc737713_buildAsComptimeMethodData(&(_44817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1c0864265:;
			{
				jule::Ptr<_1ece1de96_FnIns> _45517_method = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>([=](jule::Ptr<_1bc81259b_Eval>* _45633_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _45648_fc, jule::Ptr<_1bc8108a7_Data>* ) mutable -> jule::Ptr<_1bc8108a7_Data> {
					return _1bc7268ab__Type(_self_, _45633_e, _45648_fc);;
				}), });;
				return _1bc737713_buildAsComptimeMethodData(&(_45517_method));;
			}
		}
		else {
			_case_begin_1c086409a:;
			{
				return nullptr;;
			}
		}
		_match_end_1c0864045:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1bc72558b_comptimeParam _Src) {
	_Stream << _1bc725910_Str(&_Src);
	return _Stream;
}



inline jule::Str _1bc727b76_Str(_1bc727802_comptimeParams* _self_) {
	return jule::Str::lit("comptimeParams", 14);;
}



inline jule::Bool _1bc727eb7_Equal(jule::Ptr<_1bc727802_comptimeParams> _self_, jule::Ptr<_1bc8411bd_TypeKind> _47421_other) {
	return false;;
}



inline void _1bc72843a_ready(_1bc727802_comptimeParams* _self_, jule::Ptr<_1bc7a750d_Var>* _47829_keyA, jule::Ptr<_1bc7a750d_Var>* _47846_keyB) {
	if (((*(_47829_keyA)) != nullptr)) {
		(*((*(_47829_keyA))))._field_Constant=true;
		(*((*(_47829_keyA))))._field_Value=jule::new_ptr<_1bc8119eb_Value>(_1bc8119eb_Value{._field_Data=jule::new_ptr<_1bc8108a7_Data>()});
		(*((*(_47829_keyA))))._field_Kind=(*(_1bc2c7506_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_47846_keyB)) != nullptr)) {
		(*((*(_47846_keyB))))._field_Constant=true;
		(*((*(_47846_keyB))))._field_Value=jule::new_ptr<_1bc8119eb_Value>(_1bc8119eb_Value{._field_Data=jule::new_ptr<_1bc8108a7_Data>()});
		(*((*(_47846_keyB))))._field_Kind=jule::new_ptr<_1bc848390_TypeSymbol>(_1bc848390_TypeSymbol{._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(jule::new_ptr<_1bc72558b_comptimeParam>(), 12)})});
	};
}



inline void _1bc728858_step(_1bc727802_comptimeParams* _self_, jule::I64 _49923_i, jule::Ptr<_1bc7a750d_Var>* _49936_keyA, jule::Ptr<_1bc7a750d_Var>* _49953_keyB) {
	if (((*(_49936_keyA)) != nullptr)) {
		(*((*((*((*(_49936_keyA))))._field_Value))._field_Data))._field_Constant=static__230d587c6_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_49923_i)));
		(*((*((*((*(_49936_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_49936_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_49953_keyB)) != nullptr)) {
		(*(_1bc846932_comptimeParam((*((*((*(_49953_keyB))))._field_Kind))._field_Kind.ptr())))._field_param=(*(_self_))._field_params[_49923_i];
	};
}



inline jule::I64 _1bc728ade_len(_1bc727802_comptimeParams* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_params.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc727802_comptimeParams _Src) {
	_Stream << _1bc727b76_Str(&_Src);
	return _Stream;
}



inline jule::Str _1bc729271_Str(_1bc728dec_comptimeTypeInfos* _self_) {
	return jule::Str::lit("comptimeTypeInfos", 17);;
}



inline jule::Bool _1bc7295b2_Equal(jule::Ptr<_1bc728dec_comptimeTypeInfos> _self_, jule::Ptr<_1bc8411bd_TypeKind> _52321_other) {
	return false;;
}



inline void _1bc729a35_ready(_1bc728dec_comptimeTypeInfos* _self_, jule::Ptr<_1bc7a750d_Var>* _52729_keyA, jule::Ptr<_1bc7a750d_Var>* _52746_keyB) {
	if (((*(_52729_keyA)) != nullptr)) {
		(*((*(_52729_keyA))))._field_Constant=true;
		(*((*(_52729_keyA))))._field_Value=jule::new_ptr<_1bc8119eb_Value>(_1bc8119eb_Value{._field_Data=jule::new_ptr<_1bc8108a7_Data>()});
		(*((*(_52729_keyA))))._field_Kind=(*(_1bc2c7506_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_52746_keyB)) != nullptr)) {
		(*((*(_52746_keyB))))._field_Constant=true;
		(*((*(_52746_keyB))))._field_Value=jule::new_ptr<_1bc8119eb_Value>(_1bc8119eb_Value{._field_Data=jule::new_ptr<_1bc8108a7_Data>()});
		(*((*(_52746_keyB))))._field_Kind=jule::new_ptr<_1bc848390_TypeSymbol>(_1bc848390_TypeSymbol{._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(jule::new_ptr<_1bc72a4e7_comptimeTypeInfo>(), 15)})});
	};
}



inline void _1bc729e53_step(_1bc728dec_comptimeTypeInfos* _self_, jule::I64 _54823_i, jule::Ptr<_1bc7a750d_Var>* _54836_keyA, jule::Ptr<_1bc7a750d_Var>* _54853_keyB) {
	if (((*(_54836_keyA)) != nullptr)) {
		(*((*((*((*(_54836_keyA))))._field_Value))._field_Data))._field_Constant=static__230d587c6_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_54823_i)));
		(*((*((*((*(_54836_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_54836_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_54853_keyB)) != nullptr)) {
		(*((*((*((*(_54853_keyB))))._field_Kind))._field_Kind))._field_Kind=jule::Trait<_1bc840c17_Kind>((*(_self_))._field_types[_54823_i], 15);
	};
}



inline jule::I64 _1bc72a1d9_len(_1bc728dec_comptimeTypeInfos* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_types.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc728dec_comptimeTypeInfos _Src) {
	_Stream << _1bc729271_Str(&_Src);
	return _Stream;
}



inline jule::Str _1bc72a86b_Str(_1bc72a4e7_comptimeTypeInfo* _self_) {
	return ((jule::Str::lit("comptimeTypeInfo[", 17) + _1bc841586_Str((*(_self_))._field_base.ptr())) + jule::Str::lit("]", 1));;
}



inline jule::Bool _1bc72abac_Equal(jule::Ptr<_1bc72a4e7_comptimeTypeInfo> _self_, jule::Ptr<_1bc8411bd_TypeKind> _57221_other) {
	return false;;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc72b30b__Str(jule::Ptr<_1bc72a4e7_comptimeTypeInfo> _self_, jule::Ptr<_1bc81259b_Eval>* _57625_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _57640_fc) {
	if (((*((*(_57640_fc))))._field_Args.len() > 0LL)) {
		_1bc812aeb_pushErr((*(_57625_e)).ptr(), (*((*((*(_57640_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Str", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_230d58386_Const> _58113_constant = static__230d59123_NewStr(_1bc841586_Str((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c43b0_primStr, ._field_Model=jule::Any(_58113_constant, &__jule_any_type19), ._field_Constant=_58113_constant});;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc72b707__Kind(jule::Ptr<_1bc72a4e7_comptimeTypeInfo> _self_, jule::Ptr<_1bc81259b_Eval>* _58930_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _58945_fc) {
	if (((*((*(_58945_fc))))._field_Args.len() > 0LL)) {
		_1bc812aeb_pushErr((*(_58930_e)).ptr(), (*((*((*(_58945_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Kind", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1bc71624c_Enum> _59413_enm = _1bc765b5e_FindEnum(_1bc737a21_findComptimePackage(&((*((*(_58930_e))))._field_s)).ptr(), jule::Str::lit("Kind", 4));;
	jule::Ptr<_1bc7156d0_EnumItem> _59517_item = nullptr;;
	{
		
		if (_1bc842532_Void((*(_self_))._field_base.ptr())) {
			_case_begin_1c0881a57:;
			{
				_59517_item=_1bc716d41_FindItem(_59413_enm.ptr(), jule::Str::lit("Void", 4));
			}
		}
		else if ((_1bc844d92_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1c0881947:;
			{
				_59517_item=_1bc716d41_FindItem(_59413_enm.ptr(), jule::Str::lit("Struct", 6));
			}
		}
		else if ((_1bc845128_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1c088186a:;
			{
				_59517_item=_1bc716d41_FindItem(_59413_enm.ptr(), jule::Str::lit("Trait", 5));
			}
		}
		else if ((_1bc843d3b_Ptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1c088165b:;
			{
				if (_1bc851ac4_IsUnsafe(_1bc843d3b_Ptr((*(_self_))._field_base.ptr()).ptr())) {
					_59517_item=_1bc716d41_FindItem(_59413_enm.ptr(), jule::Str::lit("UnsafePtr", 9));
				} else {
					_59517_item=_1bc716d41_FindItem(_59413_enm.ptr(), jule::Str::lit("Ptr", 3));
				};
			}
		}
		else if ((_1bc843aa5_Sptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1c08816c2:;
			{
				_59517_item=_1bc716d41_FindItem(_59413_enm.ptr(), jule::Str::lit("SmartPtr", 8));
			}
		}
		else if ((_1bc8440c2_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1c08821d9:;
			{
				_59517_item=_1bc716d41_FindItem(_59413_enm.ptr(), jule::Str::lit("Enum", 4));
			}
		}
		else if ((_1bc8453ae_Map((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1c0882250:;
			{
				_59517_item=_1bc716d41_FindItem(_59413_enm.ptr(), jule::Str::lit("Map", 3));
			}
		}
		else if ((_1bc844875_Slc((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1c08822c7:;
			{
				_59517_item=_1bc716d41_FindItem(_59413_enm.ptr(), jule::Str::lit("Slice", 5));
			}
		}
		else if ((_1bc8445de_Arr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1c088234e:;
			{
				_59517_item=_1bc716d41_FindItem(_59413_enm.ptr(), jule::Str::lit("Array", 5));
			}
		}
		else if ((_1bc844b0b_Fn((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1c08823c6:;
			{
				_59517_item=_1bc716d41_FindItem(_59413_enm.ptr(), jule::Str::lit("Func", 4));
			}
		}
		else if ((_1bc845645_Tup((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1c088244d:;
			{
				_59517_item=_1bc716d41_FindItem(_59413_enm.ptr(), jule::Str::lit("Tuple", 5));
			}
		}
		else if ((_1bc84381e_Prim((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1c08824c5:;
			{
				jule::Ptr<_1bc848c97_Prim> _62413_prim = _1bc84381e_Prim((*(_self_))._field_base.ptr());;
				{
					
					if (_1bc84c4b5_IsAny(_62413_prim.ptr())) {
						_case_begin_1c088d02a:;
						{
							_59517_item=_1bc716d41_FindItem(_59413_enm.ptr(), jule::Str::lit("Any", 3));
						}
					}
					else if (_1bc84be98_IsBool(_62413_prim.ptr())) {
						_case_begin_1c088d091:;
						{
							_59517_item=_1bc716d41_FindItem(_59413_enm.ptr(), jule::Str::lit("Bool", 4));
						}
					}
					else if (_1bc84c22e_IsStr(_62413_prim.ptr())) {
						_case_begin_1c088d107:;
						{
							_59517_item=_1bc716d41_FindItem(_59413_enm.ptr(), jule::Str::lit("Str", 3));
						}
					}
					else if (_1bc84b1c8_IsF32(_62413_prim.ptr())) {
						_case_begin_1c088d16d:;
						{
							_59517_item=_1bc716d41_FindItem(_59413_enm.ptr(), jule::Str::lit("F32", 3));
						}
					}
					else if (_1bc84b45e_IsF64(_62413_prim.ptr())) {
						_case_begin_1c088dbeb:;
						{
							_59517_item=_1bc716d41_FindItem(_59413_enm.ptr(), jule::Str::lit("F64", 3));
						}
					}
					else if (_1bc849b55_IsI8(_62413_prim.ptr())) {
						_case_begin_1c088dc62:;
						{
							_59517_item=_1bc716d41_FindItem(_59413_enm.ptr(), jule::Str::lit("I8", 2));
						}
					}
					else if (_1bc849ddb_IsI16(_62413_prim.ptr())) {
						_case_begin_1c088dcc8:;
						{
							_59517_item=_1bc716d41_FindItem(_59413_enm.ptr(), jule::Str::lit("I16", 3));
						}
					}
					else if (_1bc84a172_IsI32(_62413_prim.ptr())) {
						_case_begin_1c088dd3e:;
						{
							_59517_item=_1bc716d41_FindItem(_59413_enm.ptr(), jule::Str::lit("I32", 3));
						}
					}
					else if (_1bc84a408_IsI64(_62413_prim.ptr())) {
						_case_begin_1c088dda5:;
						{
							_59517_item=_1bc716d41_FindItem(_59413_enm.ptr(), jule::Str::lit("I64", 3));
						}
					}
					else if (_1bc84a68e_IsU8(_62413_prim.ptr())) {
						_case_begin_1c088de2c:;
						{
							_59517_item=_1bc716d41_FindItem(_59413_enm.ptr(), jule::Str::lit("U8", 2));
						}
					}
					else if (_1bc84a925_IsU16(_62413_prim.ptr())) {
						_case_begin_1c088dea4:;
						{
							_59517_item=_1bc716d41_FindItem(_59413_enm.ptr(), jule::Str::lit("U16", 3));
						}
					}
					else if (_1bc84abab_IsU32(_62413_prim.ptr())) {
						_case_begin_1c088e02b:;
						{
							_59517_item=_1bc716d41_FindItem(_59413_enm.ptr(), jule::Str::lit("U32", 3));
						}
					}
					else if (_1bc84ae42_IsU64(_62413_prim.ptr())) {
						_case_begin_1c088e0a3:;
						{
							_59517_item=_1bc716d41_FindItem(_59413_enm.ptr(), jule::Str::lit("U64", 3));
						}
					}
					else if (_1bc84b6e5_IsInt(_62413_prim.ptr())) {
						_case_begin_1c088e12a:;
						{
							_59517_item=_1bc716d41_FindItem(_59413_enm.ptr(), jule::Str::lit("Int", 3));
						}
					}
					else if (_1bc84b97b_IsUint(_62413_prim.ptr())) {
						_case_begin_1c088e1a2:;
						{
							_59517_item=_1bc716d41_FindItem(_59413_enm.ptr(), jule::Str::lit("Uint", 4));
						}
					}
					else if (_1bc84bc12_IsUintptr(_62413_prim.ptr())) {
						_case_begin_1c088e229:;
						{
							_59517_item=_1bc716d41_FindItem(_59413_enm.ptr(), jule::Str::lit("Uintptr", 7));
						}
					}
					else {
						_case_begin_1c088ceb4:;
						{
							jule::panic((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1bc841586_Str((*(_self_))._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:659:17"));;
						}
					}
					_match_end_1c088ce4d:;
				};
			}
		}
		else {
			_case_begin_1c0881507:;
			{
				jule::panic((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1bc841586_Str((*(_self_))._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:662:13"));;
			}
		}
		_match_end_1c0881172:;
	};
	return _1bc83ce34_evalEnumStatic(&(_59413_enm), &(_59517_item));;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc72bb03__Bits(jule::Ptr<_1bc72a4e7_comptimeTypeInfo> _self_, jule::Ptr<_1bc81259b_Eval>* _66730_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _66745_fc) {
	if (((*((*(_66745_fc))))._field_Args.len() > 0LL)) {
		_1bc812aeb_pushErr((*(_66730_e)).ptr(), (*((*((*(_66745_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1bc848c97_Prim> _6729_prim = _1bc84381e_Prim((*(_self_))._field_base.ptr());;
	if ((_6729_prim == nullptr)) {
		_1bc812aeb_pushErr((*(_66730_e)).ptr(), (*((*(_66745_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _6779_n = _230d4c644_BitsizeOf((*(_6729_prim))._field_Kind);;
	if ((_6779_n == -1LL)) {
		_1bc812aeb_pushErr((*(_66730_e)).ptr(), (*((*(_66745_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_230d58386_Const> _68213_constant = static__230d587c6_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_6779_n)));;
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c43b0_primStr, ._field_Model=jule::Any(_68213_constant, &__jule_any_type19), ._field_Constant=_68213_constant});;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc72beee__Elem(jule::Ptr<_1bc72a4e7_comptimeTypeInfo> _self_, jule::Ptr<_1bc81259b_Eval>* _69030_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _69045_fc) {
	if (((*((*(_69045_fc))))._field_Args.len() > 0LL)) {
		_1bc812aeb_pushErr((*(_69030_e)).ptr(), (*((*((*(_69045_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1bc85108a_Ptr> _69513_ptr = _1bc843d3b_Ptr((*(_self_))._field_base.ptr());;
	if ((_69513_ptr != nullptr)) {
		if (_1bc851ac4_IsUnsafe(_69513_ptr.ptr())) {
			_1bc812aeb_pushErr((*(_69030_e)).ptr(), (*((*(_69045_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
			return nullptr;;
		};
		return _1bc737d95_buildComptimeTypeInfoData(&((*((*(_69030_e))))._field_s), &((*(_69513_ptr))._field_Elem));;
	};
	jule::Ptr<_1bc84c7c3_Sptr> _70313_sptr = _1bc843aa5_Sptr((*(_self_))._field_base.ptr());;
	if ((_70313_sptr != nullptr)) {
		return _1bc737d95_buildComptimeTypeInfoData(&((*((*(_69030_e))))._field_s), &((*(_70313_sptr))._field_Elem));;
	};
	jule::Ptr<_1bc84d296_Slc> _70713_slice = _1bc844875_Slc((*(_self_))._field_base.ptr());;
	if ((_70713_slice != nullptr)) {
		return _1bc737d95_buildComptimeTypeInfoData(&((*((*(_69030_e))))._field_s), &((*(_70713_slice))._field_Elem));;
	};
	jule::Ptr<_1bc8505b7_Arr> _71113_array = _1bc8445de_Arr((*(_self_))._field_base.ptr());;
	if ((_71113_array != nullptr)) {
		return _1bc737d95_buildComptimeTypeInfoData(&((*((*(_69030_e))))._field_s), &((*(_71113_array))._field_Elem));;
	};
	jule::Ptr<_1bc71624c_Enum> _71513_enm = _1bc8440c2_Enum((*(_self_))._field_base.ptr());;
	if ((_71513_enm != nullptr)) {
		return _1bc737d95_buildComptimeTypeInfoData(&((*((*(_69030_e))))._field_s), &((*((*(_71513_enm))._field_Kind))._field_Kind));;
	};
	_1bc812aeb_pushErr((*(_69030_e)).ptr(), (*((*(_69045_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc72c3ea__Size(jule::Ptr<_1bc72a4e7_comptimeTypeInfo> _self_, jule::Ptr<_1bc81259b_Eval>* _72330_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _72345_fc) {
	if (((*((*(_72345_fc))))._field_Args.len() > 0LL)) {
		_1bc812aeb_pushErr((*(_72330_e)).ptr(), (*((*((*(_72345_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1bc8505b7_Arr> _72813_arr = _1bc8445de_Arr((*(_self_))._field_base.ptr());;
	if ((_72813_arr == nullptr)) {
		_1bc812aeb_pushErr((*(_72330_e)).ptr(), (*((*(_72345_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_230d58386_Const> _73313_constant = static__230d587c6_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_72813_arr))._field_N)));;
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c50d6_primInt, ._field_Model=jule::Any(_73313_constant, &__jule_any_type19), ._field_Constant=_73313_constant});;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc72c7e6__Key(jule::Ptr<_1bc72a4e7_comptimeTypeInfo> _self_, jule::Ptr<_1bc81259b_Eval>* _74129_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _74144_fc) {
	if (((*((*(_74144_fc))))._field_Args.len() > 0LL)) {
		_1bc812aeb_pushErr((*(_74129_e)).ptr(), (*((*((*(_74144_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1bc84e93a_Map> _74613_m = _1bc8453ae_Map((*(_self_))._field_base.ptr());;
	if ((_74613_m == nullptr)) {
		_1bc812aeb_pushErr((*(_74129_e)).ptr(), (*((*(_74144_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1bc737d95_buildComptimeTypeInfoData(&((*((*(_74129_e))))._field_s), &((*(_74613_m))._field_Key));;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc72cbe2__Value(jule::Ptr<_1bc72a4e7_comptimeTypeInfo> _self_, jule::Ptr<_1bc81259b_Eval>* _75431_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _75446_fc) {
	if (((*((*(_75446_fc))))._field_Args.len() > 0LL)) {
		_1bc812aeb_pushErr((*(_75431_e)).ptr(), (*((*((*(_75446_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1bc84e93a_Map> _75913_m = _1bc8453ae_Map((*(_self_))._field_base.ptr());;
	if ((_75913_m == nullptr)) {
		_1bc812aeb_pushErr((*(_75431_e)).ptr(), (*((*(_75446_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1bc737d95_buildComptimeTypeInfoData(&((*((*(_75431_e))))._field_s), &((*(_75913_m))._field_Val));;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc72d0dd__Fields(jule::Ptr<_1bc72a4e7_comptimeTypeInfo> _self_, jule::Ptr<_1bc81259b_Eval>* _76732_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _76747_fc) {
	if (((*((*(_76747_fc))))._field_Args.len() > 0LL)) {
		_1bc812aeb_pushErr((*(_76732_e)).ptr(), (*((*((*(_76747_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1bc5be0b1_StructIns> _77213_s = _1bc844d92_Struct((*(_self_))._field_base.ptr());;
	if ((_77213_s != nullptr)) {
		return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(jule::new_ptr<_1bc71d243_comptimeStructFields>(_1bc71d243_comptimeStructFields{._field_fields=(*(_77213_s))._field_Fields}), 7)}), });;
	};
	jule::Ptr<_1bc71624c_Enum> _78213_enm = _1bc8440c2_Enum((*(_self_))._field_base.ptr());;
	if ((_78213_enm != nullptr)) {
		return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(jule::new_ptr<_1bc723e91_comptimeEnumFields>(_1bc723e91_comptimeEnumFields{._field_fields=(*(_78213_enm))._field_Items}), 11)}), });;
	};
	_1bc812aeb_pushErr((*(_76732_e)).ptr(), (*((*(_76747_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc72d4d9__Statics(jule::Ptr<_1bc72a4e7_comptimeTypeInfo> _self_, jule::Ptr<_1bc81259b_Eval>* _79633_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _79648_fc) {
	if (((*((*(_79648_fc))))._field_Args.len() > 0LL)) {
		_1bc812aeb_pushErr((*(_79633_e)).ptr(), (*((*((*(_79648_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1bc5be0b1_StructIns> _80113_s = _1bc844d92_Struct((*(_self_))._field_base.ptr());;
	if ((_80113_s == nullptr)) {
		_1bc812aeb_pushErr((*(_79633_e)).ptr(), (*((*(_79648_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(jule::new_ptr<_1bc7214ee_comptimeStatics>(_1bc7214ee_comptimeStatics{._field_fields=(*(_80113_s))._field_Statics}), 9)}), });;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc72d8d5__Public(jule::Ptr<_1bc72a4e7_comptimeTypeInfo> _self_, jule::Ptr<_1bc81259b_Eval>* _81532_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _81547_fc) {
	if (((*((*(_81547_fc))))._field_Args.len() > 0LL)) {
		_1bc812aeb_pushErr((*(_81532_e)).ptr(), (*((*((*(_81547_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Bool _82013_public = false;;
	{
		
		if ((_1bc844d92_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1c0106ad5:;
			{
				_82013_public=(*((*(_1bc844d92_Struct((*(_self_))._field_base.ptr())))._field_Decl))._field_Public;
			}
		}
		else if ((_1bc845128_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1c0107a81:;
			{
				_82013_public=(*(_1bc845128_Trait((*(_self_))._field_base.ptr())))._field_Public;
			}
		}
		else if ((_1bc8440c2_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1c0107ae7:;
			{
				_82013_public=(*(_1bc8440c2_Enum((*(_self_))._field_base.ptr())))._field_Public;
			}
		}
		else if ((_1bc844358_TypeEnum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1c01067d8:;
			{
				_82013_public=(*(_1bc844358_TypeEnum((*(_self_))._field_base.ptr())))._field_Public;
			}
		}
		else {
			_case_begin_1c0106772:;
			{
				_1bc812aeb_pushErr((*(_81532_e)).ptr(), (*((*(_81547_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c0106651:;
	};
	jule::Ptr<_230d58386_Const> _83413_constant = static__230d58d59_NewBool(_82013_public);;
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c4679_primBool, ._field_Model=jule::Any(_83413_constant, &__jule_any_type19), ._field_Constant=_83413_constant});;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc72dcd1__Binded(jule::Ptr<_1bc72a4e7_comptimeTypeInfo> _self_, jule::Ptr<_1bc81259b_Eval>* _84232_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _84247_fc) {
	if (((*((*(_84247_fc))))._field_Args.len() > 0LL)) {
		_1bc812aeb_pushErr((*(_84232_e)).ptr(), (*((*((*(_84247_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_230d58386_Const> _84713_constant = static__230d58d59_NewBool(_1bc842015_Binded((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c4679_primBool, ._field_Model=jule::Any(_84713_constant, &__jule_any_type19), ._field_Constant=_84713_constant});;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc72e1cc__Ordered(jule::Ptr<_1bc72a4e7_comptimeTypeInfo> _self_, jule::Ptr<_1bc81259b_Eval>* _85529_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _85544_fc) {
	if (((*((*(_85544_fc))))._field_Args.len() > 0LL)) {
		_1bc812aeb_pushErr((*(_85529_e)).ptr(), (*((*((*(_85544_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Ordered", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_230d58386_Const> _86013_constant = static__230d58d59_NewBool(_1bc842cd5_Ordered((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c43b0_primStr, ._field_Model=jule::Any(_86013_constant, &__jule_any_type19), ._field_Constant=_86013_constant});;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc72e5c8__Comparable(jule::Ptr<_1bc72a4e7_comptimeTypeInfo> _self_, jule::Ptr<_1bc81259b_Eval>* _86832_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _86847_fc) {
	if (((*((*(_86847_fc))))._field_Args.len() > 0LL)) {
		_1bc812aeb_pushErr((*(_86832_e)).ptr(), (*((*((*(_86847_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Comparable", 10), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_230d58386_Const> _87313_constant = static__230d58d59_NewBool(_1bc8427b8_Comparable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c43b0_primStr, ._field_Model=jule::Any(_87313_constant, &__jule_any_type19), ._field_Constant=_87313_constant});;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc72e9c4__Mutable(jule::Ptr<_1bc72a4e7_comptimeTypeInfo> _self_, jule::Ptr<_1bc81259b_Eval>* _88129_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _88144_fc) {
	if (((*((*(_88144_fc))))._field_Args.len() > 0LL)) {
		_1bc812aeb_pushErr((*(_88129_e)).ptr(), (*((*((*(_88144_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_230d58386_Const> _88613_constant = static__230d58d59_NewBool(_1bc842a4e_Mutable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c4679_primBool, ._field_Model=jule::Any(_88613_constant, &__jule_any_type19), ._field_Constant=_88613_constant});;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc72edc0__Types(jule::Ptr<_1bc72a4e7_comptimeTypeInfo> _self_, jule::Ptr<_1bc81259b_Eval>* _89431_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _89446_fc) {
	if (((*((*(_89446_fc))))._field_Args.len() > 0LL)) {
		_1bc812aeb_pushErr((*(_89431_e)).ptr(), (*((*((*(_89446_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1bc84dd8a_Tuple> _89913_tup = _1bc845645_Tup((*(_self_))._field_base.ptr());;
	if ((_89913_tup == nullptr)) {
		_1bc812aeb_pushErr((*(_89431_e)).ptr(), (*((*(_89446_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1bc728dec_comptimeTypeInfos> _90413_infos = jule::new_ptr<_1bc728dec_comptimeTypeInfos>(_1bc728dec_comptimeTypeInfos{._field_types=jule::Slice<jule::Ptr<_1bc72a4e7_comptimeTypeInfo>>::alloc(0LL, (*(_89913_tup))._field_Types.len())});;
	{
		auto expr = &((*(_89913_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c011bbb6:;
		if (it != expr_end) {
			jule::Ptr<_1bc8411bd_TypeKind> _90721_t = *it;
			{
				{ jule::Slice<jule::Ptr<_1bc72a4e7_comptimeTypeInfo>> &__jule_push_dest = (*(_90413_infos))._field_types; __jule_push_dest.push(_1bc783ab1_pushComptimeTypeInfo((*((*((*(_89431_e))))._field_s))._field_meta.ptr(), &(_90721_t))); };
			}
			_iter_next_1c011bbb6:;
			++it;
			goto _iter_begin_1c011bbb6;
		}
		_iter_end_1c011bbb6:;
	};
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(_90413_infos, 14)}), });;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc7302bb__Exceptional(jule::Ptr<_1bc72a4e7_comptimeTypeInfo> _self_, jule::Ptr<_1bc81259b_Eval>* _91737_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _91752_fc) {
	if (((*((*(_91752_fc))))._field_Args.len() > 0LL)) {
		_1bc812aeb_pushErr((*(_91737_e)).ptr(), (*((*((*(_91752_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ece1de96_FnIns> _92213_f = _1bc844b0b_Fn((*(_self_))._field_base.ptr());;
	if ((_92213_f == nullptr)) {
		_1bc812aeb_pushErr((*(_91737_e)).ptr(), (*((*(_91752_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_230d58386_Const> _92713_constant = static__230d58d59_NewBool((((*(_92213_f))._field_Decl != nullptr) && (*((*(_92213_f))._field_Decl))._field_Exceptional));;
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c4679_primBool, ._field_Model=jule::Any(_92713_constant, &__jule_any_type19), ._field_Constant=_92713_constant});;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc7306b7__CanNil(jule::Ptr<_1bc72a4e7_comptimeTypeInfo> _self_, jule::Ptr<_1bc81259b_Eval>* _93532_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _93547_fc) {
	if (((*((*(_93547_fc))))._field_Args.len() > 0LL)) {
		_1bc812aeb_pushErr((*(_93532_e)).ptr(), (*((*((*(_93547_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("CanNil", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_230d58386_Const> _94013_constant = static__230d58d59_NewBool(_1bc84306b_NilCompatible((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c4679_primBool, ._field_Model=jule::Any(_94013_constant, &__jule_any_type19), ._field_Constant=_94013_constant});;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc730ab3__RC(jule::Ptr<_1bc72a4e7_comptimeTypeInfo> _self_, jule::Ptr<_1bc81259b_Eval>* _94828_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _94843_fc) {
	if (((*((*(_94843_fc))))._field_Args.len() > 0LL)) {
		_1bc812aeb_pushErr((*(_94828_e)).ptr(), (*((*((*(_94843_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("RC", 2), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_230d58386_Const> _95313_constant = static__230d58d59_NewBool(_1bc843302_PerformsRC((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c4679_primBool, ._field_Model=jule::Any(_95313_constant, &__jule_any_type19), ._field_Constant=_95313_constant});;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc730eae__Result(jule::Ptr<_1bc72a4e7_comptimeTypeInfo> _self_, jule::Ptr<_1bc81259b_Eval>* _96132_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _96147_fc) {
	if (((*((*(_96147_fc))))._field_Args.len() > 0LL)) {
		_1bc812aeb_pushErr((*(_96132_e)).ptr(), (*((*((*(_96147_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ece1de96_FnIns> _96613_f = _1bc844b0b_Fn((*(_self_))._field_base.ptr());;
	if ((_96613_f == nullptr)) {
		_1bc812aeb_pushErr((*(_96132_e)).ptr(), (*((*(_96147_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*(_96613_f))._field_Result == nullptr)) {
		return _1bc737d95_buildComptimeTypeInfoData(&((*((*(_96132_e))))._field_s), &(_1bc2c3cd8_primVoid));;
	};
	return _1bc737d95_buildComptimeTypeInfoData(&((*((*(_96132_e))))._field_s), &((*(_96613_f))._field_Result));;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc7313aa__Params(jule::Ptr<_1bc72a4e7_comptimeTypeInfo> _self_, jule::Ptr<_1bc81259b_Eval>* _97732_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _97747_fc) {
	if (((*((*(_97747_fc))))._field_Args.len() > 0LL)) {
		_1bc812aeb_pushErr((*(_97732_e)).ptr(), (*((*((*(_97747_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ece1de96_FnIns> _98213_f = _1bc844b0b_Fn((*(_self_))._field_base.ptr());;
	if ((_98213_f == nullptr)) {
		_1bc812aeb_pushErr((*(_97732_e)).ptr(), (*((*(_97747_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(jule::new_ptr<_1bc727802_comptimeParams>(_1bc727802_comptimeParams{._field_params=(*(_98213_f))._field_Params}), 13)}), });;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc7316eb_subIdent(jule::Ptr<_1bc72a4e7_comptimeTypeInfo> _self_, jule::Str* _99429_ident) {
	{
		auto &_match_expr{ (*(_99429_ident)) };
		
		if (_match_expr == jule::Str::lit("Str", 3)) {
			_case_begin_1c0131082:;
			{
				jule::Ptr<_1ece1de96_FnIns> _99717_method = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>([=](jule::Ptr<_1bc81259b_Eval>* _99833_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _99848_fc, jule::Ptr<_1bc8108a7_Data>* ) mutable -> jule::Ptr<_1bc8108a7_Data> {
					return _1bc72b30b__Str(_self_, _99833_e, _99848_fc);;
				}), });;
				return _1bc737713_buildAsComptimeMethodData(&(_99717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Bits", 4)) {
			_case_begin_1c0131615:;
			{
				jule::Ptr<_1ece1de96_FnIns> _100417_method = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>([=](jule::Ptr<_1bc81259b_Eval>* _100533_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _100548_fc, jule::Ptr<_1bc8108a7_Data>* ) mutable -> jule::Ptr<_1bc8108a7_Data> {
					return _1bc72bb03__Bits(_self_, _100533_e, _100548_fc);;
				}), });;
				return _1bc737713_buildAsComptimeMethodData(&(_100417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Elem", 4)) {
			_case_begin_1c013167b:;
			{
				jule::Ptr<_1ece1de96_FnIns> _101117_method = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>([=](jule::Ptr<_1bc81259b_Eval>* _101233_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _101248_fc, jule::Ptr<_1bc8108a7_Data>* ) mutable -> jule::Ptr<_1bc8108a7_Data> {
					return _1bc72beee__Elem(_self_, _101233_e, _101248_fc);;
				}), });;
				return _1bc737713_buildAsComptimeMethodData(&(_101117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Size", 4)) {
			_case_begin_1c01316e2:;
			{
				jule::Ptr<_1ece1de96_FnIns> _101817_method = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>([=](jule::Ptr<_1bc81259b_Eval>* _101933_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _101948_fc, jule::Ptr<_1bc8108a7_Data>* ) mutable -> jule::Ptr<_1bc8108a7_Data> {
					return _1bc72c3ea__Size(_self_, _101933_e, _101948_fc);;
				}), });;
				return _1bc737713_buildAsComptimeMethodData(&(_101817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Key", 3)) {
			_case_begin_1c0131758:;
			{
				jule::Ptr<_1ece1de96_FnIns> _102517_method = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>([=](jule::Ptr<_1bc81259b_Eval>* _102633_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _102648_fc, jule::Ptr<_1bc8108a7_Data>* ) mutable -> jule::Ptr<_1bc8108a7_Data> {
					return _1bc72c7e6__Key(_self_, _102633_e, _102648_fc);;
				}), });;
				return _1bc737713_buildAsComptimeMethodData(&(_102517_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Value", 5)) {
			_case_begin_1c0131868:;
			{
				jule::Ptr<_1ece1de96_FnIns> _103217_method = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>([=](jule::Ptr<_1bc81259b_Eval>* _103333_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _103348_fc, jule::Ptr<_1bc8108a7_Data>* ) mutable -> jule::Ptr<_1bc8108a7_Data> {
					return _1bc72cbe2__Value(_self_, _103333_e, _103348_fc);;
				}), });;
				return _1bc737713_buildAsComptimeMethodData(&(_103217_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1c01318ce:;
			{
				jule::Ptr<_1ece1de96_FnIns> _103917_method = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>([=](jule::Ptr<_1bc81259b_Eval>* _104033_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _104048_fc, jule::Ptr<_1bc8108a7_Data>* ) mutable -> jule::Ptr<_1bc8108a7_Data> {
					return _1bc72d0dd__Fields(_self_, _104033_e, _104048_fc);;
				}), });;
				return _1bc737713_buildAsComptimeMethodData(&(_103917_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1c0131945:;
			{
				jule::Ptr<_1ece1de96_FnIns> _104617_method = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>([=](jule::Ptr<_1bc81259b_Eval>* _104733_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _104748_fc, jule::Ptr<_1bc8108a7_Data>* ) mutable -> jule::Ptr<_1bc8108a7_Data> {
					return _1bc72d4d9__Statics(_self_, _104733_e, _104748_fc);;
				}), });;
				return _1bc737713_buildAsComptimeMethodData(&(_104617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1c01319ab:;
			{
				jule::Ptr<_1ece1de96_FnIns> _105317_method = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>([=](jule::Ptr<_1bc81259b_Eval>* _105433_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _105448_fc, jule::Ptr<_1bc8108a7_Data>* ) mutable -> jule::Ptr<_1bc8108a7_Data> {
					return _1bc7313aa__Params(_self_, _105433_e, _105448_fc);;
				}), });;
				return _1bc737713_buildAsComptimeMethodData(&(_105317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Types", 5)) {
			_case_begin_1c0131a22:;
			{
				jule::Ptr<_1ece1de96_FnIns> _106017_method = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>([=](jule::Ptr<_1bc81259b_Eval>* _106133_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _106148_fc, jule::Ptr<_1bc8108a7_Data>* ) mutable -> jule::Ptr<_1bc8108a7_Data> {
					return _1bc72edc0__Types(_self_, _106133_e, _106148_fc);;
				}), });;
				return _1bc737713_buildAsComptimeMethodData(&(_106017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1c0131a88:;
			{
				jule::Ptr<_1ece1de96_FnIns> _106717_method = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>([=](jule::Ptr<_1bc81259b_Eval>* _106833_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _106848_fc, jule::Ptr<_1bc8108a7_Data>* ) mutable -> jule::Ptr<_1bc8108a7_Data> {
					return _1bc72d8d5__Public(_self_, _106833_e, _106848_fc);;
				}), });;
				return _1bc737713_buildAsComptimeMethodData(&(_106717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1c0131aee:;
			{
				jule::Ptr<_1ece1de96_FnIns> _107417_method = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>([=](jule::Ptr<_1bc81259b_Eval>* _107533_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _107548_fc, jule::Ptr<_1bc8108a7_Data>* ) mutable -> jule::Ptr<_1bc8108a7_Data> {
					return _1bc72dcd1__Binded(_self_, _107533_e, _107548_fc);;
				}), });;
				return _1bc737713_buildAsComptimeMethodData(&(_107417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Ordered", 7)) {
			_case_begin_1c0131b76:;
			{
				jule::Ptr<_1ece1de96_FnIns> _108117_method = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>([=](jule::Ptr<_1bc81259b_Eval>* _108233_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _108248_fc, jule::Ptr<_1bc8108a7_Data>* ) mutable -> jule::Ptr<_1bc8108a7_Data> {
					return _1bc72e1cc__Ordered(_self_, _108233_e, _108248_fc);;
				}), });;
				return _1bc737713_buildAsComptimeMethodData(&(_108117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Comparable", 10)) {
			_case_begin_1c0131bed:;
			{
				jule::Ptr<_1ece1de96_FnIns> _108817_method = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>([=](jule::Ptr<_1bc81259b_Eval>* _108933_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _108948_fc, jule::Ptr<_1bc8108a7_Data>* ) mutable -> jule::Ptr<_1bc8108a7_Data> {
					return _1bc72e5c8__Comparable(_self_, _108933_e, _108948_fc);;
				}), });;
				return _1bc737713_buildAsComptimeMethodData(&(_108817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1c0131c75:;
			{
				jule::Ptr<_1ece1de96_FnIns> _109517_method = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>([=](jule::Ptr<_1bc81259b_Eval>* _109633_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _109648_fc, jule::Ptr<_1bc8108a7_Data>* ) mutable -> jule::Ptr<_1bc8108a7_Data> {
					return _1bc72e9c4__Mutable(_self_, _109633_e, _109648_fc);;
				}), });;
				return _1bc737713_buildAsComptimeMethodData(&(_109517_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Exceptional", 11)) {
			_case_begin_1c0131cec:;
			{
				jule::Ptr<_1ece1de96_FnIns> _110217_method = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>([=](jule::Ptr<_1bc81259b_Eval>* _110333_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _110348_fc, jule::Ptr<_1bc8108a7_Data>* ) mutable -> jule::Ptr<_1bc8108a7_Data> {
					return _1bc7302bb__Exceptional(_self_, _110333_e, _110348_fc);;
				}), });;
				return _1bc737713_buildAsComptimeMethodData(&(_110217_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("CanNil", 6)) {
			_case_begin_1c0131d74:;
			{
				jule::Ptr<_1ece1de96_FnIns> _110917_method = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>([=](jule::Ptr<_1bc81259b_Eval>* _111033_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _111048_fc, jule::Ptr<_1bc8108a7_Data>* ) mutable -> jule::Ptr<_1bc8108a7_Data> {
					return _1bc7306b7__CanNil(_self_, _111033_e, _111048_fc);;
				}), });;
				return _1bc737713_buildAsComptimeMethodData(&(_110917_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("RC", 2)) {
			_case_begin_1c0131deb:;
			{
				jule::Ptr<_1ece1de96_FnIns> _111617_method = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>([=](jule::Ptr<_1bc81259b_Eval>* _111733_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _111748_fc, jule::Ptr<_1bc8108a7_Data>* ) mutable -> jule::Ptr<_1bc8108a7_Data> {
					return _1bc730ab3__RC(_self_, _111733_e, _111748_fc);;
				}), });;
				return _1bc737713_buildAsComptimeMethodData(&(_111617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Result", 6)) {
			_case_begin_1c0131e73:;
			{
				jule::Ptr<_1ece1de96_FnIns> _112317_method = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>([=](jule::Ptr<_1bc81259b_Eval>* _112433_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _112448_fc, jule::Ptr<_1bc8108a7_Data>* ) mutable -> jule::Ptr<_1bc8108a7_Data> {
					return _1bc730eae__Result(_self_, _112433_e, _112448_fc);;
				}), });;
				return _1bc737713_buildAsComptimeMethodData(&(_112317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Kind", 4)) {
			_case_begin_1c0131eea:;
			{
				jule::Ptr<_1ece1de96_FnIns> _113017_method = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>([=](jule::Ptr<_1bc81259b_Eval>* _113133_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _113148_fc, jule::Ptr<_1bc8108a7_Data>* ) mutable -> jule::Ptr<_1bc8108a7_Data> {
					return _1bc72b707__Kind(_self_, _113133_e, _113148_fc);;
				}), });;
				return _1bc737713_buildAsComptimeMethodData(&(_113017_method));;
			}
		}
		else {
			_case_begin_1c01311c5:;
			{
				return nullptr;;
			}
		}
		_match_end_1c0130dd9:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1bc72a4e7_comptimeTypeInfo _Src) {
	_Stream << _1bc72a86b_Str(&_Src);
	return _Stream;
}



inline jule::Str _1bc731d7d_Str(_1bc731a09_comptimeValue* _self_) {
	return jule::Str::lit("comptimeValue", 13);;
}



inline jule::Bool _1bc7321be_Equal(jule::Ptr<_1bc731a09_comptimeValue> _self_, jule::Ptr<_1bc8411bd_TypeKind> _114921_other) {
	return false;;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc73271e__Unwrap(jule::Ptr<_1bc731a09_comptimeValue> _self_, jule::Ptr<_1bc81259b_Eval>* _115332_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _115347_fc) {
	if (((*((*(_115347_fc))))._field_Args.len() > 0LL)) {
		_1bc812aeb_pushErr((*(_115332_e)).ptr(), (*((*((*(_115347_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Unwrap", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_self_))._field_data;;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc732b1a__Type(jule::Ptr<_1bc731a09_comptimeValue> _self_, jule::Ptr<_1bc81259b_Eval>* _116130_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _116145_fc) {
	if (((*((*(_116145_fc))))._field_Args.len() > 0LL)) {
		_1bc812aeb_pushErr((*(_116130_e)).ptr(), (*((*((*(_116145_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1bc737d95_buildComptimeTypeInfoData(&((*((*(_116130_e))))._field_s), &((*((*(_self_))._field_data))._field_Kind));;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc733016__Lvalue(jule::Ptr<_1bc731a09_comptimeValue> _self_, jule::Ptr<_1bc81259b_Eval>* _116932_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _116947_fc) {
	if (((*((*(_116947_fc))))._field_Args.len() > 0LL)) {
		_1bc812aeb_pushErr((*(_116932_e)).ptr(), (*((*((*(_116947_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Lvalue", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_230d58386_Const> _117413_constant = static__230d58d59_NewBool((*((*(_self_))._field_data))._field_Lvalue);;
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c4679_primBool, ._field_Model=jule::Any(_117413_constant, &__jule_any_type19), ._field_Constant=_117413_constant});;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc733412__Mutable(jule::Ptr<_1bc731a09_comptimeValue> _self_, jule::Ptr<_1bc81259b_Eval>* _118233_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _118248_fc) {
	if (((*((*(_118248_fc))))._field_Args.len() > 0LL)) {
		_1bc812aeb_pushErr((*(_118233_e)).ptr(), (*((*((*(_118248_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_230d58386_Const> _118713_constant = static__230d58d59_NewBool((*((*(_self_))._field_data))._field_Mutable);;
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c4679_primBool, ._field_Model=jule::Any(_118713_constant, &__jule_any_type19), ._field_Constant=_118713_constant});;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc73380d__Const(jule::Ptr<_1bc731a09_comptimeValue> _self_, jule::Ptr<_1bc81259b_Eval>* _119531_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _119546_fc) {
	if (((*((*(_119546_fc))))._field_Args.len() > 0LL)) {
		_1bc812aeb_pushErr((*(_119531_e)).ptr(), (*((*((*(_119546_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Const", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_230d58386_Const> _120013_constant = static__230d58d59_NewBool(_1bc81127b_IsConst((*(_self_))._field_data.ptr()));;
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c4679_primBool, ._field_Model=jule::Any(_120013_constant, &__jule_any_type19), ._field_Constant=_120013_constant});;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc733c09__Field(jule::Ptr<_1bc731a09_comptimeValue> _self_, jule::Ptr<_1bc81259b_Eval>* _120831_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _120846_fc) {
	if (((*((*(_120846_fc))))._field_Args.len() > 1LL)) {
		_1bc812aeb_pushErr((*(_120831_e)).ptr(), (*((*((*(_120846_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1bc5be0b1_StructIns> _121313_s = _1bc844d92_Struct((*((*(_self_))._field_data))._field_Kind.ptr());;
	if ((_121313_s == nullptr)) {
		_1bc812aeb_pushErr((*(_120831_e)).ptr(), (*((*(_120846_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*((*(_self_))._field_data))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1bc599971_Expr> _121813_arg = (*((*(_120846_fc))))._field_Args[0LL];;
	jule::Ptr<_1bc8108a7_Data> _121913_d = _1bc83080b_evalExpr((*(_120831_e)), _121813_arg);;
	if ((_121913_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1bc81127b_IsConst(_121913_d.ptr())))) {
		_1bc812aeb_pushErr((*(_120831_e)).ptr(), (*(_121813_arg))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1bc848c97_Prim> _12279_prim = _1bc84381e_Prim((*(_121913_d))._field_Kind.ptr());;
	if (((_12279_prim == nullptr) || (!(_1bc84c22e_IsStr(_12279_prim.ptr()))))) {
		_1bc812aeb_pushErr((*(_120831_e)).ptr(), (*(_121813_arg))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1bc841586_Str((*(_121913_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Str _12329_ident = _230d5a50e_ReadStr((*(_121913_d))._field_Constant.ptr());;
	jule::Ptr<_1bc5bd511_FieldIns> _123313_f = _1bc5c0469_FindField(_121313_s.ptr(), _12329_ident);;
	if ((_123313_f == nullptr)) {
		_1bc812aeb_pushErr((*(_120831_e)).ptr(), (*(_121813_arg))._field_Token, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*(_121313_s))._field_Decl))._field_Ident, &__jule_any_type4),jule::Any(_12329_ident, &__jule_any_type4)}));
		return nullptr;;
	};
	_121913_d=jule::new_ptr<_1bc8108a7_Data>((*((*(_self_))._field_data)));
	_121913_d=_1bc828b12_evalStructSubIdentField((*(_120831_e)).ptr(), &(_121913_d), &(_121313_s), &((*(_121813_arg))._field_Token), &(_123313_f));
	return _1bc7380c6_buildComptimeValue(&(_121913_d));;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc73404a_subIdent(jule::Ptr<_1bc731a09_comptimeValue> _self_, jule::Str* _124329_ident) {
	{
		auto &_match_expr{ (*(_124329_ident)) };
		
		if (_match_expr == jule::Str::lit("Unwrap", 6)) {
			_case_begin_1c0173833:;
			{
				jule::Ptr<_1ece1de96_FnIns> _124617_method = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>([=](jule::Ptr<_1bc81259b_Eval>* _124733_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _124748_fc, jule::Ptr<_1bc8108a7_Data>* ) mutable -> jule::Ptr<_1bc8108a7_Data> {
					return _1bc73271e__Unwrap(_self_, _124733_e, _124748_fc);;
				}), });;
				return _1bc737713_buildAsComptimeMethodData(&(_124617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1c01738aa:;
			{
				jule::Ptr<_1ece1de96_FnIns> _125317_method = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>([=](jule::Ptr<_1bc81259b_Eval>* _125433_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _125448_fc, jule::Ptr<_1bc8108a7_Data>* ) mutable -> jule::Ptr<_1bc8108a7_Data> {
					return _1bc732b1a__Type(_self_, _125433_e, _125448_fc);;
				}), });;
				return _1bc737713_buildAsComptimeMethodData(&(_125317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Lvalue", 6)) {
			_case_begin_1c0173932:;
			{
				jule::Ptr<_1ece1de96_FnIns> _126017_method = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>([=](jule::Ptr<_1bc81259b_Eval>* _126133_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _126148_fc, jule::Ptr<_1bc8108a7_Data>* ) mutable -> jule::Ptr<_1bc8108a7_Data> {
					return _1bc733016__Lvalue(_self_, _126133_e, _126148_fc);;
				}), });;
				return _1bc737713_buildAsComptimeMethodData(&(_126017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1c01739a9:;
			{
				jule::Ptr<_1ece1de96_FnIns> _126717_method = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>([=](jule::Ptr<_1bc81259b_Eval>* _126833_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _126848_fc, jule::Ptr<_1bc8108a7_Data>* ) mutable -> jule::Ptr<_1bc8108a7_Data> {
					return _1bc733412__Mutable(_self_, _126833_e, _126848_fc);;
				}), });;
				return _1bc737713_buildAsComptimeMethodData(&(_126717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Const", 5)) {
			_case_begin_1c0173c0c:;
			{
				jule::Ptr<_1ece1de96_FnIns> _127417_method = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>([=](jule::Ptr<_1bc81259b_Eval>* _127533_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _127548_fc, jule::Ptr<_1bc8108a7_Data>* ) mutable -> jule::Ptr<_1bc8108a7_Data> {
					return _1bc73380d__Const(_self_, _127533_e, _127548_fc);;
				}), });;
				return _1bc737713_buildAsComptimeMethodData(&(_127417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Field", 5)) {
			_case_begin_1c0173c84:;
			{
				jule::Ptr<_1ece1de96_FnIns> _128117_method = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>([=](jule::Ptr<_1bc81259b_Eval>* _128233_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _128248_fc, jule::Ptr<_1bc8108a7_Data>* ) mutable -> jule::Ptr<_1bc8108a7_Data> {
					return _1bc733c09__Field(_self_, _128233_e, _128248_fc);;
				}), });;
				return _1bc737713_buildAsComptimeMethodData(&(_128117_method));;
			}
		}
		else {
			_case_begin_1c01737ab:;
			{
				return nullptr;;
			}
		}
		_match_end_1c017369b:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1bc731a09_comptimeValue _Src) {
	_Stream << _1bc731d7d_Str(&_Src);
	return _Stream;
}



inline jule::Str _1bc7346cc_Str(_1bc734358_comptimeFiles* _self_) {
	return jule::Str::lit("comptimeFiles", 13);;
}



inline jule::Bool _1bc734a1d_Equal(jule::Ptr<_1bc734358_comptimeFiles> _self_, jule::Ptr<_1bc8411bd_TypeKind> _130021_other) {
	return false;;
}



inline void _1bc734e91_ready(_1bc734358_comptimeFiles* _self_, jule::Ptr<_1bc7a750d_Var>* _130429_keyA, jule::Ptr<_1bc7a750d_Var>* _130446_keyB) {
	if (((*(_130429_keyA)) != nullptr)) {
		(*((*(_130429_keyA))))._field_Constant=true;
		(*((*(_130429_keyA))))._field_Value=jule::new_ptr<_1bc8119eb_Value>(_1bc8119eb_Value{._field_Data=jule::new_ptr<_1bc8108a7_Data>()});
		(*((*(_130429_keyA))))._field_Kind=(*(_1bc2c7506_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_130446_keyB)) != nullptr)) {
		(*((*(_130446_keyB))))._field_Constant=true;
		(*((*(_130446_keyB))))._field_Value=jule::new_ptr<_1bc8119eb_Value>(_1bc8119eb_Value{._field_Data=jule::new_ptr<_1bc8108a7_Data>()});
		(*((*(_130446_keyB))))._field_Kind=jule::new_ptr<_1bc848390_TypeSymbol>(_1bc848390_TypeSymbol{._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(jule::new_ptr<_1bc735953_comptimeFile>(), 18)})});
	};
}



inline void _1bc7353ae_step(_1bc734358_comptimeFiles* _self_, jule::I64 _132523_i, jule::Ptr<_1bc7a750d_Var>* _132536_keyA, jule::Ptr<_1bc7a750d_Var>* _132553_keyB) {
	if (((*(_132536_keyA)) != nullptr)) {
		(*((*((*((*(_132536_keyA))))._field_Value))._field_Data))._field_Constant=static__230d587c6_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_132523_i)));
		(*((*((*((*(_132536_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_132536_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_132553_keyB)) != nullptr)) {
		(*((*((*((*((*(_132553_keyB))))._field_Kind))._field_Kind))._field_Kind.cast_ptr<_1bc735953_comptimeFile>(18)))._field_file=(*(_self_))._field_files[_132523_i];
	};
}



inline jule::I64 _1bc735645_len(_1bc734358_comptimeFiles* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_files.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc734358_comptimeFiles _Src) {
	_Stream << _1bc7346cc_Str(&_Src);
	return _Stream;
}



inline jule::Str _1bc735de8_Str(_1bc735953_comptimeFile* _self_) {
	return jule::Str::lit("comptimeFile", 12);;
}



inline jule::Bool _1bc736239_Equal(jule::Ptr<_1bc735953_comptimeFile> _self_, jule::Ptr<_1bc8411bd_TypeKind> _134921_other) {
	return false;;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc736756__Path(jule::Ptr<_1bc735953_comptimeFile> _self_, jule::Ptr<_1bc81259b_Eval>* _135330_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _135345_fc) {
	if (((*((*(_135345_fc))))._field_Args.len() > 0LL)) {
		_1bc812aeb_pushErr((*(_135330_e)).ptr(), (*((*((*(_135345_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Path", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_230d58386_Const> _135813_constant = static__230d59123_NewStr((*((*((*(_self_))._field_file))._field_File))._field_Path);;
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c43b0_primStr, ._field_Model=jule::Any(_135813_constant, &__jule_any_type19), ._field_Constant=_135813_constant});;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc736b52__Name(jule::Ptr<_1bc735953_comptimeFile> _self_, jule::Ptr<_1bc81259b_Eval>* _136630_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _136645_fc) {
	if (((*((*(_136645_fc))))._field_Args.len() > 0LL)) {
		_1bc812aeb_pushErr((*(_136630_e)).ptr(), (*((*((*(_136645_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_230d58386_Const> _137113_constant = static__230d59123_NewStr(_1bc589c6e_Name((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c43b0_primStr, ._field_Model=jule::Any(_137113_constant, &__jule_any_type19), ._field_Constant=_137113_constant});;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc73704d__Dir(jule::Ptr<_1bc735953_comptimeFile> _self_, jule::Ptr<_1bc81259b_Eval>* _137929_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _137944_fc) {
	if (((*((*(_137944_fc))))._field_Args.len() > 0LL)) {
		_1bc812aeb_pushErr((*(_137929_e)).ptr(), (*((*((*(_137944_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Dir", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_230d58386_Const> _138413_constant = static__230d59123_NewStr(_1bc5899d8_Dir((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c43b0_primStr, ._field_Model=jule::Any(_138413_constant, &__jule_any_type19), ._field_Constant=_138413_constant});;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc73738e_subIdent(jule::Ptr<_1bc735953_comptimeFile> _self_, jule::Str* _139229_ident) {
	{
		auto &_match_expr{ (*(_139229_ident)) };
		
		if (_match_expr == jule::Str::lit("Path", 4)) {
			_case_begin_1c0190da0:;
			{
				jule::Ptr<_1ece1de96_FnIns> _139517_method = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>([=](jule::Ptr<_1bc81259b_Eval>* _139633_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _139648_fc, jule::Ptr<_1bc8108a7_Data>* ) mutable -> jule::Ptr<_1bc8108a7_Data> {
					return _1bc736756__Path(_self_, _139633_e, _139648_fc);;
				}), });;
				return _1bc737713_buildAsComptimeMethodData(&(_139517_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1c0190e16:;
			{
				jule::Ptr<_1ece1de96_FnIns> _140217_method = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>([=](jule::Ptr<_1bc81259b_Eval>* _140333_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _140348_fc, jule::Ptr<_1bc8108a7_Data>* ) mutable -> jule::Ptr<_1bc8108a7_Data> {
					return _1bc736b52__Name(_self_, _140333_e, _140348_fc);;
				}), });;
				return _1bc737713_buildAsComptimeMethodData(&(_140217_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Dir", 3)) {
			_case_begin_1c0190e7c:;
			{
				jule::Ptr<_1ece1de96_FnIns> _140917_method = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>([=](jule::Ptr<_1bc81259b_Eval>* _141033_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _141048_fc, jule::Ptr<_1bc8108a7_Data>* ) mutable -> jule::Ptr<_1bc8108a7_Data> {
					return _1bc73704d__Dir(_self_, _141033_e, _141048_fc);;
				}), });;
				return _1bc737713_buildAsComptimeMethodData(&(_140917_method));;
			}
		}
		else {
			_case_begin_1c0190d39:;
			{
				return nullptr;;
			}
		}
		_match_end_1c0190564:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1bc735953_comptimeFile _Src) {
	_Stream << _1bc735de8_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_1bc784276_Sema>*,jule::Slice<jule::Ptr<_1bc8403cb_TypeAlias>>*)> _1bc73a260_readyFn(jule::Ptr<_1bc739d64_constraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_1bc784276_Sema>*,jule::Slice<jule::Ptr<_1bc8403cb_TypeAlias>>*)>([=](jule::Ptr<_1bc784276_Sema>* _6421_sema, jule::Slice<jule::Ptr<_1bc8403cb_TypeAlias>>* _6439_generics) mutable -> jule::Bool {
		{
			auto expr = &((*(_self_))._field_genericsD);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c01a2bb4:;
			if (it != expr_end) {
				jule::I64 _6518_i = it - expr->begin();
				jule::Ptr<_1bc5a76a4_GenericDecl> _6525_g = *it;
				{
					jule::Ptr<_1bc83e7d7_InsGeneric> _6621_generic = (*(_self_))._field_generics[_6518_i];;
					if ((((*(_6525_g))._field_Constraint == nullptr) || ((*((*(_6525_g))._field_Constraint))._field_Mask.len() == 0LL))) {
						goto _iter_next_1c01a2bb4;
					};
					(*(_6621_generic))._field_Constraint=jule::Slice<jule::Ptr<_1bc8411bd_TypeKind>>::alloc(0LL, (*((*(_6525_g))._field_Constraint))._field_Mask.len());
					{
						auto expr = &((*((*(_6525_g))._field_Constraint))._field_Mask);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c01a5953:;
						if (it != expr_end) {
							jule::Ptr<_1bc59563c_TypeDecl> _7129_mask = *it;
							{
								jule::I64 _7221_n = (*((*(_6421_sema))))._field_errors.len();;
								jule::Ptr<_1bc8411bd_TypeKind> _7325_kind = _1bc78bd3e_buildTypeWithRefers((*(_6421_sema)), &(_7129_mask), jule::Trait<_1bc860c04_Lookup>((*(_6421_sema)), 3), (*(_6439_generics)), nullptr);;
								if ((_7325_kind == nullptr)) {
									{
										auto &_match_expr{ (*(_7129_mask))._field_Kind };
										
										if (_match_expr.type == &__jule_any_type20) {
											_case_begin_1c01a7702:;
											{
												jule::Ptr<_1bc595c47_IdentTypeDecl> _7733_itd = (*(_7129_mask))._field_Kind.cast_ptr<_1bc595c47_IdentTypeDecl>(&__jule_any_type20);;
												if ((((*(_7733_itd))._field_Generics.len() == 0LL) && _1bc73b7e4_isBuiltinConstraint(&((*(_7733_itd))._field_Ident)))) {
													_7325_kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(_1bc85d0db_buildPrimType((*(_7733_itd))._field_Ident), 20)});
													(*((*(_6421_sema))))._field_errors=(*((*(_6421_sema))))._field_errors.slice(0LL, _7221_n);
													goto _julec_label_1c01aa2c6;
												};
											}
										}
										_match_end_1c01a768b:;
									};
									return false;;
								};
								_julec_label_1c01aa2c6:;
								{ jule::Slice<jule::Ptr<_1bc8411bd_TypeKind>> &__jule_push_dest = (*(_6621_generic))._field_Constraint; __jule_push_dest.push(_7325_kind); };
							}
							_iter_next_1c01a5953:;
							++it;
							goto _iter_begin_1c01a5953;
						}
						_iter_end_1c01a5953:;
					};
				}
				_iter_next_1c01a2bb4:;
				++it;
				_6518_i++;
				goto _iter_begin_1c01a2bb4;
			}
			_iter_end_1c01a2bb4:;
		};
		return true;;
	});;
}



inline jule::Bool _1bc73a4e6_readyFi(jule::Ptr<_1bc739d64_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*(_self_))._field_fi))._field_Decl))._field_Generics;
	(*(_self_))._field_generics=(*((*(_self_))._field_fi))._field_Generics;
	return ((!((*(_self_))._field_uniq)) || _1bc79274b_fnEnvironment((*(_self_))._field_s, &((*(_self_))._field_fi), _1bc73a260_readyFn(_self_)));;
}



inline jule::Bool _1bc73a77c_readySi(jule::Ptr<_1bc739d64_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*(_self_))._field_si))._field_Decl))._field_Generics;
	(*(_self_))._field_generics=(*((*(_self_))._field_si))._field_Generics;
	return ((!((*(_self_))._field_uniq)) || _1bc73a260_readyFn(_self_)(&((*(_self_))._field_s), &((*(_self_))._field_genericsA)));;
}



inline jule::Bool _1bc73aa13_ready(jule::Ptr<_1bc739d64_constraintChecker> _self_) {
	if (((*(_self_))._field_fi != nullptr)) {
		return _1bc73a4e6_readyFi(_self_);;
	};
	return _1bc73a77c_readySi(_self_);;
}



inline jule::Bool _1bc73ac99_check(jule::Ptr<_1bc739d64_constraintChecker> _self_) {
	if ((!(_1bc73aa13_ready(_self_)))) {
		return false;;
	};
	_julec_label_1c01b1178:;
	{
		auto expr = &((*(_self_))._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c01b1a80:;
		if (it != expr_end) {
			jule::I64 _12014_i = it - expr->begin();
			jule::Ptr<_1bc83e7d7_InsGeneric> _12021_g = *it;
			{
				if (((*(_12021_g))._field_Constraint == nullptr)) {
					goto _iter_next_1c01b1a80;
				};
				{
					auto expr = &((*(_12021_g))._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c01b2c6d:;
					if (it != expr_end) {
						jule::Ptr<_1bc8411bd_TypeKind> _12425_c2 = *it;
						{
							jule::Ptr<_1bc848c97_Prim> _12521_prim = _1bc84381e_Prim(_12425_c2.ptr());;
							if (((_12521_prim != nullptr) && _1bc8498be_IsConstraint(_12521_prim.ptr()))) {
								if (_1bc73b52a_matchConstraint(&((*(_12521_prim))._field_Kind), &((*(_12021_g))._field_Kind))) {
									goto _iter_next_1c01b1a80;
								};
								goto _iter_next_1c01b2c6d;
							};
							if (_1bc8418c7_Equal(_12425_c2, (*(_12021_g))._field_Kind)) {
								goto _iter_next_1c01b1a80;
							};
						}
						_iter_next_1c01b2c6d:;
						++it;
						goto _iter_begin_1c01b2c6d;
					}
					_iter_end_1c01b2c6d:;
				};
				_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_et, jule::Str::lit("type @ is not matched with @'s constraint\n       constraint: @", 62), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*(_12021_g))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*(_self_))._field_genericsD[_12014_i]))._field_Ident, &__jule_any_type4),jule::Any(_1bc73b162_toStrConstraints(_12021_g), &__jule_any_type4)}));
				return false;;
			}
			_iter_next_1c01b1a80:;
			++it;
			_12014_i++;
			goto _iter_begin_1c01b1a80;
		}
		_iter_end_1c01b1a80:;
	};
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc739d64_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1bc73c581_IsTraitImpl(_1bc73c1b8_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1bc73c817_IsStructImpl(_1bc73c1b8_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc73c1b8_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc74261e_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc742a3c_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc742d39_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc743257_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc743554_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc743a0a_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc744456_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc7447db_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc744bb5_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc744eb2_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc74538b_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc745765_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc745c1b_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc7460e5_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc746755_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc74738d_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc747987_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc747d1c_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc74847c_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc748a10_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "st:" << _Src._field_st << ", ";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1bc763e04_ImportInfo> _1bc749db8_SelectPackage(_1bc749923_scopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_1bc763e04_ImportInfo>)> _45832_selector) {
	return _1bc78471b_SelectPackage((*(_self_))._field_s.ptr(), _45832_selector);;
}



inline jule::Ptr<_1bc7a750d_Var> _1bc74a2b4_FindVar(_1bc749923_scopeChecker* _self_, jule::Str _46926_ident, jule::Bool _46938_binded) {
	;
	jule::Ptr<_1bc7a750d_Var> _47213_v = _1bc80cbc3_findVar((*(_self_))._field_table.ptr(), &(_46926_ident), _46938_binded, true);;
	if ((_47213_v != nullptr)) {
		return _47213_v;;
	};
	jule::Ptr<_1bc749923_scopeChecker> _47713_parent = (*(_self_))._field_parent;;
	while ((_47713_parent != nullptr)) {
		{
			_47213_v=_1bc80cbc3_findVar((*(_47713_parent))._field_table.ptr(), &(_46926_ident), _46938_binded, true);
			if ((_47213_v != nullptr)) {
				return _47213_v;;
			};
			_47713_parent=(*(_47713_parent))._field_parent;
		}
	_iter_next_1c01ee77c:;
	}
	_iter_end_1c01ee77c:;;
	return _1bc784b17_FindVar((*(_self_))._field_s.ptr(), _46926_ident, _46938_binded);;
}



inline jule::Ptr<_1bc8403cb_TypeAlias> _1bc74a6b0_FindTypeAlias(_1bc749923_scopeChecker* _self_, jule::Str _49632_ident, jule::Bool _49644_binded) {
	;
	jule::Ptr<_1bc8403cb_TypeAlias> _49913_ta = _1bc80d179_findTypeAlias((*(_self_))._field_table.ptr(), &(_49632_ident), _49644_binded, true);;
	if ((_49913_ta != nullptr)) {
		return _49913_ta;;
	};
	jule::Ptr<_1bc749923_scopeChecker> _50413_parent = (*(_self_))._field_parent;;
	while ((_50413_parent != nullptr)) {
		{
			_49913_ta=_1bc80d179_findTypeAlias((*(_50413_parent))._field_table.ptr(), &(_49632_ident), _49644_binded, true);
			if ((_49913_ta != nullptr)) {
				return _49913_ta;;
			};
			_50413_parent=(*(_50413_parent))._field_parent;
		}
	_iter_next_1c15838bd:;
	}
	_iter_end_1c15838bd:;;
	return _1bc785013_FindTypeAlias((*(_self_))._field_s.ptr(), _49632_ident, _49644_binded);;
}



inline jule::Ptr<_1bc5bb333_Struct> _1bc74aaab_FindStruct(_1bc749923_scopeChecker* _self_, jule::Str _52129_ident, jule::Bool _52141_binded) {
	return _1bc78540e_FindStruct((*(_self_))._field_s.ptr(), _52129_ident, _52141_binded);;
}



inline jule::Ptr<_1ece1b092_Fn> _1bc74aea7_FindFn(_1bc749923_scopeChecker* _self_, jule::Str _53025_ident, jule::Bool _53037_binded) {
	return _1bc78580a_FindFn((*(_self_))._field_s.ptr(), _53025_ident, _53037_binded);;
}



inline jule::Ptr<_1bc713a41_Trait> _1bc74b2e8_FindTrait(_1bc749923_scopeChecker* _self_, jule::Str _53928_ident) {
	return _1bc785b4b_FindTrait((*(_self_))._field_s.ptr(), _53928_ident);;
}



inline jule::Ptr<_1bc71624c_Enum> _1bc74b639_FindEnum(_1bc749923_scopeChecker* _self_, jule::Str _54827_ident) {
	return _1bc785e8c_FindEnum((*(_self_))._field_s.ptr(), _54827_ident);;
}



inline jule::Ptr<_1bc717957_TypeEnum> _1bc74b97a_FindTypeEnum(_1bc749923_scopeChecker* _self_, jule::Str _55731_ident) {
	return _1bc7862cd_FindTypeEnum((*(_self_))._field_s.ptr(), _55731_ident);;
}



inline jule::Bool _1bc74bccc_isUnsafe(jule::Ptr<_1bc749923_scopeChecker> _self_) {
	jule::Ptr<_1bc749923_scopeChecker> _56513_scope = _self_;;
	_julec_label_1c16081d4:;
	if ((*((*(_56513_scope))._field_scope))._field_Unsafety) {
		return true;;
	};
	if (((*(_56513_scope))._field_parent != nullptr)) {
		_56513_scope=(*(_56513_scope))._field_parent;
		goto _julec_label_1c16081d4;
	};
	return false;;
}



inline jule::Bool _1bc74c063_isRoot(_1bc749923_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _1bc74c261_stop(_1bc749923_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _1bc74c4e7_stopped(_1bc749923_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _1bc74c77d_isDeferred(jule::Ptr<_1bc749923_scopeChecker> _self_) {
	jule::Ptr<_1bc749923_scopeChecker> _59813_scope = _self_;;
	_julec_label_1c160b55b:;
	if ((*((*(_59813_scope))._field_scope))._field_Deferred) {
		return true;;
	};
	if (((*(_59813_scope))._field_parent != nullptr)) {
		_59813_scope=(*(_59813_scope))._field_parent;
		goto _julec_label_1c160b55b;
	};
	return false;;
}



inline jule::Ptr<_1bc749923_scopeChecker> _1bc74ca14_getRoot(jule::Ptr<_1bc749923_scopeChecker> _self_) {
	jule::Ptr<_1bc749923_scopeChecker> _61613_root = _self_;;
	while ((((*(_61613_root))._field_parent != nullptr) && ((*(_61613_root))._field_owner == nullptr))) {
		{
			_61613_root=(*(_61613_root))._field_parent;
		}
	_iter_next_1c160d4e7:;
	}
	_iter_end_1c160d4e7:;;
	return _61613_root;;
}



inline jule::Ptr<_1bc749923_scopeChecker> _1bc74cc9a_getHardRoot(jule::Ptr<_1bc749923_scopeChecker> _self_) {
	jule::Ptr<_1bc749923_scopeChecker> _62613_root = _self_;;
	while (((*(_62613_root))._field_parent != nullptr)) {
		{
			_62613_root=(*(_62613_root))._field_parent;
		}
	_iter_next_1c160e84a:;
	}
	_iter_end_1c160e84a:;;
	return _62613_root;;
}



inline jule::Ptr<_1bc744eb2_Label> _1bc74d0db_findLabel(_1bc749923_scopeChecker* _self_, jule::Str* _63629_ident) {
	{
		auto expr = &((*((*(_self_))._field_scope))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1610a27:;
		if (it != expr_end) {
			jule::Any _63721_st = *it;
			{
				{
					auto &_match_expr{ _63721_st };
					
					if (_match_expr.type == &__jule_any_type21) {
						_case_begin_1c1611330:;
						{
							jule::Ptr<_1bc744eb2_Label> _64021_label = _63721_st.cast_ptr<_1bc744eb2_Label>(&__jule_any_type21);;
							if (((*(_64021_label))._field_Ident == (*(_63629_ident)))) {
								return _64021_label;;
							};
						}
					}
					_match_end_1c16112ca:;
				};
			}
			_iter_next_1c1610a27:;
			++it;
			goto _iter_begin_1c1610a27;
		}
		_iter_end_1c1610a27:;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc74847c_scopeLabel> _1bc74d42c_findLabelScope(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Str* _65235_ident) {
	jule::Ptr<_1bc74847c_scopeLabel> _65313_label = _1bc74d76d_findLabelAll(_self_.ptr(), _65235_ident);;
	if (((_65313_label != nullptr) && ((*(_65313_label))._field_scope == _self_))) {
		return _65313_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc74847c_scopeLabel> _1bc74d76d_findLabelAll(_1bc749923_scopeChecker* _self_, jule::Str* _66432_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1613909:;
		if (it != expr_end) {
			jule::Ptr<_1bc74847c_scopeLabel> _66521_lbl = *it;
			{
				if (((*((*(_66521_lbl))._field_label))._field_Ident == (*(_66432_ident)))) {
					return _66521_lbl;;
				};
			}
			_iter_next_1c1613909:;
			++it;
			goto _iter_begin_1c1613909;
		}
		_iter_end_1c1613909:;
	};
	return nullptr;;
}



inline jule::Bool _1bc74db69_isDuplicatedIdent(_1bc749923_scopeChecker* _self_, jule::Uintptr _67636_itself, jule::Str* _67654_ident) {
	jule::Ptr<_1bc7a750d_Var> _6779_v = _1bc74a2b4_FindVar(_self_, (*(_67654_ident)), false);;
	if (((_6779_v != nullptr) && (static_cast<jule::Uintptr>(_6779_v) != _67636_itself))) {
		if (((*(_6779_v))._field_Scope == nullptr)) {
			return false;;
		};
		return (((*(_6779_v))._field_Scope == (*(_self_))._field_scope) || (!(_1bc7866da_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	jule::Ptr<_1bc8403cb_TypeAlias> _6859_ta = _1bc74a6b0_FindTypeAlias(_self_, (*(_67654_ident)), false);;
	if (((_6859_ta != nullptr) && (static_cast<jule::Uintptr>(_6859_ta) != _67636_itself))) {
		if (((*(_6859_ta))._field_Scope == nullptr)) {
			return false;;
		};
		return (((*(_6859_ta))._field_Scope == (*(_self_))._field_tree) || (!(_1bc7866da_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	return false;;
}



inline void _1bc74de22_checkVarDecl(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Ptr<_1bc5ad314_VarDecl> _69636_decl) {
	jule::Ptr<_1bc7a750d_Var> _69713_v = _1ece27642_buildVar(_69636_decl);;
	(*(_69713_v))._field_Scope=(*(_self_))._field_scope;
	__JULE_DEFER({
		{ jule::Slice<jule::Ptr<_1bc7a750d_Var>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Vars; __jule_push_dest.push(_69713_v); };
		{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_69713_v, &__jule_any_type8)); };
	});;
	if (_1bc74db69_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_69713_v)), &((*(_69713_v))._field_Ident))) {
		_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_69713_v))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_69713_v))._field_Ident, &__jule_any_type4)}));
		_1bc787224_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1bc74c261_stop(_self_.ptr());
		return;;
	};
	_1bc79a435_checkVarDecl((*(_self_))._field_s, &(_69713_v), jule::Trait<_1bc860c04_Lookup>(_self_, 0));
	if (((!(_1bc7a7b29_IsTypeInferred(_69713_v.ptr()))) && (((*(_69713_v))._field_Kind == nullptr) || ((*((*(_69713_v))._field_Kind))._field_Kind == nullptr)))) {
		return;;
	};
	_1bc79dbca_evalVarValue((*(_self_))._field_s, &(_69713_v), jule::Trait<_1bc860c04_Lookup>(_self_, 0));
	if (((!(_1bc7a7893_IsInitialized(_69713_v.ptr()))) || ((*((*(_69713_v))._field_Value))._field_Data == nullptr))) {
		return;;
	};
	_1bc75518c_removeInteriorMutRisk(_self_, &((*((*(_69713_v))._field_Value))._field_Data));
	_1bc79d867_checkVarValue((*(_self_))._field_s, &(_69713_v));
}



inline void _1bc74e1ca_checkTypeAlias(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Ptr<_1bc8403cb_TypeAlias>* _72739_ta) {
	if (_1bc74db69_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_72739_ta)))), &((*((*(_72739_ta))))._field_Ident))) {
		_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*(_72739_ta))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_72739_ta))))._field_Ident, &__jule_any_type4)}));
		_1bc787224_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1bc74c261_stop(_self_.ptr());
		return;;
	};
	_1bc7944b7_checkTypeAliasDecl((*(_self_))._field_s, _72739_ta, jule::Trait<_1bc860c04_Lookup>(_self_, 0));
	{ jule::Slice<jule::Ptr<_1bc8403cb_TypeAlias>> &__jule_push_dest = (*((*(_self_))._field_table))._field_TypeAliases; __jule_push_dest.push((*(_72739_ta))); };
	if (((*((*((*(_72739_ta))))._field_Kind))._field_Kind == nullptr)) {
		_1bc74c261_stop(_self_.ptr());
	};
}



inline void _1bc74e483_checkTypeAliasDecl(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Ptr<_1bc5b1eb6_TypeAliasDecl> _74342_decl) {
	jule::Ptr<_1bc8403cb_TypeAlias> _74413_ta = _1ece24111_buildTypeAlias(_74342_decl);;
	_1bc74e1ca_checkTypeAlias(_self_, &(_74413_ta));
}



inline jule::Ptr<_1bc74261e_Scope> _1bc74e719_getChild(_1bc749923_scopeChecker* _self_) {
	return jule::new_ptr<_1bc74261e_Scope>(_1bc74261e_Scope{._field_Parent=(*(_self_))._field_scope, });;
}



inline void _1bc74eb37_checkChildSsc(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Ptr<_1bc5aa4ba_ScopeTree>* _75438_tree, jule::Ptr<_1bc74261e_Scope>* _75461_s, jule::Ptr<_1bc749923_scopeChecker>* _75477_ssc) {
	(*((*(_75477_ssc))))._field_parent=_self_;
	_1bc75b12c_check((*(_75477_ssc)), _75438_tree, _75461_s);
}



inline jule::Ptr<_1bc74261e_Scope> _1bc750033_checkChildSc(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Ptr<_1bc5aa4ba_ScopeTree>* _75937_tree, jule::Ptr<_1bc749923_scopeChecker>* _75960_ssc) {
	jule::Ptr<_1bc74261e_Scope> _76013_s = _1bc74e719_getChild(_self_.ptr());;
	_1bc74eb37_checkChildSsc(_self_, _75937_tree, &(_76013_s), _75960_ssc);
	return _76013_s;;
}



inline jule::Ptr<_1bc74261e_Scope> _1bc750374_checkChild(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Ptr<_1bc5aa4ba_ScopeTree>* _76535_tree) {
	jule::Ptr<_1bc749923_scopeChecker> _76613_ssc = _1bc75b3b3_newChildChecker(_self_);;
	return _1bc750033_checkChildSc(_self_, _76535_tree, &(_76613_ssc));;
}



inline void _1bc75062c_checkAnonScope(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Ptr<_1bc5aa4ba_ScopeTree> _77038_tree) {
	jule::Ptr<_1bc74261e_Scope> _77113_s = _1bc750374_checkChild(_self_, &(_77038_tree));;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_77113_s, &__jule_any_type22)); };
}



inline void _1bc750990_processErrorCall(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Ptr<_1ece16a93_BuiltinErrorCallExprModel>* _77541_m, jule::Ptr<_1bc583a9d_Token> _77572_err) {
	if (_1bc74c77d_isDeferred(_self_)) {
		_1bc786db1_pushErr((*(_self_))._field_s.ptr(), _77572_err, jule::Str::lit("deferred scopes are not supports error calls", 44), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1bc749923_scopeChecker> _78013_root = _1bc74ca14_getRoot(_self_);;
	if ((!((*((*((*(_78013_root))._field_owner))._field_Decl))._field_Exceptional))) {
		_1bc786db1_pushErr((*(_self_))._field_s.ptr(), _77572_err, jule::Str::lit("error call can only useable for exceptional functions", 53), jule::Slice<jule::Any>());
		_1bc787224_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("you can declare an exceptional function with \"!\" operator", 57), jule::Slice<jule::Any>());
	};
	(*((*(_77541_m))))._field_Func=(*(_78013_root))._field_owner;
}



inline void _1bc750c48_checkExpr(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Ptr<_1bc599971_Expr> _78833_expr) {
	jule::Ptr<_1bc81259b_Eval> _78913_eval = _1bc78e35d_eval((*(_self_))._field_s, jule::Trait<_1bc860c04_Lookup>(_self_, 0));;
	(*(_78913_eval))._field_ignored=true;
	jule::Ptr<_1bc8108a7_Data> _79113_d = _1bc83080b_evalExpr(_78913_eval, _78833_expr);;
	if (((_79113_d == nullptr) || ((*(_79113_d))._field_Model == nullptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_79113_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1c1630dcc:;
			{
				jule::Ptr<_1ece16a93_BuiltinErrorCallExprModel> _80017_m = (*(_79113_d))._field_Model.cast_ptr<_1ece16a93_BuiltinErrorCallExprModel>(&__jule_any_type23);;
				_1bc750990_processErrorCall(_self_, &(_80017_m), (*(_78833_expr))._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_79113_d, &__jule_any_type24)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type31 || _match_expr.type == &__jule_any_type32 || _match_expr.type == &__jule_any_type33 || _match_expr.type == &__jule_any_type34) {
			_case_begin_1c1631570:;
			{
				{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_79113_d, &__jule_any_type24)); };
			}
		}
		else {
			_case_begin_1c1631509:;
			{
				_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_78833_expr))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c16314a4:;
	};
}



inline jule::Ptr<_1bc742a3c_If> _1bc751089_checkIf(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Ptr<_1bc5b0de9_If> _81931_i) {
	jule::Ptr<_1bc74261e_Scope> _82013_s = _1bc750374_checkChild(_self_, &((*(_81931_i))._field_Scope));;
	jule::Ptr<_1bc8108a7_Data> _82213_d = _1bc83080b_evalExpr(_1bc78e35d_eval((*(_self_))._field_s, jule::Trait<_1bc860c04_Lookup>(_self_, 0)), (*(_81931_i))._field_Expr);;
	if ((_82213_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1bc848c97_Prim> _82713_prim = _1bc84381e_Prim((*(_82213_d))._field_Kind.ptr());;
	if (((_82713_prim == nullptr) || (!(_1bc84be98_IsBool(_82713_prim.ptr()))))) {
		_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*(_81931_i))._field_Expr))._field_Token, jule::Str::lit("if conditions must be have boolean expression", 45), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1bc742a3c_If>(_1bc742a3c_If{._field_Expr=(*(_82213_d))._field_Model, ._field_Scope=_82013_s});;
}



inline jule::Ptr<_1bc742d39_Else> _1bc7513ca_checkElse(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Ptr<_1bc5b12c3_Else> _83933_e) {
	return jule::new_ptr<_1bc742d39_Else>(_1bc742d39_Else{._field_Scope=_1bc750374_checkChild(_self_, &((*(_83933_e))._field_Scope))});;
}



inline void _1bc751683_checkConditional(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Ptr<_1bc5b1779_Conditional> _84540_conditional) {
	jule::Ptr<_1bc743257_Conditional> _84613_c = jule::new_ptr<_1bc743257_Conditional>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_84613_c, &__jule_any_type35)); };
	(*(_84613_c))._field_Elifs=jule::Slice<jule::Ptr<_1bc742a3c_If>>::alloc(0LL, ((*(_84540_conditional))._field_Tail.len() + 1LL));
	{ jule::Slice<jule::Ptr<_1bc742a3c_If>> &__jule_push_dest = (*(_84613_c))._field_Elifs; __jule_push_dest.push(_1bc751089_checkIf(_self_, (*(_84540_conditional))._field_Head)); };
	{
		auto expr = &((*(_84540_conditional))._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c163cadc:;
		if (it != expr_end) {
			jule::Ptr<_1bc5b0de9_If> _85221_elif = *it;
			{
				{ jule::Slice<jule::Ptr<_1bc742a3c_If>> &__jule_push_dest = (*(_84613_c))._field_Elifs; __jule_push_dest.push(_1bc751089_checkIf(_self_, _85221_elif)); };
			}
			_iter_next_1c163cadc:;
			++it;
			goto _iter_begin_1c163cadc;
		}
		_iter_end_1c163cadc:;
	};
	if (((*(_84540_conditional))._field_Default != nullptr)) {
		(*(_84613_c))._field_Default=_1bc7513ca_checkElse(_self_, (*(_84540_conditional))._field_Default);
	};
}



inline void _1bc751b5b_checkIterScopeSsc(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Uintptr _86137_it, jule::Ptr<_1bc5aa4ba_ScopeTree> _86154_tree, jule::Ptr<_1bc74261e_Scope>* _86177_s, jule::Ptr<_1bc749923_scopeChecker> _86192_ssc) {
	(*(_86192_ssc))._field_it=_86137_it;
	_1bc74eb37_checkChildSsc(_self_, &(_86154_tree), _86177_s, &(_86192_ssc));
}



inline jule::Ptr<_1bc74261e_Scope> _1bc752112_checkIterScopeSc(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Uintptr _86636_it, jule::Ptr<_1bc5aa4ba_ScopeTree> _86653_tree, jule::Ptr<_1bc749923_scopeChecker> _86675_ssc) {
	jule::Ptr<_1bc74261e_Scope> _86713_scope = _1bc74e719_getChild(_self_.ptr());;
	_1bc751b5b_checkIterScopeSsc(_self_, _86636_it, _86653_tree, &(_86713_scope), _86675_ssc);
	return _86713_scope;;
}



inline jule::Ptr<_1bc74261e_Scope> _1bc75250d_checkIterScope(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Uintptr _87234_it, jule::Ptr<_1bc5aa4ba_ScopeTree>* _87252_tree) {
	jule::Ptr<_1bc749923_scopeChecker> _87313_ssc = _1bc75b3b3_newChildChecker(_self_);;
	return _1bc752112_checkIterScopeSc(_self_, _87234_it, (*(_87252_tree)), _87313_ssc);;
}



inline void _1bc7527b6_checkInfIter(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Ptr<_1bc5ade5d_Iter>* _87737_it) {
	jule::Ptr<_1bc743554_InfIter> _87813_kind = jule::new_ptr<_1bc743554_InfIter>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_87813_kind, &__jule_any_type36)); };
	(*(_87813_kind))._field_Scope=_1bc75250d_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_87813_kind)), &((*((*(_87737_it))))._field_Scope));
}



inline void _1bc752a6e_checkWhileIter(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Ptr<_1bc5ade5d_Iter>* _88339_it) {
	jule::Ptr<_1bc5ae788_WhileKind> _88413_wh = (*((*(_88339_it))))._field_Kind.cast_ptr<_1bc5ae788_WhileKind>(&__jule_any_type37);;
	if ((((*(_88413_wh))._field_Expr == nullptr) && ((*(_88413_wh))._field_Next == nullptr))) {
		_1bc7527b6_checkInfIter(_self_, _88339_it);
		return;;
	};
	jule::Ptr<_1bc743a0a_WhileIter> _89013_kind = jule::new_ptr<_1bc743a0a_WhileIter>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_89013_kind, &__jule_any_type38)); };
	(*(_89013_kind))._field_Scope=_1bc75250d_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_89013_kind)), &((*((*(_88339_it))))._field_Scope));
	if (((*(_88413_wh))._field_Expr != nullptr)) {
		jule::Ptr<_1bc8108a7_Data> _89517_d = _1bc83080b_evalExpr(_1bc78e35d_eval((*(_self_))._field_s, jule::Trait<_1bc860c04_Lookup>(_self_, 0)), (*(_88413_wh))._field_Expr);;
		if ((_89517_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1bc848c97_Prim> _90013_prim = _1bc84381e_Prim((*(_89517_d))._field_Kind.ptr());;
		if ((_90013_prim == nullptr)) {
			_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*(_88339_it))))._field_Token, jule::Str::lit("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1bc84be98_IsBool(_90013_prim.ptr())))) {
			_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*(_88339_it))))._field_Token, jule::Str::lit("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		(*(_89013_kind))._field_Expr=(*(_89517_d))._field_Model;
	};
	if (_1bc5aeaeb_IsWhileNext(_88413_wh.ptr())) {
		if ((!(_1bc741b29_isValidAstStForNextSt(&((*(_88413_wh))._field_Next))))) {
			_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_88413_wh))._field_NextToken, jule::Str::lit("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _92013_n = (*((*(_self_))._field_scope))._field_Stmts.len();;
		_1bc759c63_checkNode(_self_, &((*(_88413_wh))._field_Next));
		if ((_92013_n < (*((*(_self_))._field_scope))._field_Stmts.len())) {
			jule::Any _92321_st = (*((*(_self_))._field_scope))._field_Stmts[_92013_n];;
			(*((*(_self_))._field_scope))._field_Stmts=(*((*(_self_))._field_scope))._field_Stmts.slice(0LL, _92013_n);
			if ((!(_1bc741de3_isValidStForNextSt(&(_92321_st))))) {
				_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_88413_wh))._field_NextToken, jule::Str::lit("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			};
			(*(_89013_kind))._field_Next=_92321_st;
		};
	};
}



inline void _1bc752e8c_checkComptimeRangeIter(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Ptr<_1bc5ade5d_Iter>* _93347_it, jule::Ptr<_1bc744456_RangeIter>* _93363_kind, jule::Ptr<_1bc8108a7_Data>* _93386_d) {
	if (((*((*(_93363_kind))))._field_KeyA != nullptr)) {
		if (((!(_1bc7866da_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1bc74db69_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*((*(_93363_kind))))._field_KeyA))._field_Ident)))) {
			_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_93363_kind))))._field_KeyA))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_93363_kind))))._field_KeyA))._field_Ident, &__jule_any_type4)}));
			_1bc787224_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	if (((*((*(_93363_kind))))._field_KeyB != nullptr)) {
		if (((!(_1bc7866da_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1bc74db69_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*((*(_93363_kind))))._field_KeyB))._field_Ident)))) {
			_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_93363_kind))))._field_KeyB))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_93363_kind))))._field_KeyB))._field_Ident, &__jule_any_type4)}));
			_1bc787224_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_1bc5b0190_RangeKind> _94713_rang = (*((*(_93347_it))))._field_Kind.cast_ptr<_1bc5b0190_RangeKind>(&__jule_any_type39);;
	_1bc75b968_makeComptimeRange(_93386_d);
	if ((*((*(_93386_d))))._field_Decl) {
		_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*(_94713_rang))._field_Expr))._field_Token, jule::Str::lit("type @ is not supports comptime iterations", 42), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*((*(_93386_d))))._field_Kind.ptr()), &__jule_any_type4)}));
		return;;
	};
	_1bc8059ce_rangeChecker _95413_rc = _1bc8059ce_rangeChecker{._field_sc=_self_, ._field_rang=_94713_rang, ._field_Kind=(*(_93363_kind)), ._field_d=(*(_93386_d))};;
	jule::Bool _9609_ok = _1bc8079e2_check(&_95413_rc);;
	if ((!(_9609_ok))) {
		return;;
	};
	jule::Ptr<_1bc71aaae_comptimeRange> _96513_comptime = _1bc846bb8_comptimeRange((*((*(_93386_d))))._field_Kind.ptr());;
	_1bc71a88e_comptimeRangeKind_mptr_data[((*(_96513_comptime))._field_kind).type_offset]._1bc71a086_ready((*(_96513_comptime))._field_kind, &((*((*(_93363_kind))))._field_KeyA), &((*((*(_93363_kind))))._field_KeyB));
	jule::I64 _96713_i = 0LL;;
	jule::I64 _9689_errors = (*((*(_self_))._field_s))._field_errors.len();;
	for (; (_96713_i < _1bc71a88e_comptimeRangeKind_mptr_data[((*(_96513_comptime))._field_kind).type_offset]._1bc71a73a_len((*(_96513_comptime))._field_kind)); (_96713_i)++) {
		{
			jule::Ptr<_1bc749923_scopeChecker> _97017_ssc = _1bc75b3b3_newChildChecker(_self_);;
			jule::Ptr<_1bc74261e_Scope> _97117_scope = _1bc74e719_getChild(_self_.ptr());;
			if (((*((*(_93363_kind))))._field_KeyA != nullptr)) {
				(*((*((*(_93363_kind))))._field_KeyA))._field_Scope=_97117_scope;
				{ jule::Slice<jule::Ptr<_1bc7a750d_Var>> &__jule_push_dest = (*((*(_97017_ssc))._field_table))._field_Vars; __jule_push_dest.push((*((*(_93363_kind))))._field_KeyA); };
			};
			if (((*((*(_93363_kind))))._field_KeyB != nullptr)) {
				(*((*((*(_93363_kind))))._field_KeyB))._field_Scope=_97117_scope;
				{ jule::Slice<jule::Ptr<_1bc7a750d_Var>> &__jule_push_dest = (*((*(_97017_ssc))._field_table))._field_Vars; __jule_push_dest.push((*((*(_93363_kind))))._field_KeyB); };
			};
			_1bc71a88e_comptimeRangeKind_mptr_data[((*(_96513_comptime))._field_kind).type_offset]._1bc71a4a4_step((*(_96513_comptime))._field_kind, _96713_i, &((*((*(_93363_kind))))._field_KeyA), &((*((*(_93363_kind))))._field_KeyB));
			_1bc74eb37_checkChildSsc(_self_, &((*((*(_93347_it))))._field_Scope), &(_97117_scope), &(_97017_ssc));
			if ((_9689_errors != (*((*(_self_))._field_s))._field_errors.len())) {
				goto _iter_end_1c165d37c;
			};
			{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_97117_scope, &__jule_any_type22)); };
		}
	_iter_next_1c165d37c:;
	}
	_iter_end_1c165d37c:;;
}



inline void _1bc753245_checkRangeIter(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Ptr<_1bc5ade5d_Iter>* _99039_it) {
	jule::Ptr<_1bc5b0190_RangeKind> _99113_rang = (*((*(_99039_it))))._field_Kind.cast_ptr<_1bc5b0190_RangeKind>(&__jule_any_type39);;
	jule::Ptr<_1bc8108a7_Data> _99313_d = _1bc8304ba_evalExpr1(_1bc78e35d_eval((*(_self_))._field_s, jule::Trait<_1bc860c04_Lookup>(_self_, 0)), (*(_99113_rang))._field_Expr);;
	if ((_99313_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1bc744456_RangeIter> _99813_kind = jule::new_ptr<_1bc744456_RangeIter>(_1bc744456_RangeIter{._field_Expr=_99313_d, });;
	if ((*((*(_99039_it))))._field_Comptime) {
		_1bc752e8c_checkComptimeRangeIter(_self_, _99039_it, &(_99813_kind), &(_99313_d));
		return;;
	};
	if (_1bc8458cb_comptime((*(_99313_d))._field_Kind.ptr())) {
		_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*(_99113_rang))._field_Expr))._field_Token, jule::Str::lit("comptime expressions cannot be iterated at runtime", 50), jule::Slice<jule::Any>());
		_1bc787224_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("declarate comptime iteration like: const for ...", 48), jule::Slice<jule::Any>());
		return;;
	};
	_1bc8059ce_rangeChecker _101213_rc = _1bc8059ce_rangeChecker{._field_sc=_self_, ._field_rang=_99113_rang, ._field_Kind=_99813_kind, ._field_d=_99313_d};;
	jule::Bool _10189_ok = _1bc8079e2_check(&_101213_rc);;
	if ((!(_10189_ok))) {
		return;;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_99813_kind, &__jule_any_type40)); };
	jule::Ptr<_1bc749923_scopeChecker> _102513_ssc = _1bc75b3b3_newChildChecker(_self_);;
	jule::Ptr<_1bc74261e_Scope> _102613_scope = _1bc74e719_getChild(_self_.ptr());;
	if (((*(_99813_kind))._field_KeyA != nullptr)) {
		if (((!(_1bc7866da_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1bc74db69_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*(_99813_kind))._field_KeyA))._field_Ident)))) {
			_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*(_99813_kind))._field_KeyA))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_99813_kind))._field_KeyA))._field_Ident, &__jule_any_type4)}));
			_1bc787224_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		(*((*(_99813_kind))._field_KeyA))._field_Scope=_102613_scope;
		{ jule::Slice<jule::Ptr<_1bc7a750d_Var>> &__jule_push_dest = (*((*(_102513_ssc))._field_table))._field_Vars; __jule_push_dest.push((*(_99813_kind))._field_KeyA); };
	};
	if (((*(_99813_kind))._field_KeyB != nullptr)) {
		if (((!(_1bc7866da_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1bc74db69_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*(_99813_kind))._field_KeyB))._field_Ident)))) {
			_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*(_99813_kind))._field_KeyB))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_99813_kind))._field_KeyB))._field_Ident, &__jule_any_type4)}));
			_1bc787224_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		(*((*(_99813_kind))._field_KeyB))._field_Scope=_102613_scope;
		{ jule::Slice<jule::Ptr<_1bc7a750d_Var>> &__jule_push_dest = (*((*(_102513_ssc))._field_table))._field_Vars; __jule_push_dest.push((*(_99813_kind))._field_KeyB); };
	};
	_1bc751b5b_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_99813_kind)), (*((*(_99039_it))))._field_Scope, &(_102613_scope), _102513_ssc);
	(*(_99813_kind))._field_Scope=_102613_scope;
}



inline void _1bc7534ed_checkIter(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Ptr<_1bc5ade5d_Iter> _105033_it) {
	if (_1bc5ae2c1_IsInf(_105033_it.ptr())) {
		if ((*(_105033_it))._field_Comptime) {
			_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_105033_it))._field_Token, jule::Str::lit("comptime iterations can only be range iteration", 47), jule::Slice<jule::Any>());
			return;;
		};
		_1bc7527b6_checkInfIter(_self_, &(_105033_it));
		return;;
	};
	{
		auto &_match_expr{ (*(_105033_it))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1c167abe6:;
			{
				if ((*(_105033_it))._field_Comptime) {
					_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_105033_it))._field_Token, jule::Str::lit("comptime iterations can only be range iteration", 47), jule::Slice<jule::Any>());
					return;;
				};
				_1bc752a6e_checkWhileIter(_self_, &(_105033_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1c167c2ad:;
			{
				_1bc753245_checkRangeIter(_self_, &(_105033_it));
			}
		}
		else {
			_case_begin_1c167bcc4:;
			{
				jule::outln(jule::Str::lit("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1c167bc6e:;
	};
}



inline jule::Bool _1bc75383e_checkValidContLabel(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Uintptr _107439_it) {
	jule::Ptr<_1bc749923_scopeChecker> _107513_scope = _self_;;
	_julec_label_1c167e469:;
	if (((*(_107513_scope))._field_it == _107439_it)) {
		return true;;
	};
	if (((*(_107513_scope))._field_parent != nullptr)) {
		_107513_scope=(*(_107513_scope))._field_parent;
		goto _julec_label_1c167e469;
	};
	return false;;
}



inline jule::Bool _1bc753b80_checkValidBreakLabel(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Uintptr _109040_ptr) {
	jule::Ptr<_1bc749923_scopeChecker> _109113_scope = _self_;;
	_julec_label_1c1681526:;
	if (((*(_109113_scope))._field_it == _109040_ptr)) {
		return true;;
	};
	if (((*(_109113_scope))._field_cse != 0LLU)) {
		jule::Uintptr _109913_mtch = static_cast<jule::Uintptr>((*(((_1bc74738d_Case*)((*(_109113_scope))._field_cse))))._field_Owner);;
		if ((_109913_mtch == _109040_ptr)) {
			return true;;
		};
	};
	if (((*(_109113_scope))._field_parent != nullptr)) {
		_109113_scope=(*(_109113_scope))._field_parent;
		goto _julec_label_1c1681526;
	};
	return false;;
}



inline jule::Ptr<_1bc7447db_ContSt> _1bc753ec1_checkContValidScope(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Ptr<_1bc5b0943_ContSt> _111339_c) {
	if (_1bc74c77d_isDeferred(_self_)) {
		_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_111339_c))._field_Token, jule::Str::lit("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_111339_c))._field_Label != nullptr)) {
		return jule::new_ptr<_1bc7447db_ContSt>();;
	};
	jule::Ptr<_1bc749923_scopeChecker> _112313_scope = _self_;;
	_julec_label_1c168424e:;
	{
		
		if (((((*(_112313_scope))._field_it == 0LLU) && ((*(_112313_scope))._field_parent != nullptr)) && ((*(_112313_scope))._field_owner == nullptr))) {
			_case_begin_1c1686053:;
			{
				_112313_scope=(*(_112313_scope))._field_parent;
				goto _julec_label_1c168424e;
			}
		}
		else if (((*(_112313_scope))._field_it != 0LLU)) {
			_case_begin_1c16860ca:;
			{
				return jule::new_ptr<_1bc7447db_ContSt>(_1bc7447db_ContSt{._field_It=(*(_112313_scope))._field_it});;
			}
		}
		_match_end_1c1685e98:;
	};
	_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_111339_c))._field_Token, jule::Str::lit("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1bc754279_checkCont(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Ptr<_1bc5b0943_ContSt> _113729_c) {
	jule::Ptr<_1bc7447db_ContSt> _113813_cont = _1bc753ec1_checkContValidScope(_self_, _113729_c);;
	if ((_113813_cont == nullptr)) {
		return;;
	};
	if (((*(_113729_c))._field_Label != nullptr)) {
		jule::Ptr<_1bc74847c_scopeLabel> _114417_label = _1bc73eb38_findLabelParent(&((*((*(_113729_c))._field_Label))._field_Kind), (*(_self_))._field_parent);;
		if ((_114417_label == nullptr)) {
			_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_113729_c))._field_Label, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*((*(_113729_c))._field_Label))._field_Kind, &__jule_any_type4)}));
			return;;
		};
		(*(_114417_label))._field_used=true;
		if ((((*(_114417_label))._field_pos + 1LL) >= (*((*((*(_114417_label))._field_scope))._field_scope))._field_Stmts.len())) {
			_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_113729_c))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_113729_c))._field_Label))._field_Kind, &__jule_any_type4)}));
			return;;
		};
		jule::I64 _115713_i = ((*(_114417_label))._field_pos + 1LL);;
		if ((_115713_i >= (*((*((*(_114417_label))._field_scope))._field_scope))._field_Stmts.len())) {
			_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_113729_c))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>());
		} else {
			jule::Any _116121_st = (*((*((*(_114417_label))._field_scope))._field_scope))._field_Stmts[_115713_i];;
			{
				auto &_match_expr{ _116121_st };
				
				if (_match_expr.type == &__jule_any_type36) {
					_case_begin_1c16916e0:;
					{
						(*(_113813_cont))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_116121_st.cast_ptr<_1bc743554_InfIter>(&__jule_any_type36)));
					}
				}
				else if (_match_expr.type == &__jule_any_type40) {
					_case_begin_1c16918ee:;
					{
						(*(_113813_cont))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_116121_st.cast_ptr<_1bc744456_RangeIter>(&__jule_any_type40)));
					}
				}
				else if (_match_expr.type == &__jule_any_type38) {
					_case_begin_1c1691965:;
					{
						(*(_113813_cont))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_116121_st.cast_ptr<_1bc743a0a_WhileIter>(&__jule_any_type38)));
					}
				}
				else {
					_case_begin_1c1691888:;
					{
						_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_113729_c))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_113729_c))._field_Label))._field_Kind, &__jule_any_type4)}));
					}
				}
				_match_end_1c1691833:;
			};
		};
	};
	if (((*(_113813_cont))._field_It != 0LLU)) {
		if ((!(_1bc75383e_checkValidContLabel(_self_, (*(_113813_cont))._field_It)))) {
			_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_113729_c))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_113729_c))._field_Label))._field_Kind, &__jule_any_type4)}));
		};
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_113813_cont, &__jule_any_type41)); };
}



inline void _1bc754532_checkLabel(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Ptr<_1bc5a7a7d_LabelSt> _118434_l) {
	if ((_1bc74d0db_findLabel(_self_.ptr(), &((*(_118434_l))._field_Ident)) != nullptr)) {
		_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_118434_l))._field_Token, jule::Str::lit("label is already exist in this identifier: @", 44), jule::Slice<jule::Any>::make({jule::Any((*(_118434_l))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1bc744eb2_Label> _119013_label = jule::new_ptr<_1bc744eb2_Label>(_1bc744eb2_Label{._field_Ident=(*(_118434_l))._field_Ident});;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_119013_label, &__jule_any_type21)); };
	{ jule::Slice<jule::Ptr<_1bc74847c_scopeLabel>> &__jule_push_dest = (*((*(_self_))._field_labels)); __jule_push_dest.push(jule::new_ptr<_1bc74847c_scopeLabel>(_1bc74847c_scopeLabel{._field_token=(*(_118434_l))._field_Token, ._field_label=_119013_label, ._field_pos=static_cast<jule::I64>(((*((*(_self_))._field_scope))._field_Stmts.len() - 1LL)), ._field_scope=_self_, })); };
}



inline void _1bc7547da_pushGoto(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Ptr<_1bc5a7e57_GotoSt> _120332_gt) {
	jule::Ptr<_1bc74538b_GotoSt> _120413_st = jule::new_ptr<_1bc74538b_GotoSt>(_1bc74538b_GotoSt{._field_Ident=(*((*(_120332_gt))._field_Label))._field_Kind, });;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_120413_st, &__jule_any_type42)); };
	{ jule::Slice<jule::Ptr<_1bc748a10_scopeGoto>> &__jule_push_dest = (*((*(_self_))._field_gotos)); __jule_push_dest.push(jule::new_ptr<_1bc748a10_scopeGoto>(_1bc748a10_scopeGoto{._field_st=_120413_st, ._field_gt=_120332_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I64>(((*((*(_self_))._field_scope))._field_Stmts.len() - 1LL))})); };
}



inline void _1bc754a93_checkPostfix(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Ptr<_1bc5a8e47_AssignSt> _121736_a) {
	if (((*(_121736_a))._field_Left.len() > 1LL)) {
		_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_121736_a))._field_Setter, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1bc599971_Expr> _122313_expr = (*((*(_121736_a))._field_Left[0LL]))._field_Expr;;
	jule::Ptr<_1bc8108a7_Data> _122413_d = _1bc83080b_evalExpr(_1bc78e35d_eval((*(_self_))._field_s, jule::Trait<_1bc860c04_Lookup>(_self_, 0)), _122313_expr);;
	if ((_122413_d == nullptr)) {
		return;;
	};
	_1bc741860_checkAssign(&((*(_self_))._field_s), &(_122413_d), nullptr, (*(_121736_a))._field_Setter);
	if ((_1bc843d3b_Ptr((*(_122413_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1bc85108a_Ptr> _123217_ptr = _1bc843d3b_Ptr((*(_122413_d))._field_Kind.ptr());;
		if (_1bc851ac4_IsUnsafe(_123217_ptr.ptr())) {
			_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_121736_a))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_121736_a))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1bc841586_Str((*(_122413_d))._field_Kind.ptr()), &__jule_any_type4)}));
			return;;
		};
	} else {
		if (((_1bc84381e_Prim((*(_122413_d))._field_Kind.ptr()) == nullptr) || (!(_230d57dad_IsNum((*(_1bc84381e_Prim((*(_122413_d))._field_Kind.ptr())))._field_Kind))))) {
			_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_121736_a))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_121736_a))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1bc841586_Str((*(_122413_d))._field_Kind.ptr()), &__jule_any_type4)}));
			return;;
		};
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_1bc745765_Postfix>(_1bc745765_Postfix{._field_Expr=(*(_122413_d))._field_Model, ._field_Op=(*((*(_121736_a))._field_Setter))._field_Kind}), &__jule_any_type43)); };
}



inline jule::Bool _1bc754dd4_isNewAssignIdent(_1bc749923_scopeChecker* _self_, jule::Str _125035_ident) {
	if ((_1bc58650c_IsIgnoreIdent(_125035_ident) || (_125035_ident).empty())) {
		return false;;
	};
	return (_1bc80d575_defByIdent((*(_self_))._field_table.ptr(), &(_125035_ident), false) == nullptr);;
}



inline void _1bc75518c_removeInteriorMutRisk(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Ptr<_1bc8108a7_Data>* _126346_d) {
	jule::Ptr<_1bc5be0b1_StructIns> _12649_s = _1bc844d92_Struct((*((*(_126346_d))))._field_Kind.ptr());;
	if ((_12649_s == nullptr)) {
		return;;
	};
	jule::Ptr<_1bc749923_scopeChecker> _12689_root = _1bc74cc9a_getHardRoot(_self_);;
	if (((*((*(_12689_root))._field_owner))._field_Owner != _12649_s)) {
		return;;
	};
	(*((*(_126346_d))))._field_Mutable=true;
}



inline jule::Bool _1bc755643_checkStructureAssignOp(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Ptr<_1bc5be0b1_StructIns>* _127747_s, jule::Ptr<_1bc5a8e47_AssignSt>* _127767_a, jule::Ptr<_1bc8108a7_Data>* _127786_r) {
	jule::Ptr<_1ece1de96_FnIns> _128017_overload = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_127767_a))))._field_Setter))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1c14c659c:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1c14c6bc9:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1c14c6c40:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1c14c6ca6:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1c14c6d1c:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1c14c83c3:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1c14c8439:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1c14c84a0:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1c14c8516:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1c14c857c:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1c14c6b63:;
			{
				_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*(_127767_a))))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_127767_a))))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1bc5be435_Str((*(_127747_s)).ptr()), &__jule_any_type4)}));
				return false;;
			}
		}
		_match_end_1c14c6b0d:;
	};
	if ((_128017_overload == nullptr)) {
		_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*(_127767_a))))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_127767_a))))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1bc5be435_Str((*(_127747_s)).ptr()), &__jule_any_type4)}));
		return false;;
	};
	jule::Ptr<_1ece1ceea_ParamIns> _131213_p = (*(_128017_overload))._field_Params[1LL];;
	return _1bc78e8be_checkAssignType((*(_self_))._field_s, (*((*(_131213_p))._field_Decl))._field_Reference, &((*(_131213_p))._field_Kind), _127786_r, (*((*(_127767_a))))._field_Setter);;
}



inline void _1bc7558eb_checkSingleAssign(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Ptr<_1bc5a8e47_AssignSt>* _131642_a) {
	jule::Ptr<_1bc8108a7_Data> _131717_l = nullptr;;
	if ((!(_1bc58650c_IsIgnoreIdent((*((*((*(_131642_a))))._field_Left[0LL]))._field_Ident)))) {
		jule::Ptr<_1bc599971_Expr> _132017_expr = (*((*((*(_131642_a))))._field_Left[0LL]))._field_Expr;;
		_131717_l=_1bc83080b_evalExpr(_1bc78e35d_eval((*(_self_))._field_s, jule::Trait<_1bc860c04_Lookup>(_self_, 0)), _132017_expr);
		if ((_131717_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1bc81259b_Eval> _132717_eval = nullptr;;
	if ((_131717_l != nullptr)) {
		_132717_eval=_1bc78e01c_evalp((*(_self_))._field_s, jule::Trait<_1bc860c04_Lookup>(_self_, 0), (*(_131717_l))._field_Kind);
	} else {
		_132717_eval=_1bc78e35d_eval((*(_self_))._field_s, jule::Trait<_1bc860c04_Lookup>(_self_, 0));
	};
	(*(_132717_eval))._field_unsafety=_1bc74bccc_isUnsafe(_self_);
	jule::Ptr<_1bc8108a7_Data> _133413_r = _1bc83080b_evalExpr(_132717_eval, (*((*(_131642_a))))._field_Right);;
	if ((_133413_r == nullptr)) {
		return;;
	};
	_1bc75518c_removeInteriorMutRisk(_self_, &(_133413_r));
	if ((_131717_l == nullptr)) {
		if (_1bc842532_Void((*(_133413_r))._field_Kind.ptr())) {
			_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_131642_a))))._field_Right))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_133413_r, &__jule_any_type24)); };
		return;;
	};
	if ((!(_1bc741860_checkAssign(&((*(_self_))._field_s), &(_131717_l), _133413_r, (*((*(_131642_a))))._field_Setter)))) {
		return;;
	};
	if ((_1bc845645_Tup((*(_133413_r))._field_Kind.ptr()) != nullptr)) {
		_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*(_131642_a))))._field_Setter, jule::Str::lit("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ece0cc87_OperandExprModel> _135813_lm = jule::new_ptr<_1ece0cc87_OperandExprModel>(_1ece0cc87_OperandExprModel{._field_Kind=(*(_131717_l))._field_Kind, ._field_Model=(*(_131717_l))._field_Model});;
	jule::Ptr<_1ece0cc87_OperandExprModel> _136213_rm = jule::new_ptr<_1ece0cc87_OperandExprModel>(_1ece0cc87_OperandExprModel{._field_Kind=(*(_133413_r))._field_Kind, ._field_Model=(*(_133413_r))._field_Model});;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_1bc745c1b_Assign>(_1bc745c1b_Assign{._field_L=_135813_lm, ._field_R=_136213_rm, ._field_Op=(*((*(_131642_a))))._field_Setter}), &__jule_any_type44)); };
	if (((*((*((*(_131642_a))))._field_Setter))._field_Id == static_cast<jule::U64>(71LLU))) {
		_1bc7e9583_assignTypeChecker _136917_checker = _1bc7e9583_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_131717_l))._field_Kind, ._field_d=_133413_r, ._field_errorToken=(*((*(_131642_a))))._field_Setter};;
		if (_1bc7ea551_check(&_136917_checker)) {
			(*(_136213_rm))._field_Model=(*(_133413_r))._field_Model;
			(*(_135813_lm))._field_Model=(*(_131717_l))._field_Model;
		};
		return;;
	};
	jule::Ptr<_1bc5be0b1_StructIns> _138113_strct = _1bc844d92_Struct((*(_131717_l))._field_Kind.ptr());;
	if ((_138113_strct != nullptr)) {
		_1bc755643_checkStructureAssignOp(_self_, &(_138113_strct), _131642_a, &(_133413_r));
		return;;
	};
	jule::U64 _13869_id = (*((*((*(_131642_a))))._field_Setter))._field_Id;;
	(*((*((*(_131642_a))))._field_Setter))._field_Id=_1bc75b737_removeEqFromOp((*((*((*(_131642_a))))._field_Setter))._field_Id);
	_1bc832c5e_binaryEval _138813_solver = static__1bc833688_new(_132717_eval, (*((*(_131642_a))))._field_Setter);;
	({
		jule::Ptr<_1bc8108a7_Data> ___jule_assign_arg = _131717_l;
		jule::Ptr<_1bc8108a7_Data> _1___jule_assign_arg = _133413_r;
		_138813_solver._field_l = ___jule_assign_arg;
		_138813_solver._field_r = _1___jule_assign_arg;
	});
	_1bc8377d0_evalOp(&_138813_solver);
	(*((*((*(_131642_a))))._field_Setter))._field_Id=_13869_id;
}



inline void _1bc755e7e_processEndPartOfMultiAssign(_1bc749923_scopeChecker* _self_, jule::Ptr<_1bc7460e5_MultiAssign>* _139451_st, jule::Ptr<_1bc5a8e47_AssignSt>* _139514_a, jule::Ptr<_1bc5a88b4_AssignLeft>* _139533_lexpr, jule::Ptr<_1bc8108a7_Data>* _139558_l, jule::Ptr<_1bc8108a7_Data>* _139573_r) {
	if (((!((*((*(_139533_lexpr))))._field_Reference)) && _1bc58650c_IsIgnoreIdent((*((*(_139533_lexpr))))._field_Ident))) {
		if (_1bc842532_Void((*((*(_139573_r))))._field_Kind.ptr())) {
			_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_139514_a))))._field_Right))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Ptr<_1bc8108a7_Data>> &__jule_push_dest = (*((*(_139451_st))))._field_L; __jule_push_dest.push(nullptr); };
		return;;
	};
	if (((*((*(_139514_a))))._field_Declarative && ((*((*(_139533_lexpr))))._field_Reference || _1bc754dd4_isNewAssignIdent(_self_, (*((*(_139533_lexpr))))._field_Ident)))) {
		if (_1bc74db69_isDuplicatedIdent(_self_, 0LLU, &((*((*(_139533_lexpr))))._field_Ident))) {
			_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*(_139533_lexpr))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_139533_lexpr))))._field_Ident, &__jule_any_type4)}));
			_1bc787224_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
			_1bc74c261_stop(_self_);
			return;;
		};
		if (_1bc58650c_IsIgnoreIdent((*((*(_139533_lexpr))))._field_Ident)) {
			_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*(_139533_lexpr))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1bc7a750d_Var> _141617_v = jule::new_ptr<_1bc7a750d_Var>(_1bc7a750d_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*((*(_139533_lexpr))))._field_Token, ._field_Ident=(*((*(_139533_lexpr))))._field_Ident, ._field_Mutable=(*((*(_139533_lexpr))))._field_Mutable, ._field_Reference=(*((*(_139533_lexpr))))._field_Reference, ._field_Value=jule::new_ptr<_1bc8119eb_Value>(_1bc8119eb_Value{._field_Expr=(*((*(_139514_a))))._field_Right, ._field_Data=(*(_139573_r))}), });;
		_1bc79d867_checkVarValue((*(_self_))._field_s, &(_141617_v));
		(*(_141617_v))._field_Value=nullptr;
		{ jule::Slice<jule::Ptr<_1bc8108a7_Data>> &__jule_push_dest = (*((*(_139451_st))))._field_L; __jule_push_dest.push(jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=(*((*(_141617_v))._field_Kind))._field_Kind, ._field_Mutable=(*(_141617_v))._field_Mutable, ._field_Reference=(*(_141617_v))._field_Reference, ._field_Lvalue=(!((*(_141617_v))._field_Constant)), ._field_Model=jule::Any(_141617_v, &__jule_any_type8), })); };
		{ jule::Slice<jule::Ptr<_1bc7a750d_Var>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Vars; __jule_push_dest.push(_141617_v); };
		{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_141617_v, &__jule_any_type8)); };
		return;;
	};
	if (((*((*(_139533_lexpr))))._field_Mutable || (*((*(_139533_lexpr))))._field_Reference)) {
		_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*(_139533_lexpr))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_139533_lexpr))))._field_Ident, &__jule_any_type4)}));
		_1bc787224_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if ((!(_1bc741860_checkAssign(&((*(_self_))._field_s), _139558_l, (*(_139573_r)), (*((*(_139533_lexpr))))._field_Token)))) {
		return;;
	};
	;
	_1bc793c58_checkValidityForInitExpr((*(_self_))._field_s, (*((*(_139558_l))))._field_Mutable, false, &((*((*(_139558_l))))._field_Kind), _139573_r, &((*((*(_139514_a))))._field_Setter));
	_1bc7e9583_assignTypeChecker _145913_checker = _1bc7e9583_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*((*(_139558_l))))._field_Kind, ._field_d=(*(_139573_r)), ._field_errorToken=(*((*(_139514_a))))._field_Setter};;
	_1bc7ea551_check(&_145913_checker);
	{ jule::Slice<jule::Ptr<_1bc8108a7_Data>> &__jule_push_dest = (*((*(_139451_st))))._field_L; __jule_push_dest.push((*(_139558_l))); };
}



inline void _1bc756237_checkMultiAssign(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Ptr<_1bc5a8e47_AssignSt>* _146941_a) {
	jule::Ptr<_1bc8108a7_Data> _147013_rd = _1bc83080b_evalExpr(_1bc78e35d_eval((*(_self_))._field_s, jule::Trait<_1bc860c04_Lookup>(_self_, 0)), (*((*(_146941_a))))._field_Right);;
	if ((_147013_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1bc8108a7_Data>> _147413_right = _1bc7409b3_getDatasFromTupleData(&(_147013_rd));;
	if ((_147413_right.len() == 1LL)) {
		{
			auto &_match_expr{ (*(_147413_right[0LL]))._field_Model };
			
			if (_match_expr.type == &__jule_any_type45) {
				_case_begin_1c1504bd5:;
				{
					jule::Ptr<_1ece10ae2_IndexingExprModel> _147821_iem = (*(_147413_right[0LL]))._field_Model.cast_ptr<_1ece10ae2_IndexingExprModel>(&__jule_any_type45);;
					if ((_1bc8453ae_Map((*((*(_147821_iem))._field_Expr))._field_Kind.ptr()) != nullptr)) {
						_147413_right=jule::Slice<jule::Ptr<_1bc8108a7_Data>>::make({jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=(*(_1bc8453ae_Map((*((*(_147821_iem))._field_Expr))._field_Kind.ptr())))._field_Val, }),jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c4679_primBool, })});
					};
				}
			}
			_match_end_1c1504b3b:;
		};
	};
	{
		
		if (((*((*(_146941_a))))._field_Left.len() > _147413_right.len())) {
			_case_begin_1c15046a7:;
			{
				_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*(_146941_a))))._field_Setter, jule::Str::lit("overflow multi assignment identifers", 36), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*((*(_146941_a))))._field_Left.len() < _147413_right.len())) {
			_case_begin_1c1505015:;
			{
				_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*(_146941_a))))._field_Setter, jule::Str::lit("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1c150460d:;
	};
	jule::Ptr<_1bc7460e5_MultiAssign> _149713_st = jule::new_ptr<_1bc7460e5_MultiAssign>(_1bc7460e5_MultiAssign{._field_R=(*(_147013_rd))._field_Model});;
	{
		auto expr = &((*((*(_146941_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c17c60c7:;
		if (it != expr_end) {
			jule::I64 _150013_i = it - expr->begin();
			{
				jule::Ptr<_1bc5a88b4_AssignLeft> _150117_lexpr = (*((*(_146941_a))))._field_Left[_150013_i];;
				jule::Ptr<_1bc8108a7_Data> _150221_l = nullptr;;
				if (((!(_1bc58650c_IsIgnoreIdent((*(_150117_lexpr))._field_Ident))) && ((!((*((*(_146941_a))))._field_Declarative)) || (!(_1bc754dd4_isNewAssignIdent(_self_.ptr(), (*(_150117_lexpr))._field_Ident)))))) {
					_150221_l=_1bc83080b_evalExpr(_1bc78e35d_eval((*(_self_))._field_s, jule::Trait<_1bc860c04_Lookup>(_self_, 0)), (*(_150117_lexpr))._field_Expr);
					if ((_150221_l == nullptr)) {
						goto _iter_next_1c17c60c7;
					};
				};
				jule::Ptr<_1bc8108a7_Data> _151017_r = _147413_right[_150013_i];;
				_1bc75518c_removeInteriorMutRisk(_self_, &(_151017_r));
				_1bc755e7e_processEndPartOfMultiAssign(_self_.ptr(), &(_149713_st), _146941_a, &(_150117_lexpr), &(_150221_l), &(_151017_r));
			}
			_iter_next_1c17c60c7:;
			++it;
			_150013_i++;
			goto _iter_begin_1c17c60c7;
		}
		_iter_end_1c17c60c7:;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_149713_st, &__jule_any_type46)); };
}



inline void _1bc7564e0_checkAssignSt(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Ptr<_1bc5a8e47_AssignSt> _151737_a) {
	{
		
		if (_1bc588740_IsPostfixOp((*((*(_151737_a))._field_Setter))._field_Id)) {
			_case_begin_1c17cb42e:;
			{
				_1bc754a93_checkPostfix(_self_, _151737_a);
			}
		}
		else if (((*(_151737_a))._field_Left.len() == 1LL)) {
			_case_begin_1c17ca96c:;
			{
				_1bc7558eb_checkSingleAssign(_self_, &(_151737_a));
			}
		}
		else {
			_case_begin_1c17ca906:;
			{
				_1bc756237_checkMultiAssign(_self_, &(_151737_a));
			}
		}
		_match_end_1c17ca83a:;
	};
}



inline jule::Ptr<_1bc74261e_Scope> _1bc7568db_checkCaseScope(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Ptr<_1bc74738d_Case>* _152835_c, jule::Ptr<_1bc5aa4ba_ScopeTree>* _152850_tree) {
	jule::Ptr<_1bc749923_scopeChecker> _152913_ssc = _1bc75b3b3_newChildChecker(_self_);;
	(*(_152913_ssc))._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_152835_c))));
	return _1bc750033_checkChildSc(_self_, _152850_tree, &(_152913_ssc));;
}



inline jule::Ptr<_1bc74738d_Case> _1bc756e4c_checkCase(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Ptr<_1bc746755_Match> _153433_m, jule::I64 _153444_i, jule::Ptr<_1bc5b246c_Case> _153456_c, jule::Ptr<_1bc8108a7_Data> _153475_expr) {
	jule::Ptr<_1bc74738d_Case> _153513_case = (*(_153433_m))._field_Cases[_153444_i];;
	(*(_153513_case))._field_Exprs=jule::Slice<jule::Ptr<_1bc8108a7_Data>>::alloc(0LL, (*(_153456_c))._field_Exprs.len());
	jule::Bool _153713_constMatched = false;;
	jule::Ptr<_1bc81259b_Eval> _153813_eval = _1bc78e35d_eval((*(_self_))._field_s, jule::Trait<_1bc860c04_Lookup>(_self_, 0));;
	{
		auto expr = &((*(_153456_c))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c17d1c4d:;
		if (it != expr_end) {
			jule::Ptr<_1bc599971_Expr> _153921_e = *it;
			{
				jule::Ptr<_1bc8108a7_Data> _154017_d = _1bc82e9e7_evalExprKind(_153813_eval, (*(_153921_e))._field_Kind);;
				if ((_154017_d == nullptr)) {
					goto _iter_next_1c17d1c4d;
				};
				if ((*(_153433_m))._field_TypeMatch) {
					{ jule::Slice<jule::Ptr<_1bc8108a7_Data>> &__jule_push_dest = (*(_153513_case))._field_Exprs; __jule_push_dest.push(_154017_d); };
					if ((_1bc7406e9_countMatchType(&(_153433_m), &((*(_154017_d))._field_Kind)) > 1LL)) {
						_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_153921_e))._field_Token, jule::Str::lit("duplicated pattern: type @ is already matched", 45), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*(_154017_d))._field_Kind.ptr()), &__jule_any_type4)}));
					};
					if ((*(_153433_m))._field_Comptime) {
						_153713_constMatched=(_153713_constMatched || _1bc8418c7_Equal((*(_153475_expr))._field_Kind, (*(_154017_d))._field_Kind));
					} else {
						if ((_1bc844358_TypeEnum((*(_153475_expr))._field_Kind.ptr()) != nullptr)) {
							_1bc79032b_checkTypeCompatibility((*(_self_))._field_s, &((*(_153475_expr))._field_Kind), &((*(_154017_d))._field_Kind), &((*(_153921_e))._field_Token));
						} else {
							jule::Ptr<_1bc713a41_Trait> _155925_trt = _1bc845128_Trait((*(_153475_expr))._field_Kind.ptr());;
							if ((_155925_trt != nullptr)) {
								_1bc79032b_checkTypeCompatibility((*(_self_))._field_s, &((*(_153475_expr))._field_Kind), &((*(_154017_d))._field_Kind), &((*(_153921_e))._field_Token));
							};
						};
					};
					goto _iter_next_1c17d1c4d;
				};
				if ((*(_154017_d))._field_Decl) {
					_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_153921_e))._field_Token, jule::Str::lit("expecting expression, found type declaration", 44), jule::Slice<jule::Any>());
					_1bc787224_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("you can use type-match if you want to match types", 49), jule::Slice<jule::Any>());
					goto _iter_next_1c17d1c4d;
				};
				if ((*(_153433_m))._field_Comptime) {
					if (((!(_1bc81127b_IsConst(_154017_d.ptr()))) && (_1bc8471d5_comptimeTypeInfo((*(_154017_d))._field_Kind.ptr()) == nullptr))) {
						_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_153921_e))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
						_1bc787224_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
						goto _iter_next_1c17d1c4d;
					};
					if ((!(_153713_constMatched))) {
						if (_1bc81127b_IsConst(_154017_d.ptr())) {
							_153713_constMatched=(_1bc81127b_IsConst(_153475_expr.ptr()) && _230d5de3b_Eq((*(_154017_d))._field_Constant.ptr(), (*((*(_153475_expr))._field_Constant))));
						} else {
							jule::Ptr<_1bc72a4e7_comptimeTypeInfo> _158425_exprCti = _1bc8471d5_comptimeTypeInfo((*(_153475_expr))._field_Kind.ptr());;
							_153713_constMatched=((_158425_exprCti != nullptr) && _1bc8418c7_Equal((*(_1bc8471d5_comptimeTypeInfo((*(_154017_d))._field_Kind.ptr())))._field_base, (*(_158425_exprCti))._field_base));
						};
					};
				};
				{ jule::Slice<jule::Ptr<_1bc8108a7_Data>> &__jule_push_dest = (*(_153513_case))._field_Exprs; __jule_push_dest.push(_154017_d); };
				if ((((!((*(_153433_m))._field_Comptime)) || (_1bc8471d5_comptimeTypeInfo((*(_153475_expr))._field_Kind.ptr()) == nullptr)) || (_1bc8471d5_comptimeTypeInfo((*(_154017_d))._field_Kind.ptr()) == nullptr))) {
					_1bc7e9583_assignTypeChecker _159421_checker = _1bc7e9583_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_153475_expr))._field_Kind, ._field_d=_154017_d, ._field_errorToken=(*(_153921_e))._field_Token};;
					_1bc7ea551_check(&_159421_checker);
				};
			}
			_iter_next_1c17d1c4d:;
			++it;
			goto _iter_begin_1c17d1c4d;
		}
		_iter_end_1c17d1c4d:;
	};
	if (((!((*(_153433_m))._field_Comptime)) || _153713_constMatched)) {
		(*(_153513_case))._field_Scope=_1bc7568db_checkCaseScope(_self_, &(_153513_case), &((*(_153456_c))._field_Scope));
	};
	return _153513_case;;
}



inline void _1bc75736a_checkCases(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Ptr<_1bc5b2c86_MatchCase>* _160935_m, jule::Ptr<_1bc746755_Match> _160954_rm, jule::Ptr<_1bc8108a7_Data> _160970_expr) {
	(*(_160954_rm))._field_Cases=jule::Slice<jule::Ptr<_1bc74738d_Case>>::alloc(0LL, (*((*(_160935_m))))._field_Cases.len());
	{
		auto expr = &((*((*(_160935_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c17e438c:;
		if (it != expr_end) {
			jule::I64 _161113_i = it - expr->begin();
			{
				jule::Ptr<_1bc74738d_Case> _161217_case = jule::new_ptr<_1bc74738d_Case>(_1bc74738d_Case{._field_Owner=_160954_rm, });;
				if ((_161113_i > 0LL)) {
					(*((*(_160954_rm))._field_Cases[(_161113_i - 1LL)]))._field_Next=_161217_case;
				};
				{ jule::Slice<jule::Ptr<_1bc74738d_Case>> &__jule_push_dest = (*(_160954_rm))._field_Cases; __jule_push_dest.push(_161217_case); };
			}
			_iter_next_1c17e438c:;
			++it;
			_161113_i++;
			goto _iter_begin_1c17e438c;
		}
		_iter_end_1c17e438c:;
	};
	if ((((*(_160954_rm))._field_Default != nullptr) && ((*((*(_160935_m))))._field_Cases.len() > 0LL))) {
		(*((*(_160954_rm))._field_Cases[((*(_160954_rm))._field_Cases.len() - 1LL)]))._field_Next=(*(_160954_rm))._field_Default;
	};
	{
		auto expr = &((*((*(_160935_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c17e799a:;
		if (it != expr_end) {
			jule::I64 _162514_i = it - expr->begin();
			jule::Ptr<_1bc5b246c_Case> _162521_c = *it;
			{
				_1bc756e4c_checkCase(_self_, _160954_rm, _162514_i, _162521_c, _160970_expr);
			}
			_iter_next_1c17e799a:;
			++it;
			_162514_i++;
			goto _iter_begin_1c17e799a;
		}
		_iter_end_1c17e799a:;
	};
}



inline jule::Ptr<_1bc74738d_Case> _1bc757766_checkDefault(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Ptr<_1bc746755_Match> _163036_m, jule::Ptr<_1bc5b12c3_Else> _163051_d) {
	jule::Ptr<_1bc74738d_Case> _163113_def = jule::new_ptr<_1bc74738d_Case>(_1bc74738d_Case{._field_Owner=_163036_m, });;
	(*(_163113_def))._field_Scope=_1bc7568db_checkCaseScope(_self_, &(_163113_def), &((*(_163051_d))._field_Scope));
	return _163113_def;;
}



inline void _1bc757ac9_checkComptimePanic(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Ptr<_1bc583a9d_Token> _163842_callToken, jule::Ptr<_1bc74261e_Scope>* _163862_s) {
	if (((*((*(_163862_s))))._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _16429_stmt = (*((*(_163862_s))))._field_Stmts[0LL];;
	{
		auto &_match_expr{ _16429_stmt };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1c17eb21d:;
			{
				jule::Ptr<_1bc8108a7_Data> _164513_d = _16429_stmt.cast_ptr<_1bc8108a7_Data>(&__jule_any_type24);;
				{
					auto &_match_expr{ (*(_164513_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type29) {
						_case_begin_1c17ec186:;
						{
							jule::Ptr<_1ece149d6_BuiltinPanicCallExprModel> _164821_m = (*(_164513_d))._field_Model.cast_ptr<_1ece149d6_BuiltinPanicCallExprModel>(&__jule_any_type29);;
							{
								auto &_match_expr{ (*(_164821_m))._field_Expr };
								
								if (_match_expr.type == &__jule_any_type19) {
									_case_begin_1c17ed30d:;
									{
										jule::Ptr<_230d58386_Const> _165121_c = (*(_164821_m))._field_Expr.cast_ptr<_230d58386_Const>(&__jule_any_type19);;
										if ((!(_230d5cb0a_IsStr(_165121_c.ptr())))) {
											goto _match_end_1c17ed297;
										};
										if ((_163842_callToken == nullptr)) {
											jule::Ptr<_1bc749923_scopeChecker> _165629_root = _1bc74cc9a_getHardRoot(_self_);;
											if (((*(_165629_root))._field_calledFrom == nullptr)) {
												_163842_callToken=(*(_164821_m))._field_Token;
											} else {
												_163842_callToken=(*(_165629_root))._field_calledFrom;
											};
										};
										_1bc786db1_pushErr((*(_self_))._field_s.ptr(), _163842_callToken, jule::Str::lit("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_230d5a50e_ReadStr(_165121_c.ptr()), &__jule_any_type4)}));
										_1bc74c261_stop(_self_.ptr());
									}
								}
								_match_end_1c17ed297:;
							};
						}
					}
					_match_end_1c17ec120:;
				};
			}
		}
		_match_end_1c17eb11e:;
	};
}



inline void _1bc757e3c_processConstMatch(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Ptr<_1bc746755_Match>* _167042_tm, jule::Ptr<_1bc5b2c86_MatchCase>* _167059_m) {
	{
		auto expr = &((*((*(_167042_tm))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c17ed41d:;
		if (it != expr_end) {
			jule::I64 _167114_i = it - expr->begin();
			jule::Ptr<_1bc74738d_Case> _167121_c = *it;
			{
				if (((*(_167121_c))._field_Scope != nullptr)) {
					jule::Ptr<_1bc583a9d_Token> _167325_token = nullptr;;
					if (((!((*((*(_167042_tm))))._field_TypeMatch)) && ((*((*(_167121_c))._field_Scope))._field_Stmts.len() > 0LL))) {
						_167325_token=(*((*((*((*(_167059_m))))._field_Cases[_167114_i]))._field_Scope))._field_Stmts[0LL]._field_Token;
					};
					_1bc757ac9_checkComptimePanic(_self_, _167325_token, &((*(_167121_c))._field_Scope));
					(*((*(_167042_tm))))._field_Default=_167121_c;
					(*((*(_167042_tm))))._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_1c17ed41d:;
			++it;
			_167114_i++;
			goto _iter_begin_1c17ed41d;
		}
		_iter_end_1c17ed41d:;
	};
	if (((*((*(_167059_m))))._field_Default != nullptr)) {
		(*((*(_167042_tm))))._field_Cases=nullptr;
		(*((*(_167042_tm))))._field_Default=_1bc757766_checkDefault(_self_, (*(_167042_tm)), (*((*(_167059_m))))._field_Default);
		if (((*((*(_167042_tm))))._field_Default != nullptr)) {
			jule::Ptr<_1bc583a9d_Token> _168725_token = nullptr;;
			if ((!((*((*(_167042_tm))))._field_TypeMatch))) {
				_168725_token=(*((*((*((*(_167059_m))))._field_Default))._field_Scope))._field_Stmts[0LL]._field_Token;
			};
			_1bc757ac9_checkComptimePanic(_self_, _168725_token, &((*((*((*(_167042_tm))))._field_Default))._field_Scope));
		};
	} else {
		(*((*(_167042_tm))))._field_Cases=nullptr;
	};
}



inline void _1bc7581e5_checkTypeMatch(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Ptr<_1bc5b2c86_MatchCase>* _169939_m) {
	jule::Ptr<_1bc8108a7_Data> _170013_d = _1bc82ed38_eval1(_1bc78e35d_eval((*(_self_))._field_s, jule::Trait<_1bc860c04_Lookup>(_self_, 0)), (*((*(_169939_m))))._field_Expr);;
	if ((_170013_d == nullptr)) {
		return;;
	};
	if ((*((*(_169939_m))))._field_Comptime) {
		jule::Ptr<_1bc72a4e7_comptimeTypeInfo> _170617_cti = _1bc8471d5_comptimeTypeInfo((*(_170013_d))._field_Kind.ptr());;
		if ((_170617_cti == nullptr)) {
			if ((!((*(_170013_d))._field_Decl))) {
				_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_169939_m))))._field_Expr))._field_Token, jule::Str::lit("comptime type-match expressions can take only type declarations", 63), jule::Slice<jule::Any>());
				return;;
			};
		} else {
			(*(_170013_d))._field_Kind=(*(_170617_cti))._field_base;
		};
	} else if (((*(_170013_d))._field_Decl || (!(((((_1bc84381e_Prim((*(_170013_d))._field_Kind.ptr()) != nullptr) && _1bc84c4b5_IsAny(_1bc84381e_Prim((*(_170013_d))._field_Kind.ptr()).ptr())) || (_1bc845128_Trait((*(_170013_d))._field_Kind.ptr()) != nullptr)) || (_1bc844358_TypeEnum((*(_170013_d))._field_Kind.ptr()) != nullptr)))))) {
		_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_169939_m))))._field_Expr))._field_Token, jule::Str::lit("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1bc746755_Match> _172013_tm = jule::new_ptr<_1bc746755_Match>(_1bc746755_Match{._field_Expr=_170013_d, ._field_TypeMatch=true, ._field_Comptime=(*((*(_169939_m))))._field_Comptime, });;
	if (((!((*(_172013_tm))._field_Comptime)) && ((*((*(_169939_m))))._field_Default != nullptr))) {
		(*(_172013_tm))._field_Default=_1bc757766_checkDefault(_self_, _172013_tm, (*((*(_169939_m))))._field_Default);
	};
	_1bc75736a_checkCases(_self_, _169939_m, _172013_tm, _170013_d);
	if ((*(_172013_tm))._field_Comptime) {
		_1bc757e3c_processConstMatch(_self_, &(_172013_tm), _169939_m);
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_172013_tm, &__jule_any_type47)); };
}



inline void _1bc75849d_checkCommonMatch(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Ptr<_1bc5b2c86_MatchCase>* _174141_m) {
	jule::Ptr<_1bc8108a7_Data> _174217_d = nullptr;;
	if (((*((*(_174141_m))))._field_Expr == nullptr)) {
		_174217_d=jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c4679_primBool, ._field_Constant=static__230d58d59_NewBool(true)});
		(*(_174217_d))._field_Model=jule::Any((*(_174217_d))._field_Constant, &__jule_any_type19);
	} else {
		_174217_d=_1bc8304ba_evalExpr1(_1bc78e35d_eval((*(_self_))._field_s, jule::Trait<_1bc860c04_Lookup>(_self_, 0)), (*((*(_174141_m))))._field_Expr);
		if ((_174217_d == nullptr)) {
			return;;
		};
	};
	if ((*((*(_174141_m))))._field_Comptime) {
		if ((!(_1bc75be63_canComptimeMatch(&(_174217_d))))) {
			_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_174141_m))))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			_1bc787224_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
			return;;
		};
	} else if (_1bc8458cb_comptime((*(_174217_d))._field_Kind.ptr())) {
		_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_174141_m))))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		_1bc787224_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1bc746755_Match> _176813_mc = jule::new_ptr<_1bc746755_Match>(_1bc746755_Match{._field_Expr=_174217_d, ._field_Comptime=(*((*(_174141_m))))._field_Comptime, });;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_176813_mc, &__jule_any_type47)); };
	if (((!((*(_176813_mc))._field_Comptime)) && ((*((*(_174141_m))))._field_Default != nullptr))) {
		(*(_176813_mc))._field_Default=_1bc757766_checkDefault(_self_, _176813_mc, (*((*(_174141_m))))._field_Default);
	};
	_1bc75736a_checkCases(_self_, _174141_m, _176813_mc, _174217_d);
	if ((*(_176813_mc))._field_Comptime) {
		_1bc757e3c_processConstMatch(_self_, &(_176813_mc), _174141_m);
	};
}



inline void _1bc758756_checkMatch(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Ptr<_1bc5b2c86_MatchCase> _179134_m) {
	if ((*(_179134_m))._field_TypeMatch) {
		_1bc7581e5_checkTypeMatch(_self_, &(_179134_m));
		return;;
	};
	_1bc75849d_checkCommonMatch(_self_, &(_179134_m));
}



inline void _1bc758a0e_checkFall(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Ptr<_1bc5a8254_FallSt> _179929_f) {
	if (((((*(_self_))._field_cse == 0LLU) || (((*((*(_self_))._field_scope))._field_Stmts.len() + 1LL) < (*((*(_self_))._field_scope))._field_Stmts.len())) || _1bc74c77d_isDeferred(_self_))) {
		_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_179929_f))._field_Token, jule::Str::lit("fall keyword can only useable at end of the case scopes", 55), jule::Slice<jule::Any>());
		return;;
	};
	_1bc74738d_Case* _180713_case = ((_1bc74738d_Case*)((*(_self_))._field_cse));;
	if ((*((*(_180713_case))._field_Owner))._field_Comptime) {
		_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_179929_f))._field_Token, jule::Str::lit("the fall statement is not allowed for comptime-matching", 55), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_180713_case))._field_Next == nullptr)) {
		_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_179929_f))._field_Token, jule::Str::lit("fall cannot useable at final case", 33), jule::Slice<jule::Any>());
		_1bc787224_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("remove \"fall\" keyword", 21), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_1bc747987_FallSt>(_1bc747987_FallSt{._field_DestCase=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_180713_case))._field_Next))}), &__jule_any_type48)); };
}



inline jule::Ptr<_1bc744bb5_BreakSt> _1bc758d50_checkBreakWithLabel(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Ptr<_1bc5b0569_BreakSt> _182239_b) {
	jule::Ptr<_1bc744bb5_BreakSt> _182313_brk = _1bc759191_checkPlainBreak(_self_, _182239_b);;
	if ((_182313_brk == nullptr)) {
		return nullptr;;
	};
	(*(_182313_brk))._field_It=0LLU;
	(*(_182313_brk))._field_Mtch=0LLU;
	jule::Ptr<_1bc74847c_scopeLabel> _183313_label = _1bc73eb38_findLabelParent(&((*((*(_182239_b))._field_Label))._field_Kind), (*(_self_))._field_parent);;
	if ((_183313_label == nullptr)) {
		_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_182239_b))._field_Label, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*((*(_182239_b))._field_Label))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	(*(_183313_label))._field_used=true;
	if ((((*(_183313_label))._field_pos + 1LL) >= (*((*((*(_183313_label))._field_scope))._field_scope))._field_Stmts.len())) {
		_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_182239_b))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_182239_b))._field_Label))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _18469_i = ((*(_183313_label))._field_pos + 1LL);;
	if ((_18469_i >= (*((*((*(_183313_label))._field_scope))._field_scope))._field_Stmts.len())) {
		_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_182239_b))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_182239_b))._field_Label))._field_Kind, &__jule_any_type4)}));
	} else {
		jule::Any _185017_st = (*((*((*(_183313_label))._field_scope))._field_scope))._field_Stmts[_18469_i];;
		{
			auto &_match_expr{ _185017_st };
			
			if (_match_expr.type == &__jule_any_type36) {
				_case_begin_1c182c0ea:;
				{
					(*(_182313_brk))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_185017_st.cast_ptr<_1bc743554_InfIter>(&__jule_any_type36)));
				}
			}
			else if (_match_expr.type == &__jule_any_type40) {
				_case_begin_1c182c309:;
				{
					(*(_182313_brk))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_185017_st.cast_ptr<_1bc744456_RangeIter>(&__jule_any_type40)));
				}
			}
			else if (_match_expr.type == &__jule_any_type38) {
				_case_begin_1c182c370:;
				{
					(*(_182313_brk))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_185017_st.cast_ptr<_1bc743a0a_WhileIter>(&__jule_any_type38)));
				}
			}
			else if (_match_expr.type == &__jule_any_type47) {
				_case_begin_1c182c3d6:;
				{
					(*(_182313_brk))._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_185017_st.cast_ptr<_1bc746755_Match>(&__jule_any_type47)));
				}
			}
			else {
				_case_begin_1c182c293:;
				{
					_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_182239_b))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_182239_b))._field_Label))._field_Kind, &__jule_any_type4)}));
				}
			}
			_match_end_1c182c23d:;
		};
	};
	if (((*(_182313_brk))._field_It != 0LLU)) {
		if ((!(_1bc753b80_checkValidBreakLabel(_self_, (*(_182313_brk))._field_It)))) {
			_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_182239_b))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_182239_b))._field_Label))._field_Kind, &__jule_any_type4)}));
		};
	};
	if (((*(_182313_brk))._field_Mtch != 0LLU)) {
		if ((!(_1bc753b80_checkValidBreakLabel(_self_, (*(_182313_brk))._field_Mtch)))) {
			_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_182239_b))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_182239_b))._field_Label))._field_Kind, &__jule_any_type4)}));
		};
	};
	return _182313_brk;;
}



inline jule::Ptr<_1bc744bb5_BreakSt> _1bc759191_checkPlainBreak(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Ptr<_1bc5b0569_BreakSt> _188035_b) {
	if (_1bc74c77d_isDeferred(_self_)) {
		_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_188035_b))._field_Token, jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1bc749923_scopeChecker> _188613_scope = _self_;;
	_julec_label_1c1834e9e:;
	{
		
		if ((((((*(_188613_scope))._field_it == 0LLU) && ((*(_188613_scope))._field_cse == 0LLU)) && ((*(_188613_scope))._field_parent != nullptr)) && ((*(_188613_scope))._field_owner == nullptr))) {
			_case_begin_1c1835257:;
			{
				_188613_scope=(*(_188613_scope))._field_parent;
				goto _julec_label_1c1834e9e;
			}
		}
		else if (((*(_188613_scope))._field_it != 0LLU)) {
			_case_begin_1c18352ce:;
			{
				return jule::new_ptr<_1bc744bb5_BreakSt>(_1bc744bb5_BreakSt{._field_It=(*(_188613_scope))._field_it, });;
			}
		}
		else if (((*(_188613_scope))._field_cse != 0LLU)) {
			_case_begin_1c1835356:;
			{
				return jule::new_ptr<_1bc744bb5_BreakSt>(_1bc744bb5_BreakSt{._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(((_1bc74738d_Case*)((*(_188613_scope))._field_cse))))._field_Owner))});;
			}
		}
		_match_end_1c183518b:;
	};
	_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_188035_b))._field_Token, jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1bc759449_checkBreak(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Ptr<_1bc5b0569_BreakSt> _190230_b) {
	if (((*(_190230_b))._field_Label != nullptr)) {
		jule::Ptr<_1bc744bb5_BreakSt> _190417_brk = _1bc758d50_checkBreakWithLabel(_self_, _190230_b);;
		{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_190417_brk, &__jule_any_type49)); };
		return;;
	};
	jule::Ptr<_1bc744bb5_BreakSt> _190913_brk = _1bc759191_checkPlainBreak(_self_, _190230_b);;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_190913_brk, &__jule_any_type49)); };
}



inline void _1bc759702_checkRet(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Ptr<_1bc5ad6dd_RetSt> _191332_r) {
	if (_1bc74c77d_isDeferred(_self_)) {
		_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_191332_r))._field_Token, jule::Str::lit("deferred scopes are not supports return statements", 50), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1bc747d1c_RetSt> _191813_rt = jule::new_ptr<_1bc747d1c_RetSt>(_1bc747d1c_RetSt{._field_Func=(*(_1bc74ca14_getRoot(_self_)))._field_owner, });;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_191813_rt, &__jule_any_type50)); };
	jule::Ptr<_1bc808240_retTypeChecker> _192313_rtc = jule::new_ptr<_1bc808240_retTypeChecker>(_1bc808240_retTypeChecker{._field_sc=_self_, ._field_f=(*(_191813_rt))._field_Func, ._field_errorToken=(*(_191332_r))._field_Token, });;
	jule::Bool _19289_ok = _1bc808e55_check(_192313_rtc.ptr(), &((*(_191332_r))._field_Expr));;
	if ((!(_19289_ok))) {
		return;;
	};
	if (((*(_191332_r))._field_Expr != nullptr)) {
		(*(_191813_rt))._field_Expr=(*(_192313_rtc))._field_model;
	};
}



inline void _1bc7599aa_checkUseExpr(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Ptr<_1bc59a345_UseExpr> _193832_ue) {
	if (((*(_self_))._field_result == nullptr)) {
		_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_193832_ue))._field_Token, jule::Str::lit("use expressions cannot useable out of exceptional handler scopes", 64), jule::Slice<jule::Any>());
		return;;
	};
	if (_1bc74c77d_isDeferred(_self_)) {
		_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_193832_ue))._field_Token, jule::Str::lit("use expressions cannot useable in deferred scopes", 49), jule::Slice<jule::Any>());
	};
	if ((((*(_self_))._field_i + 1LL) < (*((*(_self_))._field_tree))._field_Stmts.len())) {
		_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_193832_ue))._field_Token, jule::Str::lit("use expressions must be last statement of scope", 47), jule::Slice<jule::Any>());
	};
}



inline void _1bc759c63_checkNode(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Any* _195434_node) {
	{
		auto &_match_expr{ (*(_195434_node)) };
		
		if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1c1845751:;
			{
				_1bc75062c_checkAnonScope(_self_, (*(_195434_node)).cast_ptr<_1bc5aa4ba_ScopeTree>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1c1845cb2:;
			{
				_1bc74de22_checkVarDecl(_self_, (*(_195434_node)).cast_ptr<_1bc5ad314_VarDecl>(&__jule_any_type16));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1c1845ab4:;
			{
				_1bc74e483_checkTypeAliasDecl(_self_, (*(_195434_node)).cast_ptr<_1bc5b1eb6_TypeAliasDecl>(&__jule_any_type12));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1c1845ee3:;
			{
				_1bc750c48_checkExpr(_self_, (*(_195434_node)).cast_ptr<_1bc599971_Expr>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1c1846059:;
			{
				_1bc751683_checkConditional(_self_, (*(_195434_node)).cast_ptr<_1bc5b1779_Conditional>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1c18460c0:;
			{
				_1bc7534ed_checkIter(_self_, (*(_195434_node)).cast_ptr<_1bc5ade5d_Iter>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1c1846136:;
			{
				_1bc754279_checkCont(_self_, (*(_195434_node)).cast_ptr<_1bc5b0943_ContSt>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1c184619c:;
			{
				_1bc754532_checkLabel(_self_, (*(_195434_node)).cast_ptr<_1bc5a7a7d_LabelSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1c1846213:;
			{
				_1bc7547da_pushGoto(_self_, (*(_195434_node)).cast_ptr<_1bc5a7e57_GotoSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1c1846279:;
			{
				_1bc7564e0_checkAssignSt(_self_, (*(_195434_node)).cast_ptr<_1bc5a8e47_AssignSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1c18462e0:;
			{
				_1bc758756_checkMatch(_self_, (*(_195434_node)).cast_ptr<_1bc5b2c86_MatchCase>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1c1846356:;
			{
				_1bc758a0e_checkFall(_self_, (*(_195434_node)).cast_ptr<_1bc5a8254_FallSt>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1c18463bc:;
			{
				_1bc759449_checkBreak(_self_, (*(_195434_node)).cast_ptr<_1bc5b0569_BreakSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1c1846433:;
			{
				_1bc759702_checkRet(_self_, (*(_195434_node)).cast_ptr<_1bc5ad6dd_RetSt>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1c1846499:;
			{
				_1bc7599aa_checkUseExpr(_self_, (*(_195434_node)).cast_ptr<_1bc59a345_UseExpr>(&__jule_any_type63));
			}
		}
		else {
			_case_begin_1c184592c:;
			{
				jule::outln(jule::Str::lit("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1c18458c7:;
	};
}



inline void _1bc759e61_checkResult(jule::Ptr<_1bc749923_scopeChecker> _self_) {
	_1bc5a9d5a_Stmt _199213_stmt = (*((*(_self_))._field_tree))._field_Stmts[((*((*(_self_))._field_tree))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _199213_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1c184e9be:;
			{
				jule::Ptr<_1bc59a345_UseExpr> _199517_ue = _199213_stmt._field_Data.cast_ptr<_1bc59a345_UseExpr>(&__jule_any_type63);;
				jule::Ptr<_1bc8108a7_Data> _199617_d = _1bc83080b_evalExpr(_1bc78e35d_eval((*(_self_))._field_s, jule::Trait<_1bc860c04_Lookup>(_self_, 0)), (*(_199517_ue))._field_Expr);;
				if ((_199617_d == nullptr)) {
					return;;
				};
				{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_199617_d, &__jule_any_type24)); };
				jule::Ptr<_1bc808240_retTypeChecker> _200117_rtc = jule::new_ptr<_1bc808240_retTypeChecker>(_1bc808240_retTypeChecker{._field_sc=_self_, ._field_types=_1ece20195_Types((*(_self_))._field_result.ptr()), ._field_errorToken=(*((*(_199517_ue))._field_Expr))._field_Token, });;
				_1bc808e55_check(_200117_rtc.ptr(), &((*(_199517_ue))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1c1850580:;
			{
				jule::Ptr<_1bc599971_Expr> _200817_expr = _199213_stmt._field_Data.cast_ptr<_1bc599971_Expr>(&__jule_any_type52);;
				jule::Ptr<_1bc8108a7_Data> _200917_d = _1bc83080b_evalExpr(_1bc78e35d_eval((*(_self_))._field_s, jule::Trait<_1bc860c04_Lookup>(_self_, 0)), _200817_expr);;
				if ((_200917_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ (*(_200917_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1c1855d05:;
						{
							jule::Ptr<_1ece16a93_BuiltinErrorCallExprModel> _201521_m = (*(_200917_d))._field_Model.cast_ptr<_1ece16a93_BuiltinErrorCallExprModel>(&__jule_any_type23);;
							_1bc750990_processErrorCall(_self_, &(_201521_m), (*(_200817_expr))._field_Token);
							{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_200917_d, &__jule_any_type24)); };
						}
					}
					else {
						_case_begin_1c1856014:;
						{
							return;;
						}
					}
					_match_end_1c1855eae:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type57 || _match_expr.type == &__jule_any_type61 || _match_expr.type == &__jule_any_type55 || _match_expr.type == &__jule_any_type62) {
			_case_begin_1c184ec44:;
			{
				_1bc759c63_checkNode(_self_, &(_199213_stmt._field_Data));
			}
		}
		else {
			_case_begin_1c184ebcd:;
			{
				_1bc759c63_checkNode(_self_, &(_199213_stmt._field_Data));
				return;;
			}
		}
		_match_end_1c184eb78:;
	};
	(*(_self_))._field_result=nullptr;
}



inline void _1bc75a15e_checkTree(jule::Ptr<_1bc749923_scopeChecker> _self_) {
	(*(_self_))._field_i=0LL;
	jule::I64 _203713_n = (*((*(_self_))._field_tree))._field_Stmts.len();;
	if (((*(_self_))._field_result != nullptr)) {
		(_203713_n)--;
	};
	for (; ((*(_self_))._field_i < _203713_n); ((*(_self_))._field_i)++) {
		{
			_1bc5a9d5a_Stmt _204517_stmt = (*((*(_self_))._field_tree))._field_Stmts[(*(_self_))._field_i];;
			_1bc759c63_checkNode(_self_, &(_204517_stmt._field_Data));
			if (_1bc74c4e7_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_1c1859bc7:;
	}
	_iter_end_1c1859bc7:;;
	if ((((*(_self_))._field_result != nullptr) && ((*((*(_self_))._field_tree))._field_Stmts.len() != 0LL))) {
		_1bc759e61_checkResult(_self_);
	};
}



inline void _1bc75a4c2_checkGoto(_1bc749923_scopeChecker* _self_, jule::Ptr<_1bc748a10_scopeGoto>* _205633_gt, jule::Ptr<_1bc74847c_scopeLabel>* _205654_label) {
	jule::Ptr<_1bc749923_scopeChecker> _205713_gtsc = (*((*(_205633_gt))))._field_scope;;
	while ((((*(_205713_gtsc))._field_childIndex - 1LL) > (*((*((*(_205654_label))))._field_scope))._field_childIndex)) {
		{
			_205713_gtsc=(*(_205713_gtsc))._field_parent;
		}
	_iter_next_1c185d33a:;
	}
	_iter_end_1c185d33a:;;
	jule::I64 _206213_n = 0LL;;
	if (((*(_205713_gtsc))._field_scope == (*((*((*(_205654_label))))._field_scope))._field_scope)) {
		if (((*((*(_205633_gt))))._field_pos > (*((*(_205654_label))))._field_pos)) {
			return;;
		};
		_206213_n=(*((*(_205633_gt))))._field_pos;
	};
	jule::I64 _207513_i = ((*((*(_205654_label))))._field_pos - 1LL);;
	if ((_206213_n == 0LL)) {
		{
			auto expr = &((*((*((*((*(_205654_label))))._field_scope))._field_scope))._field_Stmts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c1861d11:;
			if (it != expr_end) {
				jule::I64 _207817_j = it - expr->begin();
				jule::Any _207820_stmt = *it;
				{
					if (_1bc740375_stmtIsGotoScope(&(_207820_stmt), &((*(_205713_gtsc))._field_scope))) {
						_206213_n=_207817_j;
						goto _iter_end_1c1861d11;
					};
				}
				_iter_next_1c1861d11:;
				++it;
				_207817_j++;
				goto _iter_begin_1c1861d11;
			}
			_iter_end_1c1861d11:;
		};
	};
	for (; (_207513_i >= _206213_n); (_207513_i)--) {
		{
			jule::Any _208817_stmt = (*((*((*((*(_205654_label))))._field_scope))._field_scope))._field_Stmts[_207513_i];;
			if (_1bc7421ac_stmtIsDef(&(_208817_stmt))) {
				_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_205633_gt))))._field_gt))._field_Token, jule::Str::lit("goto @ jumps over declaration(s)", 32), jule::Slice<jule::Any>::make({jule::Any((*((*((*((*(_205633_gt))))._field_gt))._field_Label))._field_Kind, &__jule_any_type4)}));
				return;;
			};
		}
	_iter_next_1c18627a1:;
	}
	_iter_end_1c18627a1:;;
}



inline void _1bc75a6c0_checkGotos(_1bc749923_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c18625e7:;
		if (it != expr_end) {
			jule::Ptr<_1bc748a10_scopeGoto> _209721_gt = *it;
			{
				jule::Ptr<_1bc74847c_scopeLabel> _209817_label = _1bc74d76d_findLabelAll(_self_, &((*((*((*(_209721_gt))._field_gt))._field_Label))._field_Kind));;
				if ((_209817_label == nullptr)) {
					_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*(_209721_gt))._field_gt))._field_Token, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_209721_gt))._field_gt))._field_Label))._field_Kind, &__jule_any_type4)}));
					goto _iter_next_1c18625e7;
				};
				(*((*(_209721_gt))._field_st))._field_Label=(*(_209817_label))._field_label;
				(*(_209817_label))._field_used=true;
				_1bc75a4c2_checkGoto(_self_, &(_209721_gt), &(_209817_label));
			}
			_iter_next_1c18625e7:;
			++it;
			goto _iter_begin_1c18625e7;
		}
		_iter_end_1c18625e7:;
	};
}



inline void _1bc75a8bd_checkLabels(_1bc749923_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1868642:;
		if (it != expr_end) {
			jule::Ptr<_1bc74847c_scopeLabel> _211016_l = *it;
			{
				if ((!((*(_211016_l))._field_used))) {
					_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_211016_l))._field_token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_211016_l))._field_label))._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1c1868642:;
			++it;
			goto _iter_begin_1c1868642;
		}
		_iter_end_1c1868642:;
	};
}



inline void _1bc75aabb_checkVars(_1bc749923_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c186a1c1:;
		if (it != expr_end) {
			jule::Ptr<_1bc7a750d_Var> _211816_v = *it;
			{
				if (((((!((*(_211816_v))._field_Used)) && (!((*(_211816_v))._field_Constant))) && (!(_1bc58650c_IsIgnoreIdent((*(_211816_v))._field_Ident)))) && (!(_1bc5867c6_IsAnonIdent((*(_211816_v))._field_Ident))))) {
					_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_211816_v))._field_Token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*(_211816_v))._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1c186a1c1:;
			++it;
			goto _iter_begin_1c186a1c1;
		}
		_iter_end_1c186a1c1:;
	};
}



inline void _1bc75acb9_checkAliases(_1bc749923_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c186c7cd:;
		if (it != expr_end) {
			jule::Ptr<_1bc8403cb_TypeAlias> _212616_a = *it;
			{
				if ((((!((*(_212616_a))._field_Used)) && (!(_1bc58650c_IsIgnoreIdent((*(_212616_a))._field_Ident)))) && (!(_1bc5867c6_IsAnonIdent((*(_212616_a))._field_Ident))))) {
					_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_212616_a))._field_Token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*(_212616_a))._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1c186c7cd:;
			++it;
			goto _iter_begin_1c186c7cd;
		}
		_iter_end_1c186c7cd:;
	};
}



inline void _1bc75b12c_check(jule::Ptr<_1bc749923_scopeChecker> _self_, jule::Ptr<_1bc5aa4ba_ScopeTree>* _213430_tree, jule::Ptr<_1bc74261e_Scope>* _213453_s) {
	(*((*(_213453_s))))._field_Deferred=(*((*(_213430_tree))))._field_Deferred;
	(*((*(_213453_s))))._field_Unsafety=(*((*(_213430_tree))))._field_Unsafety;
	jule::I64 _21389_errors = (*((*(_self_))._field_s))._field_errors.len();;
	(*(_self_))._field_tree=(*(_213430_tree));
	(*(_self_))._field_scope=(*(_213453_s));
	_1bc75a15e_checkTree(_self_);
	if ((_21389_errors == (*((*(_self_))._field_s))._field_errors.len())) {
		_1bc75aabb_checkVars(_self_.ptr());
		_1bc75acb9_checkAliases(_self_.ptr());
		if (_1bc74c063_isRoot(_self_.ptr())) {
			_1bc75a6c0_checkGotos(_self_.ptr());
			_1bc75a8bd_checkLabels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_1bc749923_scopeChecker> _1bc75b3b3_newChildChecker(jule::Ptr<_1bc749923_scopeChecker> _self_) {
	jule::Ptr<_1bc749923_scopeChecker> _215813_base = _1bc73e3eb_newScopeCheckerBase(&((*(_self_))._field_s), nullptr);;
	(*(_215813_base))._field_parent=_self_;
	(*(_215813_base))._field_labels=(*(_self_))._field_labels;
	(*(_215813_base))._field_gotos=(*(_self_))._field_gotos;
	(*(_215813_base))._field_childIndex=static_cast<jule::I64>(((*(_self_))._field_childIndex + 1LL));
	return _215813_base;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc749923_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1bc75cd65_checkCdef(_1bc75c958_directiveChecker* _self_, jule::Ptr<_1bc594a59_Directive>* _1629_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1c1875594:;
			{
				if ((*((*(_self_))._field_o.cast_ptr<_1ece1b092_Fn>(&__jule_any_type64)))._field_Binded) {
					goto _match_end_1c18757d6;
				};
				goto _case_begin_1c187583b;
			}
		}
		else {
			_case_begin_1c187583b:;
			{
				_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*(_1629_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_1629_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1c18757d6:;
	};
	if (((*((*(_1629_d))))._field_Args.len() > 0LL)) {
		_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*(_1629_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1bc75d11d_checkTypedef(_1bc75c958_directiveChecker* _self_, jule::Ptr<_1bc594a59_Directive>* _3232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1c18783ee:;
			{
				if ((*((*(_self_))._field_o.cast_ptr<_1bc5bb333_Struct>(&__jule_any_type65)))._field_Binded) {
					goto _match_end_1c1878641;
				};
				goto _case_begin_1c1878696;
			}
		}
		else {
			_case_begin_1c1878696:;
			{
				_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*(_3232_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_3232_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1c1878641:;
	};
	if (((*((*(_3232_d))))._field_Args.len() > 0LL)) {
		_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*(_3232_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1bc75d3c6_checkNamespace(_1bc75c958_directiveChecker* _self_, jule::Ptr<_1bc594a59_Directive>* _4838_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1c187b259:;
			{
				if ((!((*((*(_self_))._field_o.cast_ptr<_1bc5bb333_Struct>(&__jule_any_type65)))._field_Binded))) {
					_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1c187b567:;
			{
				if ((!((*((*(_self_))._field_o.cast_ptr<_1ece1b092_Fn>(&__jule_any_type64)))._field_Binded))) {
					_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c187b5cd:;
			{
				if ((!((*((*(_self_))._field_o.cast_ptr<_1bc7a750d_Var>(&__jule_any_type8)))._field_Binded))) {
					_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else {
			_case_begin_1c187b501:;
			{
				_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1c187b49b:;
	};
	if (((*((*(_4838_d))))._field_Args.len() == 0LL)) {
		_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_4838_d))))._field_Args.len() > 1LL)) {
		_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Args[1LL], jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1bc583a9d_Token> _739_arg = (*((*(_4838_d))))._field_Args[0LL];;
	if (((*(_739_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1bc786db1_pushErr((*(_self_))._field_s.ptr(), _739_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_739_arg))._field_Kind[0LL] != '\"')) {
		_1bc786db1_pushErr((*(_self_))._field_s.ptr(), _739_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_4838_d))))._field_Args[0LL]))._field_Kind=(*(_739_arg))._field_Kind.slice(1LL, ((*(_739_arg))._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1c1886a06:;
			{
				if ((_1bc83921b_findDirective(&((*((*(_self_))._field_d))), jule::Str::lit("typedef", 7)) == nullptr)) {
					jule::Ptr<_1bc594a59_Directive> _9021_typedef = jule::new_ptr<_1bc594a59_Directive>(_1bc594a59_Directive{._field_Tag=(*((*(_4838_d))))._field_Tag, });;
					(*((*(_9021_typedef))._field_Tag))._field_Kind=jule::Str::lit("typedef", 7);
					{ jule::Slice<jule::Ptr<_1bc594a59_Directive>> &__jule_push_dest = (*((*(_self_))._field_d)); __jule_push_dest.push(_9021_typedef); };
				};
			}
		}
		_match_end_1c18869a1:;
	};
}



inline void _1bc75d67e_checkDeprecated(_1bc75c958_directiveChecker* _self_, jule::Ptr<_1bc594a59_Directive>* _9939_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1c1887d48:;
			{
				if ((*((*(_self_))._field_o.cast_ptr<_1bc5bb333_Struct>(&__jule_any_type65)))._field_Binded) {
					_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1c1889058:;
			{
				jule::Ptr<_1ece1b092_Fn> _10617_f = (*(_self_))._field_o.cast_ptr<_1ece1b092_Fn>(&__jule_any_type64);;
				if ((((*(_10617_f))._field_Binded || _1ece1ba32_IsEntryPoint(_10617_f.ptr())) || _1ece1bcb8_IsInit(_10617_f.ptr()))) {
					_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c18890be:;
			{
				if ((*((*(_self_))._field_o.cast_ptr<_1bc7a750d_Var>(&__jule_any_type8)))._field_Binded) {
					_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else {
			_case_begin_1c1888a4c:;
			{
				_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1c18889e7:;
	};
	if (((*((*(_9939_d))))._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*((*(_9939_d))))._field_Args.len() > 1LL)) {
		_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Args[1LL], jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1bc583a9d_Token> _1259_arg = (*((*(_9939_d))))._field_Args[0LL];;
	if (((*(_1259_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1bc786db1_pushErr((*(_self_))._field_s.ptr(), _1259_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_1259_arg))._field_Kind[0LL] != '\"')) {
		_1bc786db1_pushErr((*(_self_))._field_s.ptr(), _1259_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_9939_d))))._field_Args[0LL]))._field_Kind=(*(_1259_arg))._field_Kind.slice(1LL, ((*(_1259_arg))._field_Kind.len() - 1LL));
}



inline void _1bc75d937_checkTest(_1bc75c958_directiveChecker* _self_, jule::Ptr<_1bc594a59_Directive>* _13929_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1c189014c:;
			{
				jule::Ptr<_1ece1b092_Fn> _14213_f = (*(_self_))._field_o.cast_ptr<_1ece1b092_Fn>(&__jule_any_type64);;
				if ((((!((*(_14213_f))._field_Binded)) && (!(_1ece1bcb8_IsInit(_14213_f.ptr())))) && (!(_1ece1ba32_IsEntryPoint(_14213_f.ptr()))))) {
					goto _match_end_1c1894a25;
				};
				if (_1ece1b79b_IsMethod(_14213_f.ptr())) {
					_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_14213_f))._field_Token, jule::Str::lit("you cannot declare test methods", 31), jule::Slice<jule::Any>());
					goto _match_end_1c1894a25;
				};
				goto _case_begin_1c1894a7a;
			}
		}
		else {
			_case_begin_1c1894a7a:;
			{
				_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*(_13929_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_13929_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1c1894a25:;
	};
	if (((*((*(_13929_d))))._field_Args.len() > 0LL)) {
		_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*(_13929_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1bc75dbe0_checkDirective(_1bc75c958_directiveChecker* _self_, jule::Ptr<_1bc594a59_Directive>* _16038_d) {
	{
		auto &_match_expr{ (*((*((*(_16038_d))))._field_Tag))._field_Kind };
		
		if (_match_expr == jule::Str::lit("cdef", 4)) {
			_case_begin_1c1899651:;
			{
				_1bc75cd65_checkCdef(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("typedef", 7)) {
			_case_begin_1c18996b7:;
			{
				_1bc75d11d_checkTypedef(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("namespace", 9)) {
			_case_begin_1c189972d:;
			{
				_1bc75d3c6_checkNamespace(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("deprecated", 10)) {
			_case_begin_1c1899794:;
			{
				_1bc75d67e_checkDeprecated(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("test", 4)) {
			_case_begin_1c189a795:;
			{
				_1bc75d937_checkTest(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("build", 5) || _match_expr == jule::Str::lit("pass", 4)) {
			_case_begin_1c189a80b:;
			{
				_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*(_16038_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_16038_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		else {
			_case_begin_1c18995da:;
			{
				_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*(_16038_d))))._field_Tag, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_16038_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1c1899541:;
	};
}



inline void _1bc75dddd_check(_1bc75c958_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c189d446:;
		if (it != expr_end) {
			jule::Ptr<_1bc594a59_Directive> _18121_d = *it;
			{
				_1bc75dbe0_checkDirective(_self_, &(_18121_d));
			}
			_iter_next_1c189d446:;
			++it;
			goto _iter_begin_1c189d446;
		}
		_iter_end_1c189d446:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1bc75c958_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1bc763e04_ImportInfo> _1bc7643dd_SelectPackage(_1bc763e04_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_1bc763e04_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1bc7a750d_Var> _1bc7647d9_FindVar(_1bc763e04_ImportInfo* _self_, jule::Str _18926_ident, jule::Bool ) {
	if ((!(_1bc766445_isLookupable(_self_, &(_18926_ident))))) {
		return nullptr;;
	};
	return _1bc7613da_findVarInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_18926_ident), false);;
}



inline jule::Ptr<_1bc8403cb_TypeAlias> _1bc764bd5_FindTypeAlias(_1bc763e04_ImportInfo* _self_, jule::Str _20132_ident, jule::Bool ) {
	if ((!(_1bc766445_isLookupable(_self_, &(_20132_ident))))) {
		return nullptr;;
	};
	return _1bc76185d_findTypeAliasInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_20132_ident), false);;
}



inline jule::Ptr<_1bc5bb333_Struct> _1bc7650d1_FindStruct(_1bc763e04_ImportInfo* _self_, jule::Str _21329_ident, jule::Bool ) {
	if ((!(_1bc766445_isLookupable(_self_, &(_21329_ident))))) {
		return nullptr;;
	};
	return _1bc761c8c_findStructInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_21329_ident), false);;
}



inline jule::Ptr<_1ece1b092_Fn> _1bc7654cc_FindFn(_1bc763e04_ImportInfo* _self_, jule::Str _22525_ident, jule::Bool ) {
	if ((!(_1bc766445_isLookupable(_self_, &(_22525_ident))))) {
		return nullptr;;
	};
	return _1bc762243_findFnInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_22525_ident), false);;
}



inline jule::Ptr<_1bc713a41_Trait> _1bc76581d_FindTrait(_1bc763e04_ImportInfo* _self_, jule::Str _23628_ident) {
	if ((!(_1bc766445_isLookupable(_self_, &(_23628_ident))))) {
		return nullptr;;
	};
	return _1bc762584_findTraitInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_23628_ident));;
}



inline jule::Ptr<_1bc71624c_Enum> _1bc765b5e_FindEnum(_1bc763e04_ImportInfo* _self_, jule::Str _24727_ident) {
	if ((!(_1bc766445_isLookupable(_self_, &(_24727_ident))))) {
		return nullptr;;
	};
	return _1bc762908_findEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_24727_ident));;
}



inline jule::Ptr<_1bc717957_TypeEnum> _1bc765ea0_FindTypeEnum(_1bc763e04_ImportInfo* _self_, jule::Str _25831_ident) {
	if ((!(_1bc766445_isLookupable(_self_, &(_25831_ident))))) {
		return nullptr;;
	};
	return _1bc762c7c_findTypeEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_25831_ident));;
}



inline jule::Bool _1bc766445_isLookupable(_1bc763e04_ImportInfo* _self_, jule::Str* _26728_ident) {
	if ((*(_self_))._field_Binded) {
		return false;;
	};
	if ((!((*(_self_))._field_ImportAll))) {
		if ((((*(_self_))._field_Alias.len() != 0LL) || _1bc766786_existIdent(_self_, jule::Str::lit("self", 4)))) {
			return true;;
		};
		if (((*(_self_))._field_Selected.len() > 0LL)) {
			if ((!(_1bc766786_existIdent(_self_, (*(_26728_ident)))))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _1bc766786_existIdent(_1bc763e04_ImportInfo* _self_, jule::Str _28725_ident) {
	{
		auto expr = &((*(_self_))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c18b388a:;
		if (it != expr_end) {
			jule::Ptr<_1bc583a9d_Token> *_28816_sident = it;
			{
				if (((*((*(_28816_sident))))._field_Kind == _28725_ident)) {
					return true;;
				};
			}
			_iter_next_1c18b388a:;
			++it;
			goto _iter_begin_1c18b388a;
		}
		_iter_end_1c18b388a:;
	};
	return false;;
}



inline jule::Bool _1bc766a1c_isAccessibleViaSelection(_1bc763e04_ImportInfo* _self_) {
	return (((*(_self_))._field_ImportAll || ((*(_self_))._field_Selected.len() == 0LL)) || _1bc766786_existIdent(_self_, jule::Str::lit("self", 4)));;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc763e04_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1bc763e04_ImportInfo> _1bc7672c0_SelectPackage(_1bc766d2a_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_1bc763e04_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1bc7a750d_Var> _1bc7676bb_FindVar(_1bc766d2a_Package* _self_, jule::Str _31426_ident, jule::Bool _31438_binded) {
	return _1bc7613da_findVarInPackage(&((*(_self_))._field_Files), &(_31426_ident), _31438_binded);;
}



inline jule::Ptr<_1bc8403cb_TypeAlias> _1bc767ab7_FindTypeAlias(_1bc766d2a_Package* _self_, jule::Str _32032_ident, jule::Bool _32044_binded) {
	return _1bc76185d_findTypeAliasInPackage(&((*(_self_))._field_Files), &(_32032_ident), _32044_binded);;
}



inline jule::Ptr<_1bc5bb333_Struct> _1bc767eb3_FindStruct(_1bc766d2a_Package* _self_, jule::Str _32629_ident, jule::Bool _32641_binded) {
	return _1bc761c8c_findStructInPackage(&((*(_self_))._field_Files), &(_32629_ident), _32641_binded);;
}



inline jule::Ptr<_1ece1b092_Fn> _1bc7683ae_FindFn(_1bc766d2a_Package* _self_, jule::Str _33225_ident, jule::Bool _33237_binded) {
	return _1bc762243_findFnInPackage(&((*(_self_))._field_Files), &(_33225_ident), _33237_binded);;
}



inline jule::Ptr<_1bc713a41_Trait> _1bc768700_FindTrait(_1bc766d2a_Package* _self_, jule::Str _33828_ident) {
	return _1bc762584_findTraitInPackage(&((*(_self_))._field_Files), &(_33828_ident));;
}



inline jule::Ptr<_1bc71624c_Enum> _1bc768a41_FindEnum(_1bc766d2a_Package* _self_, jule::Str _34427_ident) {
	return _1bc762908_findEnumInPackage(&((*(_self_))._field_Files), &(_34427_ident));;
}



inline jule::Ptr<_1bc717957_TypeEnum> _1bc768d82_FindTypeEnum(_1bc766d2a_Package* _self_, jule::Str _35031_ident) {
	return _1bc762c7c_findTypeEnumInPackage(&((*(_self_))._field_Files), &(_35031_ident));;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc766d2a_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1bc72a4e7_comptimeTypeInfo> _1bc783ab1_pushComptimeTypeInfo(_1bc78364e_commonSemaMeta* _self_, jule::Ptr<_1bc8411bd_TypeKind>* _21744_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c18e5bdb:;
		if (it != expr_end) {
			jule::Ptr<_1bc72a4e7_comptimeTypeInfo> _21821_t2 = *it;
			{
				if ((((*((*(_21821_t2))._field_base))._field_BindIdent == (*((*(_21744_t))))._field_BindIdent) && _1bc8418c7_Equal((*(_21821_t2))._field_base, (*(_21744_t))))) {
					return _21821_t2;;
				};
			}
			_iter_next_1c18e5bdb:;
			++it;
			goto _iter_begin_1c18e5bdb;
		}
		_iter_end_1c18e5bdb:;
	};
	jule::Ptr<_1bc72a4e7_comptimeTypeInfo> _22313_t1 = jule::new_ptr<_1bc72a4e7_comptimeTypeInfo>(_1bc72a4e7_comptimeTypeInfo{._field_base=(*(_21744_t))});;
	{ jule::Slice<jule::Ptr<_1bc72a4e7_comptimeTypeInfo>> &__jule_push_dest = (*(_self_))._field_comptimeTypeInfos; __jule_push_dest.push(_22313_t1); };
	return _22313_t1;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc78364e_commonSemaMeta _Src) {
	_Stream << "commonSemaMeta{";
	_Stream << "comptimeTypeInfos:" << _Src._field_comptimeTypeInfos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1bc763e04_ImportInfo> _1bc78471b_SelectPackage(_1bc784276_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_1bc763e04_ImportInfo>)> _24632_selector) {
	return _1bc80a9e5_SelectPackage((*(_self_))._field_file.ptr(), _24632_selector);;
}



inline jule::Ptr<_1bc7a750d_Var> _1bc784b17_FindVar(_1bc784276_Sema* _self_, jule::Str _25626_ident, jule::Bool _25638_binded) {
	jule::Ptr<_1bc7a750d_Var> _25813_v = _1bc7613da_findVarInPackage(&((*(_self_))._field_files), &(_25626_ident), _25638_binded);;
	if ((_25813_v != nullptr)) {
		return _25813_v;;
	};
	if ((!(_1bc781372_IsPub(_25626_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c18e9c34:;
		if (it != expr_end) {
			jule::Ptr<_1bc763e04_ImportInfo> _26921_imp = *it;
			{
				if ((!(_1bc7822b8_impIsLookupable(&(_26921_imp), &(_25626_ident))))) {
					goto _iter_next_1c18e9c34;
				};
				_25813_v=_1bc7647d9_FindVar(_26921_imp.ptr(), _25626_ident, _25638_binded);
				if (((_25813_v != nullptr) && _1bc787620_isAccessibleDefine(_self_, (*(_25813_v))._field_Public, (*(_25813_v))._field_Token))) {
					return _25813_v;;
				};
			}
			_iter_next_1c18e9c34:;
			++it;
			goto _iter_begin_1c18e9c34;
		}
		_iter_end_1c18e9c34:;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc8403cb_TypeAlias> _1bc785013_FindTypeAlias(_1bc784276_Sema* _self_, jule::Str _28832_ident, jule::Bool _28844_binded) {
	jule::Ptr<_1bc8403cb_TypeAlias> _29013_ta = _1bc76185d_findTypeAliasInPackage(&((*(_self_))._field_files), &(_28832_ident), _28844_binded);;
	if ((_29013_ta != nullptr)) {
		return _29013_ta;;
	};
	if ((!(_1bc781372_IsPub(_28832_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c18ecb8d:;
		if (it != expr_end) {
			jule::Ptr<_1bc763e04_ImportInfo> _30121_imp = *it;
			{
				if ((!(_1bc7822b8_impIsLookupable(&(_30121_imp), &(_28832_ident))))) {
					goto _iter_next_1c18ecb8d;
				};
				_29013_ta=_1bc764bd5_FindTypeAlias(_30121_imp.ptr(), _28832_ident, _28844_binded);
				if (((_29013_ta != nullptr) && _1bc787620_isAccessibleDefine(_self_, (*(_29013_ta))._field_Public, (*(_29013_ta))._field_Token))) {
					return _29013_ta;;
				};
			}
			_iter_next_1c18ecb8d:;
			++it;
			goto _iter_begin_1c18ecb8d;
		}
		_iter_end_1c18ecb8d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc5bb333_Struct> _1bc78540e_FindStruct(_1bc784276_Sema* _self_, jule::Str _32029_ident, jule::Bool _32041_binded) {
	jule::Ptr<_1bc5bb333_Struct> _32213_s = _1bc761c8c_findStructInPackage(&((*(_self_))._field_files), &(_32029_ident), _32041_binded);;
	if ((_32213_s != nullptr)) {
		return _32213_s;;
	};
	if ((!(_1bc781372_IsPub(_32029_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1900ae7:;
		if (it != expr_end) {
			jule::Ptr<_1bc763e04_ImportInfo> _33321_imp = *it;
			{
				if ((!(_1bc7822b8_impIsLookupable(&(_33321_imp), &(_32029_ident))))) {
					goto _iter_next_1c1900ae7;
				};
				_32213_s=_1bc7650d1_FindStruct(_33321_imp.ptr(), _32029_ident, _32041_binded);
				if (((_32213_s != nullptr) && _1bc787620_isAccessibleDefine(_self_, (*(_32213_s))._field_Public, (*(_32213_s))._field_Token))) {
					return _32213_s;;
				};
			}
			_iter_next_1c1900ae7:;
			++it;
			goto _iter_begin_1c1900ae7;
		}
		_iter_end_1c1900ae7:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ece1b092_Fn> _1bc78580a_FindFn(_1bc784276_Sema* _self_, jule::Str _35125_ident, jule::Bool _35137_binded) {
	jule::Ptr<_1ece1b092_Fn> _35313_f = _1bc762243_findFnInPackage(&((*(_self_))._field_files), &(_35125_ident), _35137_binded);;
	if ((_35313_f != nullptr)) {
		return _35313_f;;
	};
	if ((!(_1bc781372_IsPub(_35125_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1903a51:;
		if (it != expr_end) {
			jule::Ptr<_1bc763e04_ImportInfo> _36421_imp = *it;
			{
				if ((!(_1bc7822b8_impIsLookupable(&(_36421_imp), &(_35125_ident))))) {
					goto _iter_next_1c1903a51;
				};
				_35313_f=_1bc7654cc_FindFn(_36421_imp.ptr(), _35125_ident, _35137_binded);
				if (((_35313_f != nullptr) && _1bc787620_isAccessibleDefine(_self_, (*(_35313_f))._field_Public, (*(_35313_f))._field_Token))) {
					return _35313_f;;
				};
			}
			_iter_next_1c1903a51:;
			++it;
			goto _iter_begin_1c1903a51;
		}
		_iter_end_1c1903a51:;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc713a41_Trait> _1bc785b4b_FindTrait(_1bc784276_Sema* _self_, jule::Str _38328_ident) {
	jule::Ptr<_1bc713a41_Trait> _38513_t = _1bc762584_findTraitInPackage(&((*(_self_))._field_files), &(_38328_ident));;
	if ((_38513_t != nullptr)) {
		return _38513_t;;
	};
	if ((!(_1bc781372_IsPub(_38328_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1906757:;
		if (it != expr_end) {
			jule::Ptr<_1bc763e04_ImportInfo> _39621_imp = *it;
			{
				if ((!(_1bc7822b8_impIsLookupable(&(_39621_imp), &(_38328_ident))))) {
					goto _iter_next_1c1906757;
				};
				_38513_t=_1bc76581d_FindTrait(_39621_imp.ptr(), _38328_ident);
				if (((_38513_t != nullptr) && _1bc787620_isAccessibleDefine(_self_, (*(_38513_t))._field_Public, (*(_38513_t))._field_Token))) {
					return _38513_t;;
				};
			}
			_iter_next_1c1906757:;
			++it;
			goto _iter_begin_1c1906757;
		}
		_iter_end_1c1906757:;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc71624c_Enum> _1bc785e8c_FindEnum(_1bc784276_Sema* _self_, jule::Str _41527_ident) {
	jule::Ptr<_1bc71624c_Enum> _41713_e = _1bc762908_findEnumInPackage(&((*(_self_))._field_files), &(_41527_ident));;
	if ((_41713_e != nullptr)) {
		return _41713_e;;
	};
	if ((!(_1bc781372_IsPub(_41527_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c190945d:;
		if (it != expr_end) {
			jule::Ptr<_1bc763e04_ImportInfo> _42821_imp = *it;
			{
				if ((!(_1bc7822b8_impIsLookupable(&(_42821_imp), &(_41527_ident))))) {
					goto _iter_next_1c190945d;
				};
				_41713_e=_1bc765b5e_FindEnum(_42821_imp.ptr(), _41527_ident);
				if (((_41713_e != nullptr) && _1bc787620_isAccessibleDefine(_self_, (*(_41713_e))._field_Public, (*(_41713_e))._field_Token))) {
					return _41713_e;;
				};
			}
			_iter_next_1c190945d:;
			++it;
			goto _iter_begin_1c190945d;
		}
		_iter_end_1c190945d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc717957_TypeEnum> _1bc7862cd_FindTypeEnum(_1bc784276_Sema* _self_, jule::Str _44731_ident) {
	jule::Ptr<_1bc717957_TypeEnum> _44913_e = _1bc762c7c_findTypeEnumInPackage(&((*(_self_))._field_files), &(_44731_ident));;
	if ((_44913_e != nullptr)) {
		return _44913_e;;
	};
	if ((!(_1bc781372_IsPub(_44731_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c190c164:;
		if (it != expr_end) {
			jule::Ptr<_1bc763e04_ImportInfo> _46021_imp = *it;
			{
				if ((!(_1bc7822b8_impIsLookupable(&(_46021_imp), &(_44731_ident))))) {
					goto _iter_next_1c190c164;
				};
				_44913_e=_1bc765ea0_FindTypeEnum(_46021_imp.ptr(), _44731_ident);
				if (((_44913_e != nullptr) && _1bc787620_isAccessibleDefine(_self_, (*(_44913_e))._field_Public, (*(_44913_e))._field_Token))) {
					return _44913_e;;
				};
			}
			_iter_next_1c190c164:;
			++it;
			goto _iter_begin_1c190c164;
		}
		_iter_end_1c190c164:;
	};
	return nullptr;;
}



inline jule::Bool _1bc7866da_isFlag(_1bc784276_Sema* _self_, jule::I64 _47621_flags) {
	return (((*(_self_))._field_flags & _47621_flags) == _47621_flags);;
}



inline void _1bc786993_setCurrentFile(_1bc784276_Sema* _self_, jule::Ptr<_1bc80a50b_SymbolTable> _47837_f) {
	(*(_self_))._field_file=_47837_f;
}



inline void _1bc786db1_pushErr(_1bc784276_Sema* _self_, jule::Ptr<_1bc583a9d_Token> _48026_token, jule::Str _48041_fmt, jule::Slice<jule::Any> _48054_args) {
	{ jule::Slice<_1ed6c7892_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1bc781e44_compilerErr(&(_48026_token), true, _48041_fmt, _48054_args)); };
}



inline void _1bc787224_pushSuggestion(_1bc784276_Sema* _self_, jule::Str _48533_fmt, jule::Slice<jule::Any> _48546_args) {
	{
		_1bc783473_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _48533_fmt, _48546_args);
	};
}



inline jule::Bool _1bc787620_isAccessibleDefine(_1bc784276_Sema* _self_, jule::Bool _49033_public, jule::Ptr<_1bc583a9d_Token> _49047_token) {
	return ((_49033_public || ((*(_49047_token))._field_File == nullptr)) || (_1bc5899d8_Dir((*((*(_self_))._field_file))._field_File.ptr()) == _1bc5899d8_Dir((*(_49047_token))._field_File.ptr())));;
}



inline jule::Bool _1bc787ac6_isDuplicatedIdent(_1bc784276_Sema* _self_, jule::Uintptr _49732_itself, jule::Str* _49750_ident, jule::Bool _49762_binded) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c19139d9:;
		if (it != expr_end) {
			jule::Ptr<_1bc80a50b_SymbolTable> *_49816_f = it;
			{
				if (_1bc80da2b_isDuplicatedIdent((*(_49816_f)).ptr(), _49732_itself, _49750_ident, _49762_binded)) {
					return true;;
				};
				{
					auto expr = &((*((*(_49816_f))))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c19149da:;
					if (it != expr_end) {
						jule::Ptr<_1bc763e04_ImportInfo> *_50320_imp = it;
						{
							{
								auto expr = &((*((*(_50320_imp))))._field_Selected);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1c19153d1:;
								if (it != expr_end) {
									jule::Ptr<_1bc583a9d_Token> *_50424_selected = it;
									{
										if (((*((*(_50424_selected))))._field_Kind == (*(_49750_ident)))) {
											return true;;
										};
									}
									_iter_next_1c19153d1:;
									++it;
									goto _iter_begin_1c19153d1;
								}
								_iter_end_1c19153d1:;
							};
						}
						_iter_next_1c19149da:;
						++it;
						goto _iter_begin_1c19149da;
					}
					_iter_end_1c19149da:;
				};
			}
			_iter_next_1c19139d9:;
			++it;
			goto _iter_begin_1c19139d9;
		}
		_iter_end_1c19139d9:;
	};
	return false;;
}



inline void _1bc787e39_checkDirectives(jule::Ptr<_1bc784276_Sema> _self_, jule::Slice<jule::Ptr<_1bc594a59_Directive>>* _51440_d, jule::Any _51466_o) {
	_1bc75c958_directiveChecker _51513_dc = _1bc75c958_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1bc594a59_Directive>>>)(_51440_d)), ._field_o=_51466_o};;
	_1bc75dddd_check(&_51513_dc);
}



inline jule::Bool _1bc7883e0_checkGenericQuantity(_1bc784276_Sema* _self_, jule::I64 _52339_required, jule::I64 _52354_given, jule::Ptr<_1bc583a9d_Token> _52366_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_52339_required == 0LL) && (_52354_given > 0LL))) {
			_case_begin_1c1917955:;
			{
				_1bc786db1_pushErr(_self_, _52366_token, jule::Str::lit("type have not generics but instantiate like generics", 52), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_52339_required > 0LL) && (_52354_given == 0LL))) {
			_case_begin_1c19179cc:;
			{
				_1bc786db1_pushErr(_self_, _52366_token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52339_required < _52354_given)) {
			_case_begin_1c1917a54:;
			{
				_1bc786db1_pushErr(_self_, _52366_token, jule::Str::lit("overflow generics", 17), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52339_required > _52354_given)) {
			_case_begin_1c1917c74:;
			{
				_1bc786db1_pushErr(_self_, _52366_token, jule::Str::lit("missing generics", 16), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1c1917867:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1c191779b:;
	};
}



inline jule::Bool _1bc7887db_isDuplicatedImportSelection(_1bc784276_Sema* _self_, jule::Uintptr _54242_itself, jule::Str* _54260_ident) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c191a7d2:;
		if (it != expr_end) {
			jule::Ptr<_1bc763e04_ImportInfo> *_54316_imp = it;
			{
				if ((static_cast<jule::Uintptr>((*(_54316_imp))) == _54242_itself)) {
					goto _iter_end_1c191a7d2;
				};
				if (_1bc766786_existIdent((*(_54316_imp)).ptr(), (*(_54260_ident)))) {
					return true;;
				};
			}
			_iter_next_1c191a7d2:;
			++it;
			goto _iter_begin_1c191a7d2;
		}
		_iter_end_1c191a7d2:;
	};
	return false;;
}



inline jule::Any _1bc788bd7_getImportDef(_1bc784276_Sema* _self_, jule::Str* _55528_ident, jule::Ptr<_1bc763e04_ImportInfo>* _55545_imp) {
	if ((_1bc2c8837_findPackageBuiltinDef(&((*((*(_55545_imp))))._field_LinkPath), _55528_ident) != nullptr)) {
		return jule::Any(true, &__jule_any_type3);;
	};
	{
		auto expr = &((*((*((*(_55545_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c191c8c2:;
		if (it != expr_end) {
			jule::Ptr<_1bc80a50b_SymbolTable> _55921_f = *it;
			{
				;
				jule::Any _56217_def = _1bc80d575_defByIdent(_55921_f.ptr(), _55528_ident, false);;
				if ((_56217_def != nullptr)) {
					return _56217_def;;
				};
			}
			_iter_next_1c191c8c2:;
			++it;
			goto _iter_begin_1c191c8c2;
		}
		_iter_end_1c191c8c2:;
	};
	return nullptr;;
}



inline jule::Bool _1c1923cc4_checkImportSelection(_1bc784276_Sema* _self_, jule::Ptr<_1bc583a9d_Token>* _57043_ident, jule::Ptr<_1bc7a750d_Var>* _57059_s) {
	if ((!(_1bc787620_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1bc786db1_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1bc787224_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1bc7632bb_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1bc786db1_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1c1927e1b_checkImportSelection(_1bc784276_Sema* _self_, jule::Ptr<_1bc583a9d_Token>* _57043_ident, jule::Ptr<_1bc8403cb_TypeAlias>* _57059_s) {
	if ((!(_1bc787620_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1bc786db1_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1bc787224_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1bc7632bb_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1bc786db1_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1c1931d7b_checkImportSelection(_1bc784276_Sema* _self_, jule::Ptr<_1bc583a9d_Token>* _57043_ident, jule::Ptr<_1bc5bb333_Struct>* _57059_s) {
	if ((!(_1bc787620_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1bc786db1_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1bc787224_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1bc7632bb_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1bc786db1_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1c193626a_checkImportSelection(_1bc784276_Sema* _self_, jule::Ptr<_1bc583a9d_Token>* _57043_ident, jule::Ptr<_1bc713a41_Trait>* _57059_s) {
	if ((!(_1bc787620_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1bc786db1_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1bc787224_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1bc7632bb_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1bc786db1_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1c193a390_checkImportSelection(_1bc784276_Sema* _self_, jule::Ptr<_1bc583a9d_Token>* _57043_ident, jule::Ptr<_1bc71624c_Enum>* _57059_s) {
	if ((!(_1bc787620_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1bc786db1_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1bc787224_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1bc7632bb_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1bc786db1_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1c193e4b5_checkImportSelection(_1bc784276_Sema* _self_, jule::Ptr<_1bc583a9d_Token>* _57043_ident, jule::Ptr<_1bc717957_TypeEnum>* _57059_s) {
	if ((!(_1bc787620_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1bc786db1_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1bc787224_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1bc7632bb_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1bc786db1_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1c19435b8_checkImportSelection(_1bc784276_Sema* _self_, jule::Ptr<_1bc583a9d_Token>* _57043_ident, jule::Ptr<_1ece1b092_Fn>* _57059_s) {
	if ((!(_1bc787620_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1bc786db1_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1bc787224_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1bc7632bb_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1bc786db1_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}



inline jule::Bool _1bc789424_checkImportSelectedSelections(_1bc784276_Sema* _self_, jule::Ptr<_1bc763e04_ImportInfo>* _58453_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_58453_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c191e572:;
		if (it != expr_end) {
			jule::Ptr<_1bc583a9d_Token> _58616_ident = *it;
			{
				if ((*(_58616_ident))._field_Kind.equal("self", 4)) {
					goto _iter_next_1c191e572;
				};
				if (_1bc7887db_isDuplicatedImportSelection(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_58453_imp)))), &((*(_58616_ident))._field_Kind))) {
					_1bc786db1_pushErr(_self_, _58616_ident, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_58616_ident))._field_Kind, &__jule_any_type4)}));
					_1bc787224_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1c191e572;
				};
				jule::Any _59817_def = _1bc788bd7_getImportDef(_self_, &((*(_58616_ident))._field_Kind), _58453_imp);;
				{
					auto &_match_expr{ _59817_def };
					
					if (_match_expr.type == &__jule_any_type3) {
						_case_begin_1c192061c:;
						{
							goto _iter_next_1c191e572;
						}
					}
					else if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1c1921e9d:;
						{
							jule::Ptr<_1bc7a750d_Var> _60421_v = _59817_def.cast_ptr<_1bc7a750d_Var>(&__jule_any_type8);;
							__jule_func_result=(_1c1923cc4_checkImportSelection(_self_, &(_58616_ident), &(_60421_v)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type66) {
						_case_begin_1c1922014:;
						{
							jule::Ptr<_1bc8403cb_TypeAlias> _60721_ta = _59817_def.cast_ptr<_1bc8403cb_TypeAlias>(&__jule_any_type66);;
							__jule_func_result=(_1c1927e1b_checkImportSelection(_self_, &(_58616_ident), &(_60721_ta)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type65) {
						_case_begin_1c1922b4c:;
						{
							jule::Ptr<_1bc5bb333_Struct> _61021_s = _59817_def.cast_ptr<_1bc5bb333_Struct>(&__jule_any_type65);;
							__jule_func_result=(_1c1931d7b_checkImportSelection(_self_, &(_58616_ident), &(_61021_s)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type10) {
						_case_begin_1c1922bb3:;
						{
							jule::Ptr<_1bc713a41_Trait> _61321_t = _59817_def.cast_ptr<_1bc713a41_Trait>(&__jule_any_type10);;
							__jule_func_result=(_1c193626a_checkImportSelection(_self_, &(_58616_ident), &(_61321_t)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type67) {
						_case_begin_1c1922c29:;
						{
							jule::Ptr<_1bc71624c_Enum> _61621_e = _59817_def.cast_ptr<_1bc71624c_Enum>(&__jule_any_type67);;
							__jule_func_result=(_1c193a390_checkImportSelection(_self_, &(_58616_ident), &(_61621_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type68) {
						_case_begin_1c1922c90:;
						{
							jule::Ptr<_1bc717957_TypeEnum> _61921_e = _59817_def.cast_ptr<_1bc717957_TypeEnum>(&__jule_any_type68);;
							__jule_func_result=(_1c193e4b5_checkImportSelection(_self_, &(_58616_ident), &(_61921_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type64) {
						_case_begin_1c1922d06:;
						{
							jule::Ptr<_1ece1b092_Fn> _62221_f = _59817_def.cast_ptr<_1ece1b092_Fn>(&__jule_any_type64);;
							__jule_func_result=(_1c19435b8_checkImportSelection(_self_, &(_58616_ident), &(_62221_f)) && __jule_func_result);
						}
					}
					else {
						_case_begin_1c1921d8d:;
						{
							_1bc786db1_pushErr(_self_, _58616_ident, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_58616_ident))._field_Kind, &__jule_any_type4)}));
							__jule_func_result=false;
							goto _iter_next_1c191e572;
						}
					}
					_match_end_1c1921970:;
				};
			}
			_iter_next_1c191e572:;
			++it;
			goto _iter_begin_1c191e572;
		}
		_iter_end_1c191e572:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c1947c93_checkImportsAllSelectionsFromCollection(_1bc784276_Sema* _self_, jule::Slice<jule::Ptr<_1bc7a750d_Var>>* _63362_s, jule::Ptr<_1bc583a9d_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c19498dd:;
		if (it != expr_end) {
			jule::Ptr<_1bc7a750d_Var> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1c1923cc4_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1c19498dd:;
			++it;
			goto _iter_begin_1c19498dd;
		}
		_iter_end_1c19498dd:;
	};
	return _63413_ok;;
}

inline jule::Bool _1c1948e2b_checkImportsAllSelectionsFromCollection(_1bc784276_Sema* _self_, jule::Slice<jule::Ptr<_1bc8403cb_TypeAlias>>* _63362_s, jule::Ptr<_1bc583a9d_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c194c14e:;
		if (it != expr_end) {
			jule::Ptr<_1bc8403cb_TypeAlias> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1c1927e1b_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1c194c14e:;
			++it;
			goto _iter_begin_1c194c14e;
		}
		_iter_end_1c194c14e:;
	};
	return _63413_ok;;
}

inline jule::Bool _1c194b6d1_checkImportsAllSelectionsFromCollection(_1bc784276_Sema* _self_, jule::Slice<jule::Ptr<_1bc5bb333_Struct>>* _63362_s, jule::Ptr<_1bc583a9d_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c194e89e:;
		if (it != expr_end) {
			jule::Ptr<_1bc5bb333_Struct> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1c1931d7b_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1c194e89e:;
			++it;
			goto _iter_begin_1c194e89e;
		}
		_iter_end_1c194e89e:;
	};
	return _63413_ok;;
}

inline jule::Bool _1c194de31_checkImportsAllSelectionsFromCollection(_1bc784276_Sema* _self_, jule::Slice<jule::Ptr<_1ece1b092_Fn>>* _63362_s, jule::Ptr<_1bc583a9d_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1952121:;
		if (it != expr_end) {
			jule::Ptr<_1ece1b092_Fn> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1c19435b8_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1c1952121:;
			++it;
			goto _iter_begin_1c1952121;
		}
		_iter_end_1c1952121:;
	};
	return _63413_ok;;
}

inline jule::Bool _1c195162b_checkImportsAllSelectionsFromCollection(_1bc784276_Sema* _self_, jule::Slice<jule::Ptr<_1bc713a41_Trait>>* _63362_s, jule::Ptr<_1bc583a9d_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c195482c:;
		if (it != expr_end) {
			jule::Ptr<_1bc713a41_Trait> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1c193626a_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1c195482c:;
			++it;
			goto _iter_begin_1c195482c;
		}
		_iter_end_1c195482c:;
	};
	return _63413_ok;;
}

inline jule::Bool _1c1953e03_checkImportsAllSelectionsFromCollection(_1bc784276_Sema* _self_, jule::Slice<jule::Ptr<_1bc71624c_Enum>>* _63362_s, jule::Ptr<_1bc583a9d_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1957038:;
		if (it != expr_end) {
			jule::Ptr<_1bc71624c_Enum> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1c193a390_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1c1957038:;
			++it;
			goto _iter_begin_1c1957038;
		}
		_iter_end_1c1957038:;
	};
	return _63413_ok;;
}

inline jule::Bool _1c195660e_checkImportsAllSelectionsFromCollection(_1bc784276_Sema* _self_, jule::Slice<jule::Ptr<_1bc717957_TypeEnum>>* _63362_s, jule::Ptr<_1bc583a9d_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c19597cc:;
		if (it != expr_end) {
			jule::Ptr<_1bc717957_TypeEnum> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1c193e4b5_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1c19597cc:;
			++it;
			goto _iter_begin_1c19597cc;
		}
		_iter_end_1c19597cc:;
	};
	return _63413_ok;;
}



inline jule::Bool _1bc789b61_checkImportAllSelections(_1bc784276_Sema* _self_, jule::Ptr<_1bc763e04_ImportInfo>* _64344_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*((*(_64344_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c191e9c3:;
		if (it != expr_end) {
			jule::Ptr<_1bc80a50b_SymbolTable> *_64516_file = it;
			{
				__jule_func_result=(_1c1947c93_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_Vars), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1c1948e2b_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_TypeAliases), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1c194b6d1_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_Structs), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1c194de31_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_Funcs), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1c195162b_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_Traits), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1c1953e03_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_Enums), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1c195660e_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_TypeEnums), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
			}
			_iter_next_1c191e9c3:;
			++it;
			goto _iter_begin_1c191e9c3;
		}
		_iter_end_1c191e9c3:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1bc789ea2_checkImportSelections(_1bc784276_Sema* _self_, jule::Ptr<_1bc763e04_ImportInfo>* _65745_imp) {
	jule::Bool __jule_func_result = false;
	if (((*((*(_65745_imp))))._field_Selected.len() > 0LL)) {
		__jule_func_result = _1bc789424_checkImportSelectedSelections(_self_, _65745_imp);
		return __jule_func_result;;
	} else if ((*((*(_65745_imp))))._field_ImportAll) {
		__jule_func_result = _1bc789b61_checkImportAllSelections(_self_, _65745_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1bc78a2e3_isUseAliasDuplication(_1bc784276_Sema* _self_, jule::Ptr<_1bc763e04_ImportInfo>* _66641_imp) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c195ba43:;
		if (it != expr_end) {
			jule::Ptr<_1bc763e04_ImportInfo> _66721_imp2 = *it;
			{
				if ((_66721_imp2 == (*(_66641_imp)))) {
					goto _iter_end_1c195ba43;
				};
				if (((*(_66721_imp2))._field_Alias == (*((*(_66641_imp))))._field_Alias)) {
					return true;;
				};
				if ((((*(_66721_imp2))._field_Ident == (*(_66721_imp2))._field_LinkPath) && ((*(_66721_imp2))._field_Ident == (*((*(_66641_imp))))._field_Alias))) {
					return true;;
				};
			}
			_iter_next_1c195ba43:;
			++it;
			goto _iter_begin_1c195ba43;
		}
		_iter_end_1c195ba43:;
	};
	return false;;
}



inline jule::Bool _1bc78a634_checkImport(_1bc784276_Sema* _self_, jule::Ptr<_1bc763e04_ImportInfo>* _68235_imp) {
	if (((*((*(_68235_imp))))._field_Binded || ((*((*((*(_68235_imp))))._field_Package))._field_Files.len() == 0LL))) {
		return true;;
	};
	if ((*((*(_68235_imp))))._field_LinkPath.equal("std::unsafe", 11)) {
		if ((((*((*(_68235_imp))))._field_ImportAll || !((*((*(_68235_imp))))._field_Alias).empty()) || ((*((*(_68235_imp))))._field_Selected.len() > 0LL))) {
			_1bc786db1_pushErr(_self_, (*((*(_68235_imp))))._field_Token, jule::Str::lit("expected plain use declaration for this package like: @", 55), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("use std::unsafe", 15), &__jule_any_type4)}));
			return false;;
		};
	};
	if (((*((*(_68235_imp))))._field_Alias.len() != 0LL)) {
		if (_1bc58650c_IsIgnoreIdent((*((*(_68235_imp))))._field_Alias)) {
			_1bc786db1_pushErr(_self_, (*((*(_68235_imp))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		} else if (_1bc78a2e3_isUseAliasDuplication(_self_, _68235_imp)) {
			_1bc786db1_pushErr(_self_, (*((*(_68235_imp))))._field_Token, jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75), jule::Slice<jule::Any>::make({jule::Any((*((*(_68235_imp))))._field_Alias, &__jule_any_type4)}));
			_1bc787224_pushSuggestion(_self_, jule::Str::lit("rename alias for this use declaration to avoid duplication", 58), jule::Slice<jule::Any>());
		};
	};
	if ((!((*((*(_68235_imp))))._field_Duplicate))) {
		jule::Ptr<_1bc784276_Sema> _70517_sema = jule::new_ptr<_1bc784276_Sema>(_1bc784276_Sema{._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta});;
		_1bc7a3a15_check(_70517_sema, &((*((*((*(_68235_imp))))._field_Package))._field_Files));
		if (((*(_70517_sema))._field_errors.len() != 0LL)) {
			((*(_self_))._field_errors).append((*(_70517_sema))._field_errors);;
			(*(_70517_sema))._field_errors=nullptr;
			return false;;
		};
	};
	return _1bc789ea2_checkImportSelections(_self_, _68235_imp);;
}



inline void _1bc78a832_checkImports(_1bc784276_Sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1965cb1:;
		if (it != expr_end) {
			jule::Ptr<_1bc80a50b_SymbolTable> _72021_file = *it;
			{
				_1bc786993_setCurrentFile(_self_, _72021_file);
				{
					auto expr = &((*(_72021_file))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c1966ae7:;
					if (it != expr_end) {
						jule::Ptr<_1bc763e04_ImportInfo> _72225_imp = *it;
						{
							jule::Bool _72317_ok = _1bc78a634_checkImport(_self_, &(_72225_imp));;
							if ((!(_72317_ok))) {
								return;;
							};
						}
						_iter_next_1c1966ae7:;
						++it;
						goto _iter_begin_1c1966ae7;
					}
					_iter_end_1c1966ae7:;
				};
			}
			_iter_next_1c1965cb1:;
			++it;
			goto _iter_begin_1c1965cb1;
		}
		_iter_end_1c1965cb1:;
	};
}



inline void _1bc78aa30_implFileImpls(jule::Ptr<_1bc784276_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1966432:;
		if (it != expr_end) {
			jule::Ptr<_1bc73c1b8_Impl> _73321_imp = *it;
			{
				_1bc79a0c2_implImpl(_self_, &(_73321_imp));
			}
			_iter_next_1c1966432:;
			++it;
			goto _iter_begin_1c1966432;
		}
		_iter_end_1c1966432:;
	};
}



inline void _1bc78ac2d_implImpls(jule::Ptr<_1bc784276_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1968995:;
		if (it != expr_end) {
			jule::Ptr<_1bc80a50b_SymbolTable> _73921_file = *it;
			{
				_1bc786993_setCurrentFile(_self_.ptr(), _73921_file);
				_1bc78aa30_implFileImpls(_self_);
			}
			_iter_next_1c1968995:;
			++it;
			goto _iter_begin_1c1968995;
		}
		_iter_end_1c1968995:;
	};
}



inline void _1bc78ae2b_checkEnums(jule::Ptr<_1bc784276_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1969a62:;
		if (it != expr_end) {
			jule::Ptr<_1bc80a50b_SymbolTable> _74621_file = *it;
			{
				_1bc786993_setCurrentFile(_self_.ptr(), _74621_file);
				{
					
					if ((!(_1bc79650d_checkEnumDecls(_self_)))) {
						_case_begin_1c196a744:;
					}
					else if ((!(_1bc796794_checkTypeEnumDecls(_self_)))) {
						_case_begin_1c196a7bb:;
					}
					_match_end_1c196a69a:;
				};
			}
			_iter_next_1c1969a62:;
			++it;
			goto _iter_begin_1c1969a62;
		}
		_iter_end_1c1969a62:;
	};
}



inline void _1bc78b129_checkFileInherits(jule::Ptr<_1bc784276_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c196b5e1:;
		if (it != expr_end) {
			jule::Ptr<_1bc713a41_Trait> _75621_t = *it;
			{
				jule::Bool _75713_ok = _1bc798158__checkTraitDeclInherits(_self_, &(_75621_t));;
				if ((!(_75713_ok))) {
					return;;
				};
			}
			_iter_next_1c196b5e1:;
			++it;
			goto _iter_begin_1c196b5e1;
		}
		_iter_end_1c196b5e1:;
	};
}



inline void _1bc78b327_checkInherits(jule::Ptr<_1bc784276_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c196c944:;
		if (it != expr_end) {
			jule::Ptr<_1bc80a50b_SymbolTable> _76521_file = *it;
			{
				_1bc786993_setCurrentFile(_self_.ptr(), _76521_file);
				_1bc78b129_checkFileInherits(_self_);
			}
			_iter_next_1c196c944:;
			++it;
			goto _iter_begin_1c196c944;
		}
		_iter_end_1c196c944:;
	};
}



inline _1bc85307b_typeChecker _1bc78b7cd_typeChecker(jule::Ptr<_1bc784276_Sema> _self_, jule::Trait<_1bc860c04_Lookup> _77135_l, jule::Slice<jule::Ptr<_1bc8403cb_TypeAlias>> _77150_generics, jule::Ptr<_1bc85208b_referencer> _77213_referencer) {
	_1bc85307b_typeChecker _77313_tc = _1bc85307b_typeChecker{._field_s=_self_, ._field_rootLookup=_77135_l, ._field_lookup=_77135_l, ._field_referencer=_77213_referencer, ._field_useGenerics=_77150_generics, };;
	{
		auto &_match_expr{ _77135_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1c196e858:;
			{
				jule::Ptr<_1bc749923_scopeChecker> _78217_hard = _1bc74cc9a_getHardRoot(_77135_l.cast_ptr<_1bc749923_scopeChecker>(0));;
				_77313_tc._field_refers=(*((*(_78217_hard))._field_owner))._field_Refers;
			}
		}
		_match_end_1c196e759:;
	};
	if (((_77213_referencer != nullptr) && ((*(_77213_referencer))._field_refs != nullptr))) {
		{
			auto &_match_expr{ (*(_77213_referencer))._field_owner };
			
			if (_match_expr.type == &__jule_any_type66) {
				_case_begin_1c1971195:;
				{
					_77313_tc._field_ownerAlias=(*(_77213_referencer))._field_owner.cast_ptr<_1bc8403cb_TypeAlias>(&__jule_any_type66);
				}
			}
			_match_end_1c1971140:;
		};
	};
	return _77313_tc;;
}



inline jule::Ptr<_1bc8411bd_TypeKind> _1bc78bd3e_buildTypeWithRefers(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc59563c_TypeDecl>* _79844_t, jule::Trait<_1bc860c04_Lookup> _79867_l, jule::Slice<jule::Ptr<_1bc8403cb_TypeAlias>> _79913_generics, jule::Ptr<_1bc85208b_referencer> _79941_referencer) {
	return ({ auto _wrap_copy = _1bc78b7cd_typeChecker(_self_, _79867_l, _79913_generics, _79941_referencer); _1bc85a726_checkDecl(&_wrap_copy, _79844_t); });;
}



inline jule::Bool _1bc78c3a0_checkTypeWithRefers(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc848390_TypeSymbol>* _80544_t, jule::Trait<_1bc860c04_Lookup> _80564_l, jule::Slice<jule::Ptr<_1bc8403cb_TypeAlias>> _80613_generics, jule::Ptr<_1bc85208b_referencer> _80641_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1bc848714_checked((*(_80544_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_80544_t))))._field_Kind=_1bc78bd3e_buildTypeWithRefers(_self_, &((*((*(_80544_t))))._field_Decl), _80564_l, _80613_generics, _80641_referencer);
	__jule_func_result = _1bc848714_checked((*(_80544_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1bc739d64_constraintChecker> _1bc78c636_constraintChecker(jule::Ptr<_1bc784276_Sema> _self_) {
	return jule::new_ptr<_1bc739d64_constraintChecker>(_1bc739d64_constraintChecker{._field_s=_self_, });;
}



inline jule::Bool _1bc78ca32_checkType(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc848390_TypeSymbol>* _82034_t, jule::Trait<_1bc860c04_Lookup> _82054_l) {
	return _1bc78c3a0_checkTypeWithRefers(_self_, _82034_t, _82054_l, nullptr, nullptr);;
}



inline jule::Ptr<_1bc8411bd_TypeKind> _1bc78ced8_buildTypeWithGenerics(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc59563c_TypeDecl>* _82646_t, jule::Slice<jule::Ptr<_1bc8403cb_TypeAlias>> _82713_generics, jule::Ptr<_1ece221a8_ReferenceStack> _82741_refers) {
	jule::Ptr<_1bc85307b_typeChecker> _82813_tc = jule::new_ptr<_1bc85307b_typeChecker>(_1bc85307b_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1bc860c04_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1bc860c04_Lookup>(_self_, 3), ._field_refers=_82741_refers, ._field_useGenerics=_82713_generics, });;
	return _1bc85a726_checkDecl(_82813_tc.ptr(), _82646_t);;
}



inline jule::Ptr<_1bc8411bd_TypeKind> _1bc78d66a_selectType(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc59563c_TypeDecl>* _84435_t) {
	jule::Ptr<_1bc85307b_typeChecker> _84513_tc = jule::new_ptr<_1bc85307b_typeChecker>(_1bc85307b_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1bc860c04_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1bc860c04_Lookup>(_self_, 3), ._field_selection=true, });;
	return _1bc85a726_checkDecl(_84513_tc.ptr(), _84435_t);;
}



inline jule::Ptr<_1bc81259b_Eval> _1bc78db21_evalpd(jule::Ptr<_1bc784276_Sema> _self_, jule::Trait<_1bc860c04_Lookup> _85630_l, jule::Ptr<_1bc8411bd_TypeKind> _85645_p, jule::Ptr<_1bc7a750d_Var> _85663_owner) {
	jule::Ptr<_1bc81259b_Eval> _85713_e = jule::new_ptr<_1bc81259b_Eval>(_1bc81259b_Eval{._field_s=_self_, ._field_lookup=_85630_l, ._field_owner=_85663_owner, });;
	{
		auto &_match_expr{ _85630_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1c197a534:;
			{
				(*(_85713_e))._field_unsafety=_1bc74bccc_isUnsafe(_85630_l.cast_ptr<_1bc749923_scopeChecker>(0));
			}
		}
		_match_end_1c197a4ce:;
	};
	(*(_85713_e))._field_prefix=_85645_p;
	return _85713_e;;
}



inline jule::Ptr<_1bc81259b_Eval> _1bc78e01c_evalp(jule::Ptr<_1bc784276_Sema> _self_, jule::Trait<_1bc860c04_Lookup> _87129_l, jule::Ptr<_1bc8411bd_TypeKind> _87144_p) {
	return _1bc78db21_evalpd(_self_, _87129_l, _87144_p, nullptr);;
}



inline jule::Ptr<_1bc81259b_Eval> _1bc78e35d_eval(jule::Ptr<_1bc784276_Sema> _self_, jule::Trait<_1bc860c04_Lookup> _87628_l) {
	return _1bc78e01c_evalp(_self_, _87628_l, nullptr);;
}



inline jule::Bool _1bc78e8be_checkAssignType(jule::Ptr<_1bc784276_Sema> _self_, jule::Bool _88035_destIsRef, jule::Ptr<_1bc8411bd_TypeKind>* _88057_dest, jule::Ptr<_1bc8108a7_Data>* _88114_d, jule::Ptr<_1bc583a9d_Token> _88128_errorToken) {
	if ((*((*(_88114_d))))._field_Decl) {
		_1bc786db1_pushErr(_self_.ptr(), _88128_errorToken, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return false;;
	};
	if (_88035_destIsRef) {
		if ((!(_1bc8418c7_Equal((*(_88057_dest)), (*((*(_88114_d))))._field_Kind)))) {
			_1bc786db1_pushErr(_self_.ptr(), _88128_errorToken, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*(_88057_dest)).ptr()), &__jule_any_type4),jule::Any(_1bc841586_Str((*((*(_88114_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			return false;;
		};
	} else {
		jule::Ptr<_1bc7e9583_assignTypeChecker> _89217_atc = jule::new_ptr<_1bc7e9583_assignTypeChecker>(_1bc7e9583_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_88057_dest)), ._field_d=(*(_88114_d)), ._field_errorToken=_88128_errorToken});;
		jule::Bool _89813_ok = _1bc7ea551_check(_89217_atc.ptr());;
		if ((!(_89813_ok))) {
			return false;;
		};
	};
	if (((!(_1bc81127b_IsConst((*(_88114_d)).ptr()))) || (_1bc84381e_Prim((*(_88057_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _90813_kind = (*(_1bc84381e_Prim((*(_88057_dest)).ptr())))._field_Kind;;
	{
		
		if (_230d571cb_IsSigInt(_90813_kind)) {
			_case_begin_1c1982c56:;
			{
				_230d5b301_SetI64((*((*(_88114_d))))._field_Constant.ptr(), static_cast<jule::I64>(_230d5aa2b_AsI64((*((*(_88114_d))))._field_Constant.ptr())));
			}
		}
		else if (_230d574d9_IsUnsigInt(_90813_kind)) {
			_case_begin_1c1982ccd:;
			{
				_230d5b5a9_SetU64((*((*(_88114_d))))._field_Constant.ptr(), static_cast<jule::U64>(_230d5acb2_AsU64((*((*(_88114_d))))._field_Constant.ptr())));
			}
		}
		else if (_230d57ae4_IsFloat(_90813_kind)) {
			_case_begin_1c1982d55:;
			{
				_230d5bdc3_SetF64((*((*(_88114_d))))._field_Constant.ptr(), static_cast<jule::F64>(_230d5b048_AsF64((*((*(_88114_d))))._field_Constant.ptr())));
			}
		}
		_match_end_1c1982b8a:;
	};
	return true;;
}



inline jule::Bool _1bc78ed75__checkTypeCompatibility(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc8411bd_TypeKind>* _92248_dest, jule::Ptr<_1bc8411bd_TypeKind>* _92270_src, jule::Ptr<_1bc583a9d_Token> _92313_errorToken) {
	if (((*(_92270_src)) == nullptr)) {
		return false;;
	};
	if ((_1bc845645_Tup((*(_92270_src)).ptr()) != nullptr)) {
		return false;;
	};
	_1bc7e77d4_typeCompatibilityChecker _93113_tcc = _1bc7e77d4_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_92248_dest)), ._field_src=(*(_92270_src)), ._field_errorToken=_92313_errorToken};;
	return _1bc7e8e9a_check(&_93113_tcc);;
}



inline jule::Bool _1bc79032b_checkTypeCompatibility(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc8411bd_TypeKind>* _94047_dest, jule::Ptr<_1bc8411bd_TypeKind>* _94114_src, jule::Ptr<_1bc583a9d_Token>* _94135_errorToken) {
	if (_1bc78ed75__checkTypeCompatibility(_self_, _94047_dest, _94114_src, (*(_94135_errorToken)))) {
		return true;;
	};
	_1bc786db1_pushErr(_self_.ptr(), (*(_94135_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*(_94047_dest)).ptr()), &__jule_any_type4),jule::Any(_1bc841586_Str((*(_94114_src)).ptr()), &__jule_any_type4)}));
	return false;;
}



inline void _1bc790749_pushCompatiblityError(_1bc784276_Sema* _self_, jule::Ptr<_1bc8411bd_TypeKind>* _94945_dest, jule::Ptr<_1bc8108a7_Data>* _94967_src, jule::Ptr<_1bc583a9d_Token>* _95014_errorToken) {
	if ((*((*(_94967_src))))._field_untyped) {
		{
			
			if (_230d5c357_IsI64((*((*(_94967_src))))._field_Constant.ptr())) {
				_case_begin_1c1699cd1:;
				{
					_1bc786db1_pushErr(_self_, (*(_95014_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*(_94945_dest)).ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("untyped integer", 15), &__jule_any_type4)}));
					return;;
				}
			}
			else if (_230d5c5dd_IsU64((*((*(_94967_src))))._field_Constant.ptr())) {
				_case_begin_1c1699d47:;
				{
					_1bc786db1_pushErr(_self_, (*(_95014_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*(_94945_dest)).ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("untyped unsigned integer", 24), &__jule_any_type4)}));
					return;;
				}
			}
			else if (_230d5cd91_IsF64((*((*(_94967_src))))._field_Constant.ptr())) {
				_case_begin_1c1699dad:;
				{
					_1bc786db1_pushErr(_self_, (*(_95014_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*(_94945_dest)).ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("untyped float", 13), &__jule_any_type4)}));
					return;;
				}
			}
			_match_end_1c16993eb:;
		};
	};
	_1bc786db1_pushErr(_self_, (*(_95014_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*(_94945_dest)).ptr()), &__jule_any_type4),jule::Any(_1bc841586_Str((*((*(_94967_src))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Bool _1bc790c00_checkTypeCompatibility1(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc8411bd_TypeKind>* _96748_dest, jule::Ptr<_1bc8108a7_Data>* _96770_src, jule::Ptr<_1bc583a9d_Token>* _96814_errorToken) {
	if (_1bc78ed75__checkTypeCompatibility(_self_, _96748_dest, &((*((*(_96770_src))))._field_Kind), (*(_96814_errorToken)))) {
		return true;;
	};
	_1bc790749_pushCompatiblityError(_self_.ptr(), _96748_dest, _96770_src, _96814_errorToken);
	return false;;
}



inline jule::Ptr<_1bc8411bd_TypeKind> _1bc7911a6_buildNonGenericTypeKind(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc59563c_TypeDecl>* _98248_ast, jule::Slice<jule::Ptr<_1bc5a76a4_GenericDecl>>* _98314_generics, jule::Slice<jule::Ptr<_1bc8411bd_TypeKind>>* _98350_ignored) {
	jule::Ptr<_1bc85307b_typeChecker> _98413_tc = jule::new_ptr<_1bc85307b_typeChecker>(_1bc85307b_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1bc860c04_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1bc860c04_Lookup>(_self_, 3), ._field_ignoreGenerics=(*(_98314_generics)), ._field_ignoredGenerics=_98350_ignored, });;
	return _1bc85a726_checkDecl(_98413_tc.ptr(), _98248_ast);;
}



inline jule::Bool _1bc7915a2_buildFnNonGenericTypeKinds(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1ece1de96_FnIns>* _99451_f, jule::Slice<jule::Ptr<_1bc8411bd_TypeKind>>* _99467_ignored) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Slice<jule::Ptr<_1bc5a76a4_GenericDecl>> _99617_generics = nullptr;;
	if (_1ece1b79b_IsMethod((*((*(_99451_f))))._field_Decl.ptr())) {
		_99617_generics=jule::append((*((*((*(_99451_f))))._field_Decl))._field_Generics,(*((*((*((*(_99451_f))))._field_Decl))._field_Owner))._field_Generics);
	} else {
		_99617_generics=(*((*((*(_99451_f))))._field_Decl))._field_Generics;
	};
	{
		auto expr = &((*((*(_99451_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c16a3081:;
		if (it != expr_end) {
			jule::Ptr<_1ece1ceea_ParamIns> _100321_p = *it;
			{
				if ((!(_1ece19bd9_IsSelf((*(_100321_p))._field_Decl.ptr())))) {
					(*(_100321_p))._field_Kind=_1bc7911a6_buildNonGenericTypeKind(_self_, &((*((*((*(_100321_p))._field_Decl))._field_Kind))._field_Decl), &(_99617_generics), _99467_ignored);
					__jule_func_result=(__jule_func_result && ((*(_100321_p))._field_Kind != nullptr));
				};
			}
			_iter_next_1c16a3081:;
			++it;
			goto _iter_begin_1c16a3081;
		}
		_iter_end_1c16a3081:;
	};
	if ((!(_1ece1b515_IsVoid((*((*(_99451_f))))._field_Decl.ptr())))) {
		(*((*(_99451_f))))._field_Result=_1bc7911a6_buildNonGenericTypeKind(_self_, &((*((*((*((*((*(_99451_f))))._field_Decl))._field_Result))._field_Kind))._field_Decl), &(_99617_generics), _99467_ignored);
		__jule_func_result=(__jule_func_result && ((*((*(_99451_f))))._field_Result != nullptr));
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1ece1de96_FnIns> _1bc7918e3_getTraitCheckFnKind(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1ece1b092_Fn>* _101644_f) {
	if (((*((*(_101644_f))))._field_Instances.len() == 1LL)) {
		return (*((*(_101644_f))))._field_Instances[0LL];;
	};
	jule::Ptr<_1ece1de96_FnIns> _102013_ins = _1ece1c56b_instanceForce((*(_101644_f)));;
	jule::Ptr<_1bc85307b_typeChecker> _102213_tc = jule::new_ptr<_1bc85307b_typeChecker>(_1bc85307b_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1bc860c04_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1bc860c04_Lookup>(_self_, 3), });;
	{
		auto expr = &((*(_102013_ins))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c16a9cbe:;
		if (it != expr_end) {
			jule::Ptr<_1ece1ceea_ParamIns> _102721_p = *it;
			{
				if ((!(_1ece19bd9_IsSelf((*(_102721_p))._field_Decl.ptr())))) {
					(*(_102721_p))._field_Kind=_1bc85a726_checkDecl(_102213_tc.ptr(), &((*((*((*(_102721_p))._field_Decl))._field_Kind))._field_Decl));
				};
			}
			_iter_next_1c16a9cbe:;
			++it;
			goto _iter_begin_1c16a9cbe;
		}
		_iter_end_1c16a9cbe:;
	};
	if ((!(_1ece1b515_IsVoid((*(_101644_f)).ptr())))) {
		(*(_102013_ins))._field_Result=_1bc85a726_checkDecl(_102213_tc.ptr(), &((*((*((*((*(_101644_f))))._field_Result))._field_Kind))._field_Decl));
	};
	return _102013_ins;;
}



inline jule::Bool _1bc791d99_checkConstraintsFn(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1ece1de96_FnIns>* _103943_f, jule::Ptr<_1bc583a9d_Token>* _103959_et, jule::Ptr<_1ece1de96_FnIns> _103975_exist) {
	jule::Ptr<_1bc739d64_constraintChecker> _104013_cc = _1bc78c636_constraintChecker(_self_);;
	(*(_104013_cc))._field_et=(*(_103959_et));
	(*(_104013_cc))._field_fi=(*(_103943_f));
	if ((_103975_exist != nullptr)) {
		{
			auto expr = &((*(_103975_exist))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c16ae345:;
			if (it != expr_end) {
				jule::I64 _104418_i = it - expr->begin();
				jule::Ptr<_1bc83e7d7_InsGeneric> _104425_g = *it;
				{
					(*((*((*(_103943_f))))._field_Generics[_104418_i]))._field_Constraint=(*(_104425_g))._field_Constraint;
				}
				_iter_next_1c16ae345:;
				++it;
				_104418_i++;
				goto _iter_begin_1c16ae345;
			}
			_iter_end_1c16ae345:;
		};
	} else {
		(*(_104013_cc))._field_uniq=true;
	};
	return _1bc73ac99_check(_104013_cc);;
}



inline jule::Bool _1bc792350_checkConstraintsStruct(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc5be0b1_StructIns>* _105347_s, jule::Ptr<_1bc583a9d_Token>* _105367_et, jule::Ptr<_1bc5be0b1_StructIns> _105383_exist) {
	jule::Ptr<_1bc739d64_constraintChecker> _105413_cc = _1bc78c636_constraintChecker(_self_);;
	(*(_105413_cc))._field_et=(*(_105367_et));
	(*(_105413_cc))._field_si=(*(_105347_s));
	if ((_105383_exist != nullptr)) {
		{
			auto expr = &((*(_105383_exist))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c16b2557:;
			if (it != expr_end) {
				jule::I64 _105818_i = it - expr->begin();
				jule::Ptr<_1bc83e7d7_InsGeneric> _105825_g = *it;
				{
					(*((*((*(_105347_s))))._field_Generics[_105818_i]))._field_Constraint=(*(_105825_g))._field_Constraint;
				}
				_iter_next_1c16b2557:;
				++it;
				_105818_i++;
				goto _iter_begin_1c16b2557;
			}
			_iter_end_1c16b2557:;
		};
	} else {
		(*(_105413_cc))._field_uniq=true;
	};
	return _1bc73ac99_check(_105413_cc);;
}



inline jule::Bool _1bc79274b_fnEnvironment(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1ece1de96_FnIns>* _107038_f, jule::Fn<jule::Bool(jule::Ptr<_1bc784276_Sema>*,jule::Slice<jule::Ptr<_1bc8403cb_TypeAlias>>*)> _107049_algo) {
	jule::Ptr<_1bc784276_Sema> _107113_sema = (*((*((*(_107038_f))))._field_Decl))._field_sema;;
	jule::Ptr<_1bc80a50b_SymbolTable> _107213_old = (*((*((*((*(_107038_f))))._field_Decl))._field_sema))._field_file;;
	__JULE_DEFER({
		_1bc786993_setCurrentFile((*((*((*(_107038_f))))._field_Decl))._field_sema.ptr(), _107213_old);
	});;
	jule::Ptr<_1bc80a50b_SymbolTable> _107413_file = _1bc782ebc_findFile(&((*((*((*((*(_107038_f))))._field_Decl))._field_sema))._field_files), &((*((*((*((*(_107038_f))))._field_Decl))._field_Token))._field_File));;
	if ((_107413_file != nullptr)) {
		_1bc786993_setCurrentFile((*((*((*(_107038_f))))._field_Decl))._field_sema.ptr(), _107413_file);
	};
	jule::I64 _107913_size = (*((*(_107038_f))))._field_Generics.len();;
	if ((((*((*(_107038_f))))._field_Decl != nullptr) && ((*((*((*(_107038_f))))._field_Decl))._field_Owner != nullptr))) {
		_107913_size+=(*((*((*((*(_107038_f))))._field_Decl))._field_Owner))._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1bc8403cb_TypeAlias>> _108413_generics = jule::Slice<jule::Ptr<_1bc8403cb_TypeAlias>>::alloc(0LL, _107913_size);;
	_1bc782b48_appendGenericTypeAliases(&(_108413_generics), _107038_f);
	jule::Bool _10879_ok = _107049_algo(&(_107113_sema), &(_108413_generics));;
	if ((_107113_sema != _self_)) {
		((*(_self_))._field_errors).append((*(_107113_sema))._field_errors);;
		(*(_107113_sema))._field_errors=nullptr;
	};
	return _10879_ok;;
}



inline void _1bc792a04_checkFnParamKind(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1ece1ceea_ParamIns>* _109741_p) {
	(*((*((*(_109741_p))))._field_Kind))._field_Variadic=(*((*((*(_109741_p))))._field_Decl))._field_Variadic;
	if (((*((*((*(_109741_p))))._field_Decl))._field_Reference && (!(_1bc85c6b2_isValidForRef(&((*((*(_109741_p))))._field_Kind)))))) {
		_1bc786db1_pushErr(_self_.ptr(), (*((*((*(_109741_p))))._field_Decl))._field_Token, jule::Str::lit("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*((*(_109741_p))))._field_Kind.ptr()), &__jule_any_type4)}));
	};
}



inline jule::Bool _1bc792d45_reloadFnInsTypes(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1ece1de96_FnIns> _110440_f) {
	if ((_1ece2042b_IsBuiltin(_110440_f.ptr()) || _1ece206b2_IsAnon(_110440_f.ptr()))) {
		return true;;
	};
	return _1bc79274b_fnEnvironment(_self_, &(_110440_f), jule::Fn<jule::Bool(jule::Ptr<_1bc784276_Sema>*,jule::Slice<jule::Ptr<_1bc8403cb_TypeAlias>>*)>([=](jule::Ptr<_1bc784276_Sema>* _110843_sema, jule::Slice<jule::Ptr<_1bc8403cb_TypeAlias>>* _110861_generics) mutable -> jule::Bool {
		jule::Bool _110917_ok = true;;
		{
			auto expr = &((*(_110440_f))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c16c12ad:;
			if (it != expr_end) {
				jule::Ptr<_1ece1ceea_ParamIns> _111025_p = *it;
				{
					if (_1ece19bd9_IsSelf((*(_111025_p))._field_Decl.ptr())) {
						if (_1ece19e70_IsRef((*(_111025_p))._field_Decl.ptr())) {
							(*(_111025_p))._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(jule::new_ptr<_1bc84c7c3_Sptr>(_1bc84c7c3_Sptr{._field_Elem=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>((*(_110440_f))._field_Owner, 0)})}), 21)});
						} else {
							(*(_111025_p))._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>((*(_110440_f))._field_Owner, 0)});
						};
					} else {
						(*(_111025_p))._field_Kind=_1bc78ced8_buildTypeWithGenerics((*(_110843_sema)), &((*((*((*(_111025_p))._field_Decl))._field_Kind))._field_Decl), (*(_110861_generics)), (*(_110440_f))._field_Refers);
						if (((*(_111025_p))._field_Kind != nullptr)) {
							_1bc792a04_checkFnParamKind(_self_, &(_111025_p));
						} else {
							_110917_ok=false;
						};
					};
				}
				_iter_next_1c16c12ad:;
				++it;
				goto _iter_begin_1c16c12ad;
			}
			_iter_end_1c16c12ad:;
		};
		if ((!(_1ece1b515_IsVoid((*(_110440_f))._field_Decl.ptr())))) {
			(*(_110440_f))._field_Result=_1bc78ced8_buildTypeWithGenerics((*(_110843_sema)), &((*((*((*((*(_110440_f))._field_Decl))._field_Result))._field_Kind))._field_Decl), (*(_110861_generics)), (*(_110440_f))._field_Refers);
			_110917_ok=(((*(_110440_f))._field_Result != nullptr) && _110917_ok);
		};
		return _110917_ok;;
	}));;
}



inline jule::Bool _1bc7932eb_checkRefValidityForInitExpr(jule::Ptr<_1bc784276_Sema> _self_, jule::Bool _114047_leftMut, jule::Ptr<_1bc8108a7_Data>* _114067_d, jule::Ptr<_1bc583a9d_Token>* _114082_errorToken) {
	if ((!(_1bc781916_isValidModelForRef(&((*((*(_114067_d))))._field_Model))))) {
		_1bc786db1_pushErr(_self_.ptr(), (*(_114082_errorToken)), jule::Str::lit("references requires variable based expression for assignment", 60), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_114047_leftMut && (!((*((*(_114067_d))))._field_Mutable)))) {
		_1bc786db1_pushErr(_self_.ptr(), (*(_114082_errorToken)), jule::Str::lit("mutable reference cannot point to immutable data", 48), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1bc79363c_isMutRiskyStruct(_1bc784276_Sema* _self_, jule::Ptr<_1bc5be0b1_StructIns>* _115732_s) {
	{
		auto expr = &((*((*(_115732_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c16c954c:;
		if (it != expr_end) {
			jule::Ptr<_1bc5bd511_FieldIns> *_115816_f = it;
			{
				if ((((*((*((*(_115816_f))))._field_Decl))._field_Mutable && _1bc842a4e_Mutable((*((*(_115816_f))))._field_Kind.ptr())) && _1bc787620_isAccessibleDefine(_self_, (*((*((*(_115816_f))))._field_Decl))._field_Public, (*((*((*(_115816_f))))._field_Decl))._field_Token))) {
					return true;;
				};
			}
			_iter_next_1c16c954c:;
			++it;
			goto _iter_begin_1c16c954c;
		}
		_iter_end_1c16c954c:;
	};
	return false;;
}



inline jule::Bool _1bc793c58_checkValidityForInitExpr(jule::Ptr<_1bc784276_Sema> _self_, jule::Bool _118444_leftMut, jule::Bool _118459_leftRef, jule::Ptr<_1bc8411bd_TypeKind>* _118510_leftKind, jule::Ptr<_1bc8108a7_Data>* _118536_d, jule::Ptr<_1bc583a9d_Token>* _118551_errorToken) {
	if ((_118444_leftMut && (!((*((*(_118536_d))))._field_Mutable)))) {
		if (_1bc842a4e_Mutable((*((*(_118536_d))))._field_Kind.ptr())) {
			_1bc786db1_pushErr(_self_.ptr(), (*(_118551_errorToken)), jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*((*(_118536_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			return false;;
		};
		jule::Ptr<_1bc5be0b1_StructIns> _119313_s = _1bc844d92_Struct((*((*(_118536_d))))._field_Kind.ptr());;
		if (((_119313_s != nullptr) && _1bc79363c_isMutRiskyStruct(_self_.ptr(), &(_119313_s)))) {
			_1bc786db1_pushErr(_self_.ptr(), (*(_118551_errorToken)), jule::Str::lit("struct @ cannot copied due to field which is stores mutable data", 64), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*((*(_118536_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			return false;;
		};
	};
	if (_118459_leftRef) {
		if ((!(_1bc7932eb_checkRefValidityForInitExpr(_self_, _118444_leftMut, _118536_d, _118551_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1bc7e9583_assignTypeChecker> _120413_atc = jule::new_ptr<_1bc7e9583_assignTypeChecker>(_1bc7e9583_assignTypeChecker{._field_s=_self_, ._field_d=(*(_118536_d)), ._field_errorToken=(*(_118551_errorToken))});;
	return _1bc7e9c9d_checkValidity(_120413_atc.ptr());;
}



inline jule::Bool _1bc794154_checkTypeAliasDeclKind(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc8403cb_TypeAlias>* _121247_ta, jule::Trait<_1bc860c04_Lookup> _121267_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1bc80a50b_SymbolTable> _121313_old = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1bc786993_setCurrentFile(_self_.ptr(), _121313_old);
	});;
	if (((*((*(_121247_ta))))._field_Token != nullptr)) {
		jule::Ptr<_1bc80a50b_SymbolTable> _121817_file = _1bc782ebc_findFile(&((*(_self_))._field_files), &((*((*((*(_121247_ta))))._field_Token))._field_File));;
		if ((_121817_file != nullptr)) {
			_1bc786993_setCurrentFile(_self_.ptr(), _121817_file);
		};
	};
	__jule_func_result=_1bc78c3a0_checkTypeWithRefers(_self_, &((*((*(_121247_ta))))._field_Kind), _121267_l, nullptr, jule::new_ptr<_1bc85208b_referencer>(_1bc85208b_referencer{._field_ident=(*((*(_121247_ta))))._field_Ident, ._field_owner=jule::Any((*(_121247_ta)), &__jule_any_type66), ._field_refs=(&((*((*(_121247_ta))))._field_Refers))}));
	if (((__jule_func_result && (_1bc8445de_Arr((*((*((*(_121247_ta))))._field_Kind))._field_Kind.ptr()) != nullptr)) && (*(_1bc8445de_Arr((*((*((*(_121247_ta))))._field_Kind))._field_Kind.ptr())))._field_Auto)) {
		_1bc786db1_pushErr(_self_.ptr(), (*((*((*((*(_121247_ta))))._field_Kind))._field_Decl))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _1bc7944b7_checkTypeAliasDecl(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc8403cb_TypeAlias>* _123543_ta, jule::Trait<_1bc860c04_Lookup> _123563_l) {
	if (_1bc58650c_IsIgnoreIdent((*((*(_123543_ta))))._field_Ident)) {
		_1bc786db1_pushErr(_self_.ptr(), (*((*(_123543_ta))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	_1bc794154_checkTypeAliasDeclKind(_self_, _123543_ta, _123563_l);
}



inline void _1bc794770_checkTypeAliasDeclDup(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc8403cb_TypeAlias>* _124346_ta) {
	if (_1bc58650c_IsIgnoreIdent((*((*(_124346_ta))))._field_Ident)) {
		_1bc786db1_pushErr(_self_.ptr(), (*((*(_124346_ta))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1bc787ac6_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_124346_ta)))), &((*((*(_124346_ta))))._field_Ident), (*((*(_124346_ta))))._field_Binded)) {
		_1bc786db1_pushErr(_self_.ptr(), (*((*(_124346_ta))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_124346_ta))))._field_Ident, &__jule_any_type4)}));
		_1bc787224_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1bc794154_checkTypeAliasDeclKind(_self_, _124346_ta, jule::Trait<_1bc860c04_Lookup>(_self_, 3));
}



inline jule::Bool _1bc794a06_checkTypeAliasDecls(jule::Ptr<_1bc784276_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c16dbe55:;
		if (it != expr_end) {
			jule::Ptr<_1bc8403cb_TypeAlias> _125621_ta = *it;
			{
				_1bc794770_checkTypeAliasDeclDup(_self_, &(_125621_ta));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c16dbe55:;
			++it;
			goto _iter_begin_1c16dbe55;
		}
		_iter_end_1c16dbe55:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1c1718aec_checkEnumItemsDup(_1bc784276_Sema* _self_, jule::Slice<jule::Ptr<_1bc7156d0_EnumItem>> _126739_items) {
	{
		auto expr = &(_126739_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1719e3e:;
		if (it != expr_end) {
			jule::Ptr<_1bc7156d0_EnumItem> *_126816_item = it;
			{
				if (((*((*(_126816_item))))._field_Ident).empty()) {
					goto _iter_next_1c1719e3e;
				} else if (_1bc58650c_IsIgnoreIdent((*((*(_126816_item))))._field_Ident)) {
					_1bc786db1_pushErr(_self_, (*((*(_126816_item))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_126739_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c171b9e0:;
						if (it != expr_end) {
							jule::Ptr<_1bc7156d0_EnumItem> *_127424_citem = it;
							{
								if (((*(_126816_item)) == (*(_127424_citem)))) {
									goto _iter_end_1c171b9e0;
								} else if (((*((*(_126816_item))))._field_Ident == (*((*(_127424_citem))))._field_Ident)) {
									_1bc786db1_pushErr(_self_, (*((*(_126816_item))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_126816_item))))._field_Ident, &__jule_any_type4)}));
									_1bc787224_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1c171b9e0;
								};
							}
							_iter_next_1c171b9e0:;
							++it;
							goto _iter_begin_1c171b9e0;
						}
						_iter_end_1c171b9e0:;
					};
				};
			}
			_iter_next_1c1719e3e:;
			++it;
			goto _iter_begin_1c1719e3e;
		}
		_iter_end_1c1719e3e:;
	};
}

inline void _1c02030cc_checkEnumItemsDup(_1bc784276_Sema* _self_, jule::Slice<jule::Ptr<_1bc717380_TypeEnumItem>> _126739_items) {
	{
		auto expr = &(_126739_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c02043ec:;
		if (it != expr_end) {
			jule::Ptr<_1bc717380_TypeEnumItem> *_126816_item = it;
			{
				if (((*((*(_126816_item))))._field_Ident).empty()) {
					goto _iter_next_1c02043ec;
				} else if (_1bc58650c_IsIgnoreIdent((*((*(_126816_item))))._field_Ident)) {
					_1bc786db1_pushErr(_self_, (*((*(_126816_item))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_126739_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c0205e9d:;
						if (it != expr_end) {
							jule::Ptr<_1bc717380_TypeEnumItem> *_127424_citem = it;
							{
								if (((*(_126816_item)) == (*(_127424_citem)))) {
									goto _iter_end_1c0205e9d;
								} else if (((*((*(_126816_item))))._field_Ident == (*((*(_127424_citem))))._field_Ident)) {
									_1bc786db1_pushErr(_self_, (*((*(_126816_item))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_126816_item))))._field_Ident, &__jule_any_type4)}));
									_1bc787224_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1c0205e9d;
								};
							}
							_iter_next_1c0205e9d:;
							++it;
							goto _iter_begin_1c0205e9d;
						}
						_iter_end_1c0205e9d:;
					};
				};
			}
			_iter_next_1c02043ec:;
			++it;
			goto _iter_begin_1c02043ec;
		}
		_iter_end_1c02043ec:;
	};
}



inline void _1bc795067_checkEnumItemsStr(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc71624c_Enum>* _128742_e) {
	jule::Ptr<_1bc81259b_Eval> _128813_eval = _1bc78e35d_eval(_self_, jule::Trait<_1bc860c04_Lookup>(_self_, 3));;
	{
		auto expr = &((*((*(_128742_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c16ddb9e:;
		if (it != expr_end) {
			jule::Ptr<_1bc7156d0_EnumItem> _128921_item = *it;
			{
				if (_1bc715a87_AutoExpr(_128921_item.ptr())) {
					(*(_128921_item))._field_Value=jule::new_ptr<_1bc8119eb_Value>(_1bc8119eb_Value{._field_Data=jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Constant=static__230d59123_NewStr((*(_128921_item))._field_Ident)})});
					(*((*((*(_128921_item))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*(_128921_item))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
				} else {
					jule::Ptr<_1bc8108a7_Data> _129821_d = _1bc83080b_evalExpr(_128813_eval, (*((*(_128921_item))._field_Value))._field_Expr);;
					if ((_129821_d == nullptr)) {
						goto _iter_next_1c16ddb9e;
					};
					if ((!(_1bc81127b_IsConst(_129821_d.ptr())))) {
						_1bc786db1_pushErr(_self_.ptr(), (*((*((*(_128921_item))._field_Value))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
					};
					_1bc78e8be_checkAssignType(_self_, false, &((*((*((*(_128742_e))))._field_Kind))._field_Kind), &(_129821_d), (*(_128921_item))._field_Token);
					(*((*(_128921_item))._field_Value))._field_Data=_129821_d;
				};
			}
			_iter_next_1c16ddb9e:;
			++it;
			goto _iter_begin_1c16ddb9e;
		}
		_iter_end_1c16ddb9e:;
	};
}



inline void _1c16e945c_checkEnumItemInt(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc81259b_Eval>* _131346_eval, jule::Ptr<_1bc71624c_Enum>* _131364_e, jule::Ptr<_1bc848c97_Prim>* _131375_prim, jule::Ptr<_1bc7156d0_EnumItem>* _131393_item, jule::U64* _1313115_n) {
	if (_1bc715a87_AutoExpr((*(_131393_item)).ptr())) {
		(*((*(_131393_item))))._field_Value=jule::new_ptr<_1bc8119eb_Value>(_1bc8119eb_Value{._field_Data=jule::new_ptr<_1bc8108a7_Data>()});
		{
			
{
				_case_begin_1c16ec31c:;
				{
					(*((*((*((*(_131393_item))))._field_Value))._field_Data))._field_Constant=static__230d58a90_NewU64((*(_1313115_n)));
				}
			}
			_match_end_1c16ec042:;
		};
		(*((*((*((*(_131393_item))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_131393_item))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1bc8108a7_Data> _132817_d = _1bc83080b_evalExpr((*(_131346_eval)), (*((*((*(_131393_item))))._field_Value))._field_Expr);;
		if ((_132817_d == nullptr)) {
			return;;
		};
		if ((!(_1bc81127b_IsConst(_132817_d.ptr())))) {
			_1bc786db1_pushErr(_self_.ptr(), (*((*((*((*(_131393_item))))._field_Value))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1bc78e8be_checkAssignType(_self_, false, &((*((*((*(_131364_e))))._field_Kind))._field_Kind), &(_132817_d), (*((*(_131393_item))))._field_Token);
		(*((*((*(_131393_item))))._field_Value))._field_Data=_132817_d;
		{
			
{
				_case_begin_1c1702135:;
				{
					(*(_1313115_n))=static_cast<jule::U64>(_230d59ee2_ReadU64((*((*((*((*(_131393_item))))._field_Value))._field_Data))._field_Constant.ptr()));
				}
			}
			_match_end_1c1701e37:;
		};
	};
}

inline void _1c1709615_checkEnumItemInt(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc81259b_Eval>* _131346_eval, jule::Ptr<_1bc71624c_Enum>* _131364_e, jule::Ptr<_1bc848c97_Prim>* _131375_prim, jule::Ptr<_1bc7156d0_EnumItem>* _131393_item, jule::I64* _1313115_n) {
	if (_1bc715a87_AutoExpr((*(_131393_item)).ptr())) {
		(*((*(_131393_item))))._field_Value=jule::new_ptr<_1bc8119eb_Value>(_1bc8119eb_Value{._field_Data=jule::new_ptr<_1bc8108a7_Data>()});
		{
			
{
				_case_begin_1c170c30a:;
				{
					(*((*((*((*(_131393_item))))._field_Value))._field_Data))._field_Constant=static__230d587c6_NewI64((*(_1313115_n)));
				}
			}
			_match_end_1c170c0a7:;
		};
		(*((*((*((*(_131393_item))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_131393_item))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1bc8108a7_Data> _132817_d = _1bc83080b_evalExpr((*(_131346_eval)), (*((*((*(_131393_item))))._field_Value))._field_Expr);;
		if ((_132817_d == nullptr)) {
			return;;
		};
		if ((!(_1bc81127b_IsConst(_132817_d.ptr())))) {
			_1bc786db1_pushErr(_self_.ptr(), (*((*((*((*(_131393_item))))._field_Value))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1bc78e8be_checkAssignType(_self_, false, &((*((*((*(_131364_e))))._field_Kind))._field_Kind), &(_132817_d), (*((*(_131393_item))))._field_Token);
		(*((*((*(_131393_item))))._field_Value))._field_Data=_132817_d;
		{
			
{
				_case_begin_1c17122aa:;
				{
					(*(_1313115_n))=static_cast<jule::I64>(_230d59c5b_ReadI64((*((*((*((*(_131393_item))))._field_Value))._field_Data))._field_Constant.ptr()));
				}
			}
			_match_end_1c1712134:;
		};
	};
}



inline void _1c16e55e0_checkEnumItemsInt1(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc848c97_Prim>* _134844_prim, jule::Ptr<_1bc71624c_Enum>* _134862_e) {
	jule::U64 _134913_max = static_cast<jule::U64>(0LLU);;
	{
		
{
			_case_begin_1c16e7526:;
			{
				_134913_max=static_cast<jule::U64>(_230d53bde_MaxU(_1bc8490d8_Str((*(_134844_prim)).ptr())));
			}
		}
		_match_end_1c16e7339:;
	};
	jule::Ptr<_1bc81259b_Eval> _135913_eval = _1bc78e35d_eval(_self_, jule::Trait<_1bc860c04_Lookup>(_self_, 3));;
	jule::U64 _136013_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1bc7156d0_EnumItem> _136113_first = (*((*(_134862_e))))._field_Items[0LL];;
	_1c16e945c_checkEnumItemInt(_self_, &(_135913_eval), _134862_e, _134844_prim, &(_136113_first), &(_136013_n));
	if (((*((*(_136113_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1c1702740:;
				{
					_136013_n=static_cast<jule::U64>(_230d5acb2_AsU64((*((*((*(_136113_first))._field_Value))._field_Data))._field_Constant.ptr()));
				}
			}
			_match_end_1c16ea7b0:;
		};
	};
	{
		auto expr = (*((*(_134862_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1c16eddce:;
		if (it != expr_end) {
			jule::Ptr<_1bc7156d0_EnumItem> _137321_item = *it;
			{
				if (((_1bc715a87_AutoExpr(_137321_item.ptr()) && (_136013_n > 0LLU)) && ((_134913_max - _136013_n) <= 0LLU))) {
					_1bc786db1_pushErr(_self_.ptr(), (*(_137321_item))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1c16eddce;
				};
				(_136013_n)++;
				_1c16e945c_checkEnumItemInt(_self_, &(_135913_eval), _134862_e, _134844_prim, &(_137321_item), &(_136013_n));
			}
			_iter_next_1c16eddce:;
			++it;
			goto _iter_begin_1c16eddce;
		}
		_iter_end_1c16eddce:;
	};
}

inline void _1c1706711_checkEnumItemsInt1(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc848c97_Prim>* _134844_prim, jule::Ptr<_1bc71624c_Enum>* _134862_e) {
	jule::I64 _134913_max = static_cast<jule::I64>(0LL);;
	{
		
{
			_case_begin_1c17074c0:;
			{
				_134913_max=static_cast<jule::I64>(_230d53925_MaxI(_1bc8490d8_Str((*(_134844_prim)).ptr())));
			}
		}
		_match_end_1c170735a:;
	};
	jule::Ptr<_1bc81259b_Eval> _135913_eval = _1bc78e35d_eval(_self_, jule::Trait<_1bc860c04_Lookup>(_self_, 3));;
	jule::I64 _136013_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_1bc7156d0_EnumItem> _136113_first = (*((*(_134862_e))))._field_Items[0LL];;
	_1c1709615_checkEnumItemInt(_self_, &(_135913_eval), _134862_e, _134844_prim, &(_136113_first), &(_136013_n));
	if (((*((*(_136113_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1c1708548:;
				{
					_136013_n=static_cast<jule::I64>(_230d5aa2b_AsI64((*((*((*(_136113_first))._field_Value))._field_Data))._field_Constant.ptr()));
				}
			}
			_match_end_1c1708cc9:;
		};
	};
	{
		auto expr = (*((*(_134862_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1c1713ee3:;
		if (it != expr_end) {
			jule::Ptr<_1bc7156d0_EnumItem> _137321_item = *it;
			{
				if (((_1bc715a87_AutoExpr(_137321_item.ptr()) && (_136013_n > 0LL)) && ((_134913_max - _136013_n) <= 0LL))) {
					_1bc786db1_pushErr(_self_.ptr(), (*(_137321_item))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1c1713ee3;
				};
				(_136013_n)++;
				_1c1709615_checkEnumItemInt(_self_, &(_135913_eval), _134862_e, _134844_prim, &(_137321_item), &(_136013_n));
			}
			_iter_next_1c1713ee3:;
			++it;
			goto _iter_begin_1c1713ee3;
		}
		_iter_end_1c1713ee3:;
	};
}



inline void _1bc795c16_checkEnumItemsInt(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc71624c_Enum>* _138342_e) {
	jule::Ptr<_1bc848c97_Prim> _13849_prim = _1bc84381e_Prim((*((*((*(_138342_e))))._field_Kind))._field_Kind.ptr());;
	{
		
		if (_230d571cb_IsSigInt((*(_13849_prim))._field_Kind)) {
			_case_begin_1c16e5216:;
			{
				_1c1706711_checkEnumItemsInt1(_self_, &(_13849_prim), _138342_e);
			}
		}
		else {
			_case_begin_1c16e4d70:;
			{
				_1c16e55e0_checkEnumItemsInt1(_self_, &(_13849_prim), _138342_e);
			}
		}
		_match_end_1c16e4d09:;
	};
}



inline void _1bc795ebe_checkEnumDecl(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc71624c_Enum>* _139338_e) {
	if (_1bc58650c_IsIgnoreIdent((*((*(_139338_e))))._field_Ident)) {
		_1bc786db1_pushErr(_self_.ptr(), (*((*(_139338_e))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1bc787ac6_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_139338_e)))), &((*((*(_139338_e))))._field_Ident), false)) {
		_1bc786db1_pushErr(_self_.ptr(), (*((*(_139338_e))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_139338_e))))._field_Ident, &__jule_any_type4)}));
		_1bc787224_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_139338_e))))._field_Items.len() == 0LL)) {
		_1bc786db1_pushErr(_self_.ptr(), (*((*(_139338_e))))._field_Token, jule::Str::lit("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*((*(_139338_e))))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	_1c1718aec_checkEnumItemsDup(_self_.ptr(), (*((*(_139338_e))))._field_Items);
	if (((*((*(_139338_e))))._field_Kind != nullptr)) {
		if ((!(_1bc78ca32_checkType(_self_, &((*((*(_139338_e))))._field_Kind), jule::Trait<_1bc860c04_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		(*((*(_139338_e))))._field_Kind=(*(_1bc2c7506_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	jule::Ptr<_1bc848c97_Prim> _141713_t = _1bc84381e_Prim((*((*((*(_139338_e))))._field_Kind))._field_Kind.ptr());;
	if ((_141713_t == nullptr)) {
		_1bc786db1_pushErr(_self_.ptr(), (*((*(_139338_e))))._field_Token, jule::Str::lit("invalid type source", 19), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1bc84c22e_IsStr(_141713_t.ptr())) {
			_case_begin_1c172084b:;
			{
				_1bc795067_checkEnumItemsStr(_self_, _139338_e);
			}
		}
		else if (_230d577a3_IsInt(_1bc8490d8_Str(_141713_t.ptr()))) {
			_case_begin_1c172054e:;
			{
				_1bc795c16_checkEnumItemsInt(_self_, _139338_e);
			}
		}
		else {
			_case_begin_1c17204d8:;
			{
				_1bc786db1_pushErr(_self_.ptr(), (*((*(_139338_e))))._field_Token, jule::Str::lit("invalid type source", 19), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c171eb25:;
	};
}



inline void _1bc796277_checkTypeEnumDecl(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc717957_TypeEnum>* _143442_e) {
	if (_1bc58650c_IsIgnoreIdent((*((*(_143442_e))))._field_Ident)) {
		_1bc786db1_pushErr(_self_.ptr(), (*((*(_143442_e))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1bc787ac6_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_143442_e)))), &((*((*(_143442_e))))._field_Ident), false)) {
		_1bc786db1_pushErr(_self_.ptr(), (*((*(_143442_e))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_143442_e))))._field_Ident, &__jule_any_type4)}));
		_1bc787224_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_143442_e))))._field_Items.len() == 0LL)) {
		_1bc786db1_pushErr(_self_.ptr(), (*((*(_143442_e))))._field_Token, jule::Str::lit("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*((*(_143442_e))))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	_1c02030cc_checkEnumItemsDup(_self_.ptr(), (*((*(_143442_e))))._field_Items);
	{
		auto expr = &((*((*(_143442_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0204265:;
		if (it != expr_end) {
			jule::Ptr<_1bc717380_TypeEnumItem> _144821_item = *it;
			{
				if (((*(_144821_item))._field_Kind == nullptr)) {
					_1bc786db1_pushErr(_self_.ptr(), (*(_144821_item))._field_Token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					goto _iter_next_1c0204265;
				};
				jule::Bool _145313_ok = _1bc78ca32_checkType(_self_, &((*(_144821_item))._field_Kind), jule::Trait<_1bc860c04_Lookup>(_self_, 3));;
				if ((!(_145313_ok))) {
					goto _iter_next_1c0204265;
				};
				jule::Ptr<_1bc848c97_Prim> _145713_p = _1bc84381e_Prim((*((*(_144821_item))._field_Kind))._field_Kind.ptr());;
				if (((_145713_p != nullptr) && _1bc84c4b5_IsAny(_145713_p.ptr()))) {
					_1bc786db1_pushErr(_self_.ptr(), (*(_144821_item))._field_Token, jule::Str::lit("the <any> type is not allowed for type-enum declarations", 56), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1c0204265:;
			++it;
			goto _iter_begin_1c0204265;
		}
		_iter_end_1c0204265:;
	};
	if (((*((*(_143442_e))))._field_Items.len() == 1LL)) {
		jule::Ptr<_1bc717380_TypeEnumItem> _146317_item = (*((*(_143442_e))))._field_Items[0LL];;
		_1bc8411bd_TypeKind _146413_tk = _1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>((*(_143442_e)), 4)};;
		if ((((*((*(_146317_item))._field_Kind))._field_Kind != nullptr) && _1bc8418c7_Equal((*((*(_146317_item))._field_Kind))._field_Kind, ((jule::Ptr<_1bc8411bd_TypeKind>)((&(_146413_tk))))))) {
			_1bc786db1_pushErr(_self_.ptr(), (*(_146317_item))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_1bc717c98_Str((*(_143442_e)).ptr()), &__jule_any_type4)}));
		};
	};
}



inline jule::Bool _1bc79650d_checkEnumDecls(jule::Ptr<_1bc784276_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c020e5b1:;
		if (it != expr_end) {
			jule::Ptr<_1bc71624c_Enum> _147521_e = *it;
			{
				_1bc795ebe_checkEnumDecl(_self_, &(_147521_e));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c020e5b1:;
			++it;
			goto _iter_begin_1c020e5b1;
		}
		_iter_end_1c020e5b1:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1bc796794_checkTypeEnumDecls(jule::Ptr<_1bc784276_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0210c88:;
		if (it != expr_end) {
			jule::Ptr<_1bc717957_TypeEnum> _148721_e = *it;
			{
				_1bc796277_checkTypeEnumDecl(_self_, &(_148721_e));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c0210c88:;
			++it;
			goto _iter_begin_1c0210c88;
		}
		_iter_end_1c0210c88:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1bc796ad5_checkDeclGenerics(_1bc784276_Sema* _self_, jule::Slice<jule::Ptr<_1bc5a76a4_GenericDecl>>* _149737_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _149737_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0212262:;
		if (it != expr_end) {
			jule::I64 _149913_i = it - expr->begin();
			jule::Ptr<_1bc5a76a4_GenericDecl> *_149916_g = it;
			{
				if (_1bc58650c_IsIgnoreIdent((*((*(_149916_g))))._field_Ident)) {
					_1bc786db1_pushErr(_self_, (*((*(_149916_g))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1c0212262;
				};
				_julec_label_1c1a89aa5:;
				{
					auto expr = _149737_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c1a8a567:;
					if (it != expr_end) {
						jule::I64 _150817_j = it - expr->begin();
						jule::Ptr<_1bc5a76a4_GenericDecl> *_150820_ct = it;
						{
							{
								
								if ((_150817_j >= _149913_i)) {
									_case_begin_1c1a8b15b:;
									{
										goto _iter_end_1c1a8a567;
									}
								}
								else if (((*((*(_149916_g))))._field_Ident == (*((*(_150820_ct))))._field_Ident)) {
									_case_begin_1c1a8b1d3:;
									{
										_1bc786db1_pushErr(_self_, (*((*(_149916_g))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_149916_g))))._field_Ident, &__jule_any_type4)}));
										_1bc787224_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1c1a8a567;
									}
								}
								_match_end_1c1a8b05c:;
							};
						}
						_iter_next_1c1a8a567:;
						++it;
						_150817_j++;
						goto _iter_begin_1c1a8a567;
					}
					_iter_end_1c1a8a567:;
				};
			}
			_iter_next_1c0212262:;
			++it;
			_149913_i++;
			goto _iter_begin_1c0212262;
		}
		_iter_end_1c0212262:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1bc796e26_checkFnDeclParamsDup(_1bc784276_Sema* _self_, jule::Ptr<_1ece1b092_Fn>* _152440_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_1c1a8d2c3:;
	{
		auto expr = &((*((*(_152440_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1a8d6d0:;
		if (it != expr_end) {
			jule::I64 _152713_i = it - expr->begin();
			jule::Ptr<_1ece195bd_Param> *_152716_p = it;
			{
				{
					auto expr = &((*((*(_152440_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c1a8e3c3:;
					if (it != expr_end) {
						jule::Ptr<_1bc5a76a4_GenericDecl> *_152920_g = it;
						{
							if (((*((*(_152716_p))))._field_Ident == (*((*(_152920_g))))._field_Ident)) {
								__jule_func_result=false;
								_1bc786db1_pushErr(_self_, (*((*(_152716_p))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_152716_p))))._field_Ident, &__jule_any_type4)}));
								_1bc787224_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								goto _iter_next_1c1a8d6d0;
							};
						}
						_iter_next_1c1a8e3c3:;
						++it;
						goto _iter_begin_1c1a8e3c3;
					}
					_iter_end_1c1a8e3c3:;
				};
				_julec_label_1c1a8e109:;
				{
					auto expr = &((*((*(_152440_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c1a8e8ac:;
					if (it != expr_end) {
						jule::I64 _153917_j = it - expr->begin();
						jule::Ptr<_1ece195bd_Param> *_153920_jp = it;
						{
							{
								
								if ((_153917_j >= _152713_i)) {
									_case_begin_1c1a91ace:;
									{
										goto _iter_end_1c1a8e8ac;
									}
								}
								else if (_1bc58650c_IsIgnoreIdent((*((*(_152716_p))))._field_Ident) || _1bc58650c_IsIgnoreIdent((*((*(_153920_jp))))._field_Ident) || _1bc5867c6_IsAnonIdent((*((*(_152716_p))))._field_Ident) || _1bc5867c6_IsAnonIdent((*((*(_153920_jp))))._field_Ident)) {
									_case_begin_1c1a91b56:;
									{
										goto _iter_end_1c1a8e8ac;
									}
								}
								else if (((*((*(_152716_p))))._field_Ident == (*((*(_153920_jp))))._field_Ident)) {
									_case_begin_1c1a91bcd:;
									{
										__jule_func_result=false;
										_1bc786db1_pushErr(_self_, (*((*(_152716_p))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_152716_p))))._field_Ident, &__jule_any_type4)}));
										_1bc787224_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_next_1c1a8d6d0;
									}
								}
								_match_end_1c1a919be:;
							};
						}
						_iter_next_1c1a8e8ac:;
						++it;
						_153917_j++;
						goto _iter_begin_1c1a8e8ac;
					}
					_iter_end_1c1a8e8ac:;
				};
			}
			_iter_next_1c1a8d6d0:;
			++it;
			_152713_i++;
			goto _iter_begin_1c1a8d6d0;
		}
		_iter_end_1c1a8d6d0:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1bc797267_checkFnDeclResultDup(_1bc784276_Sema* _self_, jule::Ptr<_1ece1b092_Fn>* _156140_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1ece1b515_IsVoid((*(_156140_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*((*((*(_156140_f))))._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1a95682:;
		if (it != expr_end) {
			jule::I64 _156813_i = it - expr->begin();
			jule::Ptr<_1bc583a9d_Token> *_156816_v = it;
			{
				if ((_1bc58650c_IsIgnoreIdent((*((*(_156816_v))))._field_Kind) || _1bc5867c6_IsAnonIdent((*((*(_156816_v))))._field_Kind))) {
					goto _iter_next_1c1a95682;
				};
				{
					auto expr = &((*((*(_156140_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c1a96c38:;
					if (it != expr_end) {
						jule::Ptr<_1bc5a76a4_GenericDecl> *_157320_g = it;
						{
							if (((*((*(_156816_v))))._field_Kind == (*((*(_157320_g))))._field_Ident)) {
								goto _julec_label_1c1a9783d;
							};
						}
						_iter_next_1c1a96c38:;
						++it;
						goto _iter_begin_1c1a96c38;
					}
					_iter_end_1c1a96c38:;
				};
				{
					auto expr = &((*((*(_156140_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c1a9819b:;
					if (it != expr_end) {
						jule::Ptr<_1ece195bd_Param> *_157920_p = it;
						{
							if (((*((*(_156816_v))))._field_Kind == (*((*(_157920_p))))._field_Ident)) {
								goto _julec_label_1c1a9783d;
							};
						}
						_iter_next_1c1a9819b:;
						++it;
						goto _iter_begin_1c1a9819b;
					}
					_iter_end_1c1a9819b:;
				};
				_julec_label_1c1a98e49:;
				{
					auto expr = &((*((*((*(_156140_f))))._field_Result))._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c1a998c8:;
					if (it != expr_end) {
						jule::I64 _158717_j = it - expr->begin();
						jule::Ptr<_1bc583a9d_Token> *_158720_jv = it;
						{
							{
								
								if ((_158717_j >= _156813_i)) {
									_case_begin_1c1a9a434:;
									{
										goto _iter_end_1c1a998c8;
									}
								}
								else if (((*((*(_158720_jv))))._field_Kind == (*((*(_156816_v))))._field_Kind)) {
									_case_begin_1c1a9a4ab:;
									{
										goto _julec_label_1c1a9783d;
									}
								}
								_match_end_1c1a9a324:;
							};
						}
						_iter_next_1c1a998c8:;
						++it;
						_158717_j++;
						goto _iter_begin_1c1a998c8;
					}
					_iter_end_1c1a998c8:;
				};
				goto _iter_next_1c1a95682;
				_julec_label_1c1a9783d:;
				_1bc786db1_pushErr(_self_, (*(_156816_v)), jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_156816_v))))._field_Kind, &__jule_any_type4)}));
				_1bc787224_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1c1a95682:;
			++it;
			_156813_i++;
			goto _iter_begin_1c1a95682;
		}
		_iter_end_1c1a95682:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1bc7975a8_checkFnVariadicParam(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1ece1b092_Fn>* _160645_f) {
	if (((*((*(_160645_f))))._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_1ece195bd_Param> _161013_param = (*((*(_160645_f))))._field_Params[((*((*(_160645_f))))._field_Params.len() - 1LL)];;
	if (((*(_161013_param))._field_Variadic && (*(_161013_param))._field_Reference)) {
		_1bc786db1_pushErr(_self_.ptr(), (*(_161013_param))._field_Token, jule::Str::lit("variadic storage cannot be reference", 36), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _1bc797861_checkFnDeclPrototype(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1ece1b092_Fn>* _161945_f) {
	if (((*((*(_161945_f))))._field_Exceptional && (*((*(_161945_f))))._field_Binded)) {
		_1bc786db1_pushErr(_self_.ptr(), (*((*(_161945_f))))._field_Token, jule::Str::lit("binded defines cannot be exceptional", 36), jule::Slice<jule::Any>());
		return;;
	};
	if ((*((*(_161945_f))))._field_Exceptional) {
		if (_1ece1ba32_IsEntryPoint((*(_161945_f)).ptr())) {
			_1bc786db1_pushErr(_self_.ptr(), (*((*(_161945_f))))._field_Token, jule::Str::lit("entry point cannot be exceptional", 33), jule::Slice<jule::Any>());
		} else if (_1ece1bcb8_IsInit((*(_161945_f)).ptr())) {
			_1bc786db1_pushErr(_self_.ptr(), (*((*(_161945_f))))._field_Token, jule::Str::lit("initializer function cannot be exceptional", 42), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1bc796ad5_checkDeclGenerics(_self_.ptr(), &((*((*(_161945_f))))._field_Generics))))) {
			_case_begin_1c1aa2903:;
		}
		else if ((!(_1bc796e26_checkFnDeclParamsDup(_self_.ptr(), _161945_f)))) {
			_case_begin_1c1aa297a:;
		}
		else if ((!(_1bc797267_checkFnDeclResultDup(_self_.ptr(), _161945_f)))) {
			_case_begin_1c1aa2a02:;
		}
		else if ((!(_1bc7975a8_checkFnVariadicParam(_self_, _161945_f)))) {
			_case_begin_1c1aa2a79:;
		}
		_match_end_1c1aa101c:;
	};
}



inline jule::Bool _1bc797d17_catchTraitInheritCycle(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc713a41_Trait> _164142_t1, jule::Ptr<_1bc713a41_Trait> _164158_t2, _2096a4489_StrBuilder* _164175_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_164158_t2))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1aa5164:;
		if (it != expr_end) {
			jule::Ptr<_1bc848390_TypeSymbol> _164321_i = *it;
			{
				if (((*(_164321_i))._field_Kind == nullptr)) {
					goto _iter_next_1c1aa5164;
				};
				jule::Ptr<_1bc713a41_Trait> _164717_t3 = _1bc845128_Trait((*(_164321_i))._field_Kind.ptr());;
				if ((_164142_t1 == _164717_t3)) {
					_1bc79ca97_pushCycleError(_self_.ptr(), &((*(_164158_t2))._field_Ident), &((*(_164717_t3))._field_Ident), _164175_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1bc797d17_catchTraitInheritCycle(_self_, _164142_t1, _164717_t3, _164175_message)))) {
					_1bc79ca97_pushCycleError(_self_.ptr(), &((*(_164158_t2))._field_Ident), &((*(_164717_t3))._field_Ident), _164175_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c1aa5164:;
			++it;
			goto _iter_begin_1c1aa5164;
		}
		_iter_end_1c1aa5164:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1bc798158__checkTraitDeclInherits(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc713a41_Trait>* _166048_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_166048_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1aa893c:;
		if (it != expr_end) {
			jule::I64 _166214_i = it - expr->begin();
			jule::Ptr<_1bc848390_TypeSymbol> _166221_it = *it;
			{
				if ((!(_1bc78ca32_checkType(_self_, &(_166221_it), jule::Trait<_1bc860c04_Lookup>(_self_, 3))))) {
					__jule_func_result=false;
					goto _iter_next_1c1aa893c;
				};
				jule::Ptr<_1bc713a41_Trait> _166717_t2 = _1bc845128_Trait((*(_166221_it))._field_Kind.ptr());;
				if ((_166717_t2 == nullptr)) {
					_1bc786db1_pushErr(_self_.ptr(), (*((*(_166221_it))._field_Decl))._field_Token, jule::Str::lit("trait @ cannot implement @, type should be trait", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_166048_t))))._field_Ident, &__jule_any_type4),jule::Any(_1bc841586_Str((*(_166221_it))._field_Kind.ptr()), &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1c1aa893c;
				};
				{
					auto expr = &((*((*(_166048_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c1aabc3c:;
					if (it != expr_end) {
						jule::I64 _167317_j = it - expr->begin();
						jule::Ptr<_1bc848390_TypeSymbol> _167320_it2 = *it;
						{
							if ((_167317_j >= _166214_i)) {
								goto _iter_end_1c1aabc3c;
							};
							if ((((*(_167320_it2))._field_Kind != nullptr) && _1bc8418c7_Equal((*(_166221_it))._field_Kind, (*(_167320_it2))._field_Kind))) {
								_1bc786db1_pushErr(_self_.ptr(), (*((*(_166221_it))._field_Decl))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_166717_t2))._field_Ident, &__jule_any_type4)}));
								__jule_func_result=false;
								goto _iter_end_1c1aabc3c;
							};
						}
						_iter_next_1c1aabc3c:;
						++it;
						_167317_j++;
						goto _iter_begin_1c1aabc3c;
					}
					_iter_end_1c1aabc3c:;
				};
				if (((*(_166048_t)) == _166717_t2)) {
					_1bc786db1_pushErr(_self_.ptr(), (*((*(_166221_it))._field_Decl))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_166048_t))))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
				} else {
					_2096a4489_StrBuilder _168721_message = static__2096a48da_New(64LL);;
					__jule_func_result=(__jule_func_result && _1bc797d17_catchTraitInheritCycle(_self_, (*(_166048_t)), _166717_t2, &(_168721_message)));
					if ((_2096a5bc7_Len(&_168721_message) > 0LL)) {
						jule::Str _169025_errMsg = _2096a5743_Str(&_168721_message);;
						_2096a5941_Clear(&_168721_message);
						_1bc79ca97_pushCycleError(_self_.ptr(), &((*((*(_166048_t))))._field_Ident), &((*(_166717_t2))._field_Ident), &(_168721_message));
						_169025_errMsg+=_2096a5743_Str(&_168721_message);
						_1bc786db1_pushErr(_self_.ptr(), (*((*(_166221_it))._field_Decl))._field_Token, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_169025_errMsg, &__jule_any_type4)}));
					};
				};
			}
			_iter_next_1c1aa893c:;
			++it;
			_166214_i++;
			goto _iter_begin_1c1aa893c;
		}
		_iter_end_1c1aa893c:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1bc798411_checkTraitDeclInherits(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc713a41_Trait>* _170147_t) {
	{
		auto expr = &((*((*(_170147_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1ab353a:;
		if (it != expr_end) {
			jule::I64 _170214_i = it - expr->begin();
			jule::Ptr<_1bc848390_TypeSymbol> _170221_it = *it;
			{
				jule::Ptr<_1bc713a41_Trait> _170317_t1 = _1bc845128_Trait((*(_170221_it))._field_Kind.ptr());;
				{
					auto expr = &((*((*(_170147_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c1ab4a9c:;
					if (it != expr_end) {
						jule::I64 _170418_j = it - expr->begin();
						jule::Ptr<_1bc848390_TypeSymbol> _170425_it2 = *it;
						{
							if ((_170418_j == _170214_i)) {
								goto _iter_next_1c1ab4a9c;
							};
							jule::Ptr<_1bc713a41_Trait> _170821_t2 = _1bc845128_Trait((*(_170425_it2))._field_Kind.ptr());;
							{
								auto expr = &((*(_170317_t1))._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1c1ab6340:;
								if (it != expr_end) {
									jule::Ptr<_1ece1b092_Fn> _170929_t1m = *it;
									{
										jule::Ptr<_1ece1b092_Fn> _171025_t2m = _1bc7146e0_FindMethod(_170821_t2.ptr(), (*(_170929_t1m))._field_Ident);;
										if ((_171025_t2m == nullptr)) {
											goto _iter_next_1c1ab6340;
										};
										jule::Ptr<_1ece1de96_FnIns> _171421_t1f = _1bc7918e3_getTraitCheckFnKind(_self_, &(_170929_t1m));;
										jule::Ptr<_1ece1de96_FnIns> _171521_t2f = _1bc7918e3_getTraitCheckFnKind(_self_, &(_171025_t2m));;
										if ((!(_1ece1ee0e_equalTrait(_171421_t1f, &(_171521_t2f))))) {
											_1bc786db1_pushErr(_self_.ptr(), (*((*(_170221_it))._field_Decl))._field_Token, jule::Str::lit("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87), jule::Slice<jule::Any>::make({jule::Any((*((*(_170147_t))))._field_Ident, &__jule_any_type4),jule::Any((*(_170821_t2))._field_Ident, &__jule_any_type4),jule::Any(_1ece20d44_GetKindStr(_171421_t1f.ptr(), true), &__jule_any_type4),jule::Any(_1ece20d44_GetKindStr(_171521_t2f.ptr(), true), &__jule_any_type4)}));
											return;;
										};
									}
									_iter_next_1c1ab6340:;
									++it;
									goto _iter_begin_1c1ab6340;
								}
								_iter_end_1c1ab6340:;
							};
						}
						_iter_next_1c1ab4a9c:;
						++it;
						_170418_j++;
						goto _iter_begin_1c1ab4a9c;
					}
					_iter_end_1c1ab4a9c:;
				};
			}
			_iter_next_1c1ab353a:;
			++it;
			_170214_i++;
			goto _iter_begin_1c1ab353a;
		}
		_iter_end_1c1ab353a:;
	};
}



inline void _1bc7986b9_checkTraitDeclMethod(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1ece1b092_Fn>* _172645_f) {
	if (_1bc58650c_IsIgnoreIdent((*((*(_172645_f))))._field_Ident)) {
		_1bc786db1_pushErr(_self_.ptr(), (*((*(_172645_f))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1bc5867c6_IsAnonIdent((*((*(_172645_f))))._field_Ident)) {
		_1bc786db1_pushErr(_self_.ptr(), (*((*(_172645_f))))._field_Token, jule::Str::lit("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	(*((*(_172645_f))))._field_sema=_self_;
	_1bc797861_checkFnDeclPrototype(_self_, _172645_f);
	jule::Ptr<_1ece1de96_FnIns> _173413_ins = _1ece1c802_instance((*(_172645_f)));;
	_1bc792d45_reloadFnInsTypes(_self_, _173413_ins);
	(*(_173413_ins))._field_reloaded=true;
	_1ece1cb10_appendInstance((*(_172645_f)).ptr(), &(_173413_ins));
}



inline void _1bc798972_checkTraitDeclMethods(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc713a41_Trait>* _174046_t) {
	{
		auto expr = &((*((*(_174046_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1abd358:;
		if (it != expr_end) {
			jule::I64 _174114_i = it - expr->begin();
			jule::Ptr<_1ece1b092_Fn> _174121_f = *it;
			{
				_1bc7986b9_checkTraitDeclMethod(_self_, &(_174121_f));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_1bc714d72_findMethodInherit((*(_174046_t)).ptr(), &((*(_174121_f))._field_Ident)) != nullptr)) {
					_1bc786db1_pushErr(_self_.ptr(), (*(_174121_f))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_174121_f))._field_Ident, &__jule_any_type4)}));
					_1bc787224_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					goto _iter_next_1c1abd358;
				};
				_julec_label_1c1ac0239:;
				{
					auto expr = &((*((*(_174046_t))))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c1ac12a1:;
					if (it != expr_end) {
						jule::I64 _175717_j = it - expr->begin();
						jule::Ptr<_1ece1b092_Fn> _175720_jf = *it;
						{
							{
								
								if ((_175717_j >= _174114_i)) {
									_case_begin_1c1ac1d0c:;
									{
										goto _iter_end_1c1ac12a1;
									}
								}
								else if (((*(_174121_f))._field_Ident == (*(_175720_jf))._field_Ident)) {
									_case_begin_1c1ac1d84:;
									{
										_1bc786db1_pushErr(_self_.ptr(), (*(_174121_f))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_174121_f))._field_Ident, &__jule_any_type4)}));
										_1bc787224_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_end_1c1ac12a1;
									}
								}
								_match_end_1c1ac1bec:;
							};
						}
						_iter_next_1c1ac12a1:;
						++it;
						_175717_j++;
						goto _iter_begin_1c1ac12a1;
					}
					_iter_end_1c1ac12a1:;
				};
			}
			_iter_next_1c1abd358:;
			++it;
			_174114_i++;
			goto _iter_begin_1c1abd358;
		}
		_iter_end_1c1abd358:;
	};
}



inline void _1bc798c2a_checkTraitDecl(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc713a41_Trait>* _177639_t) {
	if (_1bc58650c_IsIgnoreIdent((*((*(_177639_t))))._field_Ident)) {
		_1bc786db1_pushErr(_self_.ptr(), (*((*(_177639_t))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1bc787ac6_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_177639_t)))), &((*((*(_177639_t))))._field_Ident), false)) {
		_1bc786db1_pushErr(_self_.ptr(), (*((*(_177639_t))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_177639_t))))._field_Ident, &__jule_any_type4)}));
		_1bc787224_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1bc798411_checkTraitDeclInherits(_self_, _177639_t);
	_1bc798972_checkTraitDeclMethods(_self_, _177639_t);
}



inline jule::Bool _1bc798eb1_checkTraitDecls(jule::Ptr<_1bc784276_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1ac70dc:;
		if (it != expr_end) {
			jule::Ptr<_1bc713a41_Trait> _179021_t = *it;
			{
				_1bc798c2a_checkTraitDecl(_self_, &(_179021_t));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c1ac70dc:;
			++it;
			goto _iter_begin_1c1ac70dc;
		}
		_iter_end_1c1ac70dc:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1bc7993ac_checkTraitImplMethods(_1bc784276_Sema* _self_, jule::Ptr<_1bc713a41_Trait>* _180045_base, jule::Ptr<_1bc73c1b8_Impl>* _180060_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_180060_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1ac8ae4:;
		if (it != expr_end) {
			jule::Ptr<_1ece1b092_Fn> *_180216_f = it;
			{
				if ((_1bc7146e0_FindMethod((*(_180045_base)).ptr(), (*((*(_180216_f))))._field_Ident) == nullptr)) {
					_1bc786db1_pushErr(_self_, (*((*(_180216_f))))._field_Token, jule::Str::lit("undefined identifier: trait @ has no define @", 45), jule::Slice<jule::Any>::make({jule::Any((*((*(_180045_base))))._field_Ident, &__jule_any_type4),jule::Any((*((*(_180216_f))))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1c1ac8ae4:;
			++it;
			goto _iter_begin_1c1ac8ae4;
		}
		_iter_end_1c1ac8ae4:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1bc7997a8_implToStruct(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc5bb333_Struct>* _181137_dest, jule::Ptr<_1bc73c1b8_Impl>* _181157_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_181157_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1acb245:;
		if (it != expr_end) {
			jule::Ptr<_1ece1b092_Fn> _181521_f = *it;
			{
				if (((_1bc5bbe9e_FindMethod((*(_181137_dest)).ptr(), (*(_181521_f))._field_Ident, (*(_181521_f))._field_Statically) != nullptr) || (_1bc5bc631_FindField((*(_181137_dest)).ptr(), (*(_181521_f))._field_Ident) != nullptr))) {
					_1bc786db1_pushErr(_self_.ptr(), (*(_181521_f))._field_Token, jule::Str::lit("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*((*(_181137_dest))))._field_Ident, &__jule_any_type4),jule::Any((*(_181521_f))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1c1acb245;
				};
				if ((((*((*(_181137_dest))))._field_Generics.len() > 0LL) && ((*(_181521_f))._field_Generics.len() > 0LL))) {
					{
						auto expr = &((*(_181521_f))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c1ace006:;
						if (it != expr_end) {
							jule::Ptr<_1bc5a76a4_GenericDecl> _182324_fg = *it;
							{
								{
									auto expr = &((*((*(_181137_dest))))._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1c1ace952:;
									if (it != expr_end) {
										jule::Ptr<_1bc5a76a4_GenericDecl> _182428_dg = *it;
										{
											if (((*(_182324_fg))._field_Ident == (*(_182428_dg))._field_Ident)) {
												_1bc786db1_pushErr(_self_.ptr(), (*(_182324_fg))._field_Token, jule::Str::lit("methods cannot have same generic identifier with owner same time", 64), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1c1ace952:;
										++it;
										goto _iter_begin_1c1ace952;
									}
									_iter_end_1c1ace952:;
								};
							}
							_iter_next_1c1ace006:;
							++it;
							goto _iter_begin_1c1ace006;
						}
						_iter_end_1c1ace006:;
					};
				};
				_1bc787e39_checkDirectives(_self_, &((*(_181521_f))._field_Directives), jule::Any(_181521_f, &__jule_any_type64));
				(*(_181521_f))._field_sema=_self_;
				(*(_181521_f))._field_Owner=(*(_181137_dest));
				{ jule::Slice<jule::Ptr<_1ece1b092_Fn>> &__jule_push_dest = (*((*(_181137_dest))))._field_Methods; __jule_push_dest.push(_181521_f); };
			}
			_iter_next_1c1acb245:;
			++it;
			goto _iter_begin_1c1acb245;
		}
		_iter_end_1c1acb245:;
	};
	{
		auto expr = &((*((*(_181157_ipl))))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1acb6da:;
		if (it != expr_end) {
			jule::Ptr<_1bc7a750d_Var> _184021_v = *it;
			{
				;
				if (((_1bc5bbe9e_FindMethod((*(_181137_dest)).ptr(), (*(_184021_v))._field_Ident, true) != nullptr) || (_1bc5bc2e0_FindStatic((*(_181137_dest)).ptr(), (*(_184021_v))._field_Ident) != nullptr))) {
					_1bc786db1_pushErr(_self_.ptr(), (*(_184021_v))._field_Token, jule::Str::lit("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*((*(_181137_dest))))._field_Ident, &__jule_any_type4),jule::Any((*(_184021_v))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1c1acb6da;
				};
				{ jule::Slice<jule::Ptr<_1bc7a750d_Var>> &__jule_push_dest = (*((*(_181137_dest))))._field_Statics; __jule_push_dest.push(_184021_v); };
			}
			_iter_next_1c1acb6da:;
			++it;
			goto _iter_begin_1c1acb6da;
		}
		_iter_end_1c1acb6da:;
	};
	return __jule_func_result;;
}



inline void _1bc799a61_implTrait(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc73c1b8_Impl>* _185334_decl) {
	jule::Ptr<_1bc8411bd_TypeKind> _185413_base_t = _1bc78d66a_selectType(_self_, &((*((*(_185334_decl))))._field_Base));;
	if ((_185413_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1bc713a41_Trait> _185813_base = _1bc845128_Trait(_185413_base_t.ptr());;
	if ((_185813_base == nullptr)) {
		_1bc786db1_pushErr(_self_.ptr(), (*((*((*(_185334_decl))))._field_Base))._field_Token, jule::Str::lit("invalid base type for impl: @", 29), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str(_185413_base_t.ptr()), &__jule_any_type4)}));
		_1bc787224_pushSuggestion(_self_.ptr(), jule::Str::lit("expected trait, use a trait", 27), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1bc8411bd_TypeKind> _186513_destT = _1bc78d66a_selectType(_self_, &((*((*(_185334_decl))))._field_Dest));;
	if ((_186513_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1bc5be0b1_StructIns> _186913_destS = _1bc844d92_Struct(_186513_destT.ptr());;
	if ((_186913_destS == nullptr)) {
		_1bc786db1_pushErr(_self_.ptr(), (*((*((*(_185334_decl))))._field_Dest))._field_Token, jule::Str::lit("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str(_186513_destT.ptr()), &__jule_any_type4)}));
		_1bc787224_pushSuggestion(_self_.ptr(), jule::Str::lit("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1bc5bb333_Struct> _187613_dest = (*(_186913_destS))._field_Decl;;
	if ((_1bc5899d8_Dir((*((*(_187613_dest))._field_Token))._field_File.ptr()) != _1bc5899d8_Dir((*((*(_self_))._field_file))._field_File.ptr()))) {
		_1bc786db1_pushErr(_self_.ptr(), (*((*((*(_185334_decl))))._field_Dest))._field_Token, jule::Str::lit("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	_1bc7a57c5_pushImplemented(_185813_base, &(_187613_dest));
	_1bc7a5ab1_pushImplements(&(_187613_dest), _185813_base);
	if (((*((*(_185334_decl))))._field_Statics.len() > 0LL)) {
		_1bc786db1_pushErr(_self_.ptr(), (*((*((*(_185334_decl))))._field_Statics[0LL]))._field_Token, jule::Str::lit("trait implementations cannot implement static field", 51), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1bc7993ac_checkTraitImplMethods(_self_.ptr(), &(_185813_base), _185334_decl)))) {
			_case_begin_1c1add8c8:;
		}
		else if ((!(_1bc7997a8_implToStruct(_self_, &(_187613_dest), _185334_decl)))) {
			_case_begin_1c1add950:;
		}
		_match_end_1c1adae14:;
	};
}



inline void _1bc799d19_implStruct(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc73c1b8_Impl>* _189635_decl) {
	jule::Ptr<_1bc8411bd_TypeKind> _189713_destT = _1bc78d66a_selectType(_self_, &((*((*(_189635_decl))))._field_Dest));;
	if ((_189713_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1bc5be0b1_StructIns> _190113_destS = _1bc844d92_Struct(_189713_destT.ptr());;
	if ((_190113_destS == nullptr)) {
		_1bc786db1_pushErr(_self_.ptr(), (*((*((*(_189635_decl))))._field_Dest))._field_Token, jule::Str::lit("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str(_189713_destT.ptr()), &__jule_any_type4)}));
		_1bc787224_pushSuggestion(_self_.ptr(), jule::Str::lit("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1bc5bb333_Struct> _190813_dest = (*(_190113_destS))._field_Decl;;
	if ((_1bc5899d8_Dir((*((*(_190813_dest))._field_Token))._field_File.ptr()) != _1bc5899d8_Dir((*((*(_self_))._field_file))._field_File.ptr()))) {
		_1bc786db1_pushErr(_self_.ptr(), (*((*((*(_189635_decl))))._field_Dest))._field_Token, jule::Str::lit("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1bc7997a8_implToStruct(_self_, &(_190813_dest), _189635_decl)))) {
			_case_begin_1c1ae4538:;
		}
		_match_end_1c1ae2c1d:;
	};
}



inline void _1bc79a0c2_implImpl(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc73c1b8_Impl>* _192033_decl) {
	{
		
		if (_1bc73c581_IsTraitImpl((*(_192033_decl)).ptr())) {
			_case_begin_1c1ae511b:;
			{
				_1bc799a61_implTrait(_self_, _192033_decl);
			}
		}
		else if (_1bc73c817_IsStructImpl((*(_192033_decl)).ptr())) {
			_case_begin_1c1ae5193:;
			{
				_1bc799d19_implStruct(_self_, _192033_decl);
			}
		}
		_match_end_1c1ae500b:;
	};
}



inline void _1bc79a435_checkVarDecl(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc7a750d_Var>* _193137_decl, jule::Trait<_1bc860c04_Lookup> _193153_l) {
	if (_1bc58650c_IsIgnoreIdent((*((*(_193137_decl))))._field_Ident)) {
		_1bc786db1_pushErr(_self_.ptr(), (*((*(_193137_decl))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1bc7a7b29_IsTypeInferred((*(_193137_decl)).ptr())) {
		if ((!(_1bc7a7893_IsInitialized((*(_193137_decl)).ptr())))) {
			_1bc786db1_pushErr(_self_.ptr(), (*((*(_193137_decl))))._field_Token, jule::Str::lit("type inferred declarations should have a initializer expression", 63), jule::Slice<jule::Any>());
		};
	} else {
		_1bc78ca32_checkType(_self_, &((*((*(_193137_decl))))._field_Kind), _193153_l);
	};
	if ((*((*(_193137_decl))))._field_Reference) {
		if ((*((*(_193137_decl))))._field_Constant) {
			_1bc786db1_pushErr(_self_.ptr(), (*((*(_193137_decl))))._field_Token, jule::Str::lit("references cannot be constant", 29), jule::Slice<jule::Any>());
		};
		if ((*((*(_193137_decl))))._field_Statically) {
			_1bc786db1_pushErr(_self_.ptr(), (*((*(_193137_decl))))._field_Token, jule::Str::lit("static variables cannot be reference", 36), jule::Slice<jule::Any>());
		};
	};
	if ((!(_1bc7a7893_IsInitialized((*(_193137_decl)).ptr())))) {
		if ((*((*(_193137_decl))))._field_Constant) {
			_1bc786db1_pushErr(_self_.ptr(), (*((*(_193137_decl))))._field_Token, jule::Str::lit("missing expression for constant variable initialization", 55), jule::Slice<jule::Any>());
		};
		if ((*((*(_193137_decl))))._field_Statically) {
			_1bc786db1_pushErr(_self_.ptr(), (*((*(_193137_decl))))._field_Token, jule::Str::lit("static variables must be have initialize expression", 51), jule::Slice<jule::Any>());
		};
		if ((*((*(_193137_decl))))._field_Reference) {
			_1bc786db1_pushErr(_self_.ptr(), (*((*(_193137_decl))))._field_Token, jule::Str::lit("reference variables must be have lvalue initialize expression", 61), jule::Slice<jule::Any>());
		};
	};
}



inline void _1bc79a6dd_checkGlobalVarDecl(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc7a750d_Var>* _196843_decl) {
	if (_1bc787ac6_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_196843_decl)))), &((*((*(_196843_decl))))._field_Ident), (*((*(_196843_decl))))._field_Binded)) {
		_1bc786db1_pushErr(_self_.ptr(), (*((*(_196843_decl))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_196843_decl))))._field_Ident, &__jule_any_type4)}));
		_1bc787224_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_196843_decl))))._field_Binded && (*((*(_196843_decl))))._field_Constant)) {
		_1bc786db1_pushErr(_self_.ptr(), (*((*(_196843_decl))))._field_Token, jule::Str::lit("binded variables cannot be constant", 35), jule::Slice<jule::Any>());
	};
	if ((((!((*((*(_196843_decl))))._field_Binded)) && (!((*((*(_196843_decl))))._field_Constant))) && (!((*((*(_196843_decl))))._field_Statically)))) {
		_1bc786db1_pushErr(_self_.ptr(), (*((*(_196843_decl))))._field_Token, jule::Str::lit("global variables must be static", 31), jule::Slice<jule::Any>());
		_1bc787224_pushSuggestion(_self_.ptr(), jule::Str::lit("use \"static\" keyword to define", 30), jule::Slice<jule::Any>());
	};
	_1bc787e39_checkDirectives(_self_, &((*((*(_196843_decl))))._field_Directives), jule::Any((*(_196843_decl)), &__jule_any_type8));
	_1bc79a435_checkVarDecl(_self_, _196843_decl, jule::Trait<_1bc860c04_Lookup>(_self_, 3));
}



inline jule::Bool _1bc79a974_checkGlobalDecls(jule::Ptr<_1bc784276_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1b031b2:;
		if (it != expr_end) {
			jule::Ptr<_1bc7a750d_Var> _198621_decl = *it;
			{
				_1bc79a6dd_checkGlobalVarDecl(_self_, &(_198621_decl));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c1b031b2:;
			++it;
			goto _iter_begin_1c1b031b2;
		}
		_iter_end_1c1b031b2:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1bc79ad70_checkStructTraitImpl(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc5bb333_Struct>* _199645_strct, jule::Ptr<_1bc713a41_Trait>* _199666_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_199666_trt))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1b04aba:;
		if (it != expr_end) {
			jule::Ptr<_1ece1b092_Fn> _199721_tf = *it;
			{
				jule::Bool _199817_exist = false;;
				jule::Ptr<_1ece1b092_Fn> _199917_sf = _1bc5bbe9e_FindMethod((*(_199645_strct)).ptr(), (*(_199721_tf))._field_Ident, (*(_199721_tf))._field_Statically);;
				jule::Ptr<_1ece1de96_FnIns> _200013_tfK = _1bc7918e3_getTraitCheckFnKind(_self_, &(_199721_tf));;
				if ((_199917_sf != nullptr)) {
					jule::Ptr<_1ece1de96_FnIns> _200221_sfK = _1bc7918e3_getTraitCheckFnKind(_self_, &(_199917_sf));;
					_199817_exist=_1ece1ee0e_equalTrait(_200013_tfK, &(_200221_sfK));
				};
				if (_199817_exist) {
					jule::Ptr<_1bc594a59_Directive> _200617_d = _1bc83921b_findDirective(&((*(_199917_sf))._field_Directives), jule::Str::lit("deprecated", 10));;
					if ((_200617_d != nullptr)) {
						_1bc786db1_pushErr(_self_.ptr(), (*(_200617_d))._field_Tag, jule::Str::lit("trait implementations cannot have deprecated code", 49), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_1bc786db1_pushErr(_self_.ptr(), (*((*(_199645_strct))))._field_Token, jule::Str::lit("trait @ derived but not implemented define @", 44), jule::Slice<jule::Any>::make({jule::Any((*((*(_199666_trt))))._field_Ident, &__jule_any_type4),jule::Any(_1ece20d44_GetKindStr(_200013_tfK.ptr(), true), &__jule_any_type4)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1c1b04aba:;
			++it;
			goto _iter_begin_1c1b04aba;
		}
		_iter_end_1c1b04aba:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1bc79b1b1_checkStructImpls(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc5bb333_Struct>* _202041_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_202041_s))))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1b0a791:;
		if (it != expr_end) {
			jule::Ptr<_1bc713a41_Trait> _202221_trt = *it;
			{
				__jule_func_result=(_1bc79ad70_checkStructTraitImpl(_self_, _202041_s, &(_202221_trt)) && __jule_func_result);
			}
			_iter_next_1c1b0a791:;
			++it;
			goto _iter_begin_1c1b0a791;
		}
		_iter_end_1c1b0a791:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1bc79b502_checkStructFields(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc5bb333_Struct>* _202842_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_202842_st))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1b0bc6a:;
		if (it != expr_end) {
			jule::Ptr<_1bc5b8440_Field> _203021_f = *it;
			{
				(*(_203021_f))._field_Owner=(*(_202842_st));
				{
					auto expr = &((*((*(_202842_st))))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c1b0c980:;
					if (it != expr_end) {
						jule::Ptr<_1bc5b8440_Field> _203220_cf = *it;
						{
							if ((_203021_f == _203220_cf)) {
								goto _iter_end_1c1b0c980;
							} else if (((*(_203021_f))._field_Ident == (*(_203220_cf))._field_Ident)) {
								_1bc786db1_pushErr(_self_.ptr(), (*(_203021_f))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_203021_f))._field_Ident, &__jule_any_type4)}));
								_1bc787224_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1c1b0c980:;
						++it;
						goto _iter_begin_1c1b0c980;
					}
					_iter_end_1c1b0c980:;
				};
			}
			_iter_next_1c1b0bc6a:;
			++it;
			goto _iter_begin_1c1b0bc6a;
		}
		_iter_end_1c1b0bc6a:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1bc79b7aa_checkStructDecl(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc5bb333_Struct>* _204540_s) {
	if (_1bc58650c_IsIgnoreIdent((*((*(_204540_s))))._field_Ident)) {
		_1bc786db1_pushErr(_self_.ptr(), (*((*(_204540_s))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1bc787ac6_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_204540_s)))), &((*((*(_204540_s))))._field_Ident), (*((*(_204540_s))))._field_Binded)) {
		_1bc786db1_pushErr(_self_.ptr(), (*((*(_204540_s))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_204540_s))))._field_Ident, &__jule_any_type4)}));
		_1bc787224_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1bc787e39_checkDirectives(_self_, &((*((*(_204540_s))))._field_Directives), jule::Any((*(_204540_s)), &__jule_any_type65));
	{
		
		if ((!(_1bc796ad5_checkDeclGenerics(_self_.ptr(), &((*((*(_204540_s))))._field_Generics))))) {
			_case_begin_1c1b12512:;
		}
		else if ((!(_1bc79b502_checkStructFields(_self_, _204540_s)))) {
			_case_begin_1c1b12578:;
		}
		else if ((!(_1bc79b1b1_checkStructImpls(_self_, _204540_s)))) {
			_case_begin_1c1b125de:;
		}
		else if ((!(_1bc79c3e3_checkFuncDeclsBy(_self_, &((*((*(_204540_s))))._field_Methods))))) {
			_case_begin_1c1b12666:;
		}
		_match_end_1c1b123e1:;
	};
}



inline jule::Bool _1bc79ba41_checkStructDecls(jule::Ptr<_1bc784276_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1b14888:;
		if (it != expr_end) {
			jule::Ptr<_1bc5bb333_Struct> _206521_s = *it;
			{
				_1bc79b7aa_checkStructDecl(_self_, &(_206521_s));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c1b14888:;
			++it;
			goto _iter_begin_1c1b14888;
		}
		_iter_end_1c1b14888:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1bc79bce9_checkAnonFuncDecl(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1ece1b092_Fn>* _207542_f) {
	(*((*(_207542_f))))._field_sema=_self_;
	_1bc797861_checkFnDeclPrototype(_self_, _207542_f);
}



inline void _1bc79c0a2_checkFuncDecl(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1ece1b092_Fn>* _208038_f) {
	if (_1bc58650c_IsIgnoreIdent((*((*(_208038_f))))._field_Ident)) {
		_1bc786db1_pushErr(_self_.ptr(), (*((*(_208038_f))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1ece1c04e_IsAnon((*(_208038_f)).ptr())) {
		_1bc786db1_pushErr(_self_.ptr(), (*((*(_208038_f))))._field_Token, jule::Str::lit("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	_1bc787e39_checkDirectives(_self_, &((*((*(_208038_f))))._field_Directives), jule::Any((*(_208038_f)), &__jule_any_type64));
	_1bc79bce9_checkAnonFuncDecl(_self_, _208038_f);
	if ((((*((*(_208038_f))))._field_Owner == nullptr) && _1bc787ac6_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_208038_f)))), &((*((*(_208038_f))))._field_Ident), (*((*(_208038_f))))._field_Binded))) {
		if ((*((*(_208038_f))))._field_Ident.equal("init", 4)) {
			jule::Ptr<_1ece1b092_Fn> _209217_init = _1bc78580a_FindFn(_self_.ptr(), jule::Str::lit("init", 4), false);;
			if ((_209217_init != nullptr)) {
				return;;
			};
		};
		_1bc786db1_pushErr(_self_.ptr(), (*((*(_208038_f))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_208038_f))))._field_Ident, &__jule_any_type4)}));
		_1bc787224_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1bc79c3e3_checkFuncDeclsBy(jule::Ptr<_1bc784276_Sema> _self_, jule::Slice<jule::Ptr<_1ece1b092_Fn>>* _210241_funcs) {
	{
		auto expr = _210241_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1b1ba6b:;
		if (it != expr_end) {
			jule::Ptr<_1ece1b092_Fn> _210321_f = *it;
			{
				_1bc79c0a2_checkFuncDecl(_self_, &(_210321_f));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_1c1b1ba6b:;
			++it;
			goto _iter_begin_1c1b1ba6b;
		}
		_iter_end_1c1b1ba6b:;
	};
	return true;;
}



inline jule::Bool _1bc79c679_checkFuncDecls(jule::Ptr<_1bc784276_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1bc79c3e3_checkFuncDeclsBy(_self_, &((*((*(_self_))._field_file))._field_Funcs));
	return __jule_func_result;;
}



inline void _1bc79ca97_pushCycleError(_1bc784276_Sema* _self_, jule::Str* _211830_st1, jule::Str* _211841_st2, _2096a4489_StrBuilder* _211856_message) {
	;
	jule::Str _21209_refersTo = _1ed6c7d04_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_211830_st1)), &__jule_any_type4),jule::Any((*(_211841_st2)), &__jule_any_type4)}));;
	jule::Str _21219_m = _2096a5743_Str(_211856_message);;
	_2096a4e4b_WriteStr(_211856_message, _1ed63935e_Repeat(jule::Str::lit(" ", 1), 7LL));
	_2096a4e4b_WriteStr(_211856_message, _21209_refersTo);
	_2096a5204_WriteByte(_211856_message, '\n');
	_2096a4e4b_WriteStr(_211856_message, _21219_m);
}



inline void _1bc79d24b_checkPackageDecls(jule::Ptr<_1bc784276_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1b23699:;
		if (it != expr_end) {
			jule::Ptr<_1bc80a50b_SymbolTable> _214521_f = *it;
			{
				_1bc786993_setCurrentFile(_self_.ptr(), _214521_f);
				if ((!(_1bc794a06_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1c1b23699:;
			++it;
			goto _iter_begin_1c1b23699;
		}
		_iter_end_1c1b23699:;
	};
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1b23b50:;
		if (it != expr_end) {
			jule::Ptr<_1bc80a50b_SymbolTable> _215221_f = *it;
			{
				_1bc786993_setCurrentFile(_self_.ptr(), _215221_f);
				if ((!(_1bc798eb1_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1c1b23b50:;
			++it;
			goto _iter_begin_1c1b23b50;
		}
		_iter_end_1c1b23b50:;
	};
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1b24b73:;
		if (it != expr_end) {
			jule::Ptr<_1bc80a50b_SymbolTable> _215921_f = *it;
			{
				_1bc786993_setCurrentFile(_self_.ptr(), _215921_f);
				if ((!(_1bc79a974_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1c1b24b73:;
			++it;
			goto _iter_begin_1c1b24b73;
		}
		_iter_end_1c1b24b73:;
	};
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1b25bb8:;
		if (it != expr_end) {
			jule::Ptr<_1bc80a50b_SymbolTable> _216621_f = *it;
			{
				_1bc786993_setCurrentFile(_self_.ptr(), _216621_f);
				{
					
					if ((!(_1bc79c679_checkFuncDecls(_self_)))) {
						_case_begin_1c1b272c4:;
					}
					else if ((!(_1bc79ba41_checkStructDecls(_self_)))) {
						_case_begin_1c1b2733a:;
					}
					else {
						_case_begin_1c1b2725d:;
						{
							goto _iter_next_1c1b25bb8;
						}
					}
					_match_end_1c1b27208:;
				};
				return;;
			}
			_iter_next_1c1b25bb8:;
			++it;
			goto _iter_begin_1c1b25bb8;
		}
		_iter_end_1c1b25bb8:;
	};
}



inline void _1bc79d5ae_checkDataForTypeInference(_1bc784276_Sema* _self_, jule::Ptr<_1bc8108a7_Data>* _217845_d, jule::Ptr<_1bc583a9d_Token>* _217856_err_token) {
	{
		
		if (_1bc810c5e_IsNil((*(_217845_d)).ptr())) {
			_case_begin_1c1b28429:;
			{
				_1bc786db1_pushErr(_self_, (*(_217856_err_token)), jule::Str::lit("nil is cannot use with type inferred definitions", 48), jule::Slice<jule::Any>());
			}
		}
		else if (_1bc810ee5_IsVoid((*(_217845_d)).ptr())) {
			_case_begin_1c1b284a1:;
			{
				_1bc786db1_pushErr(_self_, (*(_217856_err_token)), jule::Str::lit("void data is cannot use for type inferred definitions", 53), jule::Slice<jule::Any>());
			}
		}
		else if ((*((*((*(_217845_d))))._field_Kind))._field_Variadic) {
			_case_begin_1c1b28528:;
			{
				_1bc786db1_pushErr(_self_, (*(_217856_err_token)), jule::Str::lit("invalid expression for type inference", 37), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c1b28308:;
	};
}



inline void _1bc79d867_checkVarValue(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc7a750d_Var>* _219038_v) {
	if (_1bc7a7b29_IsTypeInferred((*(_219038_v)).ptr())) {
		(*((*(_219038_v))))._field_Kind=jule::new_ptr<_1bc848390_TypeSymbol>(_1bc848390_TypeSymbol{._field_Kind=(*((*((*((*(_219038_v))))._field_Value))._field_Data))._field_Kind});
		_1bc79d5ae_checkDataForTypeInference(_self_.ptr(), &((*((*((*(_219038_v))))._field_Value))._field_Data), &((*((*((*((*(_219038_v))))._field_Value))._field_Expr))._field_Token));
		_1bc793c58_checkValidityForInitExpr(_self_, (*((*(_219038_v))))._field_Mutable, (*((*(_219038_v))))._field_Reference, &((*((*((*(_219038_v))))._field_Kind))._field_Kind), &((*((*((*(_219038_v))))._field_Value))._field_Data), &((*((*((*((*(_219038_v))))._field_Value))._field_Expr))._field_Token));
	} else {
		jule::Ptr<_1bc8505b7_Arr> _220317_arr = _1bc8445de_Arr((*((*((*(_219038_v))))._field_Kind))._field_Kind.ptr());;
		if ((_220317_arr != nullptr)) {
			if ((*(_220317_arr))._field_Auto) {
				jule::Ptr<_1bc8505b7_Arr> _220621_dataArr = _1bc8445de_Arr((*((*((*((*(_219038_v))))._field_Value))._field_Data))._field_Kind.ptr());;
				if ((_220621_dataArr != nullptr)) {
					(*(_220317_arr))._field_N=(*(_220621_dataArr))._field_N;
				};
			};
		};
		if (_1bc78e8be_checkAssignType(_self_, (*((*(_219038_v))))._field_Reference, &((*((*((*(_219038_v))))._field_Kind))._field_Kind), &((*((*((*(_219038_v))))._field_Value))._field_Data), (*((*((*((*(_219038_v))))._field_Value))._field_Expr))._field_Token)) {
			_1bc793c58_checkValidityForInitExpr(_self_, (*((*(_219038_v))))._field_Mutable, (*((*(_219038_v))))._field_Reference, &((*((*((*(_219038_v))))._field_Kind))._field_Kind), &((*((*((*(_219038_v))))._field_Value))._field_Data), &((*((*((*((*(_219038_v))))._field_Value))._field_Expr))._field_Token));
		};
	};
	if (((*((*(_219038_v))))._field_Reference && (!(_1bc85c6b2_isValidForRef(&((*((*((*(_219038_v))))._field_Kind))._field_Kind)))))) {
		_1bc786db1_pushErr(_self_.ptr(), (*((*(_219038_v))))._field_Token, jule::Str::lit("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*((*((*(_219038_v))))._field_Kind))._field_Kind.ptr()), &__jule_any_type4)}));
	};
	if ((*((*(_219038_v))))._field_Constant) {
		if (((!(_1bc81127b_IsConst((*((*((*(_219038_v))))._field_Value))._field_Data.ptr()))) && (!(_1bc8458cb_comptime((*((*((*((*(_219038_v))))._field_Value))._field_Data))._field_Kind.ptr()))))) {
			_1bc786db1_pushErr(_self_.ptr(), (*((*((*((*(_219038_v))))._field_Value))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
	} else {
		(*((*((*((*(_219038_v))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*((*((*(_219038_v))))._field_Value))._field_Data))._field_untyped=false;
	};
	if ((_1bc845645_Tup((*((*((*(_219038_v))))._field_Kind))._field_Kind.ptr()) != nullptr)) {
		(*((*((*(_219038_v))))._field_Kind))._field_Kind=nullptr;
	};
}



inline void _1bc79dbca_evalVarValue(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc7a750d_Var>* _224337_decl, jule::Trait<_1bc860c04_Lookup> _224353_l) {
	if ((!(_1bc7a7893_IsInitialized((*(_224337_decl)).ptr())))) {
		return;;
	};
	jule::Ptr<_1bc81259b_Eval> _224817_eval = nullptr;;
	if (((*((*(_224337_decl))))._field_Kind != nullptr)) {
		_224817_eval=_1bc78db21_evalpd(_self_, _224353_l, (*((*((*(_224337_decl))))._field_Kind))._field_Kind, (*(_224337_decl)));
	} else {
		_224817_eval=_1bc78db21_evalpd(_self_, _224353_l, nullptr, (*(_224337_decl)));
	};
	(*(_224817_eval))._field_immutable=(!((*((*(_224337_decl))))._field_Mutable));
	(*((*((*(_224337_decl))))._field_Value))._field_Data=_1bc83080b_evalExpr(_224817_eval, (*((*((*(_224337_decl))))._field_Value))._field_Expr);
}



inline void _1bc79e03d_checkVar(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc7a750d_Var>* _226033_decl, jule::Trait<_1bc860c04_Lookup> _226049_l) {
	_1bc79dbca_evalVarValue(_self_, _226033_decl, _226049_l);
	if (((*((*((*(_226033_decl))))._field_Value))._field_Data == nullptr)) {
		return;;
	};
	_1bc79d867_checkVarValue(_self_, _226033_decl);
}



inline void _1bc79e23b_checkGlobals(jule::Ptr<_1bc784276_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1b40023:;
		if (it != expr_end) {
			jule::Ptr<_1bc7a750d_Var> _227021_decl = *it;
			{
				if ((*(_227021_decl))._field_Binded) {
					goto _iter_next_1c1b40023;
				};
				if (((_1bc7a7893_IsInitialized(_227021_decl.ptr()) && ((*((*(_227021_decl))._field_Value))._field_Data == nullptr)) || (_1bc7a7b29_IsTypeInferred(_227021_decl.ptr()) && ((*((*(_227021_decl))._field_Kind))._field_Kind == nullptr)))) {
					_1bc79e03d_checkVar(_self_, &(_227021_decl), jule::Trait<_1bc860c04_Lookup>(_self_, 3));
				};
			}
			_iter_next_1c1b40023:;
			++it;
			goto _iter_begin_1c1b40023;
		}
		_iter_end_1c1b40023:;
	};
}



inline jule::Ptr<_1ece1de96_FnIns> _1bc79e637_readyToCheckFn(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc5be0b1_StructIns>* _228439_s, jule::Ptr<_1ece1b092_Fn>* _228459_f) {
	jule::Ptr<_1ece1de96_FnIns> _228513_ins = _1ece1c802_instance((*(_228459_f)));;
	if (((*((*(_228459_f))))._field_Instances.len() != 0LL)) {
		return _228513_ins;;
	};
	(*(_228513_ins))._field_Owner=(*(_228439_s));
	_1ece1cb10_appendInstance((*(_228459_f)).ptr(), &(_228513_ins));
	(*(_228513_ins))._field_reloaded=true;
	if (_1bc792d45_reloadFnInsTypes(_self_, _228513_ins)) {
		return _228513_ins;;
	};
	return nullptr;;
}



inline void _1bc79e99a_checkTypeMethod(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc5be0b1_StructIns>* _229840_s, jule::Ptr<_1ece1b092_Fn>* _229860_f) {
	if (((*((*(_229860_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1ece1de96_FnIns> _230313_ins = (*((*(_229860_f))))._field_Instances[0LL];;
	if (((*((*(_230313_ins))._field_Scope))._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1bc7a244d_checkFnIns(_self_, &(_230313_ins));
}



inline jule::Ptr<_1ece1de96_FnIns> _1bc79ee51_checkStructInsOp(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc5be0b1_StructIns>* _231141_s, jule::Ptr<_1ece1b092_Fn>* _231161_f, jule::Fn<jule::Bool(jule::Ptr<_1ece1b092_Fn>)> _231169_p) {
	if (((((*(_231161_f)) == nullptr) || ((*((*(_231161_f))))._field_Generics.len() > 0LL)) || (!(_231169_p((*(_231161_f))))))) {
		return nullptr;;
	};
	return (*((*(_231161_f))))._field_Instances[0LL];;
}



inline jule::Bool _1bc7a034c_checkStructEnv(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc5be0b1_StructIns>* _232139_s, jule::Ptr<_1bc583a9d_Token> _232158_errorToken) {
	jule::Bool __jule_func_result = false;
	_1bc85307b_typeChecker _232213_tc = _1bc85307b_typeChecker{._field_s=(*((*((*(_232139_s))))._field_Decl))._field_sema, ._field_rootLookup=jule::Trait<_1bc860c04_Lookup>((*((*((*(_232139_s))))._field_Decl))._field_sema, 3), ._field_lookup=jule::Trait<_1bc860c04_Lookup>((*((*((*(_232139_s))))._field_Decl))._field_sema, 3), ._field_referencer=jule::new_ptr<_1bc85208b_referencer>(_1bc85208b_referencer{._field_ident=(*((*((*(_232139_s))))._field_Decl))._field_Ident, ._field_owner=jule::Any((*((*(_232139_s))))._field_Decl, &__jule_any_type65), }), ._field_refers=(*((*(_232139_s))))._field_Refers, };;
	if (((*((*(_232139_s))))._field_Generics.len() > 0LL)) {
		_232213_tc._field_useGenerics=jule::Slice<jule::Ptr<_1bc8403cb_TypeAlias>>::alloc(0LL, (*((*(_232139_s))))._field_Generics.len());
		{
			auto expr = &((*((*(_232139_s))))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c1b4b5a1:;
			if (it != expr_end) {
				jule::I64 _233518_i = it - expr->begin();
				jule::Ptr<_1bc83e7d7_InsGeneric> _233525_g = *it;
				{
					jule::Ptr<_1bc5a76a4_GenericDecl> _233621_decl = (*((*((*(_232139_s))))._field_Decl))._field_Generics[_233518_i];;
					{ jule::Slice<jule::Ptr<_1bc8403cb_TypeAlias>> &__jule_push_dest = _232213_tc._field_useGenerics; __jule_push_dest.push(jule::new_ptr<_1bc8403cb_TypeAlias>(_1bc8403cb_TypeAlias{._field_Token=(*(_233621_decl))._field_Token, ._field_Ident=(*(_233621_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1bc848390_TypeSymbol>(_1bc848390_TypeSymbol{._field_Kind=(*(_233525_g))._field_Kind}), })); };
				}
				_iter_next_1c1b4b5a1:;
				++it;
				_233518_i++;
				goto _iter_begin_1c1b4b5a1;
			}
			_iter_end_1c1b4b5a1:;
		};
	};
	jule::Ptr<_1bc80a50b_SymbolTable> _234513_oldFile = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1bc786993_setCurrentFile(_self_.ptr(), _234513_oldFile);
	});;
	if (((*((*(_self_))._field_file))._field_File != (*((*((*((*(_232139_s))))._field_Decl))._field_Token))._field_File)) {
		jule::Ptr<_1bc80a50b_SymbolTable> _234917_file = _1bc782ebc_findFile(&((*(_self_))._field_files), &((*((*((*((*(_232139_s))))._field_Decl))._field_Token))._field_File));;
		if ((_234917_file != nullptr)) {
			_1bc786993_setCurrentFile(_self_.ptr(), _234917_file);
		};
	};
	if (((*((*(_232139_s))))._field_Generics.len() > 0LL)) {
		jule::Ptr<_1bc739d64_constraintChecker> _235617_cc = _1bc78c636_constraintChecker(_self_);;
		(*(_235617_cc))._field_et=_232158_errorToken;
		(*(_235617_cc))._field_si=(*(_232139_s));
		(*(_235617_cc))._field_genericsA=_232213_tc._field_useGenerics;
		(*(_235617_cc))._field_uniq=true;
		if ((!(_1bc73ac99_check(_235617_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*((*(_232139_s))))._field_Statics.len() > 0LL)) {
		jule::I64 _236917_n = (*(_self_))._field_errors.len();;
		(*((*(_self_))._field_files[0LL]))._field_TypeAliases=jule::append(_232213_tc._field_useGenerics,(*((*(_self_))._field_files[0LL]))._field_TypeAliases);
		{
			auto expr = &((*((*(_232139_s))))._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c1b54631:;
			if (it != expr_end) {
				jule::Ptr<_1bc7a750d_Var> _237125_v = *it;
				{
					_1bc79a435_checkVarDecl(_self_, &(_237125_v), jule::Trait<_1bc860c04_Lookup>(_self_, 3));
					_1bc79e03d_checkVar(_self_, &(_237125_v), jule::Trait<_1bc860c04_Lookup>(_self_, 3));
					__jule_func_result=((((*(_self_))._field_errors.len() - _236917_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1c1b54631:;
				++it;
				goto _iter_begin_1c1b54631;
			}
			_iter_end_1c1b54631:;
		};
		(*((*(_self_))._field_files[0LL]))._field_TypeAliases=(*((*(_self_))._field_files[0LL]))._field_TypeAliases.slice(_232213_tc._field_useGenerics.len());
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1bc81259b_Eval> _238213_eval = _1bc78e35d_eval(_self_, jule::Trait<_1bc860c04_Lookup>(_self_, 3));;
	(*((*(_232139_s))))._field_Comparable=(!((*((*((*(_232139_s))))._field_Decl))._field_Binded));
	{
		auto expr = &((*((*(_232139_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1b58aa8:;
		if (it != expr_end) {
			jule::Ptr<_1bc5bd511_FieldIns> _238421_f = *it;
			{
				jule::Ptr<_1bc8411bd_TypeKind> _238517_kind = _1bc85a726_checkDecl(&_232213_tc, &((*((*((*(_238421_f))._field_Decl))._field_Kind))._field_Decl));;
				__jule_func_result=((_238517_kind != nullptr) && __jule_func_result);
				if ((_238517_kind == nullptr)) {
					if (((_self_ != (*((*((*(_232139_s))))._field_Decl))._field_sema) && ((*((*((*((*(_232139_s))))._field_Decl))._field_sema))._field_errors.len() > 0LL))) {
						((*(_self_))._field_errors).append((*((*((*((*(_232139_s))))._field_Decl))._field_sema))._field_errors);;
						(*((*((*((*(_232139_s))))._field_Decl))._field_sema))._field_errors=nullptr;
					};
					goto _iter_next_1c1b58aa8;
				};
				(*(_238421_f))._field_Kind=_238517_kind;
				(*((*(_232139_s))))._field_Mutable=((*((*(_232139_s))))._field_Mutable || ((!((*((*(_238421_f))._field_Decl))._field_Mutable)) && _1bc842a4e_Mutable((*(_238421_f))._field_Kind.ptr())));
				(*((*(_232139_s))))._field_Comparable=((*((*(_232139_s))))._field_Comparable && _1bc8427b8_Comparable((*(_238421_f))._field_Kind.ptr()));
				if (((*((*(_238421_f))._field_Decl))._field_Default == nullptr)) {
					goto _iter_next_1c1b58aa8;
				};
				(*(_238213_eval))._field_prefix=(*(_238421_f))._field_Kind;
				(*(_238213_eval))._field_field=_238421_f;
				(*(_238421_f))._field_Default=_1bc83080b_evalExpr(_238213_eval, (*((*(_238421_f))._field_Decl))._field_Default);
				if (((*(_238421_f))._field_Default == nullptr)) {
					goto _iter_next_1c1b58aa8;
				};
				;
				_1bc78e8be_checkAssignType(_self_, false, &((*(_238421_f))._field_Kind), &((*(_238421_f))._field_Default), (*((*((*(_238421_f))._field_Decl))._field_Default))._field_Token);
			}
			_iter_next_1c1b58aa8:;
			++it;
			goto _iter_begin_1c1b58aa8;
		}
		_iter_end_1c1b58aa8:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1bc7a0748_precheckStructIns(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc5be0b1_StructIns>* _241842_s, jule::Ptr<_1bc583a9d_Token> _241861_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1bc7a034c_checkStructEnv(_self_, _241842_s, _241861_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*((*(_241842_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1b6372d:;
		if (it != expr_end) {
			jule::Ptr<_1ece1b092_Fn> _242321_f = *it;
			{
				if (((*(_242321_f))._field_Generics.len() == 0LL)) {
					if ((_1bc79e637_readyToCheckFn(_self_, _241842_s, &(_242321_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1c1b6372d:;
			++it;
			goto _iter_begin_1c1b6372d;
		}
		_iter_end_1c1b6372d:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1bc7a0a01_checkStructIns(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc5be0b1_StructIns>* _243339_s) {
	{
		auto expr = &((*((*(_243339_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1b6517a:;
		if (it != expr_end) {
			jule::Ptr<_1ece1b092_Fn> _243421_f = *it;
			{
				_1bc79e99a_checkTypeMethod(_self_, _243339_s, &(_243421_f));
			}
			_iter_next_1c1b6517a:;
			++it;
			goto _iter_begin_1c1b6517a;
		}
		_iter_end_1c1b6517a:;
	};
}



inline void _1bc7a0ca9_checkTypeStruct(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc5bb333_Struct>* _243940_s) {
	if ((*((*(_243940_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_243940_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_243940_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1b66b82:;
		if (it != expr_end) {
			jule::Ptr<_1bc5be0b1_StructIns> _245221_ins = *it;
			{
				_1bc7a0a01_checkStructIns(_self_, &(_245221_ins));
			}
			_iter_next_1c1b66b82:;
			++it;
			goto _iter_begin_1c1b66b82;
		}
		_iter_end_1c1b66b82:;
	};
}



inline void _1bc7a0ea7_checkStructTypes(jule::Ptr<_1bc784276_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1b67b3e:;
		if (it != expr_end) {
			jule::Ptr<_1bc5bb333_Struct> _245821_s = *it;
			{
				_1bc7a0ca9_checkTypeStruct(_self_, &(_245821_s));
			}
			_iter_next_1c1b67b3e:;
			++it;
			goto _iter_begin_1c1b67b3e;
		}
		_iter_end_1c1b67b3e:;
	};
}



inline void _1bc7a1260_checkStructInsOperators(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc5be0b1_StructIns> _246347_s) {
	{
		auto expr = &((*(_246347_s))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1b68aeb:;
		if (it != expr_end) {
			jule::Ptr<_1ece1b092_Fn> _246421_m = *it;
			{
				{
					auto &_match_expr{ (*(_246421_m))._field_Ident };
					
					if (_match_expr == jule::Str::lit("Eq", 2)) {
						_case_begin_1c1b69800:;
						{
							(*(_246347_s))._field_Operators._field_Eq=_1bc79ee51_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1bc7a9367_Eq);
							(*(_246347_s))._field_Comparable=((*(_246347_s))._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str::lit("Gt", 2)) {
						_case_begin_1c1b69877:;
						{
							(*(_246347_s))._field_Operators._field_Gt=_1bc79ee51_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1bc7a9631_Gt);
						}
					}
					else if (_match_expr == jule::Str::lit("GtEq", 4)) {
						_case_begin_1c1b698ee:;
						{
							(*(_246347_s))._field_Operators._field_GtEq=_1bc79ee51_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1bc7a98ea_GtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Lt", 2)) {
						_case_begin_1c1b69976:;
						{
							(*(_246347_s))._field_Operators._field_Lt=_1bc79ee51_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1bc7a9bb4_Lt);
						}
					}
					else if (_match_expr == jule::Str::lit("LtEq", 4)) {
						_case_begin_1c1b699ed:;
						{
							(*(_246347_s))._field_Operators._field_LtEq=_1bc79ee51_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1bc7a9e7d_LtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Shl", 3)) {
						_case_begin_1c1b69a75:;
						{
							(*(_246347_s))._field_Operators._field_Shl=_1bc79ee51_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1bc7aa5bb_Shl);
						}
					}
					else if (_match_expr == jule::Str::lit("Shr", 3)) {
						_case_begin_1c1b69aec:;
						{
							(*(_246347_s))._field_Operators._field_Shr=_1bc79ee51_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1bc7aa885_Shr);
						}
					}
					else if (_match_expr == jule::Str::lit("Add", 3)) {
						_case_begin_1c1b69b74:;
						{
							(*(_246347_s))._field_Operators._field_Add=_1bc79ee51_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1bc7aab4e_Add);
						}
					}
					else if (_match_expr == jule::Str::lit("Sub", 3)) {
						_case_begin_1c1b69beb:;
						{
							(*(_246347_s))._field_Operators._field_Sub=_1bc79ee51_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1bc7aae18_Sub);
						}
					}
					else if (_match_expr == jule::Str::lit("Div", 3)) {
						_case_begin_1c1b69c73:;
						{
							(*(_246347_s))._field_Operators._field_Div=_1bc79ee51_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1bc7ab1d2_Div);
						}
					}
					else if (_match_expr == jule::Str::lit("Mul", 3)) {
						_case_begin_1c1b69cea:;
						{
							(*(_246347_s))._field_Operators._field_Mul=_1bc79ee51_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1bc7ab49b_Mul);
						}
					}
					else if (_match_expr == jule::Str::lit("Mod", 3)) {
						_case_begin_1c1b69d72:;
						{
							(*(_246347_s))._field_Operators._field_Mod=_1bc79ee51_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1bc7ab765_Mod);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAnd", 6)) {
						_case_begin_1c1b69de9:;
						{
							(*(_246347_s))._field_Operators._field_BitAnd=_1bc79ee51_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1bc7aba2e_BitAnd);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOr", 5)) {
						_case_begin_1c1b69e71:;
						{
							(*(_246347_s))._field_Operators._field_BitOr=_1bc79ee51_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1bc7abce8_BitOr);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXor", 6)) {
						_case_begin_1c1b69ee8:;
						{
							(*(_246347_s))._field_Operators._field_BitXor=_1bc79ee51_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1bc7ac0b2_BitXor);
						}
					}
					else if (_match_expr == jule::Str::lit("Neg", 3)) {
						_case_begin_1c1b6a070:;
						{
							(*(_246347_s))._field_Operators._field_Neg=_1bc79ee51_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1bc7ac700_Neg);
						}
					}
					else if (_match_expr == jule::Str::lit("Pos", 3)) {
						_case_begin_1c1b6a0e7:;
						{
							(*(_246347_s))._field_Operators._field_Pos=_1bc79ee51_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1bc7ac9b9_Pos);
						}
					}
					else if (_match_expr == jule::Str::lit("BitNot", 6)) {
						_case_begin_1c1b6a16e:;
						{
							(*(_246347_s))._field_Operators._field_BitNot=_1bc79ee51_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1bc7acc83_BitNot);
						}
					}
					else if (_match_expr == jule::Str::lit("AddAssign", 9)) {
						_case_begin_1c1b6a1e6:;
						{
							(*(_246347_s))._field_Operators._field_AddAssign=_1bc79ee51_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1bc7ad3c1_AddAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("SubAssign", 9)) {
						_case_begin_1c1b6a26d:;
						{
							(*(_246347_s))._field_Operators._field_SubAssign=_1bc79ee51_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1bc7ad68a_SubAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("DivAssign", 9)) {
						_case_begin_1c1b6a2e5:;
						{
							(*(_246347_s))._field_Operators._field_DivAssign=_1bc79ee51_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1bc7ad954_DivAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("MulAssign", 9)) {
						_case_begin_1c1b6a36c:;
						{
							(*(_246347_s))._field_Operators._field_MulAssign=_1bc79ee51_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1bc7adc1d_MulAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ModAssign", 9)) {
						_case_begin_1c1b6a3e4:;
						{
							(*(_246347_s))._field_Operators._field_ModAssign=_1bc79ee51_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1bc7aded7_ModAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShlAssign", 9)) {
						_case_begin_1c1b6a46b:;
						{
							(*(_246347_s))._field_Operators._field_ShlAssign=_1bc79ee51_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1bc7ae2a1_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShrAssign", 9)) {
						_case_begin_1c1b6a4e3:;
						{
							(*(_246347_s))._field_Operators._field_ShrAssign=_1bc79ee51_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1bc7ae56a_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOrAssign", 11)) {
						_case_begin_1c1b6a56a:;
						{
							(*(_246347_s))._field_Operators._field_BitOrAssign=_1bc79ee51_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1bc7ae834_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAndAssign", 12)) {
						_case_begin_1c1b6a5e2:;
						{
							(*(_246347_s))._field_Operators._field_BitAndAssign=_1bc79ee51_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1bc7aeaed_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXorAssign", 12)) {
						_case_begin_1c1b6a669:;
						{
							(*(_246347_s))._field_Operators._field_BitXorAssign=_1bc79ee51_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1bc7aedb7_BitXorAssign);
						}
					}
					_match_end_1c1b69547:;
				};
			}
			_iter_next_1c1b68aeb:;
			++it;
			goto _iter_begin_1c1b68aeb;
		}
		_iter_end_1c1b68aeb:;
	};
}



inline void _1bc7a1518_precheckStructType(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1bc5bb333_Struct>* _252743_s) {
	if ((*((*(_252743_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_252743_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_252743_s))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1bc5be0b1_StructIns> _253817_ins = _1bc5bb795_instance((*(_252743_s)));;
		(*(_253817_ins))._field_Checked=true;
		_1bc5bbaa3_appendInstance((*(_252743_s)).ptr(), &(_253817_ins));
		_1bc7a0748_precheckStructIns(_self_, &(_253817_ins), nullptr);
	};
	_1bc7a1260_checkStructInsOperators(_self_, (*((*(_252743_s))))._field_Instances[0LL]);
}



inline void _1bc7a1716_precheckStructTypes(jule::Ptr<_1bc784276_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1b816a2:;
		if (it != expr_end) {
			jule::Ptr<_1bc5bb333_Struct> _254821_s = *it;
			{
				_1bc7a1518_precheckStructType(_self_, &(_254821_s));
			}
			_iter_next_1c1b816a2:;
			++it;
			goto _iter_begin_1c1b816a2;
		}
		_iter_end_1c1b816a2:;
	};
}



inline void _1bc7a19be_checkRets(_1bc784276_Sema* _self_, jule::Ptr<_1ece1de96_FnIns>* _255333_f) {
	if (_1ece1b515_IsVoid((*((*(_255333_f))))._field_Decl.ptr())) {
		return;;
	};
	_1bc7a3e44_missingRetChecker _25579_mrc = static__1bc7a430c_new();;
	jule::Bool _25589_ok = _1bc7a542e_check(&_25579_mrc, (*((*(_255333_f))))._field_Scope);;
	if ((!(_25589_ok))) {
		_1bc786db1_pushErr(_self_, (*((*((*(_255333_f))))._field_Decl))._field_Token, jule::Str::lit("missing return at end of function", 33), jule::Slice<jule::Any>());
	};
}



inline void _1bc7a1d32_checkFnInsSc(_1bc784276_Sema* _self_, jule::Ptr<_1ece1de96_FnIns>* _256436_f, jule::Ptr<_1bc749923_scopeChecker>* _256452_sc) {
	_1bc782571_appendRetVars(&((*((*((*(_256452_sc))))._field_table))._field_Vars), _256436_f);
	_1bc78285c_appendParamVars(&((*((*((*(_256452_sc))))._field_table))._field_Vars), _256436_f);
	_1bc782b48_appendGenericTypeAliases(&((*((*((*(_256452_sc))))._field_table))._field_TypeAliases), _256436_f);
	_1bc75b12c_check((*(_256452_sc)), &((*((*((*(_256436_f))))._field_Decl))._field_Scope), &((*((*(_256436_f))))._field_Scope));
	if ((!(_1bc74c4e7_stopped((*(_256452_sc)).ptr())))) {
		_1bc7a19be_checkRets(_self_, _256436_f);
	};
}



inline void _1bc7a2195_checkFnInsCaller(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1ece1de96_FnIns>* _257741_f, jule::Ptr<_1bc583a9d_Token> _257756_caller) {
	if ((*((*((*(_257741_f))))._field_Decl))._field_Binded) {
		return;;
	};
	jule::Ptr<_1bc80a50b_SymbolTable> _258213_old = (*((*((*((*(_257741_f))))._field_Decl))._field_sema))._field_file;;
	__JULE_DEFER({
		_1bc786993_setCurrentFile((*((*((*(_257741_f))))._field_Decl))._field_sema.ptr(), _258213_old);
	});;
	jule::Ptr<_1bc80a50b_SymbolTable> _258413_file = _1bc782ebc_findFile(&((*((*((*((*(_257741_f))))._field_Decl))._field_sema))._field_files), &((*((*((*((*(_257741_f))))._field_Decl))._field_Token))._field_File));;
	if ((_258413_file != nullptr)) {
		_1bc786993_setCurrentFile((*((*((*(_257741_f))))._field_Decl))._field_sema.ptr(), _258413_file);
	};
	jule::Ptr<_1bc749923_scopeChecker> _258913_sc = _1bc73e7b4_newScopeChecker(&((*((*((*(_257741_f))))._field_Decl))._field_sema), (*(_257741_f)));;
	(*(_258913_sc))._field_calledFrom=_257756_caller;
	_1bc7a1d32_checkFnInsSc(_self_.ptr(), _257741_f, &(_258913_sc));
	if (((*((*((*(_257741_f))))._field_Decl))._field_sema != _self_)) {
		((*(_self_))._field_errors).append((*((*((*((*(_257741_f))))._field_Decl))._field_sema))._field_errors);;
		(*((*((*((*(_257741_f))))._field_Decl))._field_sema))._field_errors=nullptr;
	};
}



inline void _1bc7a244d_checkFnIns(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1ece1de96_FnIns>* _259935_f) {
	_1bc7a2195_checkFnInsCaller(_self_, _259935_f, nullptr);
}



inline void _1bc7a2706_checkFunc(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1ece1b092_Fn>* _260334_f) {
	if ((*((*(_260334_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_260334_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_260334_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1b8ec43:;
		if (it != expr_end) {
			jule::Ptr<_1ece1de96_FnIns> _261321_ins = *it;
			{
				_1bc7a244d_checkFnIns(_self_, &(_261321_ins));
			}
			_iter_next_1c1b8ec43:;
			++it;
			goto _iter_begin_1c1b8ec43;
		}
		_iter_end_1c1b8ec43:;
	};
}



inline void _1bc7a29ae_checkTestFn(_1bc784276_Sema* _self_, jule::Ptr<_1ece1de96_FnIns>* _261835_f) {
	if ((*((*((*(_261835_f))))._field_Decl))._field_Public) {
		_1bc786db1_pushErr(_self_, (*((*((*(_261835_f))))._field_Decl))._field_Token, jule::Str::lit("test function cannot be public", 30), jule::Slice<jule::Any>());
		_1bc787224_pushSuggestion(_self_, jule::Str::lit("dont use identifier which is starts with capital letter to avoid define as public", 81), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*((*((*(_261835_f))))._field_Decl))._field_Unsafety || (!(_1ece1b515_IsVoid((*((*(_261835_f))))._field_Decl.ptr())))) || ((*((*((*(_261835_f))))._field_Decl))._field_Generics.len() != 0LL)) || ((*((*(_261835_f))))._field_Params.len() != 1LL)) || (*((*((*((*(_261835_f))))._field_Decl))._field_Params[0LL]))._field_Mutable) || (*((*((*((*(_261835_f))))._field_Decl))._field_Params[0LL]))._field_Reference)) {
		_1bc786db1_pushErr(_self_, (*((*((*(_261835_f))))._field_Decl))._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1bc787224_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1bc84c7c3_Sptr> _263613_sptr = _1bc843aa5_Sptr((*((*((*(_261835_f))))._field_Params[0LL]))._field_Kind.ptr());;
	if ((_263613_sptr == nullptr)) {
		_1bc786db1_pushErr(_self_, (*((*((*(_261835_f))))._field_Decl))._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1bc787224_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1bc5be0b1_StructIns> _26439_s = _1bc844d92_Struct((*(_263613_sptr))._field_Elem.ptr());;
	if (((_26439_s == nullptr) || (!(_1bc769305_isStdPackage(&((*((*((*((*(_26439_s))._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("testing", 7)))))) {
		_1bc786db1_pushErr(_self_, (*((*((*(_261835_f))))._field_Decl))._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1bc787224_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1bc7a2c67_precheckFunc(jule::Ptr<_1bc784276_Sema> _self_, jule::Ptr<_1ece1b092_Fn>* _265137_f) {
	if ((*((*(_265137_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_265137_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_265137_f))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1ece1de96_FnIns> _266217_ins = _1ece1c56b_instanceForce((*(_265137_f)));;
		{ jule::Slice<jule::Ptr<_1ece1de96_FnIns>> &__jule_push_dest = (*((*(_265137_f))))._field_Instances; __jule_push_dest.push(_266217_ins); };
		jule::Bool _266413_ok = _1bc792d45_reloadFnInsTypes(_self_, _266217_ins);;
		(*(_266217_ins))._field_reloaded=true;
		if ((_266413_ok && _1bc85bcdd_hasDirective(&((*((*(_265137_f))))._field_Directives), jule::Str::lit("test", 4)))) {
			_1bc7a29ae_checkTestFn(_self_.ptr(), &(_266217_ins));
		};
	};
}



inline void _1bc7a2e65_precheckFuncs(jule::Ptr<_1bc784276_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1b9cdc7:;
		if (it != expr_end) {
			jule::Ptr<_1bc713a41_Trait> _267521_decl = *it;
			{
				{
					auto expr = &((*(_267521_decl))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c1b9d823:;
					if (it != expr_end) {
						jule::Ptr<_1ece1b092_Fn> _267625_m = *it;
						{
							_1bc7a2c67_precheckFunc(_self_, &(_267625_m));
						}
						_iter_next_1c1b9d823:;
						++it;
						goto _iter_begin_1c1b9d823;
					}
					_iter_end_1c1b9d823:;
				};
			}
			_iter_next_1c1b9cdc7:;
			++it;
			goto _iter_begin_1c1b9cdc7;
		}
		_iter_end_1c1b9cdc7:;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1b9dcb8:;
		if (it != expr_end) {
			jule::Ptr<_1ece1b092_Fn> _268021_decl = *it;
			{
				_1bc7a2c67_precheckFunc(_self_, &(_268021_decl));
			}
			_iter_next_1c1b9dcb8:;
			++it;
			goto _iter_begin_1c1b9dcb8;
		}
		_iter_end_1c1b9dcb8:;
	};
}



inline void _1bc7a3163_checkFuncs(jule::Ptr<_1bc784276_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1ba012c:;
		if (it != expr_end) {
			jule::Ptr<_1ece1b092_Fn> _268721_decl = *it;
			{
				_1bc7a2706_checkFunc(_self_, &(_268721_decl));
			}
			_iter_next_1c1ba012c:;
			++it;
			goto _iter_begin_1c1ba012c;
		}
		_iter_end_1c1ba012c:;
	};
}



inline void _1bc7a3361_checkPackageTypes(jule::Ptr<_1bc784276_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1ba0e30:;
		if (it != expr_end) {
			jule::Ptr<_1bc80a50b_SymbolTable> _269521_f = *it;
			{
				_1bc786993_setCurrentFile(_self_.ptr(), _269521_f);
				_1bc79e23b_checkGlobals(_self_);
				_1bc7a2e65_precheckFuncs(_self_);
				_1bc7a1716_precheckStructTypes(_self_);
			}
			_iter_next_1c1ba0e30:;
			++it;
			goto _iter_begin_1c1ba0e30;
		}
		_iter_end_1c1ba0e30:;
	};
	if (((*(_self_))._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1ba299d:;
		if (it != expr_end) {
			jule::Ptr<_1bc80a50b_SymbolTable> _270621_f = *it;
			{
				_1bc786993_setCurrentFile(_self_.ptr(), _270621_f);
				_1bc7a3163_checkFuncs(_self_);
				_1bc7a0ea7_checkStructTypes(_self_);
			}
			_iter_next_1c1ba299d:;
			++it;
			goto _iter_begin_1c1ba299d;
		}
		_iter_end_1c1ba299d:;
	};
}



inline void _1bc7a355e_setFileSemaFields(jule::Ptr<_1bc784276_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1ba4087:;
		if (it != expr_end) {
			jule::Ptr<_1ece1b092_Fn> _271421_f = *it;
			{
				(*(_271421_f))._field_sema=_self_;
			}
			_iter_next_1c1ba4087:;
			++it;
			goto _iter_begin_1c1ba4087;
		}
		_iter_end_1c1ba4087:;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1ba4c03:;
		if (it != expr_end) {
			jule::Ptr<_1bc5bb333_Struct> _271721_st = *it;
			{
				(*(_271721_st))._field_sema=_self_;
			}
			_iter_next_1c1ba4c03:;
			++it;
			goto _iter_begin_1c1ba4c03;
		}
		_iter_end_1c1ba4c03:;
	};
}



inline void _1bc7a375c_setSemaFields(jule::Ptr<_1bc784276_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1ba58d5:;
		if (it != expr_end) {
			jule::Ptr<_1bc80a50b_SymbolTable> _272321_file = *it;
			{
				_1bc786993_setCurrentFile(_self_.ptr(), _272321_file);
				_1bc7a355e_setFileSemaFields(_self_);
			}
			_iter_next_1c1ba58d5:;
			++it;
			goto _iter_begin_1c1ba58d5;
		}
		_iter_end_1c1ba58d5:;
	};
}



inline void _1bc7a3a15_check(jule::Ptr<_1bc784276_Sema> _self_, jule::Slice<jule::Ptr<_1bc80a50b_SymbolTable>>* _272930_files) {
	(*(_self_))._field_files=(*(_272930_files));
	_1bc78a832_checkImports(_self_.ptr());
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_1bc7a375c_setSemaFields(_self_);
	_1bc78b327_checkInherits(_self_);
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_1bc78ac2d_implImpls(_self_);
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_1bc78ae2b_checkEnums(_self_);
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_1bc79d24b_checkPackageDecls(_self_);
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_1bc7a3361_checkPackageTypes(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1bc784276_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags << ", ";
	_Stream << "meta:" << _Src._field_meta;
	_Stream << "}";
	return _Stream;
}



inline _1bc7a3e44_missingRetChecker static__1bc7a430c_new(void) {
	return _1bc7a3e44_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU, 0), };;
}



inline jule::Bool _1bc7a461a_checkConditional(_1bc7a3e44_missingRetChecker* _self_, jule::Ptr<_1bc743257_Conditional> _277735_c) {
	{
		auto expr = &((*(_277735_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1bab07d:;
		if (it != expr_end) {
			jule::Ptr<_1bc742a3c_If> _277821_elif = *it;
			{
				if ((_277821_elif == nullptr)) {
					return false;;
				};
				if ((!(_1bc7a50dd_checkScope(_self_, (*(_277821_elif))._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1c1bab07d:;
			++it;
			goto _iter_begin_1c1bab07d;
		}
		_iter_end_1c1bab07d:;
	};
	return (((*(_277735_c))._field_Default != nullptr) && _1bc7a50dd_checkScope(_self_, (*((*(_277735_c))._field_Default))._field_Scope));;
}



inline jule::Bool _1bc7a495b_checkMatch(_1bc7a3e44_missingRetChecker* _self_, jule::Ptr<_1bc746755_Match> _278929_m) {
	{
		auto expr = &((*(_278929_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1bad14b:;
		if (it != expr_end) {
			jule::Ptr<_1bc74738d_Case> _279021_c = *it;
			{
				if ((_279021_c == nullptr)) {
					return false;;
				};
				jule::I64 _279413_n = (*(_self_))._field_breaked.len();;
				jule::Bool _279513_ok = _1bc7a50dd_checkScope(_self_, (*(_279021_c))._field_Scope);;
				{
					
					if ((_279413_n != (*(_self_))._field_breaked.len())) {
						_case_begin_1c1baeaa9:;
						{
							return false;;
						}
					}
					else if ((!(_279513_ok))) {
						_case_begin_1c1baeb31:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_1c1baeba8;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_1c1baeba8:;
						{
							(*(_self_))._field_falled=false;
							if (((*(_279021_c))._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1c1bad14b;
						}
					}
					_match_end_1c1bae9ee:;
				};
			}
			_iter_next_1c1bad14b:;
			++it;
			goto _iter_begin_1c1bad14b;
		}
		_iter_end_1c1bad14b:;
	};
	return (((*(_278929_m))._field_Default != nullptr) && _1bc7a50dd_checkScope(_self_, (*((*(_278929_m))._field_Default))._field_Scope));;
}



inline jule::Bool _1bc7a4c9c_checkInfIter(_1bc7a3e44_missingRetChecker* _self_, jule::Ptr<_1bc743554_InfIter> _281531_it) {
	jule::I64 _28169_n = (*(_self_))._field_breaked.len();;
	if (_1bc7a50dd_checkScope(_self_, (*(_281531_it))._field_Scope)) {
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _28169_n);
		return true;;
	};
	if ((_28169_n != (*(_self_))._field_breaked.len())) {
		jule::Uintptr _282213_itaddr = static_cast<jule::Uintptr>(_281531_it);;
		{
			auto expr = (*(_self_))._field_breaked.slice(_28169_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1c1bb399d:;
			if (it != expr_end) {
				jule::Uintptr _282320_addr = *it;
				{
					if ((_282213_itaddr == _282320_addr)) {
						(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _28169_n);
						return false;;
					};
				}
				_iter_next_1c1bb399d:;
				++it;
				goto _iter_begin_1c1bb399d;
			}
			_iter_end_1c1bb399d:;
		};
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _28169_n);
	};
	return true;;
}



inline jule::Bool _1bc7a50dd_checkScope(_1bc7a3e44_missingRetChecker* _self_, jule::Ptr<_1bc74261e_Scope> _283429_s) {
	if ((_283429_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &((*(_283429_s))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1bb542d:;
		if (it != expr_end) {
			jule::Any _283821_st = *it;
			{
				{
					auto &_match_expr{ _283821_st };
					
					if (_match_expr.type == &__jule_any_type48) {
						_case_begin_1c1bb5c8b:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type49) {
						_case_begin_1c1bb5d13:;
						{
							jule::Uintptr _284417_addr = (*(_283821_st.cast_ptr<_1bc744bb5_BreakSt>(&__jule_any_type49)))._field_It;;
							if ((_284417_addr != 0LLU)) {
								{ jule::Slice<jule::Uintptr> &__jule_push_dest = (*(_self_))._field_breaked; __jule_push_dest.push(_284417_addr); };
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type41) {
						_case_begin_1c1bb5d8a:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type36) {
						_case_begin_1c1bb5e12:;
						{
							if (_1bc7a4c9c_checkInfIter(_self_, _283821_st.cast_ptr<_1bc743554_InfIter>(&__jule_any_type36))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type50) {
						_case_begin_1c1bb5e89:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1c1bb6011:;
						{
							if (_1bc7a50dd_checkScope(_self_, _283821_st.cast_ptr<_1bc74261e_Scope>(&__jule_any_type22))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type24) {
						_case_begin_1c1bb6088:;
						{
							{
								auto &_match_expr{ (*(_283821_st.cast_ptr<_1bc8108a7_Data>(&__jule_any_type24)))._field_Model };
								
								if (_match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type23) {
									_case_begin_1c1bb9ba2:;
									{
										return true;;
									}
								}
								_match_end_1c1bb9b4c:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type35) {
						_case_begin_1c1bb6110:;
						{
							if (_1bc7a461a_checkConditional(_self_, _283821_st.cast_ptr<_1bc743257_Conditional>(&__jule_any_type35))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type47) {
						_case_begin_1c1bb6187:;
						{
							if (_1bc7a495b_checkMatch(_self_, _283821_st.cast_ptr<_1bc746755_Match>(&__jule_any_type47))) {
								return true;;
							};
						}
					}
					_match_end_1c1bb5b04:;
				};
			}
			_iter_next_1c1bb542d:;
			++it;
			goto _iter_begin_1c1bb542d;
		}
		_iter_end_1c1bb542d:;
	};
	return false;;
}



inline jule::Bool _1bc7a542e_check(_1bc7a3e44_missingRetChecker* _self_, jule::Ptr<_1bc74261e_Scope> _288024_s) {
	return _1bc7a50dd_checkScope(_self_, _288024_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc7a3e44_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc7a6353_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "Range:" << _Src._field_Range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1bc7a7893_IsInitialized(_1bc7a750d_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _1bc7a7b29_IsTypeInferred(_1bc7a750d_Var* _self_) {
	return (((*(_self_))._field_Kind == nullptr) || ((*((*(_self_))._field_Kind))._field_Decl == nullptr));;
}



inline jule::Bool _1bc7a7db0_untypedConstant(_1bc7a750d_Var* _self_) {
	return (_1bc7a7b29_IsTypeInferred(_self_) && (*((*((*(_self_))._field_Value))._field_Data))._field_untyped);;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc7a750d_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "IterRelation:" << _Src._field_IterRelation << ", ";
	_Stream << "RetOrder:" << _Src._field_RetOrder << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1bc7a8960_Dispose(jule::Ptr<_1ece1b092_Fn> _1023_f) {
	return ((((((((((_1023_f != nullptr) && ((*(_1023_f))._field_Owner != nullptr)) && (*(_1023_f))._field_Ident.equal("Dispose", 7)) && (!((*(_1023_f))._field_Statically))) && (!((*(_1023_f))._field_Unsafety))) && _1ece1b515_IsVoid(_1023_f.ptr())) && ((*(_1023_f))._field_Generics.len() == 0LL)) && ((*(_1023_f))._field_Params.len() == 1LL)) && (*((*(_1023_f))._field_Params[0LL]))._field_Mutable) && (!(_1ece19e70_IsRef((*(_1023_f))._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__1bc7a8c29_Str(jule::Ptr<_1ece1b092_Fn> _2419_f) {
	if (((((((((((_2419_f == nullptr) || ((*(_2419_f))._field_Owner == nullptr)) || (!(*(_2419_f))._field_Ident.equal("Str", 3))) || (*(_2419_f))._field_Statically) || (*(_2419_f))._field_Unsafety) || _1ece1b515_IsVoid(_2419_f.ptr())) || ((*(_2419_f))._field_Generics.len() != 0LL)) || ((*(_2419_f))._field_Params.len() != 1LL)) || (*((*(_2419_f))._field_Params[0LL]))._field_Mutable) || _1ece19e70_IsRef((*(_2419_f))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1ece1de96_FnIns> _3813_ins = (*(_2419_f))._field_Instances[0LL];;
	jule::Ptr<_1bc848c97_Prim> _399_prim = _1bc84381e_Prim((*(_3813_ins))._field_Result.ptr());;
	if ((_399_prim == nullptr)) {
		return false;;
	};
	return _1bc84c22e_IsStr(_399_prim.ptr());;
}



inline jule::Bool static__1bc7a909d_logical(jule::Ptr<_1ece1b092_Fn>* _4624_f, jule::Str _4632_ident) {
	if (((((((((((((((*(_4624_f)) == nullptr) || ((*((*(_4624_f))))._field_Ident != _4632_ident)) || ((*((*(_4624_f))))._field_Owner == nullptr)) || ((*((*(_4624_f))))._field_Instances.len() == 0LL)) || (*((*(_4624_f))))._field_Statically) || (*((*(_4624_f))))._field_Unsafety) || _1ece1b515_IsVoid((*(_4624_f)).ptr())) || ((*((*(_4624_f))))._field_Generics.len() != 0LL)) || ((*((*(_4624_f))))._field_Params.len() != 2LL)) || (*((*((*(_4624_f))))._field_Params[0LL]))._field_Mutable) || _1ece19e70_IsRef((*((*(_4624_f))))._field_Params[0LL].ptr())) || (*((*((*(_4624_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_4624_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1ece1de96_FnIns> _6313_ins = (*((*(_4624_f))))._field_Instances[0LL];;
	jule::Ptr<_1bc848c97_Prim> _649_prim = _1bc84381e_Prim((*(_6313_ins))._field_Result.ptr());;
	if (((_649_prim == nullptr) || (!(_1bc84be98_IsBool(_649_prim.ptr()))))) {
		return false;;
	};
	return ((*(_6313_ins))._field_Owner == _1bc844d92_Struct((*((*(_6313_ins))._field_Params[1LL]))._field_Kind.ptr()));;
}



inline jule::Bool static__1bc7a9367_Eq(jule::Ptr<_1ece1b092_Fn> _7218_f) {
	return static__1bc7a909d_logical(&(_7218_f), jule::Str::lit("Eq", 2));;
}



inline jule::Bool static__1bc7a9631_Gt(jule::Ptr<_1ece1b092_Fn> _7718_f) {
	return static__1bc7a909d_logical(&(_7718_f), jule::Str::lit("Gt", 2));;
}



inline jule::Bool static__1bc7a98ea_GtEq(jule::Ptr<_1ece1b092_Fn> _8220_f) {
	return static__1bc7a909d_logical(&(_8220_f), jule::Str::lit("GtEq", 4));;
}



inline jule::Bool static__1bc7a9bb4_Lt(jule::Ptr<_1ece1b092_Fn> _8718_f) {
	return static__1bc7a909d_logical(&(_8718_f), jule::Str::lit("Lt", 2));;
}



inline jule::Bool static__1bc7a9e7d_LtEq(jule::Ptr<_1ece1b092_Fn> _9220_f) {
	return static__1bc7a909d_logical(&(_9220_f), jule::Str::lit("LtEq", 4));;
}



inline jule::Bool static__1bc7aa302_result(jule::Ptr<_1ece1b092_Fn>* _9623_f, jule::Str _9631_ident) {
	if (((((((((((((((*(_9623_f)) == nullptr) || ((*((*(_9623_f))))._field_Ident != _9631_ident)) || ((*((*(_9623_f))))._field_Owner == nullptr)) || ((*((*(_9623_f))))._field_Instances.len() == 0LL)) || (*((*(_9623_f))))._field_Statically) || (*((*(_9623_f))))._field_Unsafety) || _1ece1b515_IsVoid((*(_9623_f)).ptr())) || ((*((*(_9623_f))))._field_Generics.len() != 0LL)) || ((*((*(_9623_f))))._field_Params.len() != 2LL)) || (*((*((*(_9623_f))))._field_Params[0LL]))._field_Mutable) || _1ece19e70_IsRef((*((*(_9623_f))))._field_Params[0LL].ptr())) || (*((*((*(_9623_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_9623_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1ece1de96_FnIns> _11313_ins = (*((*(_9623_f))))._field_Instances[0LL];;
	return (_1bc844d92_Struct((*(_11313_ins))._field_Result.ptr()) == (*(_11313_ins))._field_Owner);;
}



inline jule::Bool static__1bc7aa5bb_Shl(jule::Ptr<_1ece1b092_Fn> _11819_f) {
	return static__1bc7aa302_result(&(_11819_f), jule::Str::lit("Shl", 3));;
}



inline jule::Bool static__1bc7aa885_Shr(jule::Ptr<_1ece1b092_Fn> _12319_f) {
	return static__1bc7aa302_result(&(_12319_f), jule::Str::lit("Shr", 3));;
}



inline jule::Bool static__1bc7aab4e_Add(jule::Ptr<_1ece1b092_Fn> _12819_f) {
	return static__1bc7aa302_result(&(_12819_f), jule::Str::lit("Add", 3));;
}



inline jule::Bool static__1bc7aae18_Sub(jule::Ptr<_1ece1b092_Fn> _13319_f) {
	return static__1bc7aa302_result(&(_13319_f), jule::Str::lit("Sub", 3));;
}



inline jule::Bool static__1bc7ab1d2_Div(jule::Ptr<_1ece1b092_Fn> _13819_f) {
	return static__1bc7aa302_result(&(_13819_f), jule::Str::lit("Div", 3));;
}



inline jule::Bool static__1bc7ab49b_Mul(jule::Ptr<_1ece1b092_Fn> _14319_f) {
	return static__1bc7aa302_result(&(_14319_f), jule::Str::lit("Mul", 3));;
}



inline jule::Bool static__1bc7ab765_Mod(jule::Ptr<_1ece1b092_Fn> _14819_f) {
	return static__1bc7aa302_result(&(_14819_f), jule::Str::lit("Mod", 3));;
}



inline jule::Bool static__1bc7aba2e_BitAnd(jule::Ptr<_1ece1b092_Fn> _15322_f) {
	return static__1bc7aa302_result(&(_15322_f), jule::Str::lit("BitAnd", 6));;
}



inline jule::Bool static__1bc7abce8_BitOr(jule::Ptr<_1ece1b092_Fn> _15821_f) {
	return static__1bc7aa302_result(&(_15821_f), jule::Str::lit("BitOr", 5));;
}



inline jule::Bool static__1bc7ac0b2_BitXor(jule::Ptr<_1ece1b092_Fn> _16322_f) {
	return static__1bc7aa302_result(&(_16322_f), jule::Str::lit("BitXor", 6));;
}



inline jule::Bool static__1bc7ac436_unary(jule::Ptr<_1ece1b092_Fn>* _16722_f, jule::Str _16730_ident) {
	if (((((((((((((*(_16722_f)) == nullptr) || ((*((*(_16722_f))))._field_Ident != _16730_ident)) || ((*((*(_16722_f))))._field_Owner == nullptr)) || ((*((*(_16722_f))))._field_Instances.len() == 0LL)) || (*((*(_16722_f))))._field_Statically) || (*((*(_16722_f))))._field_Unsafety) || _1ece1b515_IsVoid((*(_16722_f)).ptr())) || ((*((*(_16722_f))))._field_Generics.len() != 0LL)) || ((*((*(_16722_f))))._field_Params.len() != 1LL)) || (*((*((*(_16722_f))))._field_Params[0LL]))._field_Mutable) || _1ece19e70_IsRef((*((*(_16722_f))))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1ece1de96_FnIns> _18213_ins = (*((*(_16722_f))))._field_Instances[0LL];;
	return (_1bc844d92_Struct((*(_18213_ins))._field_Result.ptr()) == (*(_18213_ins))._field_Owner);;
}



inline jule::Bool static__1bc7ac700_Neg(jule::Ptr<_1ece1b092_Fn> _18719_f) {
	return static__1bc7ac436_unary(&(_18719_f), jule::Str::lit("Neg", 3));;
}



inline jule::Bool static__1bc7ac9b9_Pos(jule::Ptr<_1ece1b092_Fn> _19219_f) {
	return static__1bc7ac436_unary(&(_19219_f), jule::Str::lit("Pos", 3));;
}



inline jule::Bool static__1bc7acc83_BitNot(jule::Ptr<_1ece1b092_Fn> _19722_f) {
	return static__1bc7ac436_unary(&(_19722_f), jule::Str::lit("BitNot", 6));;
}



inline jule::Bool static__1bc7ad107_assign(jule::Ptr<_1ece1b092_Fn>* _20123_f, jule::Str _20131_ident) {
	if (((((((((((((((*(_20123_f)) == nullptr) || ((*((*(_20123_f))))._field_Ident != _20131_ident)) || ((*((*(_20123_f))))._field_Owner == nullptr)) || ((*((*(_20123_f))))._field_Instances.len() == 0LL)) || (*((*(_20123_f))))._field_Statically) || (*((*(_20123_f))))._field_Unsafety) || (!(_1ece1b515_IsVoid((*(_20123_f)).ptr())))) || ((*((*(_20123_f))))._field_Generics.len() != 0LL)) || ((*((*(_20123_f))))._field_Params.len() != 2LL)) || (!((*((*((*(_20123_f))))._field_Params[0LL]))._field_Mutable))) || _1ece19e70_IsRef((*((*(_20123_f))))._field_Params[0LL].ptr())) || (*((*((*(_20123_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_20123_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__1bc7ad3c1_AddAssign(jule::Ptr<_1ece1b092_Fn> _22125_f) {
	return static__1bc7ad107_assign(&(_22125_f), jule::Str::lit("AddAssign", 9));;
}



inline jule::Bool static__1bc7ad68a_SubAssign(jule::Ptr<_1ece1b092_Fn> _22625_f) {
	return static__1bc7ad107_assign(&(_22625_f), jule::Str::lit("SubAssign", 9));;
}



inline jule::Bool static__1bc7ad954_DivAssign(jule::Ptr<_1ece1b092_Fn> _23125_f) {
	return static__1bc7ad107_assign(&(_23125_f), jule::Str::lit("DivAssign", 9));;
}



inline jule::Bool static__1bc7adc1d_MulAssign(jule::Ptr<_1ece1b092_Fn> _23625_f) {
	return static__1bc7ad107_assign(&(_23625_f), jule::Str::lit("MulAssign", 9));;
}



inline jule::Bool static__1bc7aded7_ModAssign(jule::Ptr<_1ece1b092_Fn> _24125_f) {
	return static__1bc7ad107_assign(&(_24125_f), jule::Str::lit("ModAssign", 9));;
}



inline jule::Bool static__1bc7ae2a1_ShlAssign(jule::Ptr<_1ece1b092_Fn> _24625_f) {
	return static__1bc7ad107_assign(&(_24625_f), jule::Str::lit("ShlAssign", 9));;
}



inline jule::Bool static__1bc7ae56a_ShrAssign(jule::Ptr<_1ece1b092_Fn> _25125_f) {
	return static__1bc7ad107_assign(&(_25125_f), jule::Str::lit("ShrAssign", 9));;
}



inline jule::Bool static__1bc7ae834_BitOrAssign(jule::Ptr<_1ece1b092_Fn> _25627_f) {
	return static__1bc7ad107_assign(&(_25627_f), jule::Str::lit("BitOrAssign", 11));;
}



inline jule::Bool static__1bc7aeaed_BitAndAssign(jule::Ptr<_1ece1b092_Fn> _26128_f) {
	return static__1bc7ad107_assign(&(_26128_f), jule::Str::lit("BitAndAssign", 12));;
}



inline jule::Bool static__1bc7aedb7_BitXorAssign(jule::Ptr<_1ece1b092_Fn> _26628_f) {
	return static__1bc7ad107_assign(&(_26628_f), jule::Str::lit("BitXorAssign", 12));;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc7a8322_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1bc7e7cce_pushErr(_1bc7e77d4_typeCompatibilityChecker* _self_, jule::Str _11826_fmt, jule::Slice<jule::Any> _11839_args) {
	_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _11826_fmt, _11839_args);
}



inline jule::Bool _1bc7e8065_checkTrait(_1bc7e77d4_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1bc84229b_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1bc713a41_Trait> _12613_trt = _1bc845128_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _12713_ref = false;;
	{
		
		if ((_1bc843aa5_Sptr((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1c1c11765:;
			{
				_12713_ref=true;
				(*(_self_))._field_src=(*(_1bc843aa5_Sptr((*(_self_))._field_src.ptr())))._field_Elem;
				if ((_1bc844d92_Struct((*(_self_))._field_src.ptr()) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1c1c117dc;
			}
		}
		else if ((_1bc844d92_Struct((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1c1c117dc:;
			{
				jule::Ptr<_1bc5be0b1_StructIns> _13713_s = _1bc844d92_Struct((*(_self_))._field_src.ptr());;
				if ((!(_1bc5bc972_IsImplements((*(_13713_s))._field_Decl.ptr(), _12613_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_12713_ref)) && _1bc7e63a4_traitHasReferenceReceiver(&(_12613_trt)))) {
					_1bc7e7cce_pushErr(_self_, jule::Str::lit("trait has reference receiver parameter used method, cannot assign non-reference instance", 88), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1bc845128_Trait((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1c1c11864:;
			{
				jule::Ptr<_1bc713a41_Trait> _14717_base = _1bc845128_Trait((*(_self_))._field_src.ptr());;
				if ((_12613_trt == _14717_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_1c1c1633b:;
				{
					auto expr = &((*(_14717_base))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c1c16a45:;
					if (it != expr_end) {
						jule::Ptr<_1bc5bb333_Struct> _15220_s1 = *it;
						{
							{
								auto expr = &((*(_12613_trt))._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1c1c17419:;
								if (it != expr_end) {
									jule::Ptr<_1bc5bb333_Struct> _15324_s2 = *it;
									{
										if ((_15220_s1 == _15324_s2)) {
											goto _iter_next_1c1c16a45;
										};
									}
									_iter_next_1c1c17419:;
									++it;
									goto _iter_begin_1c1c17419;
								}
								_iter_end_1c1c17419:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_1c1c16a45:;
						++it;
						goto _iter_begin_1c1c16a45;
					}
					_iter_end_1c1c16a45:;
				};
				{
					auto expr = &((*(_12613_trt))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c1c178d1:;
					if (it != expr_end) {
						jule::Ptr<_1ece1b092_Fn> _16025_m1 = *it;
						{
							jule::Ptr<_1ece1b092_Fn> _16121_m2 = _1bc7146e0_FindMethod(_14717_base.ptr(), (*(_16025_m1))._field_Ident);;
							if ((_16121_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_1ece1de96_FnIns> _16517_m1k = _1bc7918e3_getTraitCheckFnKind((*(_self_))._field_s, &(_16025_m1));;
							jule::Ptr<_1ece1de96_FnIns> _16617_m2k = _1bc7918e3_getTraitCheckFnKind((*(_self_))._field_s, &(_16121_m2));;
							if ((!(_1ece1ee0e_equalTrait(_16517_m1k, &(_16617_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_1c1c178d1:;
						++it;
						goto _iter_begin_1c1c178d1;
					}
					_iter_end_1c1c178d1:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1c1c116aa:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1c1c11655:;
	};
}



inline jule::Bool _1bc7e82eb_checkPtr(_1bc7e77d4_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1bc84229b_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1bc85108a_Ptr> _18113_dest = _1bc843d3b_Ptr((*(_self_))._field_dest.ptr());;
	if (_1bc851ac4_IsUnsafe(_18113_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1bc8418c7_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1bc7e8582_checkPrim(_1bc7e77d4_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*((*(_self_))._field_dest))._field_Variadic))) {
		jule::Ptr<_1bc848c97_Prim> _19013_prim = _1bc84381e_Prim((*(_self_))._field_dest.ptr());;
		if (((_19013_prim != nullptr) && _1bc84c4b5_IsAny(_19013_prim.ptr()))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1bc8418c7_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1bc7e897d_typeEnum(_1bc7e77d4_typeCompatibilityChecker* _self_, jule::Ptr<_1bc717957_TypeEnum>* _19828_e, jule::Ptr<_1bc8411bd_TypeKind>* _19847_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_19828_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1c1e7a6:;
		if (it != expr_end) {
			jule::Ptr<_1bc717380_TypeEnumItem> _19921_item = *it;
			{
				if (_1bc8418c7_Equal((*((*(_19921_item))._field_Kind))._field_Kind, (*(_19847_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1bc717957_TypeEnum> _20317_ke = _1bc844358_TypeEnum((*((*(_19921_item))._field_Kind))._field_Kind.ptr());;
				if ((_20317_ke == nullptr)) {
					goto _iter_next_1c1c1e7a6;
				};
				if (_1bc7e897d_typeEnum(_self_, &(_20317_ke), _19847_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1c1c1e7a6:;
			++it;
			goto _iter_begin_1c1c1e7a6;
		}
		_iter_end_1c1c1e7a6:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1bc7e8c14_checkTypeEnum(_1bc7e77d4_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1bc8418c7_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1bc717957_TypeEnum> _21813_e = _1bc844358_TypeEnum((*(_self_))._field_dest.ptr());;
	__jule_func_result = _1bc7e897d_typeEnum(_self_, &(_21813_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _1bc7e8e9a_check(_1bc7e77d4_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_1bc843d3b_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _1bc7e82eb_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_1bc84306b_NilCompatible((*(_self_))._field_dest.ptr())) {
		if (_1bc84229b_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_1bc84381e_Prim((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1c1c250d6:;
			{
				__jule_func_result = _1bc7e8582_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1bc844358_TypeEnum((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1c1c24624:;
			{
				__jule_func_result = _1bc7e8c14_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1bc845128_Trait((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1c1c2468a:;
			{
				__jule_func_result = _1bc7e8065_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1c1c245ad:;
			{
				__jule_func_result = _1bc8418c7_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1c1c23d2c:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1bc7e77d4_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _1bc7e9a17_pushErr(_1bc7e9583_assignTypeChecker* _self_, jule::Str _25426_fmt, jule::Slice<jule::Any> _25439_args) {
	_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _25426_fmt, _25439_args);
}



inline jule::Bool _1bc7e9c9d_checkValidity(_1bc7e9583_assignTypeChecker* _self_) {
	jule::Bool _25913_valid = true;;
	{
		
		if ((_1bc844b0b_Fn((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c1c27d53:;
			{
				jule::Ptr<_1ece1de96_FnIns> _26213_f = _1bc844b0b_Fn((*((*(_self_))._field_d))._field_Kind.ptr());;
				{
					
					if (_1ece2042b_IsBuiltin(_26213_f.ptr())) {
						_case_begin_1c1c2967e:;
						{
							_1bc7e9a17_pushErr(_self_, jule::Str::lit("builtin define cannot use as anonymous function", 47), jule::Slice<jule::Any>());
							_25913_valid=false;
						}
					}
					else if ((*((*(_26213_f))._field_Decl))._field_Binded) {
						_case_begin_1c1c29706:;
						{
							_1bc7e9a17_pushErr(_self_, jule::Str::lit("binded functions cannot use as anonymous function", 49), jule::Slice<jule::Any>());
							_25913_valid=false;
						}
					}
					else if (((!((*((*(_26213_f))._field_Decl))._field_Statically)) && _1ece1b79b_IsMethod((*(_26213_f))._field_Decl.ptr()))) {
						_case_begin_1c1c2977d:;
						{
							_1bc7e9a17_pushErr(_self_, jule::Str::lit("non-static methods cannot use as anonymous function", 51), jule::Slice<jule::Any>());
							_25913_valid=false;
						}
					}
					else if ((((*((*(_26213_f))._field_Decl))._field_Generics.len() > 0LL) && ((*(_26213_f))._field_Generics.len() == 0LL))) {
						_case_begin_1c1c29805:;
						{
							_1bc7e9a17_pushErr(_self_, jule::Str::lit("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
							_1bc787224_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("instantiate generic function to use as anonymous function", 57), jule::Slice<jule::Any>());
							_25913_valid=false;
						}
					}
					_match_end_1c1c295a2:;
				};
			}
		}
		else if ((_1bc845645_Tup((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c1c27dca:;
			{
				_1bc7e9a17_pushErr(_self_, jule::Str::lit("tuples cannot assign to single define in same time", 50), jule::Slice<jule::Any>());
				_25913_valid=false;
			}
		}
		_match_end_1c1c27c98:;
	};
	return _25913_valid;;
}



inline jule::Bool _1bc7ea034_checkConst(_1bc7e9583_assignTypeChecker* _self_) {
	if (((!((*((*(_self_))._field_d))._field_untyped)) || (_1bc84381e_Prim((*(_self_))._field_dest.ptr()) == nullptr))) {
		return false;;
	};
	jule::Str _2919_kind = (*(_1bc84381e_Prim((*(_self_))._field_dest.ptr())))._field_Kind;;
	{
		
		if (_230d57ae4_IsFloat(_2919_kind)) {
			_case_begin_1c1c307ea:;
			{
				if ((!(_1bc7e6739_floatAssignable(&(_2919_kind), &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*((*(_self_))._field_d))._field_Constant))._field_Kind=_2919_kind;
			}
		}
		else if (_230d577a3_IsInt(_2919_kind)) {
			_case_begin_1c1c30872:;
			{
				if ((!(_1bc7e72ea_intAssignable(_2919_kind, &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*((*(_self_))._field_d))._field_Constant))._field_Kind=_2919_kind;
			}
		}
		else {
			_case_begin_1c1c3072e:;
			{
				return false;;
			}
		}
		_match_end_1c1c3060d:;
	};
	return true;;
}



inline jule::Bool _1bc7ea2ba_checkCompatibility(_1bc7e9583_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1c1c32a83:;
			{
				return false;;
			}
		}
		else if ((!(_1bc7e9c9d_checkValidity(_self_)))) {
			_case_begin_1c1c32ae9:;
			{
				return false;;
			}
		}
		else if (_1bc7ea034_checkConst(_self_)) {
			_case_begin_1c1c32b60:;
			{
				return true;;
			}
		}
		else if ((_1bc8440c2_Enum((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c1c32bc6:;
			{
				jule::Ptr<_1bc8411bd_TypeKind> _32017_dkind = (*(_self_))._field_dest;;
				if ((_1bc8440c2_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_32017_dkind=(*((*(_1bc8440c2_Enum((*(_self_))._field_dest.ptr())))._field_Kind))._field_Kind;
				};
				jule::Ptr<_1bc848c97_Prim> _32413_prim = _1bc84381e_Prim((*(_self_))._field_dest.ptr());;
				if (((_32413_prim == nullptr) || _1bc84c4b5_IsAny(_32413_prim.ptr()))) {
					goto _match_end_1c1c3109d;
				};
				jule::Ptr<_1bc8411bd_TypeKind> _32917_dest = (*((*(_1bc8440c2_Enum((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Kind))._field_Kind;;
				return _1bc79032b_checkTypeCompatibility((*(_self_))._field_s, &(_32917_dest), &(_32017_dkind), &((*(_self_))._field_errorToken));;
			}
		}
		_match_end_1c1c3109d:;
	};
	return _1bc790c00_checkTypeCompatibility1((*(_self_))._field_s, &((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _1bc7ea551_check(_1bc7e9583_assignTypeChecker* _self_) {
	jule::Bool _3369_ok = _1bc7ea2ba_checkCompatibility(_self_);;
	if ((_3369_ok && (!((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic)))) {
		_1bc85d691_applyImplicitCast(&((*(_self_))._field_dest), &((*(_self_))._field_d));
	};
	return _3369_ok;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc7e9583_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c1c4bea9_annotateConstraintElem(_1bc7eae58_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc8411bd_TypeKind>* _35649_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1c1c4d6d6:;
			{
				jule::Ptr<_1bc8411bd_TypeKind> _35921_elem = nullptr;;
				{
					
{
						_case_begin_1c1c4e4ea:;
						{
							_35921_elem=(*(_1bc8445de_Arr((*(_35649_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1c1c4e374:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.cast_ptr<_1bc597908_ArrTypeDecl>(&__jule_any_type69)))._field_Elem;
				return _1bc7ec663_annotateConstraint(_self_, &(_35921_elem));;
			}
		}
		_match_end_1c1c4d670:;
	};
	return false;;
}

inline jule::Bool _1c1c4c3c7_annotateConstraintElem(_1bc7eae58_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc8411bd_TypeKind>* _35649_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1c1c521ac:;
			{
				jule::Ptr<_1bc8411bd_TypeKind> _35921_elem = nullptr;;
				{
					
{
						_case_begin_1c1c53048:;
						{
							_35921_elem=(*(_1bc844875_Slc((*(_35649_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1c1c52d4a:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.cast_ptr<_1bc596a6c_SlcTypeDecl>(&__jule_any_type70)))._field_Elem;
				return _1bc7ec663_annotateConstraint(_self_, &(_35921_elem));;
			}
		}
		_match_end_1c1c52146:;
	};
	return false;;
}

inline jule::Bool _1c1c4d9c2_annotateConstraintElem(_1bc7eae58_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc8411bd_TypeKind>* _35649_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1c1c55c4e:;
			{
				jule::Ptr<_1bc8411bd_TypeKind> _35921_elem = nullptr;;
				{
					
{
						_case_begin_1c1c56b62:;
						{
							_35921_elem=(*(_1bc843d3b_Ptr((*(_35649_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1c1c568dc:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.cast_ptr<_1bc597166_PtrTypeDecl>(&__jule_any_type71)))._field_Elem;
				return _1bc7ec663_annotateConstraint(_self_, &(_35921_elem));;
			}
		}
		_match_end_1c1c55bd8:;
	};
	return false;;
}

inline jule::Bool _1c1c5480d_annotateConstraintElem(_1bc7eae58_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc8411bd_TypeKind>* _35649_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1c1c59390:;
			{
				jule::Ptr<_1bc8411bd_TypeKind> _35921_elem = nullptr;;
				{
					
{
						_case_begin_1c1c5a32a:;
						{
							_35921_elem=(*(_1bc843aa5_Sptr((*(_35649_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1c1c5a02d:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.cast_ptr<_1bc5966d7_SptrTypeDecl>(&__jule_any_type72)))._field_Elem;
				return _1bc7ec663_annotateConstraint(_self_, &(_35921_elem));;
			}
		}
		_match_end_1c1c59329:;
	};
	return false;;
}



inline jule::Bool _1bc7eb84e_annotateConstraintMap(_1bc7eae58_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc8411bd_TypeKind>* _37645_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1c1c39e0e:;
			{
				jule::Ptr<_1bc84e93a_Map> _37917_m = _1bc8453ae_Map((*(_37645_k)).ptr());;
				jule::Ptr<_1bc598156_MapTypeDecl> _38017_m2 = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1bc598156_MapTypeDecl>(&__jule_any_type73);;
				(*(_self_))._field_c=(*(_38017_m2))._field_Key;
				if ((!(_1bc7ec663_annotateConstraint(_self_, &((*(_37917_m))._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=(*(_38017_m2))._field_Val;
				__jule_func_result = _1bc7ec663_annotateConstraint(_self_, &((*(_37917_m))._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_1c1c39d98:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1bc7ebb90_annotateConstraintTup(_1bc7eae58_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc8411bd_TypeKind>* _39145_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1c1c3cd13:;
			{
				jule::Ptr<_1bc596d69_TupleTypeDecl> _39417_tup = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1bc596d69_TupleTypeDecl>(&__jule_any_type74);;
				jule::Ptr<_1bc84dd8a_Tuple> _39517_tup2 = _1bc845645_Tup((*(_39145_k)).ptr());;
				{
					auto expr = &((*(_39517_tup2))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c1c3e5ea:;
					if (it != expr_end) {
						jule::Ptr<_1bc8411bd_TypeKind> _39625_t2 = *it;
						{
							{
								auto expr = &((*(_39417_tup))._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1c1c40057:;
								if (it != expr_end) {
									jule::Ptr<_1bc59563c_TypeDecl> _39729_t = *it;
									{
										(*(_self_))._field_c=_39729_t;
										if (_1bc7ec663_annotateConstraint(_self_, &(_39625_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1c1c40057:;
									++it;
									goto _iter_begin_1c1c40057;
								}
								_iter_end_1c1c40057:;
							};
						}
						_iter_next_1c1c3e5ea:;
						++it;
						goto _iter_begin_1c1c3e5ea;
					}
					_iter_end_1c1c3e5ea:;
				};
			}
		}
		_match_end_1c1c3cc9c:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1bc7ebed1_annotateConstraintFn(_1bc7eae58_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc8411bd_TypeKind>* _40844_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1c1c3ec16:;
			{
				jule::Ptr<_1bc5ac159_FnDecl> _41117_pf = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1bc5ac159_FnDecl>(&__jule_any_type14);;
				jule::Ptr<_1ece1de96_FnIns> _41217_f = _1bc844b0b_Fn((*(_40844_k)).ptr());;
				{
					auto expr = &((*(_41217_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c1c42532:;
					if (it != expr_end) {
						jule::I64 _41318_i = it - expr->begin();
						jule::Ptr<_1ece1ceea_ParamIns> _41325_fp = *it;
						{
							(*(_self_))._field_c=(*((*(_41117_pf))._field_Params[_41318_i]))._field_Kind;
							if (_1bc7ec663_annotateConstraint(_self_, &((*(_41325_fp))._field_Kind))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1c1c42532:;
						++it;
						_41318_i++;
						goto _iter_begin_1c1c42532;
					}
					_iter_end_1c1c42532:;
				};
				if (((*(_41117_pf))._field_Result != nullptr)) {
					(*(_self_))._field_c=(*((*(_41117_pf))._field_Result))._field_Kind;
					if (_1bc7ec663_annotateConstraint(_self_, &((*(_41217_f))._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1c1c3eba0:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1bc7ec322_annotateConstraintIdent(_1bc7eae58_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc8411bd_TypeKind>* _42947_k) {
	jule::Ptr<_1bc595c47_IdentTypeDecl> _43013_ident = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1bc595c47_IdentTypeDecl>(&__jule_any_type20);;
	jule::Ptr<_1bc5be0b1_StructIns> _43113_s = _1bc844d92_Struct((*(_42947_k)).ptr());;
	{
		auto expr = &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1c45e81:;
		if (it != expr_end) {
			jule::I64 _43213_i = it - expr->begin();
			jule::Ptr<_1bc5a76a4_GenericDecl> _43216_g = *it;
			{
				if (((*(_43216_g))._field_Ident == (*(_43013_ident))._field_Ident)) {
					jule::Ptr<_1bc83e7d7_InsGeneric> _43421_fg = (*((*(_self_))._field_f))._field_Generics[_43213_i];;
					if ((_43421_fg != nullptr)) {
						return false;;
					};
					_1bc7ec9c6_pushGeneric(_self_, _42947_k, _43213_i);
					return true;;
				};
				if ((_43113_s == nullptr)) {
					goto _iter_next_1c1c45e81;
				};
				jule::Ptr<_1bc59563c_TypeDecl> _44417_c = (*(_self_))._field_c;;
				{
					auto expr = &((*(_43013_ident))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c1c468aa:;
					if (it != expr_end) {
						jule::Ptr<_1bc59563c_TypeDecl> _44525_ig = *it;
						{
							(*(_self_))._field_c=_44525_ig;
							{
								auto expr = &((*(_43113_s))._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1c1c49616:;
								if (it != expr_end) {
									jule::Ptr<_1bc83e7d7_InsGeneric> _44729_sg = *it;
									{
										if (_1bc7ec663_annotateConstraint(_self_, &((*(_44729_sg))._field_Kind))) {
											return true;;
										};
									}
									_iter_next_1c1c49616:;
									++it;
									goto _iter_begin_1c1c49616;
								}
								_iter_end_1c1c49616:;
							};
						}
						_iter_next_1c1c468aa:;
						++it;
						goto _iter_begin_1c1c468aa;
					}
					_iter_end_1c1c468aa:;
				};
				(*(_self_))._field_c=_44417_c;
			}
			_iter_next_1c1c45e81:;
			++it;
			_43213_i++;
			goto _iter_begin_1c1c45e81;
		}
		_iter_end_1c1c45e81:;
	};
	return false;;
}



inline jule::Bool _1bc7ec663_annotateConstraint(_1bc7eae58_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc8411bd_TypeKind>* _45842_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1c1c4903e:;
			{
				return _1bc7ec322_annotateConstraintIdent(_self_, _45842_k);;
			}
		}
		_match_end_1c1c48ec8:;
	};
	{
		
		if ((_1bc8445de_Arr((*(_45842_k)).ptr()) != nullptr)) {
			_case_begin_1c1c4a727:;
			{
				return _1c1c4bea9_annotateConstraintElem(_self_, _45842_k);;
			}
		}
		else if ((_1bc844875_Slc((*(_45842_k)).ptr()) != nullptr)) {
			_case_begin_1c1c4a79e:;
			{
				return _1c1c4c3c7_annotateConstraintElem(_self_, _45842_k);;
			}
		}
		else if ((_1bc843d3b_Ptr((*(_45842_k)).ptr()) != nullptr)) {
			_case_begin_1c1c4a826:;
			{
				return _1c1c4d9c2_annotateConstraintElem(_self_, _45842_k);;
			}
		}
		else if ((_1bc843aa5_Sptr((*(_45842_k)).ptr()) != nullptr)) {
			_case_begin_1c1c4a89d:;
			{
				return _1c1c5480d_annotateConstraintElem(_self_, _45842_k);;
			}
		}
		else if ((_1bc8453ae_Map((*(_45842_k)).ptr()) != nullptr)) {
			_case_begin_1c1c4b063:;
			{
				return _1bc7eb84e_annotateConstraintMap(_self_, _45842_k);;
			}
		}
		else if ((_1bc844b0b_Fn((*(_45842_k)).ptr()) != nullptr)) {
			_case_begin_1c1c4b0da:;
			{
				return _1bc7ebed1_annotateConstraintFn(_self_, _45842_k);;
			}
		}
		else if ((_1bc845645_Tup((*(_45842_k)).ptr()) != nullptr)) {
			_case_begin_1c1c4b162:;
			{
				return _1bc7ebb90_annotateConstraintTup(_self_, _45842_k);;
			}
		}
		else {
			_case_begin_1c1c4ab12:;
			{
				return false;;
			}
		}
		_match_end_1c1c4aaac:;
	};
}



inline void _1bc7ec9c6_pushGeneric(_1bc7eae58_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc8411bd_TypeKind>* _48335_k, jule::I64 _48349_i) {
	(*((*(_self_))._field_f))._field_Generics[_48349_i]=jule::new_ptr<_1bc83e7d7_InsGeneric>(_1bc83e7d7_InsGeneric{._field_Kind=(*(_48335_k)), });
	jule::Ptr<_1bc5a76a4_GenericDecl> _48513_gd = (*((*((*(_self_))._field_f))._field_Decl))._field_Generics[_48349_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1c5d43d:;
		if (it != expr_end) {
			jule::Ptr<_1bc8411bd_TypeKind> _48621_ignored = *it;
			{
				if (((*(_48513_gd))._field_Ident == _1bc841586_Str(_48621_ignored.ptr()))) {
					(*(_48621_ignored))._field_Kind=(*((*(_48335_k))))._field_Kind;
				};
			}
			_iter_next_1c1c5d43d:;
			++it;
			goto _iter_begin_1c1c5d43d;
		}
		_iter_end_1c1c5d43d:;
	};
	if ((((*(_48513_gd))._field_Constraint == nullptr) || ((*((*(_48513_gd))._field_Constraint))._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=(*((*(_48513_gd))._field_Constraint))._field_Mask[0LL];
	_1bc7ec663_annotateConstraint(_self_, _48335_k);
}



inline jule::Bool _1bc7ecd17_annotatePrim(_1bc7eae58_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc8411bd_TypeKind>* _49843_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1bc7eed3b_annotateAny(_self_, _49843_k);
	return __jule_func_result;;
}



inline jule::Bool _1bc7ed158_annotateArr(_1bc7eae58_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc8411bd_TypeKind>* _50242_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1bc8505b7_Arr> _50313_parr = _1bc8445de_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_50313_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1bc8505b7_Arr> _50713_arr = _1bc8445de_Arr((*(_50242_k)).ptr());;
	(*(_self_))._field_k=(&((*(_50313_parr))._field_Elem));
	__jule_func_result = _1bc80017c_annotateKind(_self_, &((*(_50713_arr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1bc7ed499_annotateSlc(_1bc7eae58_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc8411bd_TypeKind>* _51242_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1bc84d296_Slc> _51313_pslc = _1bc844875_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_51313_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1bc84d296_Slc> _51713_slc = _1bc844875_Slc((*(_51242_k)).ptr());;
	(*(_self_))._field_k=(&((*(_51313_pslc))._field_Elem));
	__jule_func_result = _1bc80017c_annotateKind(_self_, &((*(_51713_slc))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1bc7ed895_checkMapKey(_1bc7eae58_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc8411bd_TypeKind>* _52241_k, jule::Ptr<_1bc8411bd_TypeKind>* _52261_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1bc8411bd_TypeKind>* _52313_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_52241_k;
	__jule_func_result=_1bc80017c_annotateKind(_self_, _52261_ck);
	(*(_self_))._field_k=_52313_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1bc7edbd6_annotateMap(_1bc7eae58_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc8411bd_TypeKind>* _53042_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1bc84e93a_Map> _53113_pmap = _1bc8453ae_Map((*((*(_self_))._field_k)).ptr());;
	if ((_53113_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1bc84e93a_Map> _53513_m = _1bc8453ae_Map((*(_53042_k)).ptr());;
	__jule_func_result = (_1bc7ed895_checkMapKey(_self_, (&((*(_53113_pmap))._field_Key)), &((*(_53513_m))._field_Key)) && _1bc7ed895_checkMapKey(_self_, (&((*(_53113_pmap))._field_Val)), &((*(_53513_m))._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _1bc7ee027_annotateFn(_1bc7eae58_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc8411bd_TypeKind>* _54041_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ece1de96_FnIns> _54113_pf = _1bc844b0b_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_54113_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ece1de96_FnIns> _54513_f = _1bc844b0b_Fn((*(_54041_k)).ptr());;
	{
		
		if (((*(_54113_pf))._field_Params.len() != (*(_54513_f))._field_Params.len())) {
			_case_begin_1c1c6ac42:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1ece1b515_IsVoid((*(_54113_pf))._field_Decl.ptr()) != _1ece1b515_IsVoid((*(_54513_f))._field_Decl.ptr()))) {
			_case_begin_1c1c6acb9:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1c1c6abcb:;
	};
	__jule_func_result=true;
	jule::Ptr<_1bc8411bd_TypeKind>* _55413_old = (*(_self_))._field_k;;
	{
		auto expr = &((*(_54513_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1c6cb78:;
		if (it != expr_end) {
			jule::I64 _55514_i = it - expr->begin();
			jule::Ptr<_1ece1ceea_ParamIns> _55521_fp = *it;
			{
				(*(_self_))._field_k=(&((*((*(_54113_pf))._field_Params[_55514_i]))._field_Kind));
				__jule_func_result=(_1bc80017c_annotateKind(_self_, &((*(_55521_fp))._field_Kind)) && __jule_func_result);
			}
			_iter_next_1c1c6cb78:;
			++it;
			_55514_i++;
			goto _iter_begin_1c1c6cb78;
		}
		_iter_end_1c1c6cb78:;
	};
	if ((!(_1ece1b515_IsVoid((*(_54113_pf))._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&((*(_54113_pf))._field_Result));
		__jule_func_result=(_1bc80017c_annotateKind(_self_, &((*(_54513_f))._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_55413_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1bc7ee368_annotatePtr(_1bc7eae58_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc8411bd_TypeKind>* _56942_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1bc85108a_Ptr> _57013_pptr = _1bc843d3b_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_57013_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1bc85108a_Ptr> _57413_ptr = _1bc843d3b_Ptr((*(_56942_k)).ptr());;
	(*(_self_))._field_k=(&((*(_57013_pptr))._field_Elem));
	__jule_func_result = _1bc80017c_annotateKind(_self_, &((*(_57413_ptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1bc7ee6a9_annotateSptr(_1bc7eae58_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc8411bd_TypeKind>* _57943_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1bc84c7c3_Sptr> _58013_ssptr = _1bc843aa5_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_58013_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1bc84c7c3_Sptr> _58413_sptr = _1bc843aa5_Sptr((*(_57943_k)).ptr());;
	(*(_self_))._field_k=(&((*(_58013_ssptr))._field_Elem));
	__jule_func_result = _1bc80017c_annotateKind(_self_, &((*(_58413_sptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1bc7ee9ea_annotateStruct(_1bc7eae58_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc8411bd_TypeKind>* _58945_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1bc5be0b1_StructIns> _59013_s = _1bc844d92_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_59013_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1bc5be0b1_StructIns> _59413_s2 = _1bc844d92_Struct((*(_58945_k)).ptr());;
	if (((*(_59013_s))._field_Generics.len() != (*(_59413_s2))._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_59013_s))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1c76be8:;
		if (it != expr_end) {
			jule::I64 _59814_i = it - expr->begin();
			jule::Ptr<_1bc83e7d7_InsGeneric> _59821_g = *it;
			{
				jule::Ptr<_1bc83e7d7_InsGeneric> _59917_g2 = (*(_59413_s2))._field_Generics[_59814_i];;
				if (_1bc8418c7_Equal((*(_59821_g))._field_Kind, (*(_59917_g2))._field_Kind)) {
					goto _iter_next_1c1c76be8;
				};
				(*(_self_))._field_k=(&((*(_59821_g))._field_Kind));
				if ((!(_1bc80017c_annotateKind(_self_, &((*(_59917_g2))._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c1c76be8:;
			++it;
			_59814_i++;
			goto _iter_begin_1c1c76be8;
		}
		_iter_end_1c1c76be8:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1bc7eed3b_annotateAny(_1bc7eae58_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc8411bd_TypeKind>* _61142_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _6129_kind = _1bc841586_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1c7a2e5:;
		if (it != expr_end) {
			jule::I64 _61313_i = it - expr->begin();
			jule::Ptr<_1bc5a76a4_GenericDecl> _61316_g = *it;
			{
				if ((_6129_kind != (*(_61316_g))._field_Ident)) {
					goto _iter_next_1c1c7a2e5;
				};
				jule::Ptr<_1bc83e7d7_InsGeneric> _61713_t = (*((*(_self_))._field_f))._field_Generics[_61313_i];;
				{
					
					if ((_61713_t == nullptr) || ((*(_61713_t))._field_Kind == nullptr)) {
						_case_begin_1c1c7bb21:;
						{
							_1bc7ec9c6_pushGeneric(_self_, _61142_k, _61313_i);
						}
					}
					else if ((!(_1bc8418c7_Equal((*(_61713_t))._field_Kind, (*(_61142_k)))))) {
						_case_begin_1c1c7bb98:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1c1c7ba00:;
				};
				(*((*((*(_self_))._field_k))))._field_Kind=(*((*(_61142_k))))._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1c1c7a2e5:;
			++it;
			_61313_i++;
			goto _iter_begin_1c1c7a2e5;
		}
		_iter_end_1c1c7a2e5:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1bc80017c_annotateKind(_1bc7eae58_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc8411bd_TypeKind>* _63243_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1bc7eed3b_annotateAny(_self_, _63243_k)) {
			_case_begin_1c1c7e20b:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1bc84381e_Prim((*(_63243_k)).ptr()) != nullptr)) {
			_case_begin_1c1c7e283:;
			{
				__jule_func_result = _1bc7ecd17_annotatePrim(_self_, _63243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1bc8445de_Arr((*(_63243_k)).ptr()) != nullptr)) {
			_case_begin_1c1c7e4e7:;
			{
				__jule_func_result = _1bc7ed158_annotateArr(_self_, _63243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1bc844875_Slc((*(_63243_k)).ptr()) != nullptr)) {
			_case_begin_1c1c7e55d:;
			{
				__jule_func_result = _1bc7ed499_annotateSlc(_self_, _63243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1bc8453ae_Map((*(_63243_k)).ptr()) != nullptr)) {
			_case_begin_1c1c7e5c4:;
			{
				__jule_func_result = _1bc7edbd6_annotateMap(_self_, _63243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1bc844b0b_Fn((*(_63243_k)).ptr()) != nullptr)) {
			_case_begin_1c1c7e64b:;
			{
				__jule_func_result = _1bc7ee027_annotateFn(_self_, _63243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1bc843d3b_Ptr((*(_63243_k)).ptr()) != nullptr)) {
			_case_begin_1c1c7e6c3:;
			{
				__jule_func_result = _1bc7ee368_annotatePtr(_self_, _63243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1bc843aa5_Sptr((*(_63243_k)).ptr()) != nullptr)) {
			_case_begin_1c1c7e7d3:;
			{
				__jule_func_result = _1bc7ee6a9_annotateSptr(_self_, _63243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1bc844d92_Struct((*(_63243_k)).ptr()) != nullptr)) {
			_case_begin_1c1c7e849:;
			{
				__jule_func_result = _1bc7ee9ea_annotateStruct(_self_, _63243_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1c1c7e0da:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1c1c7db34:;
	};
}



inline jule::Bool _1bc800413_annotate(_1bc7eae58_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*((*(_self_))._field_p))._field_Kind));
	__jule_func_result = _1bc80017c_annotateKind(_self_, &((*((*(_self_))._field_a))._field_Kind));
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc7eae58_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1bc801359_pushErrToken(_1bc800cb5_fnCallArgChecker* _self_, jule::Ptr<_1bc583a9d_Token> _67731_token, jule::Str _67746_fmt, jule::Slice<jule::Any> _67759_args) {
	_1bc786db1_pushErr((*((*(_self_))._field_e))._field_s.ptr(), _67731_token, _67746_fmt, _67759_args);
}



inline void _1bc8016bc_pushErr(_1bc800cb5_fnCallArgChecker* _self_, jule::Str _68126_fmt, jule::Slice<jule::Any> _68139_args) {
	_1bc801359_pushErrToken(_self_, (*(_self_))._field_errorToken, _68126_fmt, _68139_args);
}



inline jule::Slice<jule::Ptr<_1ece1ceea_ParamIns>> _1bc801953_getParams(_1bc800cb5_fnCallArgChecker* _self_) {
	if (((((*((*(_self_))._field_f))._field_Params.len() > 0LL) && ((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl != nullptr)) && _1ece19bd9_IsSelf((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl.ptr()))) {
		return (*((*(_self_))._field_f))._field_Params.slice(1LL);;
	};
	return (*((*(_self_))._field_f))._field_Params;;
}



inline jule::Bool _1bc801c61_checkCounts(_1bc800cb5_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1ece1ceea_ParamIns>>* _69431_params) {
	jule::Bool __jule_func_result = false;
	jule::I64 _69513_n = (*(_69431_params)).len();;
	if (((_69513_n > 0LL) && _1ece19bd9_IsSelf((*((*(_69431_params))[0LL]))._field_Decl.ptr()))) {
		(_69513_n)--;
	};
	jule::I64 _70013_diff = (_69513_n - (*(_self_))._field_args.len());;
	jule::Str _70113_log = jule::Str();;
	{
		
		if ((_70013_diff == 0LL)) {
			_case_begin_1c1c8b2c3:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_69513_n > 0LL) && (*((*((*(_69431_params))[(_69513_n - 1LL)]))._field_Decl))._field_Variadic)) {
			_case_begin_1c1c8b1b3:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_70013_diff < 0LL) || (_70013_diff > (*(_69431_params)).len()))) {
			_case_begin_1c1c8adb6:;
			{
				_70113_log=jule::Str::lit("argument overflow: passed more argument than expected to call @", 63);
			}
		}
		else {
			_case_begin_1c1c8ad50:;
			{
				_70113_log=jule::Str::lit("missing arguments to call @", 27);
			}
		}
		_match_end_1c1c8acea:;
	};
	_2096a4489_StrBuilder _71213_err = static__2096a48da_New(32LL);;
	_2096a4e4b_WriteStr(&_71213_err, (*((*((*(_self_))._field_f))._field_Decl))._field_Ident);
	_2096a4e4b_WriteStr(&_71213_err, jule::Str::lit("\n       wanted (", 16));
	{
		auto expr = _69431_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1c89117:;
		if (it != expr_end) {
			jule::I64 _71513_i = it - expr->begin();
			jule::Ptr<_1ece1ceea_ParamIns> *_71516_p = it;
			{
				_2096a4e4b_WriteStr(&_71213_err, _1bc841586_Str((*((*(_71516_p))))._field_Kind.ptr()));
				if ((((*(_69431_params)).len() - _71513_i) > 1LL)) {
					_2096a4e4b_WriteStr(&_71213_err, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1c1c89117:;
			++it;
			_71513_i++;
			goto _iter_begin_1c1c89117;
		}
		_iter_end_1c1c89117:;
	};
	_2096a5204_WriteByte(&_71213_err, ')');
	_1bc8016bc_pushErr(_self_, _70113_log, jule::Slice<jule::Any>::make({jule::Any(_2096a5743_Str(&_71213_err), &__jule_any_type4)}));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1bc802217_checkArg(_1bc800cb5_fnCallArgChecker* _self_, jule::Ptr<_1ece1ceea_ParamIns>* _72632_p, jule::Ptr<_1bc8108a7_Data>* _72651_arg, jule::Ptr<_1bc583a9d_Token>* _72668_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _1ece21273_parameterUsesGenerics(_72632_p, &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics)))) {
		__jule_func_result=((!((*((*((*(_72632_p))))._field_Decl))._field_Variadic)) && _1bc809609_isGoodValueToInfer(_72651_arg));
		if (__jule_func_result) {
			_1bc7eae58_dynamicTypeAnnotation _73121_dta = _1bc7eae58_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_72632_p)), ._field_a=(*(_72651_arg)), ._field_errorToken=(*(_72668_errorToken)), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_1bc800413_annotate(&_73121_dta);
		};
		if ((!(__jule_func_result))) {
			_1bc801359_pushErrToken(_self_, (*(_72668_errorToken)), jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1bc793c58_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, (*((*((*(_72632_p))))._field_Decl))._field_Mutable, (*((*((*(_72632_p))))._field_Decl))._field_Reference, &((*((*(_72632_p))))._field_Kind), _72651_arg, _72668_errorToken)) {
		_1bc78e8be_checkAssignType((*((*(_self_))._field_e))._field_s, (*((*((*(_72632_p))))._field_Decl))._field_Reference, &((*((*(_72632_p))))._field_Kind), _72651_arg, (*(_72668_errorToken)));
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1bc802613_push(_1bc800cb5_fnCallArgChecker* _self_, jule::Ptr<_1ece1ceea_ParamIns>* _75528_p, jule::Ptr<_1bc599971_Expr> _75546_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1bc8411bd_TypeKind> _75613_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _7579_oldImmut = (*((*(_self_))._field_e))._field_immutable;;
	(*((*(_self_))._field_e))._field_immutable=(!((*((*((*(_75528_p))))._field_Decl))._field_Mutable));
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*((*((*(_75528_p))))._field_Decl))._field_Variadic)))) {
		(*((*(_self_))._field_e))._field_prefix=(*((*(_75528_p))))._field_Kind;
	} else {
		(*((*(_self_))._field_e))._field_prefix=nullptr;
	};
	jule::Ptr<_1bc8108a7_Data> _76513_d = _1bc83080b_evalExpr((*(_self_))._field_e, _75546_arg);;
	(*((*(_self_))._field_e))._field_prefix=_75613_old;
	(*((*(_self_))._field_e))._field_immutable=_7579_oldImmut;
	if ((_76513_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1bc802217_checkArg(_self_, _75528_p, &(_76513_d), &((*(_75546_arg))._field_Token));
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_76513_d))._field_Model); };
	return __jule_func_result;;
}



inline jule::Bool _1bc802a0e_pushVariadic(_1bc800cb5_fnCallArgChecker* _self_, jule::Ptr<_1ece1ceea_ParamIns>* _77936_p, jule::I64 _77954_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _78113_variadiced = false;;
	jule::Bool _7829_more = ((_77954_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_1ece1063b_SliceExprModel> _78313_model = jule::new_ptr<_1ece1063b_SliceExprModel>(_1ece1063b_SliceExprModel{._field_ElemKind=(*((*(_77936_p))))._field_Kind, });;
	jule::Ptr<_1bc8411bd_TypeKind> _78713_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _7929_variadic = (*((*((*(_77936_p))))._field_Kind))._field_Variadic;;
	(*((*((*(_77936_p))))._field_Kind))._field_Variadic=false;
	__JULE_DEFER({
		(*((*((*(_77936_p))))._field_Kind))._field_Variadic=_7929_variadic;
	});;
	for (; (_77954_i < (*(_self_))._field_args.len()); (_77954_i)++) {
		{
			jule::Ptr<_1bc599971_Expr> _79917_arg = (*(_self_))._field_args[_77954_i];;
			{
				auto &_match_expr{ (*(_79917_arg))._field_Kind };
				
				if (_match_expr.type == &__jule_any_type75) {
					_case_begin_1c1ca0518:;
					{
						(*((*(_self_))._field_e))._field_prefix=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(jule::new_ptr<_1bc84d296_Slc>(_1bc84d296_Slc{._field_Elem=(*((*(_77936_p))))._field_Kind}), 22)});
					}
				}
				else {
					_case_begin_1c1ca0859:;
					{
						(*((*(_self_))._field_e))._field_prefix=(*((*(_77936_p))))._field_Kind;
					}
				}
				_match_end_1c1ca0804:;
			};
			jule::Ptr<_1bc8108a7_Data> _81217_d = _1bc830179_eval((*(_self_))._field_e, _79917_arg);;
			if ((_81217_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1c1c9e00b;
			};
			if ((*((*(_81217_d))._field_Kind))._field_Variadic) {
				_78113_variadiced=true;
				(*((*((*(_77936_p))))._field_Kind))._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1bc802217_checkArg(_self_, _77936_p, &(_81217_d), &((*(_79917_arg))._field_Token)));
				{
					auto &_match_expr{ (*(_81217_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type76) {
						_case_begin_1c1ca2edd:;
						{
							_78313_model=(*(_81217_d))._field_Model.cast_ptr<_1ece1063b_SliceExprModel>(&__jule_any_type76);
							(*(_78313_model))._field_ElemKind=(*((*(_77936_p))))._field_Kind;
						}
					}
					else {
						_case_begin_1c1ca4099:;
						{
							_78313_model=nullptr;
							{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_81217_d))._field_Model); };
						}
					}
					_match_end_1c1ca4044:;
				};
				(_77954_i)++;
				goto _iter_end_1c1c9e00b;
			};
			__jule_func_result=(__jule_func_result && _1bc802217_checkArg(_self_, _77936_p, &(_81217_d), &((*(_79917_arg))._field_Token)));
			{ jule::Slice<jule::Any> &__jule_push_dest = (*(_78313_model))._field_Elems; __jule_push_dest.push((*(_81217_d))._field_Model); };
		}
	_iter_next_1c1c9e00b:;
	}
	_iter_end_1c1c9e00b:;;
	(*((*(_self_))._field_e))._field_prefix=_78713_old;
	if ((_78113_variadiced && _7829_more)) {
		_1bc801359_pushErrToken(_self_, (*((*(_self_))._field_args[_77954_i]))._field_Token, jule::Str::lit("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
	};
	if ((_78313_model != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(jule::Any(_78313_model, &__jule_any_type76)); };
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1bc802d50_checkArgs(_1bc800cb5_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1ece1ceea_ParamIns>>* _85533_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _8569_arg = (*((*(_self_))._field_e))._field_arg;;
	(*((*(_self_))._field_e))._field_arg=true;
	__jule_func_result=true;
	jule::I64 _86013_i = 0LL;;
	if ((((*(_85533_params)).len() > 0LL) && _1ece19bd9_IsSelf((*((*(_85533_params))[0LL]))._field_Decl.ptr()))) {
		(_86013_i)++;
	};
	_julec_label_1c1ca938a:;
	while ((_86013_i < (*(_85533_params)).len())) {
		{
			jule::Ptr<_1ece1ceea_ParamIns> _86717_p = (*(_85533_params))[_86013_i];;
			{
				
				if ((*((*(_86717_p))._field_Decl))._field_Variadic) {
					_case_begin_1c1caae2a:;
					{
						__jule_func_result=(_1bc802a0e_pushVariadic(_self_, &(_86717_p), _86013_i) && __jule_func_result);
						goto _iter_end_1c1ca9698;
					}
				}
				else if (((*(_self_))._field_args.len() <= _86013_i)) {
					_case_begin_1c1cab05c:;
					{
						__jule_func_result=false;
						goto _iter_end_1c1ca9698;
					}
				}
				else {
					_case_begin_1c1caaa84:;
					{
						__jule_func_result=(_1bc802613_push(_self_, &(_86717_p), (*(_self_))._field_args[_86013_i]) && __jule_func_result);
					}
				}
				_match_end_1c1caaa1d:;
			};
			(_86013_i)++;
		}
	_iter_next_1c1ca9698:;
	}
	_iter_end_1c1ca9698:;;
	(*((*(_self_))._field_e))._field_arg=_8569_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1bc8030d6_checkDynamicTypeAnnotation(_1bc800cb5_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_f))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1cad25c:;
		if (it != expr_end) {
			jule::Ptr<_1bc83e7d7_InsGeneric> _88716_g = *it;
			{
				if ((_88716_g == nullptr)) {
					_1bc8016bc_pushErr(_self_, jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c1cad25c:;
			++it;
			goto _iter_begin_1c1cad25c;
		}
		_iter_end_1c1cad25c:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1bc80336c_check(_1bc800cb5_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1ece1ceea_ParamIns>> _89713_params = _1bc801953_getParams(_self_);;
	__jule_func_result=_1bc801c61_checkCounts(_self_, &(_89713_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1bc802d50_checkArgs(_self_, &(_89713_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_1bc8030d6_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc800cb5_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1bc80424c_pushErr(_1bc803bec_structLitChecker* _self_, jule::Ptr<_1bc583a9d_Token> _93526_token, jule::Str _93541_fmt, jule::Slice<jule::Any> _93554_args) {
	_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), _93526_token, _93541_fmt, _93554_args);
}



inline void _1bc8045b0_pushSuggestion(_1bc803bec_structLitChecker* _self_, jule::Str _94033_fmt, jule::Slice<jule::Any> _94046_args) {
	_1bc812e5e_pushSuggestion((*(_self_))._field_e.ptr(), _94033_fmt, _94046_args);
}



inline void _1bc8049cd_pushMatch(_1bc803bec_structLitChecker* _self_, jule::Ptr<_1bc5bd511_FieldIns>* _94433_f, jule::Ptr<_1bc8108a7_Data>* _94452_d, jule::Ptr<_1bc583a9d_Token>* _94467_errorToken) {
	;
	jule::Bool _9509_mutable = ((!((*((*(_self_))._field_e))._field_immutable)) || ((*((*((*(_94433_f))))._field_Decl))._field_Mutable && ((*((*(_self_))._field_s))._field_Methods.len() > 0LL)));;
	if (_1bc793c58_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, _9509_mutable, false, &((*((*(_94433_f))))._field_Kind), _94452_d, _94467_errorToken)) {
		_1bc78e8be_checkAssignType((*((*(_self_))._field_e))._field_s, false, &((*((*(_94433_f))))._field_Kind), _94452_d, (*(_94467_errorToken)));
	};
	{ jule::Slice<jule::Ptr<_1ece0db89_StructArgExprModel>> &__jule_push_dest = (*(_self_))._field_args; __jule_push_dest.push(jule::new_ptr<_1ece0db89_StructArgExprModel>(_1ece0db89_StructArgExprModel{._field_Token=(*(_94467_errorToken)), ._field_Field=(*(_94433_f)), ._field_Expr=(*(_94452_d))})); };
}



inline void _1bc804d41_checkPair(_1bc803bec_structLitChecker* _self_, jule::Ptr<_1bc5a3eec_FieldExprPair>* _96333_pair, jule::Slice<jule::Ptr<_1bc599971_Expr>>* _96360_exprs) {
	jule::Ptr<_1bc5bd511_FieldIns> _96513_f = _1bc5c0469_FindField((*(_self_))._field_s.ptr(), (*((*((*(_96333_pair))))._field_Field))._field_Kind);;
	if ((_96513_f == nullptr)) {
		_1bc80424c_pushErr(_self_, (*((*(_96333_pair))))._field_Field, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_96333_pair))))._field_Field))._field_Kind, &__jule_any_type4)}));
		return;;
	};
	if ((!(_1bc787620_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_96513_f))._field_Decl))._field_Public, (*((*(_96513_f))._field_Decl))._field_Token)))) {
		_1bc80424c_pushErr(_self_, (*((*(_96333_pair))))._field_Field, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_96333_pair))))._field_Field))._field_Kind, &__jule_any_type4)}));
		_1bc8045b0_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	_julec_label_1c1cb9411:;
	{
		auto expr = _96360_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1cb9d7e:;
		if (it != expr_end) {
			jule::Ptr<_1bc599971_Expr> _97721_expr = *it;
			{
				{
					auto &_match_expr{ (*(_97721_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type77) {
						_case_begin_1c1cba7db:;
						{
							jule::Ptr<_1bc5a3eec_FieldExprPair> _98021_dpair = (*(_97721_expr))._field_Kind.cast_ptr<_1bc5a3eec_FieldExprPair>(&__jule_any_type77);;
							{
								
								if (((*(_96333_pair)) == _98021_dpair)) {
									_case_begin_1c1cbb776:;
									{
										goto _iter_end_1c1cb9d7e;
									}
								}
								else if (((*((*((*(_96333_pair))))._field_Field))._field_Kind == (*((*(_98021_dpair))._field_Field))._field_Kind)) {
									_case_begin_1c1cbb7ed:;
									{
										_1bc80424c_pushErr(_self_, (*((*(_96333_pair))))._field_Field, jule::Str::lit("@ already has expression", 24), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_96333_pair))))._field_Field))._field_Kind, &__jule_any_type4)}));
										goto _iter_end_1c1cb9d7e;
									}
								}
								_match_end_1c1cbb6bb:;
							};
						}
					}
					_match_end_1c1cba775:;
				};
			}
			_iter_next_1c1cb9d7e:;
			++it;
			goto _iter_begin_1c1cb9d7e;
		}
		_iter_end_1c1cb9d7e:;
	};
	jule::Ptr<_1bc8411bd_TypeKind> _99113_prefix = (*((*(_self_))._field_e))._field_prefix;;
	__JULE_DEFER({
		(*((*(_self_))._field_e))._field_prefix=_99113_prefix;
	});;
	(*((*(_self_))._field_e))._field_prefix=(*(_96513_f))._field_Kind;
	jule::Ptr<_1bc8108a7_Data> _99513_d = _1bc83080b_evalExpr((*(_self_))._field_e, (*((*(_96333_pair))))._field_Expr);;
	if ((_99513_d == nullptr)) {
		return;;
	};
	_1bc8049cd_pushMatch(_self_, &(_96513_f), &(_99513_d), &((*((*(_96333_pair))))._field_Field));
}



inline jule::Bool _1bc805182_readyExprs(_1bc803bec_structLitChecker* _self_, jule::Slice<jule::Ptr<_1bc599971_Expr>>* _100234_exprs) {
	jule::Bool _100313_ok = true;;
	{
		auto expr = _100234_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1cc0b32:;
		if (it != expr_end) {
			jule::I64 _100414_i = it - expr->begin();
			jule::Ptr<_1bc599971_Expr> _100421_expr = *it;
			{
				{
					auto &_match_expr{ (*(_100421_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type78) {
						_case_begin_1c1cc189c:;
						{
							jule::Ptr<_1bc5a5608_KeyValPair> _100721_pair = (*(_100421_expr))._field_Kind.cast_ptr<_1bc5a5608_KeyValPair>(&__jule_any_type78);;
							{
								auto &_match_expr{ (*((*(_100721_pair))._field_Key))._field_Kind };
								
								if (_match_expr.type == &__jule_any_type79) {
									_case_begin_1c1cc2705:;
									{
										goto _match_end_1c1cc2b9a;
									}
								}
								else {
									_case_begin_1c1cc2c00:;
									{
										_1bc80424c_pushErr(_self_, (*(_100721_pair))._field_Colon, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
										_100313_ok=false;
										goto _iter_next_1c1cc0b32;
									}
								}
								_match_end_1c1cc2b9a:;
							};
							(*((*(_100234_exprs))[_100414_i]))._field_Kind=jule::Any(jule::new_ptr<_1bc5a3eec_FieldExprPair>(_1bc5a3eec_FieldExprPair{._field_Field=(*((*(_100721_pair))._field_Key))._field_Token, ._field_Expr=(*(_100721_pair))._field_Val}), &__jule_any_type77);
						}
					}
					_match_end_1c1cc1836:;
				};
			}
			_iter_next_1c1cc0b32:;
			++it;
			_100414_i++;
			goto _iter_begin_1c1cc0b32;
		}
		_iter_end_1c1cc0b32:;
	};
	return _100313_ok;;
}



inline void _1bc80543a_check(_1bc803bec_structLitChecker* _self_, jule::Slice<jule::Ptr<_1bc599971_Expr>>* _102629_exprs) {
	if (((*(_102629_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_1bc805182_readyExprs(_self_, _102629_exprs)))) {
		return;;
	};
	jule::Bool _103313_paired = false;;
	{
		auto expr = _102629_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1cc5494:;
		if (it != expr_end) {
			jule::I64 _103414_i = it - expr->begin();
			jule::Ptr<_1bc599971_Expr> _103421_expr = *it;
			{
				{
					auto &_match_expr{ (*(_103421_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type77) {
						_case_begin_1c198be3b:;
						{
							jule::Ptr<_1bc5a3eec_FieldExprPair> _103721_pair = (*(_103421_expr))._field_Kind.cast_ptr<_1bc5a3eec_FieldExprPair>(&__jule_any_type77);;
							if (((_103414_i > 0LL) && (!(_103313_paired)))) {
								_1bc80424c_pushErr(_self_, (*(_103721_pair))._field_Field, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							_103313_paired=true;
							_1bc804d41_checkPair(_self_, &(_103721_pair), _102629_exprs);
						}
					}
					else {
						_case_begin_1c1cc6165:;
						{
							if (_103313_paired) {
								_1bc80424c_pushErr(_self_, (*(_103421_expr))._field_Token, jule::Str::lit("argument must target to field", 29), jule::Slice<jule::Any>());
							};
							if ((_103414_i >= (*((*(_self_))._field_s))._field_Fields.len())) {
								_1bc80424c_pushErr(_self_, (*(_103421_expr))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>());
								goto _iter_next_1c1cc5494;
							};
							jule::Ptr<_1bc5bd511_FieldIns> _105221_field = (*((*(_self_))._field_s))._field_Fields[_103414_i];;
							if ((!(_1bc787620_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_105221_field))._field_Decl))._field_Public, (*((*(_105221_field))._field_Decl))._field_Token)))) {
								_1bc80424c_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("structure cannot instantiating because it has non-public fields", 63), jule::Slice<jule::Any>());
								_1bc8045b0_pushSuggestion(_self_, jule::Str::lit("use field:expression pairs to instantiate", 41), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1bc8411bd_TypeKind> _106021_prefix = (*((*(_self_))._field_e))._field_prefix;;
							__JULE_DEFER({
								(*((*(_self_))._field_e))._field_prefix=_106021_prefix;
							});;
							(*((*(_self_))._field_e))._field_prefix=(*(_105221_field))._field_Kind;
							jule::Ptr<_1bc8108a7_Data> _106421_d = _1bc83080b_evalExpr((*(_self_))._field_e, _103421_expr);;
							if ((_106421_d == nullptr)) {
								goto _iter_next_1c1cc5494;
							};
							_1bc8049cd_pushMatch(_self_, &(_105221_field), &(_106421_d), &((*(_103421_expr))._field_Token));
						}
					}
					_match_end_1c1cc6110:;
				};
			}
			_iter_next_1c1cc5494:;
			++it;
			_103414_i++;
			goto _iter_begin_1c1cc5494;
		}
		_iter_end_1c1cc5494:;
	};
	if ((!(_103313_paired))) {
		jule::I64 _107513_n = (*((*(_self_))._field_s))._field_Fields.len();;
		jule::I64 _107617_diff = (_107513_n - (*(_102629_exprs)).len());;
		{
			
			if ((_107617_diff <= 0LL)) {
				_case_begin_1c199014d:;
				{
					return;;
				}
			}
			_match_end_1c199002c:;
		};
		_2096a4489_StrBuilder _108217_idents = static__2096a48da_New(32LL);;
		for (; (_107617_diff > 0LL); (_107617_diff)--) {
			{
				_2096a4e4b_WriteStr(&_108217_idents, jule::Str::lit(", ", 2));
				_2096a4e4b_WriteStr(&_108217_idents, (*((*((*((*(_self_))._field_s))._field_Fields[(_107513_n - _107617_diff)]))._field_Decl))._field_Ident);
			}
		_iter_next_1c19908bd:;
		}
		_iter_end_1c19908bd:;;
		_1bc80424c_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(static_cast<jule::Str>(_2096a61e4_Buf(&_108217_idents).slice(2LL)), &__jule_any_type4)}));
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1bc803bec_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1bc7a750d_Var> _1bc805eb8_buildVar(_1bc8059ce_rangeChecker* _self_, jule::Ptr<_1bc5ad314_VarDecl>* _110228_decl) {
	jule::Ptr<_1bc7a750d_Var> _110313_v = _1ece27642_buildVar((*(_110228_decl)));;
	return _110313_v;;
}



inline void _1bc8061b6_setSizeKey(_1bc8059ce_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1bc58650c_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyA))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyA=_1bc805eb8_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyA));
	(*((*((*(_self_))._field_Kind))._field_KeyA))._field_Kind=(*(_1bc2c7506_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c199573b:;
			{
				(*((*((*(_self_))._field_Kind))._field_KeyA))._field_IterRelation=jule::new_ptr<_1bc7a6353_IterRelation>(_1bc7a6353_IterRelation{._field_Range=(*((*(_self_))._field_d))._field_Model.cast_ptr<_1bc7a750d_Var>(&__jule_any_type8)});
			}
		}
		_match_end_1c19956c5:;
	};
}



inline void _1bc8065d4_checkRangeExprValidity(_1bc8059ce_rangeChecker* _self_, jule::Ptr<_1bc8108a7_Data>* _112946_d, jule::Ptr<_1bc7a750d_Var>* _112957_key, jule::Ptr<_1bc8411bd_TypeKind>* _112973_k) {
	jule::Bool _113013__mut = (*((*(_112957_key))))._field_Mutable;;
	if ((_113013__mut && (!(_1bc842a4e_Mutable((*(_112973_k)).ptr()))))) {
		_113013__mut=false;
	};
	_1bc793c58_checkValidityForInitExpr((*((*(_self_))._field_sc))._field_s, _113013__mut, (*((*(_112957_key))))._field_Reference, &((*((*((*(_112957_key))))._field_Kind))._field_Kind), _112946_d, &((*((*(_self_))._field_rang))._field_InToken));
}



inline void _1bc8067d2_checkSlice(_1bc8059ce_rangeChecker* _self_) {
	_1bc8061b6_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1bc58650c_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1bc84d296_Slc> _114813_slc = _1bc844875_Slc((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1bc805eb8_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*((*(_self_))._field_Kind))._field_KeyB))._field_Kind=jule::new_ptr<_1bc848390_TypeSymbol>(_1bc848390_TypeSymbol{._field_Kind=(*(_114813_slc))._field_Elem});
	_1bc8065d4_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*((*(_self_))._field_Kind))._field_KeyB), &((*(_114813_slc))._field_Elem));
}



inline void _1bc8069d0_checkArray(_1bc8059ce_rangeChecker* _self_) {
	_1bc8061b6_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1bc58650c_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1bc8505b7_Arr> _116113_arr = _1bc8445de_Arr((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1bc805eb8_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*((*(_self_))._field_Kind))._field_KeyB))._field_Kind=jule::new_ptr<_1bc848390_TypeSymbol>(_1bc848390_TypeSymbol{._field_Kind=(*(_116113_arr))._field_Elem});
	_1bc8065d4_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*((*(_self_))._field_Kind))._field_KeyB), &((*(_116113_arr))._field_Elem));
}



inline void _1bc806bcd_checkMapKeyA(_1bc8059ce_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1bc58650c_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyA))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1bc84e93a_Map> _117313_m = _1bc8453ae_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyA=_1bc805eb8_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyA));
	(*((*((*(_self_))._field_Kind))._field_KeyA))._field_Kind=jule::new_ptr<_1bc848390_TypeSymbol>(_1bc848390_TypeSymbol{._field_Kind=(*(_117313_m))._field_Key});
	jule::Ptr<_1bc8108a7_Data> _117713_d = jule::new_ptr<_1bc8108a7_Data>((*((*(_self_))._field_d)));;
	(*(_117713_d))._field_Kind=(*(_117313_m))._field_Key;
	_1bc8065d4_checkRangeExprValidity(_self_, &(_117713_d), &((*((*(_self_))._field_Kind))._field_KeyA), &((*(_117313_m))._field_Key));
}



inline void _1bc806dcb_checkMapKeyB(_1bc8059ce_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1bc58650c_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1bc84e93a_Map> _118813_m = _1bc8453ae_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1bc805eb8_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*((*(_self_))._field_Kind))._field_KeyB))._field_Kind=jule::new_ptr<_1bc848390_TypeSymbol>(_1bc848390_TypeSymbol{._field_Kind=(*(_118813_m))._field_Val});
	jule::Ptr<_1bc8108a7_Data> _119213_d = jule::new_ptr<_1bc8108a7_Data>((*((*(_self_))._field_d)));;
	(*(_119213_d))._field_Kind=(*(_118813_m))._field_Val;
	_1bc8065d4_checkRangeExprValidity(_self_, &(_119213_d), &((*((*(_self_))._field_Kind))._field_KeyB), &((*(_118813_m))._field_Val));
}



inline void _1bc8070c9_checkMap(_1bc8059ce_rangeChecker* _self_) {
	_1bc806bcd_checkMapKeyA(_self_);
	_1bc806dcb_checkMapKeyB(_self_);
}



inline void _1bc8072c7_checkStr(_1bc8059ce_rangeChecker* _self_) {
	_1bc8061b6_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1bc58650c_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1bc805eb8_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*((*(_self_))._field_Kind))._field_KeyB))._field_Kind=(*(_1bc2c7506_findBuiltinTypeAlias(jule::Str::lit("u8", 2))))._field_Kind;
}



inline void _1bc8074c5_checkComptime(_1bc8059ce_rangeChecker* _self_) {
	_1bc8061b6_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyA != nullptr) && (*((*((*(_self_))._field_rang))._field_KeyA))._field_Mutable)) {
		_1bc786db1_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*((*(_self_))._field_rang))._field_KeyA))._field_Token, jule::Str::lit("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_self_))._field_rang))._field_KeyA))._field_Ident, &__jule_any_type4)}));
	};
	if ((((*((*(_self_))._field_rang))._field_KeyB != nullptr) && (*((*((*(_self_))._field_rang))._field_KeyB))._field_Mutable)) {
		_1bc786db1_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*((*(_self_))._field_rang))._field_KeyB))._field_Token, jule::Str::lit("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident, &__jule_any_type4)}));
	};
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1bc58650c_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1bc805eb8_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
}



inline jule::Bool _1bc80775b_checkComptimeRange(_1bc8059ce_rangeChecker* _self_) {
	jule::Ptr<_1bc71aaae_comptimeRange> _122713_range = _1bc846bb8_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_122713_range))._field_kind };
		
		if (_match_expr.type_is(true, 0) || _match_expr.type_is(true, 2) || _match_expr.type_is(true, 3) || _match_expr.type_is(true, 4) || _match_expr.type_is(true, 1) || _match_expr.type_is(true, 5)) {
			_case_begin_1c19b2a77:;
			{
				_1bc8074c5_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_1c19b356c:;
			{
				_1bc786db1_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, jule::Str::lit("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1c19b3517:;
	};
}



inline jule::Bool _1bc8079e2_check(_1bc8059ce_rangeChecker* _self_) {
	{
		
		if ((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic) {
			_case_begin_1c19b6619:;
		}
		else if ((_1bc844875_Slc((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c19b5629:;
			{
				_1bc8067d2_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_1bc8445de_Arr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c19b5690:;
			{
				_1bc8069d0_checkArray(_self_);
				return true;;
			}
		}
		else if ((_1bc8453ae_Map((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c19b5706:;
			{
				_1bc8070c9_checkMap(_self_);
				return true;;
			}
		}
		else if ((_1bc846bb8_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c19b576c:;
			{
				return _1bc80775b_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_1c19b4da9:;
			{
				jule::Ptr<_1bc848c97_Prim> _125913_prim = _1bc84381e_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (((_125913_prim != nullptr) && _1bc84c22e_IsStr(_125913_prim.ptr()))) {
					_1bc8072c7_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_1c19b4c77:;
	};
	_1bc786db1_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, jule::Str::lit("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc8059ce_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1bc80865d_prepareTypes(_1bc808240_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_1ece20195_Types((*(_self_))._field_f.ptr());
	};
}



inline void _1bc808916_prepareExprs(_1bc808240_retTypeChecker* _self_, jule::Ptr<_1bc599971_Expr>* _128736_e) {
	if (((*(_128736_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_128736_e))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1c19bc07b:;
			{
				(*(_self_))._field_exprs=(*((*((*(_128736_e))))._field_Kind.cast_ptr<_1bc59a642_TupleExpr>(&__jule_any_type80)))._field_Expr;
			}
		}
		else {
			_case_begin_1c19bc29b:;
			{
				{ jule::Slice<jule::Ptr<_1bc599971_Expr>> &__jule_push_dest = (*(_self_))._field_exprs; __jule_push_dest.push((*(_128736_e))); };
			}
		}
		_match_end_1c19bc246:;
	};
}



inline void _1bc808b14_checkExprs(_1bc808240_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1bc8108a7_Data>> _130313_datas = jule::Slice<jule::Ptr<_1bc8108a7_Data>>::alloc(0LL, (*(_self_))._field_exprs.len());;
	jule::Ptr<_1bc81259b_Eval> _130413_eval = _1bc78e35d_eval((*((*(_self_))._field_sc))._field_s, jule::Trait<_1bc860c04_Lookup>((*(_self_))._field_sc, 0));;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c19bcaa4:;
		if (it != expr_end) {
			jule::I64 _130514_i = it - expr->begin();
			jule::Ptr<_1bc599971_Expr> _130521_expr = *it;
			{
				if ((_130514_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_1c19bcaa4;
				};
				jule::Ptr<_1bc8411bd_TypeKind> _131017_t = (*(_self_))._field_types[_130514_i];;
				(*(_130413_eval))._field_prefix=_131017_t;
				jule::Ptr<_1bc8108a7_Data> _131317_d = _1bc83080b_evalExpr(_130413_eval, _130521_expr);;
				if ((_131317_d == nullptr)) {
					goto _iter_next_1c19bcaa4;
				};
				{ jule::Slice<jule::Ptr<_1bc8108a7_Data>> &__jule_push_dest = _130313_datas; __jule_push_dest.push(_131317_d); };
				if (((!((*(_131317_d))._field_Mutable)) && _1bc842a4e_Mutable((*(_131317_d))._field_Kind.ptr()))) {
					_1bc786db1_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("mutable typed return expressions should be mutable", 50), jule::Slice<jule::Any>());
					return;;
				};
				_1bc7e9583_assignTypeChecker _132517_ac = _1bc7e9583_assignTypeChecker{._field_s=(*((*(_self_))._field_sc))._field_s, ._field_dest=_131017_t, ._field_d=_131317_d, ._field_errorToken=(*(_self_))._field_errorToken};;
				_1bc7ea551_check(&_132517_ac);
			}
			_iter_next_1c19bcaa4:;
			++it;
			_130514_i++;
			goto _iter_begin_1c19bcaa4;
		}
		_iter_end_1c19bcaa4:;
	};
	if ((_130313_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_1ece13980_TupleExprModel>(_1ece13980_TupleExprModel{._field_Datas=_130313_datas}), &__jule_any_type81);
	} else if ((_130313_datas.len() == 1LL)) {
		(*(_self_))._field_model=(*(_130313_datas[0LL]))._field_Model;
	};
}



inline jule::Bool _1bc808e55_check(_1bc808240_retTypeChecker* _self_, jule::Ptr<_1bc599971_Expr>* _134429_e) {
	_1bc80865d_prepareTypes(_self_);
	_1bc808916_prepareExprs(_self_, _134429_e);
	jule::I64 _13489_n = (*(_self_))._field_exprs.len();;
	if (((_13489_n == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
		if ((!(_1ece1c2d5_AnyVar((*((*(_self_))._field_f))._field_Decl.ptr())))) {
			_1bc786db1_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("return statements of non-void functions should have return expression", 69), jule::Slice<jule::Any>());
			return false;;
		};
		return true;;
	};
	if ((((_13489_n > 0LL) && ((*(_self_))._field_f != nullptr)) && _1ece1b515_IsVoid((*((*(_self_))._field_f))._field_Decl.ptr()))) {
		_1bc786db1_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("void functions is cannot returns any value", 42), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_13489_n > (*(_self_))._field_types.len())) {
		_1bc786db1_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("overflow return expressions", 27), jule::Slice<jule::Any>());
	} else if ((_13489_n < (*(_self_))._field_types.len())) {
		_1bc786db1_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
	};
	_1bc808b14_checkExprs(_self_);
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc808240_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1bc763e04_ImportInfo> _1bc80a9e5_SelectPackage(_1bc80a50b_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_1bc763e04_ImportInfo>)> _2732_selector) {
	if ((_2732_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c19cb9d6:;
		if (it != expr_end) {
			jule::Ptr<_1bc763e04_ImportInfo> _3121_pkg = *it;
			{
				if (_2732_selector(_3121_pkg)) {
					return _3121_pkg;;
				};
			}
			_iter_next_1c19cb9d6:;
			++it;
			goto _iter_begin_1c19cb9d6;
		}
		_iter_end_1c19cb9d6:;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc7a750d_Var> _1bc80ade1_FindVar(_1bc80a50b_SymbolTable* _self_, jule::Str _4126_ident, jule::Bool _4138_binded) {
	return _1bc80cbc3_findVar(_self_, &(_4126_ident), _4138_binded, false);;
}



inline jule::Ptr<_1bc8403cb_TypeAlias> _1bc80b2dc_FindTypeAlias(_1bc80a50b_SymbolTable* _self_, jule::Str _4732_ident, jule::Bool _4744_binded) {
	return _1bc80d179_findTypeAlias(_self_, &(_4732_ident), _4744_binded, false);;
}



inline jule::Ptr<_1bc5bb333_Struct> _1bc80b6d8_FindStruct(_1bc80a50b_SymbolTable* _self_, jule::Str _5329_ident, jule::Bool _5341_binded) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c19cded3:;
		if (it != expr_end) {
			jule::Ptr<_1bc5bb333_Struct> _5421_s = *it;
			{
				if ((((*(_5421_s))._field_Ident == _5329_ident) && ((*(_5421_s))._field_Binded == _5341_binded))) {
					return _5421_s;;
				};
			}
			_iter_next_1c19cded3:;
			++it;
			goto _iter_begin_1c19cded3;
		}
		_iter_end_1c19cded3:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ece1b092_Fn> _1bc80bad4_FindFn(_1bc80a50b_SymbolTable* _self_, jule::Str _6425_ident, jule::Bool _6437_binded) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c19d0567:;
		if (it != expr_end) {
			jule::Ptr<_1ece1b092_Fn> _6521_f = *it;
			{
				if ((((*(_6521_f))._field_Ident == _6425_ident) && ((*(_6521_f))._field_Binded == _6437_binded))) {
					return _6521_f;;
				};
			}
			_iter_next_1c19d0567:;
			++it;
			goto _iter_begin_1c19d0567;
		}
		_iter_end_1c19d0567:;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc713a41_Trait> _1bc80be25_FindTrait(_1bc80a50b_SymbolTable* _self_, jule::Str _7528_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c19d18ba:;
		if (it != expr_end) {
			jule::Ptr<_1bc713a41_Trait> _7621_t = *it;
			{
				if (((*(_7621_t))._field_Ident == _7528_ident)) {
					return _7621_t;;
				};
			}
			_iter_next_1c19d18ba:;
			++it;
			goto _iter_begin_1c19d18ba;
		}
		_iter_end_1c19d18ba:;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc71624c_Enum> _1bc80c266_FindEnum(_1bc80a50b_SymbolTable* _self_, jule::Str _8627_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c19d28cc:;
		if (it != expr_end) {
			jule::Ptr<_1bc71624c_Enum> _8721_e = *it;
			{
				if (((*(_8721_e))._field_Ident == _8627_ident)) {
					return _8721_e;;
				};
			}
			_iter_next_1c19d28cc:;
			++it;
			goto _iter_begin_1c19d28cc;
		}
		_iter_end_1c19d28cc:;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc717957_TypeEnum> _1bc80c5a7_FindTypeEnum(_1bc80a50b_SymbolTable* _self_, jule::Str _9731_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c19d38cd:;
		if (it != expr_end) {
			jule::Ptr<_1bc717957_TypeEnum> _9821_e = *it;
			{
				if (((*(_9821_e))._field_Ident == _9731_ident)) {
					return _9821_e;;
				};
			}
			_iter_next_1c19d38cd:;
			++it;
			goto _iter_begin_1c19d38cd;
		}
		_iter_end_1c19d38cd:;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc7a750d_Var> _1bc80cbc3_findVar(_1bc80a50b_SymbolTable* _self_, jule::Str* _10827_ident, jule::Bool _10839_binded, jule::Bool _10853_reverse) {
	if (_10853_reverse) {
		jule::I64 _11017_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_11017_i >= 0LL); (_11017_i)--) {
			{
				jule::Ptr<_1bc7a750d_Var> _11221_v = (*(_self_))._field_Vars[_11017_i];;
				if ((((*(_11221_v))._field_Ident == (*(_10827_ident))) && ((*(_11221_v))._field_Binded == _10839_binded))) {
					return _11221_v;;
				};
			}
		_iter_next_1c19d52b4:;
		}
		_iter_end_1c19d52b4:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c19d6bbc:;
			if (it != expr_end) {
				jule::Ptr<_1bc7a750d_Var> _11825_v = *it;
				{
					if ((((*(_11825_v))._field_Ident == (*(_10827_ident))) && ((*(_11825_v))._field_Binded == _10839_binded))) {
						return _11825_v;;
					};
				}
				_iter_next_1c19d6bbc:;
				++it;
				goto _iter_begin_1c19d6bbc;
			}
			_iter_end_1c19d6bbc:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1bc8403cb_TypeAlias> _1bc80d179_findTypeAlias(_1bc80a50b_SymbolTable* _self_, jule::Str* _12733_ident, jule::Bool _12745_binded, jule::Bool _12759_reverse) {
	if (_12759_reverse) {
		jule::I64 _12917_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_12917_i >= 0LL); (_12917_i)--) {
			{
				jule::Ptr<_1bc8403cb_TypeAlias> _13121_ta = (*(_self_))._field_TypeAliases[_12917_i];;
				if ((((*(_13121_ta))._field_Ident == (*(_12733_ident))) && ((*(_13121_ta))._field_Binded == _12745_binded))) {
					return _13121_ta;;
				};
			}
		_iter_next_1c19d8680:;
		}
		_iter_end_1c19d8680:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c19da088:;
			if (it != expr_end) {
				jule::Ptr<_1bc8403cb_TypeAlias> _13725_ta = *it;
				{
					if ((((*(_13725_ta))._field_Ident == (*(_12733_ident))) && ((*(_13725_ta))._field_Binded == _12745_binded))) {
						return _13725_ta;;
					};
				}
				_iter_next_1c19da088:;
				++it;
				goto _iter_begin_1c19da088;
			}
			_iter_end_1c19da088:;
		};
	};
	return nullptr;;
}



inline jule::Any _1bc80d575_defByIdent(_1bc80a50b_SymbolTable* _self_, jule::Str* _14830_ident, jule::Bool _14842_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c19db386:;
		if (it != expr_end) {
			jule::Ptr<_1bc7a750d_Var> _14921_v = *it;
			{
				if ((((*(_14921_v))._field_Ident == (*(_14830_ident))) && ((*(_14921_v))._field_Binded == _14842_binded))) {
					return jule::Any(_14921_v, &__jule_any_type8);;
				};
			}
			_iter_next_1c19db386:;
			++it;
			goto _iter_begin_1c19db386;
		}
		_iter_end_1c19db386:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c19db6e9:;
		if (it != expr_end) {
			jule::Ptr<_1bc8403cb_TypeAlias> _15521_ta = *it;
			{
				if ((((*(_15521_ta))._field_Ident == (*(_14830_ident))) && ((*(_15521_ta))._field_Binded == _14842_binded))) {
					return jule::Any(_15521_ta, &__jule_any_type66);;
				};
			}
			_iter_next_1c19db6e9:;
			++it;
			goto _iter_begin_1c19db6e9;
		}
		_iter_end_1c19db6e9:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c19dc673:;
		if (it != expr_end) {
			jule::Ptr<_1bc5bb333_Struct> _16121_s = *it;
			{
				if ((((*(_16121_s))._field_Ident == (*(_14830_ident))) && ((*(_16121_s))._field_Binded == _14842_binded))) {
					return jule::Any(_16121_s, &__jule_any_type65);;
				};
			}
			_iter_next_1c19dc673:;
			++it;
			goto _iter_begin_1c19dc673;
		}
		_iter_end_1c19dc673:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c19dd5ec:;
		if (it != expr_end) {
			jule::Ptr<_1ece1b092_Fn> _16721_f = *it;
			{
				if ((((*(_16721_f))._field_Ident == (*(_14830_ident))) && ((*(_16721_f))._field_Binded == _14842_binded))) {
					return jule::Any(_16721_f, &__jule_any_type64);;
				};
			}
			_iter_next_1c19dd5ec:;
			++it;
			goto _iter_begin_1c19dd5ec;
		}
		_iter_end_1c19dd5ec:;
	};
	if (_14842_binded) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c19de620:;
		if (it != expr_end) {
			jule::Ptr<_1bc713a41_Trait> _17721_t = *it;
			{
				if (((*(_17721_t))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_17721_t, &__jule_any_type10);;
				};
			}
			_iter_next_1c19de620:;
			++it;
			goto _iter_begin_1c19de620;
		}
		_iter_end_1c19de620:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c19e0db3:;
		if (it != expr_end) {
			jule::Ptr<_1bc71624c_Enum> _18321_e = *it;
			{
				if (((*(_18321_e))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_18321_e, &__jule_any_type67);;
				};
			}
			_iter_next_1c19e0db3:;
			++it;
			goto _iter_begin_1c19e0db3;
		}
		_iter_end_1c19e0db3:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c19e1710:;
		if (it != expr_end) {
			jule::Ptr<_1bc717957_TypeEnum> _18921_te = *it;
			{
				if (((*(_18921_te))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_18921_te, &__jule_any_type68);;
				};
			}
			_iter_next_1c19e1710:;
			++it;
			goto _iter_begin_1c19e1710;
		}
		_iter_end_1c19e1710:;
	};
	return nullptr;;
}



inline jule::Bool _1bc80da2b_isDuplicatedIdent(_1bc80a50b_SymbolTable* _self_, jule::Uintptr _20132_itself, jule::Str* _20150_ident, jule::Bool _20162_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c19e2bc8:;
		if (it != expr_end) {
			jule::Ptr<_1bc7a750d_Var> *_20216_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20216_v))) != _20132_itself) && ((*((*(_20216_v))))._field_Ident == (*(_20150_ident)))) && ((*((*(_20216_v))))._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1c19e2bc8:;
			++it;
			goto _iter_begin_1c19e2bc8;
		}
		_iter_end_1c19e2bc8:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c19e303b:;
		if (it != expr_end) {
			jule::Ptr<_1bc8403cb_TypeAlias> *_20816_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20816_ta))) != _20132_itself) && ((*((*(_20816_ta))))._field_Ident == (*(_20150_ident)))) && ((*((*(_20816_ta))))._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1c19e303b:;
			++it;
			goto _iter_begin_1c19e303b;
		}
		_iter_end_1c19e303b:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c19e423a:;
		if (it != expr_end) {
			jule::Ptr<_1bc5bb333_Struct> *_21416_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21416_s))) != _20132_itself) && ((*((*(_21416_s))))._field_Ident == (*(_20150_ident)))) && ((*((*(_21416_s))))._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1c19e423a:;
			++it;
			goto _iter_begin_1c19e423a;
		}
		_iter_end_1c19e423a:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c19e5439:;
		if (it != expr_end) {
			jule::Ptr<_1ece1b092_Fn> *_22016_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22016_f))) != _20132_itself) && ((*((*(_22016_f))))._field_Ident == (*(_20150_ident)))) && ((*((*(_22016_f))))._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1c19e5439:;
			++it;
			goto _iter_begin_1c19e5439;
		}
		_iter_end_1c19e5439:;
	};
	if (_20162_binded) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c19e66d2:;
		if (it != expr_end) {
			jule::Ptr<_1bc713a41_Trait> *_23016_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23016_t))) != _20132_itself) && ((*((*(_23016_t))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1c19e66d2:;
			++it;
			goto _iter_begin_1c19e66d2;
		}
		_iter_end_1c19e66d2:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c19e786a:;
		if (it != expr_end) {
			jule::Ptr<_1bc71624c_Enum> *_23616_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23616_e))) != _20132_itself) && ((*((*(_23616_e))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1c19e786a:;
			++it;
			goto _iter_begin_1c19e786a;
		}
		_iter_end_1c19e786a:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c19e8805:;
		if (it != expr_end) {
			jule::Ptr<_1bc717957_TypeEnum> *_24216_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24216_te))) != _20132_itself) && ((*((*(_24216_te))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1c19e8805:;
			++it;
			goto _iter_begin_1c19e8805;
		}
		_iter_end_1c19e8805:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc80a50b_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1bc810c5e_IsNil(_1bc8108a7_Data* _self_) {
	return _1bc84229b_IsNil((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1bc810ee5_IsVoid(_1bc8108a7_Data* _self_) {
	return _1bc842532_Void((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1bc81127b_IsConst(_1bc8108a7_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _1bc8115bc_GoodOperand(_1bc8108a7_Data* _self_, jule::Ptr<_1bc8108a7_Data>* _10531_other) {
	if ((_1bc844358_TypeEnum((*((*(_10531_other))))._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1bc84381e_Prim((*((*(_10531_other))))._field_Kind.ptr()) == nullptr) || (!(_1bc84c4b5_IsAny(_1bc84381e_Prim((*((*(_10531_other))))._field_Kind.ptr()).ptr())))) && (_1bc845128_Trait((*((*(_10531_other))))._field_Kind.ptr()) == nullptr)) && (!(_1bc84229b_IsNil((*(_self_))._field_Kind.ptr()))));;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc8108a7_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc8119eb_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _1bc812aeb_pushErr(_1bc81259b_Eval* _self_, jule::Ptr<_1bc583a9d_Token> _13626_token, jule::Str _13641_fmt, jule::Slice<jule::Any> _13654_args) {
	_1bc786db1_pushErr((*(_self_))._field_s.ptr(), _13626_token, _13641_fmt, _13654_args);
}



inline void _1bc812e5e_pushSuggestion(_1bc81259b_Eval* _self_, jule::Str _14133_fmt, jule::Slice<jule::Any> _14146_args) {
	_1bc787224_pushSuggestion((*(_self_))._field_s.ptr(), _14133_fmt, _14146_args);
}



inline void _1bc81315c_allowBuiltin(_1bc81259b_Eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1bc81335a_disallowBuiltin(_1bc81259b_Eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _1bc8135e1_isUnsafe(_1bc81259b_Eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _1bc813877_isGlobal(_1bc81259b_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1c1a3d1b8:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c1a3d5a3:;
			{
				return false;;
			}
		}
		_match_end_1c1a3d54d:;
	};
}



inline jule::Bool _1bc813b85_applyNumericPrefix(_1bc81259b_Eval* _self_, jule::Ptr<_1bc8108a7_Data>* _16842_d) {
	if ((((((*(_16842_d)) == nullptr) || (!(_1bc81127b_IsConst((*(_16842_d)).ptr())))) || (_1bc84381e_Prim((*((*(_16842_d))))._field_Kind.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1bc848c97_Prim> _1759_prim = _1bc84381e_Prim((*(_self_))._field_prefix.ptr());;
	if ((_1759_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_230d57ae4_IsFloat(_1bc8490d8_Str(_1759_prim.ptr()))) {
			_case_begin_1c1a40ebd:;
			{
				(*((*(_16842_d))))._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>((*((*(_self_))._field_prefix)));
				_230d5bdc3_SetF64((*((*(_16842_d))))._field_Constant.ptr(), static_cast<jule::F64>(_230d5b048_AsF64((*((*(_16842_d))))._field_Constant.ptr())));
				(*((*((*(_16842_d))))._field_Constant))._field_Kind=(*(_1759_prim))._field_Kind;
			}
		}
		else if (_230d571cb_IsSigInt(_1bc8490d8_Str(_1759_prim.ptr()))) {
			_case_begin_1c1a41034:;
			{
				if ((!(_1bc7e6aad_sigAssignable(_1bc8490d8_Str(_1759_prim.ptr()), _16842_d)))) {
					return false;;
				};
				(*((*(_16842_d))))._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>((*((*(_self_))._field_prefix)));
				_230d5b301_SetI64((*((*(_16842_d))))._field_Constant.ptr(), static_cast<jule::I64>(_230d5aa2b_AsI64((*((*(_16842_d))))._field_Constant.ptr())));
				(*((*((*(_16842_d))))._field_Constant))._field_Kind=(*(_1759_prim))._field_Kind;
			}
		}
		else if (_230d574d9_IsUnsigInt(_1bc8490d8_Str(_1759_prim.ptr()))) {
			_case_begin_1c1a4109a:;
			{
				if ((!(_1bc7e6e76_unsigAssignable(_1bc8490d8_Str(_1759_prim.ptr()), _16842_d)))) {
					return false;;
				};
				(*((*(_16842_d))))._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>((*((*(_self_))._field_prefix)));
				_230d5b5a9_SetU64((*((*(_16842_d))))._field_Constant.ptr(), static_cast<jule::U64>(_230d5acb2_AsU64((*((*(_16842_d))))._field_Constant.ptr())));
				(*((*((*(_16842_d))))._field_Constant))._field_Kind=(*(_1759_prim))._field_Kind;
			}
		}
		_match_end_1c1a40bc1:;
	};
	return true;;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc813ec6_litStr(_1bc81259b_Eval* _self_, jule::Ptr<_1bc59aa1b_LitExpr>* _20322_l) {
	jule::Str _20413_s = jule::Str();;
	if (_1bc584ebc_IsRawStr((*((*(_20322_l))))._field_Value)) {
		_20413_s=_1bc7e4d0e_ToRawStr((*((*(_20322_l))))._field_Value);
	} else {
		_20413_s=_1bc7e5150_ToStr((*((*(_20322_l))))._field_Value);
	};
	jule::Ptr<_230d58386_Const> _21013_constant = static__230d59123_NewStr(_20413_s);;
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c43b0_primStr, ._field_Mutable=true, ._field_Model=jule::Any(_21013_constant, &__jule_any_type19), ._field_Constant=_21013_constant});;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc814317_litRune(_1bc81259b_Eval* _self_, jule::Ptr<_1bc59aa1b_LitExpr>* _22023_l) {
	jule::I32 _2219_r = _1bc7e4ade_ToRune((*((*(_22023_l))))._field_Value);;
	jule::Ptr<_1bc8108a7_Data> _22213_data = jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Constant=static__230d587c6_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_2219_r)))});;
	jule::Bool _2269_isAscii = _1bc7c9376_IsAscii(_2219_r);;
	if (_2269_isAscii) {
		(*(_22213_data))._field_Kind=_1bc2c5eb6_primU8;
	} else {
		(*(_22213_data))._field_Kind=_1bc2c5933_primI32;
	};
	(*(_22213_data))._field_Model=jule::Any(jule::new_ptr<_1ece175bb_RuneExprModel>(_1ece175bb_RuneExprModel{._field_Code=_2219_r}), &__jule_any_type82);
	(*(_22213_data))._field_Mutable=true;
	(*(_22213_data))._field_IsRune=true;
	(*(_22213_data))._field_untyped=true;
	return _22213_data;;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc814658_litFloat(_1bc81259b_Eval* _self_, jule::Ptr<_1bc59aa1b_LitExpr>* _24024_l) {
	jule::F64 _2419_f = ({
		auto except = _230d4015e_ParseFloat((*((*(_24024_l))))._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_230d58386_Const> _24213_constant = static__230d593dc_NewF64(_2419_f);;
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_untyped=true, ._field_Kind=_1bc2c7050_primF64, ._field_Mutable=true, ._field_Model=jule::Any(_24213_constant, &__jule_any_type19), ._field_Constant=_24213_constant});;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc814999_litInt(_1bc81259b_Eval* _self_, jule::Ptr<_1bc59aa1b_LitExpr>* _25226_l) {
	;
	jule::Str _25513_lit = (*((*(_25226_l))))._field_Value;;
	jule::I64 _25613_base = 0LL;;
	{
		
		if (_1ed639b56_HasPrefix(_25513_lit, jule::Str::lit("0x", 2))) {
			_case_begin_1c1a50c36:;
			{
				(_25513_lit).mut_slice(2LL);;
				_25613_base=16LLU;
			}
		}
		else if (_1ed639b56_HasPrefix(_25513_lit, jule::Str::lit("0b", 2))) {
			_case_begin_1c1a50b04:;
			{
				(_25513_lit).mut_slice(2LL);;
				_25613_base=2LLU;
			}
		}
		else if (_1ed639b56_HasPrefix(_25513_lit, jule::Str::lit("0o", 2))) {
			_case_begin_1c1a50b6a:;
			{
				(_25513_lit).mut_slice(2LL);;
				_25613_base=8LLU;
			}
		}
		else if (((_25513_lit[0LL] == '0') && (_25513_lit.len() > 1LL))) {
			_case_begin_1c1a507e6:;
			{
				(_25513_lit).mut_slice(1LL);;
				_25613_base=8LLU;
			}
		}
		else {
			_case_begin_1c1a50780:;
			{
				_25613_base=10LLU;
			}
		}
		_match_end_1c1a5072a:;
	};
	jule::Ptr<_1bc8108a7_Data> _27613_d = jule::new_ptr<_1bc8108a7_Data>();;
	jule::Bool _27813_ok = true;;
	jule::I64 _2799_sig = ({
		auto except = _230d3871d_ParseInt(_25513_lit, _25613_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_27813_ok=false;

			0LL;
		});
	});;
	if (_27813_ok) {
		(*(_27613_d))._field_Constant=static__230d587c6_NewI64(_2799_sig);
		(*(_27613_d))._field_Kind=_1bc2c50d6_primInt;
	} else {
		jule::U64 _28713_unsig = ({
			auto except = _230d38267_ParseUint(_25513_lit, _25613_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_1bc812aeb_pushErr(_self_, (*((*(_25226_l))))._field_Token, jule::Str::lit("arithmetic value overflow: this value too big", 45), jule::Slice<jule::Any>());
				_1bc812e5e_pushSuggestion(_self_, jule::Str::lit("floating-point literals may solve your problem", 46), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		(*(_27613_d))._field_Constant=static__230d58a90_NewU64(_28713_unsig);
		(*(_27613_d))._field_Kind=_1bc2c4c0c_primUint;
	};
	(*(_27613_d))._field_Model=jule::Any((*(_27613_d))._field_Constant, &__jule_any_type19);
	(*(_27613_d))._field_untyped=true;
	if ((!(_1bc813b85_applyNumericPrefix(_self_, &(_27613_d))))) {
		_1bc839815_fitBitsize(&(_27613_d));
	};
	return _27613_d;;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc814cda_litNum(_1bc81259b_Eval* _self_, jule::Ptr<_1bc59aa1b_LitExpr>* _30726_l) {
	{
		
		if (_1bc585bb0_IsFloat((*((*(_30726_l))))._field_Value)) {
			_case_begin_1c1a57aa6:;
			{
				return _1bc814658_litFloat(_self_, _30726_l);;
			}
		}
		else {
			_case_begin_1c1a57a40:;
			{
				return _1bc814999_litInt(_self_, _30726_l);;
			}
		}
		_match_end_1c1a57974:;
	};
}



inline jule::Ptr<_1bc8108a7_Data> _1bc81512b_evalLit(_1bc81259b_Eval* _self_, jule::Ptr<_1bc59aa1b_LitExpr> _31626_lit) {
	{
		
		if (_1bc584c03_IsStr((*(_31626_lit))._field_Value)) {
			_case_begin_1c1a58c94:;
			{
				return _1bc813ec6_litStr(_self_, &(_31626_lit));;
			}
		}
		else if (_1bc585286_IsRune((*(_31626_lit))._field_Value)) {
			_case_begin_1c1a58d1b:;
			{
				return _1bc814317_litRune(_self_, &(_31626_lit));;
			}
		}
		else if (_1bc585e79_IsNum((*(_31626_lit))._field_Value)) {
			_case_begin_1c1a58d93:;
			{
				return _1bc814cda_litNum(_self_, &(_31626_lit));;
			}
		}
		else {
			_case_begin_1c1a5869a:;
			{
				return nullptr;;
			}
		}
		_match_end_1c1a585e0:;
	};
}



inline jule::Any _1bc81546c_findBuiltins(_1bc81259b_Eval* _self_, jule::Str* _32932_ident) {
	if (_1bc781372_IsPub((*(_32932_ident)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 1)) {
				_case_begin_1c1a5b0d7:;
				{
					jule::Any _33321_def = _1bc8395d4_findBuiltinsImport(_32932_ident, (*(_self_))._field_lookup.cast_ptr<_1bc763e04_ImportInfo>(1));;
					if ((_33321_def != nullptr)) {
						return _33321_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, 3)) {
				_case_begin_1c1a5b14d:;
				{
					jule::Any _33821_def = _1bc83a33d_findBuiltinsSema(_32932_ident, (*(_self_))._field_lookup.cast_ptr<_1bc784276_Sema>(3));;
					if ((_33821_def != nullptr)) {
						return _33821_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, 0)) {
				_case_begin_1c1a5b1b4:;
				{
					jule::Any _34321_def = _1bc83a33d_findBuiltinsSema(_32932_ident, (*((*(_self_))._field_lookup.cast_ptr<_1bc749923_scopeChecker>(0)))._field_s);;
					if ((_34321_def != nullptr)) {
						return _34321_def;;
					};
				}
			}
			_match_end_1c1a5b03d:;
		};
		return nullptr;;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _1bc2c77c0_findBuiltinDef(_32932_ident);;
}



inline jule::Any _1bc815868_getDef(_1bc81259b_Eval* _self_, jule::Str* _35626_ident, jule::Bool _35638_binded) {
	jule::Ptr<_1bc7a750d_Var> _36113_v = _1bc860c04_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1bc85e3d9_FindVar((*(_self_))._field_lookup, (*(_35626_ident)), _35638_binded);;
	if ((_36113_v != nullptr)) {
		return jule::Any(_36113_v, &__jule_any_type8);;
	};
	jule::Ptr<_1bc8403cb_TypeAlias> _36613_ta = _1bc860c04_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1bc85e7d5_FindTypeAlias((*(_self_))._field_lookup, (*(_35626_ident)), _35638_binded);;
	if ((_36613_ta != nullptr)) {
		return jule::Any(_36613_ta, &__jule_any_type66);;
	};
	if ((!(_35638_binded))) {
		jule::Ptr<_1bc71624c_Enum> _37217_enm = _1bc860c04_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1bc86075e_FindEnum((*(_self_))._field_lookup, (*(_35626_ident)));;
		if ((_37217_enm != nullptr)) {
			return jule::Any(_37217_enm, &__jule_any_type67);;
		};
		jule::Ptr<_1bc717957_TypeEnum> _37717_tenm = _1bc860c04_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1bc860aa0_FindTypeEnum((*(_self_))._field_lookup, (*(_35626_ident)));;
		if ((_37717_tenm != nullptr)) {
			return jule::Any(_37717_tenm, &__jule_any_type68);;
		};
	};
	jule::Ptr<_1ece1b092_Fn> _38313_f = _1bc860c04_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1bc8600cc_FindFn((*(_self_))._field_lookup, (*(_35626_ident)), _35638_binded);;
	if ((_38313_f != nullptr)) {
		return jule::Any(_38313_f, &__jule_any_type64);;
	};
	jule::Ptr<_1bc5bb333_Struct> _38813_s = _1bc860c04_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1bc85ebd1_FindStruct((*(_self_))._field_lookup, (*(_35626_ident)), _35638_binded);;
	if ((_38813_s != nullptr)) {
		return jule::Any(_38813_s, &__jule_any_type65);;
	};
	return _1bc81546c_findBuiltins(_self_, _35626_ident);;
}



inline jule::Ptr<_1ece221a8_ReferenceStack> _1bc815aee_getOwnerRefers(_1bc81259b_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1c1a64b5c:;
			{
				jule::Ptr<_1bc749923_scopeChecker> _39917_sc = _1bc74cc9a_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1bc749923_scopeChecker>(0));;
				return (*((*(_39917_sc))._field_owner))._field_Refers;;
			}
		}
		else {
			_case_begin_1c1a63b6c:;
			{
				if ((((*(_self_))._field_owner != nullptr) && ((*((*(_self_))._field_owner))._field_Scope == nullptr))) {
					return (*((*(_self_))._field_owner))._field_Refers;;
				};
			}
		}
		_match_end_1c1a63b17:;
	};
	return nullptr;;
}



inline void _1c1a766c9_pushReference(_1bc81259b_Eval* _self_, jule::Ptr<_1ece1de96_FnIns>* _41140_ref) {
	jule::Ptr<_1ece221a8_ReferenceStack> _41213_refers = _1bc815aee_getOwnerRefers(_self_);;
	if (((_41213_refers != nullptr) && (!(_1c1a78a0b_Exist(_41213_refers.ptr(), (*(_41140_ref))))))) {
		_1ece22e9a_Push(_41213_refers.ptr(), jule::Any((*(_41140_ref)), &__jule_any_type7));
	};
}

inline void _1c1d575d1_pushReference(_1bc81259b_Eval* _self_, jule::Ptr<_1bc7a750d_Var>* _41140_ref) {
	jule::Ptr<_1ece221a8_ReferenceStack> _41213_refers = _1bc815aee_getOwnerRefers(_self_);;
	if (((_41213_refers != nullptr) && (!(_1c1d598ad_Exist(_41213_refers.ptr(), (*(_41140_ref))))))) {
		_1ece22e9a_Push(_41213_refers.ptr(), jule::Any((*(_41140_ref)), &__jule_any_type8));
	};
}

inline void _1c1e18ac1_pushReference(_1bc81259b_Eval* _self_, jule::Ptr<_1bc5be0b1_StructIns>* _41140_ref) {
	jule::Ptr<_1ece221a8_ReferenceStack> _41213_refers = _1bc815aee_getOwnerRefers(_self_);;
	if (((_41213_refers != nullptr) && (!(_1c1e1ae03_Exist(_41213_refers.ptr(), (*(_41140_ref))))))) {
		_1ece22e9a_Push(_41213_refers.ptr(), jule::Any((*(_41140_ref)), &__jule_any_type9));
	};
}



inline jule::Ptr<_1bc8108a7_Data> _1bc8161e8__evalEnum(_1bc81259b_Eval* _self_, jule::Ptr<_1bc71624c_Enum> _41828_enm) {
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(_41828_enm, 3)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc8165e4_evalEnum(_1bc81259b_Eval* _self_, jule::Ptr<_1bc71624c_Enum> _42731_enm, jule::Ptr<_1bc583a9d_Token> _42743_errorToken) {
	if ((!(_1bc787620_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_42731_enm))._field_Public, (*(_42731_enm))._field_Token)))) {
		_1bc812aeb_pushErr(_self_, _42743_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_42731_enm))._field_Ident, &__jule_any_type4)}));
		_1bc812e5e_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1bc8161e8__evalEnum(_self_, _42731_enm);;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc816935__evalTypeEnum(_1bc81259b_Eval* _self_, jule::Ptr<_1bc717957_TypeEnum> _43632_enm) {
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(_43632_enm, 4)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc816d31_evalTypeEnum(_1bc81259b_Eval* _self_, jule::Ptr<_1bc717957_TypeEnum> _44535_enm, jule::Ptr<_1bc583a9d_Token> _44551_errorToken) {
	if ((!(_1bc787620_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_44535_enm))._field_Public, (*(_44535_enm))._field_Token)))) {
		_1bc812aeb_pushErr(_self_, _44551_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_44535_enm))._field_Ident, &__jule_any_type4)}));
		_1bc812e5e_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1bc816935__evalTypeEnum(_self_, _44535_enm);;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc817172__evalStruct(_1bc81259b_Eval* _self_, jule::Ptr<_1bc5be0b1_StructIns> _45430_s) {
	jule::Ptr<_1bc8108a7_Data> _45513_d = jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(_45430_s, 0)}), ._field_Model=jule::Any(_45430_s, &__jule_any_type9), ._field_Decl=true, });;
	if ((((*(_45430_s))._field_Decl != nullptr) && (*((*(_45430_s))._field_Decl))._field_Binded)) {
		(*((*(_45513_d))._field_Kind))._field_BindIdent=(*((*(_45430_s))._field_Decl))._field_Ident;
	};
	return _45513_d;;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc81756d_evalStruct(_1bc81259b_Eval* _self_, jule::Ptr<_1bc5be0b1_StructIns> _46833_s, jule::Ptr<_1bc583a9d_Token> _46848_errorToken) {
	if ((!(_1bc787620_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_46833_s))._field_Decl))._field_Public, (*((*(_46833_s))._field_Decl))._field_Token)))) {
		_1bc812aeb_pushErr(_self_, _46848_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_46833_s))._field_Decl))._field_Ident, &__jule_any_type4)}));
		_1bc812e5e_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1bc817c22_checkDeprecated(_self_, &((*((*(_46833_s))._field_Decl))._field_Directives), _46848_errorToken);
	return _1bc817172__evalStruct(_self_, _46833_s);;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc8178ae_evalFnIns(_1bc81259b_Eval* _self_, jule::Ptr<_1ece1de96_FnIns> _47828_f) {
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(_47828_f, 1)}), ._field_Model=jule::Any(_47828_f, &__jule_any_type7), });;
}



inline void _1bc817c22_checkDeprecated(_1bc81259b_Eval* _self_, jule::Slice<jule::Ptr<_1bc594a59_Directive>>* _48739_directives, jule::Ptr<_1bc583a9d_Token> _48770_tok) {
	if (_1bc8135e1_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_1bc594a59_Directive> _4929_d = _1bc83921b_findDirective(_48739_directives, jule::Str::lit("deprecated", 10));;
	if ((_4929_d != nullptr)) {
		if (((*(_4929_d))._field_Args.len() == 0LL)) {
			_1bc812aeb_pushErr(_self_, _48770_tok, jule::Str::lit("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("this code is deprecated", 23), &__jule_any_type4)}));
		} else {
			_1bc812aeb_pushErr(_self_, _48770_tok, jule::Str::lit("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any((*((*(_4929_d))._field_Args[0LL]))._field_Kind, &__jule_any_type4)}));
		};
		_1bc812e5e_pushSuggestion(_self_, jule::Str::lit("use Unsafe Jule for deprecated codes or replace to successor", 60), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1bc8108a7_Data> _1bc81811d_evalFn(_1bc81259b_Eval* _self_, jule::Ptr<_1ece1b092_Fn> _50329_f, jule::Ptr<_1bc583a9d_Token> _50337_errorToken) {
	if ((!(_1bc787620_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_50329_f))._field_Public, (*(_50329_f))._field_Token)))) {
		_1bc812aeb_pushErr(_self_, _50337_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_50329_f))._field_Ident, &__jule_any_type4)}));
		_1bc812e5e_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1bc817c22_checkDeprecated(_self_, &((*(_50329_f))._field_Directives), _50337_errorToken);
	jule::Ptr<_1ece1de96_FnIns> _51213_ins = _1ece1c802_instance(_50329_f);;
	_1c1a766c9_pushReference(_self_, &(_51213_ins));
	return _1bc8178ae_evalFnIns(_self_, _51213_ins);;
}



inline void _1bc81853b_pushIllegalCycleError(_1bc81259b_Eval* _self_, jule::Ptr<_1bc7a750d_Var>* _51741_v1, jule::Ptr<_1bc7a750d_Var>* _51752_v2, _2096a4489_StrBuilder* _51767_message) {
	;
	jule::Str _5199_refers_to = _1ed6c7d04_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*((*(_51741_v1))))._field_Ident, &__jule_any_type4),jule::Any((*((*(_51752_v2))))._field_Ident, &__jule_any_type4)}));;
	jule::Slice<jule::U8> _5209_buf = _2096a61e4_Buf(_51767_message);;
	_2096a4e4b_WriteStr(_51767_message, _1ed63935e_Repeat(jule::Str::lit(" ", 1), 7LL));
	_2096a4e4b_WriteStr(_51767_message, _5199_refers_to);
	_2096a5204_WriteByte(_51767_message, '\n');
	_2096a4b93_Write(_51767_message, _5209_buf);
}



inline jule::Bool _1bc818937_checkCrossCycle(_1bc81259b_Eval* _self_, jule::Ptr<_1bc7a750d_Var>* _52735_v, _2096a4489_StrBuilder* _52749_message) {
	{
		auto expr = &((*((*(_52735_v))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1a7ce3e:;
		if (it != expr_end) {
			jule::Ptr<_1bc7a750d_Var> *_52816_d = it;
			{
				if (((*(_52816_d)) == (*(_self_))._field_owner)) {
					_1bc81853b_pushIllegalCycleError(_self_, _52735_v, _52816_d, _52749_message);
					return false;;
				};
				if ((!(_1bc818937_checkCrossCycle(_self_, _52816_d, _52749_message)))) {
					_1bc81853b_pushIllegalCycleError(_self_, _52735_v, _52816_d, _52749_message);
					return false;;
				};
			}
			_iter_next_1c1a7ce3e:;
			++it;
			goto _iter_begin_1c1a7ce3e;
		}
		_iter_end_1c1a7ce3e:;
	};
	return true;;
}



inline jule::Bool _1bc818d33_checkIllegalCycles(_1bc81259b_Eval* _self_, jule::Ptr<_1bc7a750d_Var>* _54442_v, jule::Ptr<_1bc583a9d_Token> _54451_declToken) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*((*(_self_))._field_owner))._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_54442_v)))) {
		_1bc812aeb_pushErr(_self_, (*((*(_self_))._field_owner))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_owner))._field_Ident, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_2096a4489_StrBuilder _55713_message = static__2096a48da_New(32LL);;
	if ((!(_1bc818937_checkCrossCycle(_self_, _54442_v, &(_55713_message))))) {
		jule::Str _56017_errMsg = _2096a5743_Str(&_55713_message);;
		_2096a5941_Clear(&_55713_message);
		_1bc81853b_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _54442_v, &(_55713_message));
		_56017_errMsg+=_2096a5743_Str(&_55713_message);
		_1bc812aeb_pushErr(_self_, _54451_declToken, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_56017_errMsg, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{ jule::Slice<jule::Ptr<_1bc7a750d_Var>> &__jule_push_dest = (*((*(_self_))._field_owner))._field_Depends; __jule_push_dest.push((*(_54442_v))); };
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc81922e_evalVar(_1bc81259b_Eval* _self_, jule::Ptr<_1bc7a750d_Var> _57230_v, jule::Ptr<_1bc583a9d_Token> _57239_errorToken) {
	if ((!(_1bc787620_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_57230_v))._field_Public, (*(_57230_v))._field_Token)))) {
		_1bc812aeb_pushErr(_self_, _57239_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_57230_v))._field_Ident, &__jule_any_type4)}));
		_1bc812e5e_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1bc817c22_checkDeprecated(_self_, &((*(_57230_v))._field_Directives), _57239_errorToken);
	if (((*(_57230_v))._field_Token == nullptr)) {
		goto _julec_label_1c1d5e86e;
	};
	(*(_57230_v))._field_Used=true;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1c1d52bd6:;
			{
				jule::Bool _59113_ok = _1bc818d33_checkIllegalCycles(_self_, &(_57230_v), _57239_errorToken);;
				if ((!(_59113_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1c1d52c4c:;
			{
				if (((!((*(_57230_v))._field_Reference)) || _1bc8135e1_isUnsafe(_self_))) {
					goto _match_end_1c1d52b81;
				};
				jule::Ptr<_1bc749923_scopeChecker> _59917_s = (*(_self_))._field_lookup.cast_ptr<_1bc749923_scopeChecker>(0);;
				while ((((*(_59917_s))._field_owner == nullptr) && ((*(_59917_s))._field_parent != nullptr))) {
					{
						_59917_s=(*(_59917_s))._field_parent;
					}
				_iter_next_1c1d540c2:;
				}
				_iter_end_1c1d540c2:;;
				if (((((*(_59917_s))._field_owner != nullptr) && (*((*(_59917_s))._field_owner))._field_Anon) && ((*(_57230_v))._field_Scope != (*((*(_59917_s))._field_owner))._field_Scope))) {
					_1bc812aeb_pushErr(_self_, _57239_errorToken, jule::Str::lit("anonymous functions cannot access to reference definition @ of parent scope", 75), jule::Slice<jule::Any>::make({jule::Any((*(_57230_v))._field_Ident, &__jule_any_type4)}));
				};
			}
		}
		_match_end_1c1d52b81:;
	};
	if (((*(_57230_v))._field_Scope == nullptr)) {
		_1c1d575d1_pushReference(_self_, &(_57230_v));
	};
	if (((!((*(_57230_v))._field_Binded)) && (((*(_57230_v))._field_Value == nullptr) || ((*((*(_57230_v))._field_Value))._field_Data == nullptr)))) {
		if ((*(_57230_v))._field_Constant) {
			_1bc79e03d_checkVar((*(_self_))._field_s, &(_57230_v), jule::Trait<_1bc860c04_Lookup>((*(_self_))._field_s, 3));
			if ((((*(_57230_v))._field_Value == nullptr) || ((*((*(_57230_v))._field_Value))._field_Data == nullptr))) {
				return nullptr;;
			};
		};
	};
	if ((((*(_57230_v))._field_Kind == nullptr) || ((*((*(_57230_v))._field_Kind))._field_Kind == nullptr))) {
		if (((*(_57230_v))._field_Scope != nullptr)) {
			return nullptr;;
		};
		_1bc79e03d_checkVar((*(_self_))._field_s, &(_57230_v), (*(_self_))._field_lookup);
		if ((((*(_57230_v))._field_Kind == nullptr) || ((*((*(_57230_v))._field_Kind))._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	_julec_label_1c1d5e86e:;
	jule::Ptr<_1bc8108a7_Data> _64313_d = jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=(*((*(_57230_v))._field_Kind))._field_Kind, ._field_Mutable=(*(_57230_v))._field_Mutable, ._field_Reference=(*(_57230_v))._field_Reference, ._field_Lvalue=(!((*(_57230_v))._field_Constant)), ._field_Model=jule::Any(_57230_v, &__jule_any_type8), });;
	if ((((!((*(_57230_v))._field_Binded)) && _1bc7a7893_IsInitialized(_57230_v.ptr())) && ((*((*(_57230_v))._field_Value))._field_Data != nullptr))) {
		(*(_64313_d))._field_IsRune=(*((*((*(_57230_v))._field_Value))._field_Data))._field_IsRune;
	};
	if (((*(_57230_v))._field_Constant && ((*((*((*(_57230_v))._field_Value))._field_Data))._field_Constant != nullptr))) {
		(*(_64313_d))._field_Constant=jule::new_ptr<_230d58386_Const>((*((*((*((*(_57230_v))._field_Value))._field_Data))._field_Constant)));
		(*(_64313_d))._field_Model=jule::Any((*(_64313_d))._field_Constant, &__jule_any_type19);
		if (_1bc7a7db0_untypedConstant(_57230_v.ptr())) {
			_1bc813b85_applyNumericPrefix(_self_, &(_64313_d));
			(*(_64313_d))._field_untyped=true;
		};
	};
	return _64313_d;;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc81962a_evalTypeAlias(_1bc81259b_Eval* _self_, jule::Ptr<_1bc8403cb_TypeAlias> _66736_ta, jule::Ptr<_1bc583a9d_Token> _66752_errorToken) {
	if ((!(_1bc787620_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_66736_ta))._field_Public, (*(_66736_ta))._field_Token)))) {
		_1bc812aeb_pushErr(_self_, _66752_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_66736_ta))._field_Ident, &__jule_any_type4)}));
		_1bc812e5e_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*(_66736_ta))._field_Used=true;
	jule::Trait<_1bc840c17_Kind> _67613_kind = (*((*((*(_66736_ta))._field_Kind))._field_Kind))._field_Kind;;
	jule::Ptr<_1bc8108a7_Data> _67717_d = nullptr;;
	{
		auto &_match_expr{ _67613_kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1c1d6a869:;
			{
				_67717_d=_1bc817172__evalStruct(_self_, _67613_kind.cast_ptr<_1bc5be0b1_StructIns>(0));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1c1d6a704:;
			{
				_67717_d=_1bc8161e8__evalEnum(_self_, _67613_kind.cast_ptr<_1bc71624c_Enum>(3));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1c1d68922:;
			{
				_67717_d=_1bc816935__evalTypeEnum(_self_, _67613_kind.cast_ptr<_1bc717957_TypeEnum>(4));
			}
		}
		else {
			_case_begin_1c1d688ab:;
			{
				_67717_d=jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=(*((*((*(_66736_ta))._field_Kind))._field_Kind))._field_Kind}), ._field_Decl=true, });
				if ((*(_66736_ta))._field_Binded) {
					(*((*(_67717_d))._field_Kind))._field_BindIdent=(*(_66736_ta))._field_Ident;
				} else {
					(*((*(_67717_d))._field_Kind))._field_BindIdent=(*((*((*(_66736_ta))._field_Kind))._field_Kind))._field_BindIdent;
				};
				(*(_67717_d))._field_Model=jule::Any((*(_67717_d))._field_Kind, &__jule_any_type83);
			}
		}
		_match_end_1c1d685e2:;
	};
	(*((*(_67717_d))._field_Kind))._field_Generic=(*(_66736_ta))._field_Generic;
	return _67717_d;;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc819a26_evalDef(_1bc81259b_Eval* _self_, jule::Any* _70331_def, jule::Ptr<_1bc583a9d_Token> _70341_ident) {
	{
		auto &_match_expr{ (*(_70331_def)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c1d6ddbc:;
			{
				return _1bc81922e_evalVar(_self_, (*(_70331_def)).cast_ptr<_1bc7a750d_Var>(&__jule_any_type8), _70341_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1c1d6de33:;
			{
				return _1bc8165e4_evalEnum(_self_, (*(_70331_def)).cast_ptr<_1bc71624c_Enum>(&__jule_any_type67), _70341_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1c1d6de99:;
			{
				return _1bc816d31_evalTypeEnum(_self_, (*(_70331_def)).cast_ptr<_1bc717957_TypeEnum>(&__jule_any_type68), _70341_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1c1d6e010:;
			{
				return _1bc81756d_evalStruct(_self_, _1bc5bb795_instance((*(_70331_def)).cast_ptr<_1bc5bb333_Struct>(&__jule_any_type65)), _70341_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1c1d6e076:;
			{
				jule::Ptr<_1ece1b092_Fn> _71417_f = (*(_70331_def)).cast_ptr<_1ece1b092_Fn>(&__jule_any_type64);;
				if ((!(*(_71417_f))._field_Ident.equal("init", 4))) {
					return _1bc81811d_evalFn(_self_, _71417_f, _70341_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c1d6e0dc:;
			{
				return _1bc8178ae_evalFnIns(_self_, (*(_70331_def)).cast_ptr<_1ece1de96_FnIns>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1c1d6e164:;
			{
				return _1bc81962a_evalTypeAlias(_self_, (*(_70331_def)).cast_ptr<_1bc8403cb_TypeAlias>(&__jule_any_type66), _70341_ident);;
			}
		}
		_match_end_1c1d6dd67:;
	};
	_1bc812aeb_pushErr(_self_, _70341_ident, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_70341_ident))._field_Kind, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc819d67_evalIdent(_1bc81259b_Eval* _self_, jule::Ptr<_1bc59b39b_IdentExpr> _72728_ident) {
	jule::Any _72813_def = _1bc815868_getDef(_self_, &((*(_72728_ident))._field_Ident), (*(_72728_ident))._field_Binded);;
	return _1bc819a26_evalDef(_self_, &(_72813_def), (*(_72728_ident))._field_Token);;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc81a1a8_evalUnary(jule::Ptr<_1bc81259b_Eval> _self_, jule::Ptr<_1bc59ba2d_UnaryExpr> _73233_u) {
	_1bc830cc3_unaryEval _73313_unary = static__1bc831213_new(_self_);;
	return _1bc832643_eval(&_73313_unary, _73233_u);;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc81a4e9_evalVariadic(jule::Ptr<_1bc81259b_Eval> _self_, jule::Ptr<_1bc59be07_VariadicExpr> _73736_v) {
	if (((*(_73736_v))._field_Expr == nullptr)) {
		_1bc812aeb_pushErr(_self_.ptr(), (*(_73736_v))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1bc8411bd_TypeKind> _74313_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_74313_prefix;
	});;
	jule::Ptr<_1bc8108a7_Data> _74713_d = _1bc83080b_evalExpr(_self_, (*(_73736_v))._field_Expr);;
	if ((_74713_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1bc843588_Variadicable((*(_74713_d))._field_Kind.ptr())))) {
		_1bc812aeb_pushErr(_self_.ptr(), (*(_73736_v))._field_Token, jule::Str::lit("type @ is not variadicable", 26), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*(_74713_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1bc84d296_Slc> _75713_slc = _1bc844875_Slc((*(_74713_d))._field_Kind.ptr());;
	(*(_74713_d))._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_BindIdent=(*((*(_75713_slc))._field_Elem))._field_BindIdent, ._field_Generic=(*((*(_75713_slc))._field_Elem))._field_Generic, ._field_Variadic=true, ._field_Kind=(*((*(_75713_slc))._field_Elem))._field_Kind});
	return _74713_d;;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc81a83a_evalUnsafe(jule::Ptr<_1bc81259b_Eval> _self_, jule::Ptr<_1bc59ade5_UnsafeExpr> _76734_u) {
	jule::Bool _7689_unsafety = (*(_self_))._field_unsafety;;
	(*(_self_))._field_unsafety=true;
	jule::Ptr<_1bc8108a7_Data> _77013_d = _1bc83080b_evalExpr(_self_, (*(_76734_u))._field_Expr);;
	(*(_self_))._field_unsafety=_7689_unsafety;
	return _77013_d;;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc81ab7b_evalArr(jule::Ptr<_1bc81259b_Eval> _self_, jule::Ptr<_1bc5a5d01_SliceExpr> _77531_s) {
	jule::Ptr<_1bc8505b7_Arr> _77713_pt = _1bc8445de_Arr((*(_self_))._field_prefix.ptr());;
	jule::Ptr<_1bc8505b7_Arr> _77913_arr = jule::new_ptr<_1bc8505b7_Arr>(_1bc8505b7_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=(*(_77713_pt))._field_Elem});;
	jule::Bool _78513_filled = false;;
	if (((*(_77531_s))._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ (*((*(_77531_s))._field_Exprs[1LL]))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type75) {
				_case_begin_1c1d806c5:;
				{
					if (((*((*((*(_77531_s))._field_Exprs[1LL]))._field_Kind.cast_ptr<_1bc59be07_VariadicExpr>(&__jule_any_type75)))._field_Expr != nullptr)) {
						goto _match_end_1c1d8062b;
					};
					if ((*(_77713_pt))._field_Auto) {
						_1bc812aeb_pushErr(_self_.ptr(), (*(_77531_s))._field_Token, jule::Str::lit("auto-sized arrays cannot filled", 31), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_78513_filled=true;
					(*(_77531_s))._field_Exprs=(*(_77531_s))._field_Exprs.slice(0LL, 1LL);
				}
			}
			_match_end_1c1d8062b:;
		};
	};
	(*(_77913_arr))._field_N=static_cast<jule::I64>((*(_77531_s))._field_Exprs.len());
	if ((!((*(_77713_pt))._field_Auto))) {
		if (((*(_77913_arr))._field_N > (*(_77713_pt))._field_N)) {
			_1bc812aeb_pushErr(_self_.ptr(), (*(_77531_s))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else if (((*(_77913_arr))._field_N < (*(_77713_pt))._field_N)) {
			(*(_77913_arr))._field_N=(*(_77713_pt))._field_N;
		};
	};
	jule::Ptr<_1ece13683_ArrayExprModel> _81413_model = jule::new_ptr<_1ece13683_ArrayExprModel>(_1ece13683_ArrayExprModel{._field_Kind=_77913_arr, });;
	if (_78513_filled) {
		(*(_81413_model))._field_Elems=jule::Slice<jule::Any>::alloc(0LL, 2LL, jule::Any(nullptr));
	} else {
		(*(_81413_model))._field_Elems=jule::Slice<jule::Any>::alloc(0LL, (*(_77531_s))._field_Exprs.len(), jule::Any(nullptr));
	};
	jule::Ptr<_1bc8411bd_TypeKind> _82313_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=(*(_77913_arr))._field_Elem;
	{
		auto expr = &((*(_77531_s))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1d87468:;
		if (it != expr_end) {
			jule::Ptr<_1bc599971_Expr> _82521_elem = *it;
			{
				jule::Ptr<_1bc8108a7_Data> _82617_d = _1bc83080b_evalExpr(_self_, _82521_elem);;
				if ((_82617_d == nullptr)) {
					goto _iter_next_1c1d87468;
				};
				_1bc78e8be_checkAssignType((*(_self_))._field_s, false, &((*(_77913_arr))._field_Elem), &(_82617_d), (*(_77531_s))._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = (*(_81413_model))._field_Elems; __jule_push_dest.push((*(_82617_d))._field_Model); };
			}
			_iter_next_1c1d87468:;
			++it;
			goto _iter_begin_1c1d87468;
		}
		_iter_end_1c1d87468:;
	};
	(*(_self_))._field_prefix=_82313_prefix;
	if (_78513_filled) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_81413_model))._field_Elems; __jule_push_dest.push(nullptr); };
	};
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(_77913_arr, 25)}), ._field_Mutable=true, ._field_Model=jule::Any(_81413_model, &__jule_any_type84), });;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc81b132_evalExpSlc(jule::Ptr<_1bc81259b_Eval> _self_, jule::Ptr<_1bc5a5d01_SliceExpr> _84934_s, jule::Ptr<_1bc8411bd_TypeKind> _84953_t, jule::Any _84971_first) {
	jule::Ptr<_1bc84d296_Slc> _85013_slc = jule::new_ptr<_1bc84d296_Slc>(_1bc84d296_Slc{._field_Elem=_84953_t});;
	jule::I64 _85413_i = 0LL;;
	jule::Ptr<_1ece1063b_SliceExprModel> _85513_model = jule::new_ptr<_1ece1063b_SliceExprModel>(_1ece1063b_SliceExprModel{._field_ElemKind=_84953_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, (*(_84934_s))._field_Exprs.len(), jule::Any(nullptr))});;
	if ((_84971_first != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_85513_model))._field_Elems; __jule_push_dest.push(_84971_first); };
		_85413_i=1LL;
	};
	jule::Ptr<_1bc8411bd_TypeKind> _86413_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=(*(_85013_slc))._field_Elem;
	{
		auto expr = (*(_84934_s))._field_Exprs.slice(_85413_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1c1d8e140:;
		if (it != expr_end) {
			jule::Ptr<_1bc599971_Expr> _86621_elem = *it;
			{
				jule::Ptr<_1bc8108a7_Data> _86717_d = _1bc83080b_evalExpr(_self_, _86621_elem);;
				if ((_86717_d == nullptr)) {
					goto _iter_next_1c1d8e140;
				};
				_1bc78e8be_checkAssignType((*(_self_))._field_s, false, &((*(_85013_slc))._field_Elem), &(_86717_d), (*(_84934_s))._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = (*(_85513_model))._field_Elems; __jule_push_dest.push((*(_86717_d))._field_Model); };
			}
			_iter_next_1c1d8e140:;
			++it;
			goto _iter_begin_1c1d8e140;
		}
		_iter_end_1c1d8e140:;
	};
	(*(_self_))._field_prefix=_86413_prefix;
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(_85013_slc, 22)}), ._field_Mutable=true, ._field_Model=jule::Any(_85513_model, &__jule_any_type76), });;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc81b473_evalSliceExpr(jule::Ptr<_1bc81259b_Eval> _self_, jule::Ptr<_1bc5a5d01_SliceExpr> _88537_s) {
	if (((*(_self_))._field_prefix != nullptr)) {
		{
			
			if ((_1bc8445de_Arr((*(_self_))._field_prefix.ptr()) != nullptr)) {
				_case_begin_1c1d927b4:;
				{
					return _1bc81ab7b_evalArr(_self_, _88537_s);;
				}
			}
			else if ((_1bc844875_Slc((*(_self_))._field_prefix.ptr()) != nullptr)) {
				_case_begin_1c1d9283b:;
				{
					jule::Ptr<_1bc84d296_Slc> _89121_pt = _1bc844875_Slc((*(_self_))._field_prefix.ptr());;
					return _1bc81b132_evalExpSlc(_self_, _88537_s, (*(_89121_pt))._field_Elem, nullptr);;
				}
			}
			_match_end_1c1d926a4:;
		};
	};
	jule::Ptr<_1bc8411bd_TypeKind> _89613_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	if (((*(_88537_s))._field_Exprs.len() == 0LL)) {
		_1bc812aeb_pushErr(_self_.ptr(), (*(_88537_s))._field_Token, jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1bc8108a7_Data> _90413_firstElem = _1bc83080b_evalExpr(_self_, (*(_88537_s))._field_Exprs[0LL]);;
	if ((_90413_firstElem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1bc8108a7_Data> _90913_d = _1bc81b132_evalExpSlc(_self_, _88537_s, (*(_90413_firstElem))._field_Kind, (*(_90413_firstElem))._field_Model);;
	(*(_self_))._field_prefix=_89613_prefix;
	return _90913_d;;
}



inline void _1bc81b7d6_checkIntegerIndexingByData(_1bc81259b_Eval* _self_, jule::Ptr<_1bc8108a7_Data>* _91550_d, jule::Ptr<_1bc583a9d_Token> _91560_token) {
	jule::Str _9169_err_key = _1bc83b905_checkDataForIntegerIndexing(_91550_d);;
	{
		auto &_match_expr{ _9169_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1c1d993ae:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str::lit("type @ is invalid for indexing", 30)) {
			_case_begin_1c1d98930:;
			{
				_1bc812aeb_pushErr(_self_, _91560_token, _9169_err_key, jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*((*(_91550_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			}
		}
		else {
			_case_begin_1c1d98ca4:;
			{
				_1bc812aeb_pushErr(_self_, _91560_token, _9169_err_key, jule::Slice<jule::Any>());
			}
		}
		_match_end_1c1d98bd8:;
	};
}



inline void _1bc81bc04_indexingPtr(_1bc81259b_Eval* _self_, jule::Ptr<_1bc8108a7_Data>* _92735_d, jule::Ptr<_1bc8108a7_Data>* _92750_index, jule::Ptr<_1bc5a6791_IndexingExpr>* _92765_i) {
	_1bc81b7d6_checkIntegerIndexingByData(_self_, _92750_index, (*((*(_92765_i))))._field_Token);
	(*((*(_92735_d))))._field_Lvalue=true;
	jule::Ptr<_1bc85108a_Ptr> _93113_ptr = _1bc843d3b_Ptr((*((*(_92735_d))))._field_Kind.ptr());;
	{
		
		if (_1bc851ac4_IsUnsafe(_93113_ptr.ptr())) {
			_case_begin_1c1d9bb31:;
			{
				_1bc812aeb_pushErr(_self_, (*((*(_92765_i))))._field_Token, jule::Str::lit("unsafe pointers are not supports indexing", 41), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1bc8135e1_isUnsafe(_self_)))) {
			_case_begin_1c1d9bba8:;
			{
				_1bc812aeb_pushErr(_self_, (*((*(_92765_i))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c1d9baba:;
	};
	(*((*(_92735_d))))._field_Kind=(*(_93113_ptr))._field_Elem;
}



inline void _1bc81c122_indexingArr(_1bc81259b_Eval* _self_, jule::Ptr<_1bc8108a7_Data>* _94335_d, jule::Ptr<_1bc8108a7_Data>* _94350_index, jule::Ptr<_1bc5a6791_IndexingExpr>* _94365_i) {
	jule::Ptr<_1bc8505b7_Arr> _94413_arr = _1bc8445de_Arr((*((*(_94335_d))))._field_Kind.ptr());;
	(*((*(_94335_d))))._field_Kind=(*(_94413_arr))._field_Elem;
	_1bc81b7d6_checkIntegerIndexingByData(_self_, _94350_index, (*((*(_94365_i))))._field_Token);
	(*((*(_94335_d))))._field_Lvalue=true;
	if ((_1bc81127b_IsConst((*(_94350_index)).ptr()) && (_230d5b048_AsF64((*((*(_94350_index))))._field_Constant.ptr()) >= static_cast<jule::F64>((*(_94413_arr))._field_N)))) {
		_1bc812aeb_pushErr(_self_, (*((*(_94365_i))))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
	};
}



inline void _1bc81c540_indexingSlc(_1bc81259b_Eval* _self_, jule::Ptr<_1bc8108a7_Data>* _95335_d, jule::Ptr<_1bc8108a7_Data>* _95350_index, jule::Ptr<_1bc5a6791_IndexingExpr>* _95365_i) {
	jule::Ptr<_1bc84d296_Slc> _95413_slc = _1bc844875_Slc((*((*(_95335_d))))._field_Kind.ptr());;
	(*((*(_95335_d))))._field_Kind=(*(_95413_slc))._field_Elem;
	_1bc81b7d6_checkIntegerIndexingByData(_self_, _95350_index, (*((*(_95365_i))))._field_Token);
	(*((*(_95335_d))))._field_Lvalue=true;
	if ((!(_1bc81127b_IsConst((*(_95350_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_95335_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1c1da3ece:;
			{
				jule::Ptr<_1ece1063b_SliceExprModel> _96517_m = (*((*(_95335_d))))._field_Model.cast_ptr<_1ece1063b_SliceExprModel>(&__jule_any_type76);;
				jule::F64 _96613_indx = _230d5b048_AsF64((*((*(_95350_index))))._field_Constant.ptr());;
				if ((_96613_indx >= static_cast<jule::F64>((*(_96517_m))._field_Elems.len()))) {
					_1bc812aeb_pushErr(_self_, (*((*(_95365_i))))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
				} else {
					(*((*(_95335_d))))._field_Model=(*(_96517_m))._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_96613_indx))];
					(*((*(_95335_d))))._field_Decl=true;
				};
			}
		}
		_match_end_1c1da3e68:;
	};
}



inline void _1bc81c95d_indexingMap(_1bc81259b_Eval* _self_, jule::Ptr<_1bc8108a7_Data>* _97635_d, jule::Ptr<_1bc8108a7_Data>* _97650_index, jule::Ptr<_1bc5a6791_IndexingExpr>* _97669_i) {
	(*((*(_97635_d))))._field_Lvalue=true;
	if (((*(_97650_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_1bc84e93a_Map> _98113_m = _1bc8453ae_Map((*((*(_97635_d))))._field_Kind.ptr());;
	_1bc7e9583_assignTypeChecker _98213_atc = _1bc7e9583_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_98113_m))._field_Key, ._field_d=(*(_97650_index)), ._field_errorToken=(*((*(_97669_i))))._field_Token};;
	_1bc7ea551_check(&_98213_atc);
	(*((*(_97635_d))))._field_Kind=(*(_98113_m))._field_Val;
}



inline void _1bc81cd7b_indexingStr(_1bc81259b_Eval* _self_, jule::Ptr<_1bc8108a7_Data>* _99235_d, jule::Ptr<_1bc8108a7_Data>* _99250_index, jule::Ptr<_1bc5a6791_IndexingExpr>* _99265_i) {
	(*((*(_99235_d))))._field_Kind=_1bc2c5eb6_primU8;
	(*((*(_99235_d))))._field_Mutable=false;
	(*((*(_99235_d))))._field_Lvalue=true;
	if (((*(_99250_index)) == nullptr)) {
		return;;
	};
	_1bc81b7d6_checkIntegerIndexingByData(_self_, _99250_index, (*((*(_99265_i))))._field_Token);
	if ((!(_1bc81127b_IsConst((*(_99250_index)).ptr())))) {
		(*((*(_99235_d))))._field_Constant=nullptr;
		(*((*(_99235_d))))._field_untyped=false;
		return;;
	};
	if (_1bc81127b_IsConst((*(_99235_d)).ptr())) {
		jule::Ptr<_1bc583a9d_Token> _101013_errorToken = (*((*(_99265_i))))._field_Token;;
		jule::I64 _101113_j = _230d5aa2b_AsI64((*((*(_99250_index))))._field_Constant.ptr());;
		jule::Str _101213_s = _230d5a50e_ReadStr((*((*(_99235_d))))._field_Constant.ptr());;
		if ((static_cast<jule::I64>(_101113_j) >= _101213_s.len())) {
			_1bc812aeb_pushErr(_self_, _101013_errorToken, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else {
			_230d5b5a9_SetU64((*((*(_99235_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_101213_s[_101113_j])));
		};
	};
}



inline void _1bc81d299_toIndexing(_1bc81259b_Eval* _self_, jule::Ptr<_1bc8108a7_Data>* _102134_d, jule::Ptr<_1bc8108a7_Data>* _102149_index, jule::Ptr<_1bc5a6791_IndexingExpr>* _102168_i) {
	{
		
		if ((_1bc843d3b_Ptr((*((*(_102134_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c1db0606:;
			{
				_1bc81bc04_indexingPtr(_self_, _102134_d, _102149_index, _102168_i);
				return;;
			}
		}
		else if ((_1bc8445de_Arr((*((*(_102134_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c1db067d:;
			{
				_1bc81c122_indexingArr(_self_, _102134_d, _102149_index, _102168_i);
				return;;
			}
		}
		else if ((_1bc844875_Slc((*((*(_102134_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c1db0705:;
			{
				_1bc81c540_indexingSlc(_self_, _102134_d, _102149_index, _102168_i);
				return;;
			}
		}
		else if ((_1bc8453ae_Map((*((*(_102134_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c1db077c:;
			{
				_1bc81c95d_indexingMap(_self_, _102134_d, _102149_index, _102168_i);
				return;;
			}
		}
		else if ((_1bc84381e_Prim((*((*(_102134_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c1db0804:;
			{
				jule::Ptr<_1bc848c97_Prim> _103613_prim = _1bc84381e_Prim((*((*(_102134_d))))._field_Kind.ptr());;
				{
					
					if (_1bc84c22e_IsStr(_103613_prim.ptr())) {
						_case_begin_1c1db4b27:;
						{
							_1bc81cd7b_indexingStr(_self_, _102134_d, _102149_index, _102168_i);
							return;;
						}
					}
					_match_end_1c1db4a7d:;
				};
			}
		}
		_match_end_1c1db04b3:;
	};
	_1bc812aeb_pushErr(_self_, (*((*(_102168_i))))._field_Token, jule::Str::lit("type @ is not support indexing", 30), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*((*(_102134_d))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Bool _1bc81d750_pushGenericsFromExprSubIdent(jule::Ptr<_1bc81259b_Eval> _self_, jule::Ptr<_1bc5a28e1_SubIdentExpr>* _104653_sexpr, jule::Slice<jule::Ptr<_1bc59563c_TypeDecl>>* _104714_generics, jule::Ptr<_1bc599971_Expr>* _104742_expr) {
	jule::Ptr<_1bc596044_SubIdentTypeDecl> _104813_t = jule::new_ptr<_1bc596044_SubIdentTypeDecl>();;
	if ((!(_1bc83c7e6_pushSubIdentFromExpr(jule::Any((*(_104653_sexpr)), &__jule_any_type85), &(_104813_t))))) {
		_1bc812aeb_pushErr(_self_.ptr(), (*((*(_104742_expr))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	{ jule::Slice<jule::Ptr<_1bc59563c_TypeDecl>> &__jule_push_dest = (*(_104714_generics)); __jule_push_dest.push(jule::new_ptr<_1bc59563c_TypeDecl>(_1bc59563c_TypeDecl{._field_Kind=jule::Any(_104813_t, &__jule_any_type86)})); };
	return true;;
}



inline jule::Bool _1bc81db4b_pushGenericsFromData(jule::Ptr<_1bc81259b_Eval> _self_, jule::Slice<jule::Ptr<_1bc59563c_TypeDecl>>* _105745_generics, jule::Ptr<_1bc599971_Expr>* _105773_expr) {
	{
		auto &_match_expr{ (*((*(_105773_expr))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1c1db9115:;
			{
				jule::Ptr<_1bc59ba2d_UnaryExpr> _106017_u = (*((*(_105773_expr))))._field_Kind.cast_ptr<_1bc59ba2d_UnaryExpr>(&__jule_any_type87);;
				{
					auto &_match_expr{ (*((*(_106017_u))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(62LLU)) {
						_case_begin_1c1db9e3a:;
						{
							jule::Ptr<_1bc597166_PtrTypeDecl> _106321_kind = jule::new_ptr<_1bc597166_PtrTypeDecl>();;
							jule::Slice<jule::Ptr<_1bc59563c_TypeDecl>> _106421__generics = jule::Slice<jule::Ptr<_1bc59563c_TypeDecl>>::alloc(0LL, 1LL);;
							_1bc81db4b_pushGenericsFromData(_self_, &(_106421__generics), &((*(_106017_u))._field_Expr));
							(*(_106321_kind))._field_Elem=_106421__generics[0LL];
							{ jule::Slice<jule::Ptr<_1bc59563c_TypeDecl>> &__jule_push_dest = (*(_105745_generics)); __jule_push_dest.push(jule::new_ptr<_1bc59563c_TypeDecl>(_1bc59563c_TypeDecl{._field_Token=(*((*(_105773_expr))))._field_Token, ._field_Kind=jule::Any(_106321_kind, &__jule_any_type71)})); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(65LLU)) {
						_case_begin_1c1dbb06d:;
						{
							jule::Ptr<_1bc5966d7_SptrTypeDecl> _107221_kind = jule::new_ptr<_1bc5966d7_SptrTypeDecl>();;
							jule::Slice<jule::Ptr<_1bc59563c_TypeDecl>> _107321__generics = jule::Slice<jule::Ptr<_1bc59563c_TypeDecl>>::alloc(0LL, 1LL);;
							_1bc81db4b_pushGenericsFromData(_self_, &(_107321__generics), &((*(_106017_u))._field_Expr));
							(*(_107221_kind))._field_Elem=_107321__generics[0LL];
							{ jule::Slice<jule::Ptr<_1bc59563c_TypeDecl>> &__jule_push_dest = (*(_105745_generics)); __jule_push_dest.push(jule::new_ptr<_1bc59563c_TypeDecl>(_1bc59563c_TypeDecl{._field_Token=(*((*(_105773_expr))))._field_Token, ._field_Kind=jule::Any(_107221_kind, &__jule_any_type72)})); };
						}
					}
					else {
						_case_begin_1c1dba435:;
						{
							_1bc812aeb_pushErr(_self_.ptr(), (*(_106017_u))._field_Op, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1c1dba3d0:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1c1db917b:;
			{
				{ jule::Slice<jule::Ptr<_1bc59563c_TypeDecl>> &__jule_push_dest = (*(_105745_generics)); __jule_push_dest.push((*((*(_105773_expr))))._field_Kind.cast_ptr<_1bc59563c_TypeDecl>(&__jule_any_type88)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1c1db91e2:;
			{
				jule::Ptr<_1bc5a28e1_SubIdentExpr> _108717_sexpr = (*((*(_105773_expr))))._field_Kind.cast_ptr<_1bc5a28e1_SubIdentExpr>(&__jule_any_type85);;
				return _1bc81d750_pushGenericsFromExprSubIdent(_self_, &(_108717_sexpr), _105745_generics, _105773_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1c1db8543:;
			{
				jule::Ptr<_1bc59b39b_IdentExpr> _109017_ident = (*((*(_105773_expr))))._field_Kind.cast_ptr<_1bc59b39b_IdentExpr>(&__jule_any_type79);;
				{ jule::Slice<jule::Ptr<_1bc59563c_TypeDecl>> &__jule_push_dest = (*(_105745_generics)); __jule_push_dest.push(jule::new_ptr<_1bc59563c_TypeDecl>(_1bc59563c_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1bc595c47_IdentTypeDecl>(_1bc595c47_IdentTypeDecl{._field_Token=(*(_109017_ident))._field_Token, ._field_Ident=(*(_109017_ident))._field_Ident, ._field_Binded=(*(_109017_ident))._field_Binded, }), &__jule_any_type20)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1c1db85a9:;
			{
				{
					auto expr = &((*((*((*(_105773_expr))))._field_Kind.cast_ptr<_1bc59a642_TupleExpr>(&__jule_any_type80)))._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c1dc344e:;
					if (it != expr_end) {
						jule::Ptr<_1bc599971_Expr> _109925_texpr = *it;
						{
							if ((!(_1bc81db4b_pushGenericsFromData(_self_, _105745_generics, &(_109925_texpr))))) {
								return false;;
							};
						}
						_iter_next_1c1dc344e:;
						++it;
						goto _iter_begin_1c1dc344e;
					}
					_iter_end_1c1dc344e:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1c1db8620:;
			{
				jule::Ptr<_1bc5a254a_NsSelectionExpr> _110517_ns = (*((*(_105773_expr))))._field_Kind.cast_ptr<_1bc5a254a_NsSelectionExpr>(&__jule_any_type89);;
				jule::Ptr<_1bc595c47_IdentTypeDecl> _110617_decl = jule::new_ptr<_1bc595c47_IdentTypeDecl>(_1bc595c47_IdentTypeDecl{._field_Token=(*(_110517_ns))._field_Ident, ._field_Ident=(*((*(_110517_ns))._field_Ident))._field_Kind, });;
				{ jule::Slice<jule::Ptr<_1bc59563c_TypeDecl>> &__jule_push_dest = (*(_105745_generics)); __jule_push_dest.push(jule::new_ptr<_1bc59563c_TypeDecl>(_1bc59563c_TypeDecl{._field_Token=(*(_110617_decl))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1bc5963da_NamespaceTypeDecl>(_1bc5963da_NamespaceTypeDecl{._field_Idents=(*(_110517_ns))._field_Ns, ._field_Kind=jule::new_ptr<_1bc59563c_TypeDecl>(_1bc59563c_TypeDecl{._field_Token=(*(_110617_decl))._field_Token, ._field_Kind=jule::Any(_110617_decl, &__jule_any_type20)})}), &__jule_any_type90)})); };
			}
		}
		else {
			_case_begin_1c1db84cc:;
			{
				_1bc812aeb_pushErr(_self_.ptr(), (*((*(_105773_expr))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1c1db8477:;
	};
	return true;;
}



inline void _1bc81deae_evalIdentDeclFromIndexing(jule::Ptr<_1bc81259b_Eval> _self_, jule::Ptr<_1bc8108a7_Data>* _112750_d, jule::Ptr<_1bc5a6791_IndexingExpr>* _112765_i) {
	jule::Ptr<_1bc5be0b1_StructIns> _112813_s = _1bc844d92_Struct((*((*(_112750_d))))._field_Kind.ptr());;
	if ((_112813_s == nullptr)) {
		_1bc812aeb_pushErr(_self_.ptr(), (*((*((*(_112765_i))))._field_Expr))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*((*(_112750_d))))._field_Kind.ptr()), &__jule_any_type4)}));
		(*(_112750_d))=nullptr;
		return;;
	};
	jule::Ptr<_1bc595c47_IdentTypeDecl> _113517_decl = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_112765_i))))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1c1dc9257:;
			{
				jule::Ptr<_1bc59b39b_IdentExpr> _113817_expr = (*((*((*(_112765_i))))._field_Expr))._field_Kind.cast_ptr<_1bc59b39b_IdentExpr>(&__jule_any_type79);;
				_113517_decl=jule::new_ptr<_1bc595c47_IdentTypeDecl>(_1bc595c47_IdentTypeDecl{._field_Token=(*(_113817_expr))._field_Token, ._field_Ident=(*(_113817_expr))._field_Ident, ._field_Binded=(*(_113817_expr))._field_Binded, });
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1c1dca4cd:;
			{
				jule::Ptr<_1bc5a254a_NsSelectionExpr> _114517_expr = (*((*((*(_112765_i))))._field_Expr))._field_Kind.cast_ptr<_1bc5a254a_NsSelectionExpr>(&__jule_any_type89);;
				_113517_decl=jule::new_ptr<_1bc595c47_IdentTypeDecl>(_1bc595c47_IdentTypeDecl{._field_Token=(*(_114517_expr))._field_Ident, ._field_Ident=(*((*(_114517_expr))._field_Ident))._field_Kind, });
			}
		}
		else {
			_case_begin_1c1dc96b9:;
			{
				_1bc812aeb_pushErr(_self_.ptr(), (*((*(_112765_i))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				(*(_112750_d))=nullptr;
				return;;
			}
		}
		_match_end_1c1dc9664:;
	};
	if ((!(_1bc81db4b_pushGenericsFromData(_self_, &((*(_113517_decl))._field_Generics), &((*((*(_112765_i))))._field_Index))))) {
		(*(_112750_d))=nullptr;
		return;;
	};
	_112813_s=({ auto _wrap_copy = _1bc8259aa_typeChecker(_self_.ptr()); _1bc856ec5_fromStruct(&_wrap_copy, &(_113517_decl), &((*(_112813_s))._field_Decl)); });
	if ((_112813_s == nullptr)) {
		(*(_112750_d))=nullptr;
		return;;
	};
	(*((*((*(_112750_d))))._field_Kind))._field_Kind=jule::Trait<_1bc840c17_Kind>(_112813_s, 0);
}



inline jule::Bool _1bc81e465_checkGenericFn(jule::Ptr<_1bc81259b_Eval> _self_, jule::Ptr<_1ece1de96_FnIns>* _117039_f, jule::Ptr<_1bc583a9d_Token>* _117055_et, jule::Any* _117072_model) {
	jule::Bool _11719_ok = _1bc792d45_reloadFnInsTypes((*(_self_))._field_s, (*(_117039_f)));;
	(*((*(_117039_f))))._field_reloaded=true;
	if ((!(_11719_ok))) {
		return false;;
	};
	jule::Ptr<_1ece1de96_FnIns> _117613_existInstance = _1ece1cb10_appendInstance((*((*(_117039_f))))._field_Decl.ptr(), _117039_f);;
	if ((!(_1bc791d99_checkConstraintsFn((*(_self_))._field_s, _117039_f, _117055_et, _117613_existInstance)))) {
		return false;;
	};
	if ((_117613_existInstance != nullptr)) {
		_1bc83c472_updateModelToGenericIns(_117072_model, &(_117613_existInstance));
		_1c1dd3360_updateRefer(_1bc815aee_getOwnerRefers(_self_.ptr()), _117039_f, &(_117613_existInstance));
		(*(_117039_f))=_117613_existInstance;
	} else {
		_1bc7a2195_checkFnInsCaller((*(_self_))._field_s, _117039_f, (*(_117055_et)));
	};
	return true;;
}



inline void _1bc81e7c8_evalFnGenericFromIndexing(jule::Ptr<_1bc81259b_Eval> _self_, jule::Ptr<_1bc8108a7_Data>* _119950_d, jule::Ptr<_1bc5a6791_IndexingExpr>* _119965_i) {
	jule::Slice<jule::Ptr<_1bc59563c_TypeDecl>> _120013_generics = jule::Slice<jule::Ptr<_1bc59563c_TypeDecl>>::alloc(0LL, 8LLU);;
	if ((!(_1bc81db4b_pushGenericsFromData(_self_, &(_120013_generics), &((*((*(_119965_i))))._field_Index))))) {
		(*(_119950_d))=nullptr;
		return;;
	};
	jule::Ptr<_1ece1de96_FnIns> _120613_f = _1bc844b0b_Fn((*((*(_119950_d))))._field_Kind.ptr());;
	jule::I64 _120713_genericsLen = 0LL;;
	if (((*(_120613_f))._field_Decl != nullptr)) {
		_120713_genericsLen=static_cast<jule::I64>((*((*(_120613_f))._field_Decl))._field_Generics.len());
	};
	if ((!(_1bc7883e0_checkGenericQuantity((*(_self_))._field_s.ptr(), _120713_genericsLen, static_cast<jule::I64>(_120013_generics.len()), (*((*((*(_119965_i))))._field_Expr))._field_Token)))) {
		(*(_119950_d))=nullptr;
		return;;
	};
	(*(_120613_f))._field_Generics=jule::Slice<jule::Ptr<_1bc83e7d7_InsGeneric>>::alloc(0LL, (*((*(_120613_f))._field_Decl))._field_Generics.len());
	{
		auto expr = &(_120013_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1dda0c0:;
		if (it != expr_end) {
			jule::Ptr<_1bc59563c_TypeDecl> _121821_g = *it;
			{
				jule::Ptr<_1bc8108a7_Data> _121917_k = _1bc825ceb_evalType(_self_.ptr(), _121821_g);;
				if ((_121917_k == nullptr)) {
					(*(_119950_d))=nullptr;
					return;;
				};
				{ jule::Slice<jule::Ptr<_1bc83e7d7_InsGeneric>> &__jule_push_dest = (*(_120613_f))._field_Generics; __jule_push_dest.push(jule::new_ptr<_1bc83e7d7_InsGeneric>(_1bc83e7d7_InsGeneric{._field_Kind=(*(_121917_k))._field_Kind, })); };
			}
			_iter_next_1c1dda0c0:;
			++it;
			goto _iter_begin_1c1dda0c0;
		}
		_iter_end_1c1dda0c0:;
	};
	if (_1ece2042b_IsBuiltin(_120613_f.ptr())) {
		return;;
	};
	if (_1bc81e465_checkGenericFn(_self_, &(_120613_f), &((*((*((*(_119965_i))))._field_Expr))._field_Token), &((*((*(_119950_d))))._field_Model))) {
		(*((*((*(_119950_d))))._field_Kind))._field_Kind=jule::Trait<_1bc840c17_Kind>(_120613_f, 1);
	} else {
		(*(_119950_d))=nullptr;
	};
}



inline jule::Ptr<_1bc8108a7_Data> _1bc81eb19_evalIndexing(jule::Ptr<_1bc81259b_Eval> _self_, jule::Ptr<_1bc5a6791_IndexingExpr> _123836_i) {
	jule::Ptr<_1bc8411bd_TypeKind> _123913_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_123913_prefix;
	});;
	jule::Ptr<_1bc8108a7_Data> _124313_d = _1bc82e9e7_evalExprKind(_self_, (*((*(_123836_i))._field_Expr))._field_Kind);;
	if ((_124313_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_124313_d))._field_Decl) {
		_1bc81deae_evalIdentDeclFromIndexing(_self_, &(_124313_d), &(_123836_i));
		return _124313_d;;
	};
	if ((_1bc844b0b_Fn((*(_124313_d))._field_Kind.ptr()) != nullptr)) {
		_1bc81e7c8_evalFnGenericFromIndexing(_self_, &(_124313_d), &(_123836_i));
		return _124313_d;;
	};
	_1bc8108a7_Data _125913_oldData = (*(_124313_d));;
	jule::Ptr<_1bc8108a7_Data> _126113_index = _1bc83080b_evalExpr(_self_, (*(_123836_i))._field_Index);;
	if ((_126113_index == nullptr)) {
		return nullptr;;
	};
	(*(_124313_d))._field_Decl=false;
	_1bc81d299_toIndexing(_self_.ptr(), &(_124313_d), &(_126113_index), &(_123836_i));
	if (_1bc81127b_IsConst(_124313_d.ptr())) {
		(*(_124313_d))._field_Decl=false;
		(*(_124313_d))._field_Model=jule::Any((*(_124313_d))._field_Constant, &__jule_any_type19);
	} else if ((*(_124313_d))._field_Decl) {
		(*(_124313_d))._field_Decl=false;
	} else {
		(*(_124313_d))._field_Model=jule::Any(jule::new_ptr<_1ece10ae2_IndexingExprModel>(_1ece10ae2_IndexingExprModel{._field_Token=(*(_123836_i))._field_Token, ._field_Expr=jule::new_ptr<_1bc8108a7_Data>(_125913_oldData), ._field_Index=_126113_index}), &__jule_any_type45);
	};
	return _124313_d;;
}



inline __jule_tuple_x_1bc8108a7_Data__jule_tuple_x_1bc8108a7_Data _1bc81ee5a_evalSlicingExprs(jule::Ptr<_1bc81259b_Eval> _self_, jule::Ptr<_1bc5a6e01_SlicingExpr>* _129241_s) {
	__jule_tuple_x_1bc8108a7_Data__jule_tuple_x_1bc8108a7_Data __jule_func_result;
	jule::Ptr<_1bc8411bd_TypeKind> _129313_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_129313_prefix;
	});;
	jule::Ptr<_1bc8108a7_Data> _129717_l = nullptr;;
	jule::Ptr<_1bc8108a7_Data> _129817_r = nullptr;;
	if (((*((*(_129241_s))))._field_Start != nullptr)) {
		_129717_l=_1bc83080b_evalExpr(_self_, (*((*(_129241_s))))._field_Start);
		if ((_129717_l != nullptr)) {
			_1bc81b7d6_checkIntegerIndexingByData(_self_.ptr(), &(_129717_l), (*((*(_129241_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_129717_l=jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c50d6_primInt, ._field_Constant=static__230d587c6_NewI64(0LL)});
		(*((*(_129717_l))._field_Constant))._field_Kind=jule::Str::lit("int", 3);
		(*(_129717_l))._field_Model=jule::Any((*(_129717_l))._field_Constant, &__jule_any_type19);
	};
	if (((*((*(_129241_s))))._field_To != nullptr)) {
		_129817_r=_1bc83080b_evalExpr(_self_, (*((*(_129241_s))))._field_To);
		if ((_129817_r != nullptr)) {
			_1bc81b7d6_checkIntegerIndexingByData(_self_.ptr(), &(_129817_r), (*((*(_129241_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _129717_l;
	__jule_func_result.__jule_result_arg1 = _129817_r;
	return __jule_func_result;;
}



inline void _1bc820213_slicingArr(_1bc81259b_Eval* _self_, jule::Ptr<_1bc8108a7_Data>* _132830_d) {
	jule::Ptr<_1bc8411bd_TypeKind> _132913_elemType = (*(_1bc8445de_Arr((*((*(_132830_d))))._field_Kind.ptr())))._field_Elem;;
	(*((*(_132830_d))))._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(jule::new_ptr<_1bc84d296_Slc>(_1bc84d296_Slc{._field_Elem=_132913_elemType}), 22)});
	(*((*(_132830_d))))._field_Lvalue=false;
	(*((*(_132830_d))))._field_Mutable=((*((*(_132830_d))))._field_Mutable || (!(_1bc842a4e_Mutable(_132913_elemType.ptr()))));
}



inline void _1bc820631_slicingStr(_1bc81259b_Eval* _self_, jule::Ptr<_1bc8108a7_Data>* _134330_d, jule::Ptr<_1bc8108a7_Data>* _134341_l, jule::Ptr<_1bc8108a7_Data>* _134352_r) {
	(*((*(_134330_d))))._field_Lvalue=false;
	(*((*(_134330_d))))._field_Mutable=true;
	if ((!(_1bc81127b_IsConst((*(_134330_d)).ptr())))) {
		return;;
	};
	if ((((*(_134341_l)) == nullptr) || ((*(_134352_r)) == nullptr))) {
		(*((*(_134330_d))))._field_Constant=nullptr;
		(*((*(_134330_d))))._field_untyped=false;
		return;;
	};
	if ((_1bc81127b_IsConst((*(_134341_l)).ptr()) && _1bc81127b_IsConst((*(_134352_r)).ptr()))) {
		jule::I64 _135713_left = _230d5aa2b_AsI64((*((*(_134341_l))))._field_Constant.ptr());;
		if ((_135713_left < 0LL)) {
			return;;
		};
		jule::Str _136213_s = _230d5a50e_ReadStr((*((*(_134330_d))))._field_Constant.ptr());;
		jule::I64 _136317_right = static_cast<jule::I64>(0LL);;
		if (((*(_134352_r)) == nullptr)) {
			_136317_right=static_cast<jule::I64>(static_cast<jule::I64>(_136213_s.len()));
		} else {
			_136317_right=static_cast<jule::I64>(_230d5aa2b_AsI64((*((*(_134352_r))))._field_Constant.ptr()));
		};
		if ((_135713_left > _136317_right)) {
			return;;
		};
		_230d5bb1a_SetStr((*((*(_134330_d))))._field_Constant.ptr(), _136213_s.slice(_135713_left, _136317_right));
		(*((*(_134330_d))))._field_Decl=true;
	} else {
		(*((*(_134330_d))))._field_Constant=nullptr;
		(*((*(_134330_d))))._field_untyped=false;
	};
}



inline void _1bc820b09_checkSlicing(_1bc81259b_Eval* _self_, jule::Ptr<_1bc8108a7_Data>* _138136_d, jule::Ptr<_1bc8108a7_Data>* _138147_l, jule::Ptr<_1bc8108a7_Data>* _138158_r, jule::Ptr<_1bc5a6e01_SlicingExpr>* _138169_s) {
	{
		
		if ((_1bc8445de_Arr((*((*(_138136_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c1e0585a:;
			{
				_1bc820213_slicingArr(_self_, _138136_d);
				return;;
			}
		}
		else if ((_1bc844875_Slc((*((*(_138136_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c1e058d2:;
			{
				return;;
			}
		}
		else if ((_1bc84381e_Prim((*((*(_138136_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c1e05959:;
			{
				jule::Ptr<_1bc848c97_Prim> _138913_prim = _1bc84381e_Prim((*((*(_138136_d))))._field_Kind.ptr());;
				{
					
					if (_1bc84c22e_IsStr(_138913_prim.ptr())) {
						_case_begin_1c1e081cb:;
						{
							_1bc820631_slicingStr(_self_, _138136_d, _138147_l, _138158_r);
							return;;
						}
					}
					_match_end_1c1e08132:;
				};
			}
		}
		_match_end_1c1e05739:;
	};
	_1bc812aeb_pushErr(_self_, (*((*(_138169_s))))._field_Token, jule::Str::lit("type @ is not support slicing", 29), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*((*(_138136_d))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Ptr<_1bc8108a7_Data> _1bc820e4a_evalSlicing(jule::Ptr<_1bc81259b_Eval> _self_, jule::Ptr<_1bc5a6e01_SlicingExpr> _140035_s) {
	jule::Ptr<_1bc8108a7_Data> _140113_d = _1bc83080b_evalExpr(_self_, (*(_140035_s))._field_Expr);;
	if ((_140113_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1bc8108a7_Data> _140613_l;;
	jule::Ptr<_1bc8108a7_Data> _140620_r;;
	({
		__jule_tuple_x_1bc8108a7_Data__jule_tuple_x_1bc8108a7_Data __jule_assign_result = _1bc81ee5a_evalSlicingExprs(_self_, &(_140035_s));
		_140613_l = __jule_assign_result.__jule_result_arg0;
		_140620_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_140613_l == nullptr)) {
		return _140113_d;;
	};
	(*(_140113_d))._field_Decl=false;
	_1bc820b09_checkSlicing(_self_.ptr(), &(_140113_d), &(_140613_l), &(_140620_r), &(_140035_s));
	if (_1bc81127b_IsConst(_140113_d.ptr())) {
		(*(_140113_d))._field_Decl=false;
		(*(_140113_d))._field_Model=jule::Any((*(_140113_d))._field_Constant, &__jule_any_type19);
	} else if ((*(_140113_d))._field_Decl) {
		(*(_140113_d))._field_Decl=false;
	} else {
		jule::Ptr<_1ece11dce_SlicingExprModel> _142417_model = jule::new_ptr<_1ece11dce_SlicingExprModel>(_1ece11dce_SlicingExprModel{._field_Token=(*(_140035_s))._field_Token, ._field_Expr=(*(_140113_d))._field_Model, ._field_Left=(*(_140613_l))._field_Model, });;
		if ((_140620_r != nullptr)) {
			(*(_142417_model))._field_Right=(*(_140620_r))._field_Model;
		};
		(*(_140113_d))._field_Model=jule::Any(_142417_model, &__jule_any_type91);
	};
	return _140113_d;;
}



inline void _1bc821368_castPtr(_1bc81259b_Eval* _self_, jule::Ptr<_1bc8411bd_TypeKind> _143730_t, jule::Ptr<_1bc8108a7_Data> _143748_d, jule::Ptr<_1bc583a9d_Token> _143758_errorToken) {
	(*(_143748_d))._field_Constant=nullptr;
	(*(_143748_d))._field_untyped=false;
	jule::Ptr<_1bc84c7c3_Sptr> _14409_sptr = _1bc843aa5_Sptr((*(_143748_d))._field_Kind.ptr());;
	if ((_14409_sptr != nullptr)) {
		if ((!(_1bc8418c7_Equal((*(_1bc843d3b_Ptr(_143730_t.ptr())))._field_Elem, (*(_14409_sptr))._field_Elem)))) {
			_1bc812aeb_pushErr(_self_, _143758_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*(_143748_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1bc841586_Str(_143730_t.ptr()), &__jule_any_type4)}));
		};
		return;;
	};
	if ((!(_1bc8135e1_isUnsafe(_self_)))) {
		_1bc812aeb_pushErr(_self_, _143758_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1bc848c97_Prim> _14539_prim = _1bc84381e_Prim((*(_143748_d))._field_Kind.ptr());;
	if (((_1bc843d3b_Ptr((*(_143748_d))._field_Kind.ptr()) == nullptr) && ((_14539_prim == nullptr) || (!(_230d577a3_IsInt(_1bc8490d8_Str(_14539_prim.ptr()))))))) {
		_1bc812aeb_pushErr(_self_, _143758_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*(_143748_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1bc841586_Str(_143730_t.ptr()), &__jule_any_type4)}));
	};
}



inline void _1bc821786_castStruct(_1bc81259b_Eval* _self_, jule::Ptr<_1bc8411bd_TypeKind> _145933_t, jule::Ptr<_1bc8108a7_Data> _145951_d, jule::Ptr<_1bc583a9d_Token> _145961_errorToken) {
	(*(_145951_d))._field_Constant=nullptr;
	(*(_145951_d))._field_untyped=false;
	jule::Ptr<_1bc713a41_Trait> _146213_tr = _1bc845128_Trait((*(_145951_d))._field_Kind.ptr());;
	if ((_146213_tr == nullptr)) {
		_1bc812aeb_pushErr(_self_, _145961_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*(_145951_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1bc841586_Str(_145933_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1bc5be0b1_StructIns> _146813_s = _1bc844d92_Struct(_145933_t.ptr());;
	_1c1e18ac1_pushReference(_self_, &(_146813_s));
	if ((!(_1bc5bc972_IsImplements((*(_146813_s))._field_Decl.ptr(), _146213_tr)))) {
		_1bc812aeb_pushErr(_self_, _145961_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*(_145951_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1bc841586_Str(_145933_t.ptr()), &__jule_any_type4)}));
	};
}



inline void _1bc821ba4_castRef(_1bc81259b_Eval* _self_, jule::Ptr<_1bc8411bd_TypeKind> _147630_t, jule::Ptr<_1bc8108a7_Data> _147648_d, jule::Ptr<_1bc583a9d_Token> _147658_errorToken) {
	(*(_147648_d))._field_Constant=nullptr;
	(*(_147648_d))._field_untyped=false;
	jule::Ptr<_1bc84c7c3_Sptr> _147913_sptr = _1bc843aa5_Sptr(_147630_t.ptr());;
	jule::Ptr<_1bc85108a_Ptr> _148113_ptr = _1bc843d3b_Ptr((*(_147648_d))._field_Kind.ptr());;
	if (((_148113_ptr != nullptr) && _1bc8418c7_Equal((*(_147913_sptr))._field_Elem, (*(_148113_ptr))._field_Elem))) {
		if ((!(_1bc8135e1_isUnsafe(_self_)))) {
			_1bc812aeb_pushErr(_self_, _147658_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1bc844d92_Struct((*(_147913_sptr))._field_Elem.ptr()) != nullptr)) {
		_1bc821786_castStruct(_self_, (*(_147913_sptr))._field_Elem, _147648_d, _147658_errorToken);
		return;;
	};
	_1bc812aeb_pushErr(_self_, _147658_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*(_147648_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1bc841586_Str(_147630_t.ptr()), &__jule_any_type4)}));
}



inline void _1bc8220c2_castSlc(_1bc81259b_Eval* _self_, jule::Ptr<_1bc8411bd_TypeKind> _149930_t, jule::Ptr<_1bc8108a7_Data> _149948_d, jule::Ptr<_1bc583a9d_Token> _149958_errorToken) {
	jule::Ptr<_230d58386_Const> _15009_c = (*(_149948_d))._field_Constant;;
	(*(_149948_d))._field_Constant=nullptr;
	(*(_149948_d))._field_untyped=false;
	if ((_1bc8440c2_Enum((*(_149948_d))._field_Kind.ptr()) != nullptr)) {
		if (((_1bc84381e_Prim((*((*(_1bc8440c2_Enum((*(_149948_d))._field_Kind.ptr())))._field_Kind))._field_Kind.ptr()) == nullptr) || (!(_1bc84c22e_IsStr(_1bc84381e_Prim((*((*(_1bc8440c2_Enum((*(_149948_d))._field_Kind.ptr())))._field_Kind))._field_Kind.ptr()).ptr()))))) {
			_1bc812aeb_pushErr(_self_, _149958_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*(_149948_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1bc841586_Str(_149930_t.ptr()), &__jule_any_type4)}));
			return;;
		};
	} else if (((_1bc84381e_Prim((*(_149948_d))._field_Kind.ptr()) == nullptr) || (!(_1bc84c22e_IsStr(_1bc84381e_Prim((*(_149948_d))._field_Kind.ptr()).ptr()))))) {
		_1bc812aeb_pushErr(_self_, _149958_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*(_149948_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1bc841586_Str(_149930_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	_149930_t=(*(_1bc844875_Slc(_149930_t.ptr())))._field_Elem;
	jule::Ptr<_1bc848c97_Prim> _15159_prim = _1bc84381e_Prim(_149930_t.ptr());;
	if (((_15159_prim == nullptr) || ((!(_1bc84a68e_IsU8(_15159_prim.ptr()))) && (!(_1bc84a172_IsI32(_15159_prim.ptr())))))) {
		_1bc812aeb_pushErr(_self_, _149958_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*(_149948_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1bc841586_Str(_149930_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	if ((_15009_c != nullptr)) {
		{
			
			if (_1bc84a68e_IsU8(_15159_prim.ptr())) {
				_case_begin_1c1e2c3cb:;
				{
					jule::Str _152517_s = _230d5a50e_ReadStr(_15009_c.ptr());;
					jule::Ptr<_1ece1063b_SliceExprModel> _152621_model = jule::new_ptr<_1ece1063b_SliceExprModel>(_1ece1063b_SliceExprModel{._field_ElemKind=_149930_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _152517_s.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_152517_s);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c1e2dc6d:;
						if (it != expr_end) {
							jule::U8 *_153024_b = it;
							{
								jule::Ptr<_230d58386_Const> _153125_bc = static__230d58a90_NewU64(static_cast<jule::U64>(static_cast<jule::U64>((*(_153024_b)))));;
								(*(_153125_bc))._field_Kind=(*(_15159_prim))._field_Kind;
								{ jule::Slice<jule::Any> &__jule_push_dest = (*(_152621_model))._field_Elems; __jule_push_dest.push(jule::Any(_153125_bc, &__jule_any_type19)); };
							}
							_iter_next_1c1e2dc6d:;
							++it;
							goto _iter_begin_1c1e2dc6d;
						}
						_iter_end_1c1e2dc6d:;
					};
					(*(_149948_d))._field_Model=jule::Any(_152621_model, &__jule_any_type76);
					(*(_149948_d))._field_Decl=true;
				}
			}
			else if (_1bc84a172_IsI32(_15159_prim.ptr())) {
				_case_begin_1c1e2c453:;
				{
					jule::Slice<jule::I32> _153817_runes = static_cast<jule::Slice<jule::I32>>(_230d5a50e_ReadStr(_15009_c.ptr()));;
					jule::Ptr<_1ece1063b_SliceExprModel> _153921_model = jule::new_ptr<_1ece1063b_SliceExprModel>(_1ece1063b_SliceExprModel{._field_ElemKind=_149930_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _153817_runes.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_153817_runes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c1e320d4:;
						if (it != expr_end) {
							jule::I32 *_154324_r = it;
							{
								jule::Ptr<_230d58386_Const> _154425_rc = static__230d587c6_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_154324_r)))));;
								(*(_154425_rc))._field_Kind=(*(_15159_prim))._field_Kind;
								{ jule::Slice<jule::Any> &__jule_push_dest = (*(_153921_model))._field_Elems; __jule_push_dest.push(jule::Any(_154425_rc, &__jule_any_type19)); };
							}
							_iter_next_1c1e320d4:;
							++it;
							goto _iter_begin_1c1e320d4;
						}
						_iter_end_1c1e320d4:;
					};
					(*(_149948_d))._field_Model=jule::Any(_153921_model, &__jule_any_type76);
					(*(_149948_d))._field_Decl=true;
				}
			}
			_match_end_1c1e2c2bb:;
		};
	};
}



inline void _1bc822435_castStr(_1bc81259b_Eval* _self_, jule::Ptr<_1bc8108a7_Data> _155430_d, jule::Ptr<_1bc583a9d_Token> _155440_errorToken) {
	if ((_1bc8440c2_Enum((*(_155430_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1bc71624c_Enum> _155617_e = _1bc8440c2_Enum((*(_155430_d))._field_Kind.ptr());;
		if (((_1bc84381e_Prim((*((*(_155617_e))._field_Kind))._field_Kind.ptr()) != nullptr) && _1bc84c22e_IsStr(_1bc84381e_Prim((*((*(_155617_e))._field_Kind))._field_Kind.ptr()).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_230d58386_Const> _15629_c = (*(_155430_d))._field_Constant;;
	(*(_155430_d))._field_Constant=nullptr;
	(*(_155430_d))._field_untyped=false;
	if ((_1bc84381e_Prim((*(_155430_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1bc848c97_Prim> _156613_prim = _1bc84381e_Prim((*(_155430_d))._field_Kind.ptr());;
		if (((!(_1bc84a68e_IsU8(_156613_prim.ptr()))) && (!(_1bc84a172_IsI32(_156613_prim.ptr()))))) {
			_1bc812aeb_pushErr(_self_, _155440_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1bc841586_Str((*(_155430_d))._field_Kind.ptr()), &__jule_any_type4)}));
			return;;
		};
		if ((_15629_c != nullptr)) {
			{
				
				if (_1bc84a68e_IsU8(_156613_prim.ptr())) {
					_case_begin_1c1e3998d:;
					{
						(*(_155430_d))._field_Constant=static__230d59123_NewStr(jule::Str::from_byte(static_cast<jule::U8>(_230d5acb2_AsU64(_15629_c.ptr()))));
						(*(_155430_d))._field_Model=jule::Any((*(_155430_d))._field_Constant, &__jule_any_type19);
						(*(_155430_d))._field_Decl=true;
					}
				}
				else if (_1bc84a172_IsI32(_156613_prim.ptr())) {
					_case_begin_1c1e39a15:;
					{
						(*(_155430_d))._field_Constant=static__230d59123_NewStr(jule::Str::from_rune(static_cast<jule::I32>(_230d5aa2b_AsI64(_15629_c.ptr()))));
						(*(_155430_d))._field_Model=jule::Any((*(_155430_d))._field_Constant, &__jule_any_type19);
						(*(_155430_d))._field_Decl=true;
					}
				}
				_match_end_1c1e3988e:;
			};
		};
		return;;
	};
	jule::Ptr<_1bc84d296_Slc> _158713_s = _1bc844875_Slc((*(_155430_d))._field_Kind.ptr());;
	if ((_158713_s == nullptr)) {
		_1bc812aeb_pushErr(_self_, _155440_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1bc841586_Str((*(_155430_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1bc8411bd_TypeKind> _159313_t = (*(_158713_s))._field_Elem;;
	jule::Ptr<_1bc848c97_Prim> _15949_prim = _1bc84381e_Prim(_159313_t.ptr());;
	if (((_15949_prim == nullptr) || ((!(_1bc84a68e_IsU8(_15949_prim.ptr()))) && (!(_1bc84a172_IsI32(_15949_prim.ptr())))))) {
		_1bc812aeb_pushErr(_self_, _155440_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1bc841586_Str((*(_155430_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return;;
	};
}



inline void _1bc822853_castInt(_1bc81259b_Eval* _self_, jule::Ptr<_1bc8411bd_TypeKind> _160130_t, jule::Ptr<_1bc8108a7_Data> _160148_d, jule::Ptr<_1bc583a9d_Token> _160158_errorToken) {
	if (_1bc81127b_IsConst(_160148_d.ptr())) {
		jule::Ptr<_1bc848c97_Prim> _160313_prim = _1bc84381e_Prim(_160130_t.ptr());;
		{
			
			if (_230d571cb_IsSigInt((*(_160313_prim))._field_Kind)) {
				_case_begin_1c1e42b50:;
				{
					_230d5b301_SetI64((*(_160148_d))._field_Constant.ptr(), static_cast<jule::I64>(_230d5aa2b_AsI64((*(_160148_d))._field_Constant.ptr())));
				}
			}
			else if (_230d574d9_IsUnsigInt((*(_160313_prim))._field_Kind)) {
				_case_begin_1c1e42bc7:;
				{
					_230d5b5a9_SetU64((*(_160148_d))._field_Constant.ptr(), static_cast<jule::U64>(_230d5acb2_AsU64((*(_160148_d))._field_Constant.ptr())));
				}
			}
			_match_end_1c1e42a95:;
		};
	} else {
		(*(_160148_d))._field_Constant=nullptr;
		(*(_160148_d))._field_untyped=false;
	};
	if ((_1bc8440c2_Enum((*(_160148_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1bc71624c_Enum> _161613_e = _1bc8440c2_Enum((*(_160148_d))._field_Kind.ptr());;
		if (_230d57dad_IsNum(_1bc841586_Str((*((*(_161613_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1bc843aa5_Sptr((*(_160148_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1bc848c97_Prim> _162313_prim = _1bc84381e_Prim(_160130_t.ptr());;
		if ((!(_1bc84bc12_IsUintptr(_162313_prim.ptr())))) {
			_1bc812aeb_pushErr(_self_, _160158_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*(_160148_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1bc841586_Str(_160130_t.ptr()), &__jule_any_type4)}));
		};
		return;;
	};
	if ((_1bc843d3b_Ptr((*(_160148_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1bc848c97_Prim> _163013_prim = _1bc84381e_Prim(_160130_t.ptr());;
		if (_1bc84bc12_IsUintptr(_163013_prim.ptr())) {
		} else if ((!(_1bc8135e1_isUnsafe(_self_)))) {
			_1bc812aeb_pushErr(_self_, _160158_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1bc848c97_Prim> _16399_prim = _1bc84381e_Prim((*(_160148_d))._field_Kind.ptr());;
	if (((_16399_prim != nullptr) && _230d57dad_IsNum(_1bc8490d8_Str(_16399_prim.ptr())))) {
		return;;
	};
	_1bc812aeb_pushErr(_self_, _160158_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*(_160148_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1bc841586_Str(_160130_t.ptr()), &__jule_any_type4)}));
}



inline void _1bc822c71_castNum(_1bc81259b_Eval* _self_, jule::Ptr<_1bc8411bd_TypeKind> _164730_t, jule::Ptr<_1bc8108a7_Data> _164748_d, jule::Ptr<_1bc583a9d_Token> _164758_errorToken) {
	if (_1bc81127b_IsConst(_164748_d.ptr())) {
		jule::Ptr<_1bc848c97_Prim> _164913_prim = _1bc84381e_Prim(_164730_t.ptr());;
		{
			
			if (_230d57ae4_IsFloat((*(_164913_prim))._field_Kind)) {
				_case_begin_1c1e4dd6a:;
				{
					_230d5bdc3_SetF64((*(_164748_d))._field_Constant.ptr(), static_cast<jule::F64>(_230d5b048_AsF64((*(_164748_d))._field_Constant.ptr())));
				}
			}
			else if (_230d571cb_IsSigInt((*(_164913_prim))._field_Kind)) {
				_case_begin_1c1e4dde2:;
				{
					_230d5b301_SetI64((*(_164748_d))._field_Constant.ptr(), static_cast<jule::I64>(_230d5aa2b_AsI64((*(_164748_d))._field_Constant.ptr())));
				}
			}
			else if (_230d574d9_IsUnsigInt((*(_164913_prim))._field_Kind)) {
				_case_begin_1c1e4de69:;
				{
					_230d5b5a9_SetU64((*(_164748_d))._field_Constant.ptr(), static_cast<jule::U64>(_230d5acb2_AsU64((*(_164748_d))._field_Constant.ptr())));
				}
			}
			_match_end_1c1e4dc9e:;
		};
	} else {
		(*(_164748_d))._field_Constant=nullptr;
		(*(_164748_d))._field_untyped=false;
	};
	if ((_1bc8440c2_Enum((*(_164748_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1bc71624c_Enum> _166413_e = _1bc8440c2_Enum((*(_164748_d))._field_Kind.ptr());;
		if (_230d57dad_IsNum(_1bc841586_Str((*((*(_166413_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1bc848c97_Prim> _16709_prim = _1bc84381e_Prim((*(_164748_d))._field_Kind.ptr());;
	if (((_16709_prim != nullptr) && _230d57dad_IsNum(_1bc8490d8_Str(_16709_prim.ptr())))) {
		return;;
	};
	_1bc812aeb_pushErr(_self_, _164758_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*(_164748_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1bc841586_Str(_164730_t.ptr()), &__jule_any_type4)}));
}



inline void _1bc82318e_castPrim(_1bc81259b_Eval* _self_, jule::Ptr<_1bc8411bd_TypeKind> _167831_t, jule::Ptr<_1bc8108a7_Data> _167849_d, jule::Ptr<_1bc583a9d_Token> _167859_errorToken) {
	jule::Ptr<_1bc848c97_Prim> _16799_prim = _1bc84381e_Prim(_167831_t.ptr());;
	{
		
		if (_1bc84c4b5_IsAny(_16799_prim.ptr())) {
			_case_begin_1c1e573c3:;
			{
				(*(_167849_d))._field_Constant=nullptr;
				(*(_167849_d))._field_untyped=false;
			}
		}
		else if (_1bc84c22e_IsStr(_16799_prim.ptr())) {
			_case_begin_1c1e57093:;
			{
				_1bc822435_castStr(_self_, _167849_d, _167859_errorToken);
			}
		}
		else if (_230d577a3_IsInt(_1bc8490d8_Str(_16799_prim.ptr()))) {
			_case_begin_1c1e57109:;
			{
				_1bc822853_castInt(_self_, _167831_t, _167849_d, _167859_errorToken);
			}
		}
		else if (_230d57dad_IsNum(_1bc8490d8_Str(_16799_prim.ptr()))) {
			_case_begin_1c1e57170:;
			{
				_1bc822c71_castNum(_self_, _167831_t, _167849_d, _167859_errorToken);
			}
		}
		else {
			_case_begin_1c1e5702c:;
			{
				_1bc812aeb_pushErr(_self_, _167859_errorToken, jule::Str::lit("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str(_167831_t.ptr()), &__jule_any_type4)}));
			}
		}
		_match_end_1c1e56eb6:;
	};
}



inline void _1bc823502_castConstant(_1bc81259b_Eval* _self_, jule::Ptr<_1bc8411bd_TypeKind>* _169636_t, jule::Ptr<_1bc8108a7_Data>* _169655_d) {
	if ((((*(_169655_d)) == nullptr) || (!(_1bc81127b_IsConst((*(_169655_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1bc848c97_Prim> _17009_prim = _1bc84381e_Prim((*(_169636_t)).ptr());;
	_1bc83becc_castConstByType(&((*(_17009_prim))._field_Kind), _169655_d);
	(*((*(_169655_d))))._field_Model=jule::Any((*((*(_169655_d))))._field_Constant, &__jule_any_type19);
}



inline void _1bc823920_castTypeEnum(_1bc81259b_Eval* _self_, jule::Ptr<_1bc8411bd_TypeKind>* _170536_t, jule::Ptr<_1bc8108a7_Data>* _170555_d, jule::Ptr<_1bc583a9d_Token>* _170570_errorToken) {
	jule::I64 _17069_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1bc79032b_checkTypeCompatibility((*(_self_))._field_s, &((*((*(_170555_d))))._field_Kind), _170536_t, _170570_errorToken)))) {
		(*((*(_self_))._field_s))._field_errors=(*((*(_self_))._field_s))._field_errors.slice(0LL, _17069_n);
		_1bc812aeb_pushErr(_self_, (*(_170570_errorToken)), jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*((*(_170555_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1bc841586_Str((*(_170536_t)).ptr()), &__jule_any_type4)}));
	};
	(*((*(_170555_d))))._field_Constant=nullptr;
	(*((*(_170555_d))))._field_untyped=false;
}



inline void _1bc823d3d_castTypeEnumT(_1bc81259b_Eval* _self_, jule::Ptr<_1bc8411bd_TypeKind>* _171537_t, jule::Ptr<_1bc8108a7_Data>* _171556_d, jule::Ptr<_1bc583a9d_Token>* _171571_errorToken) {
	jule::I64 _17169_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1bc79032b_checkTypeCompatibility((*(_self_))._field_s, _171537_t, &((*((*(_171556_d))))._field_Kind), _171571_errorToken)))) {
		(*((*(_self_))._field_s))._field_errors=(*((*(_self_))._field_s))._field_errors.slice(0LL, _17169_n);
		_1bc812aeb_pushErr(_self_, (*(_171571_errorToken)), jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*((*(_171556_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1bc841586_Str((*(_171537_t)).ptr()), &__jule_any_type4)}));
	};
	(*((*(_171556_d))))._field_Constant=nullptr;
	(*((*(_171556_d))))._field_untyped=false;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc8242e4_evalCastByTypeNData(_1bc81259b_Eval* _self_, jule::Ptr<_1bc8411bd_TypeKind> _172542_t, jule::Ptr<_1bc8108a7_Data> _172560_d, jule::Ptr<_1bc583a9d_Token> _172574_errorToken) {
	if (((_172560_d != nullptr) && (*(_172560_d))._field_Decl)) {
		_1bc812aeb_pushErr(_self_, _172574_errorToken, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_1bc810c5e_IsNil(_172560_d.ptr())) {
			_case_begin_1c1e64c71:;
			{
				if ((!(_1bc84306b_NilCompatible(_172542_t.ptr())))) {
					_1bc812aeb_pushErr(_self_, _172574_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("<nil>", 5), &__jule_any_type4),jule::Any(_1bc841586_Str(_172542_t.ptr()), &__jule_any_type4)}));
				};
				(*(_172560_d))._field_Constant=nullptr;
				(*(_172560_d))._field_untyped=false;
			}
		}
		else if (((_1bc84381e_Prim((*(_172560_d))._field_Kind.ptr()) != nullptr) && _1bc84c4b5_IsAny(_1bc84381e_Prim((*(_172560_d))._field_Kind.ptr()).ptr()))) {
			_case_begin_1c1e64a2e:;
			{
				if ((_1bc8440c2_Enum(_172542_t.ptr()) != nullptr)) {
					_1bc812aeb_pushErr(_self_, _172574_errorToken, jule::Str::lit("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
					_1bc812e5e_pushSuggestion(_self_, jule::Str::lit("try cast to type of enum fields instead of enum", 47), jule::Slice<jule::Any>());
				} else if ((_1bc844358_TypeEnum(_172542_t.ptr()) != nullptr)) {
					_1bc812aeb_pushErr(_self_, _172574_errorToken, jule::Str::lit("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
				};
				(*(_172560_d))._field_Constant=nullptr;
				(*(_172560_d))._field_untyped=false;
			}
		}
		else if ((_1bc844358_TypeEnum((*(_172560_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c1e64a95:;
			{
				_1bc823920_castTypeEnum(_self_, &(_172542_t), &(_172560_d), &(_172574_errorToken));
			}
		}
		else if ((_1bc844358_TypeEnum(_172542_t.ptr()) != nullptr)) {
			_case_begin_1c1e65733:;
			{
				_1bc823d3d_castTypeEnumT(_self_, &(_172542_t), &(_172560_d), &(_172574_errorToken));
			}
		}
		else if ((_1bc843d3b_Ptr(_172542_t.ptr()) != nullptr)) {
			_case_begin_1c1e65799:;
			{
				_1bc821368_castPtr(_self_, _172542_t, _172560_d, _172574_errorToken);
			}
		}
		else if ((_1bc843aa5_Sptr(_172542_t.ptr()) != nullptr)) {
			_case_begin_1c1e65810:;
			{
				_1bc821ba4_castRef(_self_, _172542_t, _172560_d, _172574_errorToken);
			}
		}
		else if ((_1bc844875_Slc(_172542_t.ptr()) != nullptr)) {
			_case_begin_1c1e65876:;
			{
				_1bc8220c2_castSlc(_self_, _172542_t, _172560_d, _172574_errorToken);
			}
		}
		else if ((_1bc844d92_Struct(_172542_t.ptr()) != nullptr)) {
			_case_begin_1c1e658dc:;
			{
				_1bc821786_castStruct(_self_, _172542_t, _172560_d, _172574_errorToken);
			}
		}
		else if ((_1bc84381e_Prim(_172542_t.ptr()) != nullptr)) {
			_case_begin_1c1e65953:;
			{
				_1bc82318e_castPrim(_self_, _172542_t, _172560_d, _172574_errorToken);
				_1bc823502_castConstant(_self_, &(_172542_t), &(_172560_d));
			}
		}
		else {
			_case_begin_1c1e6490d:;
			{
				_1bc812aeb_pushErr(_self_, _172574_errorToken, jule::Str::lit("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str(_172542_t.ptr()), &__jule_any_type4)}));
				_172560_d=nullptr;
			}
		}
		_match_end_1c1e648a8:;
	};
	if ((_172560_d == nullptr)) {
		return nullptr;;
	};
	(*(_172560_d))._field_Mutable=((*(_172560_d))._field_Mutable || (!(_1bc842a4e_Mutable((*(_172560_d))._field_Kind.ptr()))));
	if (((!((*(_172560_d))._field_Decl)) && ((_1bc8440c2_Enum((*(_172560_d))._field_Kind.ptr()) == nullptr) || (!(_1bc8418c7_Equal((*((*(_1bc8440c2_Enum((*(_172560_d))._field_Kind.ptr())))._field_Kind))._field_Kind, _172542_t)))))) {
		_1bc83b42c_applyCastKind(&(_172560_d), &(_172542_t));
		(*((*(_172560_d))._field_Model.cast_ptr<_1ece0e8b0_CastingExprModel>(&__jule_any_type92)))._field_Token=_172574_errorToken;
	} else {
		(*(_172560_d))._field_Kind=_172542_t;
	};
	(*(_172560_d))._field_Decl=false;
	(*(_172560_d))._field_Lvalue=false;
	(*(_172560_d))._field_untyped=false;
	if (_1bc81127b_IsConst(_172560_d.ptr())) {
		(*((*(_172560_d))._field_Constant))._field_Kind=(*(_1bc84381e_Prim(_172542_t.ptr())))._field_Kind;
	};
	return _172560_d;;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc82479a_evalCastT(jule::Ptr<_1bc81259b_Eval> _self_, jule::Ptr<_1bc8411bd_TypeKind>* _179834_t, jule::Ptr<_1bc599971_Expr>* _179853_e, jule::Ptr<_1bc583a9d_Token>* _179868_et) {
	jule::Ptr<_1bc8411bd_TypeKind> _179913_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_179913_prefix;
	});;
	if ((_1bc844875_Slc((*(_179834_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_179853_e))))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type93) {
				_case_begin_1c1e75886:;
				{
					(*(_self_))._field_prefix=(*(_179834_t));
				}
			}
			_match_end_1c1e75820:;
		};
	};
	jule::Ptr<_1bc8108a7_Data> _180813_d = _1bc83080b_evalExpr(_self_, (*(_179853_e)));;
	if (((_180813_d == nullptr) || ((*(_self_))._field_prefix != nullptr))) {
		return _180813_d;;
	};
	return _1bc8242e4_evalCastByTypeNData(_self_.ptr(), (*(_179834_t)), _180813_d, (*(_179868_et)));;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc824adb_evalCast(jule::Ptr<_1bc81259b_Eval> _self_, jule::Ptr<_1bc59c2d1_CastExpr> _181532_c) {
	jule::Ptr<_1bc848390_TypeSymbol> _181613_t = _1ece23a39_buildType((*(_181532_c))._field_Kind);;
	jule::Bool _18179_ok = _1bc78ca32_checkType((*(_self_))._field_s, &(_181613_t), (*(_self_))._field_lookup);;
	if ((!(_18179_ok))) {
		return nullptr;;
	};
	return _1bc82479a_evalCastT(_self_, &((*(_181613_t))._field_Kind), &((*(_181532_c))._field_Expr), &((*((*(_181532_c))._field_Kind))._field_Token));;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc824e2c_evalNsSelection(_1bc81259b_Eval* _self_, jule::Ptr<_1bc5a254a_NsSelectionExpr> _182434_s) {
	jule::Str _18259_path = _1bc85cc45_buildLinkPathByTokens(&((*(_182434_s))._field_Ns));;
	jule::Ptr<_1bc763e04_ImportInfo> _182613_imp = _1bc860c04_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1bc85dedd_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1bc763e04_ImportInfo>)>([=](jule::Ptr<_1bc763e04_ImportInfo> _182649_imp) mutable -> jule::Bool {
		if ((((*(_182434_s))._field_Ns.len() == 1LL) && ((*(_182649_imp))._field_Alias == _18259_path))) {
			return true;;
		};
		return (((*(_182649_imp))._field_LinkPath == _18259_path) && _1bc766a1c_isAccessibleViaSelection(_182649_imp.ptr()));;
	}));;
	if ((_182613_imp == nullptr)) {
		_1bc812aeb_pushErr(_self_, (*(_182434_s))._field_Ns[0LL], jule::Str::lit("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_18259_path, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Trait<_1bc860c04_Lookup> _183813_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1bc860c04_Lookup>(_182613_imp, 1);
	;
	_1bc81335a_disallowBuiltin(_self_);
	jule::Any _184313_def = _1bc815868_getDef(_self_, &((*((*(_182434_s))._field_Ident))._field_Kind), false);;
	_1bc81315c_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_183813_lookup;
	jule::Ptr<_1bc8108a7_Data> _184613_d = _1bc819a26_evalDef(_self_, &(_184313_def), (*(_182434_s))._field_Ident);;
	return _184613_d;;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc8253d3_evalStructLitExplicit(jule::Ptr<_1bc81259b_Eval> _self_, jule::Ptr<_1bc5be0b1_StructIns> _185045_s, jule::Slice<jule::Ptr<_1bc599971_Expr>> _185113_exprs, jule::Ptr<_1bc583a9d_Token> _185133_errorToken) {
	jule::Bool _18529_ok = _1bc7883e0_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I64>((*((*(_185045_s))._field_Decl))._field_Generics.len()), static_cast<jule::I64>((*(_185045_s))._field_Generics.len()), _185133_errorToken);;
	if ((!(_18529_ok))) {
		return nullptr;;
	};
	if ((((*(_self_))._field_field != nullptr) && ((*((*((*(_self_))._field_field))._field_Decl))._field_Owner == (*(_185045_s))._field_Decl))) {
		_1bc812aeb_pushErr(_self_.ptr(), _185133_errorToken, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_185045_s))._field_Decl))._field_Ident, &__jule_any_type4)}));
	};
	_1c1e18ac1_pushReference(_self_.ptr(), &(_185045_s));
	_1bc817c22_checkDeprecated(_self_.ptr(), &((*((*(_185045_s))._field_Decl))._field_Directives), _185133_errorToken);
	_1bc803bec_structLitChecker _186513_slc = _1bc803bec_structLitChecker{._field_e=_self_, ._field_errorToken=_185133_errorToken, ._field_s=_185045_s, };;
	_1bc80543a_check(&_186513_slc, &(_185113_exprs));
	jule::Ptr<_1bc8108a7_Data> _187213_d = jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(_185045_s, 0)}), ._field_Mutable=(!((*(_self_))._field_immutable)), ._field_Model=jule::Any(jule::new_ptr<_1ece0e030_StructLitExprModel>(_1ece0e030_StructLitExprModel{._field_Strct=_185045_s, ._field_Args=_186513_slc._field_args}), &__jule_any_type94), });;
	if ((*((*(_185045_s))._field_Decl))._field_Binded) {
		(*((*(_187213_d))._field_Kind))._field_BindIdent=(*((*(_185045_s))._field_Decl))._field_Ident;
	};
	return _187213_d;;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc825724_evalStructLit(jule::Ptr<_1bc81259b_Eval> _self_, jule::Ptr<_1bc5a4827_StructLit> _188837_lit) {
	jule::Ptr<_1bc848390_TypeSymbol> _188913_t = _1ece23a39_buildType((*(_188837_lit))._field_Kind);;
	jule::Bool _18909_ok = _1bc78ca32_checkType((*(_self_))._field_s, &(_188913_t), (*(_self_))._field_lookup);;
	if ((!(_18909_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1bc5be0b1_StructIns> _189513_s = _1bc844d92_Struct((*(_188913_t))._field_Kind.ptr());;
	if ((_189513_s == nullptr)) {
		if ((_1bc843aa5_Sptr((*(_188913_t))._field_Kind.ptr()) != nullptr)) {
			_189513_s=_1bc844d92_Struct((*(_1bc843aa5_Sptr((*(_188913_t))._field_Kind.ptr())))._field_Elem.ptr());
			if ((_189513_s != nullptr)) {
				goto _julec_label_1c1e8bd97;
			};
		};
		_1bc812aeb_pushErr(_self_.ptr(), (*((*(_188837_lit))._field_Kind))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1c1e8bd97:;
	jule::Ptr<_1bc8108a7_Data> _190813_d = _1bc8253d3_evalStructLitExplicit(_self_, _189513_s, (*(_188837_lit))._field_Exprs, (*((*(_188837_lit))._field_Kind))._field_Token);;
	if ((_1bc843aa5_Sptr((*(_188913_t))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ece0e030_StructLitExprModel> _191017_model = (*(_190813_d))._field_Model.cast_ptr<_1ece0e030_StructLitExprModel>(&__jule_any_type94);;
		_1bc839b45_makeStructLitAlloc(&(_190813_d), &(_191017_model));
	};
	return _190813_d;;
}



inline _1bc85307b_typeChecker _1bc8259aa_typeChecker(_1bc81259b_Eval* _self_) {
	return _1bc78b7cd_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc825ceb_evalType(_1bc81259b_Eval* _self_, jule::Ptr<_1bc59563c_TypeDecl> _192031_t) {
	jule::Ptr<_1bc848390_TypeSymbol> _192113_tk = _1ece23a39_buildType(_192031_t);;
	jule::Bool _19229_ok = _1bc78ca32_checkType((*(_self_))._field_s, &(_192113_tk), (*(_self_))._field_lookup);;
	if ((!(_19229_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=(*(_192113_tk))._field_Kind, ._field_Model=jule::Any((*(_192113_tk))._field_Kind, &__jule_any_type83), ._field_Decl=true, });;
}



inline void _1bc82615e_callTypeFn(jule::Ptr<_1bc81259b_Eval> _self_, jule::Ptr<_1bc5a3507_FnCallExpr>* _193335_fc, jule::Ptr<_1bc8108a7_Data>* _193357_d) {
	if (((*((*(_193335_fc))))._field_Args.len() < 1LL)) {
		_1bc812aeb_pushErr(_self_.ptr(), (*((*(_193335_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("v", 1), &__jule_any_type4)}));
	} else if (((*((*(_193335_fc))))._field_Args.len() > 1LL)) {
		_1bc812aeb_pushErr(_self_.ptr(), (*((*((*(_193335_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*((*(_193357_d))))._field_Kind.ptr()), &__jule_any_type4)}));
	} else if ((*((*(_193335_fc))))._field_IsCo) {
		_1bc812aeb_pushErr(_self_.ptr(), (*((*(_193335_fc))))._field_Token, jule::Str::lit("concurrent calls are not allowed for type-cast calls", 52), jule::Slice<jule::Any>());
		(*(_193357_d))=nullptr;
		return;;
	} else if (((*((*(_193335_fc))))._field_Exception != nullptr)) {
		_1bc812aeb_pushErr(_self_.ptr(), (*((*(_193335_fc))))._field_Token, jule::Str::lit("exceptionals are not supported for type-cast call", 49), jule::Slice<jule::Any>());
		(*(_193357_d))=nullptr;
		return;;
	};
	if (((*((*(_193335_fc))))._field_Args.len() > 0LL)) {
		jule::Ptr<_1bc599971_Expr> _194917_arg = (*((*(_193335_fc))))._field_Args[0LL];;
		(*(_193357_d))=_1bc82479a_evalCastT(_self_, &((*((*(_193357_d))))._field_Kind), &(_194917_arg), &((*(_194917_arg))._field_Token));
		return;;
	};
	if (((*(_193357_d)) != nullptr)) {
		(*((*(_193357_d))))._field_Decl=false;
	};
}



inline void _1bc8264c2_callBuiltinFn(jule::Ptr<_1bc81259b_Eval> _self_, jule::Ptr<_1bc5a3507_FnCallExpr>* _195938_fc, jule::Ptr<_1bc8108a7_Data>* _195960_d) {
	if ((!(_1bc5a387b_Unhandled((*(_195938_fc)).ptr())))) {
		_1bc812aeb_pushErr(_self_.ptr(), (*((*(_195938_fc))))._field_Token, jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	(*(_195960_d))=(*(_1bc844b0b_Fn((*((*(_195960_d))))._field_Kind.ptr())))._field_caller(&(_self_), _195938_fc, _195960_d);
	if (((*(_195960_d)) == nullptr)) {
		return;;
	};
	(*((*(_195960_d))))._field_Mutable=true;
}



inline void _1bc826835_checkFnOfConcurrentCall(_1bc81259b_Eval* _self_, jule::Ptr<_1ece1de96_FnIns>* _197143_f, jule::Ptr<_1bc583a9d_Token> _197154_errorToken) {
	if (_1bc8135e1_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*((*(_197143_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1e9b9cd:;
		if (it != expr_end) {
			jule::Ptr<_1ece1ceea_ParamIns> *_197516_p = it;
			{
				if (_1ece19bd9_IsSelf((*((*(_197516_p))))._field_Decl.ptr())) {
					if ((!(_1ece19e70_IsRef((*((*(_197516_p))))._field_Decl.ptr())))) {
						_1bc812aeb_pushErr(_self_, _197154_errorToken, jule::Str::lit("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97), jule::Slice<jule::Any>());
						_1bc812e5e_pushSuggestion(_self_, jule::Str::lit("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99), jule::Slice<jule::Any>());
					};
				};
				if ((*((*((*(_197516_p))))._field_Decl))._field_Reference) {
					_1bc812aeb_pushErr(_self_, _197154_errorToken, jule::Str::lit("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96), jule::Slice<jule::Any>());
					_1bc812e5e_pushSuggestion(_self_, jule::Str::lit("use Unsafe Jule with unsafe {} scope to make concurrent call", 60), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1c1e9b9cd:;
			++it;
			goto _iter_begin_1c1e9b9cd;
		}
		_iter_end_1c1e9b9cd:;
	};
}



inline void _1bc826c53_processExceptionalHandler(_1bc81259b_Eval* _self_, jule::Ptr<_1ece1de96_FnIns>* _199049_f, jule::Ptr<_1bc5a3507_FnCallExpr>* _199065_fc, jule::Ptr<_1bc8108a7_Data>* _199087_d) {
	jule::Bool _19919_resultNeeded = ((!(_1ece1b515_IsVoid((*((*(_199049_f))))._field_Decl.ptr()))) && ((*(_self_))._field_arg || (!((*(_self_))._field_ignored))));;
	jule::Ptr<_1bc749923_scopeChecker> _199217_csc = nullptr;;
	jule::Ptr<_1bc74261e_Scope> _199317_ch = nullptr;;
	jule::Ptr<_1ece10262_FnCallExprModel> _199513_model = (*((*(_199087_d))))._field_Model.cast_ptr<_1ece10262_FnCallExprModel>(&__jule_any_type34);;
	jule::Ptr<_1bc749923_scopeChecker> _199913_sc = (*(_self_))._field_lookup.cast_ptr<_1bc749923_scopeChecker>(0);;
	_199217_csc=_1bc75b3b3_newChildChecker(_199913_sc);
	if (_19919_resultNeeded) {
		(*(_199217_csc))._field_result=(*(_199049_f));
	};
	_199317_ch=_1bc74e719_getChild(_199913_sc.ptr());
	(*((*((*(_199065_fc))))._field_Exception))._field_Parent=(*(_199913_sc))._field_tree;
	{ jule::Slice<jule::Ptr<_1bc7a750d_Var>> &__jule_push_dest = (*((*(_199217_csc))._field_table))._field_Vars; __jule_push_dest.push(_1bc839eb9_buildErrorVar(&(_199317_ch), _199065_fc)); };
	_1bc74eb37_checkChildSsc(_199913_sc, &((*((*(_199065_fc))))._field_Exception), &(_199317_ch), &(_199217_csc));
	(*(_199513_model))._field_Assigned=_19919_resultNeeded;
	(*(_199513_model))._field_Except=_199317_ch;
	if ((_19919_resultNeeded && ((*(_199217_csc))._field_result != nullptr))) {
		_1bc812aeb_pushErr(_self_, (*((*(_199065_fc))))._field_Token, jule::Str::lit("exceptional returns an expression, therefore else block should return expression", 80), jule::Slice<jule::Any>());
	};
}



inline void _1bc8270b6_callFn(jule::Ptr<_1bc81259b_Eval> _self_, jule::Ptr<_1bc5a3507_FnCallExpr>* _201731_fc, jule::Ptr<_1bc8108a7_Data>* _201753_d) {
	jule::Ptr<_1ece1de96_FnIns> _201813_f = _1bc844b0b_Fn((*((*(_201753_d))))._field_Kind.ptr());;
	if (_1ece2042b_IsBuiltin(_201813_f.ptr())) {
		_1bc8264c2_callBuiltinFn(_self_, _201731_fc, _201753_d);
		return;;
	};
	if ((_1bc813877_isGlobal(_self_.ptr()) && (*((*(_201813_f))._field_Decl))._field_Exceptional)) {
		_1bc812aeb_pushErr(_self_.ptr(), (*((*(_201731_fc))))._field_Token, jule::Str::lit("exceptionals are not allowed in global scope", 44), jule::Slice<jule::Any>());
		_1bc812e5e_pushSuggestion(_self_.ptr(), jule::Str::lit("wrap exceptional with a non-exceptional function", 48), jule::Slice<jule::Any>());
		(*(_201753_d))=nullptr;
		return;;
	};
	if (((!(_1ece1b79b_IsMethod((*(_201813_f))._field_Decl.ptr()))) && _1bc85bcdd_hasDirective(&((*((*(_201813_f))._field_Decl))._field_Directives), jule::Str::lit("test", 4)))) {
		_1bc812aeb_pushErr(_self_.ptr(), (*((*(_201731_fc))))._field_Token, jule::Str::lit("you cannot call test functions", 30), jule::Slice<jule::Any>());
		(*(_201753_d))=nullptr;
		return;;
	};
	if (((((!((*((*(_201753_d))))._field_Mutable)) && _1ece1b79b_IsMethod((*(_201813_f))._field_Decl.ptr())) && (!((*((*(_201813_f))._field_Decl))._field_Statically))) && (*((*((*(_201813_f))._field_Decl))._field_Params[0LL]))._field_Mutable)) {
		if ((!((*(_self_))._field_immutable))) {
			_1bc812aeb_pushErr(_self_.ptr(), (*((*(_201731_fc))))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		} else {
			jule::Ptr<_1ece0e030_StructLitExprModel> _204417_lit = _1bc83d1ed_isLitBased(&((*((*(_201753_d))))._field_Model));;
			if ((_204417_lit == nullptr)) {
				_1bc812aeb_pushErr(_self_.ptr(), (*((*(_201731_fc))))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
			} else {
				_1bc803713_checkMutRiskOfStructLit(&((*(_self_))._field_s), &(_204417_lit));
			};
		};
	} else if (((!(_1bc8135e1_isUnsafe(_self_.ptr()))) && (*((*(_201813_f))._field_Decl))._field_Unsafety)) {
		_1bc812aeb_pushErr(_self_.ptr(), (*((*(_201731_fc))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	jule::Bool _205613_dynamicAnnotation = ((((*((*(_201813_f))._field_Decl))._field_Generics.len() > 0LL) && ((*(_201813_f))._field_Generics.len() == 0LL)) && ((*(_201813_f))._field_Params.len() > 0LL));;
	if (_205613_dynamicAnnotation) {
		(*(_201813_f))._field_Generics=jule::Slice<jule::Ptr<_1bc83e7d7_InsGeneric>>::alloc((*((*(_201813_f))._field_Decl))._field_Generics.len(), (*((*(_201813_f))._field_Decl))._field_Generics.len());
	} else if (((*(_201813_f))._field_Generics.len() != (*((*(_201813_f))._field_Decl))._field_Generics.len())) {
		_1bc7883e0_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I64>((*((*(_201813_f))._field_Decl))._field_Generics.len()), static_cast<jule::I64>((*(_201813_f))._field_Generics.len()), (*((*(_201731_fc))))._field_Token);
		(*(_201753_d))=nullptr;
		return;;
	};
	jule::Ptr<_1bc784276_Sema> _206513_old = (*(_self_))._field_s;;
	if (((*((*(_201813_f))._field_Decl))._field_Owner != nullptr)) {
		(*(_self_))._field_s=(*((*((*(_201813_f))._field_Decl))._field_Owner))._field_sema;
	};
	__JULE_DEFER({
		if ((_206513_old != (*(_self_))._field_s)) {
			((*(_206513_old))._field_errors).append((*((*(_self_))._field_s))._field_errors);;
			(*((*(_self_))._field_s))._field_errors=nullptr;
		};
		(*(_self_))._field_s=_206513_old;
	});;
	_1bc800cb5_fnCallArgChecker _207813_fcac = _1bc800cb5_fnCallArgChecker{._field_e=_self_, ._field_args=(*((*(_201731_fc))))._field_Args, ._field_errorToken=(*((*(_201731_fc))))._field_Token, ._field_dynamicAnnotation=_205613_dynamicAnnotation, };;
	if ((!(_205613_dynamicAnnotation))) {
		if ((!((*(_201813_f))._field_reloaded))) {
			jule::Bool _208717_ok = _1bc792d45_reloadFnInsTypes((*(_self_))._field_s, _201813_f);;
			(*(_201813_f))._field_reloaded=true;
			if ((!(_208717_ok))) {
				(*(_201753_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_1ece1de96_FnIns> _209417_existInstance = _1ece1cb10_appendInstance((*(_201813_f))._field_Decl.ptr(), &(_201813_f));;
		if ((_209417_existInstance != nullptr)) {
			_201813_f=_209417_existInstance;
		};
	} else if ((!(_1bc7915a2_buildFnNonGenericTypeKinds((*(_self_))._field_s, &(_201813_f), &(_207813_fcac._field_ignored))))) {
		(*(_201753_d))=nullptr;
		return;;
	};
	_207813_fcac._field_f=_201813_f;
	jule::Bool _210513_ok = false;;
	if (((*((*(_201813_f))._field_Decl))._field_Owner != nullptr)) {
		std::swap(_206513_old, (*(_self_))._field_s);
		_210513_ok=_1bc80336c_check(&_207813_fcac);
		std::swap(_206513_old, (*(_self_))._field_s);
	} else {
		_210513_ok=_1bc80336c_check(&_207813_fcac);
	};
	if (_205613_dynamicAnnotation) {
		if ((!(_210513_ok))) {
			(*(_201753_d))=nullptr;
			return;;
		};
		if ((!(_1bc81e465_checkGenericFn(_self_, &(_201813_f), &((*((*(_201731_fc))))._field_Token), &((*((*(_201753_d))))._field_Model))))) {
			(*(_201753_d))=nullptr;
			return;;
		};
	};
	jule::Any _212513_callModel = (*((*(_201753_d))))._field_Model;;
	if (_1ece1b515_IsVoid((*(_201813_f))._field_Decl.ptr())) {
		(*(_201753_d))=_1bc83b63b_buildVoidData();
	} else {
		(*((*(_201753_d))))._field_Kind=(*(_201813_f))._field_Result;
		(*((*(_201753_d))))._field_Lvalue=false;
	};
	jule::Ptr<_1ece10262_FnCallExprModel> _213413_model = jule::new_ptr<_1ece10262_FnCallExprModel>(_1ece10262_FnCallExprModel{._field_Token=(*((*(_201731_fc))))._field_Token, ._field_Func=_201813_f, ._field_IsCo=(*((*(_201731_fc))))._field_IsCo, ._field_Expr=_212513_callModel, ._field_Args=_207813_fcac._field_argModels, });;
	(*((*(_201753_d))))._field_Model=jule::Any(_213413_model, &__jule_any_type34);
	(*((*(_201753_d))))._field_Mutable=true;
	if ((*((*(_201813_f))._field_Decl))._field_Exceptional) {
		if ((*((*(_201731_fc))))._field_IsCo) {
			_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*((*(_201731_fc))))._field_Token, jule::Str::lit("concurrent calls not supports exceptionals", 42), jule::Slice<jule::Any>());
			_1bc787224_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("handle exceptional in a separate function or anonymous function", 63), jule::Slice<jule::Any>());
		};
		{
			
			if (_1bc5a387b_Unhandled((*(_201731_fc)).ptr())) {
				_case_begin_1c1ec7861:;
				{
					_1bc812aeb_pushErr(_self_.ptr(), (*((*(_201731_fc))))._field_Token, jule::Str::lit("exceptionals must be handled", 28), jule::Slice<jule::Any>());
					_1bc812e5e_pushSuggestion(_self_.ptr(), jule::Str::lit("use \"!\" operator after exceptional to handle it", 47), jule::Slice<jule::Any>());
				}
			}
			else if (_1bc5a3b12_Ignored((*(_201731_fc)).ptr())) {
				_case_begin_1c1ec7564:;
				{
					goto _match_end_1c1ec62cc;
				}
			}
			else {
				_case_begin_1c1ec6343:;
				{
					_1bc826c53_processExceptionalHandler(_self_.ptr(), &(_201813_f), _201731_fc, _201753_d);
				}
			}
			_match_end_1c1ec62cc:;
		};
	} else if ((!(_1bc5a387b_Unhandled((*(_201731_fc)).ptr())))) {
		_1bc812aeb_pushErr(_self_.ptr(), (*((*(_201731_fc))))._field_Token, jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	if ((*((*(_201731_fc))))._field_IsCo) {
		_1bc826835_checkFnOfConcurrentCall(_self_.ptr(), &((*(_213413_model))._field_Func), (*((*(_201731_fc))))._field_Token);
	};
}



inline jule::Ptr<_1bc8108a7_Data> _1bc827407_evalFnCall(jule::Ptr<_1bc81259b_Eval> _self_, jule::Ptr<_1bc5a3507_FnCallExpr> _216934_fc) {
	jule::Ptr<_1bc8411bd_TypeKind> _217013_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_217013_prefix;
	});;
	{
		auto &_match_expr{ (*((*(_216934_fc))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1c1ecbe3c:;
			{
				if ((*((*((*(_216934_fc))._field_Expr))._field_Token))._field_Kind.equal("error", 5)) {
					return _1bc2c90da_builtinCallerError(&(_self_), &(_216934_fc));;
				};
			}
		}
		_match_end_1c1ecbdc6:;
	};
	jule::Ptr<_1bc8108a7_Data> _218313_d = _1bc82e9e7_evalExprKind(_self_, (*((*(_216934_fc))._field_Expr))._field_Kind);;
	if ((_218313_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_218313_d))._field_Decl) {
		_1bc82615e_callTypeFn(_self_, &(_216934_fc), &(_218313_d));
		return _218313_d;;
	};
	if ((_1bc844b0b_Fn((*(_218313_d))._field_Kind.ptr()) == nullptr)) {
		_1bc812aeb_pushErr(_self_.ptr(), (*(_216934_fc))._field_Token, jule::Str::lit("attempting to call a non-function", 33), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1bc8270b6_callFn(_self_, &(_216934_fc), &(_218313_d));
	return _218313_d;;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc827803_evalEnumStatic(_1bc81259b_Eval* _self_, jule::Ptr<_1bc71624c_Enum> _220237_enm, jule::Ptr<_1bc583a9d_Token> _220249_ident) {
	jule::Ptr<_1bc7156d0_EnumItem> _220313_item = _1bc716d41_FindItem(_220237_enm.ptr(), (*(_220249_ident))._field_Kind);;
	if ((_220313_item == nullptr)) {
		_1bc812aeb_pushErr(_self_, _220249_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*(_220237_enm))._field_Ident, &__jule_any_type4),jule::Any((*(_220249_ident))._field_Kind, &__jule_any_type4)}));
	};
	return _1bc83ce34_evalEnumStatic(&(_220237_enm), &(_220313_item));;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc827bee_evalTypeEnumStatic(_1bc81259b_Eval* _self_, jule::Ptr<_1bc717957_TypeEnum> _221041_enm, jule::Ptr<_1bc583a9d_Token> _221057_ident) {
	jule::Ptr<_1bc717380_TypeEnumItem> _221113_item = _1bc718518_FindItem(_221041_enm.ptr(), (*(_221057_ident))._field_Kind);;
	if ((_221113_item == nullptr)) {
		_1bc812aeb_pushErr(_self_, _221057_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*(_221041_enm))._field_Ident, &__jule_any_type4),jule::Any((*(_221057_ident))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		
		if ((_1bc8440c2_Enum((*((*(_221113_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c1ed5143:;
			{
				return _1bc8161e8__evalEnum(_self_, _1bc8440c2_Enum((*((*(_221113_item))._field_Kind))._field_Kind.ptr()));;
			}
		}
		else if ((_1bc844358_TypeEnum((*((*(_221113_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c1ed52ca:;
			{
				return _1bc816935__evalTypeEnum(_self_, _1bc844358_TypeEnum((*((*(_221113_item))._field_Kind))._field_Kind.ptr()));;
			}
		}
		else if ((_1bc844d92_Struct((*((*(_221113_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c1ed4472:;
			{
				return _1bc817172__evalStruct(_self_, _1bc844d92_Struct((*((*(_221113_item))._field_Kind))._field_Kind.ptr()));;
			}
		}
		else {
			_case_begin_1c1ed35d6:;
			{
				jule::Ptr<_1bc8108a7_Data> _222417_d = jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=(*((*(_221113_item))._field_Kind))._field_Kind, ._field_Decl=true, });;
				(*(_222417_d))._field_Model=jule::Any((*(_222417_d))._field_Kind, &__jule_any_type83);
				return _222417_d;;
			}
		}
		_match_end_1c1ed377e:;
	};
}



inline jule::Ptr<_1bc8108a7_Data> _1bc8280ea_evalStructStatic(_1bc81259b_Eval* _self_, jule::Ptr<_1bc5be0b1_StructIns> _223339_s, jule::Ptr<_1bc583a9d_Token> _223354_ident) {
	jule::Ptr<_1bc8108a7_Data> _223413_d = jule::new_ptr<_1bc8108a7_Data>();;
	;
	jule::Ptr<_1ece1b092_Fn> _223813_method = _1bc5c0128_FindMethod(_223339_s.ptr(), (*(_223354_ident))._field_Kind, true);;
	if ((_223813_method != nullptr)) {
		if ((!(_1bc787620_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_223813_method))._field_Public, (*(_223813_method))._field_Token)))) {
			_1bc812aeb_pushErr(_self_, _223354_ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_223354_ident))._field_Kind, &__jule_any_type4)}));
			_1bc812e5e_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1ece1de96_FnIns> _224517_ins = _1ece1c802_instance(_223813_method);;
		(*(_224517_ins))._field_Owner=_223339_s;
		_1c1a766c9_pushReference(_self_, &(_224517_ins));
		(*(_223413_d))._field_Model=jule::Any(jule::new_ptr<_1ece132a9_StructStaticIdentExprModel>(_1ece132a9_StructStaticIdentExprModel{._field_Structure=_223339_s, ._field_Expr=(*(_223413_d))._field_Model, ._field_Method=_224517_ins}), &__jule_any_type95);
		(*(_223413_d))._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(_224517_ins, 1)});
		return _223413_d;;
	};
	jule::Ptr<_1bc7a750d_Var> _225913_sttc = _1bc5c07aa_FindStatic(_223339_s.ptr(), (*(_223354_ident))._field_Kind);;
	if ((_225913_sttc != nullptr)) {
		return _1bc81922e_evalVar(_self_, _225913_sttc, _223354_ident);;
	};
	_1bc812aeb_pushErr(_self_, _223354_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*(_223339_s))._field_Decl))._field_Ident, &__jule_any_type4),jule::Any((*(_223354_ident))._field_Kind, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc8285a1_evalTraitSubIdent(_1bc81259b_Eval* _self_, jule::Ptr<_1bc8108a7_Data> _226840_d, jule::Ptr<_1bc713a41_Trait> _226854_trt, jule::Ptr<_1bc583a9d_Token> _226871_ident) {
	jule::Ptr<_1ece1b092_Fn> _226913_f = _1bc7146e0_FindMethod(_226854_trt.ptr(), (*(_226871_ident))._field_Kind);;
	if ((_226913_f == nullptr)) {
		_1bc812aeb_pushErr(_self_, _226871_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*(_226854_trt))._field_Ident, &__jule_any_type4),jule::Any((*(_226871_ident))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(_1ece1c802_instance(_226913_f), 1)}), ._field_Model=jule::Any(jule::new_ptr<_1ece12462_TraitSubIdentExprModel>(_1ece12462_TraitSubIdentExprModel{._field_Token=_226871_ident, ._field_Expr=(*(_226840_d))._field_Model, ._field_Method=_226913_f, ._field_Trt=_226854_trt}), &__jule_any_type96), });;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc828b12_evalStructSubIdentField(_1bc81259b_Eval* _self_, jule::Ptr<_1bc8108a7_Data>* _228847_d, jule::Ptr<_1bc5be0b1_StructIns>* _228862_s, jule::Ptr<_1bc583a9d_Token>* _228882_tok, jule::Ptr<_1bc5bd511_FieldIns>* _2288100_f) {
	jule::Ptr<_1ece12d03_StructSubIdentExprModel> _228913_model = jule::new_ptr<_1ece12d03_StructSubIdentExprModel>(_1ece12d03_StructSubIdentExprModel{._field_Token=(*(_228882_tok)), ._field_Expr=jule::new_ptr<_1bc8108a7_Data>((*((*(_228847_d))))), ._field_Field=(*(_2288100_f)), ._field_Owner=(*(_228862_s))});;
	(*((*(_228847_d))))._field_Model=jule::Any(_228913_model, &__jule_any_type97);
	(*((*(_228847_d))))._field_Kind=(*((*(_2288100_f))))._field_Kind;
	(*((*(_228847_d))))._field_Lvalue=true;
	if (((*((*((*(_2288100_f))))._field_Decl))._field_Mutable && (!((*((*(_228847_d))))._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_1c1ee6594:;
				{
					jule::Ptr<_1bc749923_scopeChecker> _230317_scope = _1bc74ca14_getRoot((*(_self_))._field_lookup.cast_ptr<_1bc749923_scopeChecker>(0));;
					(*((*(_228847_d))))._field_Mutable=(((*(_230317_scope))._field_owner != nullptr) && ((*((*(_230317_scope))._field_owner))._field_Owner == (*(_228862_s))));
				}
			}
			_match_end_1c1ee653e:;
		};
	};
	return (*(_228847_d));;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc829173_evalStructSubIdent(_1bc81259b_Eval* _self_, jule::Ptr<_1bc8108a7_Data> _231141_d, jule::Ptr<_1bc5be0b1_StructIns> _231155_s, jule::Ptr<_1bc5a28e1_SubIdentExpr> _231174_si, jule::Bool _231193_ref) {
	jule::Ptr<_1bc5bd511_FieldIns> _231213_f = _1bc5c0469_FindField(_231155_s.ptr(), (*((*(_231174_si))._field_Ident))._field_Kind);;
	if ((_231213_f != nullptr)) {
		if ((!(_1bc787620_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_231213_f))._field_Decl))._field_Public, (*((*(_231213_f))._field_Decl))._field_Token)))) {
			_1bc812aeb_pushErr(_self_, (*(_231174_si))._field_Ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_231213_f))._field_Decl))._field_Ident, &__jule_any_type4)}));
			_1bc812e5e_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		return _1bc828b12_evalStructSubIdentField(_self_, &(_231141_d), &(_231155_s), &((*(_231174_si))._field_Ident), &(_231213_f));;
	};
	;
	jule::Ptr<_1ece1b092_Fn> _232213_m = _1bc5c0128_FindMethod(_231155_s.ptr(), (*((*(_231174_si))._field_Ident))._field_Kind, false);;
	if ((_232213_m == nullptr)) {
		_1bc812aeb_pushErr(_self_, (*(_231174_si))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*(_231155_s))._field_Decl))._field_Ident, &__jule_any_type4),jule::Any((*((*(_231174_si))._field_Ident))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	if ((!(_1bc787620_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_232213_m))._field_Public, (*(_232213_m))._field_Token)))) {
		_1bc812aeb_pushErr(_self_, (*(_231174_si))._field_Ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_232213_m))._field_Ident, &__jule_any_type4)}));
		_1bc812e5e_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	if ((_1ece19e70_IsRef((*(_232213_m))._field_Params[0LL].ptr()) && (!(_231193_ref)))) {
		_1bc812aeb_pushErr(_self_, (*(_231174_si))._field_Ident, jule::Str::lit("reference method cannot use with non-reference instance", 55), jule::Slice<jule::Any>());
	};
	_1bc817c22_checkDeprecated(_self_, &((*(_232213_m))._field_Directives), (*(_231174_si))._field_Ident);
	jule::Ptr<_1ece1de96_FnIns> _233813_ins = _1ece1c802_instance(_232213_m);;
	(*(_233813_ins))._field_Owner=_231155_s;
	_1c1a766c9_pushReference(_self_, &(_233813_ins));
	jule::Ptr<_1bc8108a7_Data> _234113_model = jule::new_ptr<_1bc8108a7_Data>((*(_231141_d)));;
	(*(_231141_d))._field_Model=jule::Any(jule::new_ptr<_1ece12d03_StructSubIdentExprModel>(_1ece12d03_StructSubIdentExprModel{._field_Token=(*(_231174_si))._field_Ident, ._field_Expr=_234113_model, ._field_Method=_233813_ins, ._field_Owner=_231155_s}), &__jule_any_type97);
	(*(_231141_d))._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(_233813_ins, 1)});
	return _231141_d;;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc8294b4_evalIntTypeStatic(_1bc81259b_Eval* _self_, jule::Ptr<_1bc583a9d_Token> _235236_ident) {
	;
	{
		auto &_match_expr{ (*(_235236_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c2004b13:;
			{
				jule::Ptr<_230d58386_Const> _235617_c = static__230d587c6_NewI64(static_cast<jule::I64>(_230d53925_MaxI(jule::Str::lit("int", 3))));;
				(*(_235617_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_untyped=true, ._field_Kind=_1bc2c50d6_primInt, ._field_Model=jule::Any(_235617_c, &__jule_any_type19), ._field_Constant=_235617_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1c2005d23:;
			{
				jule::Ptr<_230d58386_Const> _236517_c = static__230d587c6_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_230d53e20_Min(jule::Str::lit("int", 3)))));;
				(*(_236517_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_untyped=true, ._field_Kind=_1bc2c50d6_primInt, ._field_Model=jule::Any(_236517_c, &__jule_any_type19), ._field_Constant=_236517_c});;
			}
		}
		else {
			_case_begin_1c200511e:;
			{
				_1bc812aeb_pushErr(_self_, _235236_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("int", 3), &__jule_any_type4),jule::Any((*(_235236_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c20050b9:;
	};
}



inline jule::Ptr<_1bc8108a7_Data> _1bc829805_evalUintTypeStatic(_1bc81259b_Eval* _self_, jule::Ptr<_1bc583a9d_Token> _237937_ident) {
	;
	{
		auto &_match_expr{ (*(_237937_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c2005361:;
			{
				jule::Ptr<_230d58386_Const> _238317_c = static__230d58a90_NewU64(static_cast<jule::U64>(_230d53bde_MaxU(jule::Str::lit("uint", 4))));;
				(*(_238317_c))._field_Kind=jule::Str::lit("uint", 4);
				return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_untyped=true, ._field_Kind=_1bc2c4c0c_primUint, ._field_Model=jule::Any(_238317_c, &__jule_any_type19), ._field_Constant=_238317_c});;
			}
		}
		else {
			_case_begin_1c2008d04:;
			{
				_1bc812aeb_pushErr(_self_, _237937_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("uint", 4), &__jule_any_type4),jule::Any((*(_237937_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c2008c9e:;
	};
}



inline jule::Ptr<_1bc8108a7_Data> _1bc829b46_evalI8TypeStatic(_1bc81259b_Eval* _self_, jule::Ptr<_1bc583a9d_Token> _239735_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_239735_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c200ba2c:;
			{
				jule::Ptr<_230d58386_Const> _240317_c = static__230d587c6_NewI64(127LL);;
				(*(_240317_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_untyped=true, ._field_Kind=_1bc2c53a0_primI8, ._field_Model=jule::Any(_240317_c, &__jule_any_type19), ._field_Constant=_240317_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1c200cb71:;
			{
				jule::Ptr<_230d58386_Const> _241217_c = static__230d587c6_NewI64(-128LL);;
				(*(_241217_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_untyped=true, ._field_Kind=_1bc2c53a0_primI8, ._field_Model=jule::Any(_241217_c, &__jule_any_type19), ._field_Constant=_241217_c});;
			}
		}
		else {
			_case_begin_1c200be6c:;
			{
				_1bc812aeb_pushErr(_self_, _239735_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i8", 2), &__jule_any_type4),jule::Any((*(_239735_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c200be17:;
	};
}



inline jule::Ptr<_1bc8108a7_Data> _1bc829e87_evalI16TypeStatic(_1bc81259b_Eval* _self_, jule::Ptr<_1bc583a9d_Token> _242636_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_242636_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c1688e46:;
			{
				jule::Ptr<_230d58386_Const> _243217_c = static__230d587c6_NewI64(32767LL);;
				(*(_243217_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_untyped=true, ._field_Kind=_1bc2c5669_primI16, ._field_Model=jule::Any(_243217_c, &__jule_any_type19), ._field_Constant=_243217_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1c1337e69:;
			{
				jule::Ptr<_230d58386_Const> _244117_c = static__230d587c6_NewI64(-32768LL);;
				(*(_244117_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_untyped=true, ._field_Kind=_1bc2c5669_primI16, ._field_Model=jule::Any(_244117_c, &__jule_any_type19), ._field_Constant=_244117_c});;
			}
		}
		else {
			_case_begin_1c20110e7:;
			{
				_1bc812aeb_pushErr(_self_, _242636_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i16", 3), &__jule_any_type4),jule::Any((*(_242636_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c2011092:;
	};
}



inline jule::Ptr<_1bc8108a7_Data> _1bc82a2c8_evalI32TypeStatic(_1bc81259b_Eval* _self_, jule::Ptr<_1bc583a9d_Token> _245536_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_245536_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c1725147:;
			{
				jule::Ptr<_230d58386_Const> _246117_c = static__230d587c6_NewI64(2147483647LL);;
				(*(_246117_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_untyped=true, ._field_Kind=_1bc2c5933_primI32, ._field_Model=jule::Any(_246117_c, &__jule_any_type19), ._field_Constant=_246117_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1c17262ad:;
			{
				jule::Ptr<_230d58386_Const> _247017_c = static__230d587c6_NewI64(-2147483648LL);;
				(*(_247017_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_untyped=true, ._field_Kind=_1bc2c5933_primI32, ._field_Model=jule::Any(_247017_c, &__jule_any_type19), ._field_Constant=_247017_c});;
			}
		}
		else {
			_case_begin_1c17255a9:;
			{
				_1bc812aeb_pushErr(_self_, _245536_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i32", 3), &__jule_any_type4),jule::Any((*(_245536_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c1725554:;
	};
}



inline jule::Ptr<_1bc8108a7_Data> _1bc82a619_evalI64TypeStatic(_1bc81259b_Eval* _self_, jule::Ptr<_1bc583a9d_Token> _248436_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_248436_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c17292e4:;
			{
				jule::Ptr<_230d58386_Const> _249017_c = static__230d587c6_NewI64(jule::MAX_I64);;
				(*(_249017_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_untyped=true, ._field_Kind=_1bc2c5bec_primI64, ._field_Model=jule::Any(_249017_c, &__jule_any_type19), ._field_Constant=_249017_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1c172a427:;
			{
				jule::Ptr<_230d58386_Const> _249917_c = static__230d587c6_NewI64(jule::MIN_I64);;
				(*(_249917_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_untyped=true, ._field_Kind=_1bc2c5bec_primI64, ._field_Model=jule::Any(_249917_c, &__jule_any_type19), ._field_Constant=_249917_c});;
			}
		}
		else {
			_case_begin_1c1729734:;
			{
				_1bc812aeb_pushErr(_self_, _248436_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i64", 3), &__jule_any_type4),jule::Any((*(_248436_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c17296ce:;
	};
}



inline jule::Ptr<_1bc8108a7_Data> _1bc82a95a_evalU8TypeStatic(_1bc81259b_Eval* _self_, jule::Ptr<_1bc583a9d_Token> _251335_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_251335_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c172d7c1:;
			{
				jule::Ptr<_230d58386_Const> _251817_c = static__230d58a90_NewU64(255LLU);;
				(*(_251817_c))._field_Kind=jule::Str::lit("u8", 2);
				return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_untyped=true, ._field_Kind=_1bc2c5eb6_primU8, ._field_Model=jule::Any(_251817_c, &__jule_any_type19), ._field_Constant=_251817_c});;
			}
		}
		else {
			_case_begin_1c172d040:;
			{
				_1bc812aeb_pushErr(_self_, _251335_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u8", 2), &__jule_any_type4),jule::Any((*(_251335_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c172d408:;
	};
}



inline jule::Ptr<_1bc8108a7_Data> _1bc82ac9b_evalU16TypeStatic(_1bc81259b_Eval* _self_, jule::Ptr<_1bc583a9d_Token> _253236_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_253236_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c173142d:;
			{
				jule::Ptr<_230d58386_Const> _253717_c = static__230d58a90_NewU64(65535LLU);;
				(*(_253717_c))._field_Kind=jule::Str::lit("u16", 3);
				return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_untyped=true, ._field_Kind=_1bc2c6280_primU16, ._field_Model=jule::Any(_253717_c, &__jule_any_type19), ._field_Constant=_253717_c});;
			}
		}
		else {
			_case_begin_1c1730b8b:;
			{
				_1bc812aeb_pushErr(_self_, _253236_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u16", 3), &__jule_any_type4),jule::Any((*(_253236_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c1731065:;
	};
}



inline jule::Ptr<_1bc8108a7_Data> _1bc82b0dc_evalU32TypeStatic(_1bc81259b_Eval* _self_, jule::Ptr<_1bc583a9d_Token> _255136_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_255136_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c173408a:;
			{
				jule::Ptr<_230d58386_Const> _255617_c = static__230d58a90_NewU64(4294967295LLU);;
				(*(_255617_c))._field_Kind=jule::Str::lit("u32", 3);
				return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_untyped=true, ._field_Kind=_1bc2c6549_primU32, ._field_Model=jule::Any(_255617_c, &__jule_any_type19), ._field_Constant=_255617_c});;
			}
		}
		else {
			_case_begin_1c17337e8:;
			{
				_1bc812aeb_pushErr(_self_, _255136_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u32", 3), &__jule_any_type4),jule::Any((*(_255136_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c1733bc2:;
	};
}



inline jule::Ptr<_1bc8108a7_Data> _1bc82b42d_evalU64TypeStatic(_1bc81259b_Eval* _self_, jule::Ptr<_1bc583a9d_Token> _257036_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_257036_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c1736be7:;
			{
				jule::Ptr<_230d58386_Const> _257517_c = static__230d58a90_NewU64(jule::MAX_U64);;
				(*(_257517_c))._field_Kind=jule::Str::lit("u64", 3);
				return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_untyped=true, ._field_Kind=_1bc2c69bc_primU64, ._field_Model=jule::Any(_257517_c, &__jule_any_type19), ._field_Constant=_257517_c});;
			}
		}
		else {
			_case_begin_1c1736455:;
			{
				_1bc812aeb_pushErr(_self_, _257036_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u64", 3), &__jule_any_type4),jule::Any((*(_257036_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c173682e:;
	};
}



inline jule::Ptr<_1bc8108a7_Data> _1bc82b76e_evalF32TypeStatic(_1bc81259b_Eval* _self_, jule::Ptr<_1bc583a9d_Token> _258936_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_258936_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c1739568:;
			{
				jule::Ptr<_230d58386_Const> _259617_c = static__230d593dc_NewF64(340282346638528860000000000000000000000.0);;
				(*(_259617_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_untyped=true, ._field_Kind=_1bc2c6c86_primF32, ._field_Model=jule::Any(_259617_c, &__jule_any_type19), ._field_Constant=_259617_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1c173a976:;
			{
				jule::Ptr<_230d58386_Const> _260517_c = static__230d593dc_NewF64(-340282346638528860000000000000000000000.0);;
				(*(_260517_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_untyped=true, ._field_Kind=_1bc2c6c86_primF32, ._field_Model=jule::Any(_260517_c, &__jule_any_type19), ._field_Constant=_260517_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1c173a9dc:;
			{
				jule::Ptr<_230d58386_Const> _261417_c = static__230d593dc_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				(*(_261417_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_untyped=true, ._field_Kind=_1bc2c6c86_primF32, ._field_Model=jule::Any(_261417_c, &__jule_any_type19), ._field_Constant=_261417_c});;
			}
		}
		else {
			_case_begin_1c1739c72:;
			{
				_1bc812aeb_pushErr(_self_, _258936_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("f32", 3), &__jule_any_type4),jule::Any((*(_258936_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c1739c1c:;
	};
}



inline jule::Ptr<_1bc8108a7_Data> _1bc82bab0_evalF64TypeStatic(_1bc81259b_Eval* _self_, jule::Ptr<_1bc583a9d_Token> _262836_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_262836_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c173eb78:;
			{
				jule::Ptr<_230d58386_Const> _263517_c = static__230d593dc_NewF64(jule::MAX_F64);;
				(*(_263517_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_untyped=true, ._field_Kind=_1bc2c7050_primF64, ._field_Model=jule::Any(_263517_c, &__jule_any_type19), ._field_Constant=_263517_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1c1741086:;
			{
				jule::Ptr<_230d58386_Const> _264417_c = static__230d593dc_NewF64(jule::MIN_F64);;
				(*(_264417_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_untyped=true, ._field_Kind=_1bc2c7050_primF64, ._field_Model=jule::Any(_264417_c, &__jule_any_type19), ._field_Constant=_264417_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1c17410ec:;
			{
				jule::Ptr<_230d58386_Const> _265317_c = static__230d593dc_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				(*(_265317_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_untyped=true, ._field_Kind=_1bc2c7050_primF64, ._field_Model=jule::Any(_265317_c, &__jule_any_type19), ._field_Constant=_265317_c});;
			}
		}
		else {
			_case_begin_1c1740393:;
			{
				_1bc812aeb_pushErr(_self_, _262836_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("f64", 3), &__jule_any_type4),jule::Any((*(_262836_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c174033d:;
	};
}



inline jule::Ptr<_1bc8108a7_Data> _1bc82beab_evalPrimStatic(_1bc81259b_Eval* _self_, jule::Str _266733_kind, jule::Ptr<_1bc583a9d_Token> _266744_ident) {
	{
		auto &_match_expr{ _266733_kind };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1c17405d5:;
			{
				return _1bc8294b4_evalIntTypeStatic(_self_, _266744_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1c174495d:;
			{
				return _1bc829805_evalUintTypeStatic(_self_, _266744_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1c17449c4:;
			{
				return _1bc829b46_evalI8TypeStatic(_self_, _266744_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1c1744a3a:;
			{
				return _1bc829e87_evalI16TypeStatic(_self_, _266744_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1c1744aa1:;
			{
				return _1bc82a2c8_evalI32TypeStatic(_self_, _266744_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1c17456a6:;
			{
				return _1bc82a619_evalI64TypeStatic(_self_, _266744_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1c174571c:;
			{
				return _1bc82a95a_evalU8TypeStatic(_self_, _266744_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1c1745783:;
			{
				return _1bc82ac9b_evalU16TypeStatic(_self_, _266744_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1c17457e9:;
			{
				return _1bc82b0dc_evalU32TypeStatic(_self_, _266744_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1c1745860:;
			{
				return _1bc82b42d_evalU64TypeStatic(_self_, _266744_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1c17458c6:;
			{
				return _1bc82b76e_evalF32TypeStatic(_self_, _266744_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1c174593c:;
			{
				return _1bc82bab0_evalF64TypeStatic(_self_, _266744_ident);;
			}
		}
		else {
			_case_begin_1c17447a4:;
			{
				_1bc812aeb_pushErr(_self_, _266744_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_266733_kind, &__jule_any_type4),jule::Any((*(_266744_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c174474e:;
	};
}



inline jule::Ptr<_1bc8108a7_Data> _1bc82c3a7_evalTypeStatic(_1bc81259b_Eval* _self_, jule::Ptr<_1bc8108a7_Data> _269937_d, jule::Ptr<_1bc5a28e1_SubIdentExpr> _269951_si) {
	{
		
		if ((_1bc84381e_Prim((*(_269937_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c1749c93:;
			{
				return _1bc82beab_evalPrimStatic(_self_, _1bc8490d8_Str(_1bc84381e_Prim((*(_269937_d))._field_Kind.ptr()).ptr()), (*(_269951_si))._field_Ident);;
			}
		}
		else if ((_1bc8440c2_Enum((*(_269937_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c174a9a8:;
			{
				return _1bc827803_evalEnumStatic(_self_, _1bc8440c2_Enum((*(_269937_d))._field_Kind.ptr()), (*(_269951_si))._field_Ident);;
			}
		}
		else if ((_1bc844358_TypeEnum((*(_269937_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c174aa1e:;
			{
				return _1bc827bee_evalTypeEnumStatic(_self_, _1bc844358_TypeEnum((*(_269937_d))._field_Kind.ptr()), (*(_269951_si))._field_Ident);;
			}
		}
		else if ((_1bc844d92_Struct((*(_269937_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c174aa85:;
			{
				return _1bc8280ea_evalStructStatic(_self_, _1bc844d92_Struct((*(_269937_d))._field_Kind.ptr()), (*(_269951_si))._field_Ident);;
			}
		}
		else {
			_case_begin_1c17498db:;
			{
				_1bc812aeb_pushErr(_self_, (*(_269951_si))._field_Ident, jule::Str::lit("type @ is not supports sub-defines", 34), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*(_269937_d))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c1749820:;
	};
}



inline jule::Ptr<_1bc8108a7_Data> _1c175284a_comptimeObjSubIdent(_1bc81259b_Eval* _self_, jule::Ptr<_1bc72a4e7_comptimeTypeInfo>* _271557_ct, jule::Ptr<_1bc8108a7_Data>* _271577_d, jule::Ptr<_1bc5a28e1_SubIdentExpr>* _271588_si) {
	jule::Ptr<_1bc8108a7_Data> _271613_cd = _1bc7316eb_subIdent((*(_271557_ct)), &((*((*((*(_271588_si))))._field_Ident))._field_Kind));;
	if ((_271613_cd == nullptr)) {
		_1bc812aeb_pushErr(_self_, (*((*(_271588_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*((*(_271577_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_271588_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _271613_cd;;
}

inline jule::Ptr<_1bc8108a7_Data> _1c1756e26_comptimeObjSubIdent(_1bc81259b_Eval* _self_, jule::Ptr<_1bc71b582_comptimeStructField>* _271557_ct, jule::Ptr<_1bc8108a7_Data>* _271577_d, jule::Ptr<_1bc5a28e1_SubIdentExpr>* _271588_si) {
	jule::Ptr<_1bc8108a7_Data> _271613_cd = _1bc71ce35_subIdent((*(_271557_ct)), &((*((*((*(_271588_si))))._field_Ident))._field_Kind));;
	if ((_271613_cd == nullptr)) {
		_1bc812aeb_pushErr(_self_, (*((*(_271588_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*((*(_271577_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_271588_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _271613_cd;;
}

inline jule::Ptr<_1bc8108a7_Data> _1c175b48b_comptimeObjSubIdent(_1bc81259b_Eval* _self_, jule::Ptr<_1bc722ae9_comptimeEnumField>* _271557_ct, jule::Ptr<_1bc8108a7_Data>* _271577_d, jule::Ptr<_1bc5a28e1_SubIdentExpr>* _271588_si) {
	jule::Ptr<_1bc8108a7_Data> _271613_cd = _1bc723b83_subIdent((*(_271557_ct)), &((*((*((*(_271588_si))))._field_Ident))._field_Kind));;
	if ((_271613_cd == nullptr)) {
		_1bc812aeb_pushErr(_self_, (*((*(_271588_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*((*(_271577_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_271588_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _271613_cd;;
}

inline jule::Ptr<_1bc8108a7_Data> _1c1760a45_comptimeObjSubIdent(_1bc81259b_Eval* _self_, jule::Ptr<_1bc72558b_comptimeParam>* _271557_ct, jule::Ptr<_1bc8108a7_Data>* _271577_d, jule::Ptr<_1bc5a28e1_SubIdentExpr>* _271588_si) {
	jule::Ptr<_1bc8108a7_Data> _271613_cd = _1bc7274e4_subIdent((*(_271557_ct)), &((*((*((*(_271588_si))))._field_Ident))._field_Kind));;
	if ((_271613_cd == nullptr)) {
		_1bc812aeb_pushErr(_self_, (*((*(_271588_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*((*(_271577_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_271588_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _271613_cd;;
}

inline jule::Ptr<_1bc8108a7_Data> _1c17651ed_comptimeObjSubIdent(_1bc81259b_Eval* _self_, jule::Ptr<_1bc71e83d_comptimeStatic>* _271557_ct, jule::Ptr<_1bc8108a7_Data>* _271577_d, jule::Ptr<_1bc5a28e1_SubIdentExpr>* _271588_si) {
	jule::Ptr<_1bc8108a7_Data> _271613_cd = _1bc721268_subIdent((*(_271557_ct)), &((*((*((*(_271588_si))))._field_Ident))._field_Kind));;
	if ((_271613_cd == nullptr)) {
		_1bc812aeb_pushErr(_self_, (*((*(_271588_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*((*(_271577_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_271588_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _271613_cd;;
}

inline jule::Ptr<_1bc8108a7_Data> _1c1769763_comptimeObjSubIdent(_1bc81259b_Eval* _self_, jule::Ptr<_1bc731a09_comptimeValue>* _271557_ct, jule::Ptr<_1bc8108a7_Data>* _271577_d, jule::Ptr<_1bc5a28e1_SubIdentExpr>* _271588_si) {
	jule::Ptr<_1bc8108a7_Data> _271613_cd = _1bc73404a_subIdent((*(_271557_ct)), &((*((*((*(_271588_si))))._field_Ident))._field_Kind));;
	if ((_271613_cd == nullptr)) {
		_1bc812aeb_pushErr(_self_, (*((*(_271588_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*((*(_271577_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_271588_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _271613_cd;;
}

inline jule::Ptr<_1bc8108a7_Data> _1c176dcc8_comptimeObjSubIdent(_1bc81259b_Eval* _self_, jule::Ptr<_1bc735953_comptimeFile>* _271557_ct, jule::Ptr<_1bc8108a7_Data>* _271577_d, jule::Ptr<_1bc5a28e1_SubIdentExpr>* _271588_si) {
	jule::Ptr<_1bc8108a7_Data> _271613_cd = _1bc73738e_subIdent((*(_271557_ct)), &((*((*((*(_271588_si))))._field_Ident))._field_Kind));;
	if ((_271613_cd == nullptr)) {
		_1bc812aeb_pushErr(_self_, (*((*(_271588_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*((*(_271577_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_271588_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _271613_cd;;
}



inline __jule_tuple_x_1bc8108a7_Data__jule_tuple_bool _1bc82cc59_tryComptimeObjSubIdent(_1bc81259b_Eval* _self_, jule::Ptr<_1bc8108a7_Data>* _272346_d, jule::Ptr<_1bc5a28e1_SubIdentExpr> _272360_si) {
	__jule_tuple_x_1bc8108a7_Data__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((_1bc8471d5_comptimeTypeInfo((*((*(_272346_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c1750bde:;
			{
				jule::Ptr<_1bc72a4e7_comptimeTypeInfo> _272617_ct = _1bc8471d5_comptimeTypeInfo((*((*(_272346_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1c175284a_comptimeObjSubIdent(_self_, &(_272617_ct), _272346_d, &(_272360_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1bc845de8_comptimeStructField((*((*(_272346_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c1750837:;
			{
				jule::Ptr<_1bc71b582_comptimeStructField> _272917_ct = _1bc845de8_comptimeStructField((*((*(_272346_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1c1756e26_comptimeObjSubIdent(_self_, &(_272917_ct), _272346_d, &(_272360_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1bc846415_comptimeEnumField((*((*(_272346_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c175089d:;
			{
				jule::Ptr<_1bc722ae9_comptimeEnumField> _273217_ct = _1bc846415_comptimeEnumField((*((*(_272346_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1c175b48b_comptimeObjSubIdent(_self_, &(_273217_ct), _272346_d, &(_272360_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1bc846932_comptimeParam((*((*(_272346_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c1750914:;
			{
				jule::Ptr<_1bc72558b_comptimeParam> _273517_ct = _1bc846932_comptimeParam((*((*(_272346_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1c1760a45_comptimeObjSubIdent(_self_, &(_273517_ct), _272346_d, &(_272360_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1bc847702_comptimeStatic((*((*(_272346_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c175097a:;
			{
				jule::Ptr<_1bc71e83d_comptimeStatic> _273817_ct = _1bc847702_comptimeStatic((*((*(_272346_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1c17651ed_comptimeObjSubIdent(_self_, &(_273817_ct), _272346_d, &(_272360_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1bc847988_comptimeValue((*((*(_272346_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c1751063:;
			{
				jule::Ptr<_1bc731a09_comptimeValue> _274117_ct = _1bc847988_comptimeValue((*((*(_272346_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1c1769763_comptimeObjSubIdent(_self_, &(_274117_ct), _272346_d, &(_272360_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1bc847c1e_comptimeFile((*((*(_272346_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c17510c9:;
			{
				jule::Ptr<_1bc735953_comptimeFile> _274417_ct = _1bc847c1e_comptimeFile((*((*(_272346_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1c176dcc8_comptimeObjSubIdent(_self_, &(_274417_ct), _272346_d, &(_272360_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1c17507c1:;
			{
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		_match_end_1c1750705:;
	};
}



inline jule::Ptr<_1bc8108a7_Data> _1bc82d155_evalObjSubIdent(_1bc81259b_Eval* _self_, jule::Ptr<_1bc8108a7_Data> _275138_d, jule::Ptr<_1bc5a28e1_SubIdentExpr> _275152_si) {
	if (_1bc58650c_IsIgnoreIdent((*((*(_275152_si))._field_Ident))._field_Kind)) {
		_1bc812aeb_pushErr(_self_, (*(_275152_si))._field_Ident, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		jule::Ptr<_1bc8108a7_Data> _275817_compData;;
		jule::Bool _275827_ok = false;;
		({
			__jule_tuple_x_1bc8108a7_Data__jule_tuple_bool __jule_assign_result = _1bc82cc59_tryComptimeObjSubIdent(_self_, &(_275138_d), _275152_si);
			_275817_compData = __jule_assign_result.__jule_result_arg0;
			_275827_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_275827_ok) {
			return _275817_compData;;
		};
	};
	jule::Ptr<_1bc8411bd_TypeKind> _276413_kind = (*(_275138_d))._field_Kind;;
	{
		
		if ((_1bc843d3b_Ptr((*(_275138_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c177410d:;
			{
				jule::Ptr<_1bc85108a_Ptr> _276713_ptr = _1bc843d3b_Ptr((*(_275138_d))._field_Kind.ptr());;
				if (_1bc851ac4_IsUnsafe(_276713_ptr.ptr())) {
					goto _match_end_1c1774086;
				};
				if ((!(_1bc8135e1_isUnsafe(_self_)))) {
					_1bc812aeb_pushErr(_self_, (*(_275152_si))._field_Ident, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				_276413_kind=(*(_1bc843d3b_Ptr((*(_275138_d))._field_Kind.ptr())))._field_Elem;
				_1bc83d4d9_makeImplicitDeref(&(_275138_d), (*(_275152_si))._field_Ident);
			}
		}
		else if ((_1bc843aa5_Sptr((*(_275138_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c1774185:;
			{
				_276413_kind=(*(_1bc843aa5_Sptr((*(_275138_d))._field_Kind.ptr())))._field_Elem;
				_1bc83d4d9_makeImplicitDeref(&(_275138_d), (*(_275152_si))._field_Ident);
			}
		}
		_match_end_1c1774086:;
	};
	{
		
		if ((_1bc845128_Trait((*(_275138_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c177741e:;
			{
				return _1bc8285a1_evalTraitSubIdent(_self_, _275138_d, _1bc845128_Trait((*(_275138_d))._field_Kind.ptr()), (*(_275152_si))._field_Ident);;
			}
		}
		else if ((_1bc844d92_Struct(_276413_kind.ptr()) != nullptr)) {
			_case_begin_1c1777496:;
			{
				jule::Ptr<_1bc5be0b1_StructIns> _278513_s = _1bc844d92_Struct(_276413_kind.ptr());;
				if (_1bc83a9d1_isInstancedStruct(_278513_s)) {
					jule::Bool _278721_usedReferenceElem = (_1bc843aa5_Sptr((*(_275138_d))._field_Kind.ptr()) != nullptr);;
					return _1bc829173_evalStructSubIdent(_self_, _275138_d, _1bc844d92_Struct(_276413_kind.ptr()), _275152_si, _278721_usedReferenceElem);;
				};
			}
		}
		_match_end_1c1778079:;
	};
	_1bc812aeb_pushErr(_self_, (*(_275152_si))._field_Ident, jule::Str::lit("object @ is not supports sub-defines", 36), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*(_275138_d))._field_Kind.ptr()), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc82d496_evalSubIdent(jule::Ptr<_1bc81259b_Eval> _self_, jule::Ptr<_1bc5a28e1_SubIdentExpr> _279536_si) {
	jule::Ptr<_1bc8411bd_TypeKind> _279613_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_279613_prefix;
	});;
	jule::Ptr<_1bc8108a7_Data> _279913_d = _1bc82e9e7_evalExprKind(_self_, (*((*(_279536_si))._field_Expr))._field_Kind);;
	if ((_279913_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_279913_d))._field_Decl) {
		return _1bc82c3a7_evalTypeStatic(_self_.ptr(), _279913_d, _279536_si);;
	};
	return _1bc82d155_evalObjSubIdent(_self_.ptr(), _279913_d, _279536_si);;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc82d7d7_evalTuple(jule::Ptr<_1bc81259b_Eval> _self_, jule::Ptr<_1bc59a642_TupleExpr> _280933_tup) {
	jule::Ptr<_1bc84dd8a_Tuple> _281013_tupT = jule::new_ptr<_1bc84dd8a_Tuple>();;
	(*(_281013_tupT))._field_Types=jule::Slice<jule::Ptr<_1bc8411bd_TypeKind>>::alloc(0LL, (*(_280933_tup))._field_Expr.len());
	jule::Ptr<_1ece13980_TupleExprModel> _281313_model = jule::new_ptr<_1ece13980_TupleExprModel>(_1ece13980_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_1bc8108a7_Data>>::alloc(0LL, (*(_280933_tup))._field_Expr.len())});;
	jule::Bool _281713_ok = true;;
	{
		auto expr = &((*(_280933_tup))._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c17821a4:;
		if (it != expr_end) {
			jule::Ptr<_1bc599971_Expr> _281821_expr = *it;
			{
				jule::Ptr<_1bc8108a7_Data> _281917_d = _1bc83080b_evalExpr(_self_, _281821_expr);;
				if ((_281917_d == nullptr)) {
					_281713_ok=false;
					goto _iter_next_1c17821a4;
				};
				{ jule::Slice<jule::Ptr<_1bc8411bd_TypeKind>> &__jule_push_dest = (*(_281013_tupT))._field_Types; __jule_push_dest.push((*(_281917_d))._field_Kind); };
				{ jule::Slice<jule::Ptr<_1bc8108a7_Data>> &__jule_push_dest = (*(_281313_model))._field_Datas; __jule_push_dest.push(_281917_d); };
			}
			_iter_next_1c17821a4:;
			++it;
			goto _iter_begin_1c17821a4;
		}
		_iter_end_1c17821a4:;
	};
	if ((!(_281713_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(_281013_tupT, 23)}), ._field_Model=jule::Any(_281313_model, &__jule_any_type81), });;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc82dbd3_evalMap(jule::Ptr<_1bc81259b_Eval> _self_, jule::Ptr<_1bc84e93a_Map> _283831_m, jule::Ptr<_1bc5a4ccd_BraceLit> _283844_lit) {
	jule::Ptr<_1ece1184b_MapExprModel> _283913_model = jule::new_ptr<_1ece1184b_MapExprModel>(_1ece1184b_MapExprModel{._field_KeyKind=(*(_283831_m))._field_Key, ._field_ValKind=(*(_283831_m))._field_Val, });;
	{
		auto expr = &((*(_283844_lit))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1785e44:;
		if (it != expr_end) {
			jule::Ptr<_1bc599971_Expr> _284421_expr = *it;
			{
				{
					auto &_match_expr{ (*(_284421_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type78) {
						_case_begin_1c178652c:;
						{
							goto _match_end_1c178683a;
						}
					}
					else {
						_case_begin_1c1786890:;
						{
							_1bc812aeb_pushErr(_self_.ptr(), (*(_283844_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1c178683a:;
				};
				jule::Ptr<_1bc5a5608_KeyValPair> _285417_pair = (*(_284421_expr))._field_Kind.cast_ptr<_1bc5a5608_KeyValPair>(&__jule_any_type78);;
				jule::Ptr<_1bc8108a7_Data> _285617_key = _1bc83080b_evalExpr(_self_, (*(_285417_pair))._field_Key);;
				if ((_285617_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1bc8108a7_Data> _286117_val = _1bc83080b_evalExpr(_self_, (*(_285417_pair))._field_Val);;
				if ((_286117_val == nullptr)) {
					return nullptr;;
				};
				_1bc78e8be_checkAssignType((*(_self_))._field_s, false, &((*(_283831_m))._field_Key), &(_285617_key), (*(_285417_pair))._field_Colon);
				_1bc78e8be_checkAssignType((*(_self_))._field_s, false, &((*(_283831_m))._field_Val), &(_286117_val), (*(_285417_pair))._field_Colon);
				{ jule::Slice<jule::Ptr<_1ece11395_KeyValPairExprModel>> &__jule_push_dest = (*(_283913_model))._field_Entries; __jule_push_dest.push(jule::new_ptr<_1ece11395_KeyValPairExprModel>(_1ece11395_KeyValPairExprModel{._field_Key=(*(_285617_key))._field_Model, ._field_Val=(*(_286117_val))._field_Model})); };
			}
			_iter_next_1c1785e44:;
			++it;
			goto _iter_begin_1c1785e44;
		}
		_iter_end_1c1785e44:;
	};
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(_283831_m, 24)}), ._field_Mutable=true, ._field_Model=jule::Any(_283913_model, &__jule_any_type98), });;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc82e024_evalBraceLit(jule::Ptr<_1bc81259b_Eval> _self_, jule::Ptr<_1bc5a4ccd_BraceLit> _288236_lit) {
	{
		
		if (((*(_self_))._field_prefix == nullptr)) {
			_case_begin_1c178c742:;
			{
				_1bc812aeb_pushErr(_self_.ptr(), (*(_288236_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1bc8453ae_Map((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1c178d07d:;
			{
				return _1bc82dbd3_evalMap(_self_, _1bc8453ae_Map((*(_self_))._field_prefix.ptr()), _288236_lit);;
			}
		}
		else if ((_1bc844d92_Struct((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1c178d0e4:;
			{
				return _1bc8253d3_evalStructLitExplicit(_self_, _1bc844d92_Struct((*(_self_))._field_prefix.ptr()), (*(_288236_lit))._field_Exprs, (*(_288236_lit))._field_Token);;
			}
		}
		else {
			_case_begin_1c178c39b:;
			{
				_1bc812aeb_pushErr(_self_.ptr(), (*(_288236_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c178b488:;
	};
}



inline jule::Ptr<_1bc8108a7_Data> _1bc82e365_evalAnonFunc(jule::Ptr<_1bc81259b_Eval> _self_, jule::Ptr<_1bc5ac159_FnDecl> _289736_decl) {
	_1bc85307b_typeChecker _289813_tc = _1bc85307b_typeChecker{._field_s=(*(_self_))._field_s, ._field_rootLookup=(*(_self_))._field_lookup, ._field_lookup=(*(_self_))._field_lookup, };;
	jule::Ptr<_1ece1de96_FnIns> _290313_ins = _1bc859c53_buildFunc(&_289813_tc, _289736_decl);;
	if ((_290313_ins == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1c1792923:;
			{
				jule::Ptr<_1bc749923_scopeChecker> _290917_sc = (*(_self_))._field_lookup.cast_ptr<_1bc749923_scopeChecker>(0);;
				jule::Ptr<_1bc749923_scopeChecker> _291017_scc = _1bc75b3b3_newChildChecker(_290917_sc);;
				(*(_291017_scc))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1bc74847c_scopeLabel>>>(nullptr);
				(*(_291017_scc))._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1bc748a10_scopeGoto>>>(nullptr);
				(*(_291017_scc))._field_owner=nullptr;
				(*(_291017_scc))._field_childIndex=0LL;
				(*(_291017_scc))._field_it=0LLU;
				(*(_291017_scc))._field_cse=0LLU;
				(*(_291017_scc))._field_owner=_290313_ins;
				_1bc7a1d32_checkFnInsSc((*(_self_))._field_s.ptr(), &(_290313_ins), &(_291017_scc));
			}
		}
		else {
			_case_begin_1c179301c:;
			{
				_1bc7a244d_checkFnIns((*(_self_))._field_s, &(_290313_ins));
			}
		}
		_match_end_1c1792e0c:;
	};
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(_290313_ins, 1)}), ._field_Model=jule::Any(jule::new_ptr<_1ece10ebb_AnonFnExprModel>(_1ece10ebb_AnonFnExprModel{._field_Func=_290313_ins, ._field_Global=_1bc813877_isGlobal(_self_.ptr())}), &__jule_any_type99), });;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc82e6a6_evalBinary(jule::Ptr<_1bc81259b_Eval> _self_, jule::Ptr<_1bc5a2d97_BinaryExpr> _293234_op) {
	_1bc832c5e_binaryEval _293313_bs = static__1bc833347_newPlain(_self_);;
	if (((*(_self_))._field_prefix != nullptr)) {
		jule::Ptr<_1bc848c97_Prim> _293613_prim = _1bc84381e_Prim((*(_self_))._field_prefix.ptr());;
		if (((_293613_prim == nullptr) || (!(_230d57dad_IsNum(_1bc8490d8_Str(_293613_prim.ptr())))))) {
			jule::Ptr<_1bc8411bd_TypeKind> _293821_prefix = (*(_self_))._field_prefix;;
			(*(_self_))._field_prefix=nullptr;
			__JULE_DEFER({
				(*(_self_))._field_prefix=_293821_prefix;
			});;
			return _1bc838cdc_eval(&_293313_bs, &(_293234_op));;
		};
	};
	return _1bc838cdc_eval(&_293313_bs, &(_293234_op));;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc82e9e7_evalExprKind(jule::Ptr<_1bc81259b_Eval> _self_, jule::Any _294736_kind) {
	{
		auto &_match_expr{ _294736_kind };
		
		if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1c179b4ba:;
			{
				jule::Ptr<_1bc599c6d_RangeExpr> _295017_e = _294736_kind.cast_ptr<_1bc599c6d_RangeExpr>(&__jule_any_type100);;
				return _1bc82e9e7_evalExprKind(_self_, (*((*(_295017_e))._field_Expr))._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1c179b18a:;
			{
				return _1bc81512b_evalLit(_self_.ptr(), _294736_kind.cast_ptr<_1bc59aa1b_LitExpr>(&__jule_any_type101));;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1c179b70c:;
			{
				return _1bc819d67_evalIdent(_self_.ptr(), _294736_kind.cast_ptr<_1bc59b39b_IdentExpr>(&__jule_any_type79));;
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1c179b784:;
			{
				return _1bc81a1a8_evalUnary(_self_, _294736_kind.cast_ptr<_1bc59ba2d_UnaryExpr>(&__jule_any_type87));;
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1c179b80b:;
			{
				return _1bc81a4e9_evalVariadic(_self_, _294736_kind.cast_ptr<_1bc59be07_VariadicExpr>(&__jule_any_type75));;
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1c179b883:;
			{
				return _1bc81a83a_evalUnsafe(_self_, _294736_kind.cast_ptr<_1bc59ade5_UnsafeExpr>(&__jule_any_type102));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1c179b960:;
			{
				return _1bc81b473_evalSliceExpr(_self_, _294736_kind.cast_ptr<_1bc5a5d01_SliceExpr>(&__jule_any_type93));;
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1c179b9d7:;
			{
				return _1bc81eb19_evalIndexing(_self_, _294736_kind.cast_ptr<_1bc5a6791_IndexingExpr>(&__jule_any_type103));;
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1c179ba5e:;
			{
				return _1bc820e4a_evalSlicing(_self_, _294736_kind.cast_ptr<_1bc5a6e01_SlicingExpr>(&__jule_any_type104));;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1c179bad6:;
			{
				return _1bc824adb_evalCast(_self_, _294736_kind.cast_ptr<_1bc59c2d1_CastExpr>(&__jule_any_type105));;
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1c179bb5d:;
			{
				return _1bc824e2c_evalNsSelection(_self_.ptr(), _294736_kind.cast_ptr<_1bc5a254a_NsSelectionExpr>(&__jule_any_type89));;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1c179bbd5:;
			{
				return _1bc825724_evalStructLit(_self_, _294736_kind.cast_ptr<_1bc5a4827_StructLit>(&__jule_any_type106));;
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1c179bc5c:;
			{
				return _1bc825ceb_evalType(_self_.ptr(), _294736_kind.cast_ptr<_1bc59563c_TypeDecl>(&__jule_any_type88));;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1c179bcd4:;
			{
				return _1bc827407_evalFnCall(_self_, _294736_kind.cast_ptr<_1bc5a3507_FnCallExpr>(&__jule_any_type107));;
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1c179bd5b:;
			{
				return _1bc82d496_evalSubIdent(_self_, _294736_kind.cast_ptr<_1bc5a28e1_SubIdentExpr>(&__jule_any_type85));;
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1c179bdd3:;
			{
				return _1bc82d7d7_evalTuple(_self_, _294736_kind.cast_ptr<_1bc59a642_TupleExpr>(&__jule_any_type80));;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1c179be5a:;
			{
				return _1bc82e024_evalBraceLit(_self_, _294736_kind.cast_ptr<_1bc5a4ccd_BraceLit>(&__jule_any_type108));;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1c179bed2:;
			{
				return _1bc82e365_evalAnonFunc(_self_, _294736_kind.cast_ptr<_1bc5ac159_FnDecl>(&__jule_any_type14));;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1c179c059:;
			{
				return _1bc82e6a6_evalBinary(_self_, _294736_kind.cast_ptr<_1bc5a2d97_BinaryExpr>(&__jule_any_type109));;
			}
		}
		else {
			_case_begin_1c179b2cd:;
			{
				return nullptr;;
			}
		}
		_match_end_1c179b212:;
	};
}



inline jule::Ptr<_1bc8108a7_Data> _1bc82ed38_eval1(jule::Ptr<_1bc81259b_Eval> _self_, jule::Ptr<_1bc599971_Expr> _299529_expr) {
	jule::Ptr<_1bc8108a7_Data> _299613_d = _1bc82e9e7_evalExprKind(_self_, (*(_299529_expr))._field_Kind);;
	if (((_299613_d == nullptr) || ((*(_299613_d))._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1bc844b0b_Fn((*(_299613_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c17a7dab:;
			{
				jule::Ptr<_1ece1de96_FnIns> _300317_f = _1bc844b0b_Fn((*(_299613_d))._field_Kind.ptr());;
				if (_1ece2042b_IsBuiltin(_300317_f.ptr())) {
					_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_299529_expr))._field_Token, jule::Str::lit("built-in functions should be invoked", 36), jule::Slice<jule::Any>());
					goto _match_end_1c17a74d7;
				};
				if (((*(_300317_f))._field_Generics.len() != (*((*(_300317_f))._field_Decl))._field_Generics.len())) {
					_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_299529_expr))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				};
				if (((!((*((*(_300317_f))._field_Decl))._field_Statically)) && _1ece1b79b_IsMethod((*(_300317_f))._field_Decl.ptr()))) {
					_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_299529_expr))._field_Token, jule::Str::lit("methods should be invoked", 25), jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1c17a74d7:;
	};
	return _299613_d;;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc830179_eval(jule::Ptr<_1bc81259b_Eval> _self_, jule::Ptr<_1bc599971_Expr> _302228_expr) {
	jule::Ptr<_1bc8108a7_Data> _302313_d = _1bc82ed38_eval1(_self_, _302228_expr);;
	if ((_302313_d == nullptr)) {
		return nullptr;;
	};
	if (((((*(_self_))._field_owner == nullptr) || (!((*((*(_self_))._field_owner))._field_Constant))) && _1bc8458cb_comptime((*(_302313_d))._field_Kind.ptr()))) {
		_1bc786db1_pushErr((*(_self_))._field_s.ptr(), (*(_302228_expr))._field_Token, jule::Str::lit("compile-time evaluations cannot used as expression", 50), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _302313_d;;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc8304ba_evalExpr1(jule::Ptr<_1bc81259b_Eval> _self_, jule::Ptr<_1bc599971_Expr> _303733_expr) {
	jule::Ptr<_1bc8108a7_Data> _303813_d = _1bc82ed38_eval1(_self_, _303733_expr);;
	{
		
		if ((_303813_d == nullptr)) {
			_case_begin_1c17b0d4d:;
			{
				return nullptr;;
			}
		}
		else if ((*(_303813_d))._field_Decl) {
			_case_begin_1c17b0dc5:;
			{
				_1bc812aeb_pushErr(_self_.ptr(), (*(_303733_expr))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1c17b0c82:;
			{
				return _303813_d;;
			}
		}
		_match_end_1c17b0c1b:;
	};
}



inline jule::Ptr<_1bc8108a7_Data> _1bc83080b_evalExpr(jule::Ptr<_1bc81259b_Eval> _self_, jule::Ptr<_1bc599971_Expr> _305332_expr) {
	jule::Ptr<_1bc8108a7_Data> _305413_d = _1bc830179_eval(_self_, _305332_expr);;
	{
		
		if ((_305413_d == nullptr)) {
			_case_begin_1c17b2c73:;
			{
				return nullptr;;
			}
		}
		else if ((*(_305413_d))._field_Decl) {
			_case_begin_1c17b2cea:;
			{
				_1bc812aeb_pushErr(_self_.ptr(), (*(_305332_expr))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1c17b2ba7:;
			{
				return _305413_d;;
			}
		}
		_match_end_1c17b2b41:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1bc81259b_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1bc830cc3_unaryEval static__1bc831213_new(jule::Ptr<_1bc81259b_Eval> _307423_e) {
	return _1bc830cc3_unaryEval{._field_e=_307423_e, };;
}



inline void _1bc831411_minus(_1bc830cc3_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1c17b4934:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1bc84381e_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c17b4604:;
			{
				if ((!(_230d57dad_IsNum(_1bc841586_Str((*((*(_self_))._field_d))._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1bc844d92_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c17b466a:;
			{
				if (((*(_1bc844d92_Struct((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1c17b458d:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1c17b4516:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
	if (_1bc81127b_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_230d5cd91_IsF64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1c17b9164:;
				{
					_230d5bdc3_SetF64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::F64>((-(_230d5a795_ReadF64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_230d5c357_IsI64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1c17b91db:;
				{
					_230d5b301_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((-(_230d59c5b_ReadI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_230d5c5dd_IsU64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1c17b8cce:;
				{
					_230d5b301_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((-(_230d5aa2b_AsI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_1c17b8c68:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.minus, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3112:17"));;
				}
			}
			_match_end_1c17b8bad:;
		};
		return;;
	};
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1ece0d65b_UnaryExprModel>(_1ece0d65b_UnaryExprModel{._field_Expr=jule::new_ptr<_1bc8108a7_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1bc83160e_plus(_1bc830cc3_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1c2118908:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1bc84381e_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c21185c8:;
			{
				if ((!(_230d57dad_IsNum(_1bc841586_Str((*((*(_self_))._field_d))._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1bc844d92_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c211863e:;
			{
				if (((*(_1bc844d92_Struct((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1c2118562:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1c2118496:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
	if (_1bc81127b_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_230d5cd91_IsF64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1c211d138:;
				{
					_230d5bdc3_SetF64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::F64>((+(_230d5a795_ReadF64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_230d5c357_IsI64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1c211d1b0:;
				{
					_230d5b301_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((+(_230d59c5b_ReadI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_230d5c5dd_IsU64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1c211cca3:;
				{
					_230d5b301_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((+(_230d5aa2b_AsI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_1c211cc3c:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.plus, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3157:17"));;
				}
			}
			_match_end_1c211cb82:;
		};
		return;;
	};
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1ece0d65b_UnaryExprModel>(_1ece0d65b_UnaryExprModel{._field_Expr=jule::new_ptr<_1bc8108a7_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1bc83180c_caret(_1bc830cc3_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1c2123847:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1bc84381e_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2123517:;
			{
				if ((!(_230d577a3_IsInt(_1bc841586_Str((*((*(_self_))._field_d))._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1bc844d92_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c212357d:;
			{
				if (((*(_1bc844d92_Struct((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1c21234a1:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1c21233d5:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
	if (_1bc81127b_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_230d5c357_IsI64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1c2128066:;
				{
					_230d5b301_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((~(_230d59c5b_ReadI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_230d5c5dd_IsU64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1c21280dd:;
				{
					_230d5b5a9_SetU64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::U64>((~(_230d59ee2_ReadU64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_1c2127b7b:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.caret, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3200:17"));;
				}
			}
			_match_end_1c2127ac1:;
		};
		return;;
	};
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1ece0d65b_UnaryExprModel>(_1ece0d65b_UnaryExprModel{._field_Expr=jule::new_ptr<_1bc8108a7_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1bc831a0a_excl(_1bc830cc3_unaryEval* _self_) {
	jule::Ptr<_1bc848c97_Prim> _32149_t = _1bc84381e_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
	if (((_32149_t == nullptr) || (!(_1bc84be98_IsBool(_32149_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
	if (_1bc81127b_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_230d5c874_IsBool((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1c212e369:;
				{
					_230d5b862_SetBool((*((*(_self_))._field_d))._field_Constant.ptr(), (!(_230d5a278_ReadBool((*((*(_self_))._field_d))._field_Constant.ptr()))));
				}
			}
			else {
				_case_begin_1c212de90:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.excl, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3228:17"));;
				}
			}
			_match_end_1c212ddc4:;
		};
		return;;
	};
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1ece0d65b_UnaryExprModel>(_1ece0d65b_UnaryExprModel{._field_Expr=jule::new_ptr<_1bc8108a7_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1bc831c08_star(_1bc830cc3_unaryEval* _self_) {
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1ece0d65b_UnaryExprModel>(_1ece0d65b_UnaryExprModel{._field_Expr=jule::new_ptr<_1bc8108a7_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
	{
		
		if ((_1bc843d3b_Ptr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2132aed:;
			{
				if ((!(_1bc8135e1_isUnsafe((*(_self_))._field_e.ptr())))) {
					_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1bc85108a_Ptr> _325317_t = _1bc843d3b_Ptr((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (_1bc851ac4_IsUnsafe(_325317_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*((*(_self_))._field_d))._field_Kind=(*(_325317_t))._field_Elem;
				(*((*(_self_))._field_d))._field_Mutable=true;
			}
		}
		else if ((_1bc843aa5_Sptr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c21327ce:;
			{
				(*((*(_self_))._field_d))._field_Kind=(*(_1bc843aa5_Sptr((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Elem;
			}
		}
		else {
			_case_begin_1c2132768:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1c2131800:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*((*(_self_))._field_d))._field_untyped=false;
	(*((*(_self_))._field_d))._field_Lvalue=true;
}



inline void _1bc831e06_amper(_1bc830cc3_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1c213b1ab:;
			{
				jule::Ptr<_1ece0e030_StructLitExprModel> _327517_lit = (*((*(_self_))._field_d))._field_Model.cast_ptr<_1ece0e030_StructLitExprModel>(&__jule_any_type94);;
				_1bc839b45_makeStructLitAlloc(&((*(_self_))._field_d), &(_327517_lit));
			}
		}
		else {
			_case_begin_1c21386c5:;
			{
				{
					
					if (_1bc85c0a7_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_1c2138285:;
						{
							(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(jule::new_ptr<_1bc85108a_Ptr>(_1bc85108a_Ptr{._field_Elem=(*((*(_self_))._field_d))._field_Kind}), 26)});
							(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1ece0d65b_UnaryExprModel>(_1ece0d65b_UnaryExprModel{._field_Expr=jule::new_ptr<_1bc8108a7_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
						}
					}
					else {
						_case_begin_1c2138c14:;
						{
							(*(_self_))._field_d=nullptr;
							return;;
						}
					}
					_match_end_1c2138b48:;
				};
			}
		}
		_match_end_1c2138670:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*((*(_self_))._field_d))._field_untyped=false;
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
}



inline void _1bc832104_typeDecl(_1bc830cc3_unaryEval* _self_) {
	_1bc85307b_typeChecker _330013_tc = _1bc85307b_typeChecker{._field_s=(*((*(_self_))._field_e))._field_s, ._field_rootLookup=(*((*(_self_))._field_e))._field_lookup, ._field_lookup=(*((*(_self_))._field_e))._field_lookup, ._field_errorToken=(*((*(_self_))._field_u))._field_Op, };;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1c213d09d:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(_1bc85846b_buildPtrFromType(&_330013_tc, &((*((*(_self_))._field_d))._field_Kind)), 26)});
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Kind, &__jule_any_type83);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1c2141513:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(_1bc857cd9_buildSptrFromType(&_330013_tc, &((*((*(_self_))._field_d))._field_Kind)), 21)});
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Kind, &__jule_any_type83);
			}
		}
		else {
			_case_begin_1c213e830:;
			{
				_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, jule::Str::lit("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_self_))._field_u))._field_Op))._field_Kind, &__jule_any_type4),jule::Any(_1bc841586_Str((*((*(_self_))._field_d))._field_Kind.ptr()), &__jule_any_type4)}));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1c213e7ca:;
	};
	(*((*(_self_))._field_d))._field_Decl=true;
}



inline void _1bc832302_evalData(_1bc830cc3_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1c214455a:;
			{
				jule::Ptr<_1bc8411bd_TypeKind> _332517_prefix = (*((*(_self_))._field_e))._field_prefix;;
				(*((*(_self_))._field_e))._field_prefix=nullptr;
				(*(_self_))._field_d=_1bc830179_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
				(*((*(_self_))._field_e))._field_prefix=_332517_prefix;
			}
		}
		else {
			_case_begin_1c2144b76:;
			{
				(*(_self_))._field_d=_1bc830179_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
			}
		}
		_match_end_1c2144acc:;
	};
}



inline jule::Ptr<_1bc8108a7_Data> _1bc832643_eval(_1bc830cc3_unaryEval* _self_, jule::Ptr<_1bc59ba2d_UnaryExpr> _333427_u) {
	(*(_self_))._field_u=_333427_u;
	_1bc832302_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*((*(_self_))._field_d))._field_Decl) {
		_1bc832104_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_1bc8411bd_TypeKind> _33459_kind = (*((*(_self_))._field_d))._field_Kind;;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1c214963c:;
			{
				_1bc831411_minus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1c21496a3:;
			{
				_1bc83160e_plus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1c2149719:;
			{
				_1bc83180c_caret(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1c2149780:;
			{
				_1bc831a0a_excl(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1c2149c9c:;
			{
				_1bc831c08_star(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1c2149d13:;
			{
				_1bc831e06_amper(_self_);
			}
		}
		else {
			_case_begin_1c21495c6:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_1c2149571:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1c2149d8a:;
			{
				_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, jule::Str::lit("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_self_))._field_u))._field_Op))._field_Kind, &__jule_any_type4),jule::Any(_1bc841586_Str(_33459_kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		else if (_1bc81127b_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_1c214b562:;
			{
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Constant, &__jule_any_type19);
			}
		}
		_match_end_1c214b50c:;
	};
	return (*(_self_))._field_d;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc830cc3_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1bc832c5e_binaryEval static__1bc833347_newPlain(jule::Ptr<_1bc81259b_Eval> _338228_e) {
	return _1bc832c5e_binaryEval{._field_e=_338228_e, };;
}



inline _1bc832c5e_binaryEval static__1bc833688_new(jule::Ptr<_1bc81259b_Eval> _338823_e, jule::Ptr<_1bc583a9d_Token> _338837_op) {
	return _1bc832c5e_binaryEval{._field_e=_338823_e, ._field_op=_338837_op};;
}



inline jule::Bool _1bc83391e_checkTypeCompatibility(_1bc832c5e_binaryEval* _self_) {
	return _1bc790c00_checkTypeCompatibility1((*((*(_self_))._field_e))._field_s, &((*((*(_self_))._field_l))._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));;
}



inline jule::Bool _1bc833ba5_checkStructCommonOperatorCompatibility(_1bc832c5e_binaryEval* _self_) {
	jule::Ptr<_1ece1de96_FnIns> _340217_overload = nullptr;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1c215138b:;
			{
				_340217_overload=(*(_1bc844d92_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1c2151963:;
			{
				_340217_overload=(*(_1bc844d92_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1c21519c9:;
			{
				_340217_overload=(*(_1bc844d92_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Add;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1c2151a40:;
			{
				_340217_overload=(*(_1bc844d92_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1c2151aa6:;
			{
				_340217_overload=(*(_1bc844d92_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Div;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1c21530e6:;
			{
				_340217_overload=(*(_1bc844d92_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1c215315c:;
			{
				_340217_overload=(*(_1bc844d92_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1c21531c3:;
			{
				_340217_overload=(*(_1bc844d92_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1c2153239:;
			{
				_340217_overload=(*(_1bc844d92_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1c21532a0:;
			{
				_340217_overload=(*(_1bc844d92_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1c21518ec:;
			{
				_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1bc841586_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return false;;
			}
		}
		_match_end_1c2151897:;
	};
	if ((_340217_overload == nullptr)) {
		_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1bc841586_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
		return false;;
	};
	jule::Ptr<_1ece1ceea_ParamIns> _343413_p = (*(_340217_overload))._field_Params[1LL];;
	return _1bc78e8be_checkAssignType((*((*(_self_))._field_e))._field_s, (*((*(_343413_p))._field_Decl))._field_Reference, &((*(_343413_p))._field_Kind), &((*(_self_))._field_r), (*(_self_))._field_op);;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc833e3b_evalComptimeTypeInfo(_1bc832c5e_binaryEval* _self_) {
	jule::Ptr<_1bc72a4e7_comptimeTypeInfo> _343913_r = _1bc8471d5_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((_343913_r == nullptr)) {
		_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("comptimeTypeInfo", 16), &__jule_any_type4),jule::Any(_1bc841586_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1bc72a4e7_comptimeTypeInfo> _344413_l = _1bc8471d5_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1c216107c:;
			{
				jule::Ptr<_230d58386_Const> _344717_constant = static__230d58d59_NewBool(_1bc8418c7_Equal((*(_344413_l))._field_base, (*(_343913_r))._field_base));;
				return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c4679_primBool, ._field_Model=jule::Any(_344717_constant, &__jule_any_type19), ._field_Constant=_344717_constant});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1c2162952:;
			{
				jule::Ptr<_230d58386_Const> _345417_constant = static__230d58d59_NewBool((!(_1bc8418c7_Equal((*(_344413_l))._field_base, (*(_343913_r))._field_base))));;
				return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c4679_primBool, ._field_Model=jule::Any(_345417_constant, &__jule_any_type19), ._field_Constant=_345417_constant});;
			}
		}
		else {
			_case_begin_1c21613bd:;
			{
				_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1bc841586_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c2161368:;
	};
}



inline jule::Ptr<_1bc8108a7_Data> _1bc8341c2_evalNil(_1bc832c5e_binaryEval* _self_) {
	if ((!(_1bc84306b_NilCompatible((*((*(_self_))._field_r))._field_Kind.ptr())))) {
		_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4),jule::Any(_1bc841586_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1c216557b:;
			{
				return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c4679_primBool, });;
			}
		}
		else {
			_case_begin_1c2166b87:;
			{
				_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c2166b32:;
	};
}



inline jule::Ptr<_1bc8108a7_Data> _1bc834458_evalEnum(_1bc832c5e_binaryEval* _self_) {
	jule::Ptr<_1bc71624c_Enum> _348513_enm = _1bc8440c2_Enum((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1c216910c:;
			{
				jule::Ptr<_1bc8411bd_TypeKind> _348917_rkind = (*((*(_self_))._field_r))._field_Kind;;
				if ((_1bc8440c2_Enum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
					_348917_rkind=(*((*(_1bc8440c2_Enum((*((*(_self_))._field_r))._field_Kind.ptr())))._field_Kind))._field_Kind;
				};
				if ((!(_1bc79032b_checkTypeCompatibility((*((*(_self_))._field_e))._field_s, &((*((*(_348513_enm))._field_Kind))._field_Kind), &(_348917_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c4679_primBool, });;
			}
		}
		_match_end_1c2169096:;
	};
	if (((_1bc8440c2_Enum((*((*(_self_))._field_r))._field_Kind.ptr()) == nullptr) || (_348513_enm != _1bc8440c2_Enum((*((*(_self_))._field_r))._field_Kind.ptr())))) {
		_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any((*(_348513_enm))._field_Ident, &__jule_any_type4),jule::Any(_1bc841586_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1c2168419:;
			{
				if ((!(_230d57dad_IsNum(_1bc841586_Str((*((*(_348513_enm))._field_Kind))._field_Kind.ptr()))))) {
					_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*(_348513_enm))._field_Ident, &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c4679_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1c21707c8:;
			{
				jule::Ptr<_1bc7156d0_EnumItem> _351913_first = (*(_348513_enm))._field_Items[0LL];;
				{
					
					if (_230d5c357_IsI64((*((*((*(_351913_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1c2173b0b:;
						{
							if ((_230d59c5b_ReadI64((*((*((*(_351913_first))._field_Value))._field_Data))._field_Constant.ptr()) == 0LL)) {
								goto _julec_label_1c21782c5;
							};
							goto _julec_label_1c2174e1a;
						}
					}
					else if (_230d5c5dd_IsU64((*((*((*(_351913_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1c2173b83:;
						{
							if ((_230d59ee2_ReadU64((*((*((*(_351913_first))._field_Value))._field_Data))._field_Constant.ptr()) == 0LLU)) {
								goto _julec_label_1c21782c5;
							};
							goto _julec_label_1c2174e1a;
						}
					}
					else {
						_case_begin_1c2173721:;
						{
							jule::panic(jule::Str::lit("unimplemented enum type, this panic call should be unreachable", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:3532:17"));;
						}
					}
					_match_end_1c21736aa:;
				};
				_julec_label_1c2174e1a:;
				_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("the @ enum type is not supports @ operator", 42), jule::Slice<jule::Any>::make({jule::Any((*(_348513_enm))._field_Ident, &__jule_any_type4),jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				_1bc812e5e_pushSuggestion((*(_self_))._field_e.ptr(), jule::Str::lit("define default enum field (the first one is default) with zero value to use & operator", 86), jule::Slice<jule::Any>());
				_julec_label_1c21782c5:;
				goto _case_begin_1c217083e;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1c217083e:;
			{
				if (((_1bc84381e_Prim((*((*(_348513_enm))._field_Kind))._field_Kind.ptr()) == nullptr) || (!(_230d577a3_IsInt(_1bc8490d8_Str(_1bc84381e_Prim((*((*(_348513_enm))._field_Kind))._field_Kind.ptr()).ptr())))))) {
					_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*(_348513_enm))._field_Ident, &__jule_any_type4)}));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1c216e596:;
			{
				_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*(_348513_enm))._field_Ident, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c216e541:;
	};
}



inline jule::Ptr<_1bc8108a7_Data> _1bc8346de_evalTypeEnum(_1bc832c5e_binaryEval* _self_) {
	jule::Ptr<_1bc717957_TypeEnum> _355213_enm = _1bc844358_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr());;
	if ((!(_1bc83391e_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1c217d51c:;
			{
				return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c4679_primBool, });;
			}
		}
		else {
			_case_begin_1c217c890:;
			{
				_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1bc717c98_Str(_355213_enm.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c217d154:;
	};
}



inline jule::Ptr<_1bc8108a7_Data> _1bc834975_evalSptr(_1bc832c5e_binaryEval* _self_) {
	if ((!(_1bc83391e_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1c217e6a5:;
			{
				return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c4679_primBool, });;
			}
		}
		else {
			_case_begin_1c2180420:;
			{
				_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1bc841586_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c21803ba:;
	};
}



inline jule::Ptr<_1bc8108a7_Data> _1bc834c0b_evalPtr(_1bc832c5e_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1c2181ec1:;
			{
				if ((!(_1bc83391e_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c4679_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1c2183a1c:;
			{
				if ((_1bc843d3b_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) == nullptr)) {
					std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				};
				if (_1bc851ac4_IsUnsafe(_1bc843d3b_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()).ptr())) {
					_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1bc841586_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				};
				if ((!(_1bc83ad55_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is incompatible to use for pointer arithmetic", 52), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1c2181d8e:;
			{
				_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1bc841586_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c2181ce5:;
	};
}



inline jule::Ptr<_1bc8108a7_Data> _1bc834e92_evalArr(_1bc832c5e_binaryEval* _self_) {
	if ((!(_1bc83391e_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1c218449b:;
			{
				return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c4679_primBool, });;
			}
		}
		else {
			_case_begin_1c2189924:;
			{
				_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1bc841586_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c21898be:;
	};
}



inline jule::Ptr<_1bc8108a7_Data> _1bc835228_evalSlc(_1bc832c5e_binaryEval* _self_) {
	if ((!(_1bc83391e_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1c218b173:;
			{
				return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c4679_primBool, });;
			}
		}
		else {
			_case_begin_1c218bddd:;
			{
				_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1bc841586_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c218bd88:;
	};
}



inline jule::Ptr<_1bc8108a7_Data> _1bc8354ae_evalStruct(_1bc832c5e_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1c218decd:;
			{
				if (((*(_1bc844d92_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Gt == nullptr)) {
					_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1bc841586_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c4679_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1c218e044:;
			{
				if (((*(_1bc844d92_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_GtEq == nullptr)) {
					_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1bc841586_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c4679_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1c218e0aa:;
			{
				if (((*(_1bc844d92_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Lt == nullptr)) {
					_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1bc841586_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c4679_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1c218e132:;
			{
				if (((*(_1bc844d92_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_LtEq == nullptr)) {
					_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1bc841586_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c4679_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1c218e1a9:;
			{
				if ((!(_1bc83391e_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c4679_primBool, });;
			}
		}
		_match_end_1c218d7b3:;
	};
	if ((!(_1bc833ba5_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc835745_evalTrait(_1bc832c5e_binaryEval* _self_) {
	if ((!(_1bc83391e_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1c2198b97:;
			{
				return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c4679_primBool, });;
			}
		}
		else {
			_case_begin_1c21994b1:;
			{
				_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1bc841586_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c219945b:;
	};
}



inline jule::Ptr<_1bc8108a7_Data> _1bc8359cb_evalAny(_1bc832c5e_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1c219b062:;
			{
				return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c4679_primBool, });;
			}
		}
		else {
			_case_begin_1c219ae30:;
			{
				_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("any", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c219ad86:;
	};
}



inline jule::Ptr<_1bc8108a7_Data> _1bc835c62_evalBool(_1bc832c5e_binaryEval* _self_) {
	if ((!(_1bc83391e_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(54LLU) || _match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1c219c7e4:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1c219d55e:;
			{
				_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1bc841586_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c219d509:;
	};
}



inline jule::Ptr<_1bc8108a7_Data> _1bc835ee8_evalStr(_1bc832c5e_binaryEval* _self_) {
	jule::Str _375113_rk = _1bc841586_Str((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((!_375113_rk.equal("str", 3))) {
		_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_375113_rk, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1c21a3036:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1c21a309c:;
			{
				return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c4679_primBool, });;
			}
		}
		else {
			_case_begin_1c21a11bb:;
			{
				_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("str", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c21a1e25:;
	};
}



inline void _1bc8361e6_setTypeToGreater(_1bc832c5e_binaryEval* _self_) {
	jule::Ptr<_1bc848c97_Prim> _37769_lp = _1bc84381e_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	jule::Ptr<_1bc848c97_Prim> _37779_rp = _1bc84381e_Prim((*((*(_self_))._field_r))._field_Kind.ptr());;
	if (_1bc81127b_IsConst((*(_self_))._field_l.ptr())) {
		if ((!(_1bc81127b_IsConst((*(_self_))._field_r.ptr())))) {
			(*((*(_self_))._field_l))._field_Kind=(*((*(_self_))._field_r))._field_Kind;
			(*((*((*(_self_))._field_l))._field_Constant))._field_Kind=(*(_37779_rp))._field_Kind;
			return;;
		};
		goto _julec_label_1c21a78cb;
	};
	if (_1bc81127b_IsConst((*(_self_))._field_r.ptr())) {
		(*((*((*(_self_))._field_r))._field_Constant))._field_Kind=(*(_37769_lp))._field_Kind;
		return;;
	};
	_julec_label_1c21a78cb:;
	if (((*((*(_self_))._field_l))._field_untyped && (!((*((*(_self_))._field_r))._field_untyped)))) {
		(*((*(_self_))._field_l))._field_Kind=(*((*(_self_))._field_r))._field_Kind;
		if (_1bc81127b_IsConst((*(_self_))._field_l.ptr())) {
			(*((*((*(_self_))._field_l))._field_Constant))._field_Kind=(*(_37779_rp))._field_Kind;
		};
		(*((*(_self_))._field_l))._field_untyped=false;
		return;;
	} else if (((!((*((*(_self_))._field_l))._field_untyped)) && (*((*(_self_))._field_r))._field_untyped)) {
		return;;
	};
	if (_230d560dc_IsGreater((*(_37779_rp))._field_Kind, (*(_37769_lp))._field_Kind)) {
		(*((*(_self_))._field_l))._field_Kind=(*((*(_self_))._field_r))._field_Kind;
		if (_1bc81127b_IsConst((*(_self_))._field_l.ptr())) {
			(*((*((*(_self_))._field_l))._field_Constant))._field_Kind=(*(_37779_rp))._field_Kind;
		};
	};
}



inline void _1bc83649e_checkModData(_1bc832c5e_binaryEval* _self_, jule::Ptr<_1bc8108a7_Data>* _380936_d) {
	if ((!(_1bc81127b_IsConst((*(_380936_d)).ptr())))) {
		if (((_1bc84381e_Prim((*((*(_380936_d))))._field_Kind.ptr()) == nullptr) || (!(_230d577a3_IsInt((*(_1bc84381e_Prim((*((*(_380936_d))))._field_Kind.ptr())))._field_Kind))))) {
			_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1bc7e6aad_sigAssignable(jule::Str::lit("i64", 3), _380936_d)) {
			_case_begin_1c21b0571:;
			{
				_230d5b301_SetI64((*((*(_380936_d))))._field_Constant.ptr(), static_cast<jule::I64>(_230d5aa2b_AsI64((*((*(_380936_d))))._field_Constant.ptr())));
			}
		}
		else if (_1bc7e6e76_unsigAssignable(jule::Str::lit("u64", 3), _380936_d)) {
			_case_begin_1c21b0263:;
			{
				_230d5b5a9_SetU64((*((*(_380936_d))))._field_Constant.ptr(), static_cast<jule::U64>(_230d5acb2_AsU64((*((*(_380936_d))))._field_Constant.ptr())));
			}
		}
		else {
			_case_begin_1c21b01ec:;
			{
				_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c21b0197:;
	};
}



inline void _1bc83669c_mod(_1bc832c5e_binaryEval* _self_) {
	_1bc83649e_checkModData(_self_, &((*(_self_))._field_l));
	_1bc83649e_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _1bc836a98_numbersAreCompatibile(_1bc832c5e_binaryEval* _self_, jule::Str* _383137_lk, jule::Str* _383147_rk) {
	if ((!(_230d57dad_IsNum((*(_383147_rk)))))) {
		return false;;
	};
	if ((_1bc81127b_IsConst((*(_self_))._field_l.ptr()) && (*((*(_self_))._field_l))._field_untyped)) {
		return true;;
	};
	if ((*(_383137_lk)).equal("f32", 3)) {
		if ((_1bc81127b_IsConst((*(_self_))._field_r.ptr()) && (*((*(_self_))._field_r))._field_untyped)) {
			return _1bc7e6739_floatAssignable(_383137_lk, &((*(_self_))._field_r));;
		};
		return (*(_383147_rk)).equal("f32", 3);;
	};
	if ((*(_383137_lk)).equal("f64", 3)) {
		if ((_1bc81127b_IsConst((*(_self_))._field_r.ptr()) && (*((*(_self_))._field_r))._field_untyped)) {
			return _1bc7e6739_floatAssignable(_383137_lk, &((*(_self_))._field_r));;
		};
		return (*(_383147_rk)).equal("f64", 3);;
	};
	if ((_1bc81127b_IsConst((*(_self_))._field_r.ptr()) && (*((*(_self_))._field_r))._field_untyped)) {
		return _1bc7e72ea_intAssignable((*(_383137_lk)), &((*(_self_))._field_r));;
	};
	return ((*(_383137_lk)) == (*(_383147_rk)));;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc836d2e_evalFloat(_1bc832c5e_binaryEval* _self_) {
	jule::Str _38579_lk = (*(_1bc84381e_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _38589_rk = (*(_1bc84381e_Prim((*((*(_self_))._field_r))._field_Kind.ptr())))._field_Kind;;
	if ((!(_1bc836a98_numbersAreCompatibile(_self_, &(_38579_lk), &(_38589_rk))))) {
		_1bc790749_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*((*(_self_))._field_l))._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1c21ba636:;
			{
				if (((!(_1bc81127b_IsConst((*(_self_))._field_l.ptr()))) || (!(_1bc7e72ea_intAssignable(jule::Str::lit("i64", 3), &((*(_self_))._field_l)))))) {
					_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38579_lk, &__jule_any_type4),jule::Any(_38589_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				if (((!(_1bc81127b_IsConst((*(_self_))._field_r.ptr()))) || (!(_1bc7e72ea_intAssignable(jule::Str::lit("u64", 3), &((*(_self_))._field_r)))))) {
					_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38579_lk, &__jule_any_type4),jule::Any(_38589_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				_230d5b301_SetI64((*((*(_self_))._field_l))._field_Constant.ptr(), static_cast<jule::I64>(_230d5aa2b_AsI64((*((*(_self_))._field_l))._field_Constant.ptr())));
				_230d5b5a9_SetU64((*((*(_self_))._field_r))._field_Constant.ptr(), static_cast<jule::U64>(_230d5acb2_AsU64((*((*(_self_))._field_r))._field_Constant.ptr())));
				if ((!(_1bc83a607_isOkForShifting(&((*(_self_))._field_r))))) {
					_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1c21ba5c0:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1c21babca:;
			{
				_1bc8361e6_setTypeToGreater(_self_);
				return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c4679_primBool, });;
			}
		}
		_match_end_1c21bab75:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1c21b94d1:;
			{
				_1bc8361e6_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1c21c31bb:;
			{
				if ((!(_230d577a3_IsInt(_38589_rk)))) {
					_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38579_lk, &__jule_any_type4),jule::Any(_38589_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				_1bc83669c_mod(_self_);
				_1bc8361e6_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_1c21c24c8:;
			{
				_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for floating-point type(s)", 52), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c21c2473:;
	};
}



inline jule::Ptr<_1bc8108a7_Data> _1bc8370b5_evalInt(_1bc832c5e_binaryEval* _self_) {
	jule::Str _39219_lk = (*(_1bc84381e_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _39229_rk = (*(_1bc84381e_Prim((*((*(_self_))._field_r))._field_Kind.ptr())))._field_Kind;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1c21c690b:;
			{
				if (((!(_230d577a3_IsInt(_39219_lk))) || (!(_230d577a3_IsInt(_39229_rk))))) {
					_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_39219_lk, &__jule_any_type4),jule::Any(_39229_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				if ((!(_1bc83a607_isOkForShifting(&((*(_self_))._field_r))))) {
					_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1c21c6c5d:;
	};
	if ((!(_1bc836a98_numbersAreCompatibile(_self_, &(_39219_lk), &(_39229_rk))))) {
		_1bc790749_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*((*(_self_))._field_l))._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1c21ca3b0:;
			{
				return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c4679_primBool, });;
			}
		}
		_match_end_1c21ca349:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(65LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1c21c6db2:;
			{
				_1bc8361e6_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1c21cc55a:;
			{
				_1bc83669c_mod(_self_);
				_1bc8361e6_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1c21cb59d:;
			{
				_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for integer type(s)", 45), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c21cb548:;
	};
}



inline jule::Ptr<_1bc8108a7_Data> _1bc83734b_evalPrim(_1bc832c5e_binaryEval* _self_) {
	jule::Ptr<_1bc848c97_Prim> _39789_prim = _1bc84381e_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		
		if (_1bc84be98_IsBool(_39789_prim.ptr())) {
			_case_begin_1c21ce99c:;
			{
				return _1bc835c62_evalBool(_self_);;
			}
		}
		else if (_1bc84c22e_IsStr(_39789_prim.ptr())) {
			_case_begin_1c21cea24:;
			{
				return _1bc835ee8_evalStr(_self_);;
			}
		}
		_match_end_1c21ce8e2:;
	};
	if ((_1bc84381e_Prim((*((*(_self_))._field_r))._field_Kind.ptr()) == nullptr)) {
		_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1bc8490d8_Str(_39789_prim.ptr()), &__jule_any_type4),jule::Any(_1bc841586_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		
		if (_230d57ae4_IsFloat((*(_39789_prim))._field_Kind)) {
			_case_begin_1c21d23a6:;
			{
				return _1bc836d2e_evalFloat(_self_);;
			}
		}
		else if (_230d577a3_IsInt((*(_39789_prim))._field_Kind)) {
			_case_begin_1c21d242d:;
			{
				return _1bc8370b5_evalInt(_self_);;
			}
		}
		else {
			_case_begin_1c21d230c:;
			{
				return nullptr;;
			}
		}
		_match_end_1c21ceace:;
	};
}



inline void _1bc837549_checkSpecialCases(_1bc832c5e_binaryEval* _self_) {
	if (((!(_1bc8427b8_Comparable((*((*(_self_))._field_l))._field_Kind.ptr()))) && (!(_1bc84229b_IsNil((*((*(_self_))._field_r))._field_Kind.ptr()))))) {
		_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
	} else if (((!(_1bc8427b8_Comparable((*((*(_self_))._field_r))._field_Kind.ptr()))) && (!(_1bc84229b_IsNil((*((*(_self_))._field_l))._field_Kind.ptr()))))) {
		_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
	};
}



inline jule::Ptr<_1bc8108a7_Data> _1bc8377d0_evalOp(_1bc832c5e_binaryEval* _self_) {
	_1bc837549_checkSpecialCases(_self_);
	{
		
		if (_1bc842532_Void((*((*(_self_))._field_l))._field_Kind.ptr())) {
			_case_begin_1c21d7367:;
			{
				_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("void", 4), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		else if ((_1bc8471d5_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c21d8d4c:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1c21d8db3;
			}
		}
		else if ((_1bc8471d5_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c21d8db3:;
			{
				return _1bc833e3b_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_1bc84381e_Prim((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr) && _1bc84c4b5_IsAny(_1bc84381e_Prim((*((*(_self_))._field_r))._field_Kind.ptr()).ptr()))) {
			_case_begin_1c21d8eb2:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1c21d9028;
			}
		}
		else if (_1bc84229b_IsNil((*((*(_self_))._field_r))._field_Kind.ptr())) {
			_case_begin_1c21d9028:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1c21d908e;
			}
		}
		else if (_1bc84229b_IsNil((*((*(_self_))._field_l))._field_Kind.ptr())) {
			_case_begin_1c21d908e:;
			{
				return _1bc8341c2_evalNil(_self_);;
			}
		}
		else if (((_1bc84381e_Prim((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr) && _1bc84c4b5_IsAny(_1bc84381e_Prim((*((*(_self_))._field_l))._field_Kind.ptr()).ptr()))) {
			_case_begin_1c21d9105:;
			{
				return _1bc8359cb_evalAny(_self_);;
			}
		}
		else if ((_1bc844358_TypeEnum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c21d916b:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1c21d91d2;
			}
		}
		else if ((_1bc844358_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c21d91d2:;
			{
				return _1bc8346de_evalTypeEnum(_self_);;
			}
		}
		else if ((_1bc8440c2_Enum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c21d9248:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1c21d92ae;
			}
		}
		else if ((_1bc8440c2_Enum((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c21d92ae:;
			{
				return _1bc834458_evalEnum(_self_);;
			}
		}
		else if ((_1bc843aa5_Sptr((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c21d9325:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1c21d938b;
			}
		}
		else if ((_1bc843aa5_Sptr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c21d938b:;
			{
				return _1bc834975_evalSptr(_self_);;
			}
		}
		else if ((_1bc843d3b_Ptr((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c21d9402:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1c21d9468;
			}
		}
		else if ((_1bc843d3b_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c21d9468:;
			{
				return _1bc834c0b_evalPtr(_self_);;
			}
		}
		else if ((_1bc8445de_Arr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c21d94ce:;
			{
				return _1bc834e92_evalArr(_self_);;
			}
		}
		else if ((_1bc844875_Slc((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c21d9545:;
			{
				return _1bc835228_evalSlc(_self_);;
			}
		}
		else if ((_1bc845128_Trait((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c21d95ab:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1c21d9622;
			}
		}
		else if ((_1bc845128_Trait((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c21d9622:;
			{
				return _1bc835745_evalTrait(_self_);;
			}
		}
		else if ((_1bc844d92_Struct((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c21d9688:;
			{
				return _1bc8354ae_evalStruct(_self_);;
			}
		}
		else if ((_1bc84381e_Prim((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c21d96ee:;
			{
				return _1bc83734b_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_1c21d77a7:;
			{
				_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1bc841586_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c21d7752:;
	};
}



inline void _1bc837a88_evalConst(_1bc832c5e_binaryEval* _self_, jule::Ptr<_1bc8108a7_Data>* _406933_d) {
	{
		
		if (((*(_406933_d)) == nullptr) || ((*((*(_self_))._field_l))._field_Model == nullptr) || ((*((*(_self_))._field_r))._field_Model == nullptr)) {
			_case_begin_1c21ec1d4:;
			{
				return;;
			}
		}
		else if ((!(_1bc81127b_IsConst((*(_self_))._field_l.ptr()))) || (!(_1bc81127b_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_1c21ec767:;
			{
				(*((*(_406933_d))))._field_Constant=nullptr;
				(*((*(_406933_d))))._field_untyped=false;
				return;;
			}
		}
		_match_end_1c21ec0e6:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1c21ee11a:;
			{
				(*((*(_406933_d))))._field_Constant=static__230d58d59_NewBool(_230d5de3b_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1c21ee181:;
			{
				(*((*(_406933_d))))._field_Constant=static__230d58d59_NewBool((!(_230d5de3b_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1c21eed96:;
			{
				(*((*(_406933_d))))._field_Constant=static__230d58d59_NewBool(_230d5daea_Or((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1c21eee0c:;
			{
				(*((*(_406933_d))))._field_Constant=static__230d58d59_NewBool(_230d5d7a9_And((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1c21eee73:;
			{
				(*((*(_406933_d))))._field_Constant=static__230d58d59_NewBool(_230d5e90e_Gt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1c21eeed9:;
			{
				(*((*(_406933_d))))._field_Constant=static__230d58d59_NewBool(_230d5e27c_Lt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1c2200050:;
			{
				(*((*(_406933_d))))._field_Constant=static__230d58d59_NewBool(_230d5ec50_GtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1c22000b6:;
			{
				(*((*(_406933_d))))._field_Constant=static__230d58d59_NewBool(_230d5e5bd_LtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1c220013d:;
			{
				_230d60091_Add((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_406933_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1c22001b5:;
			{
				_230d603d2_Sub((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_406933_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1c220023c:;
			{
				_230d60723_Mul((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_406933_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1c22002b4:;
			{
				jule::Bool _410913_ok = _230d60a64_Div((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_410913_ok)) && (_230d5b048_AsF64((*((*(_self_))._field_r))._field_Constant.ptr()) == 0LL))) {
					_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*((*(_406933_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
				jule::Ptr<_1bc848c97_Prim> _411417_prim = _1bc84381e_Prim((*((*(_406933_d))))._field_Kind.ptr());;
				{
					
					if (_230d571cb_IsSigInt((*(_411417_prim))._field_Kind)) {
						_case_begin_1c2210da7:;
						{
							_230d5b301_SetI64((*((*(_406933_d))))._field_Constant.ptr(), static_cast<jule::I64>(_230d5aa2b_AsI64((*((*(_406933_d))))._field_Constant.ptr())));
						}
					}
					else if (_230d574d9_IsUnsigInt((*(_411417_prim))._field_Kind)) {
						_case_begin_1c2210e2e:;
						{
							_230d5b5a9_SetU64((*((*(_406933_d))))._field_Constant.ptr(), static_cast<jule::U64>(_230d5acb2_AsU64((*((*(_406933_d))))._field_Constant.ptr())));
						}
					}
					_match_end_1c2210cec:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1c220033b:;
			{
				jule::Bool _412213_ok = _230d60da5_Mod((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_412213_ok)) && (_230d5b048_AsF64((*((*(_self_))._field_r))._field_Constant.ptr()) == 0LL))) {
					_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*((*(_406933_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1c22003b3:;
			{
				_230d61537_BitwiseOr((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_406933_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1c220043a:;
			{
				_230d611e6_BitwiseAnd((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_406933_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1c22004b2:;
			{
				_230d61878_Xor((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_406933_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1c2200539:;
			{
				_230d61bb9_Lshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_406933_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1c22005b1:;
			{
				_230d6200a_Rshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_406933_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		_match_end_1c21ee0b5:;
	};
	(*((*(_406933_d))))._field_Model=jule::Any((*((*(_406933_d))))._field_Constant, &__jule_any_type19);
	_1bc83bbe1_applyCastModelByEnum(_406933_d, _1bc8440c2_Enum((*((*(_406933_d))))._field_Kind.ptr()));
}



inline void _1bc837d41_checkData(_1bc832c5e_binaryEval* _self_, jule::Ptr<_1bc8108a7_Data>* _414733_d) {
	jule::Ptr<_1ece1de96_FnIns> _41489_f = _1bc844b0b_Fn((*((*(_414733_d))))._field_Kind.ptr());;
	if ((((_41489_f != nullptr) && ((*(_41489_f))._field_Decl != nullptr)) && _1ece1b79b_IsMethod((*(_41489_f))._field_Decl.ptr()))) {
		_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("invalid expression used for binary operation", 44), jule::Slice<jule::Any>());
	};
}



inline void _1bc83803e_checkDatas(_1bc832c5e_binaryEval* _self_) {
	_1bc837d41_checkData(_self_, &((*(_self_))._field_l));
	_1bc837d41_checkData(_self_, &((*(_self_))._field_r));
}



inline void _1bc8382e7_setModel(_1bc832c5e_binaryEval* _self_, jule::Ptr<_1bc8108a7_Data>* _415932_d) {
	if (_1bc81127b_IsConst((*(_415932_d)).ptr())) {
		if (((_1bc81127b_IsConst((*(_self_))._field_l.ptr()) && _1bc81127b_IsConst((*(_self_))._field_r.ptr())) || (((*((*(_self_))._field_l))._field_Model == nullptr) && ((*((*(_self_))._field_r))._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_1bc8108a7_Data> _416813_l;;
	jule::Ptr<_1bc8108a7_Data> _416820_r;;
	({
		jule::Ptr<_1bc8108a7_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_1bc8108a7_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_416813_l = ___jule_assign_arg;
		_416820_r = _1___jule_assign_arg;
	});
	if ((!(_1bc8115bc_GoodOperand(_416813_l.ptr(), &(_416820_r))))) {
		std::swap(_416813_l, _416820_r);
	};
	(*((*(_415932_d))))._field_Model=jule::Any(jule::new_ptr<_1ece0d282_BinaryExprModel>(_1ece0d282_BinaryExprModel{._field_Left=jule::new_ptr<_1ece0cc87_OperandExprModel>(_1ece0cc87_OperandExprModel{._field_Kind=(*(_416813_l))._field_Kind, ._field_Model=(*(_416813_l))._field_Model}), ._field_Right=jule::new_ptr<_1ece0cc87_OperandExprModel>(_1ece0cc87_OperandExprModel{._field_Kind=(*(_416820_r))._field_Kind, ._field_Model=(*(_416820_r))._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type111);
}



inline void _1bc8385a0_postEval(_1bc832c5e_binaryEval* _self_, jule::Ptr<_1bc8108a7_Data>* _418632_d) {
	(*((*(_418632_d))))._field_Lvalue=false;
	_1bc8382e7_setModel(_self_, _418632_d);
}



inline jule::Ptr<_1bc8108a7_Data> _1bc83899b_solveExplicit(_1bc832c5e_binaryEval* _self_, jule::Ptr<_1bc8108a7_Data>* _419137_l, jule::Ptr<_1bc8108a7_Data>* _419152_r) {
	({
		jule::Ptr<_1bc8108a7_Data> ___jule_assign_arg = (*(_419137_l));
		jule::Ptr<_1bc8108a7_Data> _1___jule_assign_arg = (*(_419152_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1bc83803e_checkDatas(_self_);
	jule::Ptr<_1bc8108a7_Data> _419613_d = _1bc8377d0_evalOp(_self_);;
	({
		jule::Ptr<_1bc8108a7_Data> ___jule_assign_arg = (*(_419137_l));
		jule::Ptr<_1bc8108a7_Data> _1___jule_assign_arg = (*(_419152_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1bc837a88_evalConst(_self_, &(_419613_d));
	if ((_419613_d != nullptr)) {
		(*(_419613_d))._field_Mutable=true;
		_1bc8385a0_postEval(_self_, &(_419613_d));
	};
	return _419613_d;;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc838cdc_eval(_1bc832c5e_binaryEval* _self_, jule::Ptr<_1bc5a2d97_BinaryExpr>* _421128_op) {
	if (((*((*((*(_421128_op))))._field_Op))._field_Id == static_cast<jule::U64>(71LLU))) {
		_1bc812aeb_pushErr((*(_self_))._field_e.ptr(), (*((*(_421128_op))))._field_Op, jule::Str::lit("assignments not available for expressions", 41), jule::Slice<jule::Any>());
		_1bc812e5e_pushSuggestion((*(_self_))._field_e.ptr(), jule::Str::lit("use clear imperative approach, comes relevant assignment statement before the expression", 88), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1bc8108a7_Data> _421813_l = _1bc8304ba_evalExpr1((*(_self_))._field_e, (*((*(_421128_op))))._field_Left);;
	if (((_421813_l == nullptr) || ((*(_421813_l))._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1bc8411bd_TypeKind> _422313_prefix = (*((*(_self_))._field_e))._field_prefix;;
	(*((*(_self_))._field_e))._field_prefix=(*(_421813_l))._field_Kind;
	__JULE_DEFER({
		(*((*(_self_))._field_e))._field_prefix=_422313_prefix;
	});;
	jule::Ptr<_1bc8108a7_Data> _422613_r = _1bc8304ba_evalExpr1((*(_self_))._field_e, (*((*(_421128_op))))._field_Right);;
	if (((_422613_r == nullptr) || ((*(_422613_r))._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*((*(_421128_op))))._field_Op;
	jule::Ptr<_1bc8108a7_Data> _423313_d = _1bc83899b_solveExplicit(_self_, &(_421813_l), &(_422613_r));;
	if ((((_423313_d != nullptr) && (*(_421813_l))._field_IsRune) && (*(_422613_r))._field_IsRune)) {
		(*(_423313_d))._field_IsRune=true;
	};
	return _423313_d;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc832c5e_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc83e7d7_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc8403cb_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1bc841586_Str(_1bc8411bd_TypeKind* _self_) {
	if (_1bc84229b_IsNil(_self_)) {
		return jule::Str::lit("nil", 3);;
	};
	_2096a4489_StrBuilder _7413_kind = static__2096a48da_New(16LL);;
	if ((*(_self_))._field_Variadic) {
		_2096a4e4b_WriteStr(&_7413_kind, jule::Str::lit("...", 3));
	};
	if (_1bc842015_Binded(_self_)) {
		_2096a4e4b_WriteStr(&_7413_kind, jule::Str::lit("cpp.", 4));
		_2096a4e4b_WriteStr(&_7413_kind, (*(_self_))._field_BindIdent);
	} else {
		_2096a4e4b_WriteStr(&_7413_kind, _1bc840c17_Kind_mptr_data[((*(_self_))._field_Kind).type_offset]._1bc840772_Str((*(_self_))._field_Kind));
	};
	return _2096a5743_Str(&_7413_kind);;
}



inline jule::Bool _1bc8418c7_Equal(jule::Ptr<_1bc8411bd_TypeKind> _self_, jule::Ptr<_1bc8411bd_TypeKind> _9021_other) {
	if (_1bc84229b_IsNil(_self_.ptr())) {
		return _1bc84229b_IsNil(_9021_other.ptr());;
	};
	if (_1bc842015_Binded(_self_.ptr())) {
		return (_1bc842015_Binded(_9021_other.ptr()) && ((*(_self_))._field_BindIdent == (*(_9021_other))._field_BindIdent));;
	};
	return _1bc840c17_Kind_mptr_data[((*(_self_))._field_Kind).type_offset]._1bc840ab3_Equal((*(_self_))._field_Kind, _9021_other);;
}



inline jule::Bool _1bc842015_Binded(_1bc8411bd_TypeKind* _self_) {
	return ((*(_self_))._field_BindIdent.len() != 0LL);;
}



inline jule::Bool _1bc84229b_IsNil(_1bc8411bd_TypeKind* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _1bc842532_Void(_1bc8411bd_TypeKind* _self_) {
	jule::Ptr<_1bc848c97_Prim> _1109_prim = _1bc84381e_Prim(&(*(_self_)));;
	return ((_1109_prim != nullptr) && (*(_1109_prim))._field_Kind.equal("void", 4));;
}



inline jule::Bool _1bc8427b8_Comparable(_1bc8411bd_TypeKind* _self_) {
	{
		_1bc8411bd_TypeKind* _11717__self = _self_;;
		if ((_1bc844d92_Struct(_11717__self) != nullptr)) {
			return (*(_1bc844d92_Struct(_11717__self)))._field_Comparable;;
		};
		return (((_1bc8453ae_Map(_11717__self) == nullptr) && (_1bc844875_Slc(_11717__self) == nullptr)) && (_1bc844b0b_Fn(_11717__self) == nullptr));;
	};
}



inline jule::Bool _1bc842a4e_Mutable(_1bc8411bd_TypeKind* _self_) {
	{
		_1bc8411bd_TypeKind* _12817__self = _self_;;
		if ((_1bc844d92_Struct(_12817__self) != nullptr)) {
			return (*(_1bc844d92_Struct(_12817__self)))._field_Mutable;;
		};
		if ((_1bc845128_Trait(_12817__self) != nullptr)) {
			return true;;
		};
		if ((_1bc84381e_Prim(_12817__self) != nullptr)) {
			jule::Ptr<_1bc848c97_Prim> _13617_p = _1bc84381e_Prim(_12817__self);;
			return _1bc84c4b5_IsAny(_13617_p.ptr());;
		};
		if ((_1bc8445de_Arr(_12817__self) != nullptr)) {
			return _1bc842a4e_Mutable((*(_1bc8445de_Arr(_12817__self)))._field_Elem.ptr());;
		};
		return (((_1bc844875_Slc(_12817__self) != nullptr) || (_1bc843d3b_Ptr(_12817__self) != nullptr)) || (_1bc843aa5_Sptr(_12817__self) != nullptr));;
	};
}



inline jule::Bool _1bc842cd5_Ordered(_1bc8411bd_TypeKind* _self_) {
	{
		_1bc8411bd_TypeKind* _15117__self = _self_;;
		jule::Ptr<_1bc848c97_Prim> _15213_prim = _1bc84381e_Prim(_15117__self);;
		if ((_15213_prim != nullptr)) {
			return (_230d57dad_IsNum((*(_15213_prim))._field_Kind) || _1bc84c22e_IsStr(_15213_prim.ptr()));;
		};
		if ((_1bc843d3b_Ptr(_15117__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_1bc5be0b1_StructIns> _15913_s = _1bc844d92_Struct(_15117__self);;
		if ((_15913_s != nullptr)) {
			return (((((*(_15913_s))._field_Operators._field_Gt != nullptr) && ((*(_15913_s))._field_Operators._field_GtEq != nullptr)) && ((*(_15913_s))._field_Operators._field_Lt != nullptr)) && ((*(_15913_s))._field_Operators._field_LtEq != nullptr));;
		};
		jule::Ptr<_1bc71624c_Enum> _16613_enm = _1bc8440c2_Enum(_15117__self);;
		if ((_16613_enm != nullptr)) {
			return _230d57dad_IsNum(_1bc841586_Str((*((*(_16613_enm))._field_Kind))._field_Kind.ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _1bc84306b_NilCompatible(_1bc8411bd_TypeKind* _self_) {
	{
		_1bc8411bd_TypeKind* _17717__self = _self_;;
		jule::Ptr<_1bc848c97_Prim> _17913_prim = _1bc84381e_Prim(_17717__self);;
		if (((_17913_prim != nullptr) && _1bc84c4b5_IsAny(_17913_prim.ptr()))) {
			return true;;
		};
		return (((((((_1bc84229b_IsNil(_17717__self) || (_1bc844b0b_Fn(_17717__self) != nullptr)) || (_1bc843aa5_Sptr(_17717__self) != nullptr)) || (_1bc843d3b_Ptr(_17717__self) != nullptr)) || (_1bc845128_Trait(_17717__self) != nullptr)) || (_1bc844875_Slc(_17717__self) != nullptr)) || (_1bc8453ae_Map(_17717__self) != nullptr)) || (_1bc844358_TypeEnum(_17717__self) != nullptr));;
	};
}



inline jule::Bool _1bc843302_PerformsRC(_1bc8411bd_TypeKind* _self_) {
	{
		_1bc8411bd_TypeKind* _19817__self = _self_;;
		jule::Ptr<_1bc848c97_Prim> _19913_prim = _1bc84381e_Prim(_19817__self);;
		if ((_19913_prim != nullptr)) {
			return (_1bc84c4b5_IsAny(_19913_prim.ptr()) || _1bc84c22e_IsStr(_19913_prim.ptr()));;
		};
		return (((_1bc843aa5_Sptr(_19817__self) != nullptr) || (_1bc844875_Slc(_19817__self) != nullptr)) || (_1bc845128_Trait(_19817__self) != nullptr));;
	};
}



inline jule::Bool _1bc843588_Variadicable(_1bc8411bd_TypeKind* _self_) {
	{
		_1bc8411bd_TypeKind* _21017__self = _self_;;
		return (_1bc844875_Slc(_21017__self) != nullptr);;
	};
}



inline jule::Ptr<_1bc848c97_Prim> _1bc84381e_Prim(_1bc8411bd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 20)) {
			_case_begin_1c09cb0ad:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc848c97_Prim>(20);;
			}
		}
		else {
			_case_begin_1c09cb586:;
			{
				return nullptr;;
			}
		}
		_match_end_1c09cb531:;
	};
}



inline jule::Ptr<_1bc84c7c3_Sptr> _1bc843aa5_Sptr(_1bc8411bd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 21)) {
			_case_begin_1c09cbd8e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc84c7c3_Sptr>(21);;
			}
		}
		else {
			_case_begin_1c09cc433:;
			{
				return nullptr;;
			}
		}
		_match_end_1c09cc3cd:;
	};
}



inline jule::Ptr<_1bc85108a_Ptr> _1bc843d3b_Ptr(_1bc8411bd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 26)) {
			_case_begin_1c09cc4bb:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc85108a_Ptr>(26);;
			}
		}
		else {
			_case_begin_1c09cd137:;
			{
				return nullptr;;
			}
		}
		_match_end_1c09cd0d2:;
	};
}



inline jule::Ptr<_1bc71624c_Enum> _1bc8440c2_Enum(_1bc8411bd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1c09cd1c0:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc71624c_Enum>(3);;
			}
		}
		else {
			_case_begin_1c09cdd3b:;
			{
				return nullptr;;
			}
		}
		_match_end_1c09cdcd6:;
	};
}



inline jule::Ptr<_1bc717957_TypeEnum> _1bc844358_TypeEnum(_1bc8411bd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1c09cddc4:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc717957_TypeEnum>(4);;
			}
		}
		else {
			_case_begin_1c09cea40:;
			{
				return nullptr;;
			}
		}
		_match_end_1c09ce9da:;
	};
}



inline jule::Ptr<_1bc8505b7_Arr> _1bc8445de_Arr(_1bc8411bd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 25)) {
			_case_begin_1c09ceac8:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc8505b7_Arr>(25);;
			}
		}
		else {
			_case_begin_1c09d0744:;
			{
				return nullptr;;
			}
		}
		_match_end_1c09d06de:;
	};
}



inline jule::Ptr<_1bc84d296_Slc> _1bc844875_Slc(_1bc8411bd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 22)) {
			_case_begin_1c09d07cc:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc84d296_Slc>(22);;
			}
		}
		else {
			_case_begin_1c09d1448:;
			{
				return nullptr;;
			}
		}
		_match_end_1c09d13e3:;
	};
}



inline jule::Ptr<_1ece1de96_FnIns> _1bc844b0b_Fn(_1bc8411bd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 1)) {
			_case_begin_1c09d14d1:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ece1de96_FnIns>(1);;
			}
		}
		else {
			_case_begin_1c09d214c:;
			{
				return nullptr;;
			}
		}
		_match_end_1c09d20e7:;
	};
}



inline jule::Ptr<_1bc5be0b1_StructIns> _1bc844d92_Struct(_1bc8411bd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1c09d21d5:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc5be0b1_StructIns>(0);;
			}
		}
		else {
			_case_begin_1c09d2d51:;
			{
				return nullptr;;
			}
		}
		_match_end_1c09d2ceb:;
	};
}



inline jule::Ptr<_1bc713a41_Trait> _1bc845128_Trait(_1bc8411bd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 2)) {
			_case_begin_1c09d2dd9:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc713a41_Trait>(2);;
			}
		}
		else {
			_case_begin_1c09d3a55:;
			{
				return nullptr;;
			}
		}
		_match_end_1c09d3a00:;
	};
}



inline jule::Ptr<_1bc84e93a_Map> _1bc8453ae_Map(_1bc8411bd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 24)) {
			_case_begin_1c09d3add:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc84e93a_Map>(24);;
			}
		}
		else {
			_case_begin_1c09d4759:;
			{
				return nullptr;;
			}
		}
		_match_end_1c09d4704:;
	};
}



inline jule::Ptr<_1bc84dd8a_Tuple> _1bc845645_Tup(_1bc8411bd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 23)) {
			_case_begin_1c09d47e2:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc84dd8a_Tuple>(23);;
			}
		}
		else {
			_case_begin_1c09d545d:;
			{
				return nullptr;;
			}
		}
		_match_end_1c09d5408:;
	};
}



inline jule::Bool _1bc8458cb_comptime(_1bc8411bd_TypeKind* _self_) {
	return (((((((((((((_1bc846e4e_comptimeTypeInfos(_self_) != nullptr) || (_1bc8471d5_comptimeTypeInfo(_self_) != nullptr)) || (_1bc845b62_comptimeStructFields(_self_) != nullptr)) || (_1bc845de8_comptimeStructField(_self_) != nullptr)) || (_1bc84617e_comptimeEnumFields(_self_) != nullptr)) || (_1bc846415_comptimeEnumField(_self_) != nullptr)) || (_1bc84746b_comptimeStatics(_self_) != nullptr)) || (_1bc847702_comptimeStatic(_self_) != nullptr)) || (_1bc84669b_comptimeParams(_self_) != nullptr)) || (_1bc846932_comptimeParam(_self_) != nullptr)) || (_1bc847988_comptimeValue(_self_) != nullptr)) || (_1bc847ea5_comptimeFiles(_self_) != nullptr)) || (_1bc847c1e_comptimeFile(_self_) != nullptr));;
}



inline jule::Ptr<_1bc71d243_comptimeStructFields> _1bc845b62_comptimeStructFields(_1bc8411bd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 7)) {
			_case_begin_1c09d611d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc71d243_comptimeStructFields>(7);;
			}
		}
		else {
			_case_begin_1c09d9a8e:;
			{
				return nullptr;;
			}
		}
		_match_end_1c09d9a39:;
	};
}



inline jule::Ptr<_1bc71b582_comptimeStructField> _1bc845de8_comptimeStructField(_1bc8411bd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 6)) {
			_case_begin_1c09da067:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc71b582_comptimeStructField>(6);;
			}
		}
		else {
			_case_begin_1c09da441:;
			{
				return nullptr;;
			}
		}
		_match_end_1c09da3db:;
	};
}



inline jule::Ptr<_1bc723e91_comptimeEnumFields> _1bc84617e_comptimeEnumFields(_1bc8411bd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 11)) {
			_case_begin_1c09dac6b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc723e91_comptimeEnumFields>(11);;
			}
		}
		else {
			_case_begin_1c09db145:;
			{
				return nullptr;;
			}
		}
		_match_end_1c09db0e0:;
	};
}



inline jule::Ptr<_1bc722ae9_comptimeEnumField> _1bc846415_comptimeEnumField(_1bc8411bd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 10)) {
			_case_begin_1c09db970:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc722ae9_comptimeEnumField>(10);;
			}
		}
		else {
			_case_begin_1c09dbd49:;
			{
				return nullptr;;
			}
		}
		_match_end_1c09dbce4:;
	};
}



inline jule::Ptr<_1bc727802_comptimeParams> _1bc84669b_comptimeParams(_1bc8411bd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 13)) {
			_case_begin_1c09dc674:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc727802_comptimeParams>(13);;
			}
		}
		else {
			_case_begin_1c09dca4d:;
			{
				return nullptr;;
			}
		}
		_match_end_1c09dc9e8:;
	};
}



inline jule::Ptr<_1bc72558b_comptimeParam> _1bc846932_comptimeParam(_1bc8411bd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 12)) {
			_case_begin_1c09dcad6:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc72558b_comptimeParam>(12);;
			}
		}
		else {
			_case_begin_1c09dd752:;
			{
				return nullptr;;
			}
		}
		_match_end_1c09dd6ec:;
	};
}



inline jule::Ptr<_1bc71aaae_comptimeRange> _1bc846bb8_comptimeRange(_1bc8411bd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 5)) {
			_case_begin_1c09dd7da:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc71aaae_comptimeRange>(5);;
			}
		}
		else {
			_case_begin_1c09de456:;
			{
				return nullptr;;
			}
		}
		_match_end_1c09de401:;
	};
}



inline jule::Ptr<_1bc728dec_comptimeTypeInfos> _1bc846e4e_comptimeTypeInfos(_1bc8411bd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 14)) {
			_case_begin_1c09de4de:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc728dec_comptimeTypeInfos>(14);;
			}
		}
		else {
			_case_begin_1c09e015a:;
			{
				return nullptr;;
			}
		}
		_match_end_1c09e0105:;
	};
}



inline jule::Ptr<_1bc72a4e7_comptimeTypeInfo> _1bc8471d5_comptimeTypeInfo(_1bc8411bd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 15)) {
			_case_begin_1c09e0985:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc72a4e7_comptimeTypeInfo>(15);;
			}
		}
		else {
			_case_begin_1c09e0d5e:;
			{
				return nullptr;;
			}
		}
		_match_end_1c09e0d09:;
	};
}



inline jule::Ptr<_1bc7214ee_comptimeStatics> _1bc84746b_comptimeStatics(_1bc8411bd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 9)) {
			_case_begin_1c09e1689:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc7214ee_comptimeStatics>(9);;
			}
		}
		else {
			_case_begin_1c09e1a63:;
			{
				return nullptr;;
			}
		}
		_match_end_1c09e1a0d:;
	};
}



inline jule::Ptr<_1bc71e83d_comptimeStatic> _1bc847702_comptimeStatic(_1bc8411bd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 8)) {
			_case_begin_1c09e1aeb:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc71e83d_comptimeStatic>(8);;
			}
		}
		else {
			_case_begin_1c09e2767:;
			{
				return nullptr;;
			}
		}
		_match_end_1c09e2712:;
	};
}



inline jule::Ptr<_1bc731a09_comptimeValue> _1bc847988_comptimeValue(_1bc8411bd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 16)) {
			_case_begin_1c09e2800:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc731a09_comptimeValue>(16);;
			}
		}
		else {
			_case_begin_1c09e346b:;
			{
				return nullptr;;
			}
		}
		_match_end_1c09e3416:;
	};
}



inline jule::Ptr<_1bc735953_comptimeFile> _1bc847c1e_comptimeFile(_1bc8411bd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 18)) {
			_case_begin_1c09e3504:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc735953_comptimeFile>(18);;
			}
		}
		else {
			_case_begin_1c09e4170:;
			{
				return nullptr;;
			}
		}
		_match_end_1c09e411a:;
	};
}



inline jule::Ptr<_1bc734358_comptimeFiles> _1bc847ea5_comptimeFiles(_1bc8411bd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 17)) {
			_case_begin_1c09e4208:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc734358_comptimeFiles>(17);;
			}
		}
		else {
			_case_begin_1c09e4d74:;
			{
				return nullptr;;
			}
		}
		_match_end_1c09e4d1e:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1bc8411bd_TypeKind _Src) {
	_Stream << _1bc841586_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1bc848714_checked(_1bc848390_TypeSymbol* _self_) {
	return ((*(_self_))._field_Kind != nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc848390_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1bc8490d8_Str(_1bc848c97_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1bc849429_Equal(jule::Ptr<_1bc848c97_Prim> _self_, jule::Ptr<_1bc8411bd_TypeKind> _50821_other) {
	jule::Ptr<_1bc848c97_Prim> _5099_prim = _1bc84381e_Prim(_50821_other.ptr());;
	if ((_5099_prim == nullptr)) {
		return false;;
	};
	return ((*(_self_))._field_Kind == (*(_5099_prim))._field_Kind);;
}



inline jule::Bool _1bc8498be_IsConstraint(_1bc848c97_Prim* _self_) {
	return ((((!(_1bc84c22e_IsStr(_self_))) && (!(_1bc84c4b5_IsAny(_self_)))) && (!(_1bc84be98_IsBool(_self_)))) && (!(_230d57dad_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _1bc849b55_IsI8(_1bc848c97_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i8", 2);;
}



inline jule::Bool _1bc849ddb_IsI16(_1bc848c97_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i16", 3);;
}



inline jule::Bool _1bc84a172_IsI32(_1bc848c97_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i32", 3);;
}



inline jule::Bool _1bc84a408_IsI64(_1bc848c97_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i64", 3);;
}



inline jule::Bool _1bc84a68e_IsU8(_1bc848c97_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u8", 2);;
}



inline jule::Bool _1bc84a925_IsU16(_1bc848c97_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u16", 3);;
}



inline jule::Bool _1bc84abab_IsU32(_1bc848c97_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u32", 3);;
}



inline jule::Bool _1bc84ae42_IsU64(_1bc848c97_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u64", 3);;
}



inline jule::Bool _1bc84b1c8_IsF32(_1bc848c97_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f32", 3);;
}



inline jule::Bool _1bc84b45e_IsF64(_1bc848c97_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f64", 3);;
}



inline jule::Bool _1bc84b6e5_IsInt(_1bc848c97_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("int", 3);;
}



inline jule::Bool _1bc84b97b_IsUint(_1bc848c97_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uint", 4);;
}



inline jule::Bool _1bc84bc12_IsUintptr(_1bc848c97_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uintptr", 7);;
}



inline jule::Bool _1bc84be98_IsBool(_1bc848c97_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("bool", 4);;
}



inline jule::Bool _1bc84c22e_IsStr(_1bc848c97_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("str", 3);;
}



inline jule::Bool _1bc84c4b5_IsAny(_1bc848c97_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("any", 3);;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc848c97_Prim _Src) {
	_Stream << _1bc8490d8_Str(&_Src);
	return _Stream;
}



inline jule::Str _1bc84cb47_Str(_1bc84c7c3_Sptr* _self_) {
	return (jule::Str::lit("&", 1) + _1bc841586_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1bc84ce88_Equal(jule::Ptr<_1bc84c7c3_Sptr> _self_, jule::Ptr<_1bc8411bd_TypeKind> _58521_other) {
	jule::Ptr<_1bc84c7c3_Sptr> _5869_sptr = _1bc843aa5_Sptr(_58521_other.ptr());;
	if ((_5869_sptr == nullptr)) {
		return false;;
	};
	return _1bc8418c7_Equal((*(_self_))._field_Elem, (*(_5869_sptr))._field_Elem);;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc84c7c3_Sptr _Src) {
	_Stream << _1bc84cb47_Str(&_Src);
	return _Stream;
}



inline jule::Str _1bc84d72a_Str(_1bc84d296_Slc* _self_) {
	return (jule::Str::lit("[]", 2) + _1bc841586_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1bc84da6b_Equal(jule::Ptr<_1bc84d296_Slc> _self_, jule::Ptr<_1bc8411bd_TypeKind> _60421_other) {
	jule::Ptr<_1bc84d296_Slc> _6059_slc = _1bc844875_Slc(_60421_other.ptr());;
	if ((_6059_slc == nullptr)) {
		return false;;
	};
	return _1bc8418c7_Equal((*(_self_))._field_Elem, (*(_6059_slc))._field_Elem);;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc84d296_Slc _Src) {
	_Stream << _1bc84d72a_Str(&_Src);
	return _Stream;
}



inline jule::Str _1bc84e20e_Str(_1bc84dd8a_Tuple* _self_) {
	_2096a4489_StrBuilder _62113_s = static__2096a48da_New(16LL);;
	_2096a5204_WriteByte(&_62113_s, '(');
	_2096a4e4b_WriteStr(&_62113_s, _1bc841586_Str((*(_self_))._field_Types[0LL].ptr()));
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1c0a05549:;
		if (it != expr_end) {
			jule::Ptr<_1bc8411bd_TypeKind> *_62416_t = it;
			{
				_2096a5204_WriteByte(&_62113_s, ',');
				_2096a4e4b_WriteStr(&_62113_s, _1bc841586_Str((*(_62416_t)).ptr()));
			}
			_iter_next_1c0a05549:;
			++it;
			goto _iter_begin_1c0a05549;
		}
		_iter_end_1c0a05549:;
	};
	_2096a5204_WriteByte(&_62113_s, ')');
	return _2096a5743_Str(&_62113_s);;
}



inline jule::Bool _1bc84e550_Equal(jule::Ptr<_1bc84dd8a_Tuple> _self_, jule::Ptr<_1bc8411bd_TypeKind> _63321_other) {
	jule::Ptr<_1bc84dd8a_Tuple> _6349_tup = _1bc845645_Tup(_63321_other.ptr());;
	if ((_6349_tup == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Types.len() != (*(_6349_tup))._field_Types.len())) {
		return false;;
	};
	jule::I64 _64113_i = 0LL;;
	for (; (_64113_i < (*(_self_))._field_Types.len()); (_64113_i)++) {
		{
			if ((!(_1bc8418c7_Equal((*(_self_))._field_Types[_64113_i], (*(_6349_tup))._field_Types[_64113_i])))) {
				return false;;
			};
		}
	_iter_next_1c0a0852a:;
	}
	_iter_end_1c0a0852a:;;
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc84dd8a_Tuple _Src) {
	_Stream << _1bc84e20e_Str(&_Src);
	return _Stream;
}



inline jule::Str _1bc84ecae_Str(_1bc84e93a_Map* _self_) {
	_2096a4489_StrBuilder _66113_s = static__2096a48da_New(16LL);;
	_2096a4e4b_WriteStr(&_66113_s, jule::Str::lit("map[", 4));
	_2096a4e4b_WriteStr(&_66113_s, _1bc841586_Str((*(_self_))._field_Key.ptr()));
	_2096a5204_WriteByte(&_66113_s, ']');
	_2096a4e4b_WriteStr(&_66113_s, _1bc841586_Str((*(_self_))._field_Val.ptr()));
	return _2096a5743_Str(&_66113_s);;
}



inline jule::Bool _1bc850100_Equal(jule::Ptr<_1bc84e93a_Map> _self_, jule::Ptr<_1bc8411bd_TypeKind> _67021_other) {
	jule::Ptr<_1bc84e93a_Map> _6719_m = _1bc8453ae_Map(_67021_other.ptr());;
	if ((_6719_m == nullptr)) {
		return false;;
	};
	return (_1bc8418c7_Equal((*(_self_))._field_Key, (*(_6719_m))._field_Key) && _1bc8418c7_Equal((*(_self_))._field_Val, (*(_6719_m))._field_Val));;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc84e93a_Map _Src) {
	_Stream << _1bc84ecae_Str(&_Src);
	return _Stream;
}



inline jule::Str _1bc85093b_Str(_1bc8505b7_Arr* _self_) {
	_2096a4489_StrBuilder _68913_s = static__2096a48da_New(16LL);;
	_2096a5204_WriteByte(&_68913_s, '[');
	_2096a4e4b_WriteStr(&_68913_s, _230d4a1d0_Itoa((*(_self_))._field_N));
	_2096a5204_WriteByte(&_68913_s, ']');
	_2096a4e4b_WriteStr(&_68913_s, _1bc841586_Str((*(_self_))._field_Elem.ptr()));
	return _2096a5743_Str(&_68913_s);;
}



inline jule::Bool _1bc850c7c_Equal(jule::Ptr<_1bc8505b7_Arr> _self_, jule::Ptr<_1bc8411bd_TypeKind> _69821_other) {
	jule::Ptr<_1bc8505b7_Arr> _6999_arr = _1bc8445de_Arr(_69821_other.ptr());;
	if ((_6999_arr == nullptr)) {
		return false;;
	};
	return (((*(_self_))._field_N == (*(_6999_arr))._field_N) && _1bc8418c7_Equal((*(_self_))._field_Elem, (*(_6999_arr))._field_Elem));;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc8505b7_Arr _Src) {
	_Stream << _1bc85093b_Str(&_Src);
	return _Stream;
}



inline jule::Str _1bc85140e_Str(_1bc85108a_Ptr* _self_) {
	if (_1bc851ac4_IsUnsafe(_self_)) {
		return jule::Str::lit("*unsafe", 7);;
	};
	return (jule::Str::lit("*", 1) + _1bc841586_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1bc851750_Equal(jule::Ptr<_1bc85108a_Ptr> _self_, jule::Ptr<_1bc8411bd_TypeKind> _72221_other) {
	jule::Ptr<_1bc85108a_Ptr> _7239_ptr = _1bc843d3b_Ptr(_72221_other.ptr());;
	if ((_7239_ptr == nullptr)) {
		return false;;
	};
	return _1bc8418c7_Equal((*(_self_))._field_Elem, (*(_7239_ptr))._field_Elem);;
}



inline jule::Bool _1bc851ac4_IsUnsafe(_1bc85108a_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc85108a_Ptr _Src) {
	_Stream << _1bc85140e_Str(&_Src);
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc85208b_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1bc8537b8_pushErr(_1bc85307b_typeChecker* _self_, jule::Ptr<_1bc583a9d_Token> _80826_token, jule::Str _80841_fmt, jule::Slice<jule::Any> _80854_args) {
	_1bc786db1_pushErr((*(_self_))._field_s.ptr(), _80826_token, _80841_fmt, _80854_args);
}



inline void _1bc8539b6_allowBuiltin(_1bc85307b_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1bc853bb4_disallowBuiltin(_1bc85307b_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline void _1c0a17d75_pushReference(_1bc85307b_typeChecker* _self_, jule::Ptr<_1bc5be0b1_StructIns>* _82040_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1c1e1ae03_Exist((*(_self_))._field_refers.ptr(), (*(_82040_t)))) {
		return;;
	};
	_1ece22e9a_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_82040_t)), &__jule_any_type9));
}

inline void _1c0a1a75c_pushReference(_1bc85307b_typeChecker* _self_, jule::Ptr<_1bc713a41_Trait>* _82040_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1c0a1c4ea_Exist((*(_self_))._field_refers.ptr(), (*(_82040_t)))) {
		return;;
	};
	_1ece22e9a_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_82040_t)), &__jule_any_type10));
}



inline void _1bc854225_pushReferenceByKind(_1bc85307b_typeChecker* _self_, jule::Ptr<_1bc8411bd_TypeKind>* _83043_k) {
	{
		
		if ((_1bc844d92_Struct((*(_83043_k)).ptr()) != nullptr)) {
			_case_begin_1c0a169ab:;
			{
				jule::Ptr<_1bc5be0b1_StructIns> _83317_t = _1bc844d92_Struct((*(_83043_k)).ptr());;
				_1c0a17d75_pushReference(_self_, &(_83317_t));
			}
		}
		else if ((_1bc845128_Trait((*(_83043_k)).ptr()) != nullptr)) {
			_case_begin_1c0a16a33:;
			{
				jule::Ptr<_1bc713a41_Trait> _83617_t = _1bc845128_Trait((*(_83043_k)).ptr());;
				_1c0a1a75c_pushReference(_self_, &(_83617_t));
			}
		}
		_match_end_1c0a1689b:;
	};
}



inline void _1bc854643_pushCycleError(_1bc85307b_typeChecker* _self_, jule::Any _84129_def1, jule::Any _84140_def2, _2096a4489_StrBuilder* _84156_message) {
	;
	jule::Fn<jule::Str(jule::Any*)> _8439_getIdent = jule::Fn<jule::Str(jule::Any*)>([=](jule::Any* _84325_def) mutable -> jule::Str {
		{
			auto &_match_expr{ (*(_84325_def)) };
			
			if (_match_expr.type == &__jule_any_type66) {
				_case_begin_1c0a20135:;
				{
					return (*((*(_84325_def)).cast_ptr<_1bc8403cb_TypeAlias>(&__jule_any_type66)))._field_Ident;;
				}
			}
			else if (_match_expr.type == &__jule_any_type65) {
				_case_begin_1c0a206eb:;
				{
					return (*((*(_84325_def)).cast_ptr<_1bc5bb333_Struct>(&__jule_any_type65)))._field_Ident;;
				}
			}
			else {
				_case_begin_1c0a20311:;
				{
					return jule::Str();;
				}
			}
			_match_end_1c0a202ab:;
		};
	});;
	jule::Str _8539_m = _2096a5743_Str(_84156_message);;
	jule::Str _8549_def1Ident = _8439_getIdent(&(_84129_def1));;
	jule::Str _8559_def2Ident = _8439_getIdent(&(_84140_def2));;
	jule::Str _8569_refersTo = _1ed6c7d04_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_8549_def1Ident, &__jule_any_type4),jule::Any(_8559_def2Ident, &__jule_any_type4)}));;
	_2096a4e4b_WriteStr(_84156_message, _1ed63935e_Repeat(jule::Str::lit(" ", 1), 7LL));
	_2096a4e4b_WriteStr(_84156_message, _8569_refersTo);
	_2096a5204_WriteByte(_84156_message, '\n');
	_2096a4e4b_WriteStr(_84156_message, _8539_m);
}



inline jule::Bool _1bc854a3e_checkCrossCycle(_1bc85307b_typeChecker* _self_, jule::Any _86330_decl, _2096a4489_StrBuilder* _86346_message) {
	{
		auto &_match_expr{ _86330_decl };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1c0a23886:;
			{
				jule::Ptr<_1bc8403cb_TypeAlias> _86613_ta = _86330_decl.cast_ptr<_1bc8403cb_TypeAlias>(&__jule_any_type66);;
				{
					auto expr = &((*(_86613_ta))._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c0a247dd:;
					if (it != expr_end) {
						jule::Any *_86720_d = it;
						{
							{
								
								if (((*(_86720_d)) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1c0a250b3:;
									{
										_1bc854643_pushCycleError(_self_, jule::Any(_86613_ta, &__jule_any_type66), (*(_86720_d)), _86346_message);
										return false;;
									}
								}
								else if ((!(_1bc854a3e_checkCrossCycle(_self_, (*(_86720_d)), _86346_message)))) {
									_case_begin_1c0a2513a:;
									{
										_1bc854643_pushCycleError(_self_, jule::Any(_86613_ta, &__jule_any_type66), (*(_86720_d)), _86346_message);
										return false;;
									}
								}
								_match_end_1c0a24ea3:;
							};
						}
						_iter_next_1c0a247dd:;
						++it;
						goto _iter_begin_1c0a247dd;
					}
					_iter_end_1c0a247dd:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1c0a238ec:;
			{
				jule::Ptr<_1bc5bb333_Struct> _87813_s = _86330_decl.cast_ptr<_1bc5bb333_Struct>(&__jule_any_type65);;
				{
					auto expr = &((*(_87813_s))._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c0a26a43:;
					if (it != expr_end) {
						jule::Ptr<_1bc5bb333_Struct> *_87920_d = it;
						{
							{
								
								if ((__jule_any_type65_compare((*((*(_self_))._field_referencer))._field_owner, (*(_87920_d))))) {
									_case_begin_1c0a27318:;
									{
										_1bc854643_pushCycleError(_self_, jule::Any(_87813_s, &__jule_any_type65), jule::Any((*(_87920_d)), &__jule_any_type65), _86346_message);
										return false;;
									}
								}
								else if ((!(_1bc854a3e_checkCrossCycle(_self_, jule::Any((*(_87920_d)), &__jule_any_type65), _86346_message)))) {
									_case_begin_1c0a27390:;
									{
										_1bc854643_pushCycleError(_self_, jule::Any(_87813_s, &__jule_any_type65), jule::Any((*(_87920_d)), &__jule_any_type65), _86346_message);
										return false;;
									}
								}
								_match_end_1c0a27208:;
							};
						}
						_iter_next_1c0a26a43:;
						++it;
						goto _iter_begin_1c0a26a43;
					}
					_iter_end_1c0a26a43:;
				};
			}
		}
		_match_end_1c0a23831:;
	};
	return true;;
}



inline jule::Bool _1bc854e3a_checkIllegalCycles(_1bc85307b_typeChecker* _self_, jule::Ptr<_1bc595c47_IdentTypeDecl>* _89738_ident, jule::Any _89765_decl) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_referencer == nullptr) || (!((*(_self_))._field_cycleRisk)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _89765_decl };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1c0a292a4:;
			{
				if ((*(_89765_decl.cast_ptr<_1bc5bb333_Struct>(&__jule_any_type65)))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1c0a2931a:;
			{
				if ((*(_89765_decl.cast_ptr<_1bc8403cb_TypeAlias>(&__jule_any_type66)))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1c0a2920a:;
	};
	if ((_89765_decl == (*((*(_self_))._field_referencer))._field_owner)) {
		_1bc8537b8_pushErr(_self_, (*((*(_89738_ident))))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_referencer))._field_ident, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_2096a4489_StrBuilder _92013_message = static__2096a48da_New(32LL);;
	if ((!(_1bc854a3e_checkCrossCycle(_self_, _89765_decl, &(_92013_message))))) {
		jule::Str _92317_errMsg = _2096a5743_Str(&_92013_message);;
		_2096a5941_Clear(&_92013_message);
		_1bc854643_pushCycleError(_self_, (*((*(_self_))._field_referencer))._field_owner, _89765_decl, &(_92013_message));
		_92317_errMsg+=_2096a5743_Str(&_92013_message);
		_1bc8537b8_pushErr(_self_, (*((*(_89738_ident))))._field_Token, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_92317_errMsg, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1c0a2d9a1:;
			{
				{
					{ jule::Slice<jule::Any> *__jule_push_dest = (*((*(_self_))._field_referencer))._field_refs; __jule_push_dest->push(_89765_decl); };
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1c0a2da17:;
			{
				{
					auto &_match_expr{ _89765_decl };
					
					if (_match_expr.type == &__jule_any_type65) {
						_case_begin_1c0a2de8a:;
						{
							jule::Ptr<_1bc5bb333_Struct> _93921_s = (*((*(_self_))._field_referencer))._field_owner.cast_ptr<_1bc5bb333_Struct>(&__jule_any_type65);;
							{ jule::Slice<jule::Ptr<_1bc5bb333_Struct>> &__jule_push_dest = (*(_93921_s))._field_Depends; __jule_push_dest.push(_89765_decl.cast_ptr<_1bc5bb333_Struct>(&__jule_any_type65)); };
						}
					}
					_match_end_1c0a2de35:;
				};
			}
		}
		_match_end_1c0a2d94b:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait<_1bc840c17_Kind> _1bc855336_fromTypeAlias(_1bc85307b_typeChecker* _self_, jule::Ptr<_1bc595c47_IdentTypeDecl>* _94733_decl, jule::Ptr<_1bc8403cb_TypeAlias>* _94760_ta) {
	if ((!(_1bc787620_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_94760_ta))))._field_Public, (*((*(_94760_ta))))._field_Token)))) {
		_1bc8537b8_pushErr(_self_, (*((*(_94733_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_94733_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	(*((*(_94760_ta))))._field_Used=true;
	if (((*((*(_94733_decl))))._field_Generics.len() > 0LL)) {
		_1bc8537b8_pushErr(_self_, (*((*(_94733_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_94733_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c0a343e1:;
			if (it != expr_end) {
				jule::Ptr<_1bc8403cb_TypeAlias> _96420_bg = *it;
				{
					if (((_96420_bg == (*(_94760_ta))) || (((*((*((*(_94760_ta))))._field_Kind))._field_Kind != nullptr) && _1bc8418c7_Equal((*((*((*(_94760_ta))))._field_Kind))._field_Kind, (*((*(_96420_bg))._field_Kind))._field_Kind)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_1c0a343e1;
					};
				}
				_iter_next_1c0a343e1:;
				++it;
				goto _iter_begin_1c0a343e1;
			}
			_iter_end_1c0a343e1:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c0a34d81:;
			if (it != expr_end) {
				jule::Ptr<_1bc8403cb_TypeAlias> _97520_bg = *it;
				{
					if ((_97520_bg == (*(_94760_ta)))) {
						_1bc8537b8_pushErr(_self_, (*((*(_94733_decl))))._field_Token, jule::Str::lit("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*((*(_94733_decl))))._field_Ident, &__jule_any_type4)}));
						return nullptr;;
					};
					{
						auto expr = &((*((*(_94760_ta))))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c0a3702b:;
						if (it != expr_end) {
							jule::Ptr<_1bc8403cb_TypeAlias> _98024_dg = *it;
							{
								if ((_97520_bg == _98024_dg)) {
									_1bc8537b8_pushErr(_self_, (*((*(_94733_decl))))._field_Token, jule::Str::lit("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*((*(_94733_decl))))._field_Ident, &__jule_any_type4)}));
									return nullptr;;
								};
							}
							_iter_next_1c0a3702b:;
							++it;
							goto _iter_begin_1c0a3702b;
						}
						_iter_end_1c0a3702b:;
					};
				}
				_iter_next_1c0a34d81:;
				++it;
				goto _iter_begin_1c0a34d81;
			}
			_iter_end_1c0a34d81:;
		};
	};
	jule::Bool _98913_ok = _1bc854e3a_checkIllegalCycles(_self_, _94733_decl, jule::Any((*(_94760_ta)), &__jule_any_type66));;
	if ((!(_98913_ok))) {
		return nullptr;;
	};
	if (((*((*((*(_94760_ta))))._field_Kind))._field_Kind == nullptr)) {
		_98913_ok=_1bc794154_checkTypeAliasDeclKind((*(_self_))._field_s, _94760_ta, (*(_self_))._field_lookup);
		if ((!(_98913_ok))) {
			return nullptr;;
		};
	};
	if (((*((*(_94760_ta))))._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		{ jule::Slice<jule::Ptr<_1bc8403cb_TypeAlias>> &__jule_push_dest = (*((*(_self_))._field_ownerAlias))._field_Generics; __jule_push_dest.push((*(_94760_ta))); };
	};
	jule::Ptr<_1bc8411bd_TypeKind> _100813_tk = jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Generic=(*((*(_94760_ta))))._field_Generic, ._field_Kind=(*((*((*((*(_94760_ta))))._field_Kind))._field_Kind))._field_Kind});;
	_1bc854225_pushReferenceByKind(_self_, &(_100813_tk));
	if ((*((*(_94760_ta))))._field_Binded) {
		(*(_100813_tk))._field_BindIdent=(*((*(_94760_ta))))._field_Ident;
	} else {
		(*(_100813_tk))._field_BindIdent=(*((*((*((*(_94760_ta))))._field_Kind))._field_Kind))._field_BindIdent;
	};
	return jule::Trait<_1bc840c17_Kind>(_100813_tk, 19);;
}



inline jule::Ptr<_1bc71624c_Enum> _1bc855732_fromEnum(_1bc85307b_typeChecker* _self_, jule::Ptr<_1bc595c47_IdentTypeDecl>* _102128_decl, jule::Ptr<_1bc71624c_Enum>* _102155_e) {
	if ((!(_1bc787620_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_102155_e))))._field_Public, (*((*(_102155_e))))._field_Token)))) {
		_1bc8537b8_pushErr(_self_, (*((*(_102128_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_102128_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_102128_decl))))._field_Generics.len() > 0LL)) {
		_1bc8537b8_pushErr(_self_, (*((*(_102128_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_102128_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_102155_e));;
}



inline jule::Ptr<_1bc717957_TypeEnum> _1bc855b2d_fromTypeEnum(_1bc85307b_typeChecker* _self_, jule::Ptr<_1bc595c47_IdentTypeDecl>* _103332_decl, jule::Ptr<_1bc717957_TypeEnum>* _103359_e) {
	if ((!(_1bc787620_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_103359_e))))._field_Public, (*((*(_103359_e))))._field_Token)))) {
		_1bc8537b8_pushErr(_self_, (*((*(_103332_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_103332_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_103332_decl))))._field_Generics.len() > 0LL)) {
		_1bc8537b8_pushErr(_self_, (*((*(_103332_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_103332_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_103359_e));;
}



inline jule::Ptr<_1bc713a41_Trait> _1bc856029_fromTrait(_1bc85307b_typeChecker* _self_, jule::Ptr<_1bc595c47_IdentTypeDecl>* _104529_decl, jule::Ptr<_1bc713a41_Trait>* _104556_t) {
	if ((!(_1bc787620_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_104556_t))))._field_Public, (*((*(_104556_t))))._field_Token)))) {
		_1bc8537b8_pushErr(_self_, (*((*(_104529_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_104529_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_104529_decl))))._field_Generics.len() > 0LL)) {
		_1bc8537b8_pushErr(_self_, (*((*(_104529_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_104529_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	_1c0a1a75c_pushReference(_self_, _104556_t);
	return (*(_104556_t));;
}



inline jule::Bool _1bc856425_checkStructIns(_1bc85307b_typeChecker* _self_, jule::Ptr<_1bc5be0b1_StructIns>* _105838_ins, jule::Ptr<_1bc583a9d_Token>* _105860_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_105838_ins))))._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_105838_ins))))._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (__jule_any_type65_compare((*((*(_self_))._field_referencer))._field_owner, (*((*(_105838_ins))))._field_Decl)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1bc7a0748_precheckStructIns((*(_self_))._field_s, _105838_ins, (*(_105860_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*((*(_105838_ins))))._field_Generics.len() > 0LL)) {
		_1bc7a1260_checkStructInsOperators((*(_self_))._field_s, (*(_105838_ins)));
		_1bc7a0a01_checkStructIns((*(_self_))._field_s, _105838_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1bc8566cd_appendUsedStructReference(_1bc85307b_typeChecker* _self_, jule::Ptr<_1bc5bb333_Struct>* _107949_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1c0a4a6b0:;
			{
				jule::Ptr<_1bc5bb333_Struct> _108517_refS = (*((*(_self_))._field_referencer))._field_owner.cast_ptr<_1bc5bb333_Struct>(&__jule_any_type65);;
				if ((!(_1bc5bccb3_IsUses(_108517_refS.ptr(), (*(_107949_s)))))) {
					{ jule::Slice<jule::Ptr<_1bc5bb333_Struct>> &__jule_push_dest = (*(_108517_refS))._field_Uses; __jule_push_dest.push((*(_107949_s))); };
				};
			}
		}
		_match_end_1c0a4a65a:;
	};
}



inline jule::Ptr<_1bc5be0b1_StructIns> _1bc856ac9_buildStructInstance(_1bc85307b_typeChecker* _self_, jule::Ptr<_1bc595c47_IdentTypeDecl>* _109243_decl, jule::Ptr<_1bc5bb333_Struct>* _109270_s) {
	jule::Ptr<_1bc85208b_referencer> _109413_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1bc8403cb_TypeAlias>> _109613_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_1c0a4d680:;
				{
					jule::Ptr<_1bc749923_scopeChecker> _110321_sc = (*(_self_))._field_lookup.cast_ptr<_1bc749923_scopeChecker>(0);;
					jule::Ptr<_1bc749923_scopeChecker> _110421_hard = _1bc74cc9a_getHardRoot(_110321_sc);;
					if ((((*((*(_110421_hard))._field_owner))._field_Owner == nullptr) || ((*((*((*(_110421_hard))._field_owner))._field_Owner))._field_Decl != (*(_109270_s))))) {
						goto _match_end_1c0a4d62a;
					};
					jule::I64 _110817_n = ((*((*(_110421_hard))._field_owner))._field_Generics.len() + (*((*((*(_110421_hard))._field_owner))._field_Owner))._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=(*((*(_110421_hard))._field_table))._field_TypeAliases.slice(0LL, _110817_n);
				}
			}
			_match_end_1c0a4d62a:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait<_1bc860c04_Lookup> _111813_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_1bc5be0b1_StructIns> _112213_ins = _1bc5bb795_instance((*(_109270_s)));;
	(*(_112213_ins))._field_Generics=jule::Slice<jule::Ptr<_1bc83e7d7_InsGeneric>>::alloc(0LL, (*((*(_109243_decl))))._field_Generics.len());
	{
		auto expr = &((*((*(_109243_decl))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0a539c6:;
		if (it != expr_end) {
			jule::Ptr<_1bc59563c_TypeDecl> _112421_g = *it;
			{
				jule::Ptr<_1bc8411bd_TypeKind> _112517_kind = _1bc85a3d5_build(_self_, &((*(_112421_g))._field_Kind));;
				if ((_112517_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1bc83e7d7_InsGeneric>> &__jule_push_dest = (*(_112213_ins))._field_Generics; __jule_push_dest.push(jule::new_ptr<_1bc83e7d7_InsGeneric>(_1bc83e7d7_InsGeneric{._field_Kind=_112517_kind, })); };
			}
			_iter_next_1c0a539c6:;
			++it;
			goto _iter_begin_1c0a539c6;
		}
		_iter_end_1c0a539c6:;
	};
	(*(_self_))._field_lookup=_111813_lookup;
	(*(_self_))._field_bannedGenerics=_109613_bannedGenerics;
	(*(_self_))._field_referencer=_109413_referencer;
	return _112213_ins;;
}



inline jule::Ptr<_1bc5be0b1_StructIns> _1bc856ec5_fromStruct(_1bc85307b_typeChecker* _self_, jule::Ptr<_1bc595c47_IdentTypeDecl>* _114034_decl, jule::Ptr<_1bc5bb333_Struct>* _114061_s) {
	if ((!(_1bc787620_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_114061_s))))._field_Public, (*((*(_114061_s))))._field_Token)))) {
		_1bc8537b8_pushErr(_self_, (*((*(_114034_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_114034_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*((*(_114034_decl))))._field_Generics.len() > 0LL)) {
			_1bc8537b8_pushErr(_self_, (*((*(_114034_decl))))._field_Token, jule::Str::lit("generics are not allowed in this scope", 38), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1bc5be0b1_StructIns>(_1bc5be0b1_StructIns{._field_Decl=(*(_114061_s)), });;
	};
	jule::Bool _115813_ok = _1bc854e3a_checkIllegalCycles(_self_, _114034_decl, jule::Any((*(_114061_s)), &__jule_any_type65));;
	if ((!(_115813_ok))) {
		return nullptr;;
	};
	_1bc8566cd_appendUsedStructReference(_self_, _114061_s);
	jule::Ptr<_1bc5be0b1_StructIns> _116413_ins = _1bc856ac9_buildStructInstance(_self_, _114034_decl, _114061_s);;
	if ((_116413_ins == nullptr)) {
		return nullptr;;
	};
	_115813_ok=_1bc7883e0_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I64>((*((*(_116413_ins))._field_Decl))._field_Generics.len()), static_cast<jule::I64>((*(_116413_ins))._field_Generics.len()), (*((*(_114034_decl))))._field_Token);
	if ((!(_115813_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1bc5be0b1_StructIns> _117413_existInstance = _1bc5bbaa3_appendInstance((*(_114061_s)).ptr(), &(_116413_ins));;
	if ((_117413_existInstance != nullptr)) {
		if ((!(_1bc792350_checkConstraintsStruct((*(_self_))._field_s, &(_116413_ins), &((*((*(_114034_decl))))._field_Token), _117413_existInstance)))) {
			return nullptr;;
		};
		_1c0a17d75_pushReference(_self_, &(_117413_existInstance));
		return _117413_existInstance;;
	};
	if ((!(_1bc856425_checkStructIns(_self_, &(_116413_ins), &((*((*(_114034_decl))))._field_Token))))) {
		return nullptr;;
	};
	_1c0a17d75_pushReference(_self_, &(_116413_ins));
	return _116413_ins;;
}



inline jule::Trait<_1bc840c17_Kind> _1bc857316_getDef(_1bc85307b_typeChecker* _self_, jule::Ptr<_1bc595c47_IdentTypeDecl>* _119830_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c22792b6:;
		if (it != expr_end) {
			jule::Ptr<_1bc5a76a4_GenericDecl> _119916_g = *it;
			{
				if (((*(_119916_g))._field_Ident == (*((*(_119830_decl))))._field_Ident)) {
					return jule::Trait<_1bc840c17_Kind>(_1bc85d0db_buildPrimType((*(_119916_g))._field_Ident), 20);;
				};
			}
			_iter_next_1c22792b6:;
			++it;
			goto _iter_begin_1c22792b6;
		}
		_iter_end_1c22792b6:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2279629:;
		if (it != expr_end) {
			jule::Ptr<_1bc8403cb_TypeAlias> _120521_g = *it;
			{
				if (((*(_120521_g))._field_Ident == (*((*(_119830_decl))))._field_Ident)) {
					if (((*((*(_119830_decl))))._field_Generics.len() > 0LL)) {
						_1bc8537b8_pushErr(_self_, (*((*(_119830_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_119830_decl))))._field_Ident, &__jule_any_type4)}));
						return nullptr;;
					};
					jule::Ptr<_1bc5be0b1_StructIns> _121121_st = _1bc844d92_Struct((*((*(_120521_g))._field_Kind))._field_Kind.ptr());;
					if ((_121121_st != nullptr)) {
						jule::Bool _121321_ok = _1bc854e3a_checkIllegalCycles(_self_, _119830_decl, jule::Any((*(_121121_st))._field_Decl, &__jule_any_type65));;
						if ((!(_121321_ok))) {
							return nullptr;;
						};
					};
					return (*((*((*(_120521_g))._field_Kind))._field_Kind))._field_Kind;;
				};
			}
			_iter_next_1c2279629:;
			++it;
			goto _iter_begin_1c2279629;
		}
		_iter_end_1c2279629:;
	};
	if ((!((*((*(_119830_decl))))._field_Binded))) {
		jule::Ptr<_1bc71624c_Enum> _122317_e = _1bc860c04_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1bc86075e_FindEnum((*(_self_))._field_lookup, (*((*(_119830_decl))))._field_Ident);;
		if ((_122317_e != nullptr)) {
			return jule::Trait<_1bc840c17_Kind>(_1bc855732_fromEnum(_self_, _119830_decl, &(_122317_e)), 3);;
		};
		jule::Ptr<_1bc717957_TypeEnum> _122817_te = _1bc860c04_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1bc860aa0_FindTypeEnum((*(_self_))._field_lookup, (*((*(_119830_decl))))._field_Ident);;
		if ((_122817_te != nullptr)) {
			return jule::Trait<_1bc840c17_Kind>(_1bc855b2d_fromTypeEnum(_self_, _119830_decl, &(_122817_te)), 4);;
		};
		jule::Ptr<_1bc713a41_Trait> _123317_t = _1bc860c04_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1bc86041d_FindTrait((*(_self_))._field_lookup, (*((*(_119830_decl))))._field_Ident);;
		if ((_123317_t != nullptr)) {
			return jule::Trait<_1bc840c17_Kind>(_1bc856029_fromTrait(_self_, _119830_decl, &(_123317_t)), 2);;
		};
	} else if ((*(_self_))._field_selection) {
		_1bc8537b8_pushErr(_self_, (*((*(_119830_decl))))._field_Token, jule::Str::lit("binded definitions are not allowed in this scope", 48), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1bc5bb333_Struct> _124213_s = _1bc860c04_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1bc85ebd1_FindStruct((*(_self_))._field_lookup, (*((*(_119830_decl))))._field_Ident, (*((*(_119830_decl))))._field_Binded);;
	if ((_124213_s != nullptr)) {
		return jule::Trait<_1bc840c17_Kind>(_1bc856ec5_fromStruct(_self_, _119830_decl, &(_124213_s)), 0);;
	};
	jule::Ptr<_1bc8403cb_TypeAlias> _124713_ta = _1bc860c04_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1bc85e7d5_FindTypeAlias((*(_self_))._field_lookup, (*((*(_119830_decl))))._field_Ident, (*((*(_119830_decl))))._field_Binded);;
	if (((_124713_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_124713_ta=_1bc2c7506_findBuiltinTypeAlias((*((*(_119830_decl))))._field_Ident);
	};
	if ((_124713_ta != nullptr)) {
		return _1bc855336_fromTypeAlias(_self_, _119830_decl, &(_124713_ta));;
	};
	_1bc8537b8_pushErr(_self_, (*((*(_119830_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_119830_decl))))._field_Ident, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Trait<_1bc840c17_Kind> _1bc857657_buildIdent(_1bc85307b_typeChecker* _self_, jule::Ptr<_1bc595c47_IdentTypeDecl> _125933_decl) {
	return _1bc857316_getDef(_self_, &(_125933_decl));;
}



inline jule::Trait<_1bc840c17_Kind> _1bc857998_buildSubIdent(_1bc85307b_typeChecker* _self_, jule::Ptr<_1bc596044_SubIdentTypeDecl> _126336_decl) {
	jule::Trait<_1bc840c17_Kind> _126413_ident = _1bc857657_buildIdent(_self_, (*(_126336_decl))._field_Idents[0LL]);;
	if ((_126413_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _126413_ident };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1c2286e72:;
			{
				goto _match_end_1c228734b;
			}
		}
		else {
			_case_begin_1c22873a1:;
			{
				_1bc8537b8_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c228734b:;
	};
	jule::Ptr<_1bc717957_TypeEnum> _127513_t = _126413_ident.cast_ptr<_1bc717957_TypeEnum>(4);;
	jule::Slice<jule::Ptr<_1bc595c47_IdentTypeDecl>> _127613_idents = (*(_126336_decl))._field_Idents.slice(1LL);;
	{
		auto expr = &(_127613_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c08b3c98:;
		if (it != expr_end) {
			jule::I64 _127713_i = it - expr->begin();
			jule::Ptr<_1bc595c47_IdentTypeDecl> _127716_id = *it;
			{
				jule::Ptr<_1bc717380_TypeEnumItem> _127817_item = _1bc718518_FindItem(_127513_t.ptr(), (*(_127716_id))._field_Ident);;
				if ((_127817_item == nullptr)) {
					_1bc8537b8_pushErr(_self_, (*(_127716_id))._field_Token, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*(_127513_t))._field_Ident, &__jule_any_type4),jule::Any((*(_127716_id))._field_Ident, &__jule_any_type4)}));
					return nullptr;;
				};
				if (((_127613_idents.len() - _127713_i) == 1LL)) {
					_1bc854225_pushReferenceByKind(_self_, &((*((*(_127817_item))._field_Kind))._field_Kind));
					return jule::Trait<_1bc840c17_Kind>((*((*(_127817_item))._field_Kind))._field_Kind, 19);;
				};
				_127513_t=_1bc844358_TypeEnum((*((*(_127817_item))._field_Kind))._field_Kind.ptr());
				if ((_127513_t == nullptr)) {
					_1bc8537b8_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1c08b3c98:;
			++it;
			_127713_i++;
			goto _iter_begin_1c08b3c98;
		}
		_iter_end_1c08b3c98:;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc84c7c3_Sptr> _1bc857cd9_buildSptrFromType(_1bc85307b_typeChecker* _self_, jule::Ptr<_1bc8411bd_TypeKind>* _129741_elem) {
	{
		
		if (((*(_129741_elem)) == nullptr)) {
			_case_begin_1c08b8781:;
			{
				return nullptr;;
			}
		}
		else if ((_1bc844d92_Struct((*(_129741_elem)).ptr()) != nullptr)) {
			_case_begin_1c08b8808:;
			{
				jule::Ptr<_1bc5be0b1_StructIns> _130313_s = _1bc844d92_Struct((*(_129741_elem)).ptr());;
				if ((((*(_130313_s))._field_Decl != nullptr) && (*((*(_130313_s))._field_Decl))._field_Binded)) {
					_1bc8537b8_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_1bc8445de_Arr((*(_129741_elem)).ptr()) != nullptr) && (*(_1bc8445de_Arr((*(_129741_elem)).ptr())))._field_Auto)) {
			_case_begin_1c08b8880:;
			{
				_1bc8537b8_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c08b8660:;
	};
	return jule::new_ptr<_1bc84c7c3_Sptr>(_1bc84c7c3_Sptr{._field_Elem=(*(_129741_elem))});;
}



inline jule::Ptr<_1bc84c7c3_Sptr> _1bc85812a_buildSptr(_1bc85307b_typeChecker* _self_, jule::Ptr<_1bc5966d7_SptrTypeDecl> _131732_decl) {
	jule::Bool _13189_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13189_cycleRisk;
	});;
	jule::Ptr<_1bc8411bd_TypeKind> _132213_elem = _1bc85a726_checkDecl(_self_, &((*(_131732_decl))._field_Elem));;
	return _1bc857cd9_buildSptrFromType(_self_, &(_132213_elem));;
}



inline jule::Ptr<_1bc85108a_Ptr> _1bc85846b_buildPtrFromType(_1bc85307b_typeChecker* _self_, jule::Ptr<_1bc8411bd_TypeKind>* _132640_elem) {
	{
		
		if (((*(_132640_elem)) == nullptr)) {
			_case_begin_1c08bd940:;
			{
				return nullptr;;
			}
		}
		else if (((_1bc8445de_Arr((*(_132640_elem)).ptr()) != nullptr) && (*(_1bc8445de_Arr((*(_132640_elem)).ptr())))._field_Auto)) {
			_case_begin_1c08bd9b7:;
			{
				_1bc8537b8_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return jule::new_ptr<_1bc85108a_Ptr>();;
			}
		}
		_match_end_1c08bd830:;
	};
	return jule::new_ptr<_1bc85108a_Ptr>(_1bc85108a_Ptr{._field_Elem=(*(_132640_elem))});;
}



inline jule::Ptr<_1bc85108a_Ptr> _1bc8587ac_buildPtr(_1bc85307b_typeChecker* _self_, jule::Ptr<_1bc597166_PtrTypeDecl> _134131_decl) {
	jule::Bool _13429_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13429_cycleRisk;
	});;
	jule::Ptr<_1bc8411bd_TypeKind> _134617_elem = nullptr;;
	if ((!(_1bc5974c9_IsUnsafe(_134131_decl.ptr())))) {
		_134617_elem=_1bc85a726_checkDecl(_self_, &((*(_134131_decl))._field_Elem));
		return _1bc85846b_buildPtrFromType(_self_, &(_134617_elem));;
	};
	return jule::new_ptr<_1bc85108a_Ptr>(_1bc85108a_Ptr{._field_Elem=_134617_elem});;
}



inline jule::Ptr<_1bc84d296_Slc> _1bc858aed_buildSlc(_1bc85307b_typeChecker* _self_, jule::Ptr<_1bc596a6c_SlcTypeDecl> _135831_decl) {
	jule::Bool _13599_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13599_cycleRisk;
	});;
	jule::Ptr<_1bc8411bd_TypeKind> _136313_elem = _1bc85a726_checkDecl(_self_, &((*(_135831_decl))._field_Elem));;
	{
		
		if ((_136313_elem == nullptr)) {
			_case_begin_1c08c3b10:;
			{
				return nullptr;;
			}
		}
		else if (((_1bc8445de_Arr(_136313_elem.ptr()) != nullptr) && (*(_1bc8445de_Arr(_136313_elem.ptr())))._field_Auto)) {
			_case_begin_1c08c3b76:;
			{
				_1bc8537b8_pushErr(_self_, (*((*(_135831_decl))._field_Elem))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c08c3aaa:;
	};
	return jule::new_ptr<_1bc84d296_Slc>(_1bc84d296_Slc{._field_Elem=_136313_elem});;
}



inline jule::Ptr<_1bc8505b7_Arr> _1bc858e3e_buildArr(_1bc85307b_typeChecker* _self_, jule::Ptr<_1bc597908_ArrTypeDecl> _137931_decl) {
	jule::I64 _138013_n = 0LL;;
	if ((!(_1bc597c6b_AutoSized(_137931_decl.ptr())))) {
		jule::Ptr<_1bc8108a7_Data> _138317_size = _1bc83080b_evalExpr(_1bc78e35d_eval((*(_self_))._field_s, (*(_self_))._field_lookup), (*(_137931_decl))._field_Size);;
		if ((_138317_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1bc81127b_IsConst(_138317_size.ptr())))) {
			_1bc8537b8_pushErr(_self_, (*((*(_137931_decl))._field_Size))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1bc84381e_Prim((*(_138317_size))._field_Kind.ptr()) == nullptr) || (!(_230d577a3_IsInt((*(_1bc84381e_Prim((*(_138317_size))._field_Kind.ptr())))._field_Kind))))) {
			_1bc8537b8_pushErr(_self_, (*((*(_137931_decl))._field_Size))._field_Token, jule::Str::lit("array size must be integer", 26), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_138013_n=static_cast<jule::I64>(static_cast<jule::I64>(_230d5aa2b_AsI64((*(_138317_size))._field_Constant.ptr())));
		if ((_138013_n < 0LL)) {
			_1bc8537b8_pushErr(_self_, (*((*(_137931_decl))._field_Elem))._field_Token, jule::Str::lit("array size must be positive integer", 35), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _140117_max = _230d53925_MaxI(jule::Str::lit("int", 3));;
			if (((_230d4b566_BitSize != 64LL) && (static_cast<jule::I64>(_138013_n) > _140117_max))) {
				_1bc8537b8_pushErr(_self_, (*((*(_137931_decl))._field_Size))._field_Token, jule::Str::lit("array with size @ overflows limit (@) of the system", 51), jule::Slice<jule::Any>::make({jule::Any(_1bc83cab0_constoa(&((*(_138317_size))._field_Constant)), &__jule_any_type4),jule::Any(_230d49e16_FmtInt(_140117_max, 10LL), &__jule_any_type4)}));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_1bc8411bd_TypeKind> _141013_elem = _1bc85a726_checkDecl(_self_, &((*(_137931_decl))._field_Elem));;
	{
		
		if ((_141013_elem == nullptr)) {
			_case_begin_1c08cd642:;
			{
				return nullptr;;
			}
		}
		else if (((_1bc8445de_Arr(_141013_elem.ptr()) != nullptr) && (*(_1bc8445de_Arr(_141013_elem.ptr())))._field_Auto)) {
			_case_begin_1c08cd6b9:;
			{
				_1bc8537b8_pushErr(_self_, (*((*(_137931_decl))._field_Elem))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c08c61c8:;
	};
	return jule::new_ptr<_1bc8505b7_Arr>(_1bc8505b7_Arr{._field_Auto=_1bc597c6b_AutoSized(_137931_decl.ptr()), ._field_N=_138013_n, ._field_Elem=_141013_elem});;
}



inline jule::Ptr<_1bc84e93a_Map> _1bc859280_buildMap(_1bc85307b_typeChecker* _self_, jule::Ptr<_1bc598156_MapTypeDecl> _142831_decl) {
	jule::Bool _14299_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14299_cycleRisk;
	});;
	jule::Ptr<_1bc8411bd_TypeKind> _143313_key = _1bc85a726_checkDecl(_self_, &((*(_142831_decl))._field_Key));;
	if ((_143313_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1bc8411bd_TypeKind> _143813_val = _1bc85a726_checkDecl(_self_, &((*(_142831_decl))._field_Val));;
	if ((_143813_val == nullptr)) {
		return nullptr;;
	};
	if ((_1bc8440c2_Enum(_143813_val.ptr()) != nullptr)) {
		_1bc8537b8_pushErr(_self_, (*((*(_142831_decl))._field_Val))._field_Token, jule::Str::lit("maps do not support enums as map key type", 41), jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1bc84e93a_Map>(_1bc84e93a_Map{._field_Key=_143313_key, ._field_Val=_143813_val});;
}



inline jule::Ptr<_1bc84dd8a_Tuple> _1bc8595c1_buildTuple(_1bc85307b_typeChecker* _self_, jule::Ptr<_1bc596d69_TupleTypeDecl> _145233_decl) {
	jule::Slice<jule::Ptr<_1bc8411bd_TypeKind>> _145313_types = jule::Slice<jule::Ptr<_1bc8411bd_TypeKind>>::alloc(0LL, (*(_145233_decl))._field_Types.len());;
	{
		auto expr = &((*(_145233_decl))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c08d4c20:;
		if (it != expr_end) {
			jule::Ptr<_1bc59563c_TypeDecl> _145421_t = *it;
			{
				jule::Ptr<_1bc8411bd_TypeKind> _145517_kind = _1bc85a726_checkDecl(_self_, &(_145421_t));;
				if ((_145517_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1bc8411bd_TypeKind>> &__jule_push_dest = _145313_types; __jule_push_dest.push(_145517_kind); };
			}
			_iter_next_1c08d4c20:;
			++it;
			goto _iter_begin_1c08d4c20;
		}
		_iter_end_1c08d4c20:;
	};
	return jule::new_ptr<_1bc84dd8a_Tuple>(_1bc84dd8a_Tuple{._field_Types=_145313_types});;
}



inline jule::Bool _1bc859912_checkFuncTypes(_1bc85307b_typeChecker* _self_, jule::Ptr<_1ece1de96_FnIns>* _146538_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_146538_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c08d67c1:;
		if (it != expr_end) {
			jule::Ptr<_1ece1ceea_ParamIns> _146621_p = *it;
			{
				(*(_146621_p))._field_Kind=_1bc85a3d5_build(_self_, &((*((*((*((*(_146621_p))._field_Decl))._field_Kind))._field_Decl))._field_Kind));
				__jule_func_result=((*(_146621_p))._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1bc792a04_checkFnParamKind((*(_self_))._field_s, &(_146621_p));
			}
			_iter_next_1c08d67c1:;
			++it;
			goto _iter_begin_1c08d67c1;
		}
		_iter_end_1c08d67c1:;
	};
	if ((!(_1ece1b515_IsVoid((*((*(_146538_f))))._field_Decl.ptr())))) {
		(*((*(_146538_f))))._field_Result=_1bc85a3d5_build(_self_, &((*((*((*((*((*((*(_146538_f))))._field_Decl))._field_Result))._field_Kind))._field_Decl))._field_Kind));
		__jule_func_result = ((*((*(_146538_f))))._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1ece1de96_FnIns> _1bc859c53_buildFunc(_1bc85307b_typeChecker* _self_, jule::Ptr<_1bc5ac159_FnDecl> _148332_decl) {
	jule::Bool _14849_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14849_cycleRisk;
	});;
	if (((*(_148332_decl))._field_Generics.len() > 0LL)) {
		_1bc8537b8_pushErr(_self_, (*(_148332_decl))._field_Token, jule::Str::lit("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ece1b092_Fn> _149313_f = _1ece256c8_buildFunc(_148332_decl);;
	jule::I64 _14959_n = (*((*(_self_))._field_s))._field_errors.len();;
	_1bc79bce9_checkAnonFuncDecl((*(_self_))._field_s, &(_149313_f));
	if ((_14959_n != (*((*(_self_))._field_s))._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1ece1de96_FnIns> _150113_ins = _1ece1c56b_instanceForce(_149313_f);;
	(*(_150113_ins))._field_Anon=true;
	jule::Bool _15049_ok = _1bc859912_checkFuncTypes(_self_, &(_150113_ins));;
	if ((!(_15049_ok))) {
		return nullptr;;
	};
	return _150113_ins;;
}



inline jule::Trait<_1bc840c17_Kind> _1bc85a094_buildByNamespace(_1bc85307b_typeChecker* _self_, jule::Ptr<_1bc5963da_NamespaceTypeDecl> _151239_decl) {
	jule::Str _15139_path = _1bc85cc45_buildLinkPathByTokens(&((*(_151239_decl))._field_Idents));;
	jule::Ptr<_1bc763e04_ImportInfo> _151413_imp = _1bc860c04_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1bc85dedd_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1bc763e04_ImportInfo>)>([=](jule::Ptr<_1bc763e04_ImportInfo> _151449_imp) mutable -> jule::Bool {
		if ((((*(_151239_decl))._field_Idents.len() == 1LL) && ((*(_151449_imp))._field_Alias == _15139_path))) {
			return true;;
		};
		return (((*(_151449_imp))._field_LinkPath == _15139_path) && _1bc766a1c_isAccessibleViaSelection(_151449_imp.ptr()));;
	}));;
	jule::Str _15219_selfIdent = jule::Str::lit("self", 4);;
	if (((_151413_imp == nullptr) || (!(_1bc766445_isLookupable(_151413_imp.ptr(), &(_15219_selfIdent)))))) {
		_1bc8537b8_pushErr(_self_, (*(_151239_decl))._field_Idents[0LL], jule::Str::lit("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_15139_path, &__jule_any_type4)}));
		return nullptr;;
	};
	_1bc853bb4_disallowBuiltin(_self_);
	jule::Trait<_1bc860c04_Lookup> _152813_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1bc860c04_Lookup>(_151413_imp, 1);
	jule::Ptr<_1bc8411bd_TypeKind> _153013_kind = _1bc85a726_checkDecl(_self_, &((*(_151239_decl))._field_Kind));;
	(*(_self_))._field_lookup=_152813_lookup;
	_1bc8539b6_allowBuiltin(_self_);
	return jule::Trait<_1bc840c17_Kind>(_153013_kind, 19);;
}



inline jule::Ptr<_1bc8411bd_TypeKind> _1bc85a3d5_build(_1bc85307b_typeChecker* _self_, jule::Any* _153629_declKind) {
	jule::Trait<_1bc840c17_Kind> _153717_kind = nullptr;;
	{
		auto &_match_expr{ (*(_153629_declKind)) };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1c08e65a0:;
			{
				jule::Trait<_1bc840c17_Kind> _154017_t = _1bc857657_buildIdent(_self_, (*(_153629_declKind)).cast_ptr<_1bc595c47_IdentTypeDecl>(&__jule_any_type20));;
				if ((_154017_t != nullptr)) {
					_153717_kind=_154017_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1c08e5956:;
			{
				jule::Trait<_1bc840c17_Kind> _154517_t = _1bc857998_buildSubIdent(_self_, (*(_153629_declKind)).cast_ptr<_1bc596044_SubIdentTypeDecl>(&__jule_any_type86));;
				if ((_154517_t != nullptr)) {
					_153717_kind=_154517_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1c08e5b65:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1bc84c7c3_Sptr> _155117_t = _1bc85812a_buildSptr(_self_, (*(_153629_declKind)).cast_ptr<_1bc5966d7_SptrTypeDecl>(&__jule_any_type72));;
				if ((_155117_t != nullptr)) {
					_153717_kind=jule::Trait<_1bc840c17_Kind>(_155117_t, 21);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1c08e5bcb:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1bc85108a_Ptr> _155717_t = _1bc8587ac_buildPtr(_self_, (*(_153629_declKind)).cast_ptr<_1bc597166_PtrTypeDecl>(&__jule_any_type71));;
				if ((_155717_t != nullptr)) {
					_153717_kind=jule::Trait<_1bc840c17_Kind>(_155717_t, 26);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1c08e5c42:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1bc84d296_Slc> _156317_t = _1bc858aed_buildSlc(_self_, (*(_153629_declKind)).cast_ptr<_1bc596a6c_SlcTypeDecl>(&__jule_any_type70));;
				if ((_156317_t != nullptr)) {
					_153717_kind=jule::Trait<_1bc840c17_Kind>(_156317_t, 22);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1c08e5ca8:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1bc8505b7_Arr> _156917_t = _1bc858e3e_buildArr(_self_, (*(_153629_declKind)).cast_ptr<_1bc597908_ArrTypeDecl>(&__jule_any_type69));;
				if ((_156917_t != nullptr)) {
					_153717_kind=jule::Trait<_1bc840c17_Kind>(_156917_t, 25);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1c08e666b:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1bc84e93a_Map> _157517_t = _1bc859280_buildMap(_self_, (*(_153629_declKind)).cast_ptr<_1bc598156_MapTypeDecl>(&__jule_any_type73));;
				if ((_157517_t != nullptr)) {
					_153717_kind=jule::Trait<_1bc840c17_Kind>(_157517_t, 24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1c08e66d2:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1bc84dd8a_Tuple> _158117_t = _1bc8595c1_buildTuple(_self_, (*(_153629_declKind)).cast_ptr<_1bc596d69_TupleTypeDecl>(&__jule_any_type74));;
				if ((_158117_t != nullptr)) {
					_153717_kind=jule::Trait<_1bc840c17_Kind>(_158117_t, 23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1c08e6748:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ece1de96_FnIns> _158717_t = _1bc859c53_buildFunc(_self_, (*(_153629_declKind)).cast_ptr<_1bc5ac159_FnDecl>(&__jule_any_type14));;
				if ((_158717_t != nullptr)) {
					_153717_kind=jule::Trait<_1bc840c17_Kind>(_158717_t, 1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1c08e67ae:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait<_1bc840c17_Kind> _159317_t = _1bc85a094_buildByNamespace(_self_, (*(_153629_declKind)).cast_ptr<_1bc5963da_NamespaceTypeDecl>(&__jule_any_type90));;
				if ((_159317_t != nullptr)) {
					_153717_kind=_159317_t;
				};
			}
		}
		else {
			_case_begin_1c08e5aee:;
			{
				_1bc8537b8_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c08e5a99:;
	};
	if ((_153717_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _153717_kind };
		
		if (_match_expr.type_is(true, 19)) {
			_case_begin_1c23d6940:;
			{
				return _153717_kind.cast_ptr<_1bc8411bd_TypeKind>(19);;
			}
		}
		else {
			_case_begin_1c23d4454:;
			{
				jule::Ptr<_1bc8411bd_TypeKind> _160817_tk = jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=_153717_kind});;
				{
					auto &_match_expr{ _153717_kind };
					
					if (_match_expr.type_is(true, 20)) {
						_case_begin_1c23d4e27:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									{ jule::Slice<jule::Ptr<_1bc8411bd_TypeKind>> *__jule_push_dest = (*(_self_))._field_ignoredGenerics; __jule_push_dest->push(_160817_tk); };
								};
							};
						}
					}
					else if (_match_expr.type_is(true, 0)) {
						_case_begin_1c23d4e8d:;
						{
							jule::Ptr<_1bc5be0b1_StructIns> _161517_s = _153717_kind.cast_ptr<_1bc5be0b1_StructIns>(0);;
							if ((((*(_161517_s))._field_Decl != nullptr) && (*((*(_161517_s))._field_Decl))._field_Binded)) {
								(*(_160817_tk))._field_BindIdent=(*((*(_161517_s))._field_Decl))._field_Ident;
							};
						}
					}
					_match_end_1c23d4dc2:;
				};
				return _160817_tk;;
			}
		}
		_match_end_1c08e6825:;
	};
}



inline jule::Ptr<_1bc8411bd_TypeKind> _1bc85a726_checkDecl(_1bc85307b_typeChecker* _self_, jule::Ptr<_1bc59563c_TypeDecl>* _162433_decl) {
	jule::Ptr<_1bc583a9d_Token> _162613_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*((*(_162433_decl))))._field_Token;
	jule::Ptr<_1bc8411bd_TypeKind> _162913_kind = _1bc85a3d5_build(_self_, &((*((*(_162433_decl))))._field_Kind));;
	(*(_self_))._field_errorToken=_162613_errorToken;
	return _162913_kind;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc85307b_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "ignoredGenerics:" << _Src._field_ignoredGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "cycleRisk:" << _Src._field_cycleRisk << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1bc85b172_prim(jule::Str* _165121_ident, jule::Ptr<_1bc848c97_Prim> _165133_t) {
	return ((*(_165133_t))._field_Kind == (*(_165121_ident)));;
}



inline jule::Bool static__1bc85b4e6_exist(jule::Str* _165522_ident, jule::Ptr<_1bc8411bd_TypeKind>* _165539_k) {
	{
		
		if ((_1bc84381e_Prim((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1c23db8ac:;
			{
				return static__1bc85b172_prim(_165522_ident, _1bc84381e_Prim((*(_165539_k)).ptr()));;
			}
		}
		else if ((_1bc843aa5_Sptr((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1c23db934:;
			{
				jule::Ptr<_1bc84c7c3_Sptr> _166017_sptr = _1bc843aa5_Sptr((*(_165539_k)).ptr());;
				return static__1bc85b4e6_exist(_165522_ident, &((*(_166017_sptr))._field_Elem));;
			}
		}
		else if ((_1bc843d3b_Ptr((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1c23dbba9:;
			{
				jule::Ptr<_1bc85108a_Ptr> _166317_ptr = _1bc843d3b_Ptr((*(_165539_k)).ptr());;
				return static__1bc85b4e6_exist(_165522_ident, &((*(_166317_ptr))._field_Elem));;
			}
		}
		else if ((_1bc844875_Slc((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1c23dbc20:;
			{
				jule::Ptr<_1bc84d296_Slc> _166617_slc = _1bc844875_Slc((*(_165539_k)).ptr());;
				return static__1bc85b4e6_exist(_165522_ident, &((*(_166617_slc))._field_Elem));;
			}
		}
		else if ((_1bc8445de_Arr((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1c23dbc86:;
			{
				jule::Ptr<_1bc8505b7_Arr> _166917_arr = _1bc8445de_Arr((*(_165539_k)).ptr());;
				return static__1bc85b4e6_exist(_165522_ident, &((*(_166917_arr))._field_Elem));;
			}
		}
		else if ((_1bc8453ae_Map((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1c23dbd0d:;
			{
				jule::Ptr<_1bc84e93a_Map> _167217_m = _1bc8453ae_Map((*(_165539_k)).ptr());;
				return (static__1bc85b4e6_exist(_165522_ident, &((*(_167217_m))._field_Key)) || static__1bc85b4e6_exist(_165522_ident, &((*(_167217_m))._field_Val)));;
			}
		}
		else if ((_1bc844d92_Struct((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1c23dbd85:;
			{
				jule::Ptr<_1bc5be0b1_StructIns> _167617_s = _1bc844d92_Struct((*(_165539_k)).ptr());;
				{
					auto expr = &((*(_167617_s))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c23e3e36:;
					if (it != expr_end) {
						jule::Ptr<_1bc83e7d7_InsGeneric> _167725_g = *it;
						{
							if (static__1bc85b4e6_exist(_165522_ident, &((*(_167725_g))._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1c23e3e36:;
						++it;
						goto _iter_begin_1c23e3e36;
					}
					_iter_end_1c23e3e36:;
				};
				return false;;
			}
		}
		else if ((_1bc844b0b_Fn((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1c23dbe95:;
			{
				jule::Ptr<_1ece1de96_FnIns> _168417_f = _1bc844b0b_Fn((*(_165539_k)).ptr());;
				{
					auto expr = &((*(_168417_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c23e5a81:;
					if (it != expr_end) {
						jule::Ptr<_1ece1ceea_ParamIns> _168525_p = *it;
						{
							if (_1ece19bd9_IsSelf((*(_168525_p))._field_Decl.ptr())) {
								goto _iter_next_1c23e5a81;
							};
							if (static__1bc85b4e6_exist(_165522_ident, &((*(_168525_p))._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1c23e5a81:;
						++it;
						goto _iter_begin_1c23e5a81;
					}
					_iter_end_1c23e5a81:;
				};
				if (((*(_168417_f))._field_Result != nullptr)) {
					return static__1bc85b4e6_exist(_165522_ident, &((*(_168417_f))._field_Result));;
				};
				return false;;
			}
		}
		else if ((_1bc845645_Tup((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1c23dc00b:;
			{
				jule::Ptr<_1bc84dd8a_Tuple> _169817_tup = _1bc845645_Tup((*(_165539_k)).ptr());;
				{
					auto expr = &((*(_169817_tup))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c23e83be:;
					if (it != expr_end) {
						jule::Ptr<_1bc8411bd_TypeKind> _169925_t = *it;
						{
							if (static__1bc85b4e6_exist(_165522_ident, &(_169925_t))) {
								return true;;
							};
						}
						_iter_next_1c23e83be:;
						++it;
						goto _iter_begin_1c23e83be;
					}
					_iter_end_1c23e83be:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1c23db769:;
			{
				return false;;
			}
		}
		_match_end_1c23db69d:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1bc85ac10_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bd3a9e01_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bd400b7d_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1bd401b90_stop(_1bd40151e_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1bd401e26_stopped(_1bd40151e_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1bd4021ac_finished(_1bd40151e_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1bd402443_isLastSt(_1bd40151e_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1bd4027a6_pushErr(_1bd40151e_scopeParser* _self_, jule::Ptr<_1bc583a9d_Token> _18926_token, jule::Str _18941_fmt) {
	_1bd420285_pushErr((*(_self_))._field_p.ptr(), _18926_token, _18941_fmt, jule::Slice<jule::Any>());
}



inline void _1bd402b19_pushSuggestion(_1bd40151e_scopeParser* _self_, jule::Str _19433_fmt, jule::Slice<jule::Any> _19446_args) {
	_1bd4205e8_pushSuggestion((*(_self_))._field_p.ptr(), _19433_fmt, _19446_args);
}



inline void _1bd402dc2_insertAsNext(_1bd40151e_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _19836_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1bd400b7d_stmt>(_1bd400b7d_stmt{._field_tokens=(*(_19836_tokens)), });
}



inline jule::Ptr<_1bd400b7d_stmt> _1bd403158_next(_1bd40151e_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_1bc5aa4ba_ScopeTree> _1bd403554_buildScope(_1bd40151e_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _20834_tokens, jule::Ptr<_1bc583a9d_Token> _20856_end) {
	jule::Ptr<_1bc5aa4ba_ScopeTree> _20913_s = _1bd3ee907_newScope();;
	(*(_20913_s))._field_Parent=(*(_self_))._field_s;
	(*(_20913_s))._field_End=_20856_end;
	_1bd40151e_scopeParser _21213_ssp = _1bd40151e_scopeParser{._field_p=(*(_self_))._field_p, };;
	_1bd40d3c7_build(&_21213_ssp, _20834_tokens, &(_20913_s));
	return _20913_s;;
}



inline jule::Ptr<_1bc5ad314_VarDecl> _1bd403895_buildVarSt(_1bd40151e_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _21934_tokens) {
	jule::Ptr<_1bc5ad314_VarDecl> _22013_v = _1bd423112_buildVar((*(_self_))._field_p, (*(_21934_tokens)));;
	(*(_22013_v))._field_Scope=(*(_self_))._field_s;
	return _22013_v;;
}



inline jule::Ptr<_1bc5ad6dd_RetSt> _1bd403bd6_buildRetSt(_1bd40151e_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _22533_tokens) {
	jule::Ptr<_1bc5ad6dd_RetSt> _22613_st = jule::new_ptr<_1bc5ad6dd_RetSt>(_1bc5ad6dd_RetSt{._field_Token=_22533_tokens[0LL], });;
	if ((_22533_tokens.len() > 1LL)) {
		(_22533_tokens).mut_slice(1LL);;
		(*(_22613_st))._field_Expr=_1bd420939_buildExpr((*(_self_))._field_p, &(_22533_tokens));
	};
	return _22613_st;;
}



inline jule::Ptr<_1bc5ade5d_Iter> _1bd404027_buildWhileNextIter(_1bd40151e_scopeParser* _self_, jule::Ptr<_1bd400b7d_stmt>* _23642_s) {
	jule::Ptr<_1bc5ade5d_Iter> _23713_it = jule::new_ptr<_1bc5ade5d_Iter>(_1bc5ade5d_Iter{._field_Token=(*((*(_23642_s))))._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _24013_tokens = (*((*(_23642_s))))._field_tokens.slice(1LL);;
	jule::Ptr<_1bc5ae788_WhileKind> _24113_kind = jule::new_ptr<_1bc5ae788_WhileKind>();;
	if ((_24013_tokens.len() > 0LL)) {
		(*(_24113_kind))._field_Expr=_1bd420939_buildExpr((*(_self_))._field_p, &(_24013_tokens));
	};
	if (_1bd402443_isLastSt(_self_)) {
		_1bd4027a6_pushErr(_self_, (*(_23713_it))._field_Token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	_24013_tokens=(*(_1bd403158_next(_self_)))._field_tokens;
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _25313_stTokens = _1bd419c63_getBlockExpr(&(_24013_tokens));;
	if ((_25313_stTokens.len() > 0LL)) {
		jule::Ptr<_1bd400b7d_stmt> _25517_stmt = jule::new_ptr<_1bd400b7d_stmt>(_1bd400b7d_stmt{._field_tokens=_25313_stTokens, ._field_terminated=(*((*(_23642_s))))._field_terminated});;
		(*(_24113_kind))._field_NextToken=_25313_stTokens[0LL];
		(*(_24113_kind))._field_Next=_1bd40d064_buildSt(_self_, &(_25517_stmt));
	};
	jule::I64 _26313_i = _25313_stTokens.len();;
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _26413_blockTokens = _1bd41ce86_range(&(_26313_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_24013_tokens));;
	if ((_26413_blockTokens == nullptr)) {
		_1bd401b90_stop(_self_);
		_1bd4027a6_pushErr(_self_, (*(_23713_it))._field_Token, jule::Str::lit("body is not exist", 17));
		_1bd402b19_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_26313_i < _24013_tokens.len())) {
		_1bd4027a6_pushErr(_self_, _24013_tokens[_26313_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_23713_it))._field_Scope=_1bd403554_buildScope(_self_, &(_26413_blockTokens), _24013_tokens[(_26313_i - 1LL)]);
	(*(_23713_it))._field_Kind=jule::Any(_24113_kind, &__jule_any_type37);
	return _23713_it;;
}



inline jule::Ptr<_1bc5ae788_WhileKind> _1bd404368_buildWhileIterKind(_1bd40151e_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _28142_tokens) {
	return jule::new_ptr<_1bc5ae788_WhileKind>(_1bc5ae788_WhileKind{._field_Expr=_1bd420939_buildExpr((*(_self_))._field_p, _28142_tokens), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>> _1bd4046a9_getRangeKindKeysTokens(_1bd40151e_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _28746_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>> _28813_vars;;
	jule::Slice<_1ed6c7892_Log> _28819_errs;;
	({
		__jule_tuple_ssx_1bc583a9d_Token__jule_tuple_s_1ed6c7892_Log __jule_assign_result = _1bd41d706_parts(_28746_toks, static_cast<jule::U64>(5LLU), true);
		_28813_vars = __jule_assign_result.__jule_result_arg0;
		_28819_errs = __jule_assign_result.__jule_result_arg1;
	});
	((*((*(_self_))._field_p))._field_errors).append(_28819_errs);;
	return _28813_vars;;
}



inline jule::Ptr<_1bc5ad314_VarDecl> _1bd4049ea_buildRangeKindKey(_1bd40151e_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _29341_tokens) {
	if (((*(_29341_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1bc5ad314_VarDecl> _29713_key = jule::new_ptr<_1bc5ad314_VarDecl>(_1bc5ad314_VarDecl{._field_Token=(*(_29341_tokens))[0LL], ._field_Setter=(*(_29341_tokens))[0LL], });;
	if (((*((*(_29713_key))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*(_29713_key))._field_Mutable=true;
		if (((*(_29341_tokens)).len() == 1LL)) {
			_1bd4027a6_pushErr(_self_, (*(_29713_key))._field_Token, jule::Str::lit("invalid syntax", 14));
		};
		(*(_29713_key))._field_Token=(*(_29341_tokens))[1LL];
	} else if (((*(_29341_tokens)).len() > 1LL)) {
		_1bd4027a6_pushErr(_self_, (*(_29341_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
	};
	if (((*((*(_29713_key))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1bd4027a6_pushErr(_self_, (*(_29713_key))._field_Token, jule::Str::lit("invalid syntax", 14));
		_1bd402b19_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*(_29713_key))._field_Ident=(*((*(_29713_key))._field_Token))._field_Kind;
	return _29713_key;;
}



inline jule::Slice<jule::Ptr<_1bc5ad314_VarDecl>> _1bd404d3b_buildRangeKindKeys(_1bd40151e_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>>* _31942_parts) {
	jule::Slice<jule::Ptr<_1bc5ad314_VarDecl>> _32017_keys = nullptr;;
	{
		auto expr = _31942_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c25baccd:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1bc583a9d_Token>> _32121_tokens = *it;
			{
				{ jule::Slice<jule::Ptr<_1bc5ad314_VarDecl>> &__jule_push_dest = _32017_keys; __jule_push_dest.push(_1bd4049ea_buildRangeKindKey(_self_, &(_32121_tokens))); };
			}
			_iter_next_1c25baccd:;
			++it;
			goto _iter_begin_1c25baccd;
		}
		_iter_end_1c25baccd:;
	};
	return _32017_keys;;
}



inline void _1bd40519e_setupRangeKindKeysPlain(_1bd40151e_scopeParser* _self_, jule::Ptr<_1bc5b0190_RangeKind>* _32747_rng, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _32769_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>> _32813_keyTokens = _1bd4046a9_getRangeKindKeysTokens(_self_, _32769_tokens);;
	if ((_32813_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_32813_keyTokens.len() > 2LL)) {
		_1bd4027a6_pushErr(_self_, (*((*(_32747_rng))))._field_InToken, jule::Str::lit("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1bc5ad314_VarDecl>> _33513_keys = _1bd404d3b_buildRangeKindKeys(_self_, &(_32813_keyTokens));;
	(*((*(_32747_rng))))._field_KeyA=_33513_keys[0LL];
	if ((_33513_keys.len() > 1LL)) {
		(*((*(_32747_rng))))._field_KeyB=_33513_keys[1LL];
	};
}



inline void _1bd405512_setupRangeKindKeysExplicit(_1bd40151e_scopeParser* _self_, jule::Ptr<_1bc5b0190_RangeKind>* _34250_rng, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _34272_tokens) {
	jule::I64 _34313_i = 0LL;;
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _34413_rang = _1bd41ce86_range(&(_34313_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _34272_tokens);;
	if ((_34313_i < (*(_34272_tokens)).len())) {
		_1bd4027a6_pushErr(_self_, (*((*(_34250_rng))))._field_InToken, jule::Str::lit("invalid syntax", 14));
	};
	_1bd40519e_setupRangeKindKeysPlain(_self_, _34250_rng, &(_34413_rang));
}



inline void _1bd405875_setupRangeKindKeys(_1bd40151e_scopeParser* _self_, jule::Ptr<_1bc5b0190_RangeKind>* _35142_rng, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _35164_tokens) {
	if (((*((*(_35164_tokens))[0LL]))._field_Id == static_cast<jule::U64>(74LLU))) {
		_1bd405512_setupRangeKindKeysExplicit(_self_, _35142_rng, _35164_tokens);
		return;;
	};
	_1bd40519e_setupRangeKindKeysPlain(_self_, _35142_rng, _35164_tokens);
}



inline jule::Ptr<_1bc5b0190_RangeKind> _1bd405d2b_buildRangeIterKind(_1bd40151e_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _35942_var_tokens, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _36014_exprTokens, jule::Ptr<_1bc583a9d_Token>* _36041_inToken) {
	jule::Ptr<_1bc5b0190_RangeKind> _36113_rng = jule::new_ptr<_1bc5b0190_RangeKind>(_1bc5b0190_RangeKind{._field_InToken=(*(_36041_inToken)), });;
	if (((*(_36014_exprTokens)).len() == 0LL)) {
		_1bd4027a6_pushErr(_self_, (*(_36113_rng))._field_InToken, jule::Str::lit("expression missing", 18));
		return _36113_rng;;
	};
	(*(_36113_rng))._field_Expr=_1bd420939_buildExpr((*(_self_))._field_p, _36014_exprTokens);
	if (((*(_35942_var_tokens)).len() > 0LL)) {
		_1bd405875_setupRangeKindKeys(_self_, &(_36113_rng), _35942_var_tokens);
	};
	return _36113_rng;;
}



inline jule::Any _1bd406227_buildCommonIterKind(_1bd40151e_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _37543_tokens, jule::Ptr<_1bc583a9d_Token>* _37562_err_tok) {
	jule::I64 _37613_braceN = 0LL;;
	{
		auto expr = _37543_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c25c5832:;
		if (it != expr_end) {
			jule::I64 _37714_i = it - expr->begin();
			jule::Ptr<_1bc583a9d_Token> _37721_tok = *it;
			{
				{
					auto &_match_expr{ (*(_37721_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1c25c65d0:;
						{
							(_37613_braceN)++;
							goto _iter_next_1c25c5832;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1c25c6657:;
						{
							(_37613_braceN)--;
						}
					}
					_match_end_1c25c6514:;
				};
				if ((_37613_braceN != 0LL)) {
					goto _iter_next_1c25c5832;
				};
				{
					auto &_match_expr{ (*(_37721_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(12LLU)) {
						_case_begin_1c25c61e5:;
						{
							jule::Slice<jule::Ptr<_1bc583a9d_Token>> _39421_declTokens = (*(_37543_tokens)).slice(0LL, _37714_i);;
							jule::Slice<jule::Ptr<_1bc583a9d_Token>> _39521_exprTokens = (*(_37543_tokens)).slice((_37714_i + 1LL));;
							return jule::Any(_1bd405d2b_buildRangeIterKind(_self_, &(_39421_declTokens), &(_39521_exprTokens), &(_37721_tok)), &__jule_any_type39);;
						}
					}
					_match_end_1c25c7aba:;
				};
			}
			_iter_next_1c25c5832:;
			++it;
			_37714_i++;
			goto _iter_begin_1c25c5832;
		}
		_iter_end_1c25c5832:;
	};
	return jule::Any(_1bd404368_buildWhileIterKind(_self_, _37543_tokens), &__jule_any_type37);;
}



inline jule::Ptr<_1bc5ade5d_Iter> _1bd406568_buildCommonIter(_1bd40151e_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _40238_tokens) {
	jule::Ptr<_1bc5ade5d_Iter> _40313_it = jule::new_ptr<_1bc5ade5d_Iter>(_1bc5ade5d_Iter{._field_Token=_40238_tokens[0LL], });;
	(_40238_tokens).mut_slice(1LL);;
	if ((_40238_tokens.len() == 0LL)) {
		_1bd401b90_stop(_self_);
		_1bd4027a6_pushErr(_self_, (*(_40313_it))._field_Token, jule::Str::lit("body is not exist", 17));
		_1bd402b19_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _41313_exprTokens = _1bd419c63_getBlockExpr(&(_40238_tokens));;
	if ((_41313_exprTokens.len() > 0LL)) {
		(*(_40313_it))._field_Kind=_1bd406227_buildCommonIterKind(_self_, &(_41313_exprTokens), &((*(_40313_it))._field_Token));
	};
	jule::I64 _41713_i = _41313_exprTokens.len();;
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _41813_scopeTokens = _1bd41ce86_range(&(_41713_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_40238_tokens));;
	if ((_41813_scopeTokens == nullptr)) {
		_1bd401b90_stop(_self_);
		_1bd4027a6_pushErr(_self_, (*(_40313_it))._field_Token, jule::Str::lit("body is not exist", 17));
		_1bd402b19_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_41713_i < _40238_tokens.len())) {
		_1bd4027a6_pushErr(_self_, _40238_tokens[_41713_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_40313_it))._field_Scope=_1bd403554_buildScope(_self_, &(_41813_scopeTokens), _40238_tokens[(_41713_i - 1LL)]);
	return _40313_it;;
}



inline jule::Ptr<_1bc5ade5d_Iter> _1bd4068a9_buildIterSt(_1bd40151e_scopeParser* _self_, jule::Ptr<_1bd400b7d_stmt>* _43235_st) {
	if ((*((*(_43235_st))))._field_terminated) {
		return _1bd404027_buildWhileNextIter(_self_, _43235_st);;
	};
	return _1bd406568_buildCommonIter(_self_, (*((*(_43235_st))))._field_tokens);;
}



inline jule::Ptr<_1bc5b0569_BreakSt> _1bd406bea_buildBreakSt(_1bd40151e_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _43936_tokens) {
	jule::Ptr<_1bc5b0569_BreakSt> _44013_brk = jule::new_ptr<_1bc5b0569_BreakSt>(_1bc5b0569_BreakSt{._field_Token=(*(_43936_tokens))[0LL], });;
	if (((*(_43936_tokens)).len() > 1LL)) {
		if (((*((*(_43936_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1bd4027a6_pushErr(_self_, (*(_43936_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			_1bd402b19_pushSuggestion(_self_, jule::Str::lit("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			(*(_44013_brk))._field_Label=(*(_43936_tokens))[1LL];
			if (((*(_43936_tokens)).len() > 2LL)) {
				_1bd4027a6_pushErr(_self_, (*(_43936_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			};
		};
	};
	return _44013_brk;;
}



inline jule::Ptr<_1bc5b0943_ContSt> _1bd40703b_buildContSt(_1bd40151e_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _45735_tokens) {
	jule::Ptr<_1bc5b0943_ContSt> _45813_cont = jule::new_ptr<_1bc5b0943_ContSt>(_1bc5b0943_ContSt{._field_Token=(*(_45735_tokens))[0LL], });;
	if (((*(_45735_tokens)).len() > 1LL)) {
		if (((*((*(_45735_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1bd4027a6_pushErr(_self_, (*(_45735_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			_1bd402b19_pushSuggestion(_self_, jule::Str::lit("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			(*(_45813_cont))._field_Label=(*(_45735_tokens))[1LL];
			if (((*(_45735_tokens)).len() > 2LL)) {
				_1bd4027a6_pushErr(_self_, (*(_45735_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			};
		};
	};
	return _45813_cont;;
}



inline jule::Ptr<_1bc5b0de9_If> _1bd40737c_buildIf(_1bd40151e_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _47531_tokens) {
	jule::Ptr<_1bc5b0de9_If> _47613_model = jule::new_ptr<_1bc5b0de9_If>(_1bc5b0de9_If{._field_Token=(*(_47531_tokens))[0LL], });;
	((*(_47531_tokens))).mut_slice(1LL);;
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _48013_exprTokens = _1bd419c63_getBlockExpr(_47531_tokens);;
	jule::I64 _48113_i = 0LL;;
	if ((_48013_exprTokens.len() == 0LL)) {
		_1bd4027a6_pushErr(_self_, (*(_47613_model))._field_Token, jule::Str::lit("expression missing", 18));
	} else {
		_48113_i=static_cast<jule::I64>(_48013_exprTokens.len());
	};
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _48713_scopeTokens = _1bd41ce86_range(&(_48113_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _47531_tokens);;
	if ((_48713_scopeTokens == nullptr)) {
		_1bd401b90_stop(_self_);
		_1bd4027a6_pushErr(_self_, (*(_47613_model))._field_Token, jule::Str::lit("body is not exist", 17));
		_1bd402b19_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1bc583a9d_Token> _49413_end = (*(_47531_tokens))[(_48113_i - 1LL)];;
	if ((_48113_i < (*(_47531_tokens)).len())) {
		if (((*((*(_47531_tokens))[_48113_i]))._field_Id == static_cast<jule::U64>(14LLU))) {
			((*(_47531_tokens))).mut_slice(_48113_i);;
		} else {
			_1bd4027a6_pushErr(_self_, (*(_47531_tokens))[_48113_i], jule::Str::lit("invalid syntax", 14));
			(*(_47531_tokens))=nullptr;
		};
	};
	(*(_47613_model))._field_Expr=_1bd420939_buildExpr((*(_self_))._field_p, &(_48013_exprTokens));
	(*(_47613_model))._field_Scope=_1bd403554_buildScope(_self_, &(_48713_scopeTokens), _49413_end);
	return _47613_model;;
}



inline jule::Ptr<_1bc5b12c3_Else> _1bd4076bd_buildElse(_1bd40151e_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _50833_tokens) {
	jule::Ptr<_1bc5b12c3_Else> _50913_els = jule::new_ptr<_1bc5b12c3_Else>(_1bc5b12c3_Else{._field_Token=(*(_50833_tokens))[0LL], });;
	((*(_50833_tokens))).mut_slice(1LL);;
	jule::I64 _51313_i = 0LL;;
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _51413_scopeTokens = _1bd41ce86_range(&(_51313_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _50833_tokens);;
	if ((_51413_scopeTokens == nullptr)) {
		if ((_51313_i < (*(_50833_tokens)).len())) {
			_1bd4027a6_pushErr(_self_, (*(_50913_els))._field_Token, jule::Str::lit("else's cannot have any expression", 33));
		} else {
			_1bd401b90_stop(_self_);
			_1bd4027a6_pushErr(_self_, (*(_50913_els))._field_Token, jule::Str::lit("body is not exist", 17));
			_1bd402b19_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_51313_i < (*(_50833_tokens)).len())) {
		_1bd4027a6_pushErr(_self_, (*(_50833_tokens))[_51313_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_50913_els))._field_Scope=_1bd403554_buildScope(_self_, &(_51413_scopeTokens), (*(_50833_tokens))[(_51313_i - 1LL)]);
	return _50913_els;;
}



inline jule::Ptr<_1bc5b1779_Conditional> _1bd407a0e_buildIfElseChain(_1bd40151e_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _53239_tokens) {
	jule::Ptr<_1bc5b1779_Conditional> _53313_chain = jule::new_ptr<_1bc5b1779_Conditional>(_1bc5b1779_Conditional{._field_Head=_1bd40737c_buildIf(_self_, &(_53239_tokens)), });;
	if (((*(_53313_chain))._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53239_tokens.len() != 0LL)) {
		{
			if (((*(_53239_tokens[0LL]))._field_Id != static_cast<jule::U64>(14LLU))) {
				goto _iter_end_1c25e2475;
			};
			if (((_53239_tokens.len() > 1LL) && ((*(_53239_tokens[1LL]))._field_Id == static_cast<jule::U64>(13LLU)))) {
				(_53239_tokens).mut_slice(1LL);;
				jule::Ptr<_1bc5b0de9_If> _54521_elif = _1bd40737c_buildIf(_self_, &(_53239_tokens));;
				{ jule::Slice<jule::Ptr<_1bc5b0de9_If>> &__jule_push_dest = (*(_53313_chain))._field_Tail; __jule_push_dest.push(_54521_elif); };
				goto _iter_next_1c25e2475;
			};
			(*(_53313_chain))._field_Default=_1bd4076bd_buildElse(_self_, &(_53239_tokens));
			goto _iter_end_1c25e2475;
		}
	_iter_next_1c25e2475:;
	}
	_iter_end_1c25e2475:;;
	return _53313_chain;;
}



inline jule::Ptr<_1bc599971_Expr> _1bd407d50_buildCoCallSt(_1bd40151e_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _55536_tokens) {
	jule::Ptr<_1bc583a9d_Token> _5569_token = _55536_tokens[0LL];;
	(_55536_tokens).mut_slice(1LL);;
	jule::Ptr<_1bc599971_Expr> _55813_e = _1bd420939_buildExpr((*(_self_))._field_p, &(_55536_tokens));;
	if ((_55813_e == nullptr)) {
		return _55813_e;;
	};
	{
		auto &_match_expr{ (*(_55813_e))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1c25e7458:;
			{
				(*((*(_55813_e))._field_Kind.cast_ptr<_1bc5a3507_FnCallExpr>(&__jule_any_type107)))._field_IsCo=true;
			}
		}
		else {
			_case_begin_1c25e6e4c:;
			{
				_1bd4027a6_pushErr(_self_, _5569_token, jule::Str::lit("statement must have function call expression", 44));
			}
		}
		_match_end_1c25e6de7:;
	};
	return _55813_e;;
}



inline jule::Ptr<_1bc5a7e57_GotoSt> _1bd408191_buildGotoSt(_1bd40151e_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _57135_tokens) {
	jule::Ptr<_1bc5a7e57_GotoSt> _57213_gt = jule::new_ptr<_1bc5a7e57_GotoSt>(_1bc5a7e57_GotoSt{._field_Token=(*(_57135_tokens))[0LL], });;
	if (((*(_57135_tokens)).len() == 1LL)) {
		_1bd4027a6_pushErr(_self_, (*(_57213_gt))._field_Token, jule::Str::lit("missing label identifier for goto statement", 43));
		return nullptr;;
	} else if (((*(_57135_tokens)).len() > 2LL)) {
		_1bd4027a6_pushErr(_self_, (*(_57135_tokens))[2LL], jule::Str::lit("invalid syntax", 14));
	};
	jule::Ptr<_1bc583a9d_Token> _58113_identToken = (*(_57135_tokens))[1LL];;
	if (((*(_58113_identToken))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1bd4027a6_pushErr(_self_, _58113_identToken, jule::Str::lit("invalid syntax", 14));
		_1bd402b19_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return _57213_gt;;
	};
	(*(_57213_gt))._field_Label=_58113_identToken;
	return _57213_gt;;
}



inline jule::Ptr<_1bc5a8254_FallSt> _1bd4084d2_buildFallSt(_1bd40151e_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _59135_tokens) {
	jule::Ptr<_1bc5a8254_FallSt> _59213_fll = jule::new_ptr<_1bc5a8254_FallSt>(_1bc5a8254_FallSt{._field_Token=(*(_59135_tokens))[0LL]});;
	if (((*(_59135_tokens)).len() > 1LL)) {
		_1bd4027a6_pushErr(_self_, (*(_59135_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
	};
	return _59213_fll;;
}



inline jule::Ptr<_1bc5b1eb6_TypeAliasDecl> _1bd408823_buildTypeAliasSt(_1bd40151e_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _60140_tokens) {
	jule::Ptr<_1bc5b1eb6_TypeAliasDecl> _60213_tad = _1bd4221cc_buildTypeAliasDecl((*(_self_))._field_p, _60140_tokens);;
	(*(_60213_tad))._field_Scope=(*(_self_))._field_s;
	return _60213_tad;;
}



inline void _1bd408ceb_pushCaseExpr(_1bd40151e_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _60735_tokens, jule::Ptr<_1bc583a9d_Token> _60757_token, jule::Bool _6089_typeMatch, jule::Slice<jule::Ptr<_1bc599971_Expr>>* _60831_exprs) {
	if ((_60735_tokens.len() == 0LL)) {
		return;;
	};
	if (_6089_typeMatch) {
		jule::I64 _61317_i = 0LL;;
		jule::Ptr<_1bc59563c_TypeDecl> _61417_t;;
		jule::Bool _61420_ok = false;;
		({
			__jule_tuple_x_1bc59563c_TypeDecl__jule_tuple_bool __jule_assign_result = _1bd421d8b_buildType((*(_self_))._field_p, &(_60735_tokens), (&(_61317_i)), true);
			_61417_t = __jule_assign_result.__jule_result_arg0;
			_61420_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_61420_ok) {
			{ jule::Slice<jule::Ptr<_1bc599971_Expr>> &__jule_push_dest = (*(_60831_exprs)); __jule_push_dest.push(jule::new_ptr<_1bc599971_Expr>(_1bc599971_Expr{._field_Token=_60735_tokens[0LL], ._field_End=_60735_tokens[(_60735_tokens.len() - 1LL)], ._field_Kind=jule::Any(_61417_t, &__jule_any_type88)})); };
			if ((_61317_i < _60735_tokens.len())) {
				_1bd4027a6_pushErr(_self_, _60735_tokens[_61317_i], jule::Str::lit("invalid syntax", 14));
			};
		};
		return;;
	};
	{ jule::Slice<jule::Ptr<_1bc599971_Expr>> &__jule_push_dest = (*(_60831_exprs)); __jule_push_dest.push(_1bd420939_buildExpr((*(_self_))._field_p, &(_60735_tokens))); };
}



inline __jule_tuple_sx_1bc599971_Expr__jule_tuple_bool _1bd4092a2_buildCaseExprs(_1bd40151e_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _63038_tokens, jule::Ptr<_1bc583a9d_Token>* _63061_colon, jule::Bool _63076_typeMatch) {
	__jule_tuple_sx_1bc599971_Expr__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::Ptr<_1bc599971_Expr>> _63113_exprs = jule::Slice<jule::Ptr<_1bc599971_Expr>>::alloc(0LL, 1LL);;
	jule::I64 _63213_braceN = 0LL;;
	jule::I64 _63313_j = 0LL;;
	{
		auto expr = _63038_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2602dd1:;
		if (it != expr_end) {
			jule::I64 _63414_i = it - expr->begin();
			jule::Ptr<_1bc583a9d_Token> _63421_tok = *it;
			{
				{
					auto &_match_expr{ (*(_63421_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1c26049a4:;
						{
							(_63213_braceN)++;
							goto _iter_next_1c2602dd1;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1c2604a2b:;
						{
							(_63213_braceN)--;
							goto _iter_next_1c2602dd1;
						}
					}
					_match_end_1c26048d8:;
				};
				if ((_63213_braceN != 0LL)) {
					goto _iter_next_1c2602dd1;
				};
				{
					
					if (((*(_63421_tok))._field_Id == static_cast<jule::U64>(66LLU))) {
						_case_begin_1c2605dd4:;
						{
							jule::Slice<jule::Ptr<_1bc583a9d_Token>> _65317_exprTokens = (*(_63038_tokens)).slice(_63313_j, _63414_i);;
							if ((_65317_exprTokens.len() == 0LL)) {
								_1bd4027a6_pushErr(_self_, _63421_tok, jule::Str::lit("expression missing", 18));
							} else {
								_1bd408ceb_pushCaseExpr(_self_, (*(_63038_tokens)).slice(_63313_j, _63414_i), _63421_tok, _63076_typeMatch, &(_63113_exprs));
							};
							_63313_j=static_cast<jule::I64>((_63414_i + 1LL));
						}
					}
					else if (((*(_63421_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
						_case_begin_1c2605e5b:;
						{
							(*(_63061_colon))=_63421_tok;
							_1bd408ceb_pushCaseExpr(_self_, (*(_63038_tokens)).slice(_63313_j, _63414_i), _63421_tok, _63076_typeMatch, &(_63113_exprs));
							((*(_63038_tokens))).mut_slice((_63414_i + 1LL));;
							__jule_func_result.__jule_result_arg0 = _63113_exprs;
							__jule_func_result.__jule_result_arg1 = (((_63414_i - _63313_j) == 0LL) || (_63113_exprs.len() != 0LL));
							return __jule_func_result;;
						}
					}
					_match_end_1c26058b7:;
				};
			}
			_iter_next_1c2602dd1:;
			++it;
			_63414_i++;
			goto _iter_begin_1c2602dd1;
		}
		_iter_end_1c2602dd1:;
	};
	_1bd4027a6_pushErr(_self_, (*(_63038_tokens))[0LL], jule::Str::lit("invalid syntax", 14));
	(*(_63038_tokens))=nullptr;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline jule::Ptr<_1bc5aa4ba_ScopeTree> _1bd4095e3_buildCaseScope(_1bd40151e_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _67238_tokens) {
	jule::I64 _67313_n = 0LL;;
	for (;;) {
		{
			jule::I64 _67517_i = 0LL;;
			jule::Slice<jule::Ptr<_1bc583a9d_Token>> _67617_next;;
			({
				__jule_tuple_sx_1bc583a9d_Token__jule_tuple_bool __jule_assign_result = _1bd40084d_skipSt(&(_67517_i), (*(_67238_tokens)).slice(_67313_n));
				_67617_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_67617_next.len() == 0LL)) {
				goto _iter_end_1c2609c2e;
			};
			jule::Ptr<_1bc583a9d_Token> _68013_tok = _67617_next[0LL];;
			if (((*(_68013_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_67313_n+=_67517_i;
				goto _iter_next_1c2609c2e;
			};
			jule::Slice<jule::Ptr<_1bc583a9d_Token>> _68517_scopeTokens = (*(_67238_tokens)).slice(0LL, _67313_n);;
			jule::Ptr<_1bc5aa4ba_ScopeTree> _68617_scope = _1bd403554_buildScope(_self_, &(_68517_scopeTokens), (*(_67238_tokens))[_67313_n]);;
			((*(_67238_tokens))).mut_slice(_67313_n);;
			return _68617_scope;;
		}
	_iter_next_1c2609c2e:;
	}
	_iter_end_1c2609c2e:;;
	jule::Ptr<_1bc583a9d_Token> _69017_end;;
	if (((*(_67238_tokens)).len() > 0LL)) {
		_69017_end=(*(_67238_tokens))[((*(_67238_tokens)).len() - 1LL)];
	};
	jule::Ptr<_1bc5aa4ba_ScopeTree> _69413_scope = _1bd403554_buildScope(_self_, _67238_tokens, _69017_end);;
	(*(_67238_tokens))=nullptr;
	return _69413_scope;;
}



inline __jule_tuple_x_1bc5b246c_Case__jule_tuple_bool _1bd4099de_buildCase(_1bd40151e_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _69933_tokens, jule::Bool _69951_typeMatch) {
	__jule_tuple_x_1bc5b246c_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1bc5b246c_Case> _70013_c = jule::new_ptr<_1bc5b246c_Case>(_1bc5b246c_Case{._field_Token=(*(_69933_tokens))[0LL], });;
	((*(_69933_tokens))).mut_slice(1LL);;
	jule::Ptr<_1bc583a9d_Token> _70417_colon = nullptr;;
	jule::Bool _70518_ok = false;;
	({
		__jule_tuple_sx_1bc599971_Expr__jule_tuple_bool __jule_assign_result = _1bd4092a2_buildCaseExprs(_self_, _69933_tokens, &(_70417_colon), _69951_typeMatch);
		(*(_70013_c))._field_Exprs = __jule_assign_result.__jule_result_arg0;
		_70518_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_70013_c))._field_Scope=_1bd4095e3_buildCaseScope(_self_, _69933_tokens);
	if (((*((*(_70013_c))._field_Scope))._field_End == nullptr)) {
		(*((*(_70013_c))._field_Scope))._field_End=_70417_colon;
	};
	jule::Bool _7109_isDefault = (_70518_ok && ((*(_70013_c))._field_Exprs.len() == 0LL));;
	__jule_func_result.__jule_result_arg0 = _70013_c;
	__jule_func_result.__jule_result_arg1 = _7109_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1bc5b246c_Case__jule_tuple_x_1bc5b12c3_Else _1bd409dda_buildCases(_1bd40151e_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _71433_tokens, jule::Bool _71451_typeMatch) {
	__jule_tuple_sx_1bc5b246c_Case__jule_tuple_x_1bc5b12c3_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1bc5b246c_Case>> _71517_cases = nullptr;;
	jule::Ptr<_1bc5b12c3_Else> _71617_def = nullptr;;
	jule::Bool _71713_defNotLast = false;;
	while ((_71433_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1bc583a9d_Token> _71917_tok = _71433_tokens[0LL];;
			if (((*(_71917_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_1bd4027a6_pushErr(_self_, _71917_tok, jule::Str::lit("invalid syntax", 14));
				goto _iter_end_1c2612e57;
			};
			jule::Ptr<_1bc5b246c_Case> _72417_c;;
			jule::Bool _72420_isDefault = false;;
			({
				__jule_tuple_x_1bc5b246c_Case__jule_tuple_bool __jule_assign_result = _1bd4099de_buildCase(_self_, &(_71433_tokens), _71451_typeMatch);
				_72417_c = __jule_assign_result.__jule_result_arg0;
				_72420_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72420_isDefault) {
				(*(_72417_c))._field_Token=_71917_tok;
				if ((_71617_def == nullptr)) {
					_71617_def=jule::new_ptr<_1bc5b12c3_Else>(_1bc5b12c3_Else{._field_Token=(*(_72417_c))._field_Token, ._field_Scope=(*(_72417_c))._field_Scope});
				} else {
					_1bd4027a6_pushErr(_self_, _71917_tok, jule::Str::lit("invalid syntax", 14));
				};
			} else {
				_71713_defNotLast=(_71713_defNotLast || (_71617_def != nullptr));
				{ jule::Slice<jule::Ptr<_1bc5b246c_Case>> &__jule_push_dest = _71517_cases; __jule_push_dest.push(_72417_c); };
			};
		}
	_iter_next_1c2612e57:;
	}
	_iter_end_1c2612e57:;;
	if (_71713_defNotLast) {
		_1bd4027a6_pushErr(_self_, (*(_71617_def))._field_Token, jule::Str::lit("default case should be last case", 32));
	};
	__jule_func_result.__jule_result_arg0 = _71517_cases;
	__jule_func_result.__jule_result_arg1 = _71617_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1bc5b2c86_MatchCase> _1bd40a22b_buildMatchCase(_1bd40151e_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _74837_tokens) {
	jule::Ptr<_1bc5b2c86_MatchCase> _74913_m = jule::new_ptr<_1bc5b2c86_MatchCase>(_1bc5b2c86_MatchCase{._field_Token=_74837_tokens[0LL], });;
	(_74837_tokens).mut_slice(1LL);;
	if (((_74837_tokens.len() > 0LL) && ((*(_74837_tokens[0LL]))._field_Id == static_cast<jule::U64>(7LLU)))) {
		(*(_74913_m))._field_TypeMatch=true;
		(_74837_tokens).mut_slice(1LL);;
	};
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _75913_exprTokens = _1bd419c63_getBlockExpr(&(_74837_tokens));;
	if ((_75913_exprTokens.len() > 0LL)) {
		(*(_74913_m))._field_Expr=_1bd420939_buildExpr((*(_self_))._field_p, &(_75913_exprTokens));
	} else if ((*(_74913_m))._field_TypeMatch) {
		_1bd4027a6_pushErr(_self_, (*(_74913_m))._field_Token, jule::Str::lit("expression missing", 18));
	};
	jule::I64 _76613_i = _75913_exprTokens.len();;
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _76713_blockToks = _1bd41ce86_range(&(_76613_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_74837_tokens));;
	if ((_76713_blockToks == nullptr)) {
		_1bd401b90_stop(_self_);
		_1bd4027a6_pushErr(_self_, (*(_74913_m))._field_Token, jule::Str::lit("body is not exist", 17));
		_1bd402b19_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_76613_i < _74837_tokens.len())) {
		_1bd4027a6_pushErr(_self_, _74837_tokens[_76613_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_74913_m))._field_End=_74837_tokens[(_76613_i - 1LL)];
	({
		__jule_tuple_sx_1bc5b246c_Case__jule_tuple_x_1bc5b12c3_Else __jule_assign_result = _1bd409dda_buildCases(_self_, _76713_blockToks, (*(_74913_m))._field_TypeMatch);
		(*(_74913_m))._field_Cases = __jule_assign_result.__jule_result_arg0;
		(*(_74913_m))._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _74913_m;;
}



inline jule::Ptr<_1bc5aa4ba_ScopeTree> _1bd40a56c_buildScopeSt(_1bd40151e_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _78135_tokens) {
	jule::Bool _78213_isUnsafe = false;;
	jule::Bool _78313_isDeferred = false;;
	jule::Ptr<_1bc583a9d_Token> _78413_token = _78135_tokens[0LL];;
	if (((*(_78413_token))._field_Id == static_cast<jule::U64>(31LLU))) {
		_78213_isUnsafe=true;
		(_78135_tokens).mut_slice(1LL);;
		if ((_78135_tokens.len() == 0LL)) {
			_1bd4027a6_pushErr(_self_, _78413_token, jule::Str::lit("invalid syntax", 14));
			return nullptr;;
		};
		_78413_token=_78135_tokens[0LL];
		if (((*(_78413_token))._field_Id == static_cast<jule::U64>(33LLU))) {
			_78313_isDeferred=true;
			(_78135_tokens).mut_slice(1LL);;
			if ((_78135_tokens.len() == 0LL)) {
				_1bd4027a6_pushErr(_self_, _78413_token, jule::Str::lit("invalid syntax", 14));
				return nullptr;;
			};
		};
	} else if (((*(_78413_token))._field_Id == static_cast<jule::U64>(33LLU))) {
		_78313_isDeferred=true;
		(_78135_tokens).mut_slice(1LL);;
		if ((_78135_tokens.len() == 0LL)) {
			_1bd4027a6_pushErr(_self_, _78413_token, jule::Str::lit("invalid syntax", 14));
			return nullptr;;
		};
	};
	jule::I64 _81013_i = 0LL;;
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _81113_scopeTokens = _1bd41ce86_range(&(_81013_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_78135_tokens));;
	if ((_81113_scopeTokens == nullptr)) {
		_1bd4027a6_pushErr(_self_, _78413_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	} else if ((_81013_i < _78135_tokens.len())) {
		_1bd4027a6_pushErr(_self_, _78135_tokens[_81013_i], jule::Str::lit("invalid syntax", 14));
	};
	jule::Ptr<_1bc5aa4ba_ScopeTree> _81813_scope = _1bd403554_buildScope(_self_, &(_81113_scopeTokens), _78135_tokens[(_81013_i - 1LL)]);;
	(*(_81813_scope))._field_Unsafety=_78213_isUnsafe;
	(*(_81813_scope))._field_Deferred=_78313_isDeferred;
	return _81813_scope;;
}



inline jule::Ptr<_1bc5a7a7d_LabelSt> _1bd40a8ad_buildLabelSt(_1bd40151e_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _82436_tokens) {
	jule::Ptr<_1bc5a7a7d_LabelSt> _82513_lbl = jule::new_ptr<_1bc5a7a7d_LabelSt>(_1bc5a7a7d_LabelSt{._field_Token=(*(_82436_tokens))[0LL], ._field_Ident=(*((*(_82436_tokens))[0LL]))._field_Kind});;
	if (((*(_82436_tokens)).len() > 2LL)) {
		((*(_82436_tokens))).mut_slice(2LL);;
		_1bd402dc2_insertAsNext(_self_, _82436_tokens);
	};
	return _82513_lbl;;
}



inline __jule_tuple__1bc5a9b07_StmtData__jule_tuple_bool _1bd40abee_buildIdSt(_1bd40151e_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _83933_tokens) {
	__jule_tuple__1bc5a9b07_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_83933_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_1bc583a9d_Token> _84413_token = (*(_83933_tokens))[1LL];;
	{
		auto &_match_expr{ (*(_84413_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1c2628797:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1bd40a8ad_buildLabelSt(_self_, _83933_tokens), &__jule_any_type56);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1c26290a0:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1bd41b3d5_assignInfo> _1bd40b040_buildAssignInfo(_1bd40151e_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _85339_tokens) {
	jule::Ptr<_1bd41b3d5_assignInfo> _85413_info = jule::new_ptr<_1bd41b3d5_assignInfo>(_1bd41b3d5_assignInfo{._field_ok=true});;
	jule::I64 _85713_braceN = 0LL;;
	{
		auto expr = _85339_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c262a700:;
		if (it != expr_end) {
			jule::I64 _85814_i = it - expr->begin();
			jule::Ptr<_1bc583a9d_Token> _85821_token = *it;
			{
				{
					auto &_match_expr{ (*(_85821_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1c262b58b:;
						{
							(_85713_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1c262b613:;
						{
							(_85713_braceN)--;
						}
					}
					_match_end_1c262b4c0:;
				};
				{
					
					if ((_85713_braceN > 0LL)) {
						_case_begin_1c262c47c:;
						{
							goto _iter_next_1c262a700;
						}
					}
					else if (((!(_1bc588a09_IsAssignOp((*(_85821_token))._field_Id))) && ((*(_85821_token))._field_Id != static_cast<jule::U64>(38LLU)))) {
						_case_begin_1c262c504:;
						{
							goto _iter_next_1c262a700;
						}
					}
					_match_end_1c262c405:;
				};
				(*(_85413_info))._field_l=(*(_85339_tokens)).slice(0LL, _85814_i);
				if (((*(_85413_info))._field_l.len() == 0LL)) {
					(*(_85413_info))._field_ok=false;
				};
				(*(_85413_info))._field_setter=_85821_token;
				if (((_85814_i + 1LL) >= (*(_85339_tokens)).len())) {
					(*(_85413_info))._field_r=nullptr;
					(*(_85413_info))._field_ok=_1bc588740_IsPostfixOp((*((*(_85413_info))._field_setter))._field_Id);
					goto _iter_end_1c262a700;
				};
				(*(_85413_info))._field_r=(*(_85339_tokens)).slice((_85814_i + 1LL));
				if (_1bc588740_IsPostfixOp((*((*(_85413_info))._field_setter))._field_Id)) {
					if (((*(_85413_info))._field_r.len() > 0LL)) {
						_1bd4027a6_pushErr(_self_, (*(_85413_info))._field_r[0LL], jule::Str::lit("invalid syntax", 14));
						(*(_85413_info))._field_r=nullptr;
					};
				};
				goto _iter_end_1c262a700;
			}
			_iter_next_1c262a700:;
			++it;
			_85814_i++;
			goto _iter_begin_1c262a700;
		}
		_iter_end_1c262a700:;
	};
	return _85413_info;;
}



inline jule::Ptr<_1bc5a88b4_AssignLeft> _1bd40b381_buildAssignL(_1bd40151e_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _89836_tokens) {
	jule::Ptr<_1bc5a88b4_AssignLeft> _89913_l = jule::new_ptr<_1bc5a88b4_AssignLeft>(_1bc5a88b4_AssignLeft{._field_Token=(*(_89836_tokens))[0LL], });;
	if (((*((*(_89836_tokens))[0LL]))._field_Id == static_cast<jule::U64>(1LLU))) {
		(*(_89913_l))._field_Ident=(*((*(_89913_l))._field_Token))._field_Kind;
	};
	(*(_89913_l))._field_Expr=_1bd420939_buildExpr((*(_self_))._field_p, _89836_tokens);
	return _89913_l;;
}



inline jule::Slice<jule::Ptr<_1bc5a88b4_AssignLeft>> _1bd40b6c2_buildAssignLs(_1bd40151e_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>>* _90937_parts) {
	jule::Slice<jule::Ptr<_1bc5a88b4_AssignLeft>> _91017_lefts = nullptr;;
	{
		auto expr = _90937_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2635023:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1bc583a9d_Token>> _91121_part = *it;
			{
				jule::Ptr<_1bc5a88b4_AssignLeft> _91217_l = _1bd40b381_buildAssignL(_self_, &(_91121_part));;
				{ jule::Slice<jule::Ptr<_1bc5a88b4_AssignLeft>> &__jule_push_dest = _91017_lefts; __jule_push_dest.push(_91217_l); };
			}
			_iter_next_1c2635023:;
			++it;
			goto _iter_begin_1c2635023;
		}
		_iter_end_1c2635023:;
	};
	return _91017_lefts;;
}



inline __jule_tuple__1bc5a9b07_StmtData__jule_tuple_bool _1bd40ba13_buildPlainAssign(_1bd40151e_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _91840_tokens) {
	__jule_tuple__1bc5a9b07_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1bd41b3d5_assignInfo> _91913_info = _1bd40b040_buildAssignInfo(_self_, _91840_tokens);;
	if ((!((*(_91913_info))._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1bc5a8e47_AssignSt> _92413_assign = jule::new_ptr<_1bc5a8e47_AssignSt>(_1bc5a8e47_AssignSt{._field_Setter=(*(_91913_info))._field_setter, });;
	if (((*((*(_91913_info))._field_setter))._field_Id == static_cast<jule::U64>(38LLU))) {
		(*(_92413_assign))._field_Declarative=true;
		(*(_92413_assign))._field_Right=_1bd420939_buildExpr((*(_self_))._field_p, &((*(_91913_info))._field_r));
		jule::Bool _93213_ok = _1bd40be0e_buildDeclAssign1(_self_, &((*(_91913_info))._field_l), &(_92413_assign));;
		if ((!(_93213_ok))) {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		if (((*(_92413_assign))._field_Left.len() > 1LL)) {
			__jule_func_result.__jule_result_arg0 = jule::Any(_92413_assign, &__jule_any_type58);
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		jule::Ptr<_1bc5a88b4_AssignLeft> _94017_left = (*(_92413_assign))._field_Left[0LL];;
		jule::Ptr<_1bc5ad314_VarDecl> _94117_decl = jule::new_ptr<_1bc5ad314_VarDecl>(_1bc5ad314_VarDecl{._field_Scope=(*(_self_))._field_s, ._field_Token=(*(_94017_left))._field_Token, ._field_Setter=(*(_92413_assign))._field_Setter, ._field_Ident=(*(_94017_left))._field_Ident, ._field_Mutable=(*(_94017_left))._field_Mutable, ._field_Reference=(*(_94017_left))._field_Reference, ._field_Expr=(*(_92413_assign))._field_Right});;
		__jule_func_result.__jule_result_arg0 = jule::Any(_94117_decl, &__jule_any_type16);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>> _95313_parts;;
	jule::Slice<_1ed6c7892_Log> _95320_errs;;
	({
		__jule_tuple_ssx_1bc583a9d_Token__jule_tuple_s_1ed6c7892_Log __jule_assign_result = _1bd41d706_parts(&((*(_91913_info))._field_l), static_cast<jule::U64>(5LLU), true);
		_95313_parts = __jule_assign_result.__jule_result_arg0;
		_95320_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_95320_errs.len() > 0LL)) {
		((*((*(_self_))._field_p))._field_errors).append(_95320_errs);;
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(*(_92413_assign))._field_Left=_1bd40b6c2_buildAssignLs(_self_, &(_95313_parts));
	if (((*(_91913_info))._field_r != nullptr)) {
		(*(_92413_assign))._field_Right=_1bd420939_buildExpr((*(_self_))._field_p, &((*(_91913_info))._field_r));
	};
	__jule_func_result.__jule_result_arg0 = jule::Any(_92413_assign, &__jule_any_type58);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Bool _1bd40be0e_buildDeclAssign1(_1bd40151e_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _96740_lefts, jule::Ptr<_1bc5a8e47_AssignSt>* _96762_assign) {
	jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>> _96913_parts;;
	jule::Slice<_1ed6c7892_Log> _96920_errs;;
	({
		__jule_tuple_ssx_1bc583a9d_Token__jule_tuple_s_1ed6c7892_Log __jule_assign_result = _1bd41d706_parts(_96740_lefts, static_cast<jule::U64>(5LLU), true);
		_96913_parts = __jule_assign_result.__jule_result_arg0;
		_96920_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_96920_errs.len() > 0LL)) {
		((*((*(_self_))._field_p))._field_errors).append(_96920_errs);;
		return false;;
	};
	{
		auto expr = &(_96913_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c264167d:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1bc583a9d_Token>> _97521_part = *it;
			{
				jule::Bool _97617_isMut = false;;
				jule::Bool _97717_isRef = false;;
				jule::Ptr<_1bc583a9d_Token> _97913_token = _97521_part[0LL];;
				if (((*(_97913_token))._field_Id == static_cast<jule::U64>(32LLU))) {
					_97617_isMut=true;
					(_97521_part).mut_slice(1LL);;
					if ((_97521_part.len() == 0LL)) {
						_1bd4027a6_pushErr(_self_, _97913_token, jule::Str::lit("invalid syntax", 14));
						goto _iter_next_1c264167d;
					};
				};
				if (((*(_97521_part[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
					_97717_isRef=true;
					(_97521_part).mut_slice(1LL);;
					if ((_97521_part.len() == 0LL)) {
						_1bd4027a6_pushErr(_self_, _97913_token, jule::Str::lit("invalid syntax", 14));
						goto _iter_next_1c264167d;
					};
				};
				if ((((*(_97521_part[0LL]))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(_97521_part[0LL]))._field_Id != static_cast<jule::U64>(74LLU)))) {
					_1bd4027a6_pushErr(_self_, _97913_token, jule::Str::lit("invalid syntax", 14));
					goto _iter_next_1c264167d;
				};
				jule::Ptr<_1bc5a88b4_AssignLeft> _100317_l = _1bd40b381_buildAssignL(_self_, &(_97521_part));;
				(*(_100317_l))._field_Mutable=_97617_isMut;
				(*(_100317_l))._field_Reference=_97717_isRef;
				{ jule::Slice<jule::Ptr<_1bc5a88b4_AssignLeft>> &__jule_push_dest = (*((*(_96762_assign))))._field_Left; __jule_push_dest.push(_100317_l); };
			}
			_iter_next_1c264167d:;
			++it;
			goto _iter_begin_1c264167d;
		}
		_iter_end_1c264167d:;
	};
	return true;;
}



inline __jule_tuple_x_1bc5a8e47_AssignSt__jule_tuple_bool _1bd40c250_buildDeclAssign(_1bd40151e_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _101238_tokens) {
	__jule_tuple_x_1bc5a8e47_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_101238_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(_101238_tokens).mut_slice(1LL);;
	jule::Ptr<_1bc583a9d_Token> _101813_token = _101238_tokens[0LL];;
	if (((*(_101813_token))._field_Id != static_cast<jule::U64>(74LLU))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1bc5a8e47_AssignSt> _102313_assign = jule::new_ptr<_1bc5a8e47_AssignSt>(_1bc5a8e47_AssignSt{._field_Declarative=true, });;
	jule::I64 _102713_i = 0LL;;
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _102813_rang = _1bd41ce86_range(&(_102713_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_101238_tokens));;
	if ((_102813_rang == nullptr)) {
		_1bd4027a6_pushErr(_self_, _101813_token, jule::Str::lit("invalid syntax", 14));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_102713_i + 1LL) < _101238_tokens.len())) {
		(*(_102313_assign))._field_Setter=_101238_tokens[_102713_i];
		if (((*((*(_102313_assign))._field_Setter))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1bd4027a6_pushErr(_self_, (*(_102313_assign))._field_Setter, jule::Str::lit("invalid syntax", 14));
		};
		(_102713_i)++;
		jule::Slice<jule::Ptr<_1bc583a9d_Token>> _103817_exprTokens = _101238_tokens.slice(_102713_i);;
		(*(_102313_assign))._field_Right=_1bd420939_buildExpr((*(_self_))._field_p, &(_103817_exprTokens));
	};
	jule::Bool _10429_ok = _1bd40be0e_buildDeclAssign1(_self_, &(_102813_rang), &(_102313_assign));;
	__jule_func_result.__jule_result_arg0 = _102313_assign;
	__jule_func_result.__jule_result_arg1 = _10429_ok;
	return __jule_func_result;;
}



inline __jule_tuple__1bc5a9b07_StmtData__jule_tuple_bool _1bd40c591_buildAssignSt(_1bd40151e_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _104637_tokens) {
	__jule_tuple__1bc5a9b07_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1bd41b78c_checkAssignTokens(_104637_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_104637_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1c265014d:;
			{
				({
					__jule_tuple_x_1bc5a8e47_AssignSt__jule_tuple_bool __jule_assign_result = _1bd40c250_buildDeclAssign(_self_, (*(_104637_tokens)));
					__jule_func_result.__jule_result_arg0 = jule::Any(__jule_assign_result.__jule_result_arg0, &__jule_any_type58);
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1c264ec52:;
			{
				({
					__jule_tuple__1bc5a9b07_StmtData__jule_tuple_bool __jule_assign_result = _1bd40ba13_buildPlainAssign(_self_, _104637_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1c264ebdb:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1bc59a345_UseExpr> _1bd40c8d2_buildUseExpr(_1bd40151e_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _105936_tokens) {
	if (((*(_105936_tokens)).len() == 1LL)) {
		_1bd4027a6_pushErr(_self_, (*(_105936_tokens))[0LL], jule::Str::lit("expression missing", 18));
		return nullptr;;
	};
	jule::Ptr<_1bc59a345_UseExpr> _106413_ue = jule::new_ptr<_1bc59a345_UseExpr>(_1bc59a345_UseExpr{._field_Token=(*(_105936_tokens))[0LL], });;
	((*(_105936_tokens))).mut_slice(1LL);;
	(*(_106413_ue))._field_Expr=_1bd420939_buildExpr((*(_self_))._field_p, _105936_tokens);
	return _106413_ue;;
}



inline jule::Any _1bd40cc23_buildConstSt(_1bd40151e_scopeParser* _self_, jule::Ptr<_1bd400b7d_stmt>* _107236_st) {
	if (((*((*(_107236_st))))._field_tokens.len() == 1LL)) {
		_1bd4027a6_pushErr(_self_, (*((*(_107236_st))))._field_tokens[0LL], jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_107236_st))))._field_tokens[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1c26548b1:;
			{
				(*((*(_107236_st))))._field_tokens=(*((*(_107236_st))))._field_tokens.slice(1LL);
				jule::Ptr<_1bc5ade5d_Iter> _108017_iter = _1bd4068a9_buildIterSt(_self_, _107236_st);;
				if ((_108017_iter != nullptr)) {
					(*(_108017_iter))._field_Comptime=true;
				};
				return jule::Any(_108017_iter, &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1c26531d9:;
			{
				(*((*(_107236_st))))._field_tokens=(*((*(_107236_st))))._field_tokens.slice(1LL);
				jule::Ptr<_1bc5b2c86_MatchCase> _108717_mt = _1bd40a22b_buildMatchCase(_self_, (*((*(_107236_st))))._field_tokens);;
				if ((_108717_mt != nullptr)) {
					(*(_108717_mt))._field_Comptime=true;
				};
				return jule::Any(_108717_mt, &__jule_any_type59);;
			}
		}
		else {
			_case_begin_1c2654295:;
			{
				return jule::Any(_1bd403895_buildVarSt(_self_, &((*((*(_107236_st))))._field_tokens)), &__jule_any_type16);;
			}
		}
		_match_end_1c265422e:;
	};
}



inline jule::Any _1bd40d064_buildSt(_1bd40151e_scopeParser* _self_, jule::Ptr<_1bd400b7d_stmt>* _109731_st) {
	jule::Ptr<_1bc583a9d_Token> _109813_token = (*((*(_109731_st))))._field_tokens[0LL];;
	if (((*(_109813_token))._field_Id == static_cast<jule::U64>(1LLU))) {
		jule::Any _110017_s = jule::Any(nullptr);;
		jule::Bool _110020_ok = false;;
		({
			__jule_tuple__1bc5a9b07_StmtData__jule_tuple_bool __jule_assign_result = _1bd40abee_buildIdSt(_self_, &((*((*(_109731_st))))._field_tokens));
			_110017_s = __jule_assign_result.__jule_result_arg0;
			_110020_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_110020_ok) {
			return _110017_s;;
		};
	};
	jule::Any _110613_s = jule::Any(nullptr);;
	jule::Bool _110616_ok = false;;
	({
		__jule_tuple__1bc5a9b07_StmtData__jule_tuple_bool __jule_assign_result = _1bd40c591_buildAssignSt(_self_, &((*((*(_109731_st))))._field_tokens));
		_110613_s = __jule_assign_result.__jule_result_arg0;
		_110616_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_110616_ok) {
		return _110613_s;;
	};
	{
		auto &_match_expr{ (*(_109813_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1c2659e6b:;
			{
				return jule::Any(_1bd40c8d2_buildUseExpr(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type63);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1c265a4bb:;
			{
				return _1bd40cc23_buildConstSt(_self_, _109731_st);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1c265a686:;
			{
				return jule::Any(_1bd403895_buildVarSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1c265a6ec:;
			{
				return jule::Any(_1bd403bd6_buildRetSt(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1c265a763:;
			{
				return jule::Any(_1bd4068a9_buildIterSt(_self_, _109731_st), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1c265a7c9:;
			{
				return jule::Any(_1bd406bea_buildBreakSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1c265a840:;
			{
				return jule::Any(_1bd40703b_buildContSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type55);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1c265a8b7:;
			{
				return jule::Any(_1bd407a0e_buildIfElseChain(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1c265a93e:;
			{
				return jule::Any(_1bd407d50_buildCoCallSt(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(18LLU)) {
			_case_begin_1c265a9b6:;
			{
				return jule::Any(_1bd408191_buildGotoSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type57);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_1c265aa3d:;
			{
				return jule::Any(_1bd4084d2_buildFallSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1c265aab5:;
			{
				return jule::Any(_1bd408823_buildTypeAliasSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1c265ab3c:;
			{
				return jule::Any(_1bd40a22b_buildMatchCase(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type59);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1c265abb4:;
			{
				if (((*((*(_109731_st))))._field_tokens.len() < 1LL)) {
					goto _match_end_1c265a2ce;
				};
				if ((((*((*((*(_109731_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(33LLU)) || ((*((*((*(_109731_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(72LLU)))) {
					return jule::Any(_1bd40a56c_buildScopeSt(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type51);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1c265ac3b:;
			{
				return jule::Any(_1bd40a56c_buildScopeSt(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type51);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1c265acb3:;
			{
				return jule::Any(_1bd40a56c_buildScopeSt(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type51);;
			}
		}
		_match_end_1c265a2ce:;
	};
	jule::Ptr<_1bc599971_Expr> _115313_expr = _1bd420939_buildExpr((*(_self_))._field_p, &((*((*(_109731_st))))._field_tokens));;
	if ((_115313_expr != nullptr)) {
		return jule::Any(_115313_expr, &__jule_any_type52);;
	};
	_1bd4027a6_pushErr(_self_, _109813_token, jule::Str::lit("invalid syntax", 14));
	return nullptr;;
}



inline void _1bd40d3c7_build(_1bd40151e_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _116129_tokens, jule::Ptr<_1bc5aa4ba_ScopeTree>* _116152_s) {
	if (((*(_116152_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1bd401035_splitStmts(_116129_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_116152_s));
	while (((!(_1bd402443_isLastSt(_self_))) && (!(_1bd4021ac_finished(_self_))))) {
		{
			jule::Ptr<_1bd400b7d_stmt> _116917_st = _1bd403158_next(_self_);;
			jule::Any _117017_data = _1bd40d064_buildSt(_self_, &(_116917_st));;
			if ((_117017_data != nullptr)) {
				{ jule::Slice<_1bc5a9d5a_Stmt> &__jule_push_dest = (*((*(_self_))._field_s))._field_Stmts; __jule_push_dest.push(_1bc5a9d5a_Stmt{._field_Token=(*(_116917_st))._field_tokens[0LL], ._field_Data=_117017_data}); };
			};
			if (_1bd401e26_stopped(_self_)) {
				goto _iter_end_1c2666e67;
			};
		}
	_iter_next_1c2666e67:;
	}
	_iter_end_1c2666e67:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bd40151e_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _1bd40e72a_pushErr(_1bd40de44_exprBuilder* _self_, jule::Ptr<_1bc583a9d_Token> _4526_token, jule::Str _4541_fmt, jule::Slice<jule::Any> _4554_args) {
	_1bd420285_pushErr((*(_self_))._field_p.ptr(), _4526_token, _4541_fmt, _4554_args);
}



inline void _1bd40ea8d_pushSuggestion(_1bd40de44_exprBuilder* _self_, jule::Str _5033_fmt, jule::Slice<jule::Any> _5046_args) {
	_1bd4205e8_pushSuggestion((*(_self_))._field_p.ptr(), _5033_fmt, _5046_args);
}



inline jule::Ptr<_1bc59a642_TupleExpr> _1bd40edce_buildTuple(_1bd40de44_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>>* _5434_parts) {
	jule::Ptr<_1bc59a642_TupleExpr> _5513_tuple = jule::new_ptr<_1bc59a642_TupleExpr>(_1bc59a642_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_1bc599971_Expr>>::alloc(0LL, (*(_5434_parts)).len())});;
	{
		auto expr = _5434_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2686948:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1bc583a9d_Token>> _5821_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1bc599971_Expr>> &__jule_push_dest = (*(_5513_tuple))._field_Expr; __jule_push_dest.push(_1bd4192c3_buildFromTokens(_self_, _5821_part)); };
			}
			_iter_next_1c2686948:;
			++it;
			goto _iter_begin_1c2686948;
		}
		_iter_end_1c2686948:;
	};
	return _5513_tuple;;
}



inline jule::Ptr<_1bc59aa1b_LitExpr> _1bd410220_buildLit(_1bd40de44_exprBuilder* _self_, jule::Ptr<_1bc583a9d_Token> _6427_token) {
	return jule::new_ptr<_1bc59aa1b_LitExpr>(_1bc59aa1b_LitExpr{._field_Token=_6427_token, ._field_Value=(*(_6427_token))._field_Kind});;
}



inline jule::Any _1bd4108a2_buildSingle(_1bd40de44_exprBuilder* _self_, jule::Ptr<_1bc583a9d_Token> _7534_token) {
	{
		auto &_match_expr{ (*(_7534_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1c2688928:;
			{
				return jule::Any(_1bd410220_buildLit(_self_, _7534_token), &__jule_any_type101);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1c26889a0:;
			{
				return jule::Any(jule::new_ptr<_1bc59be07_VariadicExpr>(_1bc59be07_VariadicExpr{._field_Token=_7534_token, }), &__jule_any_type75);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(24LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1c2688a27:;
			{
				return jule::Any(_1bd41a6ae_buildIdentExpr(&(_7534_token)), &__jule_any_type79);;
			}
		}
		_match_end_1c268884b:;
	};
	_1bd40e72a_pushErr(_self_, _7534_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1bc59b39b_IdentExpr> _1bd410be3_buildBindIdent(_1bd40de44_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _9238_tokens) {
	if (((*((*(_9238_tokens))[0LL]))._field_Id != static_cast<jule::U64>(27LLU))) {
		return nullptr;;
	} else if (((*((*(_9238_tokens))[1LL]))._field_Id != static_cast<jule::U64>(17LLU))) {
		_1bd40e72a_pushErr(_self_, (*(_9238_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1bd40ea8d_pushSuggestion(_self_, jule::Str::lit("use dot (.) to access binded defines", 36), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1bc583a9d_Token> _10013_token = (*(_9238_tokens))[2LL];;
	if (((*(_10013_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1bd40e72a_pushErr(_self_, (*(_9238_tokens))[2LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1bd40ea8d_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1bc59b39b_IdentExpr> _10613_expr = _1bd41a6ae_buildIdentExpr(&(_10013_token));;
	(*(_10613_expr))._field_Binded=true;
	return _10613_expr;;
}



inline jule::Ptr<_1bc59ba2d_UnaryExpr> _1bd411034_buildUnary(_1bd40de44_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _11133_tokens) {
	jule::Ptr<_1bc583a9d_Token> _11213_op = _11133_tokens[0LL];;
	if ((_11133_tokens.len() == 1LL)) {
		_1bd40e72a_pushErr(_self_, _11213_op, jule::Str::lit("missing expression for unary operator", 37), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_1bc5842da_IsUnaryOp((*(_11213_op))._field_Id)))) {
		_1bd40e72a_pushErr(_self_, _11213_op, jule::Str::lit("invalid unary operator: @", 25), jule::Slice<jule::Any>::make({jule::Any((*(_11213_op))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	(_11133_tokens).mut_slice(1LL);;
	return jule::new_ptr<_1bc59ba2d_UnaryExpr>(_1bc59ba2d_UnaryExpr{._field_Op=_11213_op, ._field_Expr=_1bd4192c3_buildFromTokens(_self_, _11133_tokens)});;
}



inline jule::Ptr<_1bc5a28e1_SubIdentExpr> _1bd411375_buildObjSubIdent(_1bd40de44_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _13239_tokens) {
	jule::I64 _13313_i = (_13239_tokens.len() - 1LL);;
	jule::Ptr<_1bc583a9d_Token> _13413_identToken = _13239_tokens[_13313_i];;
	(_13313_i)--;
	(_13239_tokens).mut_slice(0LL, _13313_i);;
	if ((_13239_tokens.len() == 0LL)) {
		_1bd40e72a_pushErr(_self_, _13413_identToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1bc5a28e1_SubIdentExpr>(_1bc5a28e1_SubIdentExpr{._field_Expr=_1bd4192c3_buildFromTokens(_self_, _13239_tokens), ._field_Ident=_13413_identToken});;
}



inline jule::Ptr<_1bc5a254a_NsSelectionExpr> _1bd4116b6_buildNsSubIdent(_1bd40de44_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _14739_tokens) {
	jule::Ptr<_1bc5a254a_NsSelectionExpr> _14813_ns = jule::new_ptr<_1bc5a254a_NsSelectionExpr>();;
	if ((((*(_14739_tokens)).len() == 3LL) && ((*((*(_14739_tokens))[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		(*(_14813_ns))._field_Ns=(*(_14739_tokens)).slice(0LL, 1LL);
		(*(_14813_ns))._field_Ident=(*(_14739_tokens))[2LL];
	} else {
		{
			auto expr = _14739_tokens;
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c269a61b:;
			if (it != expr_end) {
				jule::I64 _15418_i = it - expr->begin();
				jule::Ptr<_1bc583a9d_Token> _15425_token = *it;
				{
					if (((_15418_i & 1LL) == 0LL)) {
						if (((*(_15425_token))._field_Id != static_cast<jule::U64>(1LLU))) {
							_1bd40e72a_pushErr(_self_, _15425_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							_1bd40ea8d_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
						};
						{ jule::Slice<jule::Ptr<_1bc583a9d_Token>> &__jule_push_dest = (*(_14813_ns))._field_Ns; __jule_push_dest.push(_15425_token); };
					} else if (((*(_15425_token))._field_Id != static_cast<jule::U64>(19LLU))) {
						_1bd40e72a_pushErr(_self_, _15425_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
						_1bd40ea8d_pushSuggestion(_self_, jule::Str::lit("expected double colon \"::\"", 26), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1c269a61b:;
				++it;
				_15418_i++;
				goto _iter_begin_1c269a61b;
			}
			_iter_end_1c269a61b:;
		};
		(*(_14813_ns))._field_Ident=(*(_14813_ns))._field_Ns[((*(_14813_ns))._field_Ns.len() - 1LL)];
		(*(_14813_ns))._field_Ns=(*(_14813_ns))._field_Ns.slice(0LL, ((*(_14813_ns))._field_Ns.len() - 1LL));
	};
	return _14813_ns;;
}



inline jule::Ptr<_1bc59563c_TypeDecl> _1bd411a07_buildType(_1bd40de44_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _17233_tokens) {
	jule::I64 _17313_i = 0LL;;
	jule::Ptr<_1bc59563c_TypeDecl> _17413_t;;
	jule::Bool _17416_ok = false;;
	({
		__jule_tuple_x_1bc59563c_TypeDecl__jule_tuple_bool __jule_assign_result = _1bd421d8b_buildType((*(_self_))._field_p, _17233_tokens, (&(_17313_i)), false);
		_17413_t = __jule_assign_result.__jule_result_arg0;
		_17416_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_17416_ok))) {
		_1bd40e72a_pushErr(_self_, (*(_17233_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_17313_i < (*(_17233_tokens)).len())) {
		_1bd40e72a_pushErr(_self_, (*(_17233_tokens))[_17313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	return _17413_t;;
}



inline jule::Any _1bd411d48_buildSubIdent(_1bd40de44_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _18637_tokens) {
	jule::I64 _1879_i = ((*(_18637_tokens)).len() - 2LL);;
	jule::Ptr<_1bc583a9d_Token> _1889_token = (*(_18637_tokens))[_1879_i];;
	{
		auto &_match_expr{ (*(_1889_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(17LLU)) {
			_case_begin_1c26a2887:;
			{
				return jule::Any(_1bd411375_buildObjSubIdent(_self_, (*(_18637_tokens))), &__jule_any_type85);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1c26a2e92:;
			{
				return jule::Any(_1bd4116b6_buildNsSubIdent(_self_, _18637_tokens), &__jule_any_type89);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1c26a3008:;
			{
				return jule::Any(_1bd411a07_buildType(_self_, _18637_tokens), &__jule_any_type88);;
			}
		}
		_match_end_1c26a2d82:;
	};
	_1bd40e72a_pushErr(_self_, _1889_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1bc59be07_VariadicExpr> _1bd412189_buildVariadic(_1bd40de44_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _20236_tokens) {
	jule::Ptr<_1bc583a9d_Token> _20313_token = _20236_tokens[(_20236_tokens.len() - 1LL)];;
	(_20236_tokens).mut_slice(0LL, (_20236_tokens.len() - 1LL));;
	return jule::new_ptr<_1bc59be07_VariadicExpr>(_1bc59be07_VariadicExpr{._field_Token=_20313_token, ._field_Expr=_1bd4192c3_buildFromTokens(_self_, _20236_tokens)});;
}



inline jule::Ptr<_1bc599c6d_RangeExpr> _1bd4124ca_buildBetweenParentheses(_1bd40de44_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _21146_tokens) {
	if ((_21146_tokens.len() == 2LL)) {
		_1bd40e72a_pushErr(_self_, _21146_tokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		_1bd40ea8d_pushSuggestion(_self_, jule::Str::lit("empty parentheses are not valid expression, must include an expression in range", 79), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_21146_tokens).mut_slice(1LL, (_21146_tokens.len() - 1LL));;
	return jule::new_ptr<_1bc599c6d_RangeExpr>(_1bc599c6d_RangeExpr{._field_Expr=_1bd4192c3_buildFromTokens(_self_, _21146_tokens)});;
}



inline jule::Ptr<_1bc59c2d1_CastExpr> _1bd41281b_tryBuildCast(_1bd40de44_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _22336_tokens) {
	jule::I64 _22413_rangeN = 0LL;;
	{
		auto expr = _22336_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c26a8074:;
		if (it != expr_end) {
			jule::I64 _22513_i = it - expr->begin();
			jule::Ptr<_1bc583a9d_Token> _22516_token = *it;
			{
				{
					auto &_match_expr{ (*(_22516_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1c26a8d66:;
						{
							(_22413_rangeN)++;
							goto _iter_next_1c26a8074;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1c26a8ddd:;
						{
							(_22413_rangeN)--;
						}
					}
					_match_end_1c26a8c9a:;
				};
				if ((_22413_rangeN > 0LL)) {
					goto _iter_next_1c26a8074;
				} else if (((_22513_i + 1LL) == (*(_22336_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_1bc583a9d_Token>> _24417_typeTokens = (*(_22336_tokens)).slice(0LL, (_22513_i + 1LL));;
				jule::Slice<jule::Ptr<_1bc583a9d_Token>> _24517_exprTokens = (*(_22336_tokens)).slice((_22513_i + 1LL));;
				if ((_24517_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_1bc583a9d_Token> _25213_tok = _24517_exprTokens[0LL];;
				if (((*(_25213_tok))._field_Id != static_cast<jule::U64>(74LLU))) {
					return nullptr;;
				};
				jule::Ptr<_1bc59c2d1_CastExpr> _25717_cast = jule::new_ptr<_1bc59c2d1_CastExpr>(_1bc59c2d1_CastExpr{});;
				if ((_24517_exprTokens.len() == 2LL)) {
					_1bd40e72a_pushErr(_self_, _24517_exprTokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
					_1bd40ea8d_pushSuggestion(_self_, jule::Str::lit("give an expression for casting", 30), jule::Slice<jule::Any>());
				};
				if ((_24417_typeTokens.len() == 2LL)) {
					_1bd40e72a_pushErr(_self_, _24417_typeTokens[0LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					_1bd40ea8d_pushSuggestion(_self_, jule::Str::lit("type declaration expected for casting", 37), jule::Slice<jule::Any>());
				} else {
					(_24417_typeTokens).mut_slice(1LL, (_24417_typeTokens.len() - 1LL));;
					jule::I64 _27121_typeIndex = 0LL;;
					jule::Ptr<_1bc59563c_TypeDecl> _27221_t;;
					jule::Bool _27224_ok = false;;
					({
						__jule_tuple_x_1bc59563c_TypeDecl__jule_tuple_bool __jule_assign_result = _1bd421d8b_buildType((*(_self_))._field_p, &(_24417_typeTokens), (&(_27121_typeIndex)), true);
						_27221_t = __jule_assign_result.__jule_result_arg0;
						_27224_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_27224_ok && (_27121_typeIndex < _24417_typeTokens.len()))) {
						_1bd40e72a_pushErr(_self_, _24417_typeTokens[_27121_typeIndex], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					} else if ((!(_27224_ok))) {
						return _25717_cast;;
					};
					(*(_25717_cast))._field_Kind=_27221_t;
					if ((_24517_exprTokens.len() > 2LL)) {
						jule::I64 _28225_j = 0LL;;
						_1bd41ce86_range(&(_28225_j), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_24517_exprTokens));
						if ((_28225_j < _24517_exprTokens.len())) {
							return nullptr;;
						};
						(_24517_exprTokens).mut_slice(0LL, _28225_j);;
						(*(_25717_cast))._field_Expr=_1bd4192c3_buildFromTokens(_self_, _24517_exprTokens);
					};
				};
				return _25717_cast;;
			}
			_iter_next_1c26a8074:;
			++it;
			_22513_i++;
			goto _iter_begin_1c26a8074;
		}
		_iter_end_1c26a8074:;
	};
	return nullptr;;
}



inline void _1bd412c39_pushArg(_1bd40de44_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc599971_Expr>>* _29731_args, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _29750_tokens, jule::Ptr<_1bc583a9d_Token> _29768_err_token) {
	if ((_29750_tokens.len() == 0LL)) {
		_1bd40e72a_pushErr(_self_, _29768_err_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1bd40ea8d_pushSuggestion(_self_, jule::Str::lit("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Ptr<_1bc599971_Expr>> &__jule_push_dest = (*(_29731_args)); __jule_push_dest.push(_1bd4192c3_buildFromTokens(_self_, _29750_tokens)); };
}



inline jule::Slice<jule::Ptr<_1bc599971_Expr>> _1bd41307a_buildArgs(_1bd40de44_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _30632_tokens) {
	if ((_30632_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1bc599971_Expr>> _31217_args = nullptr;;
	jule::I64 _31313_last = 0LL;;
	jule::I64 _31413_rangeN = 0LL;;
	(_30632_tokens).mut_slice(1LL, (_30632_tokens.len() - 1LL));;
	{
		auto expr = &(_30632_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c26b5e83:;
		if (it != expr_end) {
			jule::I64 _31613_i = it - expr->begin();
			jule::Ptr<_1bc583a9d_Token> _31616_token = *it;
			{
				{
					auto &_match_expr{ (*(_31616_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1c26b70a5:;
						{
							(_31413_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1c26b712c:;
						{
							(_31413_rangeN)--;
						}
					}
					_match_end_1c26b6ed9:;
				};
				if (((_31413_rangeN > 0LL) || ((*(_31616_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1c26b5e83;
				};
				_1bd412c39_pushArg(_self_, &(_31217_args), _30632_tokens.slice(_31313_last, _31613_i), _31616_token);
				_31313_last=static_cast<jule::I64>((_31613_i + 1LL));
			}
			_iter_next_1c26b5e83:;
			++it;
			_31613_i++;
			goto _iter_begin_1c26b5e83;
		}
		_iter_end_1c26b5e83:;
	};
	if ((_31313_last < _30632_tokens.len())) {
		if ((_31313_last == 0LL)) {
			if ((_30632_tokens.len() > 0LL)) {
				_1bd412c39_pushArg(_self_, &(_31217_args), _30632_tokens.slice(_31313_last), _30632_tokens[_31313_last]);
			};
		} else {
			_1bd412c39_pushArg(_self_, &(_31217_args), _30632_tokens.slice(_31313_last), _30632_tokens[(_31313_last - 1LL)]);
		};
	};
	return _31217_args;;
}



inline jule::Ptr<_1bc5a3507_FnCallExpr> _1bd413872_buildFnCall(_1bd40de44_exprBuilder* _self_, jule::Ptr<_1bc583a9d_Token>* _37235_token, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _37255_expr, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _37276_args) {
	return jule::new_ptr<_1bc5a3507_FnCallExpr>(_1bc5a3507_FnCallExpr{._field_Token=(*(_37235_token)), ._field_Expr=_1bd4192c3_buildFromTokens(_self_, (*(_37255_expr))), ._field_Args=_1bd41307a_buildArgs(_self_, (*(_37276_args))), });;
}



inline jule::Any _1bd413bb3_buildParenthesesRange(_1bd40de44_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _38045_tokens) {
	jule::Ptr<_1bc583a9d_Token> _38113_token = (*(_38045_tokens))[0LL];;
	if (((*(_38113_token))._field_Id == static_cast<jule::U64>(74LLU))) {
		jule::Ptr<_1bc59c2d1_CastExpr> _38317_expr = _1bd41281b_tryBuildCast(_self_, _38045_tokens);;
		if ((_38317_expr != nullptr)) {
			return jule::Any(_38317_expr, &__jule_any_type105);;
		};
	};
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _38813_exprTokens;;
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _38829_args_tokens;;
	({
		__jule_tuple_sx_1bc583a9d_Token__jule_tuple_sx_1bc583a9d_Token __jule_assign_result = _1bd41d250_rangeLast(_38045_tokens);
		_38813_exprTokens = __jule_assign_result.__jule_result_arg0;
		_38829_args_tokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_38813_exprTokens.len() == 0LL)) {
		return jule::Any(_1bd4124ca_buildBetweenParentheses(_self_, _38829_args_tokens), &__jule_any_type100);;
	};
	return jule::Any(_1bd413872_buildFnCall(_self_, &(_38113_token), &(_38813_exprTokens), &(_38829_args_tokens)), &__jule_any_type107);;
}



inline jule::Ptr<_1bc59ade5_UnsafeExpr> _1bd414004_buildUnsafeExpr(_1bd40de44_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _39738_tokens) {
	jule::Ptr<_1bc583a9d_Token> _39813_token = _39738_tokens[0LL];;
	(_39738_tokens).mut_slice(1LL);;
	jule::I64 _40013_i = 0LL;;
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _40113_rangeTokens = _1bd41ce86_range(&(_40013_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_39738_tokens));;
	if ((_40113_rangeTokens.len() == 0LL)) {
		_1bd40e72a_pushErr(_self_, _39738_tokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1bc59ade5_UnsafeExpr>(_1bc59ade5_UnsafeExpr{._field_Token=_39813_token, ._field_Expr=_1bd4192c3_buildFromTokens(_self_, _40113_rangeTokens)});;
}



inline jule::Ptr<_1bc5ac159_FnDecl> _1bd414345_buildAnonFn(_1bd40de44_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _41235_tokens) {
	jule::Ptr<_1bc5ac159_FnDecl> _41313_f = _1bd4264cd_buildFn((*(_self_))._field_p, _41235_tokens, false, false);;
	if ((!(_1bc5ac4bc_IsAnon(_41313_f.ptr())))) {
		_1bd40e72a_pushErr(_self_, (*(_41313_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1bd40ea8d_pushSuggestion(_self_, jule::Str::lit("anonymous function expected, remove identifier of function", 58), jule::Slice<jule::Any>());
	};
	return _41313_f;;
}



inline jule::Any _1bd414686_buildUnsafe(_1bd40de44_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _42135_tokens) {
	{
		auto &_match_expr{ (*((*(_42135_tokens))[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1c26c8825:;
			{
				return jule::Any(_1bd414345_buildAnonFn(_self_, _42135_tokens), &__jule_any_type14);;
			}
		}
		else {
			_case_begin_1c26c8209:;
			{
				return jule::Any(_1bd414004_buildUnsafeExpr(_self_, (*(_42135_tokens))), &__jule_any_type102);;
			}
		}
		_match_end_1c26c813d:;
	};
}



inline void _1bd414aa4_pushRangeLitPart(_1bd40de44_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _43139_part, jule::Ptr<_1bc583a9d_Token> _4329_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>>* _43234_parts) {
	if ((_43139_part.len() == 0LL)) {
		_1bd40e72a_pushErr(_self_, _4329_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1bd40ea8d_pushSuggestion(_self_, jule::Str::lit("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>> &__jule_push_dest = (*(_43234_parts)); __jule_push_dest.push(_43139_part); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>> _1bd414de5_getBraceRangeLitExprParts(_1bd40de44_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _44248_tokens) {
	if ((_44248_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>> _44817_parts = nullptr;;
	jule::I64 _45013_last = 0LL;;
	jule::I64 _45113_rangeN = 0LL;;
	(_44248_tokens).mut_slice(1LL, (_44248_tokens.len() - 1LL));;
	{
		auto expr = &(_44248_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c26cbcbd:;
		if (it != expr_end) {
			jule::I64 _45313_i = it - expr->begin();
			jule::Ptr<_1bc583a9d_Token> _45316_token = *it;
			{
				{
					auto &_match_expr{ (*(_45316_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1c26ccde0:;
						{
							(_45113_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1c26cce67:;
						{
							(_45113_rangeN)--;
						}
					}
					_match_end_1c26ccd24:;
				};
				if (((_45113_rangeN > 0LL) || ((*(_45316_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1c26cbcbd;
				};
				_1bd414aa4_pushRangeLitPart(_self_, _44248_tokens.slice(_45013_last, _45313_i), _45316_token, &(_44817_parts));
				_45013_last=static_cast<jule::I64>((_45313_i + 1LL));
			}
			_iter_next_1c26cbcbd:;
			++it;
			_45313_i++;
			goto _iter_begin_1c26cbcbd;
		}
		_iter_end_1c26cbcbd:;
	};
	if ((_45013_last < _44248_tokens.len())) {
		if ((_45013_last == 0LL)) {
			if ((_44248_tokens.len() > 0LL)) {
				_1bd414aa4_pushRangeLitPart(_self_, _44248_tokens.slice(_45013_last), _44248_tokens[_45013_last], &(_44817_parts));
			};
		} else {
			_1bd414aa4_pushRangeLitPart(_self_, _44248_tokens.slice(_45013_last), _44248_tokens[(_45013_last - 1LL)], &(_44817_parts));
		};
	};
	return _44817_parts;;
}



inline jule::Ptr<_1bc5a3eec_FieldExprPair> _1bd415236_buildFieldExprPair(_1bd40de44_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _48441_tokens) {
	if (((_48441_tokens.len() - 2LL) == 0LL)) {
		_1bd40e72a_pushErr(_self_, _48441_tokens[1LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1bc5a3eec_FieldExprPair> _48913_pair = jule::new_ptr<_1bc5a3eec_FieldExprPair>(_1bc5a3eec_FieldExprPair{._field_Field=_48441_tokens[0LL], });;
	(_48441_tokens).mut_slice(2LL);;
	(*(_48913_pair))._field_Expr=_1bd4192c3_buildFromTokens(_self_, _48441_tokens);
	return _48913_pair;;
}



inline jule::Ptr<_1bc599971_Expr> _1bd415577_buildStructLitExpr(_1bd40de44_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _49742_tokens) {
	jule::Ptr<_1bc583a9d_Token> _49813_token = (*(_49742_tokens))[0LL];;
	if ((((*(_49813_token))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_49742_tokens)).len() > 1LL))) {
		_49813_token=(*(_49742_tokens))[1LL];
		if (((*(_49813_token))._field_Id == static_cast<jule::U64>(8LLU))) {
			return jule::new_ptr<_1bc599971_Expr>(_1bc599971_Expr{._field_Token=_49813_token, ._field_End=(*(_49742_tokens))[((*(_49742_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_1bd415236_buildFieldExprPair(_self_, (*(_49742_tokens))), &__jule_any_type77)});;
		};
	};
	return _1bd4192c3_buildFromTokens(_self_, (*(_49742_tokens)));;
}



inline jule::Slice<jule::Ptr<_1bc599971_Expr>> _1bd4158b8_buildStructLitExprs(_1bd40de44_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _51243_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>> _51313_parts = _1bd414de5_getBraceRangeLitExprParts(_self_, (*(_51243_tokens)));;
	if ((_51313_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1bc599971_Expr>> _51813_pairs = jule::Slice<jule::Ptr<_1bc599971_Expr>>::alloc(0LL, _51313_parts.len());;
	{
		auto expr = &(_51313_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c26d649d:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1bc583a9d_Token>> _51921_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1bc599971_Expr>> &__jule_push_dest = _51813_pairs; __jule_push_dest.push(_1bd415577_buildStructLitExpr(_self_, &(_51921_part))); };
			}
			_iter_next_1c26d649d:;
			++it;
			goto _iter_begin_1c26d649d;
		}
		_iter_end_1c26d649d:;
	};
	return _51813_pairs;;
}



inline jule::Ptr<_1bc5a4827_StructLit> _1bd415c09_buildTypedStructLiteral(_1bd40de44_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _52546_tokens) {
	jule::I64 _52613_i = 0LL;;
	jule::Ptr<_1bc59563c_TypeDecl> _52713_t;;
	jule::Bool _52716_ok = false;;
	({
		__jule_tuple_x_1bc59563c_TypeDecl__jule_tuple_bool __jule_assign_result = _1bd421d8b_buildType((*(_self_))._field_p, &(_52546_tokens), (&(_52613_i)), true);
		_52713_t = __jule_assign_result.__jule_result_arg0;
		_52716_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_52716_ok))) {
		return nullptr;;
	} else if ((_52613_i >= _52546_tokens.len())) {
		_1bd40e72a_pushErr(_self_, _52546_tokens[_52613_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_52546_tokens).mut_slice(_52613_i);;
	jule::Ptr<_1bc583a9d_Token> _5369_token = _52546_tokens[0LL];;
	if (((*(_5369_token))._field_Id != static_cast<jule::U64>(72LLU))) {
		_1bd40e72a_pushErr(_self_, _5369_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1bc5a4827_StructLit>(_1bc5a4827_StructLit{._field_End=_52546_tokens[(_52546_tokens.len() - 1LL)], ._field_Kind=_52713_t, ._field_Exprs=_1bd4158b8_buildStructLitExprs(_self_, &(_52546_tokens))});;
}



inline jule::Ptr<_1bc599971_Expr> _1bd41604a_buildBraceLitPart(_1bd40de44_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _54941_tokens) {
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _55013_l;;
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _55020_r;;
	({
		__jule_tuple_sx_1bc583a9d_Token__jule_tuple_sx_1bc583a9d_Token __jule_assign_result = _1bd41a12b_splitDelim(_54941_tokens, static_cast<jule::U64>(8LLU));
		_55013_l = __jule_assign_result.__jule_result_arg0;
		_55020_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_55013_l != nullptr)) {
		return jule::new_ptr<_1bc599971_Expr>(_1bc599971_Expr{._field_Token=(*(_54941_tokens))[0LL], ._field_End=(*(_54941_tokens))[((*(_54941_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1bc5a5608_KeyValPair>(_1bc5a5608_KeyValPair{._field_Key=_1bd4192c3_buildFromTokens(_self_, _55013_l), ._field_Val=_1bd4192c3_buildFromTokens(_self_, _55020_r), ._field_Colon=(*(_54941_tokens))[_55013_l.len()]}), &__jule_any_type78)});;
	};
	return _1bd4192c3_buildFromTokens(_self_, (*(_54941_tokens)));;
}



inline jule::Ptr<_1bc5a4ccd_BraceLit> _1bd41638b_buildBraceLit(_1bd40de44_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _56637_tokens) {
	jule::Ptr<_1bc5a4ccd_BraceLit> _56713_lit = jule::new_ptr<_1bc5a4ccd_BraceLit>(_1bc5a4ccd_BraceLit{._field_Token=(*(_56637_tokens))[0LL], ._field_End=(*(_56637_tokens))[((*(_56637_tokens)).len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>> _57213_parts = _1bd414de5_getBraceRangeLitExprParts(_self_, (*(_56637_tokens)));;
	if ((_57213_parts == nullptr)) {
		return _56713_lit;;
	};
	(*(_56713_lit))._field_Exprs=jule::Slice<jule::Ptr<_1bc599971_Expr>>::alloc(0LL, _57213_parts.len());
	{
		auto expr = &(_57213_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c26e0b6c:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1bc583a9d_Token>> _57821_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1bc599971_Expr>> &__jule_push_dest = (*(_56713_lit))._field_Exprs; __jule_push_dest.push(_1bd41604a_buildBraceLitPart(_self_, &(_57821_part))); };
			}
			_iter_next_1c26e0b6c:;
			++it;
			goto _iter_begin_1c26e0b6c;
		}
		_iter_end_1c26e0b6c:;
	};
	return _56713_lit;;
}



inline jule::Any _1bd4166cc_buildBraceRange(_1bd40de44_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _58539_tokens) {
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _58613_exprTokens;;
	jule::I64 _58625_rangeN = 0;;
	({
		__jule_tuple_sx_1bc583a9d_Token__jule_tuple_int __jule_assign_result = _1bd41a978_getRangeExprTokens(_58539_tokens);
		_58613_exprTokens = __jule_assign_result.__jule_result_arg0;
		_58625_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_58613_exprTokens.len() == 0LL)) {
			_case_begin_1c26e1bd4:;
			{
				return jule::Any(_1bd41638b_buildBraceLit(_self_, _58539_tokens), &__jule_any_type108);;
			}
		}
		else if ((_58625_rangeN > 0LL)) {
			_case_begin_1c26e250e:;
			{
				_1bd40e72a_pushErr(_self_, (*(_58539_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c26e181b:;
	};
	jule::Ptr<_1bc583a9d_Token> _5979_elseToken = _58613_exprTokens[(_58613_exprTokens.len() - 1LL)];;
	if (((*(_58613_exprTokens[(_58613_exprTokens.len() - 1LL)]))._field_Id == static_cast<jule::U64>(14LLU))) {
		(_58613_exprTokens).mut_slice(0LL, (_58613_exprTokens.len() - 1LL));;
		jule::Any _60017_d = _1bd418b41_build(_self_, &(_58613_exprTokens));;
		if ((_60017_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _60017_d };
			
			if (_match_expr.type == &__jule_any_type107) {
				_case_begin_1c26e56dd:;
				{
					((*(_58539_tokens))).mut_slice((_58613_exprTokens.len() + 1LL));;
					jule::I64 _60721_i = 0LL;;
					jule::Slice<jule::Ptr<_1bc583a9d_Token>> _60821_rangeTokens = _1bd41ce86_range(&(_60721_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _58539_tokens);;
					jule::Ptr<_1bc5a3507_FnCallExpr> _60921_model = _60017_d.cast_ptr<_1bc5a3507_FnCallExpr>(&__jule_any_type107);;
					if (_1bc5a3b12_Ignored(_60921_model.ptr())) {
						_1bd40e72a_pushErr(_self_, _5979_elseToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
						_1bd40ea8d_pushSuggestion(_self_, jule::Str::lit("just ignore exceptional or handle it but you cannot do both at same time", 72), jule::Slice<jule::Any>());
					};
					(*(_60921_model))._field_Exception=_1bd42142e_buildScope((*(_self_))._field_p, &(_60821_rangeTokens), (*(_58539_tokens))[(_60721_i - 1LL)]);
					return _60017_d;;
				}
			}
			else {
				_case_begin_1c26e516b:;
				{
					_1bd40e72a_pushErr(_self_, _58613_exprTokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1c26e4dc4:;
		};
	};
	{
		auto &_match_expr{ (*(_58613_exprTokens[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1c26e968c:;
			{
				return _1bd414686_buildUnsafe(_self_, _58539_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1c26e9cb9:;
			{
				return jule::Any(_1bd414345_buildAnonFn(_self_, _58539_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1c26e9d30:;
			{
				return jule::Any(_1bd415c09_buildTypedStructLiteral(_self_, (*(_58539_tokens))), &__jule_any_type106);;
			}
		}
		else {
			_case_begin_1c26e5ba5:;
			{
				_1bd40e72a_pushErr(_self_, _58613_exprTokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c26e9170:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>> _1bd416a1d_getEnumerableParts(_1bd40de44_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _63741_tokens) {
	(_63741_tokens).mut_slice(1LL, (_63741_tokens.len() - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>> _63913_parts;;
	jule::Slice<_1ed6c7892_Log> _63920_errors;;
	({
		__jule_tuple_ssx_1bc583a9d_Token__jule_tuple_s_1ed6c7892_Log __jule_assign_result = _1bd41d706_parts(&(_63741_tokens), static_cast<jule::U64>(5LLU), true);
		_63913_parts = __jule_assign_result.__jule_result_arg0;
		_63920_errors = __jule_assign_result.__jule_result_arg1;
	});
	((*((*(_self_))._field_p))._field_errors).append(_63920_errors);;
	return _63913_parts;;
}



inline jule::Ptr<_1bc5a5d01_SliceExpr> _1bd416d5e_buildSlice(_1bd40de44_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _64433_tokens) {
	jule::Ptr<_1bc5a5d01_SliceExpr> _64513_slc = jule::new_ptr<_1bc5a5d01_SliceExpr>(_1bc5a5d01_SliceExpr{._field_Token=_64433_tokens[0LL], ._field_End=_64433_tokens[(_64433_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>> _65013_parts = _1bd416a1d_getEnumerableParts(_self_, _64433_tokens);;
	if ((_65013_parts.len() == 0LL)) {
		return _64513_slc;;
	};
	(*(_64513_slc))._field_Exprs=jule::Slice<jule::Ptr<_1bc599971_Expr>>::alloc(0LL, _65013_parts.len());
	{
		auto expr = &(_65013_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c26ee9c2:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1bc583a9d_Token>> _65621_p = *it;
			{
				if ((_65621_p.len() == 0LL)) {
					goto _iter_next_1c26ee9c2;
				};
				{ jule::Slice<jule::Ptr<_1bc599971_Expr>> &__jule_push_dest = (*(_64513_slc))._field_Exprs; __jule_push_dest.push(_1bd4192c3_buildFromTokens(_self_, _65621_p)); };
			}
			_iter_next_1c26ee9c2:;
			++it;
			goto _iter_begin_1c26ee9c2;
		}
		_iter_end_1c26ee9c2:;
	};
	return _64513_slc;;
}



inline jule::Ptr<_1bc5a6791_IndexingExpr> _1bd417315_buildIndexing(_1bd40de44_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _66636_exprTokens, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _66713_tokens, jule::Ptr<_1bc583a9d_Token> _66735_errorToken) {
	jule::Ptr<_1bc583a9d_Token> _66813_end = _66713_tokens[(_66713_tokens.len() - 1LL)];;
	(_66713_tokens).mut_slice(1LL, (_66713_tokens.len() - 1LL));;
	if ((_66713_tokens.len() == 0LL)) {
		_1bd40e72a_pushErr(_self_, _66735_errorToken, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1bc599971_Expr> _67413_expr = _1bd4192c3_buildFromTokens(_self_, _66636_exprTokens);;
	if ((_67413_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1bc599971_Expr> _67813_index = _1bd4192c3_buildFromTokens(_self_, _66713_tokens);;
	if ((_67813_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1bc5a6791_IndexingExpr>(_1bc5a6791_IndexingExpr{._field_Token=_66735_errorToken, ._field_End=_66813_end, ._field_Expr=_67413_expr, ._field_Index=_67813_index});;
}



inline jule::Ptr<_1bc5a6e01_SlicingExpr> _1bd417931_buildSlicing(_1bd40de44_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _69036_exprTokens, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _69063_start, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _69114_to, jule::Ptr<_1bc583a9d_Token>* _69133_errorToken, jule::Ptr<_1bc583a9d_Token> _69157_end) {
	jule::Ptr<_1bc5a6e01_SlicingExpr> _69213_slc = jule::new_ptr<_1bc5a6e01_SlicingExpr>(_1bc5a6e01_SlicingExpr{._field_Token=(*(_69133_errorToken)), ._field_End=_69157_end, ._field_Expr=_1bd4192c3_buildFromTokens(_self_, (*(_69036_exprTokens))), });;
	if (((*(_69063_start)).len() > 0LL)) {
		(*(_69213_slc))._field_Start=_1bd4192c3_buildFromTokens(_self_, (*(_69063_start)));
	};
	if (((*(_69114_to)).len() > 0LL)) {
		(*(_69213_slc))._field_To=_1bd4192c3_buildFromTokens(_self_, (*(_69114_to)));
	};
	return _69213_slc;;
}



inline jule::Any _1bd417c72_buildBracketRange(_1bd40de44_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _70640_tokens) {
	jule::Ptr<_1bc583a9d_Token> _70713_errorToken = _70640_tokens[0LL];;
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _70813_exprTokens;;
	jule::I64 _70825_rangeN = 0;;
	({
		__jule_tuple_sx_1bc583a9d_Token__jule_tuple_int __jule_assign_result = _1bd41a978_getRangeExprTokens(&(_70640_tokens));
		_70813_exprTokens = __jule_assign_result.__jule_result_arg0;
		_70825_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_70813_exprTokens.len() == 0LL)) {
		return jule::Any(_1bd416d5e_buildSlice(_self_, _70640_tokens), &__jule_any_type93);;
	} else if ((_70825_rangeN > 0LL)) {
		_1bd40e72a_pushErr(_self_, _70713_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_70640_tokens).mut_slice(_70813_exprTokens.len());;
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _72313_splitTokens = _70640_tokens.slice(1LL, (_70640_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _72413_start;;
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _72424_to;;
	({
		__jule_tuple_sx_1bc583a9d_Token__jule_tuple_sx_1bc583a9d_Token __jule_assign_result = _1bd41a12b_splitDelim(&(_72313_splitTokens), static_cast<jule::U64>(8LLU));
		_72413_start = __jule_assign_result.__jule_result_arg0;
		_72424_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_72413_start != nullptr) || (_72424_to != nullptr))) {
		return jule::Any(_1bd417931_buildSlicing(_self_, &(_70813_exprTokens), &(_72413_start), &(_72424_to), &(_70713_errorToken), _70640_tokens[(_70640_tokens.len() - 1LL)]), &__jule_any_type104);;
	};
	return jule::Any(_1bd417315_buildIndexing(_self_, _70813_exprTokens, _70640_tokens, _70713_errorToken), &__jule_any_type103);;
}



inline jule::Any _1bd4180b3_buildExclRight(_1bd40de44_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _73138_tokens) {
	jule::Ptr<_1bc583a9d_Token> _7329_token = (*(_73138_tokens))[((*(_73138_tokens)).len() - 1LL)];;
	((*(_73138_tokens))).mut_slice(0LL, ((*(_73138_tokens)).len() - 1LL));;
	jule::Any _73413_d = _1bd418b41_build(_self_, _73138_tokens);;
	if ((_73413_d == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _73413_d };
		
		if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1c270c4c4:;
			{
				(*(_73413_d.cast_ptr<_1bc5a3507_FnCallExpr>(&__jule_any_type107)))._field_Exception=jule::new_ptr<_1bc5aa4ba_ScopeTree>(_1bc5aa4ba_ScopeTree{._field_Deferred=true, });
				return _73413_d;;
			}
		}
		_match_end_1c270c260:;
	};
	_1bd40e72a_pushErr(_self_, _7329_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1bd418404_buildData(_1bd40de44_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _74933_tokens) {
	{
		auto _match_expr{ (*(_74933_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1c270db68:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1c270dbce:;
			{
				return _1bd4108a2_buildSingle(_self_, (*(_74933_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1c270dc56:;
			{
				if (((*((*(_74933_tokens))[0LL]))._field_Id == static_cast<jule::U64>(27LLU))) {
					return jule::Any(_1bd410be3_buildBindIdent(_self_, _74933_tokens), &__jule_any_type79);;
				};
			}
		}
		_match_end_1c270d97b:;
	};
	jule::Ptr<_1bc583a9d_Token> _76113_token = (*(_74933_tokens))[((*(_74933_tokens)).len() - 1LL)];;
	if (((*(_76113_token))._field_Id == static_cast<jule::U64>(39LLU))) {
		return jule::Any(_1bd412189_buildVariadic(_self_, (*(_74933_tokens))), &__jule_any_type75);;
	};
	_76113_token=(*(_74933_tokens))[0LL];
	if (_1bc5842da_IsUnaryOp((*(_76113_token))._field_Id)) {
		if (((*(_74933_tokens)).len() > 1LL)) {
			_76113_token=(*(_74933_tokens))[1LL];
			if (((*(_76113_token))._field_Id == static_cast<jule::U64>(31LLU))) {
				return jule::Any(_1bd411a07_buildType(_self_, _74933_tokens), &__jule_any_type88);;
			};
		};
		return jule::Any(_1bd411034_buildUnary(_self_, (*(_74933_tokens))), &__jule_any_type87);;
	};
	if (((*(_74933_tokens)).len() >= 3LL)) {
		{
			auto &_match_expr{ (*(_76113_token))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
				_case_begin_1c2713464:;
				{
					if (((*(_74933_tokens)).len() > 3LL)) {
						jule::Ptr<_1bc583a9d_Token> _78721_t = (*(_74933_tokens))[((*(_74933_tokens)).len() - 1LL)];;
						if (((*(_78721_t))._field_Id == static_cast<jule::U64>(75LLU))) {
							goto _match_end_1c27133a9;
						};
					};
					jule::Ptr<_1bc583a9d_Token> _79317_next = (*(_74933_tokens))[1LL];;
					if (((*(_79317_next))._field_Id != static_cast<jule::U64>(77LLU))) {
						goto _match_end_1c27133a9;
					};
					return jule::Any(_1bd411a07_buildType(_self_, _74933_tokens), &__jule_any_type88);;
				}
			}
			_match_end_1c27133a9:;
		};
	};
	_76113_token=(*(_74933_tokens))[((*(_74933_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ (*(_76113_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1c2716489:;
			{
				return _1bd411d48_buildSubIdent(_self_, _74933_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1c2716500:;
			{
				return _1bd4180b3_buildExclRight(_self_, _74933_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1c2716566:;
			{
				return _1bd413bb3_buildParenthesesRange(_self_, _74933_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1c27165dd:;
			{
				return _1bd4166cc_buildBraceRange(_self_, _74933_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1c2716665:;
			{
				return _1bd417c72_buildBracketRange(_self_, (*(_74933_tokens)));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1c27166dc:;
			{
				return jule::Any(_1bd411a07_buildType(_self_, _74933_tokens), &__jule_any_type88);;
			}
		}
		_match_end_1c27163ac:;
	};
	_1bd40e72a_pushErr(_self_, _76113_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1bd418800_buildBinary(_1bd40de44_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _82135_tokens, jule::I64 _82153_i) {
	jule::Ptr<_1bc583a9d_Token> _82213_op = (*(_82135_tokens))[_82153_i];;
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _82313_leftTokens = (*(_82135_tokens)).slice(0LL, _82153_i);;
	if ((_1bd41968b_isTypeOp(&((*(_82213_op))._field_Id)) && _1bd419999_isTypeRange(&(_82313_leftTokens)))) {
		return jule::Any(_1bd411a07_buildType(_self_, _82135_tokens), &__jule_any_type88);;
	};
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _82813_rightTokens = (*(_82135_tokens)).slice((_82153_i + 1LL));;
	if ((_82313_leftTokens.len() == 0LL)) {
		_1bd40e72a_pushErr(_self_, (*(_82135_tokens))[_82153_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1bd40ea8d_pushSuggestion(_self_, jule::Str::lit("left operand expected for binary operator", 41), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_82813_rightTokens.len() == 0LL)) {
		_1bd40e72a_pushErr(_self_, (*(_82135_tokens))[_82153_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1bd40ea8d_pushSuggestion(_self_, jule::Str::lit("right operand expected for binary operator", 42), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1bc5a2d97_BinaryExpr>(_1bc5a2d97_BinaryExpr{._field_Left=_1bd4192c3_buildFromTokens(_self_, _82313_leftTokens), ._field_Right=_1bd4192c3_buildFromTokens(_self_, _82813_rightTokens), ._field_Op=_82213_op}), &__jule_any_type109);;
}



inline jule::Any _1bd418b41_build(_1bd40de44_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _84629_tokens) {
	if (((*((*(_84629_tokens))[0LL]))._field_Id == static_cast<jule::U64>(37LLU))) {
		return jule::Any(_1bd411a07_buildType(_self_, _84629_tokens), &__jule_any_type88);;
	};
	jule::I64 _8509_i = _1bd41a3e5_findLowestPrecOp(_84629_tokens);;
	if ((_8509_i == -1LL)) {
		return _1bd418404_buildData(_self_, _84629_tokens);;
	};
	return _1bd418800_buildBinary(_self_, _84629_tokens, _8509_i);;
}



inline jule::Any _1bd418e82_buildKind(_1bd40de44_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _85733_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>> _85813_parts;;
	jule::Slice<_1ed6c7892_Log> _85820_errors;;
	({
		__jule_tuple_ssx_1bc583a9d_Token__jule_tuple_s_1ed6c7892_Log __jule_assign_result = _1bd41d706_parts(_85733_tokens, static_cast<jule::U64>(5LLU), true);
		_85813_parts = __jule_assign_result.__jule_result_arg0;
		_85820_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_85820_errors != nullptr)) {
		((*((*(_self_))._field_p))._field_errors).append(_85820_errors);;
		return nullptr;;
	} else if ((_85813_parts.len() > 1LL)) {
		return jule::Any(_1bd40edce_buildTuple(_self_, &(_85813_parts)), &__jule_any_type80);;
	};
	return _1bd418b41_build(_self_, _85733_tokens);;
}



inline jule::Ptr<_1bc599971_Expr> _1bd4192c3_buildFromTokens(_1bd40de44_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _86838_tokens) {
	if ((_86838_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _87213_kind = _1bd418e82_buildKind(_self_, &(_86838_tokens));;
	if ((_87213_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1bc599971_Expr>(_1bc599971_Expr{._field_Token=_86838_tokens[0LL], ._field_End=_86838_tokens[(_86838_tokens.len() - 1LL)], ._field_Kind=_87213_kind});;
}





std::ostream &operator<<(std::ostream &_Stream, _1bd40de44_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bd41b3d5_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1bd41ead1_stop(_1bd41e7d4_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _1bd41ed67_stopped(_1bd41e7d4_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _1bd420285_pushErr(_1bd41e7d4_parser* _self_, jule::Ptr<_1bc583a9d_Token> _22426_token, jule::Str _22441_fmt, jule::Slice<jule::Any> _22454_args) {
	{ jule::Slice<_1ed6c7892_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1bd41ddee_compilerErr(&(_22426_token), &(_22441_fmt), _22454_args)); };
}



inline void _1bd4205e8_pushSuggestion(_1bd41e7d4_parser* _self_, jule::Str _22933_fmt, jule::Slice<jule::Any> _22946_args) {
	{
		_1bd41e295_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _22933_fmt, _22946_args);
	};
}



inline jule::Ptr<_1bc599971_Expr> _1bd420939_buildExpr(jule::Ptr<_1bd41e7d4_parser> _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _23334_tokens) {
	return _1bd4192c3_buildFromTokens((*(_self_))._field_ep.ptr(), (*(_23334_tokens)));;
}



inline jule::Ptr<_1bc594a59_Directive> _1bd420c7a_buildDirective(_1bd41e7d4_parser* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _23737_tokens) {
	if ((_23737_tokens.len() == 1LL)) {
		_1bd420285_pushErr(_self_, _23737_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_23737_tokens[1LL]))._field_Column != ((*(_23737_tokens[0LL]))._field_Column + 1LL))) {
		_1bd420285_pushErr(_self_, _23737_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1bc594a59_Directive>(_1bc594a59_Directive{._field_Tag=_23737_tokens[1LL], ._field_Args=_23737_tokens.slice(2LL)});;
}



inline void _1bd421033_pushDirective(_1bd41e7d4_parser* _self_, jule::Ptr<_1bc594a59_Directive> _25236_d) {
	if ((_25236_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2743ebc:;
		if (it != expr_end) {
			jule::Ptr<_1bc594a59_Directive> _25716_pd = *it;
			{
				if (((*((*(_25236_d))._field_Tag))._field_Kind == (*((*(_25716_pd))._field_Tag))._field_Kind)) {
					return;;
				};
			}
			_iter_next_1c2743ebc:;
			++it;
			goto _iter_begin_1c2743ebc;
		}
		_iter_end_1c2743ebc:;
	};
	{ jule::Slice<jule::Ptr<_1bc594a59_Directive>> &__jule_push_dest = (*(_self_))._field_directives; __jule_push_dest.push(_25236_d); };
}



inline jule::Ptr<_1bc5aa4ba_ScopeTree> _1bd42142e_buildScope(jule::Ptr<_1bd41e7d4_parser> _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _26535_tokens, jule::Ptr<_1bc583a9d_Token> _26557_end) {
	jule::Ptr<_1bc5aa4ba_ScopeTree> _26613_s = _1bd3ee907_newScope();;
	(*(_26613_s))._field_End=_26557_end;
	_1bd40151e_scopeParser _26813_sp = _1bd40151e_scopeParser{._field_p=_self_, };;
	_1bd40d3c7_build(&_26813_sp, _26535_tokens, &(_26613_s));
	return _26613_s;;
}



inline __jule_tuple_x_1bc59563c_TypeDecl__jule_tuple_bool _1bd4218d5__buildType(jule::Ptr<_1bd41e7d4_parser> _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _27542_tokens, jule::I64* _27613_i, jule::Bool _27622_err) {
	__jule_tuple_x_1bc59563c_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1bd4319b1_typeBuilder _27713_tb = _1bd4319b1_typeBuilder{._field_p=_self_, ._field_tokens=(*(_27542_tokens)), ._field_i=_27613_i, ._field_err=_27622_err};;
	jule::Ptr<_1bc59563c_TypeDecl> _28313_decl;;
	jule::Bool _28319_ok = false;;
	({
		__jule_tuple_x_1bc59563c_TypeDecl__jule_tuple_bool __jule_assign_result = _1bd434992_build(&_27713_tb);
		_28313_decl = __jule_assign_result.__jule_result_arg0;
		_28319_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _28313_decl;
	__jule_func_result.__jule_result_arg1 = _28319_ok;
	return __jule_func_result;;
}



inline __jule_tuple_x_1bc59563c_TypeDecl__jule_tuple_bool _1bd421d8b_buildType(jule::Ptr<_1bd41e7d4_parser> _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _28841_tokens, jule::I64* _28913_i, jule::Bool _28922_err) {
	__jule_tuple_x_1bc59563c_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1bc583a9d_Token> _2909_token = (*(_28841_tokens))[(*(_28913_i))];;
	jule::Ptr<_1bc59563c_TypeDecl> _29113_t;;
	jule::Bool _29116_ok = false;;
	({
		__jule_tuple_x_1bc59563c_TypeDecl__jule_tuple_bool __jule_assign_result = _1bd4218d5__buildType(_self_, _28841_tokens, _28913_i, _28922_err);
		_29113_t = __jule_assign_result.__jule_result_arg0;
		_29116_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_28922_err && (!(_29116_ok)))) {
		_1bd420285_pushErr(_self_.ptr(), _2909_token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _29113_t;
	__jule_func_result.__jule_result_arg1 = _29116_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1bc5b1eb6_TypeAliasDecl> _1bd4221cc_buildTypeAliasDecl(jule::Ptr<_1bd41e7d4_parser> _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _29843_tokens) {
	jule::I64 _29913_i = 1LL;;
	if ((_29913_i >= (*(_29843_tokens)).len())) {
		_1bd420285_pushErr(_self_.ptr(), (*(_29843_tokens))[(_29913_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1bc5b1eb6_TypeAliasDecl> _30413_tad = jule::new_ptr<_1bc5b1eb6_TypeAliasDecl>(_1bc5b1eb6_TypeAliasDecl{._field_Token=(*(_29843_tokens))[1LL], ._field_Ident=(*((*(_29843_tokens))[1LL]))._field_Kind, });;
	jule::Ptr<_1bc583a9d_Token> _30813_token = (*(_29843_tokens))[_29913_i];;
	if (((*(_30813_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1bd420285_pushErr(_self_.ptr(), _30813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1bd4205e8_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_29913_i)++;
	if ((_29913_i >= (*(_29843_tokens)).len())) {
		_1bd420285_pushErr(_self_.ptr(), (*(_29843_tokens))[(_29913_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return _30413_tad;;
	};
	_30813_token=(*(_29843_tokens))[_29913_i];
	if (((*(_30813_token))._field_Id != static_cast<jule::U64>(8LLU))) {
		_1bd420285_pushErr(_self_.ptr(), (*(_29843_tokens))[(_29913_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1bd4205e8_pushSuggestion(_self_.ptr(), jule::Str::lit("expected colon \":\"", 18), jule::Slice<jule::Any>());
		return _30413_tad;;
	};
	(_29913_i)++;
	if ((_29913_i >= (*(_29843_tokens)).len())) {
		_1bd420285_pushErr(_self_.ptr(), (*(_29843_tokens))[(_29913_i - 1LL)], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return _30413_tad;;
	};
	jule::Ptr<_1bc59563c_TypeDecl> _32913_t;;
	jule::Bool _32916_ok = false;;
	({
		__jule_tuple_x_1bc59563c_TypeDecl__jule_tuple_bool __jule_assign_result = _1bd421d8b_buildType(_self_, _29843_tokens, (&(_29913_i)), true);
		_32913_t = __jule_assign_result.__jule_result_arg0;
		_32916_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_30413_tad))._field_Kind=_32913_t;
	if ((_32916_ok && (_29913_i < (*(_29843_tokens)).len()))) {
		_1bd420285_pushErr(_self_.ptr(), (*(_29843_tokens))[_29913_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_30413_tad))._field_Public=_1bc781372_IsPub((*(_30413_tad))._field_Ident);
	return _30413_tad;;
}



inline void _1bd422540_buildVarTypeAndExpr(jule::Ptr<_1bd41e7d4_parser> _self_, jule::Ptr<_1bc5ad314_VarDecl>* _33844_v, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _33862_tokens) {
	jule::I64 _33913_i = 0LL;;
	jule::Ptr<_1bc583a9d_Token> _34013_tok = (*(_33862_tokens))[_33913_i];;
	if (((*(_34013_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_33913_i)++;
		if (((_33913_i >= (*(_33862_tokens)).len()) || ((*((*(_33862_tokens))[_33913_i]))._field_Id == static_cast<jule::U64>(71LLU)))) {
			_1bd420285_pushErr(_self_.ptr(), _34013_tok, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1bc59563c_TypeDecl> _34717_t;;
		jule::Bool _34720_ok = false;;
		({
			__jule_tuple_x_1bc59563c_TypeDecl__jule_tuple_bool __jule_assign_result = _1bd421d8b_buildType(_self_, _33862_tokens, (&(_33913_i)), true);
			_34717_t = __jule_assign_result.__jule_result_arg0;
			_34720_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_34720_ok) {
			(*((*(_33844_v))))._field_Kind=_34717_t;
			if ((_33913_i >= (*(_33862_tokens)).len())) {
				return;;
			};
			_34013_tok=(*(_33862_tokens))[_33913_i];
		};
	};
	if (((*(_34013_tok))._field_Id != static_cast<jule::U64>(71LLU))) {
		_1bd420285_pushErr(_self_.ptr(), _34013_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_33844_v))))._field_Setter=_34013_tok;
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _36313_exprTokens = (*(_33862_tokens)).slice((_33913_i + 1LL));;
	if ((_36313_exprTokens.len() == 0LL)) {
		_1bd420285_pushErr(_self_.ptr(), _34013_tok, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_33844_v))))._field_Expr=_1bd420939_buildExpr(_self_, &(_36313_exprTokens));
}



inline void _1bd4228a3_buildVarCommon(jule::Ptr<_1bd41e7d4_parser> _self_, jule::Ptr<_1bc5ad314_VarDecl>* _37139_v, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _37156_tokens) {
	(*((*(_37139_v))))._field_Token=_37156_tokens[0LL];
	if (((*((*((*(_37139_v))))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1bd420285_pushErr(_self_.ptr(), (*((*(_37139_v))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1bd4205e8_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_37139_v))))._field_Ident=(*((*((*(_37139_v))))._field_Token))._field_Kind;
	(*((*(_37139_v))))._field_Public=_1bc781372_IsPub((*((*(_37139_v))))._field_Ident);
	(*((*(_37139_v))))._field_Kind=nullptr;
	if ((_37156_tokens.len() > 1LL)) {
		(_37156_tokens).mut_slice(1LL);;
		_1bd422540_buildVarTypeAndExpr(_self_, _37139_v, &(_37156_tokens));
	};
}



inline void _1bd422cc1_buildVarBegin(_1bd41e7d4_parser* _self_, jule::Ptr<_1bc5ad314_VarDecl>* _38737_v, jule::I64* _38755_i, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _38764_tokens) {
	jule::Ptr<_1bc583a9d_Token> _3889_tok = (*(_38764_tokens))[(*(_38755_i))];;
	{
		auto &_match_expr{ (*(_3889_tok))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1c201600e:;
			{
				(*((*(_38737_v))))._field_Statically=true;
				goto _case_begin_1c2016dde;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1c2016dde:;
			{
				((*(_38755_i)))++;
				if (((*(_38755_i)) >= (*(_38764_tokens)).len())) {
					_1bd420285_pushErr(_self_, _3889_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				if (((*((*(_38764_tokens))[(*(_38755_i))]))._field_Id == static_cast<jule::U64>(32LLU))) {
					(*((*(_38737_v))))._field_Mutable=true;
					((*(_38755_i)))++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1c201662a:;
			{
				((*(_38755_i)))++;
				(*((*(_38737_v))))._field_Constant=true;
			}
		}
		else {
			_case_begin_1c20165b4:;
			{
				_1bd420285_pushErr(_self_, _3889_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1c201655e:;
	};
	if (((*(_38755_i)) >= (*(_38764_tokens)).len())) {
		_1bd420285_pushErr(_self_, _3889_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1bc5ad314_VarDecl> _1bd423112_buildVar(jule::Ptr<_1bd41e7d4_parser> _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _41732_tokens) {
	jule::I64 _41813_i = 0LL;;
	jule::Ptr<_1bc5ad314_VarDecl> _41913_v = jule::new_ptr<_1bc5ad314_VarDecl>(_1bc5ad314_VarDecl{._field_Token=_41732_tokens[0LL], });;
	_1bd422cc1_buildVarBegin(_self_.ptr(), &(_41913_v), &(_41813_i), &(_41732_tokens));
	if ((_41813_i >= _41732_tokens.len())) {
		return nullptr;;
	};
	(_41732_tokens).mut_slice(_41813_i);;
	if (((*(_41732_tokens[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
		(*(_41913_v))._field_Reference=true;
		if ((_41732_tokens.len() == 1LL)) {
			return nullptr;;
		};
		(_41732_tokens).mut_slice(1LL);;
	};
	_1bd4228a3_buildVarCommon(_self_, &(_41913_v), _41732_tokens);
	return _41913_v;;
}



inline jule::Ptr<_1bc5a76a4_GenericDecl> _1bd423453_buildGeneric(jule::Ptr<_1bd41e7d4_parser> _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _43937_tokens) {
	jule::Ptr<_1bc5a76a4_GenericDecl> _44013_g = jule::new_ptr<_1bc5a76a4_GenericDecl>(_1bc5a76a4_GenericDecl{._field_Token=(*(_43937_tokens))[0LL], });;
	if (((*((*(_44013_g))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1bd420285_pushErr(_self_.ptr(), (*(_44013_g))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1bd4205e8_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*(_44013_g))._field_Ident=(*((*(_44013_g))._field_Token))._field_Kind;
	if (((*(_43937_tokens)).len() > 1LL)) {
		if (((*((*(_43937_tokens))[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
			_1bd420285_pushErr(_self_.ptr(), (*(_43937_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_43937_tokens)).len() == 2LL)) {
			_1bd420285_pushErr(_self_.ptr(), (*(_43937_tokens))[1LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_1bc583a9d_Token>> _45717_constraintTokens = (*(_43937_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>> _45817_parts;;
		jule::Slice<_1ed6c7892_Log> _45824_errors;;
		({
			__jule_tuple_ssx_1bc583a9d_Token__jule_tuple_s_1ed6c7892_Log __jule_assign_result = _1bd41d706_parts(&(_45717_constraintTokens), static_cast<jule::U64>(66LLU), true);
			_45817_parts = __jule_assign_result.__jule_result_arg0;
			_45824_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_45824_errors.len() > 0LL)) {
			((*(_self_))._field_errors).append(_45824_errors);;
			return nullptr;;
		};
		(*(_44013_g))._field_Constraint=jule::new_ptr<_1bc5a71ed_Constraint>(_1bc5a71ed_Constraint{._field_Mask=jule::Slice<jule::Ptr<_1bc59563c_TypeDecl>>::alloc(0LL, _45817_parts.len())});
		{
			auto expr = &(_45817_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c20240d8:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_1bc583a9d_Token>> _46425_part = *it;
				{
					jule::I64 _46521_i = 0LL;;
					jule::Ptr<_1bc59563c_TypeDecl> _46621_kind;;
					({
						__jule_tuple_x_1bc59563c_TypeDecl__jule_tuple_bool __jule_assign_result = _1bd421d8b_buildType(_self_, &(_46425_part), (&(_46521_i)), true);
						_46621_kind = __jule_assign_result.__jule_result_arg0;
					});
					{ jule::Slice<jule::Ptr<_1bc59563c_TypeDecl>> &__jule_push_dest = (*((*(_44013_g))._field_Constraint))._field_Mask; __jule_push_dest.push(_46621_kind); };
					if ((_46521_i < _46425_part.len())) {
						_1bd420285_pushErr(_self_.ptr(), _46425_part[_46521_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1c20240d8:;
				++it;
				goto _iter_begin_1c20240d8;
			}
			_iter_end_1c20240d8:;
		};
	};
	return _44013_g;;
}



inline jule::Slice<jule::Ptr<_1bc5a76a4_GenericDecl>> _1bd42384e_buildGenerics(jule::Ptr<_1bd41e7d4_parser> _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _47638_tokens, jule::Ptr<_1bc583a9d_Token>* _47657_errorToken) {
	if (((*(_47638_tokens)).len() == 0LL)) {
		_1bd420285_pushErr(_self_.ptr(), (*(_47657_errorToken)), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>> _48213_parts;;
	jule::Slice<_1ed6c7892_Log> _48220_errors;;
	({
		__jule_tuple_ssx_1bc583a9d_Token__jule_tuple_s_1ed6c7892_Log __jule_assign_result = _1bd41d706_parts(_47638_tokens, static_cast<jule::U64>(5LLU), true);
		_48213_parts = __jule_assign_result.__jule_result_arg0;
		_48220_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_48220_errors.len() > 0LL)) {
		((*(_self_))._field_errors).append(_48220_errors);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1bc5a76a4_GenericDecl>> _48813_generics = jule::Slice<jule::Ptr<_1bc5a76a4_GenericDecl>>::alloc(0LL, _48213_parts.len());;
	{
		auto expr = &(_48213_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2028186:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1bc583a9d_Token>> _48921_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1bc5a76a4_GenericDecl>> &__jule_push_dest = _48813_generics; __jule_push_dest.push(_1bd423453_buildGeneric(_self_, &(_48921_part))); };
			}
			_iter_next_1c2028186:;
			++it;
			goto _iter_begin_1c2028186;
		}
		_iter_end_1c2028186:;
	};
	return _48813_generics;;
}



inline jule::Ptr<_1bc5aac07_ParamDecl> _1bd423b90_buildSelfParam(_1bd41e7d4_parser* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _49637_tokens) {
	if ((_49637_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1bc5aac07_ParamDecl> _50113_param = jule::new_ptr<_1bc5aac07_ParamDecl>();;
	jule::I64 _50413_i = 0LL;;
	if (((*(_49637_tokens[_50413_i]))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*(_50113_param))._field_Mutable=true;
		(_50413_i)++;
		if ((_50413_i >= _49637_tokens.len())) {
			_1bd420285_pushErr(_self_, _49637_tokens[(_50413_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	_2096a4489_StrBuilder _51413_ident = static__2096a48da_New(5LL);;
	if (((*(_49637_tokens[_50413_i]))._field_Id == static_cast<jule::U64>(65LLU))) {
		_2096a4e4b_WriteStr(&_51413_ident, jule::Str::lit("&", 1));
		(_50413_i)++;
		if ((_50413_i >= _49637_tokens.len())) {
			_1bd420285_pushErr(_self_, _49637_tokens[(_50413_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if (((*(_49637_tokens[_50413_i]))._field_Id == static_cast<jule::U64>(24LLU))) {
		_2096a4e4b_WriteStr(&_51413_ident, jule::Str::lit("self", 4));
		(*(_50113_param))._field_Token=_49637_tokens[_50413_i];
		(_50413_i)++;
		if ((_50413_i < _49637_tokens.len())) {
			_1bd420285_pushErr(_self_, _49637_tokens[_50413_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	};
	(*(_50113_param))._field_Ident=_2096a5743_Str(&_51413_ident);
	return _50113_param;;
}



inline void _1bd4240ad_paramTypeBegin(_1bd41e7d4_parser* _self_, jule::Ptr<_1bc5aac07_ParamDecl>* _53838_param, jule::I64* _53862_i, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _53871_tokens) {
	for (; ((*(_53862_i)) < (*(_53871_tokens)).len()); ((*(_53862_i)))++) {
		{
			jule::Ptr<_1bc583a9d_Token> _54013_token = (*(_53871_tokens))[(*(_53862_i))];;
			if (((*(_54013_token))._field_Id != static_cast<jule::U64>(39LLU))) {
				return;;
			};
			if ((*((*(_53838_param))))._field_Variadic) {
				_1bd420285_pushErr(_self_, _54013_token, jule::Str::lit("define is already variadic", 26), jule::Slice<jule::Any>());
				goto _iter_next_1c203139d;
			};
			(*((*(_53838_param))))._field_Variadic=true;
		}
	_iter_next_1c203139d:;
	}
	_iter_end_1c203139d:;;
}



inline void _1bd424421_buildParamType(jule::Ptr<_1bd41e7d4_parser> _self_, jule::Ptr<_1bc5aac07_ParamDecl>* _55339_param, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _55363_tokens) {
	jule::I64 _55413_i = 0LL;;
	_1bd4240ad_paramTypeBegin(_self_.ptr(), _55339_param, &(_55413_i), _55363_tokens);
	if ((_55413_i >= (*(_55363_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_1bc59563c_TypeDecl__jule_tuple_bool __jule_assign_result = _1bd421d8b_buildType(_self_, _55363_tokens, (&(_55413_i)), true);
		(*((*(_55339_param))))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_55413_i < (*(_55363_tokens)).len())) {
		_1bd420285_pushErr(_self_.ptr(), (*(_55363_tokens))[_55413_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1bd424784_buildParamBody(jule::Ptr<_1bd41e7d4_parser> _self_, jule::Ptr<_1bc5aac07_ParamDecl>* _56639_param, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _56662_tokens) {
	jule::Ptr<_1bc583a9d_Token> _56713_tok = _56662_tokens[0LL];;
	if ((_56662_tokens.len() == 1LL)) {
		(*((*(_56639_param))))._field_Ident=(*(_56713_tok))._field_Kind;
		return;;
	} else if ((_56662_tokens.len() < 3LL)) {
		_1bd420285_pushErr(_self_.ptr(), _56713_tok, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_56662_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
		(*((*(_56639_param))))._field_Ident=jule::Str::lit("<anonymous>", 11);
		_1bd424421_buildParamType(_self_, _56639_param, &(_56662_tokens));
		return;;
	};
	(*((*(_56639_param))))._field_Ident=(*(_56713_tok))._field_Kind;
	(_56662_tokens).mut_slice(2LL);;
	_1bd424421_buildParamType(_self_, _56639_param, &(_56662_tokens));
}



inline jule::Ptr<_1bc5aac07_ParamDecl> _1bd424ac5_buildParam(jule::Ptr<_1bd41e7d4_parser> _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _58634_tokens) {
	jule::Ptr<_1bc5aac07_ParamDecl> _58713_param = jule::new_ptr<_1bc5aac07_ParamDecl>(_1bc5aac07_ParamDecl{._field_Token=_58634_tokens[0LL], });;
	if (((*((*(_58713_param))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*(_58713_param))._field_Mutable=true;
		if ((_58634_tokens.len() == 1LL)) {
			_1bd420285_pushErr(_self_.ptr(), _58634_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_58634_tokens).mut_slice(1LL);;
		(*(_58713_param))._field_Token=_58634_tokens[0LL];
	};
	if ((_58634_tokens.len() >= 3LL)) {
		if (((*((*(_58713_param))._field_Token))._field_Id == static_cast<jule::U64>(65LLU))) {
			if ((_58634_tokens.len() == 1LL)) {
				_1bd420285_pushErr(_self_.ptr(), _58634_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if ((((*(_58634_tokens[1LL]))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_58634_tokens[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
				(*(_58713_param))._field_Reference=true;
				(_58634_tokens).mut_slice(1LL);;
				(*(_58713_param))._field_Token=_58634_tokens[0LL];
			};
		};
	};
	if (((*((*(_58713_param))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		(*(_58713_param))._field_Ident=jule::Str::lit("<anonymous>", 11);
		_1bd424421_buildParamType(_self_, &(_58713_param), &(_58634_tokens));
	} else {
		_1bd424784_buildParamBody(_self_, &(_58713_param), _58634_tokens);
	};
	return _58713_param;;
}



inline void _1bd424d7d_checkParams(_1bd41e7d4_parser* _self_, jule::Slice<jule::Ptr<_1bc5aac07_ParamDecl>>* _62935_params) {
	{
		auto expr = _62935_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2041248:;
		if (it != expr_end) {
			jule::Ptr<_1bc5aac07_ParamDecl> _63021_param = *it;
			{
				if ((_1bc5ab07b_IsSelf(_63021_param.ptr()) || ((*(_63021_param))._field_Kind != nullptr))) {
					goto _iter_next_1c2041248;
				};
				if (((*(_63021_param))._field_Token == nullptr)) {
					_1bd420285_pushErr(_self_, (*(_63021_param))._field_Token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
				} else {
					(*(_63021_param))._field_Kind=jule::new_ptr<_1bc59563c_TypeDecl>(_1bc59563c_TypeDecl{._field_Token=(*(_63021_param))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1bc595c47_IdentTypeDecl>(_1bc595c47_IdentTypeDecl{._field_Token=(*(_63021_param))._field_Token, ._field_Ident=(*((*(_63021_param))._field_Token))._field_Kind, }), &__jule_any_type20)});
					(*(_63021_param))._field_Ident=jule::Str::lit("<anonymous>", 11);
				};
			}
			_iter_next_1c2041248:;
			++it;
			goto _iter_begin_1c2041248;
		}
		_iter_end_1c2041248:;
	};
}



inline jule::Slice<jule::Ptr<_1bc5aac07_ParamDecl>> _1bd425279_buildParams(jule::Ptr<_1bd41e7d4_parser> _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _64936_tokens, jule::Bool _64954_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>> _65013_parts;;
	jule::Slice<_1ed6c7892_Log> _65020_errs;;
	({
		__jule_tuple_ssx_1bc583a9d_Token__jule_tuple_s_1ed6c7892_Log __jule_assign_result = _1bd41d706_parts(_64936_tokens, static_cast<jule::U64>(5LLU), true);
		_65013_parts = __jule_assign_result.__jule_result_arg0;
		_65020_errs = __jule_assign_result.__jule_result_arg1;
	});
	((*(_self_))._field_errors).append(_65020_errs);;
	if ((_65013_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1bc5aac07_ParamDecl>> _65617_params = nullptr;;
	if ((_64954_method && (_65013_parts.len() > 0LL))) {
		jule::Ptr<_1bc5aac07_ParamDecl> _65817_param = _1bd423b90_buildSelfParam(_self_.ptr(), _65013_parts[0LL]);;
		if (((_65817_param != nullptr) && _1bc5ab07b_IsSelf(_65817_param.ptr()))) {
			{ jule::Slice<jule::Ptr<_1bc5aac07_ParamDecl>> &__jule_push_dest = _65617_params; __jule_push_dest.push(_65817_param); };
			(_65013_parts).mut_slice(1LL);;
		};
	};
	{
		auto expr = &(_65013_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c20463e6:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1bc583a9d_Token>> _66521_part = *it;
			{
				jule::Ptr<_1bc5aac07_ParamDecl> _66617_param = _1bd424ac5_buildParam(_self_, _66521_part);;
				if ((_66617_param != nullptr)) {
					{ jule::Slice<jule::Ptr<_1bc5aac07_ParamDecl>> &__jule_push_dest = _65617_params; __jule_push_dest.push(_66617_param); };
				};
			}
			_iter_next_1c20463e6:;
			++it;
			goto _iter_begin_1c20463e6;
		}
		_iter_end_1c20463e6:;
	};
	_1bd424d7d_checkParams(_self_.ptr(), &(_65617_params));
	return _65617_params;;
}



inline __jule_tuple_x_1bc598530_RetTypeDecl__jule_tuple_bool _1bd425675_buildMultiRetType(jule::Ptr<_1bd41e7d4_parser> _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _67642_tokens, jule::I64* _67665_i) {
	__jule_tuple_x_1bc598530_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1bc598530_RetTypeDecl>();
	((*(_67665_i)))++;
	if (((*(_67665_i)) >= (*(_67642_tokens)).len())) {
		((*(_67665_i)))--;
		({
			__jule_tuple_x_1bc59563c_TypeDecl__jule_tuple_bool __jule_assign_result = _1bd421d8b_buildType(_self_, _67642_tokens, _67665_i, false);
			(*(__jule_func_result.__jule_result_arg0))._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_67665_i)))--;
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _68613_rangeTokens = _1bd41ce86_range(_67665_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _67642_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>> _68813_parts;;
	jule::Slice<_1ed6c7892_Log> _68820_errs;;
	({
		__jule_tuple_ssx_1bc583a9d_Token__jule_tuple_s_1ed6c7892_Log __jule_assign_result = _1bd41d706_parts(&(_68613_rangeTokens), static_cast<jule::U64>(5LLU), true);
		_68813_parts = __jule_assign_result.__jule_result_arg0;
		_68820_errs = __jule_assign_result.__jule_result_arg1;
	});
	((*(_self_))._field_errors).append(_68820_errs);;
	if ((_68813_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1bc59563c_TypeDecl>> _69413_types = jule::Slice<jule::Ptr<_1bc59563c_TypeDecl>>::alloc(0LL, _68813_parts.len());;
	(*(__jule_func_result.__jule_result_arg0))._field_Idents=jule::Slice<jule::Ptr<_1bc583a9d_Token>>::alloc(0LL, _68813_parts.len());
	{
		auto expr = &(_68813_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c204d2bb:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1bc583a9d_Token>> _69621_part = *it;
			{
				jule::Ptr<_1bc583a9d_Token> _69717_token = _69621_part[0LL];;
				jule::I64 _69817_offset = 0LL;;
				if ((_69621_part.len() > 1LL)) {
					_69717_token=_69621_part[1LL];
					if (((*(_69717_token))._field_Id == static_cast<jule::U64>(8LLU))) {
						_69817_offset=2LL;
						if ((_69621_part.len() < 3LL)) {
							_1bd420285_pushErr(_self_.ptr(), _69717_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
							goto _iter_next_1c204d2bb;
						};
					};
				};
				_69717_token=_69621_part[0LL];
				if ((_69817_offset != 2LL)) {
					jule::Ptr<_1bc583a9d_Token> _71421_newToken = jule::new_ptr<_1bc583a9d_Token>((*(_69717_token)));;
					(*(_71421_newToken))._field_Kind=jule::Str::lit("<anonymous>", 11);
					{ jule::Slice<jule::Ptr<_1bc583a9d_Token>> &__jule_push_dest = (*(__jule_func_result.__jule_result_arg0))._field_Idents; __jule_push_dest.push(_71421_newToken); };
				} else {
					{ jule::Slice<jule::Ptr<_1bc583a9d_Token>> &__jule_push_dest = (*(__jule_func_result.__jule_result_arg0))._field_Idents; __jule_push_dest.push(_69717_token); };
				};
				jule::Ptr<_1bc59563c_TypeDecl> _72117_tk;;
				({
					__jule_tuple_x_1bc59563c_TypeDecl__jule_tuple_bool __jule_assign_result = _1bd421d8b_buildType(_self_, &(_69621_part), (&(_69817_offset)), true);
					_72117_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_69817_offset < _69621_part.len())) {
					_1bd420285_pushErr(_self_.ptr(), _69621_part[_69817_offset], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1bc59563c_TypeDecl>> &__jule_push_dest = _69413_types; __jule_push_dest.push(_72117_tk); };
			}
			_iter_next_1c204d2bb:;
			++it;
			goto _iter_begin_1c204d2bb;
		}
		_iter_end_1c204d2bb:;
	};
	if ((_69413_types.len() > 1LL)) {
		(*(__jule_func_result.__jule_result_arg0))._field_Kind=jule::new_ptr<_1bc59563c_TypeDecl>(_1bc59563c_TypeDecl{._field_Token=(*(_67642_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1bc596d69_TupleTypeDecl>(_1bc596d69_TupleTypeDecl{._field_Types=_69413_types}), &__jule_any_type74)});
	} else {
		(*(__jule_func_result.__jule_result_arg0))._field_Kind=_69413_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1bc598530_RetTypeDecl__jule_tuple_bool _1bd425a71_buildRetType(jule::Ptr<_1bd41e7d4_parser> _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _74437_tokens, jule::I64* _74460_i) {
	__jule_tuple_x_1bc598530_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1bc598530_RetTypeDecl>();
	if (((*(_74460_i)) >= (*(_74437_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_1bc583a9d_Token> _75013_token = (*(_74437_tokens))[(*(_74460_i))];;
	{
		auto &_match_expr{ (*(_75013_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1c2056b65:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(71LLU)) {
			_case_begin_1c2056bdc:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1c2056c64:;
			{
				if ((((*(_74460_i)) + 1LL) >= (*(_74437_tokens)).len())) {
					_1bd420285_pushErr(_self_.ptr(), _75013_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_74460_i)))++;
				_75013_token=(*(_74437_tokens))[(*(_74460_i))];
				{
					auto &_match_expr{ (*(_75013_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1c2058a02:;
						{
							({
								__jule_tuple_x_1bc598530_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1bd425675_buildMultiRetType(_self_, _74437_tokens, _74460_i);
								__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
								__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
							});
							return __jule_func_result;;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1c2058a79:;
						{
							_1bd420285_pushErr(_self_.ptr(), _75013_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
							return __jule_func_result;;
						}
					}
					_match_end_1c205898b:;
				};
				({
					__jule_tuple_x_1bc59563c_TypeDecl__jule_tuple_bool __jule_assign_result = _1bd421d8b_buildType(_self_, _74437_tokens, _74460_i, true);
					(*(__jule_func_result.__jule_result_arg0))._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1c2056add:;
	};
	((*(_74460_i)))++;
	_1bd420285_pushErr(_self_.ptr(), _75013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1bc5ac159_FnDecl> _1bd426027_buildFnPrototype(jule::Ptr<_1bd41e7d4_parser> _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _78341_tokens, jule::I64* _78364_i, jule::Bool _78372_method) {
	jule::Ptr<_1bc5ac159_FnDecl> _78413_f = jule::new_ptr<_1bc5ac159_FnDecl>(_1bc5ac159_FnDecl{._field_Token=(*(_78341_tokens))[(*(_78364_i))], });;
	if (((*((*(_78413_f))._field_Token))._field_Id == static_cast<jule::U64>(34LLU))) {
		(*(_78413_f))._field_Statically=true;
		((*(_78364_i)))++;
		if (((*(_78364_i)) >= (*(_78341_tokens)).len())) {
			_1bd420285_pushErr(_self_.ptr(), (*(_78413_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*(_78413_f))._field_Token=(*(_78341_tokens))[(*(_78364_i))];
	};
	if (((*((*(_78413_f))._field_Token))._field_Id == static_cast<jule::U64>(31LLU))) {
		(*(_78413_f))._field_Unsafety=true;
		((*(_78364_i)))++;
		if (((*(_78364_i)) >= (*(_78341_tokens)).len())) {
			_1bd420285_pushErr(_self_.ptr(), (*(_78413_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*(_78413_f))._field_Token=(*(_78341_tokens))[(*(_78364_i))];
	};
	((*(_78364_i)))++;
	if (((*(_78364_i)) >= (*(_78341_tokens)).len())) {
		_1bd420285_pushErr(_self_.ptr(), (*(_78413_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1bc583a9d_Token> _8179_tok = (*(_78341_tokens))[(*(_78364_i))];;
	if (((*(_8179_tok))._field_Id == static_cast<jule::U64>(1LLU))) {
		((*(_78364_i)))++;
		if (((*(_78364_i)) >= (*(_78341_tokens)).len())) {
			_1bd420285_pushErr(_self_.ptr(), (*(_78413_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*(_78413_f))._field_Ident=(*(_8179_tok))._field_Kind;
	} else {
		(*(_78413_f))._field_Ident=jule::Str::lit("<anonymous>", 11);
	};
	jule::Ptr<_1bc583a9d_Token> _8299_errorToken = (*(_78341_tokens))[(*(_78364_i))];;
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _83013_genericsTokens = _1bd41ce86_range(_78364_i, static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _78341_tokens);;
	if ((_83013_genericsTokens != nullptr)) {
		(*(_78413_f))._field_Generics=_1bd42384e_buildGenerics(_self_, &(_83013_genericsTokens), &(_8299_errorToken));
	};
	if (((*((*(_78341_tokens))[(*(_78364_i))]))._field_Id != static_cast<jule::U64>(74LLU))) {
		_1bd420285_pushErr(_self_.ptr(), (*(_78341_tokens))[(*(_78364_i))], jule::Str::lit("missing function parentheses", 28), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _84013_paramsToks = _1bd41ce86_range(_78364_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _78341_tokens);;
	if ((_84013_paramsToks.len() > 0LL)) {
		(*(_78413_f))._field_Params=_1bd425279_buildParams(_self_, &(_84013_paramsToks), _78372_method);
	};
	if (((*(_78364_i)) < (*(_78341_tokens)).len())) {
		jule::Ptr<_1bc583a9d_Token> _84613_token = (*(_78341_tokens))[(*(_78364_i))];;
		if (((*(_84613_token))._field_Id == static_cast<jule::U64>(68LLU))) {
			(*(_78413_f))._field_Exceptional=true;
			((*(_78364_i)))++;
		};
	};
	(*(_78413_f))._field_Public=_1bc781372_IsPub((*(_78413_f))._field_Ident);
	({
		__jule_tuple_x_1bc598530_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1bd425a71_buildRetType(_self_, _78341_tokens, _78364_i);
		(*(_78413_f))._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _78413_f;;
}



inline jule::Ptr<_1bc5ac159_FnDecl> _1bd4264cd_buildFn(jule::Ptr<_1bd41e7d4_parser> _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _86032_tokens, jule::Bool _86050_method, jule::Bool _86064_prototype) {
	jule::I64 _86113_i = 0LL;;
	jule::Ptr<_1bc5ac159_FnDecl> _86213_f = _1bd426027_buildFnPrototype(_self_, _86032_tokens, &(_86113_i), _86050_method);;
	if (_86064_prototype) {
		if ((_86113_i < (*(_86032_tokens)).len())) {
			_1bd420285_pushErr(_self_.ptr(), (*(_86032_tokens))[(_86113_i + 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
		return _86213_f;;
	} else if ((_86213_f == nullptr)) {
		return _86213_f;;
	};
	if ((_86113_i >= (*(_86032_tokens)).len())) {
		_1bd41ead1_stop(_self_.ptr());
		_1bd420285_pushErr(_self_.ptr(), (*(_86213_f))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1bd4205e8_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _87813_blockTokens = _1bd41ce86_range(&(_86113_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _86032_tokens);;
	if ((_87813_blockTokens != nullptr)) {
		(*(_86213_f))._field_Scope=_1bd42142e_buildScope(_self_, &(_87813_blockTokens), (*(_86032_tokens))[(_86113_i - 1LL)]);
		(*((*(_86213_f))._field_Scope))._field_Unsafety=(*(_86213_f))._field_Unsafety;
		if ((_86113_i < (*(_86032_tokens)).len())) {
			_1bd420285_pushErr(_self_.ptr(), (*(_86032_tokens))[_86113_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	} else {
		_1bd41ead1_stop(_self_.ptr());
		_1bd420285_pushErr(_self_.ptr(), (*(_86213_f))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1bd4205e8_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _86213_f;;
}



inline jule::Slice<jule::Ptr<_1bc583a9d_Token>> _1bd42681e_getUseDeclSelectors(_1bd41e7d4_parser* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _89442_tokens) {
	jule::I64 _89513_i = 0LL;;
	_89442_tokens=_1bd41ce86_range(&(_89513_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_89442_tokens));
	jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>> _89713_parts;;
	jule::Slice<_1ed6c7892_Log> _89720_errs;;
	({
		__jule_tuple_ssx_1bc583a9d_Token__jule_tuple_s_1ed6c7892_Log __jule_assign_result = _1bd41d706_parts(&(_89442_tokens), static_cast<jule::U64>(5LLU), true);
		_89713_parts = __jule_assign_result.__jule_result_arg0;
		_89720_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_89720_errs.len() > 0LL)) {
		((*(_self_))._field_errors).append(_89720_errs);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _90313_selectors = jule::Slice<jule::Ptr<_1bc583a9d_Token>>::alloc(0LL, _89713_parts.len());;
	{
		auto expr = &(_89713_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2071652:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1bc583a9d_Token>> _90421_part = *it;
			{
				if ((_90421_part.len() > 1LL)) {
					_1bd420285_pushErr(_self_, _90421_part[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1bc583a9d_Token> _90817_tok = _90421_part[0LL];;
				if ((((*(_90817_tok))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(_90817_tok))._field_Id != static_cast<jule::U64>(24LLU)))) {
					_1bd420285_pushErr(_self_, _90817_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					_1bd4205e8_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					goto _iter_next_1c2071652;
				};
				{ jule::Slice<jule::Ptr<_1bc583a9d_Token>> &__jule_push_dest = _90313_selectors; __jule_push_dest.push(_90817_tok); };
			}
			_iter_next_1c2071652:;
			++it;
			goto _iter_begin_1c2071652;
		}
		_iter_end_1c2071652:;
	};
	return _90313_selectors;;
}



inline void _1bd426b82_buildBindUseDecl(_1bd41e7d4_parser* _self_, jule::Ptr<_1bc5b35a0_UseDecl>* _91940_decl, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _91957_tokens) {
	if (((*(_91957_tokens)).len() > 1LL)) {
		_1bd420285_pushErr(_self_, (*(_91957_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1bc583a9d_Token> _9239_token = (*(_91957_tokens))[0LL];;
	if ((((*(_9239_token))._field_Id != static_cast<jule::U64>(4LLU)) || (((*(_9239_token))._field_Kind[0LL] != '`') && ((*(_9239_token))._field_Kind[0LL] != '\"')))) {
		_1bd420285_pushErr(_self_, _9239_token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_91940_decl))))._field_Binded=true;
	(*((*(_91940_decl))))._field_LinkPath=(*(_9239_token))._field_Kind.slice(1LL, ((*(_9239_token))._field_Kind.len() - 1LL));
}



inline jule::Str _1bd426ec3_useDeclTokstoa(_1bd41e7d4_parser* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _93234_tokens) {
	jule::I64 _93313_n = 0LL;;
	{
		auto expr = _93234_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2078eea:;
		if (it != expr_end) {
			jule::Ptr<_1bc583a9d_Token> *_93416_token = it;
			{
				if ((((*((*(_93416_token))))._field_Id != static_cast<jule::U64>(1LLU)) && ((*((*(_93416_token))))._field_Id != static_cast<jule::U64>(19LLU)))) {
					_1bd420285_pushErr(_self_, (*(_93416_token)), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				_93313_n+=(*((*(_93416_token))))._field_Kind.len();
			}
			_iter_next_1c2078eea:;
			++it;
			goto _iter_begin_1c2078eea;
		}
		_iter_end_1c2078eea:;
	};
	_2096a4489_StrBuilder _94013_s = static__2096a48da_New(_93313_n);;
	{
		auto expr = _93234_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2078e0c:;
		if (it != expr_end) {
			jule::Ptr<_1bc583a9d_Token> *_94116_token = it;
			{
				_2096a4e4b_WriteStr(&_94013_s, (*((*(_94116_token))))._field_Kind);
			}
			_iter_next_1c2078e0c:;
			++it;
			goto _iter_begin_1c2078e0c;
		}
		_iter_end_1c2078e0c:;
	};
	return _2096a5743_Str(&_94013_s);;
}



inline void _1bd427336_buildStdUseDecl(_1bd41e7d4_parser* _self_, jule::Ptr<_1bc5b35a0_UseDecl>* _94739_decl, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _94759_tokens) {
	(*((*(_94739_decl))))._field_Std=true;
	jule::Ptr<_1bc583a9d_Token> _95013_token = _94759_tokens[0LL];;
	if ((_94759_tokens.len() < 3LL)) {
		_1bd420285_pushErr(_self_, _95013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(_94759_tokens).mut_slice(2LL);;
	_95013_token=_94759_tokens[(_94759_tokens.len() - 1LL)];
	{
		auto &_match_expr{ (*(_95013_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1c207d8a1:;
			{
				_1bd420285_pushErr(_self_, _95013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1c207d928:;
			{
				jule::Slice<jule::Ptr<_1bc583a9d_Token>> _96321_selectors = nullptr;;
				({
					__jule_tuple_sx_1bc583a9d_Token__jule_tuple_sx_1bc583a9d_Token __jule_assign_result = _1bd41d250_rangeLast(&(_94759_tokens));
					_94759_tokens = __jule_assign_result.__jule_result_arg0;
					_96321_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_94739_decl))))._field_Selected=_1bd42681e_getUseDeclSelectors(_self_, _96321_selectors);
				if ((_94759_tokens.len() == 0LL)) {
					_1bd420285_pushErr(_self_, _95013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_95013_token=_94759_tokens[(_94759_tokens.len() - 1LL)];
				if (((*(_95013_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1bd420285_pushErr(_self_, _95013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_94759_tokens).mut_slice(0LL, (_94759_tokens.len() - 1LL));;
				if ((_94759_tokens.len() == 0LL)) {
					_1bd420285_pushErr(_self_, _95013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1c207d9a0:;
			{
				(_94759_tokens).mut_slice(0LL, (_94759_tokens.len() - 1LL));;
				if ((_94759_tokens.len() == 0LL)) {
					_1bd420285_pushErr(_self_, _95013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_95013_token=_94759_tokens[(_94759_tokens.len() - 1LL)];
				if (((*(_95013_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1bd420285_pushErr(_self_, _95013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_94759_tokens).mut_slice(0LL, (_94759_tokens.len() - 1LL));;
				if ((_94759_tokens.len() == 0LL)) {
					_1bd420285_pushErr(_self_, _95013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_94739_decl))))._field_Full=true;
			}
		}
		_match_end_1c207d829:;
	};
	if (((_94759_tokens.len() == 1LL) && ((*(_94759_tokens[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		(*((*(_94739_decl))))._field_LinkPath=jule::Str::lit("std::unsafe", 11);
	} else {
		(*((*(_94739_decl))))._field_LinkPath=(jule::Str::lit("std::", 5) + _1bd426ec3_useDeclTokstoa(_self_, &(_94759_tokens)));
	};
}



inline void _1bd427699_buildIdentUseDecl(_1bd41e7d4_parser* _self_, jule::Ptr<_1bc5b35a0_UseDecl>* _100541_decl, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _100561_tokens) {
	(*((*(_100541_decl))))._field_Std=false;
	jule::Ptr<_1bc583a9d_Token> _100813_token = _100561_tokens[(_100561_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ (*(_100813_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1c20878ee:;
			{
				_1bd420285_pushErr(_self_, _100813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1c2088191:;
			{
				jule::Slice<jule::Ptr<_1bc583a9d_Token>> _101421_selectors = nullptr;;
				({
					__jule_tuple_sx_1bc583a9d_Token__jule_tuple_sx_1bc583a9d_Token __jule_assign_result = _1bd41d250_rangeLast(&(_100561_tokens));
					_100561_tokens = __jule_assign_result.__jule_result_arg0;
					_101421_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_100541_decl))))._field_Selected=_1bd42681e_getUseDeclSelectors(_self_, _101421_selectors);
				if ((_100561_tokens.len() == 0LL)) {
					_1bd420285_pushErr(_self_, _100813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100813_token=_100561_tokens[(_100561_tokens.len() - 1LL)];
				if (((*(_100813_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1bd420285_pushErr(_self_, _100813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_100561_tokens).mut_slice(0LL, (_100561_tokens.len() - 1LL));;
				if ((_100561_tokens.len() == 0LL)) {
					_1bd420285_pushErr(_self_, _100813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1c2088207:;
			{
				(_100561_tokens).mut_slice(0LL, (_100561_tokens.len() - 1LL));;
				if ((_100561_tokens.len() == 0LL)) {
					_1bd420285_pushErr(_self_, _100813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100813_token=_100561_tokens[(_100561_tokens.len() - 1LL)];
				if (((*(_100813_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1bd420285_pushErr(_self_, _100813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_100561_tokens).mut_slice(0LL, (_100561_tokens.len() - 1LL));;
				if ((_100561_tokens.len() == 0LL)) {
					_1bd420285_pushErr(_self_, _100813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_100541_decl))))._field_Full=true;
			}
		}
		_match_end_1c2088081:;
	};
	(*((*(_100541_decl))))._field_LinkPath=_1bd426ec3_useDeclTokstoa(_self_, &(_100561_tokens));
}



inline void _1bd427a0c_parseUseDecl(_1bd41e7d4_parser* _self_, jule::Ptr<_1bc5b35a0_UseDecl>* _105336_decl, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _105356_tokens) {
	if ((*((*(_105336_decl))))._field_Binded) {
		_1bd426b82_buildBindUseDecl(_self_, _105336_decl, &(_105356_tokens));
		return;;
	};
	jule::Ptr<_1bc583a9d_Token> _105913_token = _105356_tokens[0LL];;
	if (((*(_105913_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1bd420285_pushErr(_self_, _105913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1bd4205e8_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	if (((_105356_tokens.len() > 2LL) && ((*(_105356_tokens[1LL]))._field_Id == static_cast<jule::U64>(9LLU)))) {
		(*((*(_105336_decl))))._field_Alias=(*(_105913_token))._field_Kind;
		if (((*(_105356_tokens[2LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1bd420285_pushErr(_self_, _105913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			_1bd4205e8_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			return;;
		};
		(_105356_tokens).mut_slice(2LL);;
		_105913_token=_105356_tokens[0LL];
	};
	;
	{
		
		if ((*(_105913_token))._field_Kind.equal("std", 3)) {
			_case_begin_1c209507c:;
			{
				_1bd427336_buildStdUseDecl(_self_, _105336_decl, _105356_tokens);
			}
		}
		else {
			_case_begin_1c2094bd6:;
			{
				_1bd427699_buildIdentUseDecl(_self_, _105336_decl, _105356_tokens);
			}
		}
		_match_end_1c2094b70:;
	};
}



inline jule::Ptr<_1bc5b35a0_UseDecl> _1bd427e08_buildUseDecl(_1bd41e7d4_parser* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _108735_tokens, jule::Bool _108753_binded) {
	jule::Ptr<_1bc5b35a0_UseDecl> _108813_decl = jule::new_ptr<_1bc5b35a0_UseDecl>(_1bc5b35a0_UseDecl{._field_Token=_108735_tokens[0LL], ._field_Binded=_108753_binded, });;
	if ((_108735_tokens.len() < 2LL)) {
		_1bd420285_pushErr(_self_, (*(_108813_decl))._field_Token, jule::Str::lit("missing path of use statement", 29), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_108735_tokens).mut_slice(1LL);;
	_1bd427a0c_parseUseDecl(_self_, &(_108813_decl), _108735_tokens);
	return _108813_decl;;
}



inline jule::Ptr<_1bc59563c_TypeDecl> _1bd428304_buildTypeEnumItemKind(jule::Ptr<_1bd41e7d4_parser> _self_, jule::I64* _110146_i, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _110159_tokens) {
	jule::I64 _110213_braceN = 0LL;;
	jule::I64 _11039_exprStart = (*(_110146_i));;
	for (; ((*(_110146_i)) < (*(_110159_tokens)).len()); ((*(_110146_i)))++) {
		{
			jule::Ptr<_1bc583a9d_Token> _110513_t = (*(_110159_tokens))[(*(_110146_i))];;
			{
				auto &_match_expr{ (*(_110513_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1c20994b0:;
					{
						(_110213_braceN)++;
						goto _iter_next_1c2098789;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1c2099537:;
					{
						(_110213_braceN)--;
					}
				}
				_match_end_1c2099449:;
			};
			if ((_110213_braceN > 0LL)) {
				goto _iter_next_1c2098789;
			};
			if ((((*(_110513_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_110146_i)) + 1LL) >= (*(_110159_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1bc583a9d_Token>> _112125_kindTokens = nullptr;;
				if (((*(_110513_t))._field_Id == static_cast<jule::U64>(5LLU))) {
					_112125_kindTokens=(*(_110159_tokens)).slice(_11039_exprStart, (*(_110146_i)));
				} else {
					_112125_kindTokens=(*(_110159_tokens)).slice(_11039_exprStart);
				};
				jule::I64 _112721_j = 0LL;;
				jule::Ptr<_1bc59563c_TypeDecl> _112821_kind;;
				({
					__jule_tuple_x_1bc59563c_TypeDecl__jule_tuple_bool __jule_assign_result = _1bd421d8b_buildType(_self_, &(_112125_kindTokens), (&(_112721_j)), true);
					_112821_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_112721_j < _112125_kindTokens.len())) {
					_1bd420285_pushErr(_self_.ptr(), _112125_kindTokens[_112721_j], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				return _112821_kind;;
			};
		}
	_iter_next_1c2098789:;
	}
	_iter_end_1c2098789:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1bc5b4e42_TypeEnumItemDecl>> _1bd428645_buildTypeEnumItems(jule::Ptr<_1bd41e7d4_parser> _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _113843_tokens) {
	jule::Slice<jule::Ptr<_1bc5b4e42_TypeEnumItemDecl>> _113913_items = jule::Slice<jule::Ptr<_1bc5b4e42_TypeEnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _114013_i = 0LL;;
	for (; (_114013_i < (*(_113843_tokens)).len()); (_114013_i)++) {
		{
			jule::Ptr<_1bc583a9d_Token> _114217_t = (*(_113843_tokens))[_114013_i];;
			jule::Ptr<_1bc5b4e42_TypeEnumItemDecl> _114317_item = jule::new_ptr<_1bc5b4e42_TypeEnumItemDecl>();;
			(*(_114317_item))._field_Token=_114217_t;
			if ((((*((*(_114317_item))._field_Token))._field_Id == static_cast<jule::U64>(1LLU)) && (((*(_113843_tokens)).len() - _114013_i) > 2LL))) {
				_114217_t=(*(_113843_tokens))[(_114013_i + 1LL)];
				if (((*(_114217_t))._field_Id == static_cast<jule::U64>(8LLU))) {
					(*(_114317_item))._field_Ident=(*((*(_114317_item))._field_Token))._field_Kind;
					_114013_i+=2LL;
					if (((_114013_i >= (*(_113843_tokens)).len()) || ((*((*(_113843_tokens))[_114013_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
						_1bd420285_pushErr(_self_.ptr(), _114217_t, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
						goto _iter_next_1c209e7a1;
					};
				};
			};
			(*(_114317_item))._field_Kind=_1bd428304_buildTypeEnumItemKind(_self_, &(_114013_i), _113843_tokens);
			{ jule::Slice<jule::Ptr<_1bc5b4e42_TypeEnumItemDecl>> &__jule_push_dest = _113913_items; __jule_push_dest.push(_114317_item); };
		}
	_iter_next_1c209e7a1:;
	}
	_iter_end_1c209e7a1:;;
	return _113913_items;;
}



inline jule::Ptr<_1bc5b55a2_TypeEnumDecl> _1bd428986_buildTypeEnumDecl(jule::Ptr<_1bd41e7d4_parser> _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _116242_tokens) {
	jule::I64 _116313_i = 1LL;;
	jule::Ptr<_1bc5b55a2_TypeEnumDecl> _116413_e = jule::new_ptr<_1bc5b55a2_TypeEnumDecl>(_1bc5b55a2_TypeEnumDecl{._field_Token=(*(_116242_tokens))[_116313_i], });;
	if (((*((*(_116413_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1bd420285_pushErr(_self_.ptr(), (*(_116413_e))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1bd4205e8_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*(_116413_e))._field_Ident=(*((*(_116413_e))._field_Token))._field_Kind;
	_116313_i+=3LL;
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _117413_itemTokens = _1bd41ce86_range(&(_116313_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _116242_tokens);;
	if ((_117413_itemTokens == nullptr)) {
		_1bd41ead1_stop(_self_.ptr());
		_1bd420285_pushErr(_self_.ptr(), (*(_116413_e))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1bd4205e8_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _116413_e;;
	} else if ((_116313_i < (*(_116242_tokens)).len())) {
		_1bd420285_pushErr(_self_.ptr(), (*(_116242_tokens))[_116313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_116413_e))._field_Public=_1bc781372_IsPub((*(_116413_e))._field_Ident);
	(*(_116413_e))._field_End=(*(_116242_tokens))[(_116313_i - 1LL)];
	(*(_116413_e))._field_Items=_1bd428645_buildTypeEnumItems(_self_, &(_117413_itemTokens));
	return _116413_e;;
}



inline jule::Ptr<_1bc599971_Expr> _1bd428d82_buildEnumItemExpr(jule::Ptr<_1bd41e7d4_parser> _self_, jule::I64* _118942_i, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _118955_tokens) {
	jule::I64 _119013_braceN = 0LL;;
	jule::I64 _11919_exprStart = (*(_118942_i));;
	for (; ((*(_118942_i)) < (*(_118955_tokens)).len()); ((*(_118942_i)))++) {
		{
			jule::Ptr<_1bc583a9d_Token> _119313_t = (*(_118955_tokens))[(*(_118942_i))];;
			{
				auto &_match_expr{ (*(_119313_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1c20abe95:;
					{
						(_119013_braceN)++;
						goto _iter_next_1c20ab26e;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1c20ac01c:;
					{
						(_119013_braceN)--;
					}
				}
				_match_end_1c20abe2e:;
			};
			if ((_119013_braceN > 0LL)) {
				goto _iter_next_1c20ab26e;
			};
			if ((((*(_119313_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_118942_i)) + 1LL) >= (*(_118955_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1bc583a9d_Token>> _120925_exprTokens = nullptr;;
				if (((*(_119313_t))._field_Id == static_cast<jule::U64>(5LLU))) {
					_120925_exprTokens=(*(_118955_tokens)).slice(_11919_exprStart, (*(_118942_i)));
				} else {
					_120925_exprTokens=(*(_118955_tokens)).slice(_11919_exprStart);
				};
				return _1bd420939_buildExpr(_self_, &(_120925_exprTokens));;
			};
		}
	_iter_next_1c20ab26e:;
	}
	_iter_end_1c20ab26e:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1bc5b3a56_EnumItemDecl>> _1bd4291c3_buildEnumItems(jule::Ptr<_1bd41e7d4_parser> _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _122139_tokens) {
	jule::Slice<jule::Ptr<_1bc5b3a56_EnumItemDecl>> _122213_items = jule::Slice<jule::Ptr<_1bc5b3a56_EnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _122313_i = 0LL;;
	for (; (_122313_i < (*(_122139_tokens)).len()); (_122313_i)++) {
		{
			jule::Ptr<_1bc583a9d_Token> _122517_t = (*(_122139_tokens))[_122313_i];;
			jule::Ptr<_1bc5b3a56_EnumItemDecl> _122617_item = jule::new_ptr<_1bc5b3a56_EnumItemDecl>();;
			(*(_122617_item))._field_Token=_122517_t;
			if (((*((*(_122617_item))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
				_1bd420285_pushErr(_self_.ptr(), (*(_122617_item))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1bd4205e8_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			};
			(*(_122617_item))._field_Ident=(*((*(_122617_item))._field_Token))._field_Kind;
			if ((((_122313_i + 1LL) >= (*(_122139_tokens)).len()) || ((*((*(_122139_tokens))[(_122313_i + 1LL)]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				if (((_122313_i + 1LL) < (*(_122139_tokens)).len())) {
					(_122313_i)++;
				};
				{ jule::Slice<jule::Ptr<_1bc5b3a56_EnumItemDecl>> &__jule_push_dest = _122213_items; __jule_push_dest.push(_122617_item); };
				goto _iter_next_1c20b0ecc;
			};
			(_122313_i)++;
			_122517_t=(*(_122139_tokens))[_122313_i];
			(_122313_i)++;
			if (((*(_122517_t))._field_Id != static_cast<jule::U64>(8LLU))) {
				_1bd420285_pushErr(_self_.ptr(), _122517_t, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1bd4205e8_pushSuggestion(_self_.ptr(), jule::Str::lit("expected colon \":\" for assignment", 33), jule::Slice<jule::Any>());
				goto _iter_next_1c20b0ecc;
			};
			if (((_122313_i >= (*(_122139_tokens)).len()) || ((*((*(_122139_tokens))[_122313_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				_1bd420285_pushErr(_self_.ptr(), _122517_t, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
				goto _iter_next_1c20b0ecc;
			};
			(*(_122617_item))._field_Expr=_1bd428d82_buildEnumItemExpr(_self_, &(_122313_i), _122139_tokens);
			{ jule::Slice<jule::Ptr<_1bc5b3a56_EnumItemDecl>> &__jule_push_dest = _122213_items; __jule_push_dest.push(_122617_item); };
		}
	_iter_next_1c20b0ecc:;
	}
	_iter_end_1c20b0ecc:;;
	return _122213_items;;
}



inline jule::Ptr<_1bc5b4617_EnumDecl> _1bd429514_buildEnumDecl(jule::Ptr<_1bd41e7d4_parser> _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _125838_tokens) {
	if (((*(_125838_tokens)).len() < 3LL)) {
		_1bd420285_pushErr(_self_.ptr(), (*(_125838_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1bc5b4617_EnumDecl> _126313_e = jule::new_ptr<_1bc5b4617_EnumDecl>(_1bc5b4617_EnumDecl{._field_Token=(*(_125838_tokens))[1LL], });;
	if (((*((*(_126313_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1bd420285_pushErr(_self_.ptr(), (*(_126313_e))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1bd4205e8_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*(_126313_e))._field_Ident=(*((*(_126313_e))._field_Token))._field_Kind;
	jule::I64 _127113_i = 2LL;;
	if (((*((*(_125838_tokens))[_127113_i]))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_127113_i)++;
		if ((_127113_i >= (*(_125838_tokens)).len())) {
			_1bd420285_pushErr(_self_.ptr(), (*(_125838_tokens))[(_127113_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return _126313_e;;
		};
		({
			__jule_tuple_x_1bc59563c_TypeDecl__jule_tuple_bool __jule_assign_result = _1bd421d8b_buildType(_self_, _125838_tokens, (&(_127113_i)), true);
			(*(_126313_e))._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_127113_i >= (*(_125838_tokens)).len())) {
			_1bd41ead1_stop(_self_.ptr());
			_1bd420285_pushErr(_self_.ptr(), (*(_126313_e))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
			_1bd4205e8_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
			return _126313_e;;
		};
	} else {
		(*(_126313_e))._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _128813_itemTokens = _1bd41ce86_range(&(_127113_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _125838_tokens);;
	if ((_128813_itemTokens == nullptr)) {
		_1bd41ead1_stop(_self_.ptr());
		_1bd420285_pushErr(_self_.ptr(), (*(_126313_e))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1bd4205e8_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _126313_e;;
	} else if ((_127113_i < (*(_125838_tokens)).len())) {
		_1bd420285_pushErr(_self_.ptr(), (*(_125838_tokens))[_127113_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_126313_e))._field_Public=_1bc781372_IsPub((*(_126313_e))._field_Ident);
	(*(_126313_e))._field_End=(*(_125838_tokens))[(_127113_i - 1LL)];
	(*(_126313_e))._field_Items=_1bd4291c3_buildEnumItems(_self_, &(_128813_itemTokens));
	return _126313_e;;
}



inline jule::Any _1bd429855_buildNodeEnumDecl(jule::Ptr<_1bd41e7d4_parser> _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _130342_tokens) {
	if ((((*(_130342_tokens)).len() > 3LL) && ((*((*(_130342_tokens))[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
		if (((*((*(_130342_tokens))[3LL]))._field_Id == static_cast<jule::U64>(7LLU))) {
			return jule::Any(_1bd428986_buildTypeEnumDecl(_self_, _130342_tokens), &__jule_any_type18);;
		};
	};
	return jule::Any(_1bd429514_buildEnumDecl(_self_, _130342_tokens), &__jule_any_type17);;
}



inline jule::Ptr<_1bc5b586b_FieldDecl> _1bd429b96_buildField(jule::Ptr<_1bd41e7d4_parser> _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _131234_tokens) {
	jule::Ptr<_1bc5b586b_FieldDecl> _131313_f = jule::new_ptr<_1bc5b586b_FieldDecl>();;
	(*(_131313_f))._field_Mutable=((*(_131234_tokens[0LL]))._field_Id == static_cast<jule::U64>(32LLU));
	if ((*(_131313_f))._field_Mutable) {
		if ((_131234_tokens.len() == 1LL)) {
			_1bd420285_pushErr(_self_.ptr(), _131234_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_131234_tokens).mut_slice(1LL);;
	};
	(*(_131313_f))._field_Token=_131234_tokens[0LL];
	if (((*((*(_131313_f))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1bd420285_pushErr(_self_.ptr(), (*(_131313_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1bd4205e8_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*(_131313_f))._field_Ident=(*((*(_131313_f))._field_Token))._field_Kind;
	if ((_131234_tokens.len() == 1LL)) {
		_1bd420285_pushErr(_self_.ptr(), _131234_tokens[0LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if (((_131234_tokens.len() < 3LL) || ((*(_131234_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU)))) {
		_1bd420285_pushErr(_self_.ptr(), _131234_tokens[1LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_131234_tokens).mut_slice(2LL);;
	jule::I64 _134113_i = 0LL;;
	({
		__jule_tuple_x_1bc59563c_TypeDecl__jule_tuple_bool __jule_assign_result = _1bd421d8b_buildType(_self_, &(_131234_tokens), (&(_134113_i)), true);
		(*(_131313_f))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_134113_i < _131234_tokens.len())) {
		jule::Ptr<_1bc583a9d_Token> _134413_token = _131234_tokens[_134113_i];;
		if (((*(_134413_token))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1bd420285_pushErr(_self_.ptr(), _131234_tokens[_134113_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_134113_i)++;
		if ((_134113_i >= _131234_tokens.len())) {
			_1bd420285_pushErr(_self_.ptr(), _134413_token, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_131234_tokens).mut_slice(_134113_i);;
		(*(_131313_f))._field_Default=_1bd420939_buildExpr(_self_, &(_131234_tokens));
	};
	(*(_131313_f))._field_Public=_1bc781372_IsPub((*(_131313_f))._field_Ident);
	return _131313_f;;
}



inline jule::Slice<jule::Ptr<_1bc5b586b_FieldDecl>> _1bd429ed7_buildStructDeclFields(jule::Ptr<_1bd41e7d4_parser> _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _136145_tokens) {
	jule::Slice<jule::Ptr<_1bc5b586b_FieldDecl>> _136217_fields = nullptr;;
	jule::Slice<jule::Ptr<_1bd400b7d_stmt>> _136313_stmts = _1bd401035_splitStmts(&(_136145_tokens));;
	{
		auto expr = &(_136313_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c20d06b1:;
		if (it != expr_end) {
			jule::Ptr<_1bd400b7d_stmt> _136421_stmt = *it;
			{
				_136145_tokens=(*(_136421_stmt))._field_tokens;
				jule::Ptr<_1bc5b586b_FieldDecl> _136617_f = _1bd429b96_buildField(_self_, _136145_tokens);;
				{ jule::Slice<jule::Ptr<_1bc5b586b_FieldDecl>> &__jule_push_dest = _136217_fields; __jule_push_dest.push(_136617_f); };
			}
			_iter_next_1c20d06b1:;
			++it;
			goto _iter_begin_1c20d06b1;
		}
		_iter_end_1c20d06b1:;
	};
	return _136217_fields;;
}



inline jule::Ptr<_1bc5b6262_StructDecl> _1bd42a328_buildStructDecl(jule::Ptr<_1bd41e7d4_parser> _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _137240_tokens) {
	if (((*(_137240_tokens)).len() < 3LL)) {
		_1bd420285_pushErr(_self_.ptr(), (*(_137240_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _137813_i = 1LL;;
	jule::Ptr<_1bc5b6262_StructDecl> _137913_s = jule::new_ptr<_1bc5b6262_StructDecl>(_1bc5b6262_StructDecl{._field_Token=(*(_137240_tokens))[_137813_i], });;
	if (((*((*(_137913_s))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1bd420285_pushErr(_self_.ptr(), (*(_137913_s))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1bd4205e8_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_137813_i)++;
	if ((_137813_i >= (*(_137240_tokens)).len())) {
		_1bd420285_pushErr(_self_.ptr(), (*(_137240_tokens))[_137813_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return _137913_s;;
	};
	(*(_137913_s))._field_Ident=(*((*(_137913_s))._field_Token))._field_Kind;
	jule::Ptr<_1bc583a9d_Token> _13939_errorToken = (*(_137240_tokens))[_137813_i];;
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _139413_genericsTokens = _1bd41ce86_range(&(_137813_i), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _137240_tokens);;
	if ((_139413_genericsTokens != nullptr)) {
		(*(_137913_s))._field_Generics=_1bd42384e_buildGenerics(_self_, &(_139413_genericsTokens), &(_13939_errorToken));
	};
	if ((_137813_i >= (*(_137240_tokens)).len())) {
		_1bd420285_pushErr(_self_.ptr(), (*(_137240_tokens))[(_137813_i - 1LL)], jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1bd4205e8_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _137913_s;;
	};
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _140413_bodyTokens = _1bd41ce86_range(&(_137813_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _137240_tokens);;
	if ((_140413_bodyTokens == nullptr)) {
		_1bd41ead1_stop(_self_.ptr());
		_1bd420285_pushErr(_self_.ptr(), (*(_137913_s))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1bd4205e8_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _137913_s;;
	};
	if ((_137813_i < (*(_137240_tokens)).len())) {
		_1bd420285_pushErr(_self_.ptr(), (*(_137240_tokens))[_137813_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_137913_s))._field_Public=_1bc781372_IsPub((*(_137913_s))._field_Ident);
	(*(_137913_s))._field_Fields=_1bd429ed7_buildStructDeclFields(_self_, _140413_bodyTokens);
	(*(_137913_s))._field_End=(*(_137240_tokens))[(_137813_i - 1LL)];
	return _137913_s;;
}



inline void _1bd42a5d1_checkMethodReceiver(_1bd41e7d4_parser* _self_, jule::Ptr<_1bc5ac159_FnDecl>* _142039_f) {
	if ((*((*(_142039_f))))._field_Statically) {
		if ((((*((*(_142039_f))))._field_Params.len() > 0LL) && _1bc5ab07b_IsSelf((*((*(_142039_f))))._field_Params[0LL].ptr()))) {
			_1bd420285_pushErr(_self_, (*((*(_142039_f))))._field_Token, jule::Str::lit("static functions cannot have receiver parameter", 47), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*((*(_142039_f))))._field_Params.len() == 0LL)) {
		_1bd420285_pushErr(_self_, (*((*(_142039_f))))._field_Token, jule::Str::lit("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1bc5aac07_ParamDecl> _14329_param = (*((*(_142039_f))))._field_Params[0LL];;
	if ((!(_1bc5ab07b_IsSelf(_14329_param.ptr())))) {
		_1bd420285_pushErr(_self_, (*((*(_142039_f))))._field_Token, jule::Str::lit("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1bd42a944_buildTraitBody(jule::Ptr<_1bd41e7d4_parser> _self_, jule::Ptr<_1bc5b699e_TraitDecl>* _143939_t, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _143958_tokens) {
	jule::Slice<jule::Ptr<_1bd400b7d_stmt>> _144013_stmts = _1bd401035_splitStmts(&(_143958_tokens));;
	{
		auto expr = &(_144013_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c20e10b7:;
		if (it != expr_end) {
			jule::Ptr<_1bd400b7d_stmt> _144121_stmt = *it;
			{
				_143958_tokens=(*(_144121_stmt))._field_tokens;
				if ((_143958_tokens.len() == 0LL)) {
					goto _iter_next_1c20e10b7;
				};
				{
					auto &_match_expr{ (*(_143958_tokens[0LL]))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(29LLU)) {
						_case_begin_1c20e46e7:;
						{
							jule::Ptr<_1bc5ac159_FnDecl> _144821_f = _1bd4264cd_buildFn(_self_, &(_143958_tokens), true, true);;
							if ((_144821_f == nullptr)) {
								goto _match_end_1c20e23b5;
							};
							_1bd42a5d1_checkMethodReceiver(_self_.ptr(), &(_144821_f));
							if (((*(_144821_f))._field_Generics.len() > 0LL)) {
								_1bd420285_pushErr(_self_.ptr(), (*(_144821_f))._field_Token, jule::Str::lit("trait methods cannot have generics", 34), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1bc5ac159_FnDecl>> &__jule_push_dest = (*((*(_143939_t))))._field_Methods; __jule_push_dest.push(_144821_f); };
						}
					}
					else {
						_case_begin_1c20e1b89:;
						{
							jule::I64 _145821_i = 0LL;;
							jule::Ptr<_1bc59563c_TypeDecl> _145921_ti;;
							jule::Bool _145925_ok = false;;
							({
								__jule_tuple_x_1bc59563c_TypeDecl__jule_tuple_bool __jule_assign_result = _1bd421d8b_buildType(_self_, &(_143958_tokens), (&(_145821_i)), true);
								_145921_ti = __jule_assign_result.__jule_result_arg0;
								_145925_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_145925_ok))) {
								goto _match_end_1c20e23b5;
							};
							if ((_145821_i < _143958_tokens.len())) {
								_1bd420285_pushErr(_self_.ptr(), _143958_tokens[_145821_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1bc59563c_TypeDecl>> &__jule_push_dest = (*((*(_143939_t))))._field_Inherits; __jule_push_dest.push(_145921_ti); };
						}
					}
					_match_end_1c20e23b5:;
				};
			}
			_iter_next_1c20e10b7:;
			++it;
			goto _iter_begin_1c20e10b7;
		}
		_iter_end_1c20e10b7:;
	};
}



inline jule::Ptr<_1bc5b699e_TraitDecl> _1bd42ac85_buildTraitDecl(jule::Ptr<_1bd41e7d4_parser> _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _147139_tokens) {
	if (((*(_147139_tokens)).len() < 3LL)) {
		_1bd420285_pushErr(_self_.ptr(), (*(_147139_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1bc5b699e_TraitDecl> _147613_t = jule::new_ptr<_1bc5b699e_TraitDecl>(_1bc5b699e_TraitDecl{._field_Token=(*(_147139_tokens))[1LL], });;
	if (((*((*(_147613_t))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1bd420285_pushErr(_self_.ptr(), (*(_147613_t))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1bd4205e8_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*(_147613_t))._field_Ident=(*((*(_147613_t))._field_Token))._field_Kind;
	jule::I64 _148413_i = 2LL;;
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _148513_bodyTokens = _1bd41ce86_range(&(_148413_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _147139_tokens);;
	if ((_148513_bodyTokens == nullptr)) {
		_1bd41ead1_stop(_self_.ptr());
		_1bd420285_pushErr(_self_.ptr(), (*(_147613_t))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1bd4205e8_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_148413_i < (*(_147139_tokens)).len())) {
		_1bd420285_pushErr(_self_.ptr(), (*(_147139_tokens))[_148413_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_147613_t))._field_Public=_1bc781372_IsPub((*(_147613_t))._field_Ident);
	_1bd42a944_buildTraitBody(_self_, &(_147613_t), _148513_bodyTokens);
	(*(_147613_t))._field_End=(*(_147139_tokens))[(_148413_i - 1LL)];
	return _147613_t;;
}



inline jule::Ptr<_1bc5ac159_FnDecl> _1bd42b0c6_buildBindFn(jule::Ptr<_1bd41e7d4_parser> _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _150135_tokens) {
	(_150135_tokens).mut_slice(1LL);;
	jule::Ptr<_1bc5ac159_FnDecl> _150313_f = _1bd4264cd_buildFn(_self_, &(_150135_tokens), false, true);;
	if ((_150313_f != nullptr)) {
		(*(_150313_f))._field_Public=false;
		(*(_150313_f))._field_Binded=true;
	};
	return _150313_f;;
}



inline jule::Ptr<_1bc5ad314_VarDecl> _1bd42b417_buildBindVar(jule::Ptr<_1bd41e7d4_parser> _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _151136_tokens) {
	(_151136_tokens).mut_slice(1LL);;
	jule::Ptr<_1bc5ad314_VarDecl> _151313_v = _1bd423112_buildVar(_self_, _151136_tokens);;
	if ((_151313_v != nullptr)) {
		(*(_151313_v))._field_Public=false;
		(*(_151313_v))._field_Binded=true;
		if (((*(_151313_v))._field_Expr != nullptr)) {
			_1bd420285_pushErr(_self_.ptr(), (*(_151313_v))._field_Token, jule::Str::lit("binded variables cannot have expression", 39), jule::Slice<jule::Any>());
		};
	};
	return _151313_v;;
}



inline jule::Ptr<_1bc5b6262_StructDecl> _1bd42b758_buildBindStruct(jule::Ptr<_1bd41e7d4_parser> _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _152439_tokens) {
	(_152439_tokens).mut_slice(1LL);;
	jule::Ptr<_1bc5b6262_StructDecl> _152613_s = _1bd42a328_buildStructDecl(_self_, &(_152439_tokens));;
	if ((_152613_s != nullptr)) {
		(*(_152613_s))._field_Public=false;
		{
			auto expr = &((*(_152613_s))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c2103948:;
			if (it != expr_end) {
				jule::Ptr<_1bc5b586b_FieldDecl> _152925_f = *it;
				{
					(*(_152925_f))._field_Public=true;
				}
				_iter_next_1c2103948:;
				++it;
				goto _iter_begin_1c2103948;
			}
			_iter_end_1c2103948:;
		};
		(*(_152613_s))._field_Binded=true;
	};
	return _152613_s;;
}



inline jule::Ptr<_1bc5b1eb6_TypeAliasDecl> _1bd42ba99_buildBindTypeAlias(jule::Ptr<_1bd41e7d4_parser> _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _153842_tokens) {
	(_153842_tokens).mut_slice(1LL);;
	jule::Ptr<_1bc5b1eb6_TypeAliasDecl> _154013_t = _1bd4221cc_buildTypeAliasDecl(_self_, &(_153842_tokens));;
	if ((_154013_t != nullptr)) {
		(*(_154013_t))._field_Public=false;
		(*(_154013_t))._field_Binded=true;
	};
	return _154013_t;;
}



inline jule::Ptr<_1bc5b35a0_UseDecl> _1bd42bdda_buildBindUse(jule::Ptr<_1bd41e7d4_parser> _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _154836_tokens) {
	if ((_154836_tokens.len() == 1LL)) {
		_1bd420285_pushErr(_self_.ptr(), _154836_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_154836_tokens).mut_slice(1LL);;
	;
	return _1bd427e08_buildUseDecl(_self_.ptr(), _154836_tokens, true);;
}



inline jule::Any _1bd42c22b_buildBind(jule::Ptr<_1bd41e7d4_parser> _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _155934_tokens) {
	jule::Ptr<_1bc583a9d_Token> _156013_token = (*(_155934_tokens))[0LL];;
	if (((*(_155934_tokens)).len() == 1LL)) {
		_1bd420285_pushErr(_self_.ptr(), _156013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_156013_token=(*(_155934_tokens))[1LL];
	{
		auto &_match_expr{ (*(_156013_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1c2109bc4:;
			{
				return jule::Any(_1bd42b0c6_buildBindFn(_self_, (*(_155934_tokens))), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1c210892b:;
			{
				return jule::Any(_1bd42b417_buildBindVar(_self_, (*(_155934_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1c210961e:;
			{
				return jule::Any(_1bd42b758_buildBindStruct(_self_, (*(_155934_tokens))), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1c2109685:;
			{
				return jule::Any(_1bd42ba99_buildBindTypeAlias(_self_, (*(_155934_tokens))), &__jule_any_type12);;
			}
		}
		else {
			_case_begin_1c21095a8:;
			{
				_1bd420285_pushErr(_self_.ptr(), _156013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c2109553:;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc5ac159_FnDecl> _1bd42c56c_getMethod(jule::Ptr<_1bd41e7d4_parser> _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _158334_tokens) {
	jule::I64 _158413_i = 0LL;;
	jule::Ptr<_1bc583a9d_Token> _158513_token = (*(_158334_tokens))[_158413_i];;
	if (((*(_158513_token))._field_Id == static_cast<jule::U64>(34LLU))) {
		if (((_158413_i + 1LL) >= (*(_158334_tokens)).len())) {
			_1bd420285_pushErr(_self_.ptr(), _158513_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_158413_i)++;
		_158513_token=(*(_158334_tokens))[_158413_i];
	};
	if (((*(_158513_token))._field_Id == static_cast<jule::U64>(31LLU))) {
		if (((_158413_i + 1LL) >= (*(_158334_tokens)).len())) {
			_1bd420285_pushErr(_self_.ptr(), _158513_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_158413_i)++;
		_158513_token=(*(_158334_tokens))[_158413_i];
	};
	if (((*(_158513_token))._field_Id != static_cast<jule::U64>(29LLU))) {
		_1bd420285_pushErr(_self_.ptr(), _158513_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1bd4264cd_buildFn(_self_, _158334_tokens, true, false);;
}



inline void _1bd42c8d0_parseImplBody(jule::Ptr<_1bd41e7d4_parser> _self_, jule::Ptr<_1bc5b710e_Impl>* _161238_ipl, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _161255_tokens) {
	jule::Slice<jule::Ptr<_1bd400b7d_stmt>> _161313_stmts = _1bd401035_splitStmts(_161255_tokens);;
	{
		auto expr = &(_161313_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2111e95:;
		if (it != expr_end) {
			jule::Ptr<_1bd400b7d_stmt> _161421_stmt = *it;
			{
				(*(_161255_tokens))=(*(_161421_stmt))._field_tokens;
				jule::Ptr<_1bc583a9d_Token> _161617_token = (*(_161255_tokens))[0LL];;
				{
					auto &_match_expr{ (*(_161617_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1c2801299:;
						{
							_1bd421033_pushDirective(_self_.ptr(), _1bd420c7a_buildDirective(_self_.ptr(), (*(_161255_tokens))));
							goto _iter_next_1c2111e95;
						}
					}
					_match_end_1c2801750:;
				};
				{
					auto &_match_expr{ (*(_161617_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(6LLU)) {
						_case_begin_1c2802ba2:;
						{
							jule::Ptr<_1bc5ad314_VarDecl> _162521_v = _1bd423112_buildVar(_self_, (*(_161255_tokens)));;
							if ((_162521_v != nullptr)) {
								{ jule::Slice<jule::Ptr<_1bc5ad314_VarDecl>> &__jule_push_dest = (*((*(_161238_ipl))))._field_Statics; __jule_push_dest.push(_162521_v); };
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1c2801882:;
						{
							jule::Ptr<_1bc5ac159_FnDecl> _163221_f = _1bd42c56c_getMethod(_self_, _161255_tokens);;
							if ((_163221_f != nullptr)) {
								_1bd42a5d1_checkMethodReceiver(_self_.ptr(), &(_163221_f));
								_1bd42d31a_applyFnMeta(_self_.ptr(), &(_163221_f));
								{ jule::Slice<jule::Ptr<_1bc5ac159_FnDecl>> &__jule_push_dest = (*((*(_161238_ipl))))._field_Methods; __jule_push_dest.push(_163221_f); };
							};
						}
					}
					else {
						_case_begin_1c2801cc2:;
						{
							_1bd420285_pushErr(_self_.ptr(), _161617_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							goto _iter_next_1c2111e95;
						}
					}
					_match_end_1c2801c6c:;
				};
			}
			_iter_next_1c2111e95:;
			++it;
			goto _iter_begin_1c2111e95;
		}
		_iter_end_1c2111e95:;
	};
}



inline jule::Ptr<_1bc5b710e_Impl> _1bd42cc21_buildImpl(jule::Ptr<_1bd41e7d4_parser> _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _164533_tokens) {
	jule::Ptr<_1bc583a9d_Token> _164613_token = _164533_tokens[0LL];;
	if ((_164533_tokens.len() < 2LL)) {
		_1bd420285_pushErr(_self_.ptr(), _164613_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _165213_i = 1LL;;
	jule::Ptr<_1bc59563c_TypeDecl> _165413_base;;
	jule::Bool _165423_ok = false;;
	({
		__jule_tuple_x_1bc59563c_TypeDecl__jule_tuple_bool __jule_assign_result = _1bd421d8b_buildType(_self_, &(_164533_tokens), (&(_165213_i)), true);
		_165413_base = __jule_assign_result.__jule_result_arg0;
		_165423_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_165423_ok))) {
		return nullptr;;
	};
	if ((_165213_i >= _164533_tokens.len())) {
		_1bd420285_pushErr(_self_.ptr(), _164613_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1bc5b710e_Impl> _166313_ipl = jule::new_ptr<_1bc5b710e_Impl>(_1bc5b710e_Impl{._field_Base=_165413_base, });;
	_164613_token=_164533_tokens[_165213_i];
	if (((*(_164613_token))._field_Id != static_cast<jule::U64>(9LLU))) {
		if (((*(_164613_token))._field_Id == static_cast<jule::U64>(72LLU))) {
			std::swap((*(_166313_ipl))._field_Base, (*(_166313_ipl))._field_Dest);
			goto _julec_label_1c280ebae;
		};
		_1bd41ead1_stop(_self_.ptr());
		_1bd420285_pushErr(_self_.ptr(), _164613_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1bd4205e8_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_165213_i)++;
	if ((_165213_i >= _164533_tokens.len())) {
		_1bd41ead1_stop(_self_.ptr());
		_1bd420285_pushErr(_self_.ptr(), _164613_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1bd4205e8_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1bc59563c_TypeDecl__jule_tuple_bool __jule_assign_result = _1bd421d8b_buildType(_self_, &(_164533_tokens), (&(_165213_i)), true);
		(*(_166313_ipl))._field_Dest = __jule_assign_result.__jule_result_arg0;
		_165423_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_165423_ok))) {
		return nullptr;;
	};
	if ((_165213_i >= _164533_tokens.len())) {
		_1bd41ead1_stop(_self_.ptr());
		_1bd420285_pushErr(_self_.ptr(), _164613_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1bd4205e8_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1c280ebae:;
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _170113_bodyTokens = _1bd41ce86_range(&(_165213_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_164533_tokens));;
	if ((_170113_bodyTokens == nullptr)) {
		_1bd41ead1_stop(_self_.ptr());
		_1bd420285_pushErr(_self_.ptr(), _164613_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1bd4205e8_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_165213_i < _164533_tokens.len())) {
		_1bd420285_pushErr(_self_.ptr(), _164533_tokens[_165213_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_166313_ipl))._field_End=_164533_tokens[(_165213_i - 1LL)];
	_1bd42c8d0_parseImplBody(_self_, &(_166313_ipl), &(_170113_bodyTokens));
	return _166313_ipl;;
}



inline jule::Any _1bd42d062_buildNodeData(jule::Ptr<_1bd41e7d4_parser> _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _171638_tokens) {
	jule::Ptr<_1bc583a9d_Token> _171713_token = (*(_171638_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_171713_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1c2814279:;
			{
				jule::Ptr<_1bc5ac159_FnDecl> _172117_f = _1bd4264cd_buildFn(_self_, _171638_tokens, false, false);;
				if ((_172117_f != nullptr)) {
					(*(_172117_f))._field_Global=true;
				};
				return jule::Any(_172117_f, &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1c281380b:;
			{
				return jule::Any(_1bd423112_buildVar(_self_, (*(_171638_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1c2814642:;
			{
				return jule::Any(_1bd4221cc_buildTypeAliasDecl(_self_, _171638_tokens), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1c2813bc4:;
			{
				return _1bd429855_buildNodeEnumDecl(_self_, _171638_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1c2813c3a:;
			{
				return jule::Any(_1bd42a328_buildStructDecl(_self_, _171638_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1c2813ca1:;
			{
				return jule::Any(_1bd42ac85_buildTraitDecl(_self_, _171638_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1c2813d17:;
			{
				return jule::Any(_1bd42cc21_buildImpl(_self_, (*(_171638_tokens))), &__jule_any_type11);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1c2814741:;
			{
				return _1bd42c22b_buildBind(_self_, _171638_tokens);;
			}
		}
		else {
			_case_begin_1c2813b5d:;
			{
				_1bd420285_pushErr(_self_.ptr(), _171713_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c2813b08:;
	};
}



inline void _1bd42d31a_applyFnMeta(_1bd41e7d4_parser* _self_, jule::Ptr<_1bc5ac159_FnDecl>* _174935_f) {
	(*((*(_174935_f))))._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1bd42d5c3_applyMeta(_1bd41e7d4_parser* _self_, _1bc59463b_Node* _175433_node) {
	{
		auto &_match_expr{ (*(_175433_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1c2819ed8:;
			{
				jule::Ptr<_1bc5ad314_VarDecl> _175717_v = (*(_175433_node))._field_Data.cast_ptr<_1bc5ad314_VarDecl>(&__jule_any_type16);;
				if ((_175717_v == nullptr)) {
					return;;
				};
				(*(_175717_v))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1c281a060:;
			{
				jule::Ptr<_1bc5ac159_FnDecl> _176417_f = (*(_175433_node))._field_Data.cast_ptr<_1bc5ac159_FnDecl>(&__jule_any_type14);;
				if ((_176417_f == nullptr)) {
					return;;
				};
				_1bd42d31a_applyFnMeta(_self_, &(_176417_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1c281a0d7:;
			{
				jule::Ptr<_1bc5b6262_StructDecl> _177017_sd = (*(_175433_node))._field_Data.cast_ptr<_1bc5b6262_StructDecl>(&__jule_any_type13);;
				if ((_177017_sd == nullptr)) {
					return;;
				};
				(*(_177017_sd))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_1c2819e61:;
	};
}



inline void _1bd42d87b_pushUseDecl(jule::Ptr<_1bd41e7d4_parser> _self_, jule::Ptr<_1bc5b35a0_UseDecl>* _177936_decl) {
	{ jule::Slice<jule::Ptr<_1bc5b35a0_UseDecl>> &__jule_push_dest = (*((*(_self_))._field_ast))._field_UseDecls; __jule_push_dest.push((*(_177936_decl))); };
	if (((*((*(_self_))._field_ast))._field_Nodes.len() > 0LL)) {
		_1bd420285_pushErr(_self_.ptr(), (*((*(_177936_decl))))._field_Token, jule::Str::lit("use declarations must declared top of source code", 49), jule::Slice<jule::Any>());
		_1bd4205e8_pushSuggestion(_self_.ptr(), jule::Str::lit("move this use declaration to top of source file", 47), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1bd42dbbc_pushMetaNodes(jule::Ptr<_1bd41e7d4_parser> _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _178738_tokens) {
	{
		auto &_match_expr{ (*((*(_178738_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1c28212ca:;
			{
				;
				jule::Ptr<_1bc5b35a0_UseDecl> _179117_decl = _1bd427e08_buildUseDecl(_self_.ptr(), (*(_178738_tokens)), false);;
				_1bd42d87b_pushUseDecl(_self_, &(_179117_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1c2821352:;
			{
				if ((((*(_178738_tokens)).len() > 1LL) && ((*((*(_178738_tokens))[1LL]))._field_Id == static_cast<jule::U64>(16LLU)))) {
					jule::Ptr<_1bc5b35a0_UseDecl> _179621_decl = _1bd42bdda_buildBindUse(_self_, (*(_178738_tokens)));;
					_1bd42d87b_pushUseDecl(_self_, &(_179621_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1c28213c9:;
			{
				_1bd421033_pushDirective(_self_.ptr(), _1bd420c7a_buildDirective(_self_.ptr(), (*(_178738_tokens))));
				return true;;
			}
		}
		_match_end_1c28211a9:;
	};
	return false;;
}



inline _1bc59463b_Node _1bd42e00d_parseNode(jule::Ptr<_1bd41e7d4_parser> _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _180734_st) {
	_1bc59463b_Node _180813_node = _1bc59463b_Node{._field_Token=(*(_180734_st))[0LL], };;
	if (_1bd42dbbc_pushMetaNodes(_self_, _180734_st)) {
		return _180813_node;;
	};
	jule::Any _181613_data = _1bd42d062_buildNodeData(_self_, _180734_st);;
	if ((_181613_data == nullptr)) {
		return _180813_node;;
	};
	_180813_node._field_Data=_181613_data;
	_1bd42d5c3_applyMeta(_self_.ptr(), &(_180813_node));
	if (((*(_self_))._field_directives.len() != 0LL)) {
		_1bd420285_pushErr(_self_.ptr(), (*((*(_self_))._field_directives[0LL]))._field_Tag, jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
	(*(_self_))._field_directives=nullptr;
	return _180813_node;;
}



inline void _1bd42e2b6_appendNode(jule::Ptr<_1bd41e7d4_parser> _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _183135_st) {
	if (((*(_183135_st)).len() == 0LL)) {
		return;;
	};
	_1bc59463b_Node _183513_node = _1bd42e00d_parseNode(_self_, _183135_st);;
	if (((_183513_node._field_Data == nullptr) || _1bd41ed67_stopped(_self_.ptr()))) {
		return;;
	};
	{ jule::Slice<_1bc59463b_Node> &__jule_push_dest = (*((*(_self_))._field_ast))._field_Nodes; __jule_push_dest.push(_183513_node); };
}



inline void _1bd42e78e_removeRange(_1bd41e7d4_parser* _self_, jule::I64 _184230_i, jule::U64 _184238_id, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _184252_tokens, jule::Slice<jule::I64>* _184275_ranges) {
	jule::U64 _18439_close = _1bd41d9c0_getCloseOfBrace(_184238_id);;
	for (; (_184230_i >= 0LL); (_184230_i)--) {
		{
			jule::Ptr<_1bc583a9d_Token> _184513_tok = (*(_184252_tokens))[(*(_184275_ranges))[_184230_i]];;
			if (((*(_184513_tok))._field_Id != _18439_close)) {
				goto _iter_next_1c282b2d5;
			};
			(*(_184275_ranges))=jule::append((*(_184275_ranges)).slice(0LL, _184230_i),(*(_184275_ranges)).slice((_184230_i + 1LL)));
			goto _iter_end_1c282b2d5;
		}
	_iter_next_1c282b2d5:;
	}
	_iter_end_1c282b2d5:;;
}



inline void _1bd42ebac_pushWrongOrderCloseErr(_1bd41e7d4_parser* _self_, jule::Ptr<_1bc583a9d_Token>* _185442_t, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _185454_tokens, jule::Slice<jule::I64>* _185473_ranges) {
	{
		auto &_match_expr{ (*((*(_185454_tokens))[(*(_185473_ranges))[((*(_185473_ranges)).len() - 1LL)]]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(74LLU)) {
			_case_begin_1c282d815:;
			{
				_1bd420285_pushErr(_self_, (*(_185442_t)), jule::Str::lit("was expected parentheses close", 30), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1c282d88c:;
			{
				_1bd420285_pushErr(_self_, (*(_185442_t)), jule::Str::lit("was expected brace close", 24), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1c282d914:;
			{
				_1bd420285_pushErr(_self_, (*(_185442_t)), jule::Str::lit("was expected bracket close", 26), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c282d6e4:;
	};
}



inline void _1bd430185_pushRangeClose(_1bd41e7d4_parser* _self_, jule::Ptr<_1bc583a9d_Token> _186533_t, jule::U64 _186544_left, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _186560_tokens, jule::Slice<jule::I64>* _186583_ranges) {
	jule::I64 _18669_n = (*(_186583_ranges)).len();;
	if ((_18669_n == 0LL)) {
		{
			auto &_match_expr{ (*(_186533_t))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(77LLU)) {
				_case_begin_1c283142d:;
				{
					_1bd420285_pushErr(_self_, _186533_t, jule::Str::lit("extra closed brackets", 21), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(73LLU)) {
				_case_begin_1c28314a5:;
				{
					_1bd420285_pushErr(_self_, _186533_t, jule::Str::lit("extra closed braces", 19), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(75LLU)) {
				_case_begin_1c283152c:;
				{
					_1bd420285_pushErr(_self_, _186533_t, jule::Str::lit("extra closed parentheses", 24), jule::Slice<jule::Any>());
				}
			}
			_match_end_1c2831351:;
		};
		return;;
	} else if (((*((*(_186560_tokens))[(*(_186583_ranges))[(_18669_n - 1LL)]]))._field_Id != _186544_left)) {
		_1bd42ebac_pushWrongOrderCloseErr(_self_, &(_186533_t), _186560_tokens, _186583_ranges);
	};
	_1bd42e78e_removeRange(_self_, static_cast<jule::I64>((_18669_n - 1LL)), (*(_186533_t))._field_Id, _186560_tokens, _186583_ranges);
}



inline void _1bd43043d_checkRanges(_1bd41e7d4_parser* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _188331_tokens) {
	jule::Slice<jule::I64> _188417_ranges = nullptr;;
	{
		auto expr = _188331_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2834574:;
		if (it != expr_end) {
			jule::I64 _188613_i = it - expr->begin();
			jule::Ptr<_1bc583a9d_Token> *_188616_token = it;
			{
				{
					auto &_match_expr{ (*((*(_188616_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1c2835388:;
						{
							{ jule::Slice<jule::I64> &__jule_push_dest = _188417_ranges; __jule_push_dest.push(_188613_i); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1c2835410:;
						{
							_1bd430185_pushRangeClose(_self_, (*(_188616_token)), static_cast<jule::U64>(74LLU), _188331_tokens, &(_188417_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU)) {
						_case_begin_1c2835487:;
						{
							_1bd430185_pushRangeClose(_self_, (*(_188616_token)), static_cast<jule::U64>(72LLU), _188331_tokens, &(_188417_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1c283550e:;
						{
							_1bd430185_pushRangeClose(_self_, (*(_188616_token)), static_cast<jule::U64>(76LLU), _188331_tokens, &(_188417_ranges));
						}
					}
					_match_end_1c283529a:;
				};
			}
			_iter_next_1c2834574:;
			++it;
			_188613_i++;
			goto _iter_begin_1c2834574;
		}
		_iter_end_1c2834574:;
	};
	{
		auto expr = &(_188417_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c283450d:;
		if (it != expr_end) {
			jule::I64 _190116_i = *it;
			{
				jule::Ptr<_1bc583a9d_Token> _190213_token = (*(_188331_tokens))[_190116_i];;
				{
					auto &_match_expr{ (*(_190213_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1c2838028:;
						{
							_1bd420285_pushErr(_self_, _190213_token, jule::Str::lit("parentheses waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1c28380a0:;
						{
							_1bd420285_pushErr(_self_, _190213_token, jule::Str::lit("brace waiting to close", 22), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1c2838127:;
						{
							_1bd420285_pushErr(_self_, _190213_token, jule::Str::lit("bracket are waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					_match_end_1c2837ea1:;
				};
			}
			_iter_next_1c283450d:;
			++it;
			goto _iter_begin_1c283450d;
		}
		_iter_end_1c283450d:;
	};
}



inline void _1bd4306e6_parse(jule::Ptr<_1bd41e7d4_parser> _self_, jule::Ptr<_1bc589367_File>* _191430_f) {
	(*(_self_))._field_ast=jule::new_ptr<_1bc59378e_Ast>(_1bc59378e_Ast{._field_File=(*(_191430_f)), });
	(*(_self_))._field_ep=jule::new_ptr<_1bd40de44_exprBuilder>(_1bd40de44_exprBuilder{._field_p=_self_});
	_1bd43043d_checkRanges(_self_.ptr(), &((*((*(_191430_f))))._field_Tokens));
	if (((*(_self_))._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1bd400b7d_stmt>> _192713_stmts = _1bd401035_splitStmts(&((*((*(_191430_f))))._field_Tokens));;
	jule::I64 _193013_i = 0LL;;
	for (; (_193013_i < _192713_stmts.len()); (_193013_i)++) {
		{
			jule::Ptr<_1bd400b7d_stmt> _193217_stmt = _192713_stmts[_193013_i];;
			if (((*(_193217_stmt))._field_tokens.len() < 2LL)) {
				return;;
			};
			if (((*((*(_193217_stmt))._field_tokens[0LL]))._field_Id != static_cast<jule::U64>(35LLU))) {
				goto _iter_end_1c283b977;
			};
			if ((!(_1ed6c960d_IsTopDirective((*((*(_193217_stmt))._field_tokens[1LL]))._field_Kind)))) {
				goto _iter_end_1c283b977;
			};
			{ jule::Slice<jule::Ptr<_1bc594a59_Directive>> &__jule_push_dest = (*((*(_self_))._field_ast))._field_TopDirectives; __jule_push_dest.push(_1bd420c7a_buildDirective(_self_.ptr(), (*(_193217_stmt))._field_tokens)); };
		}
	_iter_next_1c283b977:;
	}
	_iter_end_1c283b977:;;
	(*(_self_))._field_errors=nullptr;
	for (; (_193013_i < _192713_stmts.len()); (_193013_i)++) {
		{
			jule::Ptr<_1bd400b7d_stmt> _194917_stmt = _192713_stmts[_193013_i];;
			_1bd42e2b6_appendNode(_self_, &((*(_194917_stmt))._field_tokens));
			if (_1bd41ed67_stopped(_self_.ptr())) {
				goto _iter_end_1c283e42a;
			};
		}
	_iter_next_1c283e42a:;
	}
	_iter_end_1c283e42a:;;
	if (((*(_self_))._field_directives.len() != 0LL)) {
		_1bd420285_pushErr(_self_.ptr(), (*((*(_self_))._field_directives[0LL]))._field_Tag, jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1bd41e7d4_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ep:" << _Src._field_ep;
	_Stream << "}";
	return _Stream;
}



inline void _1bd432055_pushErr(_1bd4319b1_typeBuilder* _self_, jule::Ptr<_1bc583a9d_Token> _4126_token, jule::Str _4141_fmt) {
	if ((*(_self_))._field_err) {
		_1bd420285_pushErr((*(_self_))._field_p.ptr(), _4126_token, _4141_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1bd4323b8_pushSuggestion(_1bd4319b1_typeBuilder* _self_, jule::Str _4833_fmt, jule::Slice<jule::Any> _4846_args) {
	if ((*(_self_))._field_err) {
		_1bd4205e8_pushSuggestion((*(_self_))._field_p.ptr(), _4833_fmt, _4846_args);
	};
}



inline jule::Ptr<_1bc59563c_TypeDecl> _1bd43264e_buildNamespace(_1bd4319b1_typeBuilder* _self_) {
	jule::Ptr<_1bc59563c_TypeDecl> _5513_t = jule::new_ptr<_1bc59563c_TypeDecl>(_1bc59563c_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], });;
	jule::Ptr<_1bc5963da_NamespaceTypeDecl> _5913_nst = jule::new_ptr<_1bc5963da_NamespaceTypeDecl>();;
	jule::I64 _6013_n = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1bc583a9d_Token> _6217_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if (((_6013_n & 1LL) == 0LL)) {
				if (((*(_6217_token))._field_Id != static_cast<jule::U64>(1LLU))) {
					_1bd432055_pushErr(_self_, _6217_token, jule::Str::lit("invalid syntax", 14));
					_1bd4323b8_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1bc583a9d_Token>> &__jule_push_dest = (*(_5913_nst))._field_Idents; __jule_push_dest.push(_6217_token); };
			} else if (((*(_6217_token))._field_Id != static_cast<jule::U64>(19LLU))) {
				goto _iter_end_1c284580a;
			};
			(_6013_n)++;
		}
	_iter_next_1c284580a:;
	}
	_iter_end_1c284580a:;;
	(*(_5913_nst))._field_Idents=(*(_5913_nst))._field_Idents.slice(0LL, ((*(_5913_nst))._field_Idents.len() - 1LL));
	((*((*(_self_))._field_i)))--;
	(*(_5913_nst))._field_Kind=_1bd432e02_buildIdent(_self_);
	(*(_5513_t))._field_Kind=jule::Any(_5913_nst, &__jule_any_type90);
	return _5513_t;;
}



inline jule::Slice<jule::Ptr<_1bc59563c_TypeDecl>> _1bd4328d5_buildGenerics(_1bd4319b1_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_1bc583a9d_Token> _889_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((*(_889_token))._field_Id != static_cast<jule::U64>(76LLU))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>> _9313_parts = _1bd432b6b_identGenerics(_self_);;
	if ((_9313_parts.len() == 0LL)) {
		_1bd432055_pushErr(_self_, _889_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1bc59563c_TypeDecl>> _9913_types = jule::Slice<jule::Ptr<_1bc59563c_TypeDecl>>::alloc(0LL, _9313_parts.len());;
	{
		auto expr = &(_9313_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c284c38e:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1bc583a9d_Token>> _10021_part = *it;
			{
				jule::I64 _10117_j = 0LL;;
				jule::Ptr<_1bc59563c_TypeDecl> _10217_t;;
				({
					__jule_tuple_x_1bc59563c_TypeDecl__jule_tuple_bool __jule_assign_result = _1bd421d8b_buildType((*(_self_))._field_p, &(_10021_part), (&(_10117_j)), true);
					_10217_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_10117_j < _10021_part.len())) {
					_1bd432055_pushErr(_self_, _10021_part[_10117_j], jule::Str::lit("invalid syntax", 14));
				};
				{ jule::Slice<jule::Ptr<_1bc59563c_TypeDecl>> &__jule_push_dest = _9913_types; __jule_push_dest.push(_10217_t); };
			}
			_iter_next_1c284c38e:;
			++it;
			goto _iter_begin_1c284c38e;
		}
		_iter_end_1c284c38e:;
	};
	return _9913_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>> _1bd432b6b_identGenerics(_1bd4319b1_typeBuilder* _self_) {
	jule::I64 _1129_first = (*((*(_self_))._field_i));;
	jule::I64 _11313_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1bc583a9d_Token> _11513_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			{
				auto &_match_expr{ (*(_11513_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(76LLU)) {
					_case_begin_1c2851904:;
					{
						(_11313_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(77LLU)) {
					_case_begin_1c285197b:;
					{
						(_11313_rangeN)--;
					}
				}
				_match_end_1c285188d:;
			};
			if ((_11313_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_1c2850914;
			};
		}
	_iter_next_1c2850914:;
	}
	_iter_end_1c2850914:;;
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _12713_tokens = (*(_self_))._field_tokens.slice((_1129_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>> _12813_parts;;
	jule::Slice<_1ed6c7892_Log> _12820_errors;;
	({
		__jule_tuple_ssx_1bc583a9d_Token__jule_tuple_s_1ed6c7892_Log __jule_assign_result = _1bd41d706_parts(&(_12713_tokens), static_cast<jule::U64>(5LLU), true);
		_12813_parts = __jule_assign_result.__jule_result_arg0;
		_12820_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		((*((*(_self_))._field_p))._field_errors).append(_12820_errors);;
	};
	return _12813_parts;;
}



inline jule::Ptr<_1bc59563c_TypeDecl> _1bd432e02_buildIdent(_1bd4319b1_typeBuilder* _self_) {
	jule::Bool _13613_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_13613_next && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return _1bd43264e_buildNamespace(_self_);;
	};
	jule::Ptr<_1bc583a9d_Token> _14013_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1bc595c47_IdentTypeDecl> _14113_it = jule::new_ptr<_1bc595c47_IdentTypeDecl>(_1bc595c47_IdentTypeDecl{._field_Token=_14013_token, ._field_Ident=(*(_14013_token))._field_Kind, ._field_Binded=false, });;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1bc59563c_TypeDecl> _14713_itd = jule::new_ptr<_1bc59563c_TypeDecl>(_1bc59563c_TypeDecl{._field_Token=_14013_token, ._field_Kind=jule::Any(_14113_it, &__jule_any_type20)});;
	if (((!(_13613_next)) || ((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		(*(_14113_it))._field_Generics=_1bd4328d5_buildGenerics(_self_);
		return _14713_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1bd432055_pushErr(_self_, _14013_token, jule::Str::lit("invalid syntax", 14));
		return _14713_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1bd432055_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("invalid syntax", 14));
		return _14713_itd;;
	};
	jule::Ptr<_1bc596044_SubIdentTypeDecl> _16413_sit = jule::new_ptr<_1bc596044_SubIdentTypeDecl>();;
	{ jule::Slice<jule::Ptr<_1bc595c47_IdentTypeDecl>> &__jule_push_dest = (*(_16413_sit))._field_Idents; __jule_push_dest.push(_14113_it); };
	jule::Ptr<_1bc59563c_TypeDecl> _16613_ident = _1bd432e02_buildIdent(_self_);;
	{
		auto &_match_expr{ (*(_16613_ident))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1c285c14b:;
			{
				{ jule::Slice<jule::Ptr<_1bc595c47_IdentTypeDecl>> &__jule_push_dest = (*(_16413_sit))._field_Idents; __jule_push_dest.push((*(_16613_ident))._field_Kind.cast_ptr<_1bc595c47_IdentTypeDecl>(&__jule_any_type20)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1c285c1c3:;
			{
				((*(_16413_sit))._field_Idents).append((*((*(_16613_ident))._field_Kind.cast_ptr<_1bc596044_SubIdentTypeDecl>(&__jule_any_type86)))._field_Idents);;
			}
		}
		_match_end_1c285c0d5:;
	};
	return jule::new_ptr<_1bc59563c_TypeDecl>(_1bc59563c_TypeDecl{._field_Token=_14013_token, ._field_Kind=jule::Any(_16413_sit, &__jule_any_type86)});;
}



inline jule::Ptr<_1bc59563c_TypeDecl> _1bd433188_buildCppLink(_1bd4319b1_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		_1bd432055_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_1bc59563c_TypeDecl> _18513_t = _1bd432e02_buildIdent(_self_);;
	(*((*(_18513_t))._field_Kind.cast_ptr<_1bc595c47_IdentTypeDecl>(&__jule_any_type20)))._field_Binded=true;
	return _18513_t;;
}



inline jule::Ptr<_1bc59563c_TypeDecl> _1bd43341e_buildFn(_1bd4319b1_typeBuilder* _self_) {
	jule::Ptr<_1bc583a9d_Token> _19113_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1bc5ac159_FnDecl> _19213_f = _1bd426027_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_19213_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1bc5ac4bc_IsAnon(_19213_f.ptr())))) {
		_1bd432055_pushErr(_self_, (*(_19213_f))._field_Token, jule::Str::lit("invalid syntax", 14));
	};
	return jule::new_ptr<_1bc59563c_TypeDecl>(_1bc59563c_TypeDecl{._field_Token=_19113_token, ._field_Kind=jule::Any(_19213_f, &__jule_any_type14)});;
}



inline jule::Ptr<_1bc59563c_TypeDecl> _1bd4336a5_buildPtr(_1bd4319b1_typeBuilder* _self_) {
	jule::Ptr<_1bc583a9d_Token> _20613_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1bd432055_pushErr(_self_, _20613_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id == static_cast<jule::U64>(31LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_1bc59563c_TypeDecl>(_1bc59563c_TypeDecl{._field_Token=_20613_token, ._field_Kind=jule::Any(jule::new_ptr<_1bc597166_PtrTypeDecl>(_1bc597166_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type71)});;
	};
	jule::Ptr<_1bc59563c_TypeDecl> _22313_elem = _1bd43470b_step(_self_);;
	if ((_22313_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1bc59563c_TypeDecl>(_1bc59563c_TypeDecl{._field_Token=_20613_token, ._field_Kind=jule::Any(jule::new_ptr<_1bc597166_PtrTypeDecl>(_1bc597166_PtrTypeDecl{._field_Elem=_22313_elem}), &__jule_any_type71)});;
}



inline jule::Ptr<_1bc59563c_TypeDecl> _1bd43393b_buildSptr(_1bd4319b1_typeBuilder* _self_) {
	jule::Ptr<_1bc583a9d_Token> _23713_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1bd432055_pushErr(_self_, _23713_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1bc59563c_TypeDecl> _24413_elem = _1bd43470b_step(_self_);;
	if ((_24413_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1bc59563c_TypeDecl>(_1bc59563c_TypeDecl{._field_Token=_23713_token, ._field_Kind=jule::Any(jule::new_ptr<_1bc5966d7_SptrTypeDecl>(_1bc5966d7_SptrTypeDecl{._field_Elem=_24413_elem}), &__jule_any_type72)});;
}



inline jule::Ptr<_1bc59563c_TypeDecl> _1bd433bc2_buildSlc(_1bd4319b1_typeBuilder* _self_) {
	jule::Ptr<_1bc583a9d_Token> _25813_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1bc59563c_TypeDecl> _26013_elem = _1bd43470b_step(_self_);;
	if ((_26013_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1bc59563c_TypeDecl>(_1bc59563c_TypeDecl{._field_Token=_25813_token, ._field_Kind=jule::Any(jule::new_ptr<_1bc596a6c_SlcTypeDecl>(_1bc596a6c_SlcTypeDecl{._field_Elem=_26013_elem}), &__jule_any_type70)});;
}



inline jule::Ptr<_1bc59563c_TypeDecl> _1bd433e58_buildArr(_1bd4319b1_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _27313_exprTokens = _1bd41ce86_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1bd432055_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1bc59563c_TypeDecl> _27913_elem = _1bd43470b_step(_self_);;
	if ((_27913_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1bc597908_ArrTypeDecl> _28413_arrt = jule::new_ptr<_1bc597908_ArrTypeDecl>(_1bc597908_ArrTypeDecl{._field_Elem=_27913_elem, });;
	jule::Ptr<_1bc583a9d_Token> _28813_token = _27313_exprTokens[0LL];;
	if (((_27313_exprTokens.len() == 1LL) && ((*(_28813_token))._field_Id == static_cast<jule::U64>(39LLU)))) {
	} else {
		(*(_28413_arrt))._field_Size=_1bd420939_buildExpr((*(_self_))._field_p, &(_27313_exprTokens));
	};
	return jule::new_ptr<_1bc59563c_TypeDecl>(_1bc59563c_TypeDecl{._field_Token=_28813_token, ._field_Kind=jule::Any(_28413_arrt, &__jule_any_type69)});;
}



inline jule::Ptr<_1bc59563c_TypeDecl> _1bd4341de_buildMap(_1bd4319b1_typeBuilder* _self_) {
	jule::Ptr<_1bc583a9d_Token> _30213_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1bd432055_pushErr(_self_, _30213_mapToken, jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _31013_keyTokens = _1bd41ce86_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1bd432055_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("type missing", 12));
		return nullptr;;
	} else if ((_31013_keyTokens.len() == 0LL)) {
		_1bd432055_pushErr(_self_, _30213_mapToken, jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1bc598156_MapTypeDecl> _31913_mapt = jule::new_ptr<_1bc598156_MapTypeDecl>();;
	jule::I64 _32013_j = 0LL;;
	jule::Ptr<_1bc59563c_TypeDecl> _32113_keyt;;
	jule::Bool _32123_ok = false;;
	({
		__jule_tuple_x_1bc59563c_TypeDecl__jule_tuple_bool __jule_assign_result = _1bd421d8b_buildType((*(_self_))._field_p, &(_31013_keyTokens), (&(_32013_j)), (*(_self_))._field_err);
		_32113_keyt = __jule_assign_result.__jule_result_arg0;
		_32123_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32123_ok))) {
		return nullptr;;
	} else if ((_32013_j < _31013_keyTokens.len())) {
		_1bd432055_pushErr(_self_, _31013_keyTokens[_32013_j], jule::Str::lit("invalid syntax", 14));
	};
	(*(_31913_mapt))._field_Key=_32113_keyt;
	jule::Ptr<_1bc59563c_TypeDecl> _32913_valt;;
	({
		__jule_tuple_x_1bc59563c_TypeDecl__jule_tuple_bool __jule_assign_result = _1bd421d8b_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_32913_valt = __jule_assign_result.__jule_result_arg0;
		_32123_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32123_ok))) {
		return nullptr;;
	};
	(*(_31913_mapt))._field_Val=_32913_valt;
	return jule::new_ptr<_1bc59563c_TypeDecl>(_1bc59563c_TypeDecl{._field_Token=_30213_mapToken, ._field_Kind=jule::Any(_31913_mapt, &__jule_any_type73)});;
}



inline jule::Ptr<_1bc59563c_TypeDecl> _1bd434475_buildEnumerable(_1bd4319b1_typeBuilder* _self_) {
	jule::Ptr<_1bc583a9d_Token> _34113_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len())) {
		_1bd432055_pushErr(_self_, _34113_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_34113_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((*(_34113_token))._field_Id == static_cast<jule::U64>(77LLU))) {
		return _1bd433bc2_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1bd433e58_buildArr(_self_);;
}



inline jule::Ptr<_1bc59563c_TypeDecl> _1bd43470b_step(_1bd4319b1_typeBuilder* _self_) {
	jule::Ptr<_1bc583a9d_Token> _3569_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ (*(_3569_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1c287bec3:;
			{
				return _1bd432e02_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1c287ae5b:;
			{
				return _1bd433188_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1c287c0e4:;
			{
				return _1bd43341e_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1c287b7a8:;
			{
				return _1bd4336a5_buildPtr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1c287b81e:;
			{
				return _1bd43393b_buildSptr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1c287b885:;
			{
				return jule::new_ptr<_1bc59563c_TypeDecl>(_1bc59563c_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1bc5966d7_SptrTypeDecl>(_1bc5966d7_SptrTypeDecl{._field_Elem=_1bd43393b_buildSptr(_self_)}), &__jule_any_type72)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1c287b8eb:;
			{
				return _1bd434475_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1c287c38b:;
			{
				return _1bd4341de_buildMap(_self_);;
			}
		}
		else {
			_case_begin_1c287b742:;
			{
				((*((*(_self_))._field_i)))++;
				_1bd432055_pushErr(_self_, _3569_token, jule::Str::lit("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1c287b6dc:;
	};
}



inline __jule_tuple_x_1bc59563c_TypeDecl__jule_tuple_bool _1bd434992_build(_1bd4319b1_typeBuilder* _self_) {
	__jule_tuple_x_1bc59563c_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1bc59563c_TypeDecl> _38813_root = _1bd43470b_step(_self_);;
	if ((_38813_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1bd4311ec_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _38813_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bd4319b1_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bcacb931_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _1bcacd45a_pushErr(_1bcacce0a_directiveEval* _self_, jule::Ptr<_1bc583a9d_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	{ jule::Slice<_1ed6c7892_Log> &__jule_push_dest = (*(_self_))._field_logs; __jule_push_dest.push(_1ed6c7892_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*(_2126_t))._field_Row, ._field_Column=(*(_2126_t))._field_Column, ._field_Path=(*((*(_2126_t))._field_File))._field_Path, ._field_Text=_1ed6c7d04_Logf(_2137_fmt, _2150_args), }); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>> _1bcacd856_splitOperans(_1bcacce0a_directiveEval* _self_, jule::U64 _3331_op, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _3349_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>> _3413_parts = jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>>::alloc(0LL, 10LL);;
	jule::I64 _3513_i = 0LL;;
	jule::I64 _3613_rangeN = 0LL;;
	jule::I64 _3713_last = 0LL;;
	for (; (_3513_i < ((*(_3349_tokens)).len() - 1LL)); (_3513_i)++) {
		{
			jule::Ptr<_1bc583a9d_Token> _3913_b = (*(_3349_tokens))[_3513_i];;
			{
				auto &_match_expr{ (*(_3913_b))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1c28a1910:;
					{
						(_3613_rangeN)++;
						goto _iter_next_1c28a0ba6;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1c28a1987:;
					{
						(_3613_rangeN)--;
					}
				}
				_match_end_1c28a1899:;
			};
			if (((_3613_rangeN > 0LL) || ((*(_3913_b))._field_Id != _3331_op))) {
				goto _iter_next_1c28a0ba6;
			};
			{ jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>> &__jule_push_dest = _3413_parts; __jule_push_dest.push((*(_3349_tokens)).slice(_3713_last, _3513_i)); };
			_3713_last=static_cast<jule::I64>((_3513_i + 1LL));
		}
	_iter_next_1c28a0ba6:;
	}
	_iter_end_1c28a0ba6:;;
	if ((_3713_last < (*(_3349_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>> &__jule_push_dest = _3413_parts; __jule_push_dest.push((*(_3349_tokens)).slice(_3713_last)); };
	} else {
		_1bcacd45a_pushErr(_self_, (*(_3349_tokens))[(_3713_last - 1LL)], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _3413_parts;;
}



inline jule::Bool _1bcacdb97_evalDirectiveIdent(_1bcacce0a_directiveEval* _self_, jule::Str _6433_ident) {
	if ((_6433_ident).empty()) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c28a4407:;
		if (it != expr_end) {
			jule::Str *_6816_var = it;
			{
				if (((*(_6816_var)) == _6433_ident)) {
					return true;;
				};
			}
			_iter_next_1c28a4407:;
			++it;
			goto _iter_begin_1c28a4407;
		}
		_iter_end_1c28a4407:;
	};
	return false;;
}



inline jule::Bool _1bcacded8_evalDirectivePart(_1bcacce0a_directiveEval* _self_, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _7840_part) {
	jule::Bool _799_logicalNot = ((*(_7840_part[0LL]))._field_Id == static_cast<jule::U64>(68LLU));;
	if (_799_logicalNot) {
		(_7840_part).mut_slice(1LL);;
	};
	if ((_7840_part.len() > 1LL)) {
		_1bcacd45a_pushErr(_self_, _7840_part[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _8913_result = _1bcacdb97_evalDirectiveIdent(_self_, (*(_7840_part[0LL]))._field_Kind);;
	if (_799_logicalNot) {
		_8913_result=(!(_8913_result));
	};
	return _8913_result;;
}



inline jule::Bool _1bcace26e_eval(_1bcacce0a_directiveEval* _self_) {
	if (((*((*(_self_))._field_d))._field_Args.len() == 0LL)) {
		_1bcacd45a_pushErr(_self_, (*((*(_self_))._field_d))._field_Tag, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _10213_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>> _10413_logicalOrParts = _1bcacd856_splitOperans(_self_, static_cast<jule::U64>(55LLU), &((*((*(_self_))._field_d))._field_Args));;
	if ((_10413_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_10413_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c28a9a6c:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1bc583a9d_Token>> _10921_part = *it;
			{
				jule::Bool _11017_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>> _11117_logicalAndParts = _1bcacd856_splitOperans(_self_, static_cast<jule::U64>(54LLU), &(_10921_part));;
				if ((_11117_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_11117_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c28ab365:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_1bc583a9d_Token>> _11625_andPart = *it;
						{
							jule::Ptr<_1bc583a9d_Token> _11717_first = _11625_andPart[0LL];;
							if (((*(_11717_first))._field_Id == static_cast<jule::U64>(74LLU))) {
								jule::Ptr<_1bc583a9d_Token> _11921_end = _11625_andPart[(_11625_andPart.len() - 1LL)];;
								if (((*(_11921_end))._field_Id != static_cast<jule::U64>(75LLU))) {
									_1bcacd45a_pushErr(_self_, _11717_first, jule::Str::lit("parentheses waiting to close", 28), jule::Slice<jule::Any>());
									return false;;
								};
								(_11625_andPart).mut_slice(1LL, (_11625_andPart.len() - 1LL));;
							};
							_11017_and=(_11017_and && _1bcacded8_evalDirectivePart(_self_, _11625_andPart));
						}
						_iter_next_1c28ab365:;
						++it;
						goto _iter_begin_1c28ab365;
					}
					_iter_end_1c28ab365:;
				};
				_10213_result=(_10213_result || _11017_and);
			}
			_iter_next_1c28a9a6c:;
			++it;
			goto _iter_begin_1c28a9a6c;
		}
		_iter_end_1c28a9a6c:;
	};
	return _10213_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bcacce0a_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1bd435ae7_JuleImporter> static__1bd435ee3_New(_1bcacb931_CompileInfo _5819_info) {
	jule::Ptr<_1bd435ae7_JuleImporter> _5913_imp = jule::new_ptr<_1bd435ae7_JuleImporter>(_1bd435ae7_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_1eeea8094_PathStdlib}), });;
	_1bcacc2b1_initVars(&((*(_5913_imp))._field_vars), &(_5819_info));
	return _5913_imp;;
}



inline jule::Slice<jule::Ptr<_1bc763e04_ImportInfo>> _1bd436279_AllPackages(_1bd435ae7_JuleImporter* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _1bd4366b9_SetModPath(_1bd435ae7_JuleImporter* _self_, jule::Str _7529_path) {
	(*(_self_))._field_mod=_7529_path;
}



inline jule::Str _1bd436950_GetModPath(_1bd435ae7_JuleImporter* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _1bd436c91_ModById(_1bd435ae7_JuleImporter* _self_, jule::I64 _8322_id) {
	return (*(_self_))._field_mods[_8322_id];;
}



inline jule::Ptr<_1bc763e04_ImportInfo> _1bd4370d2_GetImport(_1bd435ae7_JuleImporter* _self_, jule::Str _8728_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c28b2a20:;
		if (it != expr_end) {
			jule::Ptr<_1bc763e04_ImportInfo> _8821_p = *it;
			{
				if (((*(_8821_p))._field_Path == _8728_path)) {
					return _8821_p;;
				};
			}
			_iter_next_1c28b2a20:;
			++it;
			goto _iter_begin_1c28b2a20;
		}
		_iter_end_1c28b2a20:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1bc59378e_Ast__jule_tuple_s_1ed6c7892_Log _1bd4374cd_ImportPackage(_1bd435ae7_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod) {
	__jule_tuple_sx_1bc59378e_Ast__jule_tuple_s_1ed6c7892_Log __jule_func_result;
	jule::Slice<jule::Ptr<_230a4148c_DirEntry>> _9713_dirents = ({
		auto except = static__1ed646316_Read(_9632_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = jule::Slice<_1ed6c7892_Log>::make({_1bd43560d_flatCompilerErr((jule::Str::lit("connot read package directory: ", 31) + _9632_path))});
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_230a4148c_DirEntry>>(nullptr);});
	});;
	if (_9643_update_mod) {
		jule::Str _10213_newMod = _1bc780728_FindModuleFileDeep(_9632_path);;
		if ((_10213_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_10213_newMod;
			jule::Slice<_1ed6c7892_Log> _10521_errs = _1bc7809e2_CheckModuleFile(&((*(_self_))._field_mod));;
			if ((_10521_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _10521_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1bc59378e_Ast>> _11213_asts = jule::Slice<jule::Ptr<_1bc59378e_Ast>>::alloc(0LL, _9713_dirents.len());;
	{
		auto expr = &(_9713_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c28b41c5:;
		if (it != expr_end) {
			jule::Ptr<_230a4148c_DirEntry> _11316_dirent = *it;
			{
				if ((_230a44e30_IsDir((*(_11316_dirent))._field_Stat.ptr()) || (!(_1ed63a44d_HasSuffix((*(_11316_dirent))._field_Name, jule::Str::lit(".jule", 5)))))) {
					goto _iter_next_1c28b41c5;
				};
				jule::Str _11913__path = _1ed644c2c_Join(jule::Slice<jule::Str>::make({_9632_path,(*(_11316_dirent))._field_Name}));;
				jule::Ptr<_1bc589367_File> _12017_file = _1bc58a70e_NewFileSet(_11913__path);;
				_1bc589752_Fill(_12017_file.ptr(), _1bd435333_readBuff((*(_12017_file))._field_Path));
				jule::Slice<_1ed6c7892_Log> _12217_errors = _1bc592e53_Lex(_12017_file, static_cast<jule::I64>(0LL));;
				if ((_12217_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12217_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1bd3a9e01_FileInfo> _12717_finfo = _1bd3ed890_ParseFile(_12017_file);;
				if (((*(_12717_finfo))._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = (*(_12717_finfo))._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1bcacaac8_isPassFileAnnotation((*(_11316_dirent))._field_Name)))) {
					goto _iter_next_1c28b41c5;
				};
				jule::Bool _13713_r = false;;
				jule::Slice<_1ed6c7892_Log> _13720_logs;;
				({
					__jule_tuple_bool__jule_tuple_s_1ed6c7892_Log __jule_assign_result = _1bd437bb5_isPassBuildDirectives(_self_, &((*(_12717_finfo))._field_Ast));
					_13713_r = __jule_assign_result.__jule_result_arg0;
					_13720_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13720_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13720_logs;
					return __jule_func_result;;
				};
				if ((!(_13713_r))) {
					goto _iter_next_1c28b41c5;
				};
				{ jule::Slice<jule::Ptr<_1bc59378e_Ast>> &__jule_push_dest = _11213_asts; __jule_push_dest.push((*(_12717_finfo))._field_Ast); };
			}
			_iter_next_1c28b41c5:;
			++it;
			goto _iter_begin_1c28b41c5;
		}
		_iter_end_1c28b41c5:;
	};
	__jule_func_result.__jule_result_arg0 = _11213_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1bd437786_Imported(_1bd435ae7_JuleImporter* _self_, jule::Ptr<_1bc763e04_ImportInfo> _15331_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c28b6dcb:;
		if (it != expr_end) {
			jule::Ptr<_1bc763e04_ImportInfo> _15516_p = *it;
			{
				if ((((*(_15516_p))._field_Binded == (*(_15331_imp))._field_Binded) && ((*(_15516_p))._field_LinkPath == (*(_15331_imp))._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_1c28b6dcb:;
			++it;
			goto _iter_begin_1c28b6dcb;
		}
		_iter_end_1c28b6dcb:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c28be433:;
			if (it != expr_end) {
				jule::I64 _16217_i = it - expr->begin();
				jule::Str _16220_mod = *it;
				{
					if (((*(_self_))._field_mod == _16220_mod)) {
						(*(_15331_imp))._field_ModId=_16217_i;
						goto _julec_label_1c28c0d19;
					};
				}
				_iter_next_1c28be433:;
				++it;
				_16217_i++;
				goto _iter_begin_1c28be433;
			}
			_iter_end_1c28be433:;
		};
		(*(_15331_imp))._field_ModId=static_cast<jule::I64>((*(_self_))._field_mods.len());
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_mods; __jule_push_dest.push((*(_self_))._field_mod); };
		_julec_label_1c28c0d19:;
	};
	{ jule::Slice<jule::Ptr<_1bc763e04_ImportInfo>> &__jule_push_dest = (*(_self_))._field_pkgs; __jule_push_dest.push(_15331_imp); };
}



inline __jule_tuple_bool__jule_tuple_s_1ed6c7892_Log _1bd437bb5_isPassBuildDirectives(_1bd435ae7_JuleImporter* _self_, jule::Ptr<_1bc59378e_Ast>* _17945_file) {
	__jule_tuple_bool__jule_tuple_s_1ed6c7892_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*((*(_17945_file))))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c28c258a:;
		if (it != expr_end) {
			jule::Ptr<_1bc594a59_Directive> _18021_td = *it;
			{
				if ((!(*((*(_18021_td))._field_Tag))._field_Kind.equal("build", 5))) {
					goto _iter_next_1c28c258a;
				};
				_1bcacce0a_directiveEval _18417_de = _1bcacce0a_directiveEval{._field_d=_18021_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _18813_result = _1bcace26e_eval(&_18417_de);;
				if ((_18417_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _18417_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_18813_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1c28c258a:;
			++it;
			goto _iter_begin_1c28c258a;
		}
		_iter_end_1c28c258a:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bd435ae7_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bd43ad0b_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c28e4090_isCommonOrdered(jule::Slice<jule::Ptr<_1bc5bb333_Struct>> _1834_s, jule::Ptr<_1bc5bb333_Struct> _1842_t) {
	{
		auto expr = &((*(_1842_t))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c28e536b:;
		if (it != expr_end) {
			jule::Ptr<_1bc5bb333_Struct> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c28e5a75:;
					if (it != expr_end) {
						jule::Ptr<_1bc5bb333_Struct> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1c28e5a75:;
						++it;
						goto _iter_begin_1c28e5a75;
					}
					_iter_end_1c28e5a75:;
				};
			}
			_iter_next_1c28e536b:;
			++it;
			goto _iter_begin_1c28e536b;
		}
		_iter_end_1c28e536b:;
	};
	return true;;
}

inline jule::Bool _1c28e902e_isCommonOrdered(jule::Slice<jule::Ptr<_1bc7a750d_Var>> _1834_s, jule::Ptr<_1bc7a750d_Var> _1842_t) {
	{
		auto expr = &((*(_1842_t))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c28ea2b6:;
		if (it != expr_end) {
			jule::Ptr<_1bc7a750d_Var> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c28ea9c0:;
					if (it != expr_end) {
						jule::Ptr<_1bc7a750d_Var> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1c28ea9c0:;
						++it;
						goto _iter_begin_1c28ea9c0;
					}
					_iter_end_1c28ea9c0:;
				};
			}
			_iter_next_1c28ea2b6:;
			++it;
			goto _iter_begin_1c28ea2b6;
		}
		_iter_end_1c28ea2b6:;
	};
	return true;;
}



inline void _1c28e06eb_orderCommon(jule::Slice<jule::Ptr<_1bc5bb333_Struct>>* _3135_s) {
	jule::I64 _3213_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c28e1bd6:;
		if (it != expr_end) {
			{
				jule::Bool _3417_swapped = false;;
				jule::I64 _3517_k = 0LL;;
				for (; (_3517_k < _3213_n); (_3517_k)++) {
					{
						if ((!(_1c28e4090_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3517_k])))) {
							std::swap((*(_3135_s))[_3517_k], (*(_3135_s))[(_3517_k + 1LL)]);
							_3417_swapped=true;
						};
					}
				_iter_next_1c28e290c:;
				}
				_iter_end_1c28e290c:;;
				if ((!(_3417_swapped))) {
					goto _iter_end_1c28e1bd6;
				};
				(_3213_n)--;
			}
			_iter_next_1c28e1bd6:;
			++it;
			goto _iter_begin_1c28e1bd6;
		}
		_iter_end_1c28e1bd6:;
	};
}

inline void _1c28e4931_orderCommon(jule::Slice<jule::Ptr<_1bc7a750d_Var>>* _3135_s) {
	jule::I64 _3213_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c28e6b75:;
		if (it != expr_end) {
			{
				jule::Bool _3417_swapped = false;;
				jule::I64 _3517_k = 0LL;;
				for (; (_3517_k < _3213_n); (_3517_k)++) {
					{
						if ((!(_1c28e902e_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3517_k])))) {
							std::swap((*(_3135_s))[_3517_k], (*(_3135_s))[(_3517_k + 1LL)]);
							_3417_swapped=true;
						};
					}
				_iter_next_1c28e789b:;
				}
				_iter_end_1c28e789b:;;
				if ((!(_3417_swapped))) {
					goto _iter_end_1c28e6b75;
				};
				(_3213_n)--;
			}
			_iter_next_1c28e6b75:;
			++it;
			goto _iter_begin_1c28e6b75;
		}
		_iter_end_1c28e6b75:;
	};
}



inline void static__1bd43b966_orderStructures(jule::Slice<jule::Ptr<_1bc5bb333_Struct>>* _5136_structs) {
	_1c28e06eb_orderCommon(_5136_structs);
}



inline void static__1bd43bb97_orderVars(jule::Slice<jule::Ptr<_1bc7a750d_Var>>* _5730_vars) {
	_1c28e4931_orderCommon(_5730_vars);
}





std::ostream &operator<<(std::ostream &_Stream, _1bd43b070_defineOrderer _Src) {
	_Stream << "defineOrderer{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bd108a0c_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _1bd13d6ac_optimizeChild(jule::Ptr<_1bd13d206_scopeDeadCode> _self_, jule::Ptr<_1bc74261e_Scope>* _3938_s) {
	jule::Ptr<_1bd13d206_scopeDeadCode> _4013_sdc = jule::new_ptr<_1bd13d206_scopeDeadCode>(_1bd13d206_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_3938_s)), ._field_stmts=(&((*((*(_3938_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*(_self_))._field_gotos, });;
	{
		_1bd1410c7_optimizeStmts(_4013_sdc);
	};
}



inline void _1bd13d965_optimizeBodyChildExceptional(jule::Ptr<_1bd13d206_scopeDeadCode> _self_, jule::Ptr<_1bc74261e_Scope>* _5053_s) {
	jule::Ptr<_1bd13d206_scopeDeadCode> _5113_sdc = jule::new_ptr<_1bd13d206_scopeDeadCode>(_1bd13d206_scopeDeadCode{._field_s=(*(_5053_s)), ._field_stmts=(&((*((*(_5053_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*(_self_))._field_gotos, ._field_except=true});;
	{
		_1bd1410c7_optimizeStmts(_5113_sdc);
	};
}



inline void _1bd13dc1d_optimizeBodyChild(jule::Ptr<_1bd13d206_scopeDeadCode> _self_, jule::Ptr<_1bc74261e_Scope>* _6142_s) {
	jule::Ptr<_1bd13d206_scopeDeadCode> _6213_sdc = jule::new_ptr<_1bd13d206_scopeDeadCode>(_1bd13d206_scopeDeadCode{._field_s=(*(_6142_s)), ._field_stmts=(&((*((*(_6142_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*(_self_))._field_gotos, });;
	{
		_1bd1410c7_optimizeStmts(_6213_sdc);
	};
}



inline void _1bd13dec6_optimizeExprModel(jule::Ptr<_1bd13d206_scopeDeadCode> _self_, jule::Any* _7142_model) {
	_1bd14245d_exprDeadCode _729_edc = static__1bd142a9b_new(&(_self_));;
	_1bd1489c5_optimize(&_729_edc, _7142_model);
}



inline void _1bd13e1c4_eliminateFollowed(_1bd13d206_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		(*((*(_self_))._field_stmts))=(*((*(_self_))._field_stmts)).slice(0LL, ((*(_self_))._field_i + 1LL));
	};
	jule::Ptr<_1bd13d206_scopeDeadCode> _8313_parent = (*(_self_))._field_parent;;
	while ((_8313_parent != nullptr)) {
		{
			{
				(*((*(_8313_parent))._field_stmts))=(*((*(_8313_parent))._field_stmts)).slice(0LL, ((*(_8313_parent))._field_i + 1LL));
			};
			_8313_parent=(*(_8313_parent))._field_parent;
		}
	_iter_next_1c2970946:;
	}
	_iter_end_1c2970946:;;
}



inline void _1bd13e47c_pushGoto(jule::Ptr<_1bd13d206_scopeDeadCode> _self_, jule::Ptr<_1bc74538b_GotoSt> _9232_gt) {
	jule::I64 _9313_i = 0LL;;
	for (; (_9313_i < (*((*(_self_))._field_labels)).len()); (_9313_i)++) {
		{
			if (((*(_9232_gt))._field_Ident == (*((*((*(_self_))._field_labels))[_9313_i]))._field_Ident)) {
				return;;
			};
		}
	_iter_next_1c29738d3:;
	}
	_iter_end_1c29738d3:;;
	{ jule::Slice<jule::Ptr<_1bc74538b_GotoSt>> &__jule_push_dest = (*((*(_self_))._field_gotos)); __jule_push_dest.push(_9232_gt); };
}



inline void _1bd13e735_pushLabel(jule::Ptr<_1bd13d206_scopeDeadCode> _self_, jule::Ptr<_1bc744eb2_Label> _10233_l) {
	jule::I64 _10313_i = 0LL;;
	while ((_10313_i < (*((*(_self_))._field_gotos)).len())) {
		{
			if (((*(_10233_l))._field_Ident == (*((*((*(_self_))._field_gotos))[_10313_i]))._field_Ident)) {
				jule::copy(((*((*(_self_))._field_gotos)).slice(_10313_i)), ((*((*(_self_))._field_gotos)).slice((_10313_i + 1LL))));
				(*((*(_self_))._field_gotos))=(*((*(_self_))._field_gotos)).slice(0LL, ((*((*(_self_))._field_gotos)).len() - 1LL));
				goto _iter_next_1c2975b05;
			};
			(_10313_i)++;
		}
	_iter_next_1c2975b05:;
	}
	_iter_end_1c2975b05:;;
	{ jule::Slice<jule::Ptr<_1bc744eb2_Label>> &__jule_push_dest = (*((*(_self_))._field_labels)); __jule_push_dest.push(_10233_l); };
}



inline void _1bd13e9dd_optimizeRangeIter(jule::Ptr<_1bd13d206_scopeDeadCode> _self_, jule::Ptr<_1bc744456_RangeIter> _11541_it) {
	_1bd13dec6_optimizeExprModel(_self_, &((*((*(_11541_it))._field_Expr))._field_Model));
	_1bd13dc1d_optimizeBodyChild(_self_, &((*(_11541_it))._field_Scope));
}



inline void _1bd13ec96_optimizeWhileIter(jule::Ptr<_1bd13d206_scopeDeadCode> _self_, jule::Ptr<_1bc743a0a_WhileIter> _12041_it) {
	_1bd13dec6_optimizeExprModel(_self_, &((*(_12041_it))._field_Expr));
	if (((*(_12041_it))._field_Next != nullptr)) {
		_1bd140dc9_optimizeStmt(_self_, (*(_12041_it))._field_Next);
	};
	_1bd13dc1d_optimizeBodyChild(_self_, &((*(_12041_it))._field_Scope));
}



inline void _1bd14004e_optimizeInfIter(jule::Ptr<_1bd13d206_scopeDeadCode> _self_, jule::Ptr<_1bc743554_InfIter> _12839_it) {
	_1bd13dc1d_optimizeBodyChild(_self_, &((*(_12839_it))._field_Scope));
}



inline void _1bd140307_optimizeConditional(jule::Ptr<_1bd13d206_scopeDeadCode> _self_, jule::Ptr<_1bc743257_Conditional> _13243_c) {
	{
		auto expr = &((*(_13243_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c297c9a8:;
		if (it != expr_end) {
			jule::Ptr<_1bc742a3c_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_1bd13dec6_optimizeExprModel(_self_, &((*(_13321_case))._field_Expr));
					_1bd13dc1d_optimizeBodyChild(_self_, &((*(_13321_case))._field_Scope));
				};
			}
			_iter_next_1c297c9a8:;
			++it;
			goto _iter_begin_1c297c9a8;
		}
		_iter_end_1c297c9a8:;
	};
	if (((*(_13243_c))._field_Default != nullptr)) {
		if (((*(_13243_c))._field_Elifs.len() == 0LL)) {
			_1bd13d6ac_optimizeChild(_self_, &((*((*(_13243_c))._field_Default))._field_Scope));
		} else {
			_1bd13dc1d_optimizeBodyChild(_self_, &((*((*(_13243_c))._field_Default))._field_Scope));
		};
	};
}



inline void _1bd1405b0_optimizeMatch(jule::Ptr<_1bd13d206_scopeDeadCode> _self_, jule::Ptr<_1bc746755_Match> _15037_m) {
	{
		auto expr = &((*(_15037_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c298101c:;
		if (it != expr_end) {
			jule::Ptr<_1bc74738d_Case> _15121_case = *it;
			{
				{
					auto expr = &((*(_15121_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c2981968:;
					if (it != expr_end) {
						jule::Ptr<_1bc8108a7_Data> _15225_expr = *it;
						{
							_1bd13dec6_optimizeExprModel(_self_, &((*(_15225_expr))._field_Model));
						}
						_iter_next_1c2981968:;
						++it;
						goto _iter_begin_1c2981968;
					}
					_iter_end_1c2981968:;
				};
				_1bd13dc1d_optimizeBodyChild(_self_, &((*(_15121_case))._field_Scope));
			}
			_iter_next_1c298101c:;
			++it;
			goto _iter_begin_1c298101c;
		}
		_iter_end_1c298101c:;
	};
	if (((*(_15037_m))._field_Default != nullptr)) {
		if (((*(_15037_m))._field_Cases.len() == 0LL)) {
			_1bd13d6ac_optimizeChild(_self_, &((*((*(_15037_m))._field_Default))._field_Scope));
		} else {
			_1bd13dc1d_optimizeBodyChild(_self_, &((*((*(_15037_m))._field_Default))._field_Scope));
		};
	};
}



inline void _1bd140868_optimizeAssign(jule::Ptr<_1bd13d206_scopeDeadCode> _self_, jule::Ptr<_1bc745c1b_Assign> _16838_assign) {
	_1bd13dec6_optimizeExprModel(_self_, &((*((*(_16838_assign))._field_L))._field_Model));
	_1bd13dec6_optimizeExprModel(_self_, &((*((*(_16838_assign))._field_R))._field_Model));
}



inline void _1bd140b21_optimizeMultiAssign(jule::Ptr<_1bd13d206_scopeDeadCode> _self_, jule::Ptr<_1bc7460e5_MultiAssign> _17343_assign) {
	{
		auto expr = &((*(_17343_assign))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2985d79:;
		if (it != expr_end) {
			jule::Ptr<_1bc8108a7_Data> _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_1bd13dec6_optimizeExprModel(_self_, &((*(_17421_l))._field_Model));
				};
			}
			_iter_next_1c2985d79:;
			++it;
			goto _iter_begin_1c2985d79;
		}
		_iter_end_1c2985d79:;
	};
	_1bd13dec6_optimizeExprModel(_self_, &((*(_17343_assign))._field_R));
}



inline void _1bd140dc9_optimizeStmt(jule::Ptr<_1bd13d206_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1c2987a29:;
			{
				jule::Ptr<_1bc74261e_Scope> _18517_scope = _18236_st.cast_ptr<_1bc74261e_Scope>(&__jule_any_type22);;
				if ((*(_18517_scope))._field_Deferred) {
					_1bd141407_eliminateDeadCodeOfScope(_18517_scope);
				} else {
					_1bd13d6ac_optimizeChild(_self_, &(_18517_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1c2987a90:;
			{
				_1bd13e9dd_optimizeRangeIter(_self_, _18236_st.cast_ptr<_1bc744456_RangeIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1c2987b06:;
			{
				_1bd13ec96_optimizeWhileIter(_self_, _18236_st.cast_ptr<_1bc743a0a_WhileIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1c2987b7d:;
			{
				_1bd14004e_optimizeInfIter(_self_, _18236_st.cast_ptr<_1bc743554_InfIter>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1c2987c05:;
			{
				_1bd140307_optimizeConditional(_self_, _18236_st.cast_ptr<_1bc743257_Conditional>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1c2987c7c:;
			{
				_1bd1405b0_optimizeMatch(_self_, _18236_st.cast_ptr<_1bc746755_Match>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1c2987d04:;
			{
				_1bd140868_optimizeAssign(_self_, _18236_st.cast_ptr<_1bc745c1b_Assign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1c2987d7b:;
			{
				_1bd140b21_optimizeMultiAssign(_self_, _18236_st.cast_ptr<_1bc7460e5_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1c2987e03:;
			{
				jule::Ptr<_1bc8108a7_Data> _20617_d = _18236_st.cast_ptr<_1bc8108a7_Data>(&__jule_any_type24);;
				if ((*(_self_))._field_except) {
					goto _match_end_1c29878d6;
				};
				{
					auto &_match_expr{ (*(_20617_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type29) {
						_case_begin_1c298d47a:;
						{
							_1bd13e1c4_eliminateFollowed(_self_.ptr());
						}
					}
					else {
						_case_begin_1c298db0c:;
						{
							_1bd13dec6_optimizeExprModel(_self_, &((*(_20617_d))._field_Model));
						}
					}
					_match_end_1c298daa7:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1c2987e7a:;
			{
				_1bd13e1c4_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1c2988002:;
			{
				_1bd13e47c_pushGoto(_self_, _18236_st.cast_ptr<_1bc74538b_GotoSt>(&__jule_any_type42));
				_1bd13e1c4_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1c2988079:;
			{
				_1bd13e735_pushLabel(_self_, _18236_st.cast_ptr<_1bc744eb2_Label>(&__jule_any_type21));
			}
		}
		_match_end_1c29878d6:;
	};
}



inline void _1bd1410c7_optimizeStmts(jule::Ptr<_1bd13d206_scopeDeadCode> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*(_self_))._field_i < (*((*(_self_))._field_stmts)).len()); ((*(_self_))._field_i)++) {
		{
			_1bd140dc9_optimizeStmt(_self_, (*((*(_self_))._field_stmts))[(*(_self_))._field_i]);
		}
	_iter_next_1c29912a2:;
	}
	_iter_end_1c29912a2:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bd13d206_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _1bd14245d_exprDeadCode static__1bd142a9b_new(jule::Ptr<_1bd13d206_scopeDeadCode>* _4824_s) {
	return _1bd14245d_exprDeadCode{._field_s=(*(_4824_s))};;
}



inline void _1bd142d54_binary(_1bd14245d_exprDeadCode* _self_, jule::Ptr<_1ece0d282_BinaryExprModel> _5425_m) {
	_1bd1489c5_optimize(_self_, &((*((*(_5425_m))._field_Left))._field_Model));
	_1bd1489c5_optimize(_self_, &((*((*(_5425_m))._field_Right))._field_Model));
}



inline void _1bd14310c_unary(_1bd14245d_exprDeadCode* _self_, jule::Ptr<_1ece0d65b_UnaryExprModel> _5924_m) {
	_1bd1489c5_optimize(_self_, &((*((*(_5924_m))._field_Expr))._field_Model));
}



inline void _1bd1433b5_structureLit(_1bd14245d_exprDeadCode* _self_, jule::Ptr<_1ece0e030_StructLitExprModel> _6331_m) {
	{
		auto expr = &((*(_6331_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2994d77:;
		if (it != expr_end) {
			jule::Ptr<_1ece0db89_StructArgExprModel> _6421_arg = *it;
			{
				_1bd1489c5_optimize(_self_, &((*((*(_6421_arg))._field_Expr))._field_Model));
			}
			_iter_next_1c2994d77:;
			++it;
			goto _iter_begin_1c2994d77;
		}
		_iter_end_1c2994d77:;
	};
}



inline void _1bd14366d_allocStructure(_1bd14245d_exprDeadCode* _self_, jule::Ptr<_1ece0e32c_AllocStructLitExprModel> _6933_m) {
	_1bd1433b5_structureLit(_self_, (*(_6933_m))._field_Lit);
}



inline void _1bd143926_casting(_1bd14245d_exprDeadCode* _self_, jule::Ptr<_1ece0e8b0_CastingExprModel> _7326_m) {
	_1bd1489c5_optimize(_self_, &((*(_7326_m))._field_Expr));
}



inline void _1bd143bce_args(_1bd14245d_exprDeadCode* _self_, jule::Slice<jule::Any>* _7724_args) {
	{
		auto expr = _7724_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c299730d:;
		if (it != expr_end) {
			jule::Any _7821_arg = *it;
			{
				_1bd1489c5_optimize(_self_, &(_7821_arg));
			}
			_iter_next_1c299730d:;
			++it;
			goto _iter_begin_1c299730d;
		}
		_iter_end_1c299730d:;
	};
}



inline void _1bd143e87_funcCall(_1bd14245d_exprDeadCode* _self_, jule::Ptr<_1ece10262_FnCallExprModel> _8327_m) {
	_1bd1489c5_optimize(_self_, &((*(_8327_m))._field_Expr));
	_1bd143bce_args(_self_, &((*(_8327_m))._field_Args));
	if (((*(_8327_m))._field_Except != nullptr)) {
		_1bd13d965_optimizeBodyChildExceptional((*(_self_))._field_s, &((*(_8327_m))._field_Except));
	};
}



inline void _1bd144240_slice(_1bd14245d_exprDeadCode* _self_, jule::Ptr<_1ece1063b_SliceExprModel> _9124_m) {
	_1bd143bce_args(_self_, &((*(_9124_m))._field_Elems));
}



inline void _1bd1444e8_array(_1bd14245d_exprDeadCode* _self_, jule::Ptr<_1ece13683_ArrayExprModel> _9524_m) {
	if ((((*(_9524_m))._field_Elems.len() == 2LL) && ((*(_9524_m))._field_Elems[1LL] == nullptr))) {
		_1bd1489c5_optimize(_self_, &((*(_9524_m))._field_Elems[0LL]));
	};
	_1bd143bce_args(_self_, &((*(_9524_m))._field_Elems));
}



inline void _1bd1447a1_indexing(_1bd14245d_exprDeadCode* _self_, jule::Ptr<_1ece10ae2_IndexingExprModel> _10227_m) {
	_1bd1489c5_optimize(_self_, &((*((*(_10227_m))._field_Expr))._field_Model));
	_1bd1489c5_optimize(_self_, &((*((*(_10227_m))._field_Index))._field_Model));
}



inline void _1bd144a59_anonFunc(_1bd14245d_exprDeadCode* _self_, jule::Ptr<_1ece10ebb_AnonFnExprModel> _10727_m) {
	_1bd141407_eliminateDeadCodeOfScope((*((*(_10727_m))._field_Func))._field_Scope);
}



inline void _1bd144d12_mapExpr(_1bd14245d_exprDeadCode* _self_, jule::Ptr<_1ece1184b_MapExprModel> _11126_m) {
	{
		auto expr = &((*(_11126_m))._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c299d9a7:;
		if (it != expr_end) {
			jule::Ptr<_1ece11395_KeyValPairExprModel> _11221_pair = *it;
			{
				_1bd1489c5_optimize(_self_, &((*(_11221_pair))._field_Key));
				_1bd1489c5_optimize(_self_, &((*(_11221_pair))._field_Val));
			}
			_iter_next_1c299d9a7:;
			++it;
			goto _iter_begin_1c299d9a7;
		}
		_iter_end_1c299d9a7:;
	};
}



inline void _1bd1450ba_slicing(_1bd14245d_exprDeadCode* _self_, jule::Ptr<_1ece11dce_SlicingExprModel> _11826_m) {
	_1bd1489c5_optimize(_self_, &((*(_11826_m))._field_Expr));
	_1bd1489c5_optimize(_self_, &((*(_11826_m))._field_Left));
	if (((*(_11826_m))._field_Right != nullptr)) {
		_1bd1489c5_optimize(_self_, &((*(_11826_m))._field_Right));
	};
}



inline void _1bd145373_traitSub(_1bd14245d_exprDeadCode* _self_, jule::Ptr<_1ece12462_TraitSubIdentExprModel> _12627_m) {
	_1bd1489c5_optimize(_self_, &((*(_12627_m))._field_Expr));
}



inline void _1bd14562b_structureSub(_1bd14245d_exprDeadCode* _self_, jule::Ptr<_1ece12d03_StructSubIdentExprModel> _13031_m) {
	_1bd1489c5_optimize(_self_, &((*((*(_13031_m))._field_Expr))._field_Model));
}



inline void _1bd1458d4_tuple(_1bd14245d_exprDeadCode* _self_, jule::Ptr<_1ece13980_TupleExprModel> _13424_m) {
	{
		auto expr = &((*(_13424_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c29a2aaa:;
		if (it != expr_end) {
			jule::Ptr<_1bc8108a7_Data> _13521_d = *it;
			{
				_1bd1489c5_optimize(_self_, &((*(_13521_d))._field_Model));
			}
			_iter_next_1c29a2aaa:;
			++it;
			goto _iter_begin_1c29a2aaa;
		}
		_iter_end_1c29a2aaa:;
	};
}



inline void _1bd145b8c_newCall(_1bd14245d_exprDeadCode* _self_, jule::Ptr<_1ece1460c_BuiltinNewCallExprModel> _14026_m) {
	if (((*(_14026_m))._field_Init != nullptr)) {
		_1bd1489c5_optimize(_self_, &((*(_14026_m))._field_Init));
	};
}



inline void _1bd145e45_outCall(_1bd14245d_exprDeadCode* _self_, jule::Ptr<_1ece13d59_BuiltinOutCallExprModel> _14626_m) {
	_1bd1489c5_optimize(_self_, &((*(_14626_m))._field_Expr));
}



inline void _1bd1461ed_outlnCall(_1bd14245d_exprDeadCode* _self_, jule::Ptr<_1ece14233_BuiltinOutlnCallExprModel> _15028_m) {
	_1bd1489c5_optimize(_self_, &((*(_15028_m))._field_Expr));
}



inline void _1bd1464a6_panicCall(_1bd14245d_exprDeadCode* _self_, jule::Ptr<_1ece149d6_BuiltinPanicCallExprModel> _15428_m) {
	_1bd1489c5_optimize(_self_, &((*(_15428_m))._field_Expr));
}



inline void _1bd14675e_assertCall(_1bd14245d_exprDeadCode* _self_, jule::Ptr<_1ece14e8c_BuiltinAssertCallExprModel> _15829_m) {
	_1bd1489c5_optimize(_self_, &((*(_15829_m))._field_Expr));
}



inline void _1bd146a17_errorCall(_1bd14245d_exprDeadCode* _self_, jule::Ptr<_1ece16a93_BuiltinErrorCallExprModel> _16228_m) {
	_1bd1489c5_optimize(_self_, &((*((*(_16228_m))._field_Err))._field_Model));
}



inline void _1bd146cc0_makeCall(_1bd14245d_exprDeadCode* _self_, jule::Ptr<_1ece15443_BuiltinMakeCallExprModel> _16627_m) {
	if (((*(_16627_m))._field_Len != nullptr)) {
		_1bd1489c5_optimize(_self_, &((*(_16627_m))._field_Len));
	};
	if (((*(_16627_m))._field_Cap != nullptr)) {
		_1bd1489c5_optimize(_self_, &((*(_16627_m))._field_Cap));
	};
}



inline void _1bd147078_appendCall(_1bd14245d_exprDeadCode* _self_, jule::Ptr<_1ece1581c_BuiltinAppendCallExprModel> _17529_m) {
	_1bd1489c5_optimize(_self_, &((*(_17529_m))._field_Dest));
	_1bd1489c5_optimize(_self_, &((*(_17529_m))._field_Elements));
}



inline void _1bd147331_lenCall(_1bd14245d_exprDeadCode* _self_, jule::Ptr<_1ece15b19_BuiltinLenCallExprModel> _18026_m) {
	_1bd1489c5_optimize(_self_, &((*((*(_18026_m))._field_Expr))._field_Model));
}



inline void _1bd1475d9_capCall(_1bd14245d_exprDeadCode* _self_, jule::Ptr<_1ece15e16_BuiltinCapCallExprModel> _18426_m) {
	_1bd1489c5_optimize(_self_, &((*((*(_18426_m))._field_Expr))._field_Model));
}



inline void _1bd147892_deleteCall(_1bd14245d_exprDeadCode* _self_, jule::Ptr<_1ece162e0_BuiltinDeleteCallExprModel> _18829_m) {
	_1bd1489c5_optimize(_self_, &((*((*(_18829_m))._field_Dest))._field_Model));
	if (((*(_18829_m))._field_Key != nullptr)) {
		_1bd1489c5_optimize(_self_, &((*((*(_18829_m))._field_Key))._field_Model));
	};
}



inline void _1bd147b4a_sizeof(_1bd14245d_exprDeadCode* _self_, jule::Ptr<_1ece1264e_SizeofExprModel> _19525_m) {
	_1bd1489c5_optimize(_self_, &((*(_19525_m))._field_Expr));
}



inline void _1bd147e03_alignof(_1bd14245d_exprDeadCode* _self_, jule::Ptr<_1ece172be_AlignofExprModel> _19926_m) {
	_1bd1489c5_optimize(_self_, &((*(_19926_m))._field_Expr));
}



inline void _1bd1481ab_integratedToStr(_1bd14245d_exprDeadCode* _self_, jule::Ptr<_1ece178b8_IntegratedToStrExprModel> _20334_m) {
	_1bd1489c5_optimize(_self_, &((*(_20334_m))._field_Expr));
}



inline void _1bd148464_free(_1bd14245d_exprDeadCode* _self_, jule::Ptr<_1ece1808e_FreeExprModel> _20723_m) {
	_1bd1489c5_optimize(_self_, &((*(_20723_m))._field_Expr));
}



inline void _1bd14871c_backendEmit(_1bd14245d_exprDeadCode* _self_, jule::Ptr<_1ece17c92_BackendEmitExprModel> _21130_m) {
	_1bd143bce_args(_self_, &((*(_21130_m))._field_Exprs));
}



inline void _1bd1489c5_optimize(_1bd14245d_exprDeadCode* _self_, jule::Any* _21528_model) {
	{
		auto &_match_expr{ (*(_21528_model)) };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1c29b1118:;
			{
				_1bd142d54_binary(_self_, (*(_21528_model)).cast_ptr<_1ece0d282_BinaryExprModel>(&__jule_any_type111));
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1c29b117e:;
			{
				_1bd14310c_unary(_self_, (*(_21528_model)).cast_ptr<_1ece0d65b_UnaryExprModel>(&__jule_any_type110));
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1c29b11e5:;
			{
				_1bd1433b5_structureLit(_self_, (*(_21528_model)).cast_ptr<_1ece0e030_StructLitExprModel>(&__jule_any_type94));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1c29b126c:;
			{
				_1bd14366d_allocStructure(_self_, (*(_21528_model)).cast_ptr<_1ece0e32c_AllocStructLitExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1c29b12e4:;
			{
				_1bd143926_casting(_self_, (*(_21528_model)).cast_ptr<_1ece0e8b0_CastingExprModel>(&__jule_any_type92));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1c29b136b:;
			{
				_1bd143e87_funcCall(_self_, (*(_21528_model)).cast_ptr<_1ece10262_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1c29b13e3:;
			{
				_1bd144240_slice(_self_, (*(_21528_model)).cast_ptr<_1ece1063b_SliceExprModel>(&__jule_any_type76));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1c29b146a:;
			{
				_1bd1444e8_array(_self_, (*(_21528_model)).cast_ptr<_1ece13683_ArrayExprModel>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1c29b14e2:;
			{
				_1bd1447a1_indexing(_self_, (*(_21528_model)).cast_ptr<_1ece10ae2_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1c29b1569:;
			{
				_1bd144a59_anonFunc(_self_, (*(_21528_model)).cast_ptr<_1ece10ebb_AnonFnExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1c29b15e1:;
			{
				_1bd144d12_mapExpr(_self_, (*(_21528_model)).cast_ptr<_1ece1184b_MapExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1c29b1668:;
			{
				_1bd1450ba_slicing(_self_, (*(_21528_model)).cast_ptr<_1ece11dce_SlicingExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1c29b16e0:;
			{
				_1bd145373_traitSub(_self_, (*(_21528_model)).cast_ptr<_1ece12462_TraitSubIdentExprModel>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1c29b1767:;
			{
				_1bd14562b_structureSub(_self_, (*(_21528_model)).cast_ptr<_1ece12d03_StructSubIdentExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1c29b17de:;
			{
				_1bd1458d4_tuple(_self_, (*(_21528_model)).cast_ptr<_1ece13980_TupleExprModel>(&__jule_any_type81));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1c29b1866:;
			{
				_1bd145e45_outCall(_self_, (*(_21528_model)).cast_ptr<_1ece13d59_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1c29b18dd:;
			{
				_1bd1461ed_outlnCall(_self_, (*(_21528_model)).cast_ptr<_1ece14233_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1c29b1965:;
			{
				_1bd145b8c_newCall(_self_, (*(_21528_model)).cast_ptr<_1ece1460c_BuiltinNewCallExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1c29b19dc:;
			{
				_1bd1464a6_panicCall(_self_, (*(_21528_model)).cast_ptr<_1ece149d6_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1c29b1a64:;
			{
				_1bd14675e_assertCall(_self_, (*(_21528_model)).cast_ptr<_1ece14e8c_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1c29b1adb:;
			{
				_1bd146a17_errorCall(_self_, (*(_21528_model)).cast_ptr<_1ece16a93_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1c29b1b63:;
			{
				_1bd146cc0_makeCall(_self_, (*(_21528_model)).cast_ptr<_1ece15443_BuiltinMakeCallExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1c29b1bda:;
			{
				_1bd147078_appendCall(_self_, (*(_21528_model)).cast_ptr<_1ece1581c_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1c29b1c62:;
			{
				_1bd147331_lenCall(_self_, (*(_21528_model)).cast_ptr<_1ece15b19_BuiltinLenCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1c29b1cd9:;
			{
				_1bd1475d9_capCall(_self_, (*(_21528_model)).cast_ptr<_1ece15e16_BuiltinCapCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1c29b1d61:;
			{
				_1bd147892_deleteCall(_self_, (*(_21528_model)).cast_ptr<_1ece162e0_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1c29b1dd8:;
			{
				_1bd147b4a_sizeof(_self_, (*(_21528_model)).cast_ptr<_1ece1264e_SizeofExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1c29b1e60:;
			{
				_1bd147e03_alignof(_self_, (*(_21528_model)).cast_ptr<_1ece172be_AlignofExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1c29b1ed7:;
			{
				_1bd1481ab_integratedToStr(_self_, (*(_21528_model)).cast_ptr<_1ece178b8_IntegratedToStrExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1c29b205e:;
			{
				_1bd148464_free(_self_, (*(_21528_model)).cast_ptr<_1ece1808e_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1c29b20d6:;
			{
				_1bd14871c_backendEmit(_self_, (*(_21528_model)).cast_ptr<_1ece17c92_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_1c29b0d71:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1bd14245d_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc2d5679_SwapExprModel _Src) {
	_Stream << "SwapExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc2d5a97_EmptyCompareExprModel _Src) {
	_Stream << "EmptyCompareExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Neg:" << _Src._field_Neg;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc2d5d94_RefExprModel _Src) {
	_Stream << "RefExprModel{";
	_Stream << "Var:" << _Src._field_Var;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc9c48d4_StrCompExprModel _Src) {
	_Stream << "StrCompExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "NotEq:" << _Src._field_NotEq;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc9c4e67_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc9c5264_UnsafeBinaryExprModel _Src) {
	_Stream << "UnsafeBinaryExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc9c5561_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc9c5990_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc9c5d69_AppendToSliceExprModel _Src) {
	_Stream << "AppendToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Slice:" << _Src._field_Slice;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1bc9c7024_scopeOptimizer> static__1bc9c7563_new(jule::Ptr<_1bc74261e_Scope> _4623_scope) {
	return jule::new_ptr<_1bc9c7024_scopeOptimizer>(_1bc9c7024_scopeOptimizer{._field_scope=_4623_scope});;
}



inline void _1bc9c781b_setCurrentStmt(_1bc9c7024_scopeOptimizer* _self_, jule::Any _5237_stmt) {
	(*((*(_self_))._field_scope))._field_Stmts[(*(_self_))._field_i]=(*(((jule::Any*)((&(_5237_stmt))))));
}



inline void _1bc9c7a19_removeCurrent(_1bc9c7024_scopeOptimizer* _self_) {
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*((*(_self_))._field_scope))._field_Stmts.slice(0LL, (*(_self_))._field_i),(*((*(_self_))._field_scope))._field_Stmts.slice(((*(_self_))._field_i + 1LL)));
}



inline void _1bc9c7cc2_optimizeData(_1bc9c7024_scopeOptimizer* _self_, jule::Ptr<_1bc8108a7_Data> _6135_d) {
	{
		auto &_match_expr{ (*(_6135_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1c2788b5a:;
			{
				jule::Ptr<_1ece10262_FnCallExprModel> _6417_m = (*(_6135_d))._field_Model.cast_ptr<_1ece10262_FnCallExprModel>(&__jule_any_type34);;
				if (_23b84b1c0_Production) {
					if (((!(_1ece2042b_IsBuiltin((*(_6417_m))._field_Func.ptr()))) && _1bc9cb37a_isStdPackage(&((*((*((*((*((*(_6417_m))._field_Func))._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("debug", 5)))) {
						_1bc9c781b_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
			}
		}
		_match_end_1c2788ae4:;
	};
	static__1bc9cd79a_optimize(&((*(_6135_d))._field_Model));
}



inline void _1bc9c807a_optimizeVar(_1bc9c7024_scopeOptimizer* _self_, jule::Ptr<_1bc7a750d_Var> _7634_v) {
	if (((*(_7634_v))._field_Value != nullptr)) {
		static__1bc9cd79a_optimize(&((*((*((*(_7634_v))._field_Value))._field_Data))._field_Model));
	};
}



inline void _1bc9c8333_optimizeConditional(_1bc9c7024_scopeOptimizer* _self_, jule::Ptr<_1bc743257_Conditional> _8242_c) {
	{
		auto expr = &((*(_8242_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c278d7a8:;
		if (it != expr_end) {
			jule::Ptr<_1bc742a3c_If> _8321_elif = *it;
			{
				static__1bc9cd79a_optimize(&((*(_8321_elif))._field_Expr));
				_1bc9cac09_optimizeChild(_self_, (*(_8321_elif))._field_Scope);
			}
			_iter_next_1c278d7a8:;
			++it;
			goto _iter_begin_1c278d7a8;
		}
		_iter_end_1c278d7a8:;
	};
	if (((*(_8242_c))._field_Default != nullptr)) {
		_1bc9cac09_optimizeChild(_self_, (*((*(_8242_c))._field_Default))._field_Scope);
	};
	if ((!(_1bc9d82aa_Cond))) {
		return;;
	};
	jule::Bool _9513_constCase = false;;
	{
		auto expr = &((*(_8242_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c27909db:;
		if (it != expr_end) {
			jule::I64 _9814_i = it - expr->begin();
			jule::Ptr<_1bc742a3c_If> _9821_elif = *it;
			{
				if ((!(_1bc9cb688_isConstantValidConditionalCase(&(_9821_elif))))) {
					goto _iter_next_1c27909db;
				};
				_9513_constCase=true;
				(*(_8242_c))._field_Elifs=(*(_8242_c))._field_Elifs.slice(0LL, _9814_i);
				(*(_8242_c))._field_Default=jule::new_ptr<_1bc742d39_Else>(_1bc742d39_Else{._field_Scope=(*(_9821_elif))._field_Scope});
				goto _iter_end_1c27909db;
			}
			_iter_next_1c27909db:;
			++it;
			_9814_i++;
			goto _iter_begin_1c27909db;
		}
		_iter_end_1c27909db:;
	};
	if (((*(_8242_c))._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1bc742a3c_If>* _11513_i = (&((*(_8242_c))._field_Elifs[0LL]));;
	jule::Ptr<_1bc742a3c_If>* _1169_end = (&((*(_8242_c))._field_Elifs[((*(_8242_c))._field_Elifs.len() - 1LL)]));;
	for (; (_11513_i <= _1169_end); (_11513_i)++) {
		{
			{
				if (_1bc9cc05c_isUnreachableConditionalCase(&((*(_11513_i))))) {
					(*(_11513_i))=nullptr;
				};
			};
		}
	_iter_next_1c279412c:;
	}
	_iter_end_1c279412c:;;
	if (((*(_8242_c))._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_9513_constCase))) {
		return;;
	};
	jule::I64 _13413_only = -1LL;;
	{
		auto expr = &((*(_8242_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2795947:;
		if (it != expr_end) {
			jule::I64 _13513_j = it - expr->begin();
			jule::Ptr<_1bc742a3c_If> _13516_elif = *it;
			{
				if ((_13516_elif != nullptr)) {
					if ((_13413_only != -1LL)) {
						return;;
					};
					_13413_only=_13513_j;
				};
			}
			_iter_next_1c2795947:;
			++it;
			_13513_j++;
			goto _iter_begin_1c2795947;
		}
		_iter_end_1c2795947:;
	};
	if ((_13413_only != -1LL)) {
		_1bc9c781b_setCurrentStmt(_self_, jule::Any((*((*(_8242_c))._field_Elifs[_13413_only]))._field_Scope, &__jule_any_type22));
	};
}



inline void _1bc9c8751_buildDefaultConstantTrueCase(_1bc9c7024_scopeOptimizer* _self_, jule::Ptr<_1bc74738d_Case> _15151_case, jule::I64* _15169_i, jule::Ptr<_1bc746755_Match>* _15182_m) {
	(*(_15151_case))._field_Exprs=nullptr;
	jule::I64 _1539_start = (*(_15169_i));;
	_julec_label_1c2798351:;
	for (;;) {
		{
			if (((*((*(_15151_case))._field_Scope))._field_Stmts.len() == 0LL)) {
				goto _iter_end_1c2798384;
			};
			jule::Any *_15918_stmt = &((*((*(_15151_case))._field_Scope))._field_Stmts[((*((*(_15151_case))._field_Scope))._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_15918_stmt)) };
				
				if (_match_expr.type == &__jule_any_type48) {
					_case_begin_1c279a375:;
					{
						((*(_15169_i)))++;
						if (((*(_15169_i)) >= (*((*(_15182_m))))._field_Cases.len())) {
							(*(_15918_stmt))=jule::Any((*((*((*(_15182_m))))._field_Default))._field_Scope, &__jule_any_type22);
							goto _iter_end_1c2798384;
						};
						_15151_case=(*((*(_15182_m))))._field_Cases[(*(_15169_i))];
						(*(_15918_stmt))=jule::Any((*(_15151_case))._field_Scope, &__jule_any_type22);
					}
				}
				else {
					_case_begin_1c279a4da:;
					{
						goto _iter_end_1c2798384;
					}
				}
				_match_end_1c279a485:;
			};
		}
	_iter_next_1c2798384:;
	}
	_iter_end_1c2798384:;;
	(*((*(_15182_m))))._field_Default=(*((*(_15182_m))))._field_Cases[_1539_start];
	(*((*(_15182_m))))._field_Cases=(*((*(_15182_m))))._field_Cases.slice(0LL, _1539_start);
}



inline void _1bc9c8a09_optimizeMatch(_1bc9c7024_scopeOptimizer* _self_, jule::Ptr<_1bc746755_Match> _17736_m) {
	{
		auto expr = &((*(_17736_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c279d125:;
		if (it != expr_end) {
			jule::Ptr<_1bc74738d_Case> _17821_case = *it;
			{
				{
					auto expr = &((*(_17821_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c279da71:;
					if (it != expr_end) {
						jule::Ptr<_1bc8108a7_Data> _17925_expr = *it;
						{
							static__1bc9cd79a_optimize(&((*(_17925_expr))._field_Model));
						}
						_iter_next_1c279da71:;
						++it;
						goto _iter_begin_1c279da71;
					}
					_iter_end_1c279da71:;
				};
				_1bc9cac09_optimizeChild(_self_, (*(_17821_case))._field_Scope);
			}
			_iter_next_1c279d125:;
			++it;
			goto _iter_begin_1c279d125;
		}
		_iter_end_1c279d125:;
	};
	if (((*(_17736_m))._field_Default != nullptr)) {
		_1bc9cac09_optimizeChild(_self_, (*((*(_17736_m))._field_Default))._field_Scope);
	};
	if ((!(_1bc9d82aa_Cond))) {
		return;;
	};
	jule::Bool _19213_constCase = false;;
	{
		auto expr = &((*(_17736_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c27a0985:;
		if (it != expr_end) {
			jule::I64 _19518_i = it - expr->begin();
			jule::Ptr<_1bc74738d_Case> _19525_case = *it;
			{
				if ((!(_1bc9cbc93_isConstantValidMatchCase(&(_19525_case))))) {
					goto _iter_next_1c27a0985;
				};
				_19213_constCase=true;
				_1bc9c8751_buildDefaultConstantTrueCase(_self_, _19525_case, &(_19518_i), &(_17736_m));
				goto _iter_end_1c27a0985;
			}
			_iter_next_1c27a0985:;
			++it;
			_19518_i++;
			goto _iter_begin_1c27a0985;
		}
		_iter_end_1c27a0985:;
	};
	if (((*(_17736_m))._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1bc74738d_Case>* _20913_i = (&((*(_17736_m))._field_Cases[0LL]));;
	jule::Ptr<_1bc74738d_Case>* _2109_end = (&((*(_17736_m))._field_Cases[((*(_17736_m))._field_Cases.len() - 1LL)]));;
	for (; (_20913_i <= _2109_end); (_20913_i)++) {
		{
			{
				if (_1bc9cc326_isUnreachableMatchCase(&((*(_20913_i))))) {
					(*(_20913_i))=nullptr;
				};
			};
		}
	_iter_next_1c27a359d:;
	}
	_iter_end_1c27a359d:;;
	if ((!(_19213_constCase))) {
		return;;
	};
	jule::I64 _22413_only = -1LL;;
	{
		auto expr = &((*(_17736_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c27a479c:;
		if (it != expr_end) {
			jule::I64 _22513_j = it - expr->begin();
			jule::Ptr<_1bc74738d_Case> _22516_case = *it;
			{
				if ((_22516_case != nullptr)) {
					if ((_22413_only != -1LL)) {
						return;;
					};
					_22413_only=_22513_j;
				};
			}
			_iter_next_1c27a479c:;
			++it;
			_22513_j++;
			goto _iter_begin_1c27a479c;
		}
		_iter_end_1c27a479c:;
	};
	if ((_22413_only != -1LL)) {
		_1bc9c781b_setCurrentStmt(_self_, jule::Any((*((*(_17736_m))._field_Cases[_22413_only]))._field_Scope, &__jule_any_type22));
	};
}



inline void _1bc9c8cb2_optimizeRangeIter(_1bc9c7024_scopeOptimizer* _self_, jule::Ptr<_1bc744456_RangeIter> _24140_it) {
	static__1bc9cd79a_optimize(&((*((*(_24140_it))._field_Expr))._field_Model));
	_1bc9cac09_optimizeChild(_self_, (*(_24140_it))._field_Scope);
}



inline void _1bc9c906a_optimizeWhileIter(_1bc9c7024_scopeOptimizer* _self_, jule::Ptr<_1bc743a0a_WhileIter> _24640_it) {
	static__1bc9cd79a_optimize(&((*(_24640_it))._field_Expr));
	_1bc9ca951_optimizeStmt(_self_, (*(_24640_it))._field_Next);
	_1bc9cac09_optimizeChild(_self_, (*(_24640_it))._field_Scope);
}



inline jule::Bool _1bc9c93ab_substr(_1bc9c7024_scopeOptimizer* _self_, jule::Ptr<_1bc745c1b_Assign> _25229_a) {
	if (((*((*(_25229_a))._field_Op))._field_Id != static_cast<jule::U64>(71LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_25229_a))._field_R))._field_Model };
		
		if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1c27a9609:;
			{
				jule::Ptr<_1ece11dce_SlicingExprModel> _25817_sem = (*((*(_25229_a))._field_R))._field_Model.cast_ptr<_1ece11dce_SlicingExprModel>(&__jule_any_type91);;
				if (((*(_25817_sem))._field_Expr == (*((*(_25229_a))._field_L))._field_Model)) {
					_1bc9c781b_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1bc9c4e67_MutSlicingExprModel>(_1bc9c4e67_MutSlicingExprModel{._field_Token=(*(_25817_sem))._field_Token, ._field_Expr=(*(_25817_sem))._field_Expr, ._field_Left=(*(_25817_sem))._field_Left, ._field_Right=(*(_25817_sem))._field_Right}), &__jule_any_type120));
					return true;;
				};
			}
		}
		_match_end_1c27a9593:;
	};
	return false;;
}



inline jule::Bool _1bc9c96ec_strAssign(_1bc9c7024_scopeOptimizer* _self_, jule::Ptr<_1bc745c1b_Assign> _27232_a) {
	if ((!(_1bc9d8574_Str))) {
		return false;;
	};
	jule::Ptr<_1bc848c97_Prim> _2769_lp = _1bc84381e_Prim((*((*(_27232_a))._field_L))._field_Kind.ptr());;
	if (((_2769_lp == nullptr) || (!(_1bc84c22e_IsStr(_2769_lp.ptr()))))) {
		return false;;
	};
	return _1bc9c93ab_substr(_self_, _27232_a);;
}



inline jule::Bool _1bc9c9a3d_sliceAssign(_1bc9c7024_scopeOptimizer* _self_, jule::Ptr<_1bc745c1b_Assign> _28334_a) {
	if (((!(_1bc9d883d_Slice)) || (_1bc844875_Slc((*((*(_28334_a))._field_L))._field_Kind.ptr()) == nullptr))) {
		return false;;
	};
	return _1bc9c93ab_substr(_self_, _28334_a);;
}



inline void _1bc9c9ce6_optimizeAssign(_1bc9c7024_scopeOptimizer* _self_, jule::Ptr<_1bc745c1b_Assign> _29137_assign) {
	if ((((*((*(_29137_assign))._field_Op))._field_Id == static_cast<jule::U64>(71LLU)) && _1bc2d4a0d_equalModels((*((*(_29137_assign))._field_L))._field_Model, (*((*(_29137_assign))._field_R))._field_Model))) {
		_1bc9c7a19_removeCurrent(_self_);
		((*(_self_))._field_i)--;
		return;;
	};
	{
		
		if (_1bc9c96ec_strAssign(_self_, _29137_assign) || _1bc9c9a3d_sliceAssign(_self_, _29137_assign)) {
			_case_begin_1c27b19b8:;
			{
				return;;
			}
		}
		_match_end_1c27b0b93:;
	};
	static__1bc9cd79a_optimize(&((*((*(_29137_assign))._field_L))._field_Model));
	static__1bc9cd79a_optimize(&((*((*(_29137_assign))._field_R))._field_Model));
	{
		auto &_match_expr{ (*((*(_29137_assign))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(43LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1c27b3327:;
			{
				if (((!(_1bc9d7584_Math)) || (_1bc844d92_Struct((*((*(_29137_assign))._field_L))._field_Kind.ptr()) != nullptr))) {
					goto _match_end_1c27b32b1;
				};
				jule::U64 _31413_oldId = 0LLU;;
				jule::Str _31420_oldKind;;
				({
					jule::U64 ___jule_assign_arg = (*((*(_29137_assign))._field_Op))._field_Id;
					jule::Str _1___jule_assign_arg = (*((*(_29137_assign))._field_Op))._field_Kind;
					_31413_oldId = ___jule_assign_arg;
					_31420_oldKind = _1___jule_assign_arg;
				});
				{
					auto &_match_expr{ (*((*(_29137_assign))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(43LLU)) {
						_case_begin_1c27b5e62:;
						{
							(*((*(_29137_assign))._field_Op))._field_Id=static_cast<jule::U64>(63LLU);
							(*((*(_29137_assign))._field_Op))._field_Kind=jule::Str::lit("/", 1);
						}
					}
					else if (_match_expr == static_cast<jule::U64>(44LLU)) {
						_case_begin_1c27b5ec8:;
						{
							(*((*(_29137_assign))._field_Op))._field_Id=static_cast<jule::U64>(64LLU);
							(*((*(_29137_assign))._field_Op))._field_Kind=jule::Str::lit("%", 1);
						}
					}
					else {
						_case_begin_1c27b5add:;
						{
							jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/opt/scope.jule:323:17"));;
						}
					}
					_match_end_1c27b5a88:;
				};
				jule::Any _32517_model = jule::Any(jule::new_ptr<_1ece0d282_BinaryExprModel>(_1ece0d282_BinaryExprModel{._field_Left=(*(_29137_assign))._field_L, ._field_Right=(*(_29137_assign))._field_R, ._field_Op=(*(_29137_assign))._field_Op}), &__jule_any_type111);;
				static__1bc9cd79a_optimize(&(_32517_model));
				{
					auto &_match_expr{ _32517_model };
					
					if (_match_expr.type == &__jule_any_type111) {
						_case_begin_1c27b56e2:;
						{
							(*(_29137_assign))._field_R=jule::new_ptr<_1ece0cc87_OperandExprModel>((*((*(_29137_assign))._field_R)));
							(*((*(_29137_assign))._field_Op))._field_Id=static_cast<jule::U64>(71LLU);
							(*((*(_29137_assign))._field_Op))._field_Kind=jule::Str::lit("=", 1);
							(*((*(_29137_assign))._field_R))._field_Model=_32517_model;
							return;;
						}
					}
					_match_end_1c27b568c:;
				};
				(*((*(_29137_assign))._field_Op))._field_Id=_31413_oldId;
				(*((*(_29137_assign))._field_Op))._field_Kind=_31420_oldKind;
				return;;
			}
		}
		_match_end_1c27b32b1:;
	};
	if (_1bc9d7276_Append) {
		{
			auto &_match_expr{ (*((*(_29137_assign))._field_R))._field_Model };
			
			if (_match_expr.type == &__jule_any_type26) {
				_case_begin_1c27bbb27:;
				{
					jule::Ptr<_1ece1581c_BuiltinAppendCallExprModel> _34721_m = (*((*(_29137_assign))._field_R))._field_Model.cast_ptr<_1ece1581c_BuiltinAppendCallExprModel>(&__jule_any_type26);;
					if ((!(_1bc9d64c8_areSameLvalueExprModel(&((*((*(_29137_assign))._field_L))._field_Model), &((*(_34721_m))._field_Dest))))) {
						return;;
					};
					{
						auto &_match_expr{ (*(_34721_m))._field_Elements };
						
						if (_match_expr.type == &__jule_any_type76) {
							_case_begin_1c27bd046:;
							{
								_1bc9c781b_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1bc9c5990_PushToSliceExprModel>(_1bc9c5990_PushToSliceExprModel{._field_Dest=(*(_34721_m))._field_Dest, ._field_Elems=(*(_34721_m))._field_Elements.cast_ptr<_1ece1063b_SliceExprModel>(&__jule_any_type76)}), &__jule_any_type121));
							}
						}
						else {
							_case_begin_1c27bdb18:;
							{
								_1bc9c781b_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1bc9c5d69_AppendToSliceExprModel>(_1bc9c5d69_AppendToSliceExprModel{._field_Dest=(*((*(_29137_assign))._field_L))._field_Model, ._field_Slice=(*(_34721_m))._field_Elements}), &__jule_any_type122));
							}
						}
						_match_end_1c27bdab3:;
					};
				}
			}
			_match_end_1c27bbab1:;
		};
	};
}



inline jule::Bool _1bc9ca137_tryOptimizeSwap(_1bc9c7024_scopeOptimizer* _self_, jule::Ptr<_1bc7460e5_MultiAssign>* _36939_assign) {
	if (((!(_1bc9d8b07_Assign)) || ((*((*(_36939_assign))))._field_L.len() != 2LL))) {
		return false;;
	};
	jule::Ptr<_1ece13980_TupleExprModel> _37317_tup;;
	{
		auto &_match_expr{ (*((*(_36939_assign))))._field_R };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1c27c1764:;
			{
				_37317_tup=(*((*(_36939_assign))))._field_R.cast_ptr<_1ece13980_TupleExprModel>(&__jule_any_type81);
			}
		}
		_match_end_1c27c16ed:;
	};
	if (((_37317_tup == nullptr) || ((*(_37317_tup))._field_Datas.len() != 2LL))) {
		return false;;
	};
	if ((_1bc2d4a0d_equalModels((*((*((*(_36939_assign))))._field_L[0LL]))._field_Model, (*((*(_37317_tup))._field_Datas[0LL]))._field_Model) && _1bc2d4a0d_equalModels((*((*((*(_36939_assign))))._field_L[1LL]))._field_Model, (*((*(_37317_tup))._field_Datas[1LL]))._field_Model))) {
		_1bc9c7a19_removeCurrent(_self_);
		((*(_self_))._field_i)--;
		return true;;
	};
	if (((!(_1bc2d4a0d_equalModels((*((*((*(_36939_assign))))._field_L[0LL]))._field_Model, (*((*(_37317_tup))._field_Datas[1LL]))._field_Model))) || (!(_1bc2d4a0d_equalModels((*((*((*(_36939_assign))))._field_L[1LL]))._field_Model, (*((*(_37317_tup))._field_Datas[0LL]))._field_Model))))) {
		return false;;
	};
	jule::Ptr<_1bc2d5679_SwapExprModel> _39513_model = jule::new_ptr<_1bc2d5679_SwapExprModel>(_1bc2d5679_SwapExprModel{._field_Left=(*((*(_36939_assign))))._field_L[0LL], ._field_Right=(*((*(_36939_assign))))._field_L[1LL]});;
	static__1bc9cd79a_optimize(&((*((*(_39513_model))._field_Left))._field_Model));
	static__1bc9cd79a_optimize(&((*((*(_39513_model))._field_Right))._field_Model));
	_1bc9c781b_setCurrentStmt(_self_, jule::Any(_39513_model, &__jule_any_type123));
	return true;;
}



inline void _1bc9ca3e0_optimizeMultiAssign(_1bc9c7024_scopeOptimizer* _self_, jule::Ptr<_1bc7460e5_MultiAssign> _40542_assign) {
	if (_1bc9ca137_tryOptimizeSwap(_self_, &(_40542_assign))) {
		return;;
	};
	{
		auto expr = &((*(_40542_assign))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c27c920b:;
		if (it != expr_end) {
			jule::Ptr<_1bc8108a7_Data> _41021_l = *it;
			{
				if ((_41021_l != nullptr)) {
					static__1bc9cd79a_optimize(&((*(_41021_l))._field_Model));
				};
			}
			_iter_next_1c27c920b:;
			++it;
			goto _iter_begin_1c27c920b;
		}
		_iter_end_1c27c920b:;
	};
	static__1bc9cd79a_optimize(&((*(_40542_assign))._field_R));
}



inline void _1bc9ca698_optimizeRet(_1bc9c7024_scopeOptimizer* _self_, jule::Ptr<_1bc747d1c_RetSt> _41834_r) {
	static__1bc9cd79a_optimize(&((*(_41834_r))._field_Expr));
}



inline void _1bc9ca951_optimizeStmt(_1bc9c7024_scopeOptimizer* _self_, jule::Any _42235_stmt) {
	{
		auto &_match_expr{ _42235_stmt };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1c27cad9a:;
			{
				_1bc9cac09_optimizeChild(_self_, _42235_stmt.cast_ptr<_1bc74261e_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1c27cae11:;
			{
				_1bc9c7cc2_optimizeData(_self_, _42235_stmt.cast_ptr<_1bc8108a7_Data>(&__jule_any_type24));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c27cae77:;
			{
				_1bc9c807a_optimizeVar(_self_, _42235_stmt.cast_ptr<_1bc7a750d_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1c27caedd:;
			{
				_1bc9c8333_optimizeConditional(_self_, _42235_stmt.cast_ptr<_1bc743257_Conditional>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1c27cb054:;
			{
				_1bc9c8cb2_optimizeRangeIter(_self_, _42235_stmt.cast_ptr<_1bc744456_RangeIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1c27cb0ba:;
			{
				_1bc9c906a_optimizeWhileIter(_self_, _42235_stmt.cast_ptr<_1bc743a0a_WhileIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1c27cb142:;
			{
				_1bc9cac09_optimizeChild(_self_, (*(_42235_stmt.cast_ptr<_1bc743554_InfIter>(&__jule_any_type36)))._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1c27cb1b9:;
			{
				_1bc9c9ce6_optimizeAssign(_self_, _42235_stmt.cast_ptr<_1bc745c1b_Assign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1c27cb241:;
			{
				_1bc9ca3e0_optimizeMultiAssign(_self_, _42235_stmt.cast_ptr<_1bc7460e5_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1c27cb2b8:;
			{
				_1bc9c8a09_optimizeMatch(_self_, _42235_stmt.cast_ptr<_1bc746755_Match>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1c27cb340:;
			{
				_1bc9ca698_optimizeRet(_self_, _42235_stmt.cast_ptr<_1bc747d1c_RetSt>(&__jule_any_type50));
			}
		}
		_match_end_1c27cac68:;
	};
}



inline void _1bc9cac09_optimizeChild(_1bc9c7024_scopeOptimizer* _self_, jule::Ptr<_1bc74261e_Scope> _44936_child) {
	jule::Ptr<_1bc9c7024_scopeOptimizer> _45013_so = static__1bc9c7563_new(_44936_child);;
	_1bc9cae07_optimize(_45013_so.ptr());
}



inline void _1bc9cae07_optimize(_1bc9c7024_scopeOptimizer* _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*(_self_))._field_i < (*((*(_self_))._field_scope))._field_Stmts.len()); ((*(_self_))._field_i)++) {
		{
			_1bc9ca951_optimizeStmt(_self_, (*((*(_self_))._field_scope))._field_Stmts[(*(_self_))._field_i]);
		}
	_iter_next_1c27d205a:;
	}
	_iter_end_1c27d205a:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc9c7024_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__1bc9cd79a_optimize(jule::Any* _5629_model) {
	if (_1bd14908b_exprEnabled) {
		jule::Ptr<_1bc9cd1b2_exprOptimizer> _5917_exop = jule::new_ptr<_1bc9cd1b2_exprOptimizer>(_1bc9cd1b2_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)(_5629_model))});;
		_1bc9d5b8c_do(_5917_exop.ptr());
	};
}



inline jule::Bool _1bc9cdadb_selfCmpCond(_1bc9cd1b2_exprOptimizer* _self_, jule::Ptr<_1ece0d282_BinaryExprModel>* _6631_m) {
	if ((!(_1bc2d4a0d_equalModels((*((*((*(_6631_m))))._field_Left))._field_Model, (*((*((*(_6631_m))))._field_Right))._field_Model)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_6631_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1c27e0a3b:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__230d58d59_NewBool(true), &__jule_any_type19);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1c27e0aa2:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__230d58d59_NewBool(false), &__jule_any_type19);
				return true;;
			}
		}
		else {
			_case_begin_1c27e09c5:;
			{
				return false;;
			}
		}
		_match_end_1c27e0970:;
	};
}



inline jule::Bool _1bc9cde2c_boolCond(_1bc9cd1b2_exprOptimizer* _self_, jule::Ptr<_1ece0d282_BinaryExprModel>* _9028_m) {
	jule::Ptr<_1bc848c97_Prim> _919_lp = _1bc84381e_Prim((*((*((*(_9028_m))))._field_Left))._field_Kind.ptr());;
	if (((_919_lp == nullptr) || (!(_1bc84be98_IsBool(_919_lp.ptr()))))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_9028_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1c27e4b1c:;
			{
				std::swap((*((*(_9028_m))))._field_Left, (*((*(_9028_m))))._field_Right);
			}
		}
		else {
			_case_begin_1c27e4204:;
			{
				{
					auto &_match_expr{ (*((*((*(_9028_m))))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1c27e3511:;
						{
							goto _match_end_1c27e4a0c;
						}
					}
					else {
						_case_begin_1c27e4a62:;
						{
							return false;;
						}
					}
					_match_end_1c27e4a0c:;
				};
			}
		}
		_match_end_1c27e419e:;
	};
	jule::Ptr<_230d58386_Const> _10813_c = (*((*((*(_9028_m))))._field_Right))._field_Model.cast_ptr<_230d58386_Const>(&__jule_any_type19);;
	{
		auto &_match_expr{ (*((*((*(_9028_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1c27e6aca:;
			{
				if (_230d5a278_ReadBool(_10813_c.ptr())) {
					(*((*(_self_))._field_model))=(*((*((*(_9028_m))))._field_Left))._field_Model;
				} else {
					_230d5b862_SetBool(_10813_c.ptr(), false);
					(*((*(_self_))._field_model))=jule::Any(_10813_c, &__jule_any_type19);
				};
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1c27e6b41:;
			{
				if (_230d5a278_ReadBool(_10813_c.ptr())) {
					_230d5b862_SetBool(_10813_c.ptr(), true);
					(*((*(_self_))._field_model))=jule::Any(_10813_c, &__jule_any_type19);
				} else {
					(*((*(_self_))._field_model))=(*((*((*(_9028_m))))._field_Left))._field_Model;
				};
				return true;;
			}
		}
		else {
			_case_begin_1c27e6a64:;
		}
		_match_end_1c27e6a0e:;
	};
	return false;;
}



inline jule::Bool _1bc9ce26d_strCond(_1bc9cd1b2_exprOptimizer* _self_, jule::Ptr<_1ece0d282_BinaryExprModel> _14326_m) {
	jule::Ptr<_1bc848c97_Prim> _1449_lp = _1bc84381e_Prim((*((*(_14326_m))._field_Left))._field_Kind.ptr());;
	if (((_1449_lp == nullptr) || (!(_1bc84c22e_IsStr(_1449_lp.ptr()))))) {
		return false;;
	};
	if ((((*((*(_14326_m))._field_Op))._field_Id != static_cast<jule::U64>(50LLU)) && ((*((*(_14326_m))._field_Op))._field_Id != static_cast<jule::U64>(51LLU)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_14326_m))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1c2ab94da:;
			{
				std::swap((*(_14326_m))._field_Left, (*(_14326_m))._field_Right);
			}
		}
		else {
			_case_begin_1c2ab8ac2:;
			{
				{
					auto &_match_expr{ (*((*(_14326_m))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1c2ab7719:;
						{
							goto _match_end_1c2ab93ca;
						}
					}
					else {
						_case_begin_1c2ab9430:;
						{
							return false;;
						}
					}
					_match_end_1c2ab93ca:;
				};
			}
		}
		_match_end_1c2ab8a6c:;
	};
	jule::Ptr<_230d58386_Const> _16413_c = (*((*(_14326_m))._field_Right))._field_Model.cast_ptr<_230d58386_Const>(&__jule_any_type19);;
	{
		auto &_match_expr{ (*((*(_14326_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1c2abb3dd:;
			{
				if ((_230d5a50e_ReadStr(_16413_c.ptr())).empty()) {
					jule::Any _16821_model = jule::Any(jule::new_ptr<_1bc2d5a97_EmptyCompareExprModel>(_1bc2d5a97_EmptyCompareExprModel{._field_Expr=(*((*(_14326_m))._field_Left))._field_Model, ._field_Neg=false}), &__jule_any_type124);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_16821_model))))));
					goto _match_end_1c2abb366;
				};
				jule::Any _17517_model = jule::Any(jule::new_ptr<_1bc9c48d4_StrCompExprModel>(_1bc9c48d4_StrCompExprModel{._field_Left=(*((*(_14326_m))._field_Left))._field_Model, ._field_Right=_16413_c, ._field_NotEq=false}), &__jule_any_type125);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_17517_model))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1c2abb465:;
			{
				if ((_230d5a50e_ReadStr(_16413_c.ptr())).empty()) {
					jule::Any _18321_model = jule::Any(jule::new_ptr<_1bc2d5a97_EmptyCompareExprModel>(_1bc2d5a97_EmptyCompareExprModel{._field_Expr=(*((*(_14326_m))._field_Left))._field_Model, ._field_Neg=true}), &__jule_any_type124);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_18321_model))))));
					goto _match_end_1c2abb366;
				};
				jule::Any _19017_model = jule::Any(jule::new_ptr<_1bc9c48d4_StrCompExprModel>(_1bc9c48d4_StrCompExprModel{._field_Left=(*((*(_14326_m))._field_Left))._field_Model, ._field_Right=_16413_c, ._field_NotEq=true}), &__jule_any_type125);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_19017_model))))));
			}
		}
		_match_end_1c2abb366:;
	};
	return true;;
}



inline jule::Bool _1bc9ce724_tryNeutralElement1(_1bc9cd1b2_exprOptimizer* _self_, jule::Ptr<_1ece0d282_BinaryExprModel>* _20038_m, jule::Ptr<_230d58386_Const> _20063_c, jule::Ptr<_1ece0cc87_OperandExprModel>* _20075_nc) {
	if (_230d5cb0a_IsStr(_20063_c.ptr())) {
		if ((!(_1bc9d8574_Str))) {
			return false;;
		};
		if (((_230d5a50e_ReadStr(_20063_c.ptr())).empty() && ((*((*((*(_20038_m))))._field_Op))._field_Id == static_cast<jule::U64>(60LLU)))) {
			(*((*(_self_))._field_model))=(*((*(_20075_nc))))._field_Model;
			return true;;
		};
		return false;;
	};
	if (((!(_1bc9d7584_Math)) || (_230d5b048_AsF64(_20063_c.ptr()) != 0LL))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_20038_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1c2ac4b99:;
			{
				if (((*(_20075_nc)) == (*((*(_20038_m))))._field_Left)) {
					(*((*(_self_))._field_model))=(*((*(_20075_nc))))._field_Model;
					return true;;
				};
				(*((*(_self_))._field_model))=jule::Any(_20063_c, &__jule_any_type19);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1c2ac5848:;
			{
				_230d5b301_SetI64(_20063_c.ptr(), 0LL);
				(*((*(_self_))._field_model))=jule::Any(_20063_c, &__jule_any_type19);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1c2ac58ae:;
			{
				(*((*(_self_))._field_model))=(*((*(_20075_nc))))._field_Model;
				return true;;
			}
		}
		_match_end_1c2ac5738:;
	};
	return false;;
}



inline jule::Bool _1bc9cea65_tryNeutralElement(_1bc9cd1b2_exprOptimizer* _self_, jule::Ptr<_1ece0d282_BinaryExprModel>* _24437_m) {
	{
		auto &_match_expr{ (*((*((*(_24437_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1c2ac8b04:;
			{
				jule::Ptr<_230d58386_Const> _24817_c = (*((*((*(_24437_m))))._field_Left))._field_Model.cast_ptr<_230d58386_Const>(&__jule_any_type19);;
				return _1bc9ce724_tryNeutralElement1(_self_, _24437_m, _24817_c, &((*((*(_24437_m))))._field_Right));;
			}
		}
		_match_end_1c2ac8a8d:;
	};
	{
		auto &_match_expr{ (*((*((*(_24437_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1c2ac9bd2:;
			{
				jule::Ptr<_230d58386_Const> _25317_c = (*((*((*(_24437_m))))._field_Right))._field_Model.cast_ptr<_230d58386_Const>(&__jule_any_type19);;
				return _1bc9ce724_tryNeutralElement1(_self_, _24437_m, _25317_c, &((*((*(_24437_m))))._field_Left));;
			}
		}
		_match_end_1c2ac9b7c:;
	};
	return false;;
}



inline void _1bc9ced1d_binary(_1bc9cd1b2_exprOptimizer* _self_, jule::Ptr<_1ece0d282_BinaryExprModel> _25925_m) {
	static__1bc9cd79a_optimize(&((*((*(_25925_m))._field_Left))._field_Model));
	static__1bc9cd79a_optimize(&((*((*(_25925_m))._field_Right))._field_Model));
	if (_1bc9d82aa_Cond) {
		{
			
			if (_1bc9ce26d_strCond(_self_, _25925_m) || _1bc9cde2c_boolCond(_self_, &(_25925_m)) || _1bc9cdadb_selfCmpCond(_self_, &(_25925_m))) {
				_case_begin_1c2accab4:;
				{
					return;;
				}
			}
			_match_end_1c2acc9e8:;
		};
	};
	if (_1bc9cea65_tryNeutralElement(_self_, &(_25925_m))) {
		return;;
	};
	if ((!(_1bc9d7584_Math))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_25925_m))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1c2acd91c:;
			{
				goto _match_end_1c2acdd18;
			}
		}
		else {
			_case_begin_1c2acdd6d:;
			{
				return;;
			}
		}
		_match_end_1c2acdd18:;
	};
	jule::Ptr<_1bc848c97_Prim> _2929_lp = _1bc84381e_Prim((*((*(_25925_m))._field_Left))._field_Kind.ptr());;
	if ((_2929_lp == nullptr)) {
		return;;
	};
	jule::Ptr<_1bc848c97_Prim> _2969_rp = _1bc84381e_Prim((*((*(_25925_m))._field_Right))._field_Kind.ptr());;
	if ((_2969_rp == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_25925_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1c2ad18cb:;
			{
				jule::Bool _30313_ok = false;;
				jule::U64 _30317_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1bc9d6110_checkForBitShiftOpt(&((*(_25925_m))._field_Left), &((*(_25925_m))._field_Right));
					_30313_ok = __jule_assign_result.__jule_result_arg0;
					_30317_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_30313_ok) {
					(*((*(_25925_m))._field_Op))._field_Id=static_cast<jule::U64>(56LLU);
					(*((*(_25925_m))._field_Op))._field_Kind=jule::Str::lit("<<", 2);
					jule::Ptr<_230d58386_Const> _30721_c = (*((*(_25925_m))._field_Right))._field_Model.cast_ptr<_230d58386_Const>(&__jule_any_type19);;
					_230d5b5a9_SetU64(_30721_c.ptr(), _30317_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1c2ad1524:;
			{
				jule::Bool _31413_ok = false;;
				jule::U64 _31417_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1bc9d6110_checkForBitShiftOpt(&((*(_25925_m))._field_Left), &((*(_25925_m))._field_Right));
					_31413_ok = __jule_assign_result.__jule_result_arg0;
					_31417_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_31413_ok) {
					(*((*(_25925_m))._field_Op))._field_Id=static_cast<jule::U64>(57LLU);
					(*((*(_25925_m))._field_Op))._field_Kind=jule::Str::lit(">>", 2);
					jule::Ptr<_230d58386_Const> _31821_c = (*((*(_25925_m))._field_Right))._field_Model.cast_ptr<_230d58386_Const>(&__jule_any_type19);;
					_230d5b5a9_SetU64(_31821_c.ptr(), _31417_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1c2ad158a:;
			{
				jule::Ptr<_230d58386_Const> _32517_c = (*((*(_25925_m))._field_Right))._field_Model.cast_ptr<_230d58386_Const>(&__jule_any_type19);;
				if ((_230d5b048_AsF64(_32517_c.ptr()) == 2LL)) {
					(*((*(_25925_m))._field_Op))._field_Id=static_cast<jule::U64>(65LLU);
					(*((*(_25925_m))._field_Op))._field_Kind=jule::Str::lit("&", 1);
					_230d5b301_SetI64(_32517_c.ptr(), 1LL);
					return;;
				};
			}
		}
		else {
			_case_begin_1c2ad14ad:;
			{
				return;;
			}
		}
		_match_end_1c2ad1458:;
	};
	jule::Any _34013_model = jule::Any(jule::new_ptr<_1bc9c5264_UnsafeBinaryExprModel>(_1bc9c5264_UnsafeBinaryExprModel{._field_Node=_25925_m}), &__jule_any_type126);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_34013_model))))));
}



inline void _1bc9d00c6_unary(_1bc9cd1b2_exprOptimizer* _self_, jule::Ptr<_1ece0d65b_UnaryExprModel> _34424_m) {
	static__1bc9cd79a_optimize(&((*((*(_34424_m))._field_Expr))._field_Model));
	if ((!(_1bc9d7dd1_Ptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_34424_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1c2adacd1:;
			{
				{
					auto &_match_expr{ (*((*(_34424_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type110) {
						_case_begin_1c2adb94c:;
						{
							jule::Ptr<_1ece0d65b_UnaryExprModel> _35321_um = (*((*(_34424_m))._field_Expr))._field_Model.cast_ptr<_1ece0d65b_UnaryExprModel>(&__jule_any_type110);;
							if (((*((*(_35321_um))._field_Op))._field_Id == static_cast<jule::U64>(65LLU))) {
								(*((*(_self_))._field_model))=(*((*(_35321_um))._field_Expr))._field_Model;
							};
						}
					}
					_match_end_1c2adb8d6:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1c2adad47:;
			{
				{
					auto &_match_expr{ (*((*(_34424_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1c2addbe6:;
						{
							jule::Ptr<_1bc7a750d_Var> _36121_v = (*((*(_34424_m))._field_Expr))._field_Model.cast_ptr<_1bc7a750d_Var>(&__jule_any_type8);;
							if ((*(_36121_v))._field_Reference) {
								jule::Any _36325_model = jule::Any(jule::new_ptr<_1bc2d5d94_RefExprModel>(_1bc2d5d94_RefExprModel{._field_Var=_36121_v}), &__jule_any_type127);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_36325_model))))));
							};
						}
					}
					_match_end_1c2addb80:;
				};
			}
		}
		_match_end_1c2adabc1:;
	};
}



inline void _1bc9d037e_structureLit(_1bc9cd1b2_exprOptimizer* _self_, jule::Ptr<_1ece0e030_StructLitExprModel> _37031_m) {
	{
		auto expr = &((*(_37031_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2ade026:;
		if (it != expr_end) {
			jule::Ptr<_1ece0db89_StructArgExprModel> _37121_arg = *it;
			{
				static__1bc9cd79a_optimize(&((*((*(_37121_arg))._field_Expr))._field_Model));
			}
			_iter_next_1c2ade026:;
			++it;
			goto _iter_begin_1c2ade026;
		}
		_iter_end_1c2ade026:;
	};
}



inline void _1bc9d0637_allocStructure(_1bc9cd1b2_exprOptimizer* _self_, jule::Ptr<_1ece0e32c_AllocStructLitExprModel> _37633_m) {
	_1bc9d037e_structureLit(_self_, (*(_37633_m))._field_Lit);
}



inline void _1bc9d08e0_casting(_1bc9cd1b2_exprOptimizer* _self_, jule::Ptr<_1ece0e8b0_CastingExprModel> _38026_m) {
	static__1bc9cd79a_optimize(&((*(_38026_m))._field_Expr));
}



inline void _1bc9d0b98_args(_1bc9cd1b2_exprOptimizer* _self_, jule::Slice<jule::Any>* _38424_args) {
	{
		auto expr = _38424_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2ae29b9:;
		if (it != expr_end) {
			jule::I64 _38514_i = it - expr->begin();
			jule::Any _38521_arg = *it;
			{
				static__1bc9cd79a_optimize(&(_38521_arg));
				(*(_38424_args))[_38514_i]=_38521_arg;
			}
			_iter_next_1c2ae29b9:;
			++it;
			_38514_i++;
			goto _iter_begin_1c2ae29b9;
		}
		_iter_end_1c2ae29b9:;
	};
}



inline void _1bc9d0e51_scope(_1bc9cd1b2_exprOptimizer* _self_, jule::Ptr<_1bc74261e_Scope>* _39125_s) {
	jule::Ptr<_1bc9c7024_scopeOptimizer> _39213_scopt = static__1bc9c7563_new((*(_39125_s)));;
	_1bc9cae07_optimize(_39213_scopt.ptr());
}



inline void _1bc9d1209_funcCall(_1bc9cd1b2_exprOptimizer* _self_, jule::Ptr<_1ece10262_FnCallExprModel> _39627_m) {
	static__1bc9cd79a_optimize(&((*(_39627_m))._field_Expr));
	_1bc9d0b98_args(_self_, &((*(_39627_m))._field_Args));
	if (((*(_39627_m))._field_Except != nullptr)) {
		_1bc9d0e51_scope(_self_, &((*(_39627_m))._field_Except));
	};
}



inline void _1bc9d14b2_slice(_1bc9cd1b2_exprOptimizer* _self_, jule::Ptr<_1ece1063b_SliceExprModel> _40424_m) {
	_1bc9d0b98_args(_self_, &((*(_40424_m))._field_Elems));
}



inline void _1bc9d176a_array(_1bc9cd1b2_exprOptimizer* _self_, jule::Ptr<_1ece13683_ArrayExprModel> _40824_m) {
	if ((((*(_40824_m))._field_Elems.len() == 2LL) && ((*(_40824_m))._field_Elems[1LL] == nullptr))) {
		jule::Any _41017_elem = (*(_40824_m))._field_Elems[0LL];;
		static__1bc9cd79a_optimize(&(_41017_elem));
		(*(_40824_m))._field_Elems[0LL]=_41017_elem;
	};
	_1bc9d0b98_args(_self_, &((*(_40824_m))._field_Elems));
}



inline void _1bc9d1a23_indexing(_1bc9cd1b2_exprOptimizer* _self_, jule::Ptr<_1ece10ae2_IndexingExprModel> _41727_m) {
	static__1bc9cd79a_optimize(&((*((*(_41727_m))._field_Expr))._field_Model));
	static__1bc9cd79a_optimize(&((*((*(_41727_m))._field_Index))._field_Model));
	if ((!(_1bc9d784d_Access))) {
		return;;
	};
	jule::Bool _4239_array = (_1bc8445de_Arr((*((*(_41727_m))._field_Expr))._field_Kind.ptr()) != nullptr);;
	if ((_4239_array && _1bc81127b_IsConst((*(_41727_m))._field_Index.ptr()))) {
		jule::Any _42617_model = jule::Any(jule::new_ptr<_1bc9c5561_UnsafeIndexingExprModel>(_1bc9c5561_UnsafeIndexingExprModel{._field_Node=_41727_m}), &__jule_any_type128);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_42617_model))))));
		return;;
	};
	{
		auto &_match_expr{ (*((*(_41727_m))._field_Index))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c2aebcd1:;
			{
				jule::Ptr<_1bc7a750d_Var> _43213_i = (*((*(_41727_m))._field_Index))._field_Model.cast_ptr<_1bc7a750d_Var>(&__jule_any_type8);;
				if (((*(_43213_i))._field_Mutable || ((*(_43213_i))._field_IterRelation == nullptr))) {
					goto _match_end_1c2aebc6a;
				};
				{
					auto &_match_expr{ (*((*(_41727_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1c2aedaa2:;
						{
							jule::Ptr<_1bc7a750d_Var> _43817_r = (*((*(_41727_m))._field_Expr))._field_Model.cast_ptr<_1bc7a750d_Var>(&__jule_any_type8);;
							if (((*((*(_43213_i))._field_IterRelation))._field_Range == _43817_r)) {
								jule::Any _44125_model = jule::Any(jule::new_ptr<_1bc9c5561_UnsafeIndexingExprModel>(_1bc9c5561_UnsafeIndexingExprModel{._field_Node=_41727_m}), &__jule_any_type128);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_44125_model))))));
							};
						}
					}
					_match_end_1c2aeda3b:;
				};
			}
		}
		_match_end_1c2aebc6a:;
	};
}



inline void _1bc9d1ccb_anonFunc(_1bc9cd1b2_exprOptimizer* _self_, jule::Ptr<_1ece10ebb_AnonFnExprModel> _44827_m) {
	_1bc9d0e51_scope(_self_, &((*((*(_44827_m))._field_Func))._field_Scope));
}



inline void _1bc9d2084_mapExpr(_1bc9cd1b2_exprOptimizer* _self_, jule::Ptr<_1ece1184b_MapExprModel> _45226_m) {
	{
		auto expr = &((*(_45226_m))._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2b019b7:;
		if (it != expr_end) {
			jule::Ptr<_1ece11395_KeyValPairExprModel> _45321_pair = *it;
			{
				static__1bc9cd79a_optimize(&((*(_45321_pair))._field_Key));
				static__1bc9cd79a_optimize(&((*(_45321_pair))._field_Val));
			}
			_iter_next_1c2b019b7:;
			++it;
			goto _iter_begin_1c2b019b7;
		}
		_iter_end_1c2b019b7:;
	};
}



inline void _1bc9d233c_slicing(_1bc9cd1b2_exprOptimizer* _self_, jule::Ptr<_1ece11dce_SlicingExprModel> _45926_m) {
	static__1bc9cd79a_optimize(&((*(_45926_m))._field_Expr));
	static__1bc9cd79a_optimize(&((*(_45926_m))._field_Left));
	if (((*(_45926_m))._field_Right != nullptr)) {
		static__1bc9cd79a_optimize(&((*(_45926_m))._field_Right));
	};
}



inline void _1bc9d25e5_traitSub(_1bc9cd1b2_exprOptimizer* _self_, jule::Ptr<_1ece12462_TraitSubIdentExprModel> _46727_m) {
	static__1bc9cd79a_optimize(&((*(_46727_m))._field_Expr));
}



inline void _1bc9d289d_structureSub(_1bc9cd1b2_exprOptimizer* _self_, jule::Ptr<_1ece12d03_StructSubIdentExprModel> _47131_m) {
	static__1bc9cd79a_optimize(&((*((*(_47131_m))._field_Expr))._field_Model));
}



inline void _1bc9d2b56_tuple(_1bc9cd1b2_exprOptimizer* _self_, jule::Ptr<_1ece13980_TupleExprModel> _47524_m) {
	{
		auto expr = &((*(_47524_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2b04cea:;
		if (it != expr_end) {
			jule::Ptr<_1bc8108a7_Data> _47621_d = *it;
			{
				static__1bc9cd79a_optimize(&((*(_47621_d))._field_Model));
			}
			_iter_next_1c2b04cea:;
			++it;
			goto _iter_begin_1c2b04cea;
		}
		_iter_end_1c2b04cea:;
	};
}



inline void _1bc9d2e0e_newCall(_1bc9cd1b2_exprOptimizer* _self_, jule::Ptr<_1ece1460c_BuiltinNewCallExprModel> _48126_m) {
	if (((*(_48126_m))._field_Init != nullptr)) {
		static__1bc9cd79a_optimize(&((*(_48126_m))._field_Init));
	};
}



inline void _1bc9d31b7_outCall(_1bc9cd1b2_exprOptimizer* _self_, jule::Ptr<_1ece13d59_BuiltinOutCallExprModel> _48726_m) {
	static__1bc9cd79a_optimize(&((*(_48726_m))._field_Expr));
}



inline void _1bc9d3470_outlnCall(_1bc9cd1b2_exprOptimizer* _self_, jule::Ptr<_1ece14233_BuiltinOutlnCallExprModel> _49128_m) {
	static__1bc9cd79a_optimize(&((*(_49128_m))._field_Expr));
}



inline void _1bc9d3728_panicCall(_1bc9cd1b2_exprOptimizer* _self_, jule::Ptr<_1ece149d6_BuiltinPanicCallExprModel> _49528_m) {
	static__1bc9cd79a_optimize(&((*(_49528_m))._field_Expr));
}



inline void _1bc9d39d1_assertCall(_1bc9cd1b2_exprOptimizer* _self_, jule::Ptr<_1ece14e8c_BuiltinAssertCallExprModel> _49929_m) {
	static__1bc9cd79a_optimize(&((*(_49929_m))._field_Expr));
}



inline void _1bc9d3c89_errorCall(_1bc9cd1b2_exprOptimizer* _self_, jule::Ptr<_1ece16a93_BuiltinErrorCallExprModel> _50328_m) {
	static__1bc9cd79a_optimize(&((*((*(_50328_m))._field_Err))._field_Model));
}



inline void _1bc9d4042_makeCall(_1bc9cd1b2_exprOptimizer* _self_, jule::Ptr<_1ece15443_BuiltinMakeCallExprModel> _50727_m) {
	if (((*(_50727_m))._field_Len != nullptr)) {
		static__1bc9cd79a_optimize(&((*(_50727_m))._field_Len));
	};
	if (((*(_50727_m))._field_Cap != nullptr)) {
		static__1bc9cd79a_optimize(&((*(_50727_m))._field_Cap));
	};
}



inline void _1bc9d42ea_appendCall(_1bc9cd1b2_exprOptimizer* _self_, jule::Ptr<_1ece1581c_BuiltinAppendCallExprModel> _51629_m) {
	static__1bc9cd79a_optimize(&((*(_51629_m))._field_Dest));
	static__1bc9cd79a_optimize(&((*(_51629_m))._field_Elements));
}



inline void _1bc9d45a3_lenCall(_1bc9cd1b2_exprOptimizer* _self_, jule::Ptr<_1ece15b19_BuiltinLenCallExprModel> _52126_m) {
	static__1bc9cd79a_optimize(&((*((*(_52126_m))._field_Expr))._field_Model));
}



inline void _1bc9d485b_capCall(_1bc9cd1b2_exprOptimizer* _self_, jule::Ptr<_1ece15e16_BuiltinCapCallExprModel> _52526_m) {
	static__1bc9cd79a_optimize(&((*((*(_52526_m))._field_Expr))._field_Model));
}



inline void _1bc9d4b14_deleteCall(_1bc9cd1b2_exprOptimizer* _self_, jule::Ptr<_1ece162e0_BuiltinDeleteCallExprModel> _52929_m) {
	static__1bc9cd79a_optimize(&((*((*(_52929_m))._field_Dest))._field_Model));
	if (((*(_52929_m))._field_Key != nullptr)) {
		static__1bc9cd79a_optimize(&((*((*(_52929_m))._field_Key))._field_Model));
	};
}



inline void _1bc9d4dbc_sizeof(_1bc9cd1b2_exprOptimizer* _self_, jule::Ptr<_1ece1264e_SizeofExprModel> _53625_m) {
	static__1bc9cd79a_optimize(&((*(_53625_m))._field_Expr));
}



inline void _1bc9d5175_alignof(_1bc9cd1b2_exprOptimizer* _self_, jule::Ptr<_1ece172be_AlignofExprModel> _54026_m) {
	static__1bc9cd79a_optimize(&((*(_54026_m))._field_Expr));
}



inline void _1bc9d542d_integratedToStr(_1bc9cd1b2_exprOptimizer* _self_, jule::Ptr<_1ece178b8_IntegratedToStrExprModel> _54434_m) {
	static__1bc9cd79a_optimize(&((*(_54434_m))._field_Expr));
}



inline void _1bc9d56d6_free(_1bc9cd1b2_exprOptimizer* _self_, jule::Ptr<_1ece1808e_FreeExprModel> _54823_m) {
	static__1bc9cd79a_optimize(&((*(_54823_m))._field_Expr));
}



inline void _1bc9d598e_backendEmit(_1bc9cd1b2_exprOptimizer* _self_, jule::Ptr<_1ece17c92_BackendEmitExprModel> _55230_m) {
	_1bc9d0b98_args(_self_, &((*(_55230_m))._field_Exprs));
}



inline void _1bc9d5b8c_do(_1bc9cd1b2_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_model)) };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1c2b0ed5a:;
			{
				_1bc9ced1d_binary(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ece0d282_BinaryExprModel>(&__jule_any_type111));
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1c2b0edc1:;
			{
				_1bc9d00c6_unary(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ece0d65b_UnaryExprModel>(&__jule_any_type110));
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1c2b0ee37:;
			{
				_1bc9d037e_structureLit(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ece0e030_StructLitExprModel>(&__jule_any_type94));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1c2b0eeae:;
			{
				_1bc9d0637_allocStructure(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ece0e32c_AllocStructLitExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1c2b10036:;
			{
				_1bc9d08e0_casting(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ece0e8b0_CastingExprModel>(&__jule_any_type92));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1c2b100ad:;
			{
				_1bc9d1209_funcCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ece10262_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1c2b10135:;
			{
				_1bc9d14b2_slice(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ece1063b_SliceExprModel>(&__jule_any_type76));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1c2b101ac:;
			{
				_1bc9d176a_array(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ece13683_ArrayExprModel>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1c2b10234:;
			{
				_1bc9d1a23_indexing(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ece10ae2_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1c2b102ab:;
			{
				_1bc9d1ccb_anonFunc(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ece10ebb_AnonFnExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1c2b10333:;
			{
				_1bc9d2084_mapExpr(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ece1184b_MapExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1c2b103aa:;
			{
				_1bc9d233c_slicing(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ece11dce_SlicingExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1c2b10432:;
			{
				_1bc9d25e5_traitSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ece12462_TraitSubIdentExprModel>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1c2b104a9:;
			{
				_1bc9d289d_structureSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ece12d03_StructSubIdentExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1c2b10531:;
			{
				_1bc9d2b56_tuple(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ece13980_TupleExprModel>(&__jule_any_type81));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1c2b105a8:;
			{
				_1bc9d31b7_outCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ece13d59_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1c2b10630:;
			{
				_1bc9d3470_outlnCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ece14233_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1c2b106a7:;
			{
				_1bc9d2e0e_newCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ece1460c_BuiltinNewCallExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1c2b1072e:;
			{
				_1bc9d3728_panicCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ece149d6_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1c2b107a6:;
			{
				_1bc9d39d1_assertCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ece14e8c_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1c2b1082d:;
			{
				_1bc9d3c89_errorCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ece16a93_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1c2b108a5:;
			{
				_1bc9d4042_makeCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ece15443_BuiltinMakeCallExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1c2b1092c:;
			{
				_1bc9d42ea_appendCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ece1581c_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1c2b109a4:;
			{
				_1bc9d45a3_lenCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ece15b19_BuiltinLenCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1c2b10a2b:;
			{
				_1bc9d485b_capCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ece15e16_BuiltinCapCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1c2b10aa3:;
			{
				_1bc9d4b14_deleteCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ece162e0_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1c2b10b2a:;
			{
				_1bc9d4dbc_sizeof(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ece1264e_SizeofExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1c2b10ba2:;
			{
				_1bc9d5175_alignof(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ece172be_AlignofExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1c2b10c29:;
			{
				_1bc9d542d_integratedToStr(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ece178b8_IntegratedToStrExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1c2b10ca1:;
			{
				_1bc9d56d6_free(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ece1808e_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1c2b10d28:;
			{
				_1bc9d598e_backendEmit(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ece17c92_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_1c2b0eab3:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1bc9cd1b2_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1bd149597_Optimizer> static__1bd149a1a_New(jule::Ptr<_1bd4385ab_IR>* _2624_ir) {
	return jule::new_ptr<_1bd149597_Optimizer>(_1bd149597_Optimizer{._field_ir=(*(_2624_ir))});;
}



inline void _1bd149cc3_optimizeGlobal(_1bd149597_Optimizer* _self_, jule::Ptr<_1bc7a750d_Var>* _3238_v) {
	if ((!((*((*(_3238_v))))._field_Binded))) {
		static__1bc9cd79a_optimize(&((*((*((*((*(_3238_v))))._field_Value))._field_Data))._field_Model));
	};
}



inline void _1bd14a07b_optimizeFunction(_1bd149597_Optimizer* _self_, jule::Ptr<_1ece1b092_Fn>* _3840_func) {
	if ((*((*(_3840_func))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_3840_func))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2b25557:;
		if (it != expr_end) {
			jule::Ptr<_1ece1de96_FnIns> _4221_ins = *it;
			{
				jule::Ptr<_1bc9c7024_scopeOptimizer> _4317_so = static__1bc9c7563_new((*(_4221_ins))._field_Scope);;
				_1bc9cae07_optimize(_4317_so.ptr());
			}
			_iter_next_1c2b25557:;
			++it;
			goto _iter_begin_1c2b25557;
		}
		_iter_end_1c2b25557:;
	};
}



inline void _1bd14a334_optimizeStruct(_1bd149597_Optimizer* _self_, jule::Ptr<_1bc5bb333_Struct>* _4838_s) {
	if ((*((*(_4838_s))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_4838_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2b26c40:;
		if (it != expr_end) {
			jule::Ptr<_1bc5be0b1_StructIns> _5221_ins = *it;
			{
				{
					auto expr = &((*(_5221_ins))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c2b27636:;
					if (it != expr_end) {
						jule::Ptr<_1bc5bd511_FieldIns> _5325_f = *it;
						{
							if (((*(_5325_f))._field_Default != nullptr)) {
								static__1bc9cd79a_optimize(&((*((*(_5325_f))._field_Default))._field_Model));
							};
						}
						_iter_next_1c2b27636:;
						++it;
						goto _iter_begin_1c2b27636;
					}
					_iter_end_1c2b27636:;
				};
				{
					auto expr = &((*(_5221_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c2b27a87:;
					if (it != expr_end) {
						jule::Ptr<_1ece1b092_Fn> _5825_m = *it;
						{
							_1bd14a07b_optimizeFunction(_self_, &(_5825_m));
						}
						_iter_next_1c2b27a87:;
						++it;
						goto _iter_begin_1c2b27a87;
					}
					_iter_end_1c2b27a87:;
				};
			}
			_iter_next_1c2b26c40:;
			++it;
			goto _iter_begin_1c2b26c40;
		}
		_iter_end_1c2b26c40:;
	};
}



inline void _1bd14a5dc_optimizeGlobals(_1bd149597_Optimizer* _self_, jule::Ptr<_1bc766d2a_Package>* _6439_p) {
	{
		auto expr = &((*((*(_6439_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2b292a3:;
		if (it != expr_end) {
			jule::Ptr<_1bc80a50b_SymbolTable> _6521_f = *it;
			{
				{
					auto expr = &((*(_6521_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c2b29bee:;
					if (it != expr_end) {
						jule::Ptr<_1bc7a750d_Var> _6625_v = *it;
						{
							_1bd149cc3_optimizeGlobal(_self_, &(_6625_v));
						}
						_iter_next_1c2b29bee:;
						++it;
						goto _iter_begin_1c2b29bee;
					}
					_iter_end_1c2b29bee:;
				};
			}
			_iter_next_1c2b292a3:;
			++it;
			goto _iter_begin_1c2b292a3;
		}
		_iter_end_1c2b292a3:;
	};
}



inline void _1bd14a895_optimizeFunctions(_1bd149597_Optimizer* _self_, jule::Ptr<_1bc766d2a_Package>* _7241_p) {
	{
		auto expr = &((*((*(_7241_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2b29858:;
		if (it != expr_end) {
			jule::Ptr<_1bc80a50b_SymbolTable> _7321_f = *it;
			{
				{
					auto expr = &((*(_7321_f))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c2b2b140:;
					if (it != expr_end) {
						jule::Ptr<_1ece1b092_Fn> _7425_func = *it;
						{
							_1bd14a07b_optimizeFunction(_self_, &(_7425_func));
						}
						_iter_next_1c2b2b140:;
						++it;
						goto _iter_begin_1c2b2b140;
					}
					_iter_end_1c2b2b140:;
				};
			}
			_iter_next_1c2b29858:;
			++it;
			goto _iter_begin_1c2b29858;
		}
		_iter_end_1c2b29858:;
	};
}



inline void _1bd14ab4d_optimizeStructs(_1bd149597_Optimizer* _self_, jule::Ptr<_1bc766d2a_Package>* _8039_p) {
	{
		auto expr = &((*((*(_8039_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2b2ac99:;
		if (it != expr_end) {
			jule::Ptr<_1bc80a50b_SymbolTable> _8121_f = *it;
			{
				{
					auto expr = &((*(_8121_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c2b2c581:;
					if (it != expr_end) {
						jule::Ptr<_1bc5bb333_Struct> _8225_s = *it;
						{
							_1bd14a334_optimizeStruct(_self_, &(_8225_s));
						}
						_iter_next_1c2b2c581:;
						++it;
						goto _iter_begin_1c2b2c581;
					}
					_iter_end_1c2b2c581:;
				};
			}
			_iter_next_1c2b2ac99:;
			++it;
			goto _iter_begin_1c2b2ac99;
		}
		_iter_end_1c2b2ac99:;
	};
}



inline void _1bd14ae06_optimizePackage(_1bd149597_Optimizer* _self_, jule::Ptr<_1bc766d2a_Package>* _8839_p) {
	_1bd14a5dc_optimizeGlobals(_self_, _8839_p);
	_1bd14a895_optimizeFunctions(_self_, _8839_p);
	_1bd14ab4d_optimizeStructs(_self_, _8839_p);
}



inline void _1bd14b104_Optimize(_1bd149597_Optimizer* _self_) {
	_1bd14b379_detectEnabled();
	if (_1bc9d6eac_Deadcode) {
		_1bd13b7ed_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1bd149388_scopeEnabled || _1bd14908b_exprEnabled)) {
		{
			auto expr = &((*((*(_self_))._field_ir))._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c2b2e5b6:;
			if (it != expr_end) {
				jule::Ptr<_1bc763e04_ImportInfo> _10425_u = *it;
				{
					if ((!((*(_10425_u))._field_Binded))) {
						_1bd14ae06_optimizePackage(_self_, &((*(_10425_u))._field_Package));
					};
				}
				_iter_next_1c2b2e5b6:;
				++it;
				goto _iter_begin_1c2b2e5b6;
			}
			_iter_end_1c2b2e5b6:;
		};
		_1bd14ae06_optimizePackage(_self_, &((*((*(_self_))._field_ir))._field_Main));
	};
	if (_1bc9d6eac_Deadcode) {
		_1bd141d97_EliminateScopes(&((*(_self_))._field_ir));
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1bd149597_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1bd170cc7_Reset(void) {
	jule::out(jule::Str::lit("\033[0m", 4));
}



inline void static__1bd1721d5_Print(jule::Str _1921_escape, jule::Str _1934_text) {
	jule::out(_1921_escape);
	jule::out(_1934_text);
	static__1bd170cc7_Reset();
}





std::ostream &operator<<(std::ostream &_Stream, _1bd171de9_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1bd173b32_LogFlat(_1ed6c7892_Log* _1424_l) {
	jule::outln((*(_1424_l))._field_Text);
}



inline void static__1bd173d63_LogError(_1ed6c7892_Log* _1925_l) {
	jule::out(jule::Str::lit("\033[31m", 5));
	jule::out(jule::Str::lit("error: ", 7));
	jule::out((*(_1925_l))._field_Text);
	static__1bd170cc7_Reset();
	if (((*(_1925_l))._field_Path.len() != 0LL)) {
		jule::out(jule::Str::lit("\n  --> ", 7));
		jule::out((*(_1925_l))._field_Path);
	};
	if ((((*(_1925_l))._field_Row != 0LL) && ((*(_1925_l))._field_Column != 0LL))) {
		jule::out(jule::Str::lit(":", 1));
		jule::out(_230d4a1d0_Itoa((*(_1925_l))._field_Row));
		jule::out(jule::Str::lit(":", 1));
		jule::out(_230d4a1d0_Itoa((*(_1925_l))._field_Column));
	};
	if (((*(_1925_l))._field_Line.len() != 0LL)) {
		jule::Str _3617_line = _1ed6417b7_TrimLeft((*(_1925_l))._field_Line, jule::Str::lit("\r\n\v\b ", 5));;
		jule::I64 _3717_offset = (((*(_1925_l))._field_Line.len() - _3617_line.len()) + 1LL);;
		jule::I64 _3817_oldLen = _3617_line.len();;
		_3617_line=_1ed6417b7_TrimLeft(_3617_line, jule::Str::lit("\t", 1));
		if ((_3817_oldLen != _3617_line.len())) {
			_3717_offset+=((_3817_oldLen - _3617_line.len()) << 3LLU);
		};
		jule::out(jule::Str::lit("\n  ", 3));
		jule::Str _4413_row = _230d4a1d0_Itoa((*(_1925_l))._field_Row);;
		jule::out(_4413_row);
		jule::out(jule::Str::lit(" | ", 3));
		jule::out(_3617_line);
		jule::out(jule::Str::lit("\n  ", 3));
		jule::out(_1ed63935e_Repeat(jule::Str::lit(" ", 1), static_cast<jule::I64>(_4413_row.len())));
		jule::out(jule::Str::lit(" | ", 3));
		jule::out(_1ed63935e_Repeat(jule::Str::lit(" ", 1), static_cast<jule::I64>(((*(_1925_l))._field_Column - _3717_offset))));
		jule::out(jule::Str::lit("^", 1));
		if (((*(_1925_l))._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str::lit("\n  ", 3));
			jule::out(_1ed63935e_Repeat(jule::Str::lit(" ", 1), static_cast<jule::I64>(_4413_row.len())));
			jule::out(jule::Str::lit(" | ", 3));
			static__1bd1721d5_Print(jule::Str::lit("\033[95m", 5), jule::Str::lit("suggestion: ", 12));
			jule::out((*(_1925_l))._field_Suggestion);
		};
	};
	jule::outln(jule::Str::lit("\n", 1));
}



inline void static__1bd174094_Log(_1ed6c7892_Log* _6520_l) {
	{
		auto &_match_expr{ (*(_6520_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1c2b3c45e:;
			{
				static__1bd173b32_LogFlat(_6520_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1c2b3c4d6:;
			{
				static__1bd173d63_LogError(_6520_l);
			}
		}
		_match_end_1c2b3c393:;
	};
}



inline void static__1bd1742c5_PrintLogs(jule::Slice<_1ed6c7892_Log>* _7526_logs) {
	{
		auto expr = _7526_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2b38922:;
		if (it != expr_end) {
			_1ed6c7892_Log *_7616_l = it;
			{
				static__1bd174094_Log(_7616_l);
			}
			_iter_next_1c2b38922:;
			++it;
			goto _iter_begin_1c2b38922;
		}
		_iter_end_1c2b38922:;
	};
	jule::out(jule::Str::lit("=== ", 4));
	jule::out(_230d4a1d0_Itoa(static_cast<jule::I64>((*(_7526_logs)).len())));
	jule::outln(jule::Str::lit(" error generated ===", 20));
}





std::ostream &operator<<(std::ostream &_Stream, _1bd173857_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bcc81256_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _1bcc8192c_Time static__1bcc81cd4_Unix(jule::U64 _9120_sec) {
	return _1bcc8192c_Time{._field_sec=_9120_sec};;
}



inline _1bcc8192c_Time static__1bcc81ee3_Now(void) {
	return static__1bcc81cd4_Unix(static_cast<jule::U64>(_1bcc83a1c_unix()));;
}



inline _1bcc81256_AbsTime _1bcc836cb_Abs(_1bcc8192c_Time* _self_) {
	jule::U64 _1279_secs = ((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _12813_days = (_1279_secs / 86400LLU);;
	jule::U64 _12913_remSecs = (_1279_secs % 86400LL);;
	if ((_12913_remSecs < 0LLU)) {
		_12913_remSecs+=86400LLU;
		(_12813_days)--;
	};
	jule::U64 _13513_qcCycles = (_12813_days / 146097LLU);;
	jule::U64 _13613_remDays = (_12813_days % 146097LL);;
	if ((_13613_remDays < 0LLU)) {
		_13613_remDays+=146097LLU;
		(_13513_qcCycles)--;
	};
	jule::U64 _14213_cCycles = (_13613_remDays / 36524LLU);;
	if ((_14213_cCycles == 4LLU)) {
		(_14213_cCycles)--;
	};
	_13613_remDays-=(_14213_cCycles * 36524LLU);
	jule::U64 _14813_qCycles = (_13613_remDays / 1461LLU);;
	if ((_14813_qCycles == 25LLU)) {
		(_14813_qCycles)--;
	};
	_13613_remDays-=(_14813_qCycles * 1461LLU);
	jule::U64 _15413_remYears = (_13613_remDays / 365LLU);;
	if ((_15413_remYears == 4LLU)) {
		(_15413_remYears)--;
	};
	_13613_remDays-=(_15413_remYears * 365LLU);
	jule::U64 _16013_leap = static_cast<jule::U64>(0LLU);;
	if (((_15413_remYears == 0LLU) && ((_14813_qCycles > 0LLU) || (_14213_cCycles == 0LLU)))) {
		_16013_leap=1LLU;
	};
	jule::U64 _16413_yDay = (((_13613_remDays + 31LLU) + 28LLU) + _16013_leap);;
	if ((_16413_yDay >= (365LLU + _16013_leap))) {
		_16413_yDay-=(365LLU + _16013_leap);
	};
	jule::U64 _16913_months = static_cast<jule::U64>(0LLU);;
	for (; (_1bcc8072d_mdays[static_cast<jule::I64>(_16913_months)] <= _13613_remDays); (_16913_months)++) {
		{
			_13613_remDays-=_1bcc8072d_mdays[static_cast<jule::I64>(_16913_months)];
		}
	_iter_next_1c2b6dced:;
	}
	_iter_end_1c2b6dced:;;
	_1bcc81256_AbsTime _17413_t = _1bcc81256_AbsTime{};;
	_17413_t._field_Year=static_cast<jule::U64>(((((_15413_remYears + (4LLU * _14813_qCycles)) + (100LLU * _14213_cCycles)) + (400LLU * _13513_qcCycles)) + 100LLU));
	_17413_t._field_Month=static_cast<jule::U64>((_16913_months + 2LLU));
	if ((_17413_t._field_Month >= 12LLU)) {
		_17413_t._field_Month-=12LLU;
		(_17413_t._field_Year)++;
	};
	_17413_t._field_Month+=1LLU;
	_17413_t._field_Year+=1900LLU;
	_17413_t._field_Day=static_cast<jule::U64>((_13613_remDays + 1LLU));
	_17413_t._field_WeekDay=static_cast<jule::U64>(((3LLU + _12813_days) % 7LL));
	if ((_17413_t._field_WeekDay < 0LLU)) {
		_17413_t._field_WeekDay+=7LLU;
	};
	_17413_t._field_YearDay=_16413_yDay;
	_17413_t._field_Hour=static_cast<jule::U64>((_12913_remSecs / 3600LLU));
	_17413_t._field_Minute=static_cast<jule::U64>(((_12913_remSecs / 60LLU) % 60LL));
	_17413_t._field_Second=static_cast<jule::U64>((_12913_remSecs % 60LL));
	return _17413_t;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bcc8192c_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1bd5a2a77_scopeCoder> static__1bd5a3193_new(jule::Ptr<_1bde29145_ObjectCoder>* _6624_oc) {
	return jule::new_ptr<_1bd5a2a77_scopeCoder>(_1bd5a2a77_scopeCoder{._field_oc=(*(_6624_oc))});;
}



inline void _1c2c121b0_iterHead(jule::Ptr<_1bd5a2a77_scopeCoder> _self_, jule::Ptr<_1bc744456_RangeIter>* _7332_it, jule::Bool* _7344_ref, jule::Str _7355_begin) {
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1bde29ca0_addIndent((*(_self_))._field_oc);
	_1bde2a19b_indent((*(_self_))._field_oc);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1bc9d6b9e_Copy && _1bcbb3ce3_isCopyOptimizable(&((*((*(_7332_it))))._field_Expr)))) {
		(*(_7344_ref))=true;
		{
			auto &_match_expr{ (*((*((*(_7332_it))))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1c2c138ed:;
				{
					jule::Ptr<_1bc7a750d_Var> _8217_v = (*((*((*(_7332_it))))._field_Expr))._field_Model.cast_ptr<_1bc7a750d_Var>(&__jule_any_type8);;
					if ((*(_8217_v))._field_Reference) {
						_1bcbc3c26_model((*((*(_self_))._field_oc))._field_ec, (*((*((*(_7332_it))))._field_Expr))._field_Model);
						goto _match_end_1c2c15bca;
					};
					goto _case_begin_1c2c15c30;
				}
			}
			else {
				_case_begin_1c2c15c30:;
				{
					_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1bcbc3c26_model((*((*(_self_))._field_oc))._field_ec, (*((*((*(_7332_it))))._field_Expr))._field_Model);
					_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1c2c15bca:;
		};
	} else {
		_1bcbb9c0b_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_7332_it))))._field_Expr))._field_Model);
	};
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1bde2a19b_indent((*(_self_))._field_oc);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("auto it = expr", 14));
	if ((*(_7344_ref))) {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("begin();\n", 9));
	_1bde2a19b_indent((*(_self_))._field_oc);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("auto expr_end = expr", 20));
	if ((*(_7344_ref))) {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("end();\n", 7));
	_1bde2a19b_indent((*(_self_))._field_oc);
	_1bde297e9_write((*(_self_))._field_oc, _7355_begin);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1bde2a19b_indent((*(_self_))._field_oc);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("if (it != expr_end) {\n", 22));
	_1bde29ca0_addIndent((*(_self_))._field_oc);
	_1bde2a19b_indent((*(_self_))._field_oc);
}



inline void _1bd5a3869_rangeIndexIter(jule::Ptr<_1bd5a2a77_scopeCoder> _self_, jule::Ptr<_1bc744456_RangeIter>* _12239_it) {
	_2096a4489_StrBuilder _12313_sb = static__2096a48da_New(64LL);;
	static__1bcbcc8cd_iterBegin(&(_12313_sb), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12239_it)))));
	jule::Str _1259_begin = _2096a5743_Str(&_12313_sb);;
	_2096a5941_Clear(&_12313_sb);
	static__1bcbccea5_iterNext(&(_12313_sb), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12239_it)))));
	jule::Str _1289_next = _2096a5743_Str(&_12313_sb);;
	jule::Bool _13013_ref = false;;
	_1c2c121b0_iterHead(_self_, _12239_it, &(_13013_ref), _1259_begin);
	if (((*((*(_12239_it))))._field_KeyA != nullptr)) {
		_1bde3246c_varInitExpr((*(_self_))._field_oc, &((*((*(_12239_it))))._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			if (_13013_ref) {
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("it - expr->begin()", 18));
			} else {
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("it - expr.begin()", 17));
			};
		}));
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1bde2a19b_indent((*(_self_))._field_oc);
	};
	if (((*((*(_12239_it))))._field_KeyB != nullptr)) {
		(*((*((*(_12239_it))))._field_KeyB))._field_Reference=(_1bc9d6b9e_Copy && _1bcbb41ab_isIterCopyOptimizable(&((*((*(_12239_it))))._field_Expr), &((*((*(_12239_it))))._field_KeyB)));
		_1bde3246c_varInitExpr((*(_self_))._field_oc, &((*((*(_12239_it))))._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			{
				if ((*((*((*(_12239_it))))._field_KeyB))._field_Reference) {
					_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
				} else {
					_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("*it", 3));
				};
			};
		}));
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1bde2a19b_indent((*(_self_))._field_oc);
	};
	_1bcbb3672_scope(_self_, (*((*(_12239_it))))._field_Scope);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1bde2a19b_indent((*(_self_))._field_oc);
	_1bde297e9_write((*(_self_))._field_oc, _1289_next);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1bde2a19b_indent((*(_self_))._field_oc);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("++it;\n", 6));
	_1bde2a19b_indent((*(_self_))._field_oc);
	if (((*((*(_12239_it))))._field_KeyA != nullptr)) {
		static__1bcbcc5e2_var(&((*((*(_self_))._field_oc))._field_Buf), (*((*(_12239_it))))._field_KeyA);
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_1bde2a19b_indent((*(_self_))._field_oc);
	};
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1bde297e9_write((*(_self_))._field_oc, _1259_begin);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1bde29e9d_doneIndent((*(_self_))._field_oc);
	_1bde2a19b_indent((*(_self_))._field_oc);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1bde2a19b_indent((*(_self_))._field_oc);
	static__1bcbccbb9_iterEnd(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12239_it)))));
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1bde29e9d_doneIndent((*(_self_))._field_oc);
	_1bde2a19b_indent((*(_self_))._field_oc);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1bd5a3b22_rangeHashmapIter(jule::Ptr<_1bd5a2a77_scopeCoder> _self_, jule::Ptr<_1bc744456_RangeIter>* _18941_it) {
	_2096a4489_StrBuilder _19013_sb = static__2096a48da_New(64LL);;
	static__1bcbcc8cd_iterBegin(&(_19013_sb), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18941_it)))));
	jule::Str _1929_begin = _2096a5743_Str(&_19013_sb);;
	_2096a5941_Clear(&_19013_sb);
	static__1bcbccea5_iterNext(&(_19013_sb), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18941_it)))));
	jule::Str _1959_next = _2096a5743_Str(&_19013_sb);;
	jule::Bool _19713_ref = false;;
	_1c2c121b0_iterHead(_self_, _18941_it, &(_19713_ref), _1929_begin);
	if (((*((*(_18941_it))))._field_KeyA != nullptr)) {
		_1bde3246c_varInitExpr((*(_self_))._field_oc, &((*((*(_18941_it))))._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("it->first", 9));
		}));
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1bde2a19b_indent((*(_self_))._field_oc);
	};
	if (((*((*(_18941_it))))._field_KeyB != nullptr)) {
		_1bde3246c_varInitExpr((*(_self_))._field_oc, &((*((*(_18941_it))))._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("it->second", 10));
		}));
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1bde2a19b_indent((*(_self_))._field_oc);
	};
	_1bcbb3672_scope(_self_, (*((*(_18941_it))))._field_Scope);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1bde2a19b_indent((*(_self_))._field_oc);
	_1bde297e9_write((*(_self_))._field_oc, _1959_next);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1bde2a19b_indent((*(_self_))._field_oc);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("++it;\n", 6));
	_1bde2a19b_indent((*(_self_))._field_oc);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1bde297e9_write((*(_self_))._field_oc, _1929_begin);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1bde29e9d_doneIndent((*(_self_))._field_oc);
	_1bde2a19b_indent((*(_self_))._field_oc);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1bde2a19b_indent((*(_self_))._field_oc);
	static__1bcbccbb9_iterEnd(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18941_it)))));
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1bde29e9d_doneIndent((*(_self_))._field_oc);
	_1bde2a19b_indent((*(_self_))._field_oc);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1bd5a3dca_ifCase(jule::Ptr<_1bd5a2a77_scopeCoder> _self_, jule::Ptr<_1bc742a3c_If> _23630_i) {
	if (((*(_23630_i))._field_Expr != nullptr)) {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		_1bcbb9c0b_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_23630_i))._field_Expr);
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	};
	_1bcbb3672_scope(_self_, (*(_23630_i))._field_Scope);
}



inline void _1bd5a4183_conditional(jule::Ptr<_1bd5a2a77_scopeCoder> _self_, jule::Ptr<_1bc743257_Conditional> _24535_c) {
	jule::Bool _24613_writed = false;;
	{
		auto expr = &((*(_24535_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2c49aee:;
		if (it != expr_end) {
			jule::Ptr<_1bc742a3c_If> _24721_elif = *it;
			{
				if ((_24721_elif == nullptr)) {
					goto _iter_next_1c2c49aee;
				};
				if (_24613_writed) {
					_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
				};
				_24613_writed=true;
				_1bd5a3dca_ifCase(_self_, _24721_elif);
			}
			_iter_next_1c2c49aee:;
			++it;
			goto _iter_begin_1c2c49aee;
		}
		_iter_end_1c2c49aee:;
	};
	if (((*(_24535_c))._field_Default != nullptr)) {
		if (_24613_writed) {
			_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
		};
		_1bcbb3672_scope(_self_, (*((*(_24535_c))._field_Default))._field_Scope);
	};
}



inline void _1bd5a443b_infIter(jule::Ptr<_1bd5a2a77_scopeCoder> _self_, jule::Ptr<_1bc743554_InfIter> _26531_it) {
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("for (;;) {\n", 11));
	_1bde29ca0_addIndent((*(_self_))._field_oc);
	_1bde2a19b_indent((*(_self_))._field_oc);
	_1bcbb3672_scope(_self_, (*(_26531_it))._field_Scope);
	_1bde29e9d_doneIndent((*(_self_))._field_oc);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1bde2a19b_indent((*(_self_))._field_oc);
	static__1bcbccea5_iterNext(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_26531_it)));
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1bde2a19b_indent((*(_self_))._field_oc);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1bde2a19b_indent((*(_self_))._field_oc);
	static__1bcbccbb9_iterEnd(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_26531_it)));
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1bd5a46e4_whileIter(jule::Ptr<_1bd5a2a77_scopeCoder> _self_, jule::Ptr<_1bc743a0a_WhileIter> _28233_it) {
	if ((((*(_28233_it))._field_Expr != nullptr) && ((*(_28233_it))._field_Next == nullptr))) {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("while (", 7));
		_1bcbb9c0b_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_28233_it))._field_Expr);
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(") {\n", 4));
	} else {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
		if (((*(_28233_it))._field_Expr != nullptr)) {
			_1bcbb9c0b_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_28233_it))._field_Expr);
		};
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
		if (((*(_28233_it))._field_Next != nullptr)) {
			_1bcbb3111_st(_self_, (*(_28233_it))._field_Next);
		};
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(") {\n", 4));
	};
	_1bde29ca0_addIndent((*(_self_))._field_oc);
	_1bde2a19b_indent((*(_self_))._field_oc);
	_1bcbb3672_scope(_self_, (*(_28233_it))._field_Scope);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1bde29e9d_doneIndent((*(_self_))._field_oc);
	_1bde2a19b_indent((*(_self_))._field_oc);
	static__1bcbccea5_iterNext(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_28233_it)));
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1bde2a19b_indent((*(_self_))._field_oc);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1bde2a19b_indent((*(_self_))._field_oc);
	static__1bcbccbb9_iterEnd(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_28233_it)));
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1bd5a499c_rangeIter(jule::Ptr<_1bd5a2a77_scopeCoder> _self_, jule::Ptr<_1bc744456_RangeIter> _31533_it) {
	{
		
		if ((_1bc844875_Slc((*((*(_31533_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2c5dc56:;
			{
				_1bd5a3869_rangeIndexIter(_self_, &(_31533_it));
			}
		}
		else if ((_1bc8445de_Arr((*((*(_31533_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2c5d926:;
			{
				_1bd5a3869_rangeIndexIter(_self_, &(_31533_it));
			}
		}
		else if ((_1bc8453ae_Map((*((*(_31533_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2c5d98c:;
			{
				_1bd5a3b22_rangeHashmapIter(_self_, &(_31533_it));
			}
		}
		else {
			_case_begin_1c2c5d8b0:;
			{
				_1bd5a3869_rangeIndexIter(_self_, &(_31533_it));
			}
		}
		_match_end_1c2c5d7e4:;
	};
}



inline void _1bd5a4c55_cont(jule::Ptr<_1bd5a2a77_scopeCoder> _self_, jule::Ptr<_1bc7447db_ContSt> _32824_c) {
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1bcbccea5_iterNext(&((*((*(_self_))._field_oc))._field_Buf), (*(_32824_c))._field_It);
}



inline void _1bd5a500d_label(jule::Ptr<_1bd5a2a77_scopeCoder> _self_, jule::Ptr<_1bc744eb2_Label> _33325_l) {
	static__1bcbcd291_label(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_33325_l)));
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(":", 1));
}



inline void _1bd5a52b6_gotoSt(jule::Ptr<_1bd5a2a77_scopeCoder> _self_, jule::Ptr<_1bc74538b_GotoSt> _33826_gt) {
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1bcbcd291_label(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_33826_gt))._field_Label)));
}



inline void _1bd5a556e_postfix(jule::Ptr<_1bd5a2a77_scopeCoder> _self_, jule::Ptr<_1bc745765_Postfix> _34331_p) {
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1bcbb9c0b_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_34331_p))._field_Expr);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	_1bde297e9_write((*(_self_))._field_oc, (*(_34331_p))._field_Op);
}



inline void _1bd5a5827_assign(jule::Ptr<_1bd5a2a77_scopeCoder> _self_, jule::Ptr<_1bc745c1b_Assign> _35030_a) {
	_1bcbb9c0b_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_35030_a))._field_L))._field_Model);
	_1bde297e9_write((*(_self_))._field_oc, (*((*(_35030_a))._field_Op))._field_Kind);
	_1bcbb9c0b_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_35030_a))._field_R))._field_Model);
}



inline void _1bd5a5ad0_mapLookupAssign(jule::Ptr<_1bd5a2a77_scopeCoder> _self_, jule::Ptr<_1bc7460e5_MultiAssign>* _35640_a) {
	jule::Ptr<_1ece10ae2_IndexingExprModel> _35713_iem = (*((*(_35640_a))))._field_R.cast_ptr<_1ece10ae2_IndexingExprModel>(&__jule_any_type45);;
	_1bcbb9c0b_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_35713_iem))._field_Expr))._field_Model);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(".lookup(", 8));
	_1bcbb9c0b_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_35713_iem))._field_Index))._field_Model);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_35640_a))))._field_L[0LL] != nullptr)) {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1bcbb9c0b_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_35640_a))))._field_L[0LL]))._field_Model);
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
	} else {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("nullptr, ", 9));
	};
	if (((*((*(_35640_a))))._field_L[1LL] != nullptr)) {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1bcbb9c0b_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_35640_a))))._field_L[1LL]))._field_Model);
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
	};
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bd5a5d88_multiAssignTup(jule::Ptr<_1bd5a2a77_scopeCoder> _self_, jule::Ptr<_1bc7460e5_MultiAssign>* _37939_a) {
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1bde29ca0_addIndent((*(_self_))._field_oc);
	jule::Ptr<_1ece13980_TupleExprModel> _38313_tup = (*((*(_37939_a))))._field_R.cast_ptr<_1ece13980_TupleExprModel>(&__jule_any_type81);;
	{
		auto expr = &((*(_38313_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2c74200:;
		if (it != expr_end) {
			jule::I64 _38514_i = it - expr->begin();
			jule::Ptr<_1bc8108a7_Data> _38521_r = *it;
			{
				_1bde2a19b_indent((*(_self_))._field_oc);
				jule::Ptr<_1bc8108a7_Data> _38717_l = (*((*(_37939_a))))._field_L[_38514_i];;
				if ((_38717_l != nullptr)) {
					{
						auto &_match_expr{ (*(_38717_l))._field_Model };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1c2c771c0:;
							{
								jule::Ptr<_1bc7a750d_Var> _39125_v = (*(_38717_l))._field_Model.cast_ptr<_1bc7a750d_Var>(&__jule_any_type8);;
								if (((*(_39125_v))._field_Reference && (!(_1bc7a7893_IsInitialized(_39125_v.ptr()))))) {
									static__1bcbcc5e2_var(&((*((*(_self_))._field_oc))._field_Buf), _39125_v);
									_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(" = &(", 5));
									_1bcbb9c0b_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_38521_r))._field_Model);
									_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
									(*((*(_37939_a))))._field_L[_38514_i]=nullptr;
									goto _iter_next_1c2c74200;
								};
							}
						}
						_match_end_1c2c7716a:;
					};
					_1bde3ec71_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_38717_l))._field_Kind);
					_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
					static__1bcbca843_toOut(&((*((*(_self_))._field_oc))._field_Buf), _1bd5a244a_assignArgName, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_38514_i)));
					_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				};
				_1bcbb9c0b_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_38521_r))._field_Model);
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1c2c74200:;
			++it;
			_38514_i++;
			goto _iter_begin_1c2c74200;
		}
		_iter_end_1c2c74200:;
	};
	{
		auto expr = &((*((*(_37939_a))))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2c7ce62:;
		if (it != expr_end) {
			jule::I64 _41214_i = it - expr->begin();
			jule::Ptr<_1bc8108a7_Data> _41221_l = *it;
			{
				if ((_41221_l == nullptr)) {
					goto _iter_next_1c2c7ce62;
				};
				_1bde2a19b_indent((*(_self_))._field_oc);
				_1bcbb9c0b_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_41221_l))._field_Model);
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				static__1bcbca843_toOut(&((*((*(_self_))._field_oc))._field_Buf), _1bd5a244a_assignArgName, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_41214_i)));
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1c2c7ce62:;
			++it;
			_41214_i++;
			goto _iter_begin_1c2c7ce62;
		}
		_iter_end_1c2c7ce62:;
	};
	_1bde29e9d_doneIndent((*(_self_))._field_oc);
	_1bde2a19b_indent((*(_self_))._field_oc);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1bcbb0c57_multiAssignFn(jule::Ptr<_1bd5a2a77_scopeCoder> _self_, jule::Ptr<_1bc7460e5_MultiAssign>* _42838_a) {
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1bde29ca0_addIndent((*(_self_))._field_oc);
	_1bde2a19b_indent((*(_self_))._field_oc);
	jule::Ptr<_1ece10262_FnCallExprModel> _43313_f = (*((*(_42838_a))))._field_R.cast_ptr<_1ece10262_FnCallExprModel>(&__jule_any_type34);;
	_1bde44d0e_codeMut1((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), &((*((*(_43313_f))._field_Func))._field_Result));
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(" __jule_assign_result = ", 24));
	_1bcbb9c0b_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_42838_a))))._field_R);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	jule::Ptr<_1bc84dd8a_Tuple> _43913_tup = _1bc845645_Tup((*((*(_43313_f))._field_Func))._field_Result.ptr());;
	{
		auto expr = &((*((*(_42838_a))))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2c87796:;
		if (it != expr_end) {
			jule::I64 _44014_i = it - expr->begin();
			jule::Ptr<_1bc8108a7_Data> _44021_l = *it;
			{
				if ((_44021_l != nullptr)) {
					;
					_1bde2a19b_indent((*(_self_))._field_oc);
					_1bcbb9c0b_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_44021_l))._field_Model);
					{
						
						if (_1bc8418c7_Equal((*(_43913_tup))._field_Types[_44014_i], (*(_44021_l))._field_Kind)) {
							_case_begin_1c2c943da:;
							{
								_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(" = __jule_assign_result.__jule_result_arg", 41));
								_1bde297e9_write((*(_self_))._field_oc, _230d4a1d0_Itoa(_44014_i));
							}
						}
						else if (_1bcbc619b_isAny(&((*(_44021_l))._field_Kind))) {
							_case_begin_1c2c8ba0e:;
							{
								_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(" = jule::Any(__jule_assign_result.__jule_result_arg", 51));
								_1bde297e9_write((*(_self_))._field_oc, _230d4a1d0_Itoa(_44014_i));
								_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
								_1bde297e9_write((*(_self_))._field_oc, _230d4a1d0_Itoa(static_cast<jule::I64>(_1bde2a82d_pushAnyType((*(_self_))._field_oc, (*(_43913_tup))._field_Types[_44014_i]))));
								_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
							}
						}
						else {
							_case_begin_1c2c89e6e:;
							{
								_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
								if ((_1bc845128_Trait((*(_43913_tup))._field_Types[_44014_i].ptr()) != nullptr)) {
									jule::Ptr<_1bc713a41_Trait> _45929_t1 = _1bc845128_Trait((*(_44021_l))._field_Kind.ptr());;
									jule::Ptr<_1bc713a41_Trait> _46029_t2 = _1bc845128_Trait((*(_43913_tup))._field_Types[_44014_i].ptr());;
									_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("__jule_assign_result.__jule_result_arg", 38));
									_1bde297e9_write((*(_self_))._field_oc, _230d4a1d0_Itoa(_44014_i));
									_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(".mask<", 6));
									static__1bcbcb657_traitDecl(&((*((*(_self_))._field_oc))._field_Buf), _45929_t1);
									_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
									_1bde2b9e9_pushAndWriteMaskMapper((*(_self_))._field_oc, _45929_t1, _46029_t2);
									_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
									goto _match_end_1c2c89e19;
								};
								_1bde3ec71_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_44021_l))._field_Kind);
								_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
								_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("__jule_assign_result.__jule_result_arg", 38));
								_1bde297e9_write((*(_self_))._field_oc, _230d4a1d0_Itoa(_44014_i));
								_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
								_1bde297e9_write((*(_self_))._field_oc, _230d4a1d0_Itoa(static_cast<jule::I64>(_1bde2b686_findTypeOffset((*(_self_))._field_oc.ptr(), _1bc845128_Trait((*(_44021_l))._field_Kind.ptr()), (*(_43913_tup))._field_Types[_44014_i]))));
								_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
							}
						}
						_match_end_1c2c89e19:;
					};
					_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				};
			}
			_iter_next_1c2c87796:;
			++it;
			_44014_i++;
			goto _iter_begin_1c2c87796;
		}
		_iter_end_1c2c87796:;
	};
	_1bde29e9d_doneIndent((*(_self_))._field_oc);
	_1bde2a19b_indent((*(_self_))._field_oc);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1bcbb1010_multiAssign(jule::Ptr<_1bd5a2a77_scopeCoder> _self_, jule::Ptr<_1bc7460e5_MultiAssign> _48735_a) {
	{
		auto &_match_expr{ (*(_48735_a))._field_R };
		
		if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1c2c9a336:;
			{
				_1bd5a5ad0_mapLookupAssign(_self_, &(_48735_a));
				return;;
			}
		}
		_match_end_1c2c9a2d1:;
	};
	{
		auto &_match_expr{ (*(_48735_a))._field_R };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1c2c9b2e3:;
			{
				_1bd5a5d88_multiAssignTup(_self_, &(_48735_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1c2c99ea1:;
			{
				_1bcbb0c57_multiAssignFn(_self_, &(_48735_a));
			}
		}
		else {
			_case_begin_1c2c9a8a8:;
			{
				jule::panic(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:501:13"));;
			}
		}
		_match_end_1c2c9a853:;
	};
}



inline jule::Fn<void(void)> _1bcbb1351_matchExpr(jule::Ptr<_1bd5a2a77_scopeCoder> _self_, jule::Ptr<_1bc746755_Match> _50533_m) {
	if ((!(_1bc81127b_IsConst((*(_50533_m))._field_Expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
		});;
	};
	if (((!(_230d5c874_IsBool((*((*(_50533_m))._field_Expr))._field_Constant.ptr()))) || (!(_230d5a278_ReadBool((*((*(_50533_m))._field_Expr))._field_Constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1bcbb9c0b_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_50533_m))._field_Expr))._field_Model);
		});;
	};
	return nullptr;;
}



inline void _1bcbb16b4_case(jule::Ptr<_1bd5a2a77_scopeCoder> _self_, jule::Ptr<_1bc746755_Match> _51528_m, jule::Ptr<_1bc74738d_Case> _51543_c) {
	if ((((*(_51543_c))._field_Exprs.len() != 0LL) && (!((*(_51528_m))._field_Comptime)))) {
		if ((((*(_51528_m))._field_Cases.len() > 0LL) && ((*(_51528_m))._field_Cases[0LL] == _51543_c))) {
			_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		} else {
			_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
		};
		{
			auto expr = &((*(_51543_c))._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c2ca22e9:;
			if (it != expr_end) {
				jule::I64 _52218_i = it - expr->begin();
				jule::Ptr<_1bc8108a7_Data> _52225_expr = *it;
				{
					{
						
						if ((!((*(_51528_m))._field_TypeMatch))) {
							_case_begin_1c2caa9c8:;
							{
								jule::Fn<void(void)> _52521_caseExpr = _1bcbb1351_matchExpr(_self_, _51528_m);;
								if (_1bc8115bc_GoodOperand((*(_51528_m))._field_Expr.ptr(), &(_52225_expr))) {
									if ((_52521_caseExpr != nullptr)) {
										_52521_caseExpr();
										_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(" == ", 4));
									};
									_1bcbb9c0b_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_52225_expr))._field_Model);
								} else {
									_1bcbb9c0b_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_52225_expr))._field_Model);
									if ((_52521_caseExpr != nullptr)) {
										_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(" == ", 4));
										_52521_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1c2ca3cac:;
							{
								_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
								jule::Ptr<_1bc8411bd_TypeKind> _54125_tk = (*(_52225_expr))._field_Model.cast_ptr<_1bc8411bd_TypeKind>(&__jule_any_type83);;
								if ((_1bc845128_Trait((*((*(_51528_m))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(".type_is(", 9));
									_1bcbb72e1_boolean((*((*(_self_))._field_oc))._field_ec, (_1bc843aa5_Sptr((*(_52225_expr))._field_Kind.ptr()) != nullptr));
									_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
									_1bde297e9_write((*(_self_))._field_oc, _230d4a1d0_Itoa(static_cast<jule::I64>(_1bde2b686_findTypeOffset((*(_self_))._field_oc.ptr(), _1bc845128_Trait((*((*(_51528_m))._field_Expr))._field_Kind.ptr()), (*(_52225_expr))._field_Kind))));
									_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								} else {
									jule::I64 _54925_j = _1bde2a82d_pushAnyType((*(_self_))._field_oc, _54125_tk);;
									_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(".type == &__jule_any_type", 25));
									_1bde297e9_write((*(_self_))._field_oc, _230d4a1d0_Itoa(_54925_j));
								};
							}
						}
						_match_end_1c2ca3be1:;
					};
					if ((((*(_51543_c))._field_Exprs.len() - _52218_i) > 1LL)) {
						_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(" || ", 4));
					};
				}
				_iter_next_1c2ca22e9:;
				++it;
				_52218_i++;
				goto _iter_begin_1c2ca22e9;
			}
			_iter_end_1c2ca22e9:;
		};
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	} else if ((((*(_51528_m))._field_Default == _51543_c) && ((*(_51528_m))._field_Cases.len() != 0LL))) {
		_1bde2a19b_indent((*(_self_))._field_oc);
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("else ", 5));
	};
	_1bde29ca0_addIndent((*(_self_))._field_oc);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1bde2a19b_indent((*(_self_))._field_oc);
	static__1bcbcd868_caseBegin(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_51543_c)));
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	if (((*((*(_51543_c))._field_Scope))._field_Stmts.len() > 0LL)) {
		_1bde2a19b_indent((*(_self_))._field_oc);
		_1bcbb3672_scope(_self_, (*(_51543_c))._field_Scope);
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	};
	_1bde29e9d_doneIndent((*(_self_))._field_oc);
	_1bde2a19b_indent((*(_self_))._field_oc);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1bcbb196c_matchSt(jule::Ptr<_1bd5a2a77_scopeCoder> _self_, jule::Ptr<_1bc746755_Match> _58331_m) {
	if ((((*(_58331_m))._field_Cases.len() == 0LL) && ((*(_58331_m))._field_Default == nullptr))) {
		return;;
	};
	if (((*(_58331_m))._field_Comptime && (((*(_58331_m))._field_Default == nullptr) || ((*((*((*(_58331_m))._field_Default))._field_Scope))._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1bde29ca0_addIndent((*(_self_))._field_oc);
	_1bde2a19b_indent((*(_self_))._field_oc);
	if (((!((*(_58331_m))._field_Comptime)) && (!(_1bc81127b_IsConst((*(_58331_m))._field_Expr.ptr()))))) {
		if ((_1bc9d6b9e_Copy && _1bcbb3ce3_isCopyOptimizable(&((*(_58331_m))._field_Expr)))) {
			_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("auto &_match_expr{ ", 19));
		} else {
			_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("auto _match_expr{ ", 18));
		};
		_1bcbb9c0b_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_58331_m))._field_Expr))._field_Model);
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(" };\n", 4));
		_1bde2a19b_indent((*(_self_))._field_oc);
	};
	if (((*(_58331_m))._field_Cases.len() > 0LL)) {
		{
			auto expr = &((*(_58331_m))._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c2cbd524:;
			if (it != expr_end) {
				jule::Ptr<_1bc74738d_Case> _61125_c = *it;
				{
					if ((_61125_c == nullptr)) {
						goto _iter_next_1c2cbd524;
					};
					_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1bde2a19b_indent((*(_self_))._field_oc);
					_1bcbb16b4_case(_self_, _58331_m, _61125_c);
				}
				_iter_next_1c2cbd524:;
				++it;
				goto _iter_begin_1c2cbd524;
			}
			_iter_end_1c2cbd524:;
		};
	};
	if (((*(_58331_m))._field_Default != nullptr)) {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1bcbb16b4_case(_self_, _58331_m, (*(_58331_m))._field_Default);
	};
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1bde2a19b_indent((*(_self_))._field_oc);
	static__1bcbcd57c_matchEnd(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_58331_m)));
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1bde29e9d_doneIndent((*(_self_))._field_oc);
	_1bde2a19b_indent((*(_self_))._field_oc);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1bcbb1c25_fallSt(jule::Ptr<_1bd5a2a77_scopeCoder> _self_, jule::Ptr<_1bc747987_FallSt> _63826_f) {
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1bcbcd868_caseBegin(&((*((*(_self_))._field_oc))._field_Buf), (*(_63826_f))._field_DestCase);
}



inline void _1bcbb1ecd_breakSt(jule::Ptr<_1bd5a2a77_scopeCoder> _self_, jule::Ptr<_1bc744bb5_BreakSt> _64327_b) {
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	if (((*(_64327_b))._field_It != 0LLU)) {
		static__1bcbccbb9_iterEnd(&((*((*(_self_))._field_oc))._field_Buf), (*(_64327_b))._field_It);
	} else {
		static__1bcbcd57c_matchEnd(&((*((*(_self_))._field_oc))._field_Buf), (*(_64327_b))._field_Mtch);
	};
}



inline void _1bcbb2286_setResult(jule::Ptr<_1bd5a2a77_scopeCoder> _self_, jule::Ptr<_1bc747d1c_RetSt> _65233_r) {
	if (((*((*((*((*(_65233_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = ", 21));
		_1bcbb9c0b_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_65233_r))._field_Expr);
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		_1bde2a19b_indent((*(_self_))._field_oc);
		return;;
	};
	jule::Slice<jule::Ptr<_1bc8108a7_Data>> _66013_datas = (*((*(_65233_r))._field_Expr.cast_ptr<_1ece13980_TupleExprModel>(&__jule_any_type81)))._field_Datas;;
	{
		auto expr = &(_66013_datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2ccb235:;
		if (it != expr_end) {
			jule::I64 _66113_i = it - expr->begin();
			jule::Ptr<_1bc8108a7_Data> _66116_data = *it;
			{
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
				_1bde297e9_write((*(_self_))._field_oc, _230d4a1d0_Itoa(_66113_i));
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1bcbb9c0b_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_66116_data))._field_Model);
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				_1bde2a19b_indent((*(_self_))._field_oc);
			}
			_iter_next_1c2ccb235:;
			++it;
			_66113_i++;
			goto _iter_begin_1c2ccb235;
		}
		_iter_end_1c2ccb235:;
	};
}



inline void _1bcbb253e_retSt(jule::Ptr<_1bd5a2a77_scopeCoder> _self_, jule::Ptr<_1bc747d1c_RetSt> _67129_r) {
	if (_1ece1b515_IsVoid((*((*(_67129_r))._field_Func))._field_Decl.ptr())) {
		if ((*((*((*(_67129_r))._field_Func))._field_Decl))._field_Exceptional) {
			_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};", 31));
			return;;
		};
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("return;", 7));
		return;;
	} else if (((*((*((*((*(_67129_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 0LL)) {
		if ((*((*((*(_67129_r))._field_Func))._field_Decl))._field_Exceptional) {
			_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
			_1bde3ec71_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*((*(_67129_r))._field_Func))._field_Result);
			_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(">{.result=", 10));
			_1bcbb9c0b_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_67129_r))._field_Expr);
			_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
		} else {
			_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
			_1bcbb9c0b_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_67129_r))._field_Expr);
			_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
		};
		return;;
	};
	if (((*(_67129_r))._field_Expr != nullptr)) {
		_1bcbb2286_setResult(_self_, _67129_r);
	};
	if ((*((*((*(_67129_r))._field_Func))._field_Decl))._field_Exceptional) {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
		_1bde44d0e_codeMut1((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), &((*((*(_67129_r))._field_Func))._field_Result));
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(">{.result=__jule_func_result};", 30));
	} else {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("return __jule_func_result;", 26));
	};
}



inline void _1bcbb27e7_var(jule::Ptr<_1bd5a2a77_scopeCoder> _self_, jule::Ptr<_1bc7a750d_Var> _70727_v) {
	if ((!((*(_70727_v))._field_Constant))) {
		_1bde32725_var((*(_self_))._field_oc, _70727_v);
	};
}



inline void _1bcbb2aa0_mutSlicing(jule::Ptr<_1bd5a2a77_scopeCoder> _self_, jule::Ptr<_1bc9c4e67_MutSlicingExprModel> _71334_m) {
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1bcbb9c0b_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_71334_m))._field_Expr);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(").mut_slice(", 12));
	if ((!(_23b84b1c0_Production))) {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1bde2bca2_locInfo((*(_self_))._field_oc, &((*(_71334_m))._field_Token));
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1bcbb9c0b_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_71334_m))._field_Left);
	if (((*(_71334_m))._field_Right != nullptr)) {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1bcbb9c0b_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_71334_m))._field_Right);
	};
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1bcbb2d58_swap(jule::Ptr<_1bd5a2a77_scopeCoder> _self_, jule::Ptr<_1bc2d5679_SwapExprModel> _73028_m) {
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("std::swap(", 10));
	_1bcbb9c0b_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_73028_m))._field_Left))._field_Model);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1bcbb9c0b_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_73028_m))._field_Right))._field_Model);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bcbb3111_st(jule::Ptr<_1bd5a2a77_scopeCoder> _self_, jule::Any _73926_st) {
	if ((_73926_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _73926_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1c2ce5826:;
			{
				_1bcbb3672_scope(_self_, _73926_st.cast_ptr<_1bc74261e_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c2ce6382:;
			{
				_1bcbb27e7_var(_self_, _73926_st.cast_ptr<_1bc7a750d_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1c2ce63e8:;
			{
				_1bcbc3c26_model((*((*(_self_))._field_oc))._field_ec, (*(_73926_st.cast_ptr<_1bc8108a7_Data>(&__jule_any_type24)))._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1c2ce645e:;
			{
				_1bd5a4183_conditional(_self_, _73926_st.cast_ptr<_1bc743257_Conditional>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1c2ce64c5:;
			{
				_1bd5a443b_infIter(_self_, _73926_st.cast_ptr<_1bc743554_InfIter>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1c2ce653b:;
			{
				_1bd5a46e4_whileIter(_self_, _73926_st.cast_ptr<_1bc743a0a_WhileIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1c2ce65a2:;
			{
				_1bd5a499c_rangeIter(_self_, _73926_st.cast_ptr<_1bc744456_RangeIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1c2ce6618:;
			{
				_1bd5a4c55_cont(_self_, _73926_st.cast_ptr<_1bc7447db_ContSt>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1c2ce667e:;
			{
				_1bd5a500d_label(_self_, _73926_st.cast_ptr<_1bc744eb2_Label>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1c2ce66e5:;
			{
				_1bd5a52b6_gotoSt(_self_, _73926_st.cast_ptr<_1bc74538b_GotoSt>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1c2ce675b:;
			{
				_1bd5a556e_postfix(_self_, _73926_st.cast_ptr<_1bc745765_Postfix>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1c2ce67c2:;
			{
				_1bd5a5827_assign(_self_, _73926_st.cast_ptr<_1bc745c1b_Assign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1c2ce6838:;
			{
				_1bcbb1010_multiAssign(_self_, _73926_st.cast_ptr<_1bc7460e5_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1c2ce689e:;
			{
				_1bcbb196c_matchSt(_self_, _73926_st.cast_ptr<_1bc746755_Match>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1c2ce6926:;
			{
				_1bcbb1c25_fallSt(_self_, _73926_st.cast_ptr<_1bc747987_FallSt>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1c2ce699d:;
			{
				_1bcbb1ecd_breakSt(_self_, _73926_st.cast_ptr<_1bc744bb5_BreakSt>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1c2ce6a25:;
			{
				_1bcbb253e_retSt(_self_, _73926_st.cast_ptr<_1bc747d1c_RetSt>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1c2ce6a9c:;
			{
				_1bcbc19b0_pushToSlice((*((*(_self_))._field_oc))._field_ec, _73926_st.cast_ptr<_1bc9c5990_PushToSliceExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1c2ce6b24:;
			{
				_1bcbc1c68_appendToSlice((*((*(_self_))._field_oc))._field_ec, _73926_st.cast_ptr<_1bc9c5d69_AppendToSliceExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1c2ce6b9b:;
			{
				_1bcbb2aa0_mutSlicing(_self_, _73926_st.cast_ptr<_1bc9c4e67_MutSlicingExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1c2ce6c23:;
			{
				_1bcbb2d58_swap(_self_, _73926_st.cast_ptr<_1bc2d5679_SwapExprModel>(&__jule_any_type123));
			}
		}
		else {
			_case_begin_1c2ce58d1:;
			{
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1c2ce5480:;
	};
}



inline void _1bcbb33b9_scopeStmts(jule::Ptr<_1bd5a2a77_scopeCoder> _self_, jule::Ptr<_1bc74261e_Scope>* _79135_s) {
	{
		auto expr = &((*((*(_79135_s))))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2d02dd8:;
		if (it != expr_end) {
			jule::Any _79221_st = *it;
			{
				_1bde2a19b_indent((*(_self_))._field_oc);
				_1bcbb3111_st(_self_, _79221_st);
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1c2d02dd8:;
			++it;
			goto _iter_begin_1c2d02dd8;
		}
		_iter_end_1c2d02dd8:;
	};
}



inline void _1bcbb3672_scope(jule::Ptr<_1bd5a2a77_scopeCoder> _self_, jule::Ptr<_1bc74261e_Scope> _80029_s) {
	_1bde29ca0_addIndent((*(_self_))._field_oc);
	if ((*(_80029_s))._field_Deferred) {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("__JULE_DEFER(", 13));
	};
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1bcbb33b9_scopeStmts(_self_, &(_80029_s));
	_1bde29e9d_doneIndent((*(_self_))._field_oc);
	_1bde2a19b_indent((*(_self_))._field_oc);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if ((*(_80029_s))._field_Deferred) {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
	};
}



inline void _1bcbb392a_funcScope(jule::Ptr<_1bd5a2a77_scopeCoder> _self_, jule::Ptr<_1ece1de96_FnIns> _81633_f) {
	if (((*(_81633_f))._field_Scope == nullptr)) {
		return;;
	};
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1bde29ca0_addIndent((*(_self_))._field_oc);
	if ((!(_1ece1b515_IsVoid((*(_81633_f))._field_Decl.ptr())))) {
		jule::Ptr<_1bc84dd8a_Tuple> _82317_tup = _1bc845645_Tup((*(_81633_f))._field_Result.ptr());;
		if ((_82317_tup != nullptr)) {
			_1bde2a19b_indent((*(_self_))._field_oc);
			_1bde44638_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _82317_tup);
			_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result;\n", 21));
			{
				auto expr = &((*(_82317_tup))._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1c2d0a7a3:;
				if (it != expr_end) {
					jule::I64 _82822_i = it - expr->begin();
					jule::Ptr<_1bc8411bd_TypeKind> _82829_t = *it;
					{
						if (_1bde4720c_shouldInitialized(&(_82829_t))) {
							_1bde2a19b_indent((*(_self_))._field_oc);
							_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1bde297e9_write((*(_self_))._field_oc, _230d4a1d0_Itoa(_82822_i));
							_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_1bcbc3ece_initExpr((*((*(_self_))._field_oc))._field_ec, _82829_t);
							_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
						};
					}
					_iter_next_1c2d0a7a3:;
					++it;
					_82822_i++;
					goto _iter_begin_1c2d0a7a3;
				}
				_iter_end_1c2d0a7a3:;
			};
		} else if (((*((*((*(_81633_f))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
			_1bde2a19b_indent((*(_self_))._field_oc);
			_1bde3ec71_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_81633_f))._field_Result);
			_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result", 19));
			if (_1bde4720c_shouldInitialized(&((*(_81633_f))._field_Result))) {
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1bcbc3ece_initExpr((*((*(_self_))._field_oc))._field_ec, (*(_81633_f))._field_Result);
			};
			_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		};
	};
	_1bcbb33b9_scopeStmts(_self_, &((*(_81633_f))._field_Scope));
	if (((*((*(_81633_f))._field_Decl))._field_Exceptional && _1ece1b515_IsVoid((*(_81633_f))._field_Decl.ptr()))) {
		_1bde2a19b_indent((*(_self_))._field_oc);
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};\n", 32));
	};
	_1bde29e9d_doneIndent((*(_self_))._field_oc);
	_1bde2a19b_indent((*(_self_))._field_oc);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}





std::ostream &operator<<(std::ostream &_Stream, _1bd5a2a77_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1bcbb68b7_exprCoder> static__1bcbb6c80_new(jule::Ptr<_1bde29145_ObjectCoder>* _10524_oc) {
	return jule::new_ptr<_1bcbb68b7_exprCoder>(_1bcbb68b7_exprCoder{._field_oc=(*(_10524_oc))});;
}



inline void _1bcbb7038_string(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_230d58386_Const>* _11127_c) {
	jule::Str _1129_content = _230d5a50e_ReadStr((*(_11127_c)).ptr());;
	if ((_1129_content.len() == 0LL)) {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		return;;
	};
	jule::Str _1179_len = _230d49e16_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_1129_content.len())), 10LL);;
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("::lit(", 6));
	_1bcbc4cc1_cstrLit(&((*((*(_self_))._field_oc))._field_Buf), _1129_content);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1bde297e9_write((*(_self_))._field_oc, _1179_len);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bcbb72e1_boolean(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Bool _12627_b) {
	if (_12627_b) {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("true", 4));
	} else {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
	};
}



inline void _1bcbb74de_nilLit(jule::Ptr<_1bcbb68b7_exprCoder> _self_) {
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
}



inline jule::Bool _1bcbb7830_ftoaSpecialCases(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::F64* _13837_x) {
	{
		
		if (_230ced958_IsNaN((*(_13837_x)))) {
			_case_begin_1c2d3238a:;
			{
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("NAN", 3));
			}
		}
		else if (_230cee063_IsInf((*(_13837_x)), 1LL)) {
			_case_begin_1c2d32412:;
			{
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("INFINITY", 8));
			}
		}
		else if (_230cee063_IsInf((*(_13837_x)), -1LL)) {
			_case_begin_1c2d32489:;
			{
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1c2d322ad:;
			{
				return false;;
			}
		}
		_match_end_1c2d321e2:;
	};
	return true;;
}



inline void _1bcbb7ad8_float32(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_230d58386_Const>* _15228_c) {
	jule::F64 _1539_x = _230d5b048_AsF64((*(_15228_c)).ptr());;
	if (_1bcbb7830_ftoaSpecialCases(_self_, &(_1539_x))) {
		return;;
	};
	{
		
		if ((_1539_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1c2d365e2:;
			{
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("jule::MAX_F32", 13));
			}
		}
		else if ((_1539_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1c2d35943:;
			{
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1c2d355d0:;
			{
				_1bcbc5167_ftoa(&((*((*(_self_))._field_oc))._field_Buf), _1539_x, 32LL);
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("f", 1));
			}
		}
		_match_end_1c2d353b0:;
	};
}



inline void _1bcbb7d91_float64(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_230d58386_Const>* _17128_c) {
	jule::F64 _1729_x = _230d5b048_AsF64((*(_17128_c)).ptr());;
	if (_1bcbb7830_ftoaSpecialCases(_self_, &(_1729_x))) {
		return;;
	};
	{
		
		if ((_1729_x == jule::MAX_F64)) {
			_case_begin_1c2d38e85:;
			{
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("jule::MAX_F64", 13));
			}
		}
		else if ((_1729_x == jule::MIN_F64)) {
			_case_begin_1c2d38eeb:;
			{
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1c2d38b00:;
			{
				_1bcbc5167_ftoa(&((*((*(_self_))._field_oc))._field_Buf), _1729_x, 64LL);
			}
		}
		_match_end_1c2d388d0:;
	};
}



inline void _1bcbb8149_constant(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_230d58386_Const> _18932_c) {
	{
		
		if (_230d5cb0a_IsStr(_18932_c.ptr())) {
			_case_begin_1c2d3adee:;
			{
				_1bcbb7038_string(_self_, &(_18932_c));
			}
		}
		else if (_230d5c874_IsBool(_18932_c.ptr())) {
			_case_begin_1c2d3ae65:;
			{
				_1bcbb72e1_boolean(_self_, _230d5a278_ReadBool(_18932_c.ptr()));
			}
		}
		else if (_230d5cd91_IsF64(_18932_c.ptr())) {
			_case_begin_1c2d3aecb:;
			{
				{
					
					if ((*(_18932_c))._field_Kind.equal("f32", 3)) {
						_case_begin_1c2d3d891:;
						{
							_1bcbb7ad8_float32(_self_, &(_18932_c));
						}
					}
					else {
						_case_begin_1c2d3d4ea:;
						{
							_1bcbb7d91_float64(_self_, &(_18932_c));
						}
					}
					_match_end_1c2d3d440:;
				};
			}
		}
		else if (_230d5c357_IsI64(_18932_c.ptr())) {
			_case_begin_1c2d3b042:;
			{
				_1bcbc5453_itoa(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::I64>(_230d59c5b_ReadI64(_18932_c.ptr())));
			}
		}
		else if (_230d5c5dd_IsU64(_18932_c.ptr())) {
			_case_begin_1c2d3b96b:;
			{
				_1bcbc573e_utoa(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::U64>(_230d59ee2_ReadU64(_18932_c.ptr())));
			}
		}
		else if (_230d5d127_IsNil(_18932_c.ptr())) {
			_case_begin_1c2d3b9d2:;
			{
				_1bcbb74de_nilLit(_self_);
			}
		}
		else {
			_case_begin_1c2d3ad88:;
			{
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1c2d3acbc:;
	};
}



inline void _1bcbb8567_divByZeroBinary(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1bc583a9d_Token>* _21336_op, jule::Ptr<_1ece0cc87_OperandExprModel>* _21353_l, jule::Ptr<_1ece0cc87_OperandExprModel>* _21380_r) {
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("jule::", 6));
	{
		auto &_match_expr{ (*((*(_21336_op))))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1c2d42642:;
			{
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("div(", 4));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1c2d426b9:;
			{
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("mod(", 4));
			}
		}
		_match_end_1c2d425cb:;
	};
	if ((!(_23b84b1c0_Production))) {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1bde2bca2_locInfo((*(_self_))._field_oc, _21336_op);
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("\",", 2));
	};
	_1bcbb9c0b_possibleRefExpr(_self_, (*((*(_21353_l))))._field_Model);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
	_1bcbb9c0b_possibleRefExpr(_self_, (*((*(_21380_r))))._field_Model);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bcbb8820_unsafeBinary(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece0d282_BinaryExprModel> _23536_m) {
	if ((((*((*(_23536_m))._field_Op))._field_Id == static_cast<jule::U64>(50LLU)) || ((*((*(_23536_m))._field_Op))._field_Id == static_cast<jule::U64>(51LLU)))) {
		if (_1bcbc619b_isAny(&((*((*(_23536_m))._field_Left))._field_Kind))) {
			if (((!(_1bc84229b_IsNil((*((*(_23536_m))._field_Right))._field_Kind.ptr()))) && (!(_1bcbc619b_isAny(&((*((*(_23536_m))._field_Right))._field_Kind)))))) {
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				if (((*((*(_23536_m))._field_Op))._field_Id == static_cast<jule::U64>(51LLU))) {
					_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("!", 1));
				};
				jule::I64 _24521_i = _1bde2a82d_pushAnyType((*(_self_))._field_oc, (*((*(_23536_m))._field_Right))._field_Kind);;
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("__jule_any_type", 15));
				_1bde297e9_write((*(_self_))._field_oc, _230d4a1d0_Itoa(_24521_i));
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("_compare(", 9));
				_1bcbb9c0b_possibleRefExpr(_self_, (*((*(_23536_m))._field_Left))._field_Model);
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1bcbb9c0b_possibleRefExpr(_self_, (*((*(_23536_m))._field_Right))._field_Model);
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			};
		};
	};
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1bcbb9c0b_possibleRefExpr(_self_, (*((*(_23536_m))._field_Left))._field_Model);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1bde297e9_write((*(_self_))._field_oc, (*((*(_23536_m))._field_Op))._field_Kind);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1bcbb9c0b_possibleRefExpr(_self_, (*((*(_23536_m))._field_Right))._field_Model);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bcbb8ac8_binary(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece0d282_BinaryExprModel> _26630_m) {
	{
		auto &_match_expr{ (*((*(_26630_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1c2d535dc:;
			{
				if ((_1bc844d92_Struct((*((*(_26630_m))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1bcbb8567_divByZeroBinary(_self_, &((*(_26630_m))._field_Op), &((*(_26630_m))._field_Left), &((*(_26630_m))._field_Right));
					return;;
				};
			}
		}
		_match_end_1c2d53532:;
	};
	_1bcbb8820_unsafeBinary(_self_, _26630_m);
}



inline void _1bcbb8d81_var(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1bc7a750d_Var> _27827_m) {
	if ((*(_27827_m))._field_Binded) {
		jule::Ptr<_1bc594a59_Directive> _28013_d = _1bde46a7a_findDirective(&((*(_27827_m))._field_Directives), jule::Str::lit("namespace", 9));;
		if ((_28013_d != nullptr)) {
			_1bde29aa2_writeBytes((*(_self_))._field_oc, _1bde36691_concatAllParts((*(_28013_d))._field_Args));
			_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1bcbcc5e2_var(&((*((*(_self_))._field_oc))._field_Buf), _27827_m);
}



inline void _1bcbb9139_structureIns(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1bc5be0b1_StructIns> _28936_m) {
	_1bde3d027_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _28936_m);
}



inline void _1bcbb93e2_unary(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece0d65b_UnaryExprModel> _29329_m) {
	{
		auto &_match_expr{ (*((*(_29329_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1c2d59725:;
			{
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("(~(", 3));
				_1bcbb9c0b_possibleRefExpr(_self_, (*((*(_29329_m))._field_Expr))._field_Model);
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1c2d5979c:;
			{
				if ((_23b84b1c0_Production || (_1bc843aa5_Sptr((*((*(_29329_m))._field_Expr))._field_Kind.ptr()) == nullptr))) {
					goto _match_end_1c2d59659;
				};
				_1bcbb9c0b_possibleRefExpr(_self_, (*((*(_29329_m))._field_Expr))._field_Model);
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(".get(\"", 6));
				_1bde2bca2_locInfo((*(_self_))._field_oc, &((*(_29329_m))._field_Op));
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("\")", 2));
				return;;
			}
		}
		_match_end_1c2d59659:;
	};
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1bde297e9_write((*(_self_))._field_oc, (*((*(_29329_m))._field_Op))._field_Kind);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1bcbb9c0b_possibleRefExpr(_self_, (*((*(_29329_m))._field_Expr))._field_Model);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1bcbb969a_structureLit(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece0e030_StructLitExprModel> _31736_m) {
	if ((*((*((*(_31736_m))._field_Strct))._field_Decl))._field_Binded) {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	};
	static__1bcbcc01a_structureIns(&((*((*(_self_))._field_oc))._field_Buf), &((*(_31736_m))._field_Strct));
	if ((*((*((*(_31736_m))._field_Strct))._field_Decl))._field_Binded) {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	if (((*(_31736_m))._field_Args.len() > 0LL)) {
		_julec_label_1c2d64345:;
		{
			auto expr = &((*((*(_31736_m))._field_Strct))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c2d64477:;
			if (it != expr_end) {
				jule::I64 _33017_i = it - expr->begin();
				jule::Ptr<_1bc5bd511_FieldIns> _33020_f = *it;
				{
					{
						auto expr = &((*(_31736_m))._field_Args);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c2d65302:;
						if (it != expr_end) {
							jule::Ptr<_1ece0db89_StructArgExprModel> _33129_arg = *it;
							{
								if (((*(_33129_arg))._field_Field == _33020_f)) {
									_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
									static__1bcbcc306_field(&((*((*(_self_))._field_oc))._field_Buf), &((*((*(_33129_arg))._field_Field))._field_Decl));
									_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
									_1bcbb9c0b_possibleRefExpr(_self_, (*((*(_33129_arg))._field_Expr))._field_Model);
									if ((((*((*(_31736_m))._field_Strct))._field_Fields.len() - _33017_i) > 1LL)) {
										_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
									};
									goto _iter_next_1c2d64477;
								};
							}
							_iter_next_1c2d65302:;
							++it;
							goto _iter_begin_1c2d65302;
						}
						_iter_end_1c2d65302:;
					};
				}
				_iter_next_1c2d64477:;
				++it;
				_33017_i++;
				goto _iter_begin_1c2d64477;
			}
			_iter_end_1c2d64477:;
		};
	};
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1bcbb9953_allocStructure(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece0e32c_AllocStructLitExprModel> _34838_m) {
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	static__1bcbcc01a_structureIns(&((*((*(_self_))._field_oc))._field_Buf), &((*((*(_34838_m))._field_Lit))._field_Strct));
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1bcbb969a_structureLit(_self_, (*(_34838_m))._field_Lit);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bcbb9c0b_possibleRefExpr(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Any _35635_expr) {
	{
		auto &_match_expr{ _35635_expr };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c2d6c6c2:;
			{
				jule::Ptr<_1bc7a750d_Var> _35913_v = _35635_expr.cast_ptr<_1bc7a750d_Var>(&__jule_any_type8);;
				if ((*(_35913_v))._field_Reference) {
					_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("(*(", 3));
					_1bcbc3c26_model(_self_, _35635_expr);
					_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
					return;;
				};
			}
		}
		_match_end_1c2d6c66c:;
	};
	_1bcbc3c26_model(_self_, _35635_expr);
}



inline void _1bcbba129_castTraitFromTrait(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece0e8b0_CastingExprModel>* _37043_m, jule::Ptr<_1bc713a41_Trait> _37069_t1, jule::Ptr<_1bc713a41_Trait> _37085_t2) {
	_1bcbb9c0b_possibleRefExpr(_self_, (*((*(_37043_m))))._field_Expr);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(".mask<", 6));
	static__1bcbcb657_traitDecl(&((*((*(_self_))._field_oc))._field_Buf), _37069_t1);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1bde2b9e9_pushAndWriteMaskMapper((*(_self_))._field_oc, _37069_t1, _37085_t2);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bcbba3d2_casting(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece0e8b0_CastingExprModel> _38531_m) {
	{
		
		if (_1bcbc619b_isAny(&((*(_38531_m))._field_Kind))) {
			_case_begin_1c2d72be4:;
			{
				if (_1bc84229b_IsNil((*(_38531_m))._field_ExprKind.ptr())) {
					_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("jule::Any()", 11));
					return;;
				};
				if ((_1bc844358_TypeEnum((*(_38531_m))._field_ExprKind.ptr()) != nullptr)) {
					_1bcbb9c0b_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
					return;;
				};
				jule::I64 _39613_i = _1bde2a82d_pushAnyType((*(_self_))._field_oc, (*(_38531_m))._field_ExprKind);;
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("jule::Any(", 10));
				{
					auto &_match_expr{ (*(_38531_m))._field_Expr };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1c2d74894:;
						{
							jule::Ptr<_1bc848c97_Prim> _40017_prim = _1bc84381e_Prim((*(_38531_m))._field_ExprKind.ptr());;
							if (((_40017_prim != nullptr) && _230d577a3_IsInt((*(_40017_prim))._field_Kind))) {
								_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
								_1bde3a0bd_prim((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _40017_prim);
								_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
								_1bcbb9c0b_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
								_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1c2d76753;
							};
							goto _case_begin_1c2d767a8;
						}
					}
					else {
						_case_begin_1c2d767a8:;
						{
							_1bcbb9c0b_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
						}
					}
					_match_end_1c2d76753:;
				};
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
				_1bde297e9_write((*(_self_))._field_oc, _230d4a1d0_Itoa(_39613_i));
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if (_1bcbc619b_isAny(&((*(_38531_m))._field_ExprKind))) {
			_case_begin_1c2d72c6b:;
			{
				_1bcbb9c0b_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
				if ((_1bc843aa5_Sptr((*(_38531_m))._field_Kind.ptr()) != nullptr)) {
					_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1bde3ec71_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_1bc843aa5_Sptr((*(_38531_m))._field_Kind.ptr())))._field_Elem);
				} else {
					_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1bde3ec71_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_38531_m))._field_Kind);
				};
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_23b84b1c0_Production))) {
					_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1bde2bca2_locInfo((*(_self_))._field_oc, &((*(_38531_m))._field_Token));
					_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("&__jule_any_type", 16));
				_1bde297e9_write((*(_self_))._field_oc, _230d4a1d0_Itoa(static_cast<jule::I64>(_1bde2a82d_pushAnyType((*(_self_))._field_oc, (*(_38531_m))._field_Kind))));
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1bc843d3b_Ptr((*(_38531_m))._field_ExprKind.ptr()) != nullptr) || (_1bc843d3b_Ptr((*(_38531_m))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2d72ce3:;
			{
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_1bde3ec71_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_38531_m))._field_Kind);
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
				_1bcbb9c0b_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if ((_1bc845128_Trait((*(_38531_m))._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1c2d72d6a:;
			{
				if ((_1bc845128_Trait((*(_38531_m))._field_Kind.ptr()) != nullptr)) {
					_1bcbba129_castTraitFromTrait(_self_, &(_38531_m), _1bc845128_Trait((*(_38531_m))._field_Kind.ptr()), _1bc845128_Trait((*(_38531_m))._field_ExprKind.ptr()));
					return;;
				};
				_1bcbb9c0b_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
				if ((_1bc843aa5_Sptr((*(_38531_m))._field_Kind.ptr()) != nullptr)) {
					_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1bde3ec71_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_1bc843aa5_Sptr((*(_38531_m))._field_Kind.ptr())))._field_Elem);
				} else {
					_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1bde3ec71_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_38531_m))._field_Kind);
				};
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_23b84b1c0_Production))) {
					_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1bde2bca2_locInfo((*(_self_))._field_oc, &((*(_38531_m))._field_Token));
					_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1bde297e9_write((*(_self_))._field_oc, _230d4a1d0_Itoa(static_cast<jule::I64>(_1bde2b686_findTypeOffset((*(_self_))._field_oc.ptr(), _1bc845128_Trait((*(_38531_m))._field_ExprKind.ptr()), (*(_38531_m))._field_Kind))));
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1bc845128_Trait((*(_38531_m))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2d72de2:;
			{
				_1bde3ec71_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_38531_m))._field_Kind);
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1bcbb9c0b_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1bde297e9_write((*(_self_))._field_oc, _230d4a1d0_Itoa(static_cast<jule::I64>(_1bde2b686_findTypeOffset((*(_self_))._field_oc.ptr(), _1bc845128_Trait((*(_38531_m))._field_Kind.ptr()), (*(_38531_m))._field_ExprKind))));
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1c2d72aa1:;
	};
	jule::Ptr<_1bc848c97_Prim> _4779_prim = _1bc84381e_Prim((*(_38531_m))._field_Kind.ptr());;
	jule::Ptr<_1bc848c97_Prim> _4789_eprim = _1bc84381e_Prim((*(_38531_m))._field_ExprKind.ptr());;
	if ((((_4789_eprim != nullptr) && (_4779_prim != nullptr)) && _1bc84c22e_IsStr(_4779_prim.ptr()))) {
		if (_1bc84a68e_IsU8(_4789_eprim.ptr())) {
			_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::from_byte(", 21));
		} else {
			_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::from_rune(", 21));
		};
		_1bcbb9c0b_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
	_1bde3ec71_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_38531_m))._field_Kind);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1bcbb9c0b_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bcbba68a_models(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Slice<jule::Any> _49630_args) {
	if ((_49630_args.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &(_49630_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2da2c8a:;
		if (it != expr_end) {
			jule::I64 _50014_i = it - expr->begin();
			jule::Any _50021_a = *it;
			{
				_1bcbb9c0b_possibleRefExpr(_self_, _50021_a);
				if (((_49630_args.len() - _50014_i) > 1LL)) {
					_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
				};
			}
			_iter_next_1c2da2c8a:;
			++it;
			_50014_i++;
			goto _iter_begin_1c2da2c8a;
		}
		_iter_end_1c2da2c8a:;
	};
}



inline void _1bcbba943_args(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece10262_FnCallExprModel>* _50829_m) {
	jule::I64 _50913_j = 0LL;;
	if (((((*((*((*(_50829_m))))._field_Func))._field_Owner != nullptr) && (!((*((*((*((*(_50829_m))))._field_Func))._field_Decl))._field_Statically))) || (((*((*((*(_50829_m))))._field_Func))._field_Params.len() > 0LL) && _1ece19bd9_IsSelf((*((*((*((*(_50829_m))))._field_Func))._field_Params[0LL]))._field_Decl.ptr())))) {
		(_50913_j)++;
	};
	{
		auto expr = &((*((*(_50829_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2da5be4:;
		if (it != expr_end) {
			jule::I64 _51413_i = it - expr->begin();
			jule::Any _51416_arg = *it;
			{
				jule::Ptr<_1ece1ceea_ParamIns> _51513_p = (*((*((*(_50829_m))))._field_Func))._field_Params[_50913_j];;
				if ((((*(_51513_p))._field_Decl != nullptr) && (*((*(_51513_p))._field_Decl))._field_Reference)) {
					{
						auto &_match_expr{ _51416_arg };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1c2da89e9:;
							{
								jule::Ptr<_1bc7a750d_Var> _51921_v = _51416_arg.cast_ptr<_1bc7a750d_Var>(&__jule_any_type8);;
								if ((*(_51921_v))._field_Reference) {
									_1bcbc3c26_model(_self_, _51416_arg);
									goto _julec_label_1c2da8455;
								};
							}
						}
						_match_end_1c2da8994:;
					};
					_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1bcbc3c26_model(_self_, _51416_arg);
					_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
					goto _julec_label_1c2da8455;
				};
				_1bcbb9c0b_possibleRefExpr(_self_, _51416_arg);
				_julec_label_1c2da8455:;
				if ((((*((*(_50829_m))))._field_Args.len() - _51413_i) > 1LL)) {
					_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				(_50913_j)++;
			}
			_iter_next_1c2da5be4:;
			++it;
			_51413_i++;
			goto _iter_begin_1c2da5be4;
		}
		_iter_end_1c2da5be4:;
	};
}



inline void _1bcbbabeb_modelForCall(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Any _53936_expr) {
	{
		auto &_match_expr{ _53936_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c2dad7ce:;
			{
				_1bcbbde30_funcIns(_self_, _53936_expr.cast_ptr<_1ece1de96_FnIns>(&__jule_any_type7));
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1c2dad856:;
			{
				jule::Ptr<_1ece12d03_StructSubIdentExprModel> _54517_ssie = _53936_expr.cast_ptr<_1ece12d03_StructSubIdentExprModel>(&__jule_any_type97);;
				if (((*(_54517_ssie))._field_Method != nullptr)) {
					_1bcbbde30_funcIns(_self_, (*(_54517_ssie))._field_Method);
					return;;
				};
			}
		}
		_match_end_1c2dad768:;
	};
	_1bcbb9c0b_possibleRefExpr(_self_, _53936_expr);
}



inline void _1bcbbaea4_pushCallInf(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece10262_FnCallExprModel>* _55432_m) {
	if ((_23b84b1c0_Production || (!((*((*((*(_55432_m))))._field_Func))._field_Anon)))) {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		return;;
	};
	if ((*((*((*(_55432_m))))._field_Func))._field_Anon) {
		{
			auto &_match_expr{ (*((*(_55432_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type97) {
				_case_begin_1c2db2250:;
				{
					if ((*((*((*((*((*((*(_55432_m))))._field_Expr.cast_ptr<_1ece12d03_StructSubIdentExprModel>(&__jule_any_type97)))._field_Field))._field_Decl))._field_Owner))._field_Binded) {
						_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
						return;;
					};
				}
			}
			_match_end_1c2db21ea:;
		};
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(".call", 5));
	};
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("(\"", 2));
	_1bde2bca2_locInfo((*(_self_))._field_oc, &((*((*(_55432_m))))._field_Token));
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	if (((*((*(_55432_m))))._field_Args.len() != 0LL)) {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	};
}



inline jule::Bool _1bcbbb2e5_isWrapped(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece10262_FnCallExprModel>* _57734_m) {
	if ((((!(_1ece2042b_IsBuiltin((*((*(_57734_m))))._field_Func.ptr()))) && ((*((*((*((*(_57734_m))))._field_Func))._field_Decl))._field_Params.len() > 0LL)) && _1ece19bd9_IsSelf((*((*((*((*(_57734_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_57734_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type97) {
				_case_begin_1c2db6e7a:;
				{
					jule::Ptr<_1ece12d03_StructSubIdentExprModel> _58121_ssie = (*((*(_57734_m))))._field_Expr.cast_ptr<_1ece12d03_StructSubIdentExprModel>(&__jule_any_type97);;
					{
						
						if (_1ece19e70_IsRef((*((*((*((*(_57734_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()) || (_1bc843aa5_Sptr((*((*(_58121_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1c2db8a92:;
							{
								goto _match_end_1c2db7d38;
							}
						}
						else {
							_case_begin_1c2db7d9e:;
							{
								if ((_1bc844d92_Struct((*((*(_58121_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									if ((!((*((*(_58121_ssie))._field_Expr))._field_Lvalue))) {
										_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("({ auto _wrap_copy = ", 21));
										_1bcbc3c26_model(_self_, (*((*(_58121_ssie))._field_Expr))._field_Model);
										_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1c2db7d38:;
					};
				}
			}
			_match_end_1c2db6e25:;
		};
	};
	return false;;
}



inline void _1bcbbb59d_pureFuncCall(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece10262_FnCallExprModel>* _60137_m) {
	jule::Bool _6029_wrapped = _1bcbbb2e5_isWrapped(_self_, _60137_m);;
	_1bcbbabeb_modelForCall(_self_, (*((*(_60137_m))))._field_Expr);
	if ((!(_1ece2042b_IsBuiltin((*((*(_60137_m))))._field_Func.ptr())))) {
		if (((*((*((*((*(_60137_m))))._field_Func))._field_Decl))._field_Binded && ((*((*((*(_60137_m))))._field_Func))._field_Generics.len() > 0LL))) {
			if ((!(_1bde46e43_hasDirective(&((*((*((*((*(_60137_m))))._field_Func))._field_Decl))._field_Directives), jule::Str::lit("cdef", 4))))) {
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("<", 1));
				{
					auto expr = &((*((*((*(_60137_m))))._field_Func))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c2dc003d:;
					if (it != expr_end) {
						jule::I64 _60826_i = it - expr->begin();
						jule::Ptr<_1bc83e7d7_InsGeneric> _60833_g = *it;
						{
							_1bde3ec71_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_60833_g))._field_Kind);
							if ((((*((*((*(_60137_m))))._field_Func))._field_Generics.len() - _60826_i) > 1LL)) {
								_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
							};
						}
						_iter_next_1c2dc003d:;
						++it;
						_60826_i++;
						goto _iter_begin_1c2dc003d;
					}
					_iter_end_1c2dc003d:;
				};
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(">", 1));
			};
		};
	};
	_1bcbbaea4_pushCallInf(_self_, _60137_m);
	jule::Bool _61913_locinfo = false;;
	if ((((!(_1ece2042b_IsBuiltin((*((*(_60137_m))))._field_Func.ptr()))) && ((*((*((*((*(_60137_m))))._field_Func))._field_Decl))._field_Params.len() > 0LL)) && _1ece19bd9_IsSelf((*((*((*((*(_60137_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_60137_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type97) {
				_case_begin_1c2dc574c:;
				{
					jule::Ptr<_1ece12d03_StructSubIdentExprModel> _62321_ssie = (*((*(_60137_m))))._field_Expr.cast_ptr<_1ece12d03_StructSubIdentExprModel>(&__jule_any_type97);;
					{
						
						if (_1ece19e70_IsRef((*((*((*((*(_60137_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr())) {
							_case_begin_1c2dca06a:;
							{
								_1bcbb9c0b_possibleRefExpr(_self_, (*((*((*((*(_62321_ssie))._field_Expr))._field_Model.cast_ptr<_1ece0d65b_UnaryExprModel>(&__jule_any_type110)))._field_Expr))._field_Model);
							}
						}
						else if ((_1bc843aa5_Sptr((*((*(_62321_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1c2dc675e:;
							{
								_1bcbb9c0b_possibleRefExpr(_self_, (*((*((*((*(_62321_ssie))._field_Expr))._field_Model.cast_ptr<_1ece0d65b_UnaryExprModel>(&__jule_any_type110)))._field_Expr))._field_Model);
								_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(".ptr(", 5));
								if ((!(_23b84b1c0_Production))) {
									_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
									_1bde2bca2_locInfo((*(_self_))._field_oc, &((*((*(_60137_m))))._field_Token));
									_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
								};
								_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
							}
						}
						else {
							_case_begin_1c2dc66e8:;
							{
								if ((_1bc844d92_Struct((*((*(_62321_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									{
										auto &_match_expr{ (*((*(_62321_ssie))._field_Expr))._field_Model };
										
										if (_match_expr.type == &__jule_any_type8) {
											_case_begin_1c2dc6ebd:;
											{
												jule::Ptr<_1bc7a750d_Var> _64229_v = (*((*(_62321_ssie))._field_Expr))._field_Model.cast_ptr<_1bc7a750d_Var>(&__jule_any_type8);;
												if ((*(_64229_v))._field_Reference) {
													goto _match_end_1c2dc74da;
												};
												goto _case_begin_1c2dc7540;
											}
										}
										else {
											_case_begin_1c2dc7540:;
											{
												_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
											}
										}
										_match_end_1c2dc74da:;
									};
								};
								if (_6029_wrapped) {
									_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("_wrap_copy", 10));
								} else if ((_1bc843d3b_Ptr((*((*(_62321_ssie))._field_Expr))._field_Kind.ptr()) == nullptr)) {
									_1bcbc3c26_model(_self_, (*((*(_62321_ssie))._field_Expr))._field_Model);
								} else {
									_1bcbb9c0b_possibleRefExpr(_self_, (*((*((*((*(_62321_ssie))._field_Expr))._field_Model.cast_ptr<_1ece0d65b_UnaryExprModel>(&__jule_any_type110)))._field_Expr))._field_Model);
								};
							}
						}
						_match_end_1c2dc6682:;
					};
					if (((*((*(_60137_m))))._field_Args.len() > 0LL)) {
						_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type96) {
				_case_begin_1c2dc57c4:;
				{
					_1bcbb9c0b_possibleRefExpr(_self_, (*((*((*(_60137_m))))._field_Expr.cast_ptr<_1ece12462_TraitSubIdentExprModel>(&__jule_any_type96)))._field_Expr);
					if ((!(_23b84b1c0_Production))) {
						_61913_locinfo=true;
					};
					if (((*((*(_60137_m))))._field_Args.len() > 0LL)) {
						_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			_match_end_1c2dc56d6:;
		};
	};
	_1bcbba943_args(_self_, _60137_m);
	if (_61913_locinfo) {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(", \"", 3));
		_1bde2bca2_locInfo((*(_self_))._field_oc, &((*((*(_60137_m))))._field_Token));
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	};
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if (_6029_wrapped) {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
	};
}



inline void _1bcbbb856_coFuncCall(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece10262_FnCallExprModel>* _68735_m) {
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1bde29ca0_addIndent((*(_self_))._field_oc);
	_2096a4489_StrBuilder _69013_head = static__2096a48da_New(32LL);;
	_2096a4e4b_WriteStr(&_69013_head, jule::Str::lit("std::thread([", 13));
	if (((*((*((*(_68735_m))))._field_Func))._field_Owner != nullptr)) {
		_2096a4e4b_WriteStr(&_69013_head, jule::Str::lit("_self_", 6));
		if (((*((*(_68735_m))))._field_Args.len() > 0LL)) {
			_2096a4e4b_WriteStr(&_69013_head, jule::Str::lit(", ", 2));
		};
	};
	{
		auto expr = &((*((*(_68735_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2ddb169:;
		if (it != expr_end) {
			jule::I64 _69813_i = it - expr->begin();
			jule::Any _69816_arg = *it;
			{
				if ((_69813_i > 0LL)) {
					_2096a4e4b_WriteStr(&_69013_head, jule::Str::lit(", ", 2));
				};
				{
					auto &_match_expr{ _69816_arg };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1c2ddc676:;
						{
							jule::Ptr<_1bc7a750d_Var> _70421_v = _69816_arg.cast_ptr<_1bc7a750d_Var>(&__jule_any_type8);;
							static__1bcbcc5e2_var(&(_69013_head), _70421_v);
							goto _iter_next_1c2ddb169;
						}
					}
					_match_end_1c2ddbe06:;
				};
				jule::Str _70813_name = (jule::Str::lit("_co_arg_", 8) + _230d4a1d0_Itoa(_69813_i));;
				_2096a4e4b_WriteStr(&_69013_head, _70813_name);
				_1bde2a19b_indent((*(_self_))._field_oc);
				_1bde3ec71_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*((*((*((*(_68735_m))))._field_Func))._field_Params[_69813_i]))._field_Kind);
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				if ((*((*((*((*((*(_68735_m))))._field_Func))._field_Params[_69813_i]))._field_Decl))._field_Reference) {
					_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
				};
				_1bde297e9_write((*(_self_))._field_oc, _70813_name);
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1bcbb9c0b_possibleRefExpr(_self_, _69816_arg);
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				jule::Any _72013_argS = jule::Any(_70813_name, &__jule_any_type4);;
				(*((*(_68735_m))))._field_Args[_69813_i]=(*(((jule::Any*)((&(_72013_argS))))));
			}
			_iter_next_1c2ddb169:;
			++it;
			_69813_i++;
			goto _iter_begin_1c2ddb169;
		}
		_iter_end_1c2ddb169:;
	};
	_1bde2a19b_indent((*(_self_))._field_oc);
	_2096a4b93_Write(&(*((*(_self_))._field_oc))._field_Buf, _2096a61e4_Buf(&_69013_head));
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("](void) mutable -> void {\n", 26));
	_1bde29ca0_addIndent((*(_self_))._field_oc);
	_1bde2a19b_indent((*(_self_))._field_oc);
	_1bcbbb59d_pureFuncCall(_self_, _68735_m);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1bde29e9d_doneIndent((*(_self_))._field_oc);
	_1bde2a19b_indent((*(_self_))._field_oc);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("}).detach();\n", 13));
	_1bde29e9d_doneIndent((*(_self_))._field_oc);
	_1bde2a19b_indent((*(_self_))._field_oc);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1bcbbbbb9_writeUseExpr(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece1de96_FnIns>* _73837_f, jule::Ptr<_1bc8108a7_Data> _73852_d) {
	if ((_1bc845645_Tup((*(_73852_d))._field_Kind.ptr()) == nullptr)) {
		_1bcbb9c0b_possibleRefExpr(_self_, (*(_73852_d))._field_Model);
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
		return;;
	};
	jule::Ptr<_1ece13980_TupleExprModel> _74413_tup = (*(_73852_d))._field_Model.cast_ptr<_1ece13980_TupleExprModel>(&__jule_any_type81);;
	_1bde44638_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _1bc845645_Tup((*((*(_73837_f))))._field_Result.ptr()));
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	{
		auto expr = &((*(_74413_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2deaa91:;
		if (it != expr_end) {
			jule::I64 _74713_i = it - expr->begin();
			jule::Ptr<_1bc8108a7_Data> _74716_data = *it;
			{
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
				_1bde297e9_write((*(_self_))._field_oc, _230d4a1d0_Itoa(_74713_i));
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
				_1bcbb9c0b_possibleRefExpr(_self_, (*(_74716_data))._field_Model);
				if ((((*(_74413_tup))._field_Datas.len() - _74713_i) > 1LL)) {
					_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1c2deaa91:;
			++it;
			_74713_i++;
			goto _iter_begin_1c2deaa91;
		}
		_iter_end_1c2deaa91:;
	};
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
}



inline void _1bcbbbe72_funcCall(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece10262_FnCallExprModel> _75932_m) {
	if ((*(_75932_m))._field_IsCo) {
		_1bcbbb856_coFuncCall(_self_, &(_75932_m));
		return;;
	};
	if (((_1ece2042b_IsBuiltin((*(_75932_m))._field_Func.ptr()) || (!((*((*((*(_75932_m))._field_Func))._field_Decl))._field_Exceptional))) || (((*(_75932_m))._field_Except != nullptr) && ((*((*(_75932_m))._field_Except))._field_Stmts.len() == 0LL)))) {
		_1bcbbb59d_pureFuncCall(_self_, &(_75932_m));
		return;;
	};
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1bde29ca0_addIndent((*(_self_))._field_oc);
	_1bde2a19b_indent((*(_self_))._field_oc);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("auto except = ", 14));
	_1bcbbb59d_pureFuncCall(_self_, &(_75932_m));
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1bde2a19b_indent((*(_self_))._field_oc);
	if (((*(_75932_m))._field_Except != nullptr)) {
		if ((((*((*(_75932_m))._field_Func))._field_Result == nullptr) || (!((*(_75932_m))._field_Assigned)))) {
			_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) ", 18));
			_1bcbb3672_scope((*((*(_self_))._field_oc))._field_sc, (*(_75932_m))._field_Except);
			_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		} else {
			jule::Bool _78517_forwarded = _1bcbc5b18_isForwarded(&((*(_75932_m))._field_Except));;
			_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("(except.ok()) ? (except.result) : (", 35));
			if (_78517_forwarded) {
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
			};
			jule::Any _79021_stmt = (*((*(_75932_m))._field_Except))._field_Stmts[((*((*(_75932_m))._field_Except))._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _79021_stmt };
				
				if (_match_expr.type == &__jule_any_type24) {
					_case_begin_1c2e09e35:;
					{
						(*((*(_75932_m))._field_Except))._field_Stmts=(*((*(_75932_m))._field_Except))._field_Stmts.slice(0LL, ((*((*(_75932_m))._field_Except))._field_Stmts.len() - 1LL));
						_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
						_1bde29ca0_addIndent((*(_self_))._field_oc);
						_1bcbb33b9_scopeStmts((*((*(_self_))._field_oc))._field_sc, &((*(_75932_m))._field_Except));
						_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1bde2a19b_indent((*(_self_))._field_oc);
						_1bcbbbbb9_writeUseExpr(_self_, &((*(_75932_m))._field_Func), _79021_stmt.cast_ptr<_1bc8108a7_Data>(&__jule_any_type24));
						_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1bde29e9d_doneIndent((*(_self_))._field_oc);
						_1bde2a19b_indent((*(_self_))._field_oc);
						_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
					}
				}
				else {
					_case_begin_1c2e0abd3:;
					{
						_1bcbb3672_scope((*((*(_self_))._field_oc))._field_sc, (*(_75932_m))._field_Except);
					}
				}
				_match_end_1c2e0ab7d:;
			};
			if (_78517_forwarded) {
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				_1bcbc3ece_initExpr(_self_, (*((*(_75932_m))._field_Func))._field_Result);
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(";}", 2));
			};
			_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
		};
		_1bde29e9d_doneIndent((*(_self_))._field_oc);
	} else {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1bde2bca2_locInfo((*(_self_))._field_oc, &((*(_75932_m))._field_Token));
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("\"));\n", 5));
		if ((!(_1ece1b515_IsVoid((*((*(_75932_m))._field_Func))._field_Decl.ptr())))) {
			_1bde2a19b_indent((*(_self_))._field_oc);
			_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("(except.result);\n", 17));
		};
		_1bde29e9d_doneIndent((*(_self_))._field_oc);
	};
	_1bde2a19b_indent((*(_self_))._field_oc);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1bcbbc22a_slice(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece1063b_SliceExprModel> _83029_m) {
	if (((*(_83029_m))._field_Elems.len() == 0LL)) {
		_1bde3b9a4_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_83029_m))._field_ElemKind);
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1bde3b9a4_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_83029_m))._field_ElemKind);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("::make({", 8));
	_1bcbba68a_models(_self_, (*(_83029_m))._field_Elems);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1bcbbc4d3_indexing(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece10ae2_IndexingExprModel> _84232_m) {
	{
		auto &_match_expr{ (*((*(_84232_m))._field_Expr))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1c2e1c398:;
			{
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::at(", 14));
				if ((!(_23b84b1c0_Production))) {
					_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1bde2bca2_locInfo((*(_self_))._field_oc, &((*(_84232_m))._field_Token));
					_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("reinterpret_cast<const jule::U8*>(", 34));
				jule::Str _85313_s = _230d5a50e_ReadStr((*((*(_84232_m))._field_Expr))._field_Model.cast_ptr<_230d58386_Const>(&__jule_any_type19).ptr());;
				_1bcbc4cc1_cstrLit(&((*((*(_self_))._field_oc))._field_Buf), _85313_s);
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
				_1bde297e9_write((*(_self_))._field_oc, _230d4a1d0_Itoa(static_cast<jule::I64>(_85313_s.len())));
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1bcbb9c0b_possibleRefExpr(_self_, (*((*(_84232_m))._field_Index))._field_Model);
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1c2e1c343:;
	};
	_1bcbb9c0b_possibleRefExpr(_self_, (*((*(_84232_m))._field_Expr))._field_Model);
	{
		
		if (_23b84b1c0_Production || (_1bc843d3b_Ptr((*((*(_84232_m))._field_Expr))._field_Kind.ptr()) != nullptr) || (_1bc8453ae_Map((*((*(_84232_m))._field_Expr))._field_Kind.ptr()) != nullptr) || _1bcbc5dd2_isExprComesFromBind(&((*(_84232_m))._field_Expr))) {
			_case_begin_1c2e2613d:;
			{
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("[", 1));
				_1bcbb9c0b_possibleRefExpr(_self_, (*((*(_84232_m))._field_Index))._field_Model);
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1c2e1bd26:;
			{
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(".at(\"", 5));
				_1bde2bca2_locInfo((*(_self_))._field_oc, &((*(_84232_m))._field_Token));
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				_1bcbb9c0b_possibleRefExpr(_self_, (*((*(_84232_m))._field_Index))._field_Model);
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1c2e23a42:;
	};
}



inline void _1bcbbc78b_unsafeIndexing(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1bc9c5561_UnsafeIndexingExprModel> _88238_m) {
	_1bcbb9c0b_possibleRefExpr(_self_, (*((*((*(_88238_m))._field_Node))._field_Expr))._field_Model);
	{
		
		if (_23b84b1c0_Production || (_1bc843d3b_Ptr((*((*((*(_88238_m))._field_Node))._field_Expr))._field_Kind.ptr()) != nullptr) || (_1bc8453ae_Map((*((*((*(_88238_m))._field_Node))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2e29031:;
			{
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("[", 1));
				_1bcbb9c0b_possibleRefExpr(_self_, (*((*((*(_88238_m))._field_Node))._field_Index))._field_Model);
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1c2e29b47:;
			{
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(".__at(", 6));
				_1bcbb9c0b_possibleRefExpr(_self_, (*((*((*(_88238_m))._field_Node))._field_Index))._field_Model);
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1c2e29ad1:;
	};
}



inline void _1bcbbca44_anonFunc(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece10ebb_AnonFnExprModel> _89932_m) {
	_1bde3e90d_func((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_89932_m))._field_Func);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("([=]", 4));
	_1bde32109_paramsIns((*(_self_))._field_oc, &((*((*(_89932_m))._field_Func))._field_Params));
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(" mutable -> ", 12));
	_1bde3e237_funcInsResult((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), &((*(_89932_m))._field_Func));
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1bcbb392a_funcScope((*((*(_self_))._field_oc))._field_sc, (*(_89932_m))._field_Func);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bcbbccec_mapExpr(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece1184b_MapExprModel> _91031_m) {
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("jule::Map<", 10));
	_1bde3ec71_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_91031_m))._field_KeyKind);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1bde3ec71_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_91031_m))._field_ValKind);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(">({", 3));
	if (((*(_91031_m))._field_Entries.len() > 0LL)) {
		{
			auto expr = &((*(_91031_m))._field_Entries);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c2e378be:;
			if (it != expr_end) {
				jule::I64 _91718_i = it - expr->begin();
				jule::Ptr<_1ece11395_KeyValPairExprModel> _91725_pair = *it;
				{
					_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
					_1bcbb9c0b_possibleRefExpr(_self_, (*(_91725_pair))._field_Key);
					_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
					_1bcbb9c0b_possibleRefExpr(_self_, (*(_91725_pair))._field_Val);
					_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
					if ((((*(_91031_m))._field_Entries.len() - _91718_i) > 1LL)) {
						_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
					};
				}
				_iter_next_1c2e378be:;
				++it;
				_91718_i++;
				goto _iter_begin_1c2e378be;
			}
			_iter_end_1c2e378be:;
		};
	};
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1bcbbd0a5_slicing(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece11dce_SlicingExprModel> _93131_m) {
	_1bcbb9c0b_possibleRefExpr(_self_, (*(_93131_m))._field_Expr);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(".slice(", 7));
	if ((!(_23b84b1c0_Production))) {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1bde2bca2_locInfo((*(_self_))._field_oc, &((*(_93131_m))._field_Token));
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1bcbb9c0b_possibleRefExpr(_self_, (*(_93131_m))._field_Left);
	if (((*(_93131_m))._field_Right != nullptr)) {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1bcbb9c0b_possibleRefExpr(_self_, (*(_93131_m))._field_Right);
	};
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bcbbd35d_traitSub(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece12462_TraitSubIdentExprModel> _94732_m) {
	static__1bcbcb657_traitDecl(&((*((*(_self_))._field_oc))._field_Buf), (*(_94732_m))._field_Trt);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("[(", 2));
	_1bcbb9c0b_possibleRefExpr(_self_, (*(_94732_m))._field_Expr);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(").type_offset].", 15));
	static__1bcbcb080_func(&((*((*(_self_))._field_oc))._field_Buf), &((*(_94732_m))._field_Method));
}



inline void _1bcbbd616_structureSub(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece12d03_StructSubIdentExprModel> _95636_m) {
	_1bcbb9c0b_possibleRefExpr(_self_, (*((*(_95636_m))._field_Expr))._field_Model);
	if (((*(_95636_m))._field_Field == nullptr)) {
		return;;
	};
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	static__1bcbcc306_field(&((*((*(_self_))._field_oc))._field_Buf), &((*((*(_95636_m))._field_Field))._field_Decl));
}



inline void _1bcbbd8be_array(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece13683_ArrayExprModel> _96529_m) {
	_1bde3d38a_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_96529_m))._field_Kind);
	if (((*(_96529_m))._field_Elems.len() == 0LL)) {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	if ((((*(_96529_m))._field_Elems.len() == 2LL) && ((*(_96529_m))._field_Elems[1LL] == nullptr))) {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1bcbb9c0b_possibleRefExpr(_self_, (*(_96529_m))._field_Elems[0LL]);
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("({", 2));
	_1bcbba68a_models(_self_, (*(_96529_m))._field_Elems);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
	return;;
}



inline void _1bcbbdb77_funcInsCommon(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece1de96_FnIns> _98837_m) {
	_1bde3e90d_func((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _98837_m);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1bcbbde30_funcIns(_self_, _98837_m);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bcbbde30_funcIns(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece1de96_FnIns> _99531_m) {
	if ((((*(_99531_m))._field_Decl != nullptr) && (*((*(_99531_m))._field_Decl))._field_Binded)) {
		jule::Ptr<_1bc594a59_Directive> _99713_d = _1bde46a7a_findDirective(&((*((*(_99531_m))._field_Decl))._field_Directives), jule::Str::lit("namespace", 9));;
		if ((_99713_d != nullptr)) {
			_1bde29aa2_writeBytes((*(_self_))._field_oc, _1bde36691_concatAllParts((*(_99713_d))._field_Args));
			_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1bcbcb36b_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_99531_m));
}



inline void _1bcbbe1d8_tuple(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece13980_TupleExprModel> _100629_m) {
	{
		auto expr = &((*(_100629_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2e51a70:;
		if (it != expr_end) {
			jule::I64 _100714_i = it - expr->begin();
			jule::Ptr<_1bc8108a7_Data> _100721_d = *it;
			{
				_1bcbb9c0b_possibleRefExpr(_self_, (*(_100721_d))._field_Model);
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
				if ((((*(_100629_m))._field_Datas.len() - _100714_i) > 1LL)) {
					_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1bde2a19b_indent((*(_self_))._field_oc);
				};
			}
			_iter_next_1c2e51a70:;
			++it;
			_100714_i++;
			goto _iter_begin_1c2e51a70;
		}
		_iter_end_1c2e51a70:;
	};
}



inline void _1bcbbe491_newCall(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece1460c_BuiltinNewCallExprModel> _101731_m) {
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	_1bde3ec71_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_101731_m))._field_Kind);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	if (((*(_101731_m))._field_Init != nullptr)) {
		_1bcbb9c0b_possibleRefExpr(_self_, (*(_101731_m))._field_Init);
	};
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bcbbe749_outCall(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece13d59_BuiltinOutCallExprModel> _102731_m) {
	if (((*(_102731_m))._field_Debug && _23b84b1c0_Production)) {
		return;;
	};
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("jule::out(", 10));
	_1bcbb9c0b_possibleRefExpr(_self_, (*(_102731_m))._field_Expr);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bcbbea02_outlnCall(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece14233_BuiltinOutlnCallExprModel> _103633_m) {
	if (((*(_103633_m))._field_Debug && _23b84b1c0_Production)) {
		return;;
	};
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("jule::outln(", 12));
	_1bcbb9c0b_possibleRefExpr(_self_, (*(_103633_m))._field_Expr);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bcbbecaa_panicCall(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece149d6_BuiltinPanicCallExprModel> _104533_m) {
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("jule::panic(", 12));
	_1bcbb9c0b_possibleRefExpr(_self_, (*(_104533_m))._field_Expr);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(" + jule::Str(\"\\nlocation: ", 26));
	_1bde2bca2_locInfo((*(_self_))._field_oc, &((*(_104533_m))._field_Token));
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1bcbc0063_assertCall(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece14e8c_BuiltinAssertCallExprModel> _105334_m) {
	if (_23b84b1c0_Production) {
		return;;
	};
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("if (!(", 6));
	_1bcbb9c0b_possibleRefExpr(_self_, (*(_105334_m))._field_Expr);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")) jule::panic(jule::Str(", 25));
	_1bcbc4cc1_cstrLit(&((*((*(_self_))._field_oc))._field_Buf), (*(_105334_m))._field_Log);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(") + jule::Str(\"\\nlocation: ", 27));
	_1bde2bca2_locInfo((*(_self_))._field_oc, &((*(_105334_m))._field_Token));
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1bcbc031b_errorCall(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece16a93_BuiltinErrorCallExprModel> _106633_m) {
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	if (_1ece1b515_IsVoid((*((*(_106633_m))._field_Func))._field_Decl.ptr())) {
		{
			auto &_match_expr{ (*((*(_106633_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1c2e630c0:;
				{
					jule::Ptr<_1bc7a750d_Var> _107117_v = (*((*(_106633_m))._field_Err))._field_Model.cast_ptr<_1bc7a750d_Var>(&__jule_any_type8);;
					if ((*(_107117_v))._field_Ident.equal("error", 5)) {
						_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional{.error=std::move(except.error)}", 53));
						return;;
					};
				}
			}
			_match_end_1c2e6306a:;
		};
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional{.error=jule::Any(", 39));
	} else {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("jule::Exceptional<", 18));
		_1bde44d0e_codeMut1((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), &((*((*(_106633_m))._field_Func))._field_Result));
		{
			auto &_match_expr{ (*((*(_106633_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1c2e674e2:;
				{
					jule::Ptr<_1bc7a750d_Var> _108317_v = (*((*(_106633_m))._field_Err))._field_Model.cast_ptr<_1bc7a750d_Var>(&__jule_any_type8);;
					if ((*(_108317_v))._field_Ident.equal("error", 5)) {
						_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(">{.error=except.error}", 22));
						return;;
					};
				}
			}
			_match_end_1c2e6748c:;
		};
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(">{.error=jule::Any(", 19));
	};
	_1bcbb9c0b_possibleRefExpr(_self_, (*((*(_106633_m))._field_Err))._field_Model);
	jule::I64 _10929_i = _1bde2a82d_pushAnyType((*(_self_))._field_oc, (*((*(_106633_m))._field_Err))._field_Kind);;
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
	_1bde297e9_write((*(_self_))._field_oc, _230d4a1d0_Itoa(_10929_i));
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")}", 2));
}



inline void _1bcbc05c4_copyCall(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece166b9_BuiltinCopyCallExprModel> _109832_m) {
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("jule::copy((", 12));
	_1bcbb9c0b_possibleRefExpr(_self_, (*((*(_109832_m))._field_Dest))._field_Model);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((_1bc84381e_Prim((*((*(_109832_m))._field_Dest))._field_Kind.ptr()) != nullptr)) {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(".fake_slice()", 13));
	};
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(", (", 3));
	_1bcbb9c0b_possibleRefExpr(_self_, (*((*(_109832_m))._field_Src))._field_Model);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((_1bc84381e_Prim((*((*(_109832_m))._field_Src))._field_Kind.ptr()) != nullptr)) {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(".fake_slice()", 13));
	};
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bcbc087c_lenCall(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece15b19_BuiltinLenCallExprModel> _111431_m) {
	_1bcbb9c0b_possibleRefExpr(_self_, (*((*(_111431_m))._field_Expr))._field_Model);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(".len()", 6));
}



inline void _1bcbc0b35_capCall(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece15e16_BuiltinCapCallExprModel> _111931_m) {
	_1bcbb9c0b_possibleRefExpr(_self_, (*((*(_111931_m))._field_Expr))._field_Model);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(".cap()", 6));
}



inline void _1bcbc0ddd_deleteCall(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece162e0_BuiltinDeleteCallExprModel> _112434_m) {
	_1bcbb9c0b_possibleRefExpr(_self_, (*((*(_112434_m))._field_Dest))._field_Model);
	if (((*(_112434_m))._field_Key != nullptr)) {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(".del(", 5));
		_1bcbb9c0b_possibleRefExpr(_self_, (*((*(_112434_m))._field_Key))._field_Model);
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(".clear()", 8));
	};
}



inline void _1bcbc1196_makeCallSlice(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece15443_BuiltinMakeCallExprModel>* _113538_m) {
	jule::Ptr<_1bc84d296_Slc> _113613_slice = _1bc844875_Slc((*((*(_113538_m))))._field_Kind.ptr());;
	_1bde3ec71_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*((*(_113538_m))))._field_Kind);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1bcbb9c0b_possibleRefExpr(_self_, (*((*(_113538_m))))._field_Len);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_113538_m))))._field_Cap != nullptr)) {
		_1bcbb9c0b_possibleRefExpr(_self_, (*((*(_113538_m))))._field_Cap);
	} else {
		_1bcbb9c0b_possibleRefExpr(_self_, (*((*(_113538_m))))._field_Len);
	};
	if (_1bde4720c_shouldInitialized(&((*(_113613_slice))._field_Elem))) {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1bcbc3ece_initExpr(_self_, (*(_113613_slice))._field_Elem);
	};
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bcbc144e_makeCallStr(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece15443_BuiltinMakeCallExprModel>* _115336_m) {
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1bcbb9c0b_possibleRefExpr(_self_, (*((*(_115336_m))))._field_Len);
	if (((*((*(_115336_m))))._field_Cap != nullptr)) {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1bcbb9c0b_possibleRefExpr(_self_, (*((*(_115336_m))))._field_Cap);
	};
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bcbc1707_makeCall(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece15443_BuiltinMakeCallExprModel> _116432_m) {
	if ((_1bc844875_Slc((*(_116432_m))._field_Kind.ptr()) != nullptr)) {
		_1bcbc1196_makeCallSlice(_self_, &(_116432_m));
		return;;
	};
	_1bcbc144e_makeCallStr(_self_, &(_116432_m));
}



inline void _1bcbc19b0_pushToSlice(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1bc9c5990_PushToSliceExprModel> _117235_m) {
	;
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("{ ", 2));
	_1bde3b9a4_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*((*(_117235_m))._field_Elems))._field_ElemKind);
	jule::Bool _118013_ptr = false;;
	{
		auto &_match_expr{ (*(_117235_m))._field_Dest };
		
		if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1c2e828b4:;
			{
				jule::Ptr<_1ece0d65b_UnaryExprModel> _118417_u = (*(_117235_m))._field_Dest.cast_ptr<_1ece0d65b_UnaryExprModel>(&__jule_any_type110);;
				if ((_1bc843d3b_Ptr((*((*(_118417_u))._field_Expr))._field_Kind.ptr()) != nullptr)) {
					_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(" *__jule_push_dest = ", 21));
					_1bcbb9c0b_possibleRefExpr(_self_, (*((*(_118417_u))._field_Expr))._field_Model);
					_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
					_118013_ptr=true;
					goto _match_end_1c2e84696;
				};
				goto _case_begin_1c2e846eb;
			}
		}
		else {
			_case_begin_1c2e846eb:;
			{
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(" &__jule_push_dest = ", 21));
				_1bcbb9c0b_possibleRefExpr(_self_, (*(_117235_m))._field_Dest);
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
		}
		_match_end_1c2e84696:;
	};
	if (((*((*(_117235_m))._field_Elems))._field_Elems.len() == 1LL)) {
		if (_118013_ptr) {
			_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->push(", 23));
		} else {
			_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.push(", 22));
		};
		_1bcbb9c0b_possibleRefExpr(_self_, (*((*(_117235_m))._field_Elems))._field_Elems[0LL]);
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("); }", 4));
		return;;
	};
	if (_118013_ptr) {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->alloc_for_append(", 35));
	} else {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.alloc_for_append(", 34));
	};
	_1bde297e9_write((*(_self_))._field_oc, _230d4a1d0_Itoa(static_cast<jule::I64>((*((*(_117235_m))._field_Elems))._field_Elems.len())));
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
	{
		auto expr = &((*((*(_117235_m))._field_Elems))._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2e8c391:;
		if (it != expr_end) {
			jule::Any _121821_e = *it;
			{
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest", 16));
				if (_118013_ptr) {
					_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("->__push(", 9));
				} else {
					_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(".__push(", 8));
				};
				_1bcbb9c0b_possibleRefExpr(_self_, _121821_e);
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
			}
			_iter_next_1c2e8c391:;
			++it;
			goto _iter_begin_1c2e8c391;
		}
		_iter_end_1c2e8c391:;
	};
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1bcbc1c68_appendToSlice(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1bc9c5d69_AppendToSliceExprModel> _123237_m) {
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1bcbb9c0b_possibleRefExpr(_self_, (*(_123237_m))._field_Dest);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(").append(", 9));
	_1bcbb9c0b_possibleRefExpr(_self_, (*(_123237_m))._field_Slice);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1bcbc2021_appendCall(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece1581c_BuiltinAppendCallExprModel> _124034_m) {
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("jule::append(", 13));
	_1bcbb9c0b_possibleRefExpr(_self_, (*(_124034_m))._field_Dest);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
	_1bcbb9c0b_possibleRefExpr(_self_, (*(_124034_m))._field_Elements);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bcbc22c9_sizeof(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece1264e_SizeofExprModel> _124830_m) {
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("sizeof(", 7));
	_1bcbb9c0b_possibleRefExpr(_self_, (*(_124830_m))._field_Expr);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bcbc2582_alignof(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece172be_AlignofExprModel> _125431_m) {
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("alignof(", 8));
	_1bcbb9c0b_possibleRefExpr(_self_, (*(_125431_m))._field_Expr);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bcbc283a_runeLit(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece175bb_RuneExprModel> _126027_m) {
	if (((*(_126027_m))._field_Code <= 127LL)) {
		_2096a5204_WriteByte(&(*((*(_self_))._field_oc))._field_Buf, '\'');
		jule::Str _126317_b = _1bcbc46a5_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>((*(_126027_m))._field_Code)));;
		if (_126317_b.equal("'", 1)) {
			_2096a5204_WriteByte(&(*((*(_self_))._field_oc))._field_Buf, '\\');
		};
		_2096a4e4b_WriteStr(&(*((*(_self_))._field_oc))._field_Buf, _126317_b);
		_2096a5204_WriteByte(&(*((*(_self_))._field_oc))._field_Buf, '\'');
		return;;
	};
	_1bcbc5453_itoa(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::I64>(static_cast<jule::I64>((*(_126027_m))._field_Code)));
}



inline void _1bcbc2ae3_structureStatic(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece132a9_StructStaticIdentExprModel> _127439_m) {
	static__1bcbcb36b_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &((*(_127439_m))._field_Method));
}



inline void _1bcbc2d9b_integratedToStr(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece178b8_IntegratedToStrExprModel> _127839_m) {
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("jule::to_str(", 13));
	_1bcbb9c0b_possibleRefExpr(_self_, (*(_127839_m))._field_Expr);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bcbc3154_backendEmit(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece17c92_BackendEmitExprModel> _128435_m) {
	if (((*(_128435_m))._field_Exprs.len() == 0LL)) {
		_1bde297e9_write((*(_self_))._field_oc, (*(_128435_m))._field_Code);
		return;;
	};
	jule::I64 _12899_n = _2096a5bc7_Len(&(*((*(_self_))._field_oc))._field_Buf);;
	jule::Slice<jule::Any> _129013_args = jule::Slice<jule::Any>::alloc((*(_128435_m))._field_Exprs.len(), (*(_128435_m))._field_Exprs.len());;
	{
		auto expr = &((*(_128435_m))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2e9eb45:;
		if (it != expr_end) {
			jule::I64 _129114_i = it - expr->begin();
			jule::Any _129121_expr = *it;
			{
				_1bcbb9c0b_possibleRefExpr(_self_, _129121_expr);
				jule::Slice<jule::U8> _129317_buf = _2096a61e4_Buf(&(*((*(_self_))._field_oc))._field_Buf);;
				_129013_args[_129114_i]=jule::Any(static_cast<jule::Str>(_129317_buf.slice(_12899_n)), &__jule_any_type4);
				{
					_2096a649c_SetBuf(&(*((*(_self_))._field_oc))._field_Buf, _129317_buf.slice(0LL, _12899_n));
				};
			}
			_iter_next_1c2e9eb45:;
			++it;
			_129114_i++;
			goto _iter_begin_1c2e9eb45;
		}
		_iter_end_1c2e9eb45:;
	};
	_1bde297e9_write((*(_self_))._field_oc, _1bc2c28a8_Format((*(_128435_m))._field_Code, _129013_args));
}



inline void _1bcbc340c_free(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1ece1808e_FreeExprModel> _130028_m) {
	_1bcbb9c0b_possibleRefExpr(_self_, (*(_130028_m))._field_Expr);
	if (_23b84aa2c_RC) {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(".dealloc()", 10));
		return;;
	};
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(".__free()", 9));
}



inline void _1bcbc36b5_strComp(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1bc9c48d4_StrCompExprModel> _130931_m) {
	if ((*(_130931_m))._field_NotEq) {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("(!", 2));
	};
	jule::Str _13139_s = _230d5a50e_ReadStr((*(_130931_m))._field_Right.ptr());;
	_1bcbb9c0b_possibleRefExpr(_self_, (*(_130931_m))._field_Left);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(".equal(", 7));
	_1bcbc4cc1_cstrLit(&((*((*(_self_))._field_oc))._field_Buf), _13139_s);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1bde297e9_write((*(_self_))._field_oc, _230d4a1d0_Itoa(static_cast<jule::I64>(_13139_s.len())));
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((*(_130931_m))._field_NotEq) {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _1bcbc396d_emptyCompare(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1bc2d5a97_EmptyCompareExprModel> _132536_m) {
	if ((*(_132536_m))._field_Neg) {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("!", 1));
	};
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1bcbb9c0b_possibleRefExpr(_self_, (*(_132536_m))._field_Expr);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(").empty()", 9));
}



inline void _1bcbc3c26_model(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Any _133429_m) {
	{
		auto &_match_expr{ _133429_m };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1c2ead15e:;
			{
				_1bde297e9_write((*(_self_))._field_oc, _133429_m.cast<jule::Str>(&__jule_any_type4));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1c2ead36d:;
			{
				_1bde3ec71_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _133429_m.cast_ptr<_1bc8411bd_TypeKind>(&__jule_any_type83));
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1c2ead3d4:;
			{
				_1bcbb8149_constant(_self_, _133429_m.cast_ptr<_230d58386_Const>(&__jule_any_type19));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c2ead44a:;
			{
				_1bcbb8d81_var(_self_, _133429_m.cast_ptr<_1bc7a750d_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1c2ead4b1:;
			{
				_1bcbb9139_structureIns(_self_, _133429_m.cast_ptr<_1bc5be0b1_StructIns>(&__jule_any_type9));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c2eae160:;
			{
				_1bcbbdb77_funcInsCommon(_self_, _133429_m.cast_ptr<_1ece1de96_FnIns>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1c2eae1c6:;
			{
				_1bcbb8820_unsafeBinary(_self_, (*(_133429_m.cast_ptr<_1bc9c5264_UnsafeBinaryExprModel>(&__jule_any_type126)))._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1c2eae23c:;
			{
				_1bcbb8ac8_binary(_self_, _133429_m.cast_ptr<_1ece0d282_BinaryExprModel>(&__jule_any_type111));
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1c2eae2a3:;
			{
				_1bcbb93e2_unary(_self_, _133429_m.cast_ptr<_1ece0d65b_UnaryExprModel>(&__jule_any_type110));
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1c2eae319:;
			{
				_1bcbb969a_structureLit(_self_, _133429_m.cast_ptr<_1ece0e030_StructLitExprModel>(&__jule_any_type94));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1c2eae380:;
			{
				_1bcbb9953_allocStructure(_self_, _133429_m.cast_ptr<_1ece0e32c_AllocStructLitExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1c2eae3e6:;
			{
				_1bcbba3d2_casting(_self_, _133429_m.cast_ptr<_1ece0e8b0_CastingExprModel>(&__jule_any_type92));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1c2eae46d:;
			{
				_1bcbbbe72_funcCall(_self_, _133429_m.cast_ptr<_1ece10262_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1c2eae4e5:;
			{
				_1bcbbc22a_slice(_self_, _133429_m.cast_ptr<_1ece1063b_SliceExprModel>(&__jule_any_type76));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1c2eae56c:;
			{
				_1bcbbd8be_array(_self_, _133429_m.cast_ptr<_1ece13683_ArrayExprModel>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1c2eae5e4:;
			{
				_1bcbbc78b_unsafeIndexing(_self_, _133429_m.cast_ptr<_1bc9c5561_UnsafeIndexingExprModel>(&__jule_any_type128));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1c2eae66b:;
			{
				_1bcbbc4d3_indexing(_self_, _133429_m.cast_ptr<_1ece10ae2_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1c2eae6e3:;
			{
				_1bcbbca44_anonFunc(_self_, _133429_m.cast_ptr<_1ece10ebb_AnonFnExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1c2eae76a:;
			{
				_1bcbbccec_mapExpr(_self_, _133429_m.cast_ptr<_1ece1184b_MapExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1c2eae7e2:;
			{
				_1bcbbd0a5_slicing(_self_, _133429_m.cast_ptr<_1ece11dce_SlicingExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1c2eae869:;
			{
				_1bcbbd35d_traitSub(_self_, _133429_m.cast_ptr<_1ece12462_TraitSubIdentExprModel>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1c2eae8e1:;
			{
				_1bcbbd616_structureSub(_self_, _133429_m.cast_ptr<_1ece12d03_StructSubIdentExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1c2eae968:;
			{
				_1bcbbe1d8_tuple(_self_, _133429_m.cast_ptr<_1ece13980_TupleExprModel>(&__jule_any_type81));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1c2eae9e0:;
			{
				_1bcbbe749_outCall(_self_, _133429_m.cast_ptr<_1ece13d59_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1c2eaea67:;
			{
				_1bcbbea02_outlnCall(_self_, _133429_m.cast_ptr<_1ece14233_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1c2eaeade:;
			{
				_1bcbbe491_newCall(_self_, _133429_m.cast_ptr<_1ece1460c_BuiltinNewCallExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1c2eaeb66:;
			{
				_1bcbbecaa_panicCall(_self_, _133429_m.cast_ptr<_1ece149d6_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1c2eaebdd:;
			{
				_1bcbc0063_assertCall(_self_, _133429_m.cast_ptr<_1ece14e8c_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1c2eaec65:;
			{
				_1bcbc031b_errorCall(_self_, _133429_m.cast_ptr<_1ece16a93_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1c2eaecdc:;
			{
				_1bcbc1707_makeCall(_self_, _133429_m.cast_ptr<_1ece15443_BuiltinMakeCallExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1c2eaed64:;
			{
				_1bcbc2021_appendCall(_self_, _133429_m.cast_ptr<_1ece1581c_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1c2eaeddb:;
			{
				_1bcbc05c4_copyCall(_self_, _133429_m.cast_ptr<_1ece166b9_BuiltinCopyCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1c2eaee63:;
			{
				_1bcbc087c_lenCall(_self_, _133429_m.cast_ptr<_1ece15b19_BuiltinLenCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1c2eaeeda:;
			{
				_1bcbc0b35_capCall(_self_, _133429_m.cast_ptr<_1ece15e16_BuiltinCapCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1c2eb0062:;
			{
				_1bcbc0ddd_deleteCall(_self_, _133429_m.cast_ptr<_1ece162e0_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1c2eb00d9:;
			{
				_1bcbc22c9_sizeof(_self_, _133429_m.cast_ptr<_1ece1264e_SizeofExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1c2eb0161:;
			{
				_1bcbc2582_alignof(_self_, _133429_m.cast_ptr<_1ece172be_AlignofExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1c2eb01d8:;
			{
				_1bcbc283a_runeLit(_self_, _133429_m.cast_ptr<_1ece175bb_RuneExprModel>(&__jule_any_type82));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1c2eb0260:;
			{
				_1bcbc2ae3_structureStatic(_self_, _133429_m.cast_ptr<_1ece132a9_StructStaticIdentExprModel>(&__jule_any_type95));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1c2eb02d7:;
			{
				_1bcbc2d9b_integratedToStr(_self_, _133429_m.cast_ptr<_1ece178b8_IntegratedToStrExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1c2eb035e:;
			{
				_1bcbc3154_backendEmit(_self_, _133429_m.cast_ptr<_1ece17c92_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1c2eb03d6:;
			{
				_1bcbc340c_free(_self_, _133429_m.cast_ptr<_1ece1808e_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1c2eb045d:;
			{
				_1bcbc36b5_strComp(_self_, _133429_m.cast_ptr<_1bc9c48d4_StrCompExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1c2eb04d5:;
			{
				_1bcbb8d81_var(_self_, (*(_133429_m.cast_ptr<_1bc2d5d94_RefExprModel>(&__jule_any_type127)))._field_Var);
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1c2eb055c:;
			{
				_1bcbc396d_emptyCompare(_self_, _133429_m.cast_ptr<_1bc2d5a97_EmptyCompareExprModel>(&__jule_any_type124));
			}
		}
		else {
			_case_begin_1c2ead307:;
			{
				_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1c2ead2a2:;
	};
}



inline void _1bcbc3ece_initExpr(jule::Ptr<_1bcbb68b7_exprCoder> _self_, jule::Ptr<_1bc8411bd_TypeKind> _143132_t) {
	if (_1bc84306b_NilCompatible(_143132_t.ptr())) {
		if ((_1bc843d3b_Ptr(_143132_t.ptr()) != nullptr)) {
			_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		} else {
			_1bde3ec71_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _143132_t);
			_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1bc84dd8a_Tuple> _144113_tup = _1bc845645_Tup(_143132_t.ptr());;
	if ((_144113_tup != nullptr)) {
		_1bde44638_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _144113_tup);
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
		{
			auto expr = &((*(_144113_tup))._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c2ecba1d:;
			if (it != expr_end) {
				jule::I64 _144518_i = it - expr->begin();
				jule::Ptr<_1bc8411bd_TypeKind> _144525_tt = *it;
				{
					if ((!(_1bde4720c_shouldInitialized(&(_144525_tt))))) {
						goto _iter_next_1c2ecba1d;
					};
					_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
					_1bde297e9_write((*(_self_))._field_oc, _230d4a1d0_Itoa(_144518_i));
					_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_1bcbc3ece_initExpr(_self_, _144525_tt);
					if ((((*(_144113_tup))._field_Types.len() - _144518_i) > 1LL)) {
						_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
				_iter_next_1c2ecba1d:;
				++it;
				_144518_i++;
				goto _iter_begin_1c2ecba1d;
			}
			_iter_end_1c2ecba1d:;
		};
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	jule::Ptr<_1bc71624c_Enum> _146013_enm = _1bc8440c2_Enum(_143132_t.ptr());;
	if ((_146013_enm != nullptr)) {
		_1bcbc3c26_model(_self_, (*((*((*((*(_146013_enm))._field_Items[0LL]))._field_Value))._field_Data))._field_Model);
		return;;
	};
	jule::Ptr<_1bc848c97_Prim> _14659_prim = _1bc84381e_Prim(_143132_t.ptr());;
	if ((_14659_prim != nullptr)) {
		if (_230d57dad_IsNum((*(_14659_prim))._field_Kind)) {
			_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("0", 1));
		} else if (_1bc84be98_IsBool(_14659_prim.ptr())) {
			_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
		} else if (_1bc84c22e_IsStr(_14659_prim.ptr())) {
			_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		};
		return;;
	};
	if ((_1bc8445de_Arr(_143132_t.ptr()) != nullptr)) {
		jule::Ptr<_1bc8505b7_Arr> _147717_arr = _1bc8445de_Arr(_143132_t.ptr());;
		_1bde3ec71_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _143132_t);
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1bcbc3ece_initExpr(_self_, (*(_147717_arr))._field_Elem);
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	jule::Ptr<_1bc5be0b1_StructIns> _148413_s = _1bc844d92_Struct(_143132_t.ptr());;
	if ((((_148413_s != nullptr) && (*((*(_148413_s))._field_Decl))._field_Binded) && (_1bde46a7a_findDirective(&((*((*(_148413_s))._field_Decl))._field_Directives), jule::Str::lit("typedef", 7)) == nullptr))) {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1bde3ec71_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _143132_t);
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("){}", 3));
		return;;
	};
	_1bde3ec71_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _143132_t);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
}





std::ostream &operator<<(std::ostream &_Stream, _1bcbb68b7_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1bcbc719c_TestCoder> static__1bcbc75dc_New(jule::Ptr<_1bde29145_ObjectCoder>* _2924_oc) {
	return jule::new_ptr<_1bcbc719c_TestCoder>(_1bcbc719c_TestCoder{._field_oc=(*(_2924_oc))});;
}



inline jule::Ptr<_1bc763e04_ImportInfo> _1bcbc7873_findTestingPackage(jule::Ptr<_1bcbc719c_TestCoder> _self_) {
	{
		auto expr = &((*((*((*(_self_))._field_oc))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c24d66bb:;
		if (it != expr_end) {
			jule::Ptr<_1bc763e04_ImportInfo> _3621_imp = *it;
			{
				if ((*(_3621_imp))._field_LinkPath.equal("std::testing", 12)) {
					return _3621_imp;;
				};
			}
			_iter_next_1c24d66bb:;
			++it;
			goto _iter_begin_1c24d66bb;
		}
		_iter_end_1c24d66bb:;
	};
	return nullptr;;
}



inline void _1bcbc7b2b_appendTest(jule::Ptr<_1bcbc719c_TestCoder> _self_, jule::Ptr<_1ece1de96_FnIns> _4434_f) {
	_1bde2a19b_indent((*(_self_))._field_oc);
	_1bcbc8368_callTmReset(_self_);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1bde2a19b_indent((*(_self_))._field_oc);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("std::cout << \">>> TEST RUNNING: \" ", 34));
	_1bcbc4cc1_cstrLit(&((*((*(_self_))._field_oc))._field_Buf), (*((*(_4434_f))._field_Decl))._field_Ident);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(" << std::endl;\n", 15));
	_1bde2a19b_indent((*(_self_))._field_oc);
	static__1bcbcb36b_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_4434_f));
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("(_t);\n", 6));
	_1bde2a19b_indent((*(_self_))._field_oc);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("post_test();\n", 13));
}



inline void _1bcbc7dd4_appendPackageTests(jule::Ptr<_1bcbc719c_TestCoder> _self_, jule::Ptr<_1bc766d2a_Package>* _5943_p) {
	{
		auto expr = &((*((*(_5943_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c24dd00d:;
		if (it != expr_end) {
			jule::Ptr<_1bc80a50b_SymbolTable> _6021_file = *it;
			{
				{
					auto expr = &((*(_6021_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c24dd959:;
					if (it != expr_end) {
						jule::Ptr<_1ece1b092_Fn> _6125_f = *it;
						{
							if (_1bde46e43_hasDirective(&((*(_6125_f))._field_Directives), jule::Str::lit("test", 4))) {
								_1bcbc7b2b_appendTest(_self_, (*(_6125_f))._field_Instances[0LL]);
							};
						}
						_iter_next_1c24dd959:;
						++it;
						goto _iter_begin_1c24dd959;
					}
					_iter_end_1c24dd959:;
				};
			}
			_iter_next_1c24dd00d:;
			++it;
			goto _iter_begin_1c24dd00d;
		}
		_iter_end_1c24dd00d:;
	};
}



inline jule::Bool _1bcbc816a_readyTestingPackage(jule::Ptr<_1bcbc719c_TestCoder> _self_) {
	jule::Ptr<_1bc763e04_ImportInfo> _7013_p = _1bcbc7873_findTestingPackage(_self_);;
	if ((_7013_p == nullptr)) {
		return false;;
	};
	(*(_self_))._field_t=(*(_1bc7650d1_FindStruct(_7013_p.ptr(), jule::Str::lit("T", 1), false)))._field_Instances[0LL];
	(*(_self_))._field_tmReset=_1bc5c0128_FindMethod((*(_self_))._field_t.ptr(), jule::Str::lit("reset", 5), false);
	(*(_self_))._field_tmFailed=_1bc5c0128_FindMethod((*(_self_))._field_t.ptr(), jule::Str::lit("Failed", 6), false);
	(*(_self_))._field_tmSkipped=_1bc5c0128_FindMethod((*(_self_))._field_t.ptr(), jule::Str::lit("Skipped", 7), false);
	return true;;
}



inline void _1bcbc8368_callTmReset(jule::Ptr<_1bcbc719c_TestCoder> _self_) {
	static__1bcbcb080_func(&((*((*(_self_))._field_oc))._field_Buf), &((*(_self_))._field_tmReset));
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1bcbc8566_callTmFailed(jule::Ptr<_1bcbc719c_TestCoder> _self_) {
	static__1bcbcb080_func(&((*((*(_self_))._field_oc))._field_Buf), &((*(_self_))._field_tmFailed));
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1bcbc8764_callTmSkipped(jule::Ptr<_1bcbc719c_TestCoder> _self_) {
	static__1bcbcb080_func(&((*((*(_self_))._field_oc))._field_Buf), &((*(_self_))._field_tmSkipped));
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1bcbc8962_Serialize(jule::Ptr<_1bcbc719c_TestCoder> _self_) {
	_1bde35c9a_serializeHead((*(_self_))._field_oc);
	__JULE_DEFER({
		_1bde35a9c_end((*(_self_))._field_oc);
	});;
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("\nvoid test_point(void) {\n", 25));
	_1bde29ca0_addIndent((*(_self_))._field_oc);
	_1bde2a19b_indent((*(_self_))._field_oc);
	if ((!(_1bcbc816a_readyTestingPackage(_self_)))) {
		_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		_1bde29e9d_doneIndent((*(_self_))._field_oc);
		return;;
	};
	_2096a4489_StrBuilder _11813_tb = static__2096a48da_New(40LL);;
	_1bde3d027_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), &(_11813_tb), (*(_self_))._field_t);
	_1bde3a794_asSptr((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _2096a61e4_Buf(&_11813_tb));
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(" _t = jule::new_ptr<", 20));
	_1bde29aa2_writeBytes((*(_self_))._field_oc, _2096a61e4_Buf(&_11813_tb));
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(">(); _t.ref = nullptr;\n", 23));
	_1bde2a19b_indent((*(_self_))._field_oc);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1bde2a19b_indent((*(_self_))._field_oc);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("auto post_test = [&](void) {\n", 29));
	_1bde29ca0_addIndent((*(_self_))._field_oc);
	_1bde2a19b_indent((*(_self_))._field_oc);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("++total;\n", 9));
	_1bde2a19b_indent((*(_self_))._field_oc);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
	_1bcbc8566_callTmFailed(_self_);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1bde2a19b_indent((*(_self_))._field_oc);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
	_1bcbc8764_callTmSkipped(_self_);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1bde2a19b_indent((*(_self_))._field_oc);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1bde29e9d_doneIndent((*(_self_))._field_oc);
	_1bde2a19b_indent((*(_self_))._field_oc);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("};\n", 3));
	_1bcbc7dd4_appendPackageTests(_self_, &((*((*((*(_self_))._field_oc))._field_ir))._field_Main));
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("\n\n", 2));
	_1bde2a19b_indent((*(_self_))._field_oc);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1bde2a19b_indent((*(_self_))._field_oc);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("if (failed != 0) std::exit(1);\n", 31));
	_1bde29e9d_doneIndent((*(_self_))._field_oc);
	_1bde2a19b_indent((*(_self_))._field_oc);
	_1bde297e9_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
}





std::ostream &operator<<(std::ostream &_Stream, _1bcbc719c_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline void static__1bcbca49c_writeIdentTo(_2096a4489_StrBuilder* _3433_buf, jule::Str* _3451_ident) {
	{
		auto expr = _3451_ident;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2508523:;
		if (it != expr_end) {
			jule::U8 *_3516_b = it;
			{
				if (((*(_3516_b)) >= 128LLU)) {
					goto _julec_label_1c2508864;
				};
			}
			_iter_next_1c2508523:;
			++it;
			goto _iter_begin_1c2508523;
		}
		_iter_end_1c2508523:;
	};
	_2096a4e4b_WriteStr(_3433_buf, (*(_3451_ident)));
	return;;
	_julec_label_1c2508864:;
	{
		auto expr = static_cast<jule::Slice<jule::I32>>((*(_3451_ident)));
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1c25098cb:;
		if (it != expr_end) {
			jule::I32 _4516_r = *it;
			{
				if ((_4516_r < 128LL)) {
					_2096a5204_WriteByte(_3433_buf, static_cast<jule::U8>(static_cast<jule::U8>(_4516_r)));
					goto _iter_next_1c25098cb;
				};
				_2096a4e4b_WriteStr(_3433_buf, _230d49e16_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_4516_r)), 15LL));
			}
			_iter_next_1c25098cb:;
			++it;
			goto _iter_begin_1c25098cb;
		}
		_iter_end_1c25098cb:;
	};
}



inline void static__1bcbca843_toOut(_2096a4489_StrBuilder* _6226_buf, jule::Str _6243_ident, jule::Uintptr _6255_addr) {
	_2096a5204_WriteByte(_6226_buf, '_');
	if ((_6255_addr != 0LLU)) {
		_2096a4e4b_WriteStr(_6226_buf, _230d49a4d_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_6255_addr)), 15LL));
		_2096a5204_WriteByte(_6226_buf, '_');
	};
	static__1bcbca49c_writeIdentTo(_6226_buf, &(_6243_ident));
}



inline void static__1bcbcac94_toLocal(_2096a4489_StrBuilder* _7728_buf, jule::I64 _7745_row, jule::I64 _7755_col, jule::Str* _7766_ident) {
	_2096a5204_WriteByte(_7728_buf, '_');
	_2096a4e4b_WriteStr(_7728_buf, _230d4a1d0_Itoa(_7745_row));
	_2096a4e4b_WriteStr(_7728_buf, _230d4a1d0_Itoa(_7755_col));
	_2096a5204_WriteByte(_7728_buf, '_');
	static__1bcbca49c_writeIdentTo(_7728_buf, _7766_ident);
}



inline void static__1bcbcb080_func(_2096a4489_StrBuilder* _8525_buf, jule::Ptr<_1ece1b092_Fn>* _8543_f) {
	{
		
		if ((*((*(_8543_f))))._field_Binded) {
			_case_begin_1c250e392:;
			{
				_2096a4e4b_WriteStr(_8525_buf, (*((*(_8543_f))))._field_Ident);
				return;;
			}
		}
		else if ((*((*(_8543_f))))._field_Ident.equal("main", 4)) {
			_case_begin_1c250e419:;
			{
				_2096a4e4b_WriteStr(_8525_buf, jule::Str::lit("entry_point", 11));
				return;;
			}
		}
		else if (_1ece1b79b_IsMethod((*(_8543_f)).ptr())) {
			_case_begin_1c250e491:;
			{
				if ((*((*(_8543_f))))._field_Statically) {
					_2096a4e4b_WriteStr(_8525_buf, jule::Str::lit("static_", 7));
				};
			}
		}
		_match_end_1c250e271:;
	};
	static__1bcbca843_toOut(_8525_buf, (*((*(_8543_f))))._field_Ident, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_8543_f)))));
}



inline void static__1bcbcb36b_funcIns(_2096a4489_StrBuilder* _10128_buf, jule::Ptr<_1ece1de96_FnIns>* _10146_f) {
	if (_1ece2042b_IsBuiltin((*(_10146_f)).ptr())) {
		_2096a4e4b_WriteStr(_10128_buf, jule::Str::lit("jule::", 6));
		_2096a4e4b_WriteStr(_10128_buf, (*((*((*(_10146_f))))._field_Decl))._field_Ident);
		return;;
	};
	if (((*((*((*(_10146_f))))._field_Decl))._field_Binded || ((*((*(_10146_f))))._field_Generics.len() == 0LL))) {
		static__1bcbcb080_func(_10128_buf, &((*((*(_10146_f))))._field_Decl));
		return;;
	};
	static__1bcbca843_toOut(_10128_buf, (*((*((*(_10146_f))))._field_Decl))._field_Ident, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_10146_f)))));
}



inline void static__1bcbcb657_traitDecl(_2096a4489_StrBuilder* _11630_buf, jule::Ptr<_1bc713a41_Trait> _11647_t) {
	static__1bcbca843_toOut(_11630_buf, (*(_11647_t))._field_Ident, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_11647_t)));
}



inline void static__1bcbcb943_param(_2096a4489_StrBuilder* _12026_buf, jule::Ptr<_1ece195bd_Param>* _12044_p) {
	if ((_1bc5867c6_IsAnonIdent((*((*(_12044_p))))._field_Ident) || _1bc58650c_IsIgnoreIdent((*((*(_12044_p))))._field_Ident))) {
		return;;
	};
	if (_1ece19bd9_IsSelf((*(_12044_p)).ptr())) {
		_2096a4e4b_WriteStr(_12026_buf, jule::Str::lit("_self_", 6));
		return;;
	};
	if (((*((*(_12044_p))))._field_Token == nullptr)) {
		static__1bcbcac94_toLocal(_12026_buf, 0LL, 0LL, &((*((*(_12044_p))))._field_Ident));
		return;;
	};
	static__1bcbcac94_toLocal(_12026_buf, (*((*((*(_12044_p))))._field_Token))._field_Row, (*((*((*(_12044_p))))._field_Token))._field_Column, &((*((*(_12044_p))))._field_Ident));
}



inline void static__1bcbcbc2e_structure(_2096a4489_StrBuilder* _13530_buf, jule::Ptr<_1bc5bb333_Struct>* _13548_s) {
	if ((*((*(_13548_s))))._field_Binded) {
		if ((!(_1bde46e43_hasDirective(&((*((*(_13548_s))))._field_Directives), jule::Str::lit("typedef", 7))))) {
			_2096a4e4b_WriteStr(_13530_buf, jule::Str::lit("struct ", 7));
		};
		_2096a4e4b_WriteStr(_13530_buf, (*((*(_13548_s))))._field_Ident);
		return;;
	};
	static__1bcbca843_toOut(_13530_buf, (*((*(_13548_s))))._field_Ident, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_13548_s)))));
}



inline void static__1bcbcc01a_structureIns(_2096a4489_StrBuilder* _14633_buf, jule::Ptr<_1bc5be0b1_StructIns>* _14651_s) {
	if (((*((*((*(_14651_s))))._field_Decl))._field_Binded || ((*((*(_14651_s))))._field_Generics.len() == 0LL))) {
		static__1bcbcbc2e_structure(_14633_buf, &((*((*(_14651_s))))._field_Decl));
		return;;
	};
	static__1bcbca843_toOut(_14633_buf, (*((*((*(_14651_s))))._field_Decl))._field_Ident, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_14651_s)))));
}



inline void static__1bcbcc306_field(_2096a4489_StrBuilder* _15426_buf, jule::Ptr<_1bc5b8440_Field>* _15444_f) {
	if ((*((*((*(_15444_f))))._field_Owner))._field_Binded) {
		_2096a4e4b_WriteStr(_15426_buf, (*((*(_15444_f))))._field_Ident);
		return;;
	};
	_2096a4e4b_WriteStr(_15426_buf, jule::Str::lit("_field_", 7));
	static__1bcbca49c_writeIdentTo(_15426_buf, &((*((*(_15444_f))))._field_Ident));
}



inline void static__1bcbcc5e2_var(_2096a4489_StrBuilder* _16424_buf, jule::Ptr<_1bc7a750d_Var> _16445_v) {
	{
		
		if ((*(_16445_v))._field_Binded) {
			_case_begin_1c251cc63:;
			{
				_2096a4e4b_WriteStr(_16424_buf, (*(_16445_v))._field_Ident);
			}
		}
		else if ((*(_16445_v))._field_Ident.equal("error", 5)) {
			_case_begin_1c251ccc9:;
			{
				_2096a4e4b_WriteStr(_16424_buf, jule::Str::lit("except.error", 12));
			}
		}
		else if ((*(_16445_v))._field_Ident.equal("self", 4)) {
			_case_begin_1c251cd40:;
			{
				_2096a4e4b_WriteStr(_16424_buf, jule::Str::lit("_self_", 6));
			}
		}
		else if (((*(_16445_v))._field_RetOrder == -1LL)) {
			_case_begin_1c251cda6:;
			{
				_2096a4e4b_WriteStr(_16424_buf, jule::Str::lit("__jule_func_result", 18));
			}
		}
		else if (((*(_16445_v))._field_RetOrder >= 0LL)) {
			_case_begin_1c251d7be:;
			{
				_2096a4e4b_WriteStr(_16424_buf, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
				_2096a4e4b_WriteStr(_16424_buf, _230d4a1d0_Itoa((*(_16445_v))._field_RetOrder));
			}
		}
		else if (((*(_16445_v))._field_Scope != nullptr)) {
			_case_begin_1c251d835:;
			{
				static__1bcbcac94_toLocal(_16424_buf, (*((*(_16445_v))._field_Token))._field_Row, (*((*(_16445_v))._field_Token))._field_Column, &((*(_16445_v))._field_Ident));
			}
		}
		else {
			_case_begin_1c251cbec:;
			{
				static__1bcbca843_toOut(_16424_buf, (*(_16445_v))._field_Ident, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_16445_v)));
			}
		}
		_match_end_1c251cb31:;
	};
}



inline void static__1bcbcc8cd_iterBegin(_2096a4489_StrBuilder* _18630_buf, jule::Uintptr _18647_it) {
	_2096a4e4b_WriteStr(_18630_buf, jule::Str::lit("_iter_begin_", 12));
	_2096a4e4b_WriteStr(_18630_buf, _230d49a4d_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_18647_it)), 15LL));
}



inline void static__1bcbccbb9_iterEnd(_2096a4489_StrBuilder* _19128_buf, jule::Uintptr _19145_it) {
	_2096a4e4b_WriteStr(_19128_buf, jule::Str::lit("_iter_end_", 10));
	_2096a4e4b_WriteStr(_19128_buf, _230d49a4d_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19145_it)), 15LL));
}



inline void static__1bcbccea5_iterNext(_2096a4489_StrBuilder* _19629_buf, jule::Uintptr _19646_it) {
	_2096a4e4b_WriteStr(_19629_buf, jule::Str::lit("_iter_next_", 11));
	_2096a4e4b_WriteStr(_19629_buf, _230d49a4d_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19646_it)), 15LL));
}



inline void static__1bcbcd291_label(_2096a4489_StrBuilder* _20126_buf, jule::Uintptr _20143_u) {
	_2096a4e4b_WriteStr(_20126_buf, jule::Str::lit("_julec_label_", 13));
	_2096a4e4b_WriteStr(_20126_buf, _230d49a4d_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20143_u)), 15LL));
}



inline void static__1bcbcd57c_matchEnd(_2096a4489_StrBuilder* _20629_buf, jule::Uintptr _20646_m) {
	_2096a4e4b_WriteStr(_20629_buf, jule::Str::lit("_match_end_", 11));
	_2096a4e4b_WriteStr(_20629_buf, _230d49a4d_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20646_m)), 15LL));
}



inline void static__1bcbcd868_caseBegin(_2096a4489_StrBuilder* _21130_buf, jule::Uintptr _21147_c) {
	_2096a4e4b_WriteStr(_21130_buf, jule::Str::lit("_case_begin_", 12));
	_2096a4e4b_WriteStr(_21130_buf, _230d49a4d_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_21147_c)), 15LL));
}





std::ostream &operator<<(std::ostream &_Stream, _1bcbc9e6e_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bde2762c_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bde27c04_traitHash _Src) {
	_Stream << "traitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "ti:" << _Src._field_ti << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bde280cd_traitCast _Src) {
	_Stream << "traitCast{";
	_Stream << "t1:" << _Src._field_t1 << ", ";
	_Stream << "t2:" << _Src._field_t2;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1bde38b38_Str(_1bde38792_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _1bde38e79_Equal(jule::Ptr<_1bde38792_customType> _self_, jule::Ptr<_1bc8411bd_TypeKind> _4121_k) {
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bde38792_customType _Src) {
	_Stream << _1bde38b38_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1bde393a8_typeCoder> static__1bde398e7_new(jule::Ptr<_1bde29145_ObjectCoder>* _6624_oc) {
	jule::Ptr<_1bde393a8_typeCoder> _6713_tc = jule::new_ptr<_1bde393a8_typeCoder>(_1bde393a8_typeCoder{._field_oc=(*(_6624_oc)), });;
	(*(_6713_tc))._field_rc=static__1bde42c52_new(&(_6713_tc));
	return _6713_tc;;
}



inline void _1bde39c5a_toType(_1bde393a8_typeCoder* _self_, _2096a4489_StrBuilder* _7330_buf, jule::Str _7351_id) {
	if ((!_7351_id.equal("uintptr", 7))) {
		_7351_id=_230d4c37a_RealKindOf(_7351_id);
	};
	_2096a4e4b_WriteStr(_7330_buf, jule::Str::lit("jule::", 6));
	if (((97LL <= _7351_id[0LL]) && (_7351_id[0LL] <= 122LLU))) {
		_2096a5204_WriteByte(_7330_buf, static_cast<jule::U8>((_7351_id[0LL] - 32LLU)));
	} else {
		_2096a5204_WriteByte(_7330_buf, _7351_id[0LL]);
	};
	_2096a4e4b_WriteStr(_7330_buf, _7351_id.slice(1LL));
}



inline void _1bde3a0bd_prim(_1bde393a8_typeCoder* _self_, _2096a4489_StrBuilder* _8728_buf, jule::Ptr<_1bc848c97_Prim> _8745_p) {
	_1bde39c5a_toType(_self_, _8728_buf, (*(_8745_p))._field_Kind);
}



inline void _1bde3a431_tuple(_1bde393a8_typeCoder* _self_, _2096a4489_StrBuilder* _9229_buf, jule::Ptr<_1bc84dd8a_Tuple> _9250_t) {
	_2096a4e4b_WriteStr(_9229_buf, jule::Str::lit("std::tuple<", 11));
	{
		auto expr = &((*(_9250_t))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c313190e:;
		if (it != expr_end) {
			jule::I64 _9414_i = it - expr->begin();
			jule::Ptr<_1bc8411bd_TypeKind> _9421_tk = *it;
			{
				_1bde3ec71_kind(_self_, _9229_buf, _9421_tk);
				if ((((*(_9250_t))._field_Types.len() - _9414_i) > 1LL)) {
					_2096a5204_WriteByte(_9229_buf, ',');
				};
			}
			_iter_next_1c313190e:;
			++it;
			_9414_i++;
			goto _iter_begin_1c313190e;
		}
		_iter_end_1c313190e:;
	};
	_2096a5204_WriteByte(_9229_buf, '>');
}



inline void _1bde3a794_asSptr(_1bde393a8_typeCoder* _self_, _2096a4489_StrBuilder* _10430_buf, jule::Slice<jule::U8> _10447_elem) {
	_2096a4e4b_WriteStr(_10430_buf, jule::Str::lit("jule::Ptr<", 10));
	_2096a4b93_Write(_10430_buf, _10447_elem);
	_2096a5204_WriteByte(_10430_buf, '>');
}



inline void _1bde3ab07_sptr(_1bde393a8_typeCoder* _self_, _2096a4489_StrBuilder* _11128_buf, jule::Ptr<_1bc84c7c3_Sptr> _11149_sptr) {
	_2096a4e4b_WriteStr(_11128_buf, jule::Str::lit("jule::Ptr<", 10));
	_1bde3ec71_kind(_self_, _11128_buf, (*(_11149_sptr))._field_Elem);
	_2096a5204_WriteByte(_11128_buf, '>');
}



inline void _1bde3ae6a_ptr(_1bde393a8_typeCoder* _self_, _2096a4489_StrBuilder* _11827_buf, jule::Ptr<_1bc85108a_Ptr> _11848_p) {
	;
	if (_1bc851ac4_IsUnsafe(_11848_p.ptr())) {
		_2096a4e4b_WriteStr(_11827_buf, jule::Str::lit("void*", 5));
	} else {
		_1bde3ec71_kind(_self_, _11827_buf, (*(_11848_p))._field_Elem);
		_2096a4e4b_WriteStr(_11827_buf, jule::Str::lit("*", 1));
	};
}



inline void _1bde3b2cd_enumDecl(_1bde393a8_typeCoder* _self_, _2096a4489_StrBuilder* _12932_buf, jule::Ptr<_1bc71624c_Enum> _12953_e) {
	_1bde3ec71_kind(_self_, _12932_buf, (*((*(_12953_e))._field_Kind))._field_Kind);
}



inline void _1bde3b641_typeEnumDecl(_1bde393a8_typeCoder* _self_, _2096a4489_StrBuilder* _13436_buf, jule::Ptr<_1bc717957_TypeEnum> _13457_e) {
	_2096a4e4b_WriteStr(_13436_buf, jule::Str::lit("jule::Any", 9));
}



inline void _1bde3b9a4_asSlice(_1bde393a8_typeCoder* _self_, _2096a4489_StrBuilder* _13831_buf, jule::Ptr<_1bc8411bd_TypeKind> _13852_elem) {
	_2096a4e4b_WriteStr(_13831_buf, jule::Str::lit("jule::Slice<", 12));
	_1bde3ec71_kind(_self_, _13831_buf, _13852_elem);
	_2096a5204_WriteByte(_13831_buf, '>');
}



inline void _1bde3bd17_slice(_1bde393a8_typeCoder* _self_, _2096a4489_StrBuilder* _14529_buf, jule::Ptr<_1bc84d296_Slc> _14550_s) {
	_1bde3b9a4_asSlice(_self_, _14529_buf, (*(_14550_s))._field_Elem);
}



inline void _1bde3c17a_mapType(_1bde393a8_typeCoder* _self_, _2096a4489_StrBuilder* _15031_buf, jule::Ptr<_1bc84e93a_Map> _15052_m) {
	_2096a4e4b_WriteStr(_15031_buf, jule::Str::lit("jule::Map<", 10));
	_1bde3ec71_kind(_self_, _15031_buf, (*(_15052_m))._field_Key);
	_2096a5204_WriteByte(_15031_buf, ',');
	_1bde3ec71_kind(_self_, _15031_buf, (*(_15052_m))._field_Val);
	_2096a5204_WriteByte(_15031_buf, '>');
}



inline void _1bde3c851_traitDecl(_1bde393a8_typeCoder* _self_, _2096a4489_StrBuilder* _16533_buf, jule::Ptr<_1bc713a41_Trait> _16550_t) {
	_2096a4e4b_WriteStr(_16533_buf, jule::Str::lit("jule::Trait<", 12));
	static__1bcbcb657_traitDecl(_16533_buf, _16550_t);
	_2096a5204_WriteByte(_16533_buf, '>');
}



inline void _1bde3cbb4_structure(_1bde393a8_typeCoder* _self_, _2096a4489_StrBuilder* _17233_buf, jule::Ptr<_1bc5bb333_Struct> _17250_s) {
	static__1bcbcbc2e_structure(_17233_buf, &(_17250_s));
}



inline void _1bde3d027_structureIns(_1bde393a8_typeCoder* _self_, _2096a4489_StrBuilder* _17736_buf, jule::Ptr<_1bc5be0b1_StructIns> _17757_s) {
	if ((!((*((*(_17757_s))._field_Decl))._field_Binded))) {
		static__1bcbcc01a_structureIns(_17736_buf, &(_17757_s));
		return;;
	};
	jule::Ptr<_1bc594a59_Directive> _1829_d = _1bde46a7a_findDirective(&((*((*(_17757_s))._field_Decl))._field_Directives), jule::Str::lit("namespace", 9));;
	if ((_1829_d != nullptr)) {
		_2096a4b93_Write(_17736_buf, _1bde36691_concatAllParts((*(_1829_d))._field_Args));
		_2096a4e4b_WriteStr(_17736_buf, jule::Str::lit("::", 2));
	};
	static__1bcbcc01a_structureIns(_17736_buf, &(_17757_s));
	if (((*(_17757_s))._field_Generics.len() > 0LL)) {
		_2096a5204_WriteByte(_17736_buf, '<');
		{
			auto expr = &((*(_17757_s))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c3145e2e:;
			if (it != expr_end) {
				jule::I64 _19018_i = it - expr->begin();
				jule::Ptr<_1bc83e7d7_InsGeneric> _19025_g = *it;
				{
					_1bde3ec71_kind(_self_, _17736_buf, (*(_19025_g))._field_Kind);
					if ((((*(_17757_s))._field_Generics.len() - _19018_i) > 1LL)) {
						_2096a5204_WriteByte(_17736_buf, ',');
					};
				}
				_iter_next_1c3145e2e:;
				++it;
				_19018_i++;
				goto _iter_begin_1c3145e2e;
			}
			_iter_end_1c3145e2e:;
		};
		_2096a5204_WriteByte(_17736_buf, '>');
	};
}



inline void _1bde3d38a_array(_1bde393a8_typeCoder* _self_, _2096a4489_StrBuilder* _20129_buf, jule::Ptr<_1bc8505b7_Arr> _20150_a) {
	_2096a4e4b_WriteStr(_20129_buf, jule::Str::lit("jule::Array<", 12));
	_1bde3ec71_kind(_self_, _20129_buf, (*(_20150_a))._field_Elem);
	_2096a5204_WriteByte(_20129_buf, ',');
	_2096a4e4b_WriteStr(_20129_buf, _230d4a1d0_Itoa((*(_20150_a))._field_N));
	_2096a5204_WriteByte(_20129_buf, '>');
}



inline void _1bde3da61_paramIns(_1bde393a8_typeCoder* _self_, _2096a4489_StrBuilder* _22432_buf, jule::Ptr<_1ece1ceea_ParamIns>* _22454_p) {
	if ((*((*((*(_22454_p))))._field_Decl))._field_Variadic) {
		_2096a4e4b_WriteStr(_22432_buf, jule::Str::lit("jule::Slice<", 12));
		_1bde3ec71_kind(_self_, _22432_buf, (*((*(_22454_p))))._field_Kind);
		_2096a5204_WriteByte(_22432_buf, '>');
	} else {
		_1bde3ec71_kind(_self_, _22432_buf, (*((*(_22454_p))))._field_Kind);
	};
	if ((*((*((*(_22454_p))))._field_Decl))._field_Reference) {
		_2096a5204_WriteByte(_22432_buf, '*');
	};
}



inline void _1bde3e237_funcInsResult(_1bde393a8_typeCoder* _self_, _2096a4489_StrBuilder* _25637_s, jule::Ptr<_1ece1de96_FnIns>* _25657_f) {
	if (_1ece1b515_IsVoid((*((*(_25657_f))))._field_Decl.ptr())) {
		if ((*((*((*(_25657_f))))._field_Decl))._field_Exceptional) {
			_2096a4e4b_WriteStr(_25637_s, jule::Str::lit("jule::VoidExceptional", 21));
		} else {
			_2096a4e4b_WriteStr(_25637_s, jule::Str::lit("void", 4));
		};
		return;;
	};
	if ((*((*((*(_25657_f))))._field_Decl))._field_Exceptional) {
		_2096a4e4b_WriteStr(_25637_s, jule::Str::lit("jule::Exceptional<", 18));
		_1bde44d0e_codeMut1((*(_self_))._field_rc.ptr(), _25637_s, &((*((*(_25657_f))))._field_Result));
		_2096a5204_WriteByte(_25637_s, '>');
		return;;
	};
	_1bde44d0e_codeMut1((*(_self_))._field_rc.ptr(), _25637_s, &((*((*(_25657_f))))._field_Result));
}



inline void _1bde3e59a_anonFunc(_1bde393a8_typeCoder* _self_, _2096a4489_StrBuilder* _27432_buf, jule::Ptr<_1ece1de96_FnIns> _27453_f) {
	if ((((*(_27453_f))._field_Result != nullptr) && (_1bc845645_Tup((*(_27453_f))._field_Result.ptr()) != nullptr))) {
		_1bde2aad6_pushResultIns((*(_self_))._field_oc, &(_27453_f));
	};
	_1bde3e237_funcInsResult(_self_, _27432_buf, &(_27453_f));
	_2096a5204_WriteByte(_27432_buf, '(');
	if (((*(_27453_f))._field_Params.len() > 0LL)) {
		{
			auto expr = &((*(_27453_f))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c31572b4:;
			if (it != expr_end) {
				jule::I64 _28118_i = it - expr->begin();
				jule::Ptr<_1ece1ceea_ParamIns> _28125_param = *it;
				{
					if (_1ece19bd9_IsSelf((*(_28125_param))._field_Decl.ptr())) {
						goto _iter_next_1c31572b4;
					};
					_1bde3da61_paramIns(_self_, _27432_buf, &(_28125_param));
					if ((((*(_27453_f))._field_Params.len() - _28118_i) > 1LL)) {
						_2096a5204_WriteByte(_27432_buf, ',');
					};
				}
				_iter_next_1c31572b4:;
				++it;
				_28118_i++;
				goto _iter_begin_1c31572b4;
			}
			_iter_end_1c31572b4:;
		};
	} else {
		_2096a4e4b_WriteStr(_27432_buf, jule::Str::lit("void", 4));
	};
	_2096a5204_WriteByte(_27432_buf, ')');
}



inline void _1bde3e90d_func(_1bde393a8_typeCoder* _self_, _2096a4489_StrBuilder* _29728_buf, jule::Ptr<_1ece1de96_FnIns> _29749_f) {
	_2096a4e4b_WriteStr(_29728_buf, jule::Str::lit("jule::Fn<", 9));
	_1bde3e59a_anonFunc(_self_, _29728_buf, _29749_f);
	_2096a5204_WriteByte(_29728_buf, '>');
}



inline void _1bde3ec71_kind(_1bde393a8_typeCoder* _self_, _2096a4489_StrBuilder* _30428_buf, jule::Ptr<_1bc8411bd_TypeKind> _30449_k) {
	{
		
		if ((_1bc844d92_Struct(_30449_k.ptr()) != nullptr)) {
			_case_begin_1c315b5b5:;
			{
				_1bde3d027_structureIns(_self_, _30428_buf, _1bc844d92_Struct(_30449_k.ptr()));
				return;;
			}
		}
		else if (_1bc842015_Binded(_30449_k.ptr())) {
			_case_begin_1c315b63c:;
			{
				_2096a4e4b_WriteStr(_30428_buf, (*(_30449_k))._field_BindIdent);
				return;;
			}
		}
		else if ((_1bc84381e_Prim(_30449_k.ptr()) != nullptr)) {
			_case_begin_1c315b6b4:;
			{
				_1bde3a0bd_prim(_self_, _30428_buf, _1bc84381e_Prim(_30449_k.ptr()));
				return;;
			}
		}
		else if ((_1bc845645_Tup(_30449_k.ptr()) != nullptr)) {
			_case_begin_1c315b73b:;
			{
				_1bde3a431_tuple(_self_, _30428_buf, _1bc845645_Tup(_30449_k.ptr()));
				return;;
			}
		}
		else if ((_1bc843aa5_Sptr(_30449_k.ptr()) != nullptr)) {
			_case_begin_1c315b7b3:;
			{
				_1bde3ab07_sptr(_self_, _30428_buf, _1bc843aa5_Sptr(_30449_k.ptr()));
				return;;
			}
		}
		else if ((_1bc843d3b_Ptr(_30449_k.ptr()) != nullptr)) {
			_case_begin_1c315b83a:;
			{
				_1bde3ae6a_ptr(_self_, _30428_buf, _1bc843d3b_Ptr(_30449_k.ptr()));
				return;;
			}
		}
		else if ((_1bc8440c2_Enum(_30449_k.ptr()) != nullptr)) {
			_case_begin_1c315b8b2:;
			{
				_1bde3b2cd_enumDecl(_self_, _30428_buf, _1bc8440c2_Enum(_30449_k.ptr()));
				return;;
			}
		}
		else if ((_1bc844358_TypeEnum(_30449_k.ptr()) != nullptr)) {
			_case_begin_1c315b939:;
			{
				_1bde3b641_typeEnumDecl(_self_, _30428_buf, _1bc844358_TypeEnum(_30449_k.ptr()));
				return;;
			}
		}
		else if ((_1bc844875_Slc(_30449_k.ptr()) != nullptr)) {
			_case_begin_1c315b9b1:;
			{
				_1bde3bd17_slice(_self_, _30428_buf, _1bc844875_Slc(_30449_k.ptr()));
				return;;
			}
		}
		else if ((_1bc8453ae_Map(_30449_k.ptr()) != nullptr)) {
			_case_begin_1c315ba38:;
			{
				_1bde3c17a_mapType(_self_, _30428_buf, _1bc8453ae_Map(_30449_k.ptr()));
				return;;
			}
		}
		else if ((_1bc845128_Trait(_30449_k.ptr()) != nullptr)) {
			_case_begin_1c315bab0:;
			{
				_1bde3c851_traitDecl(_self_, _30428_buf, _1bc845128_Trait(_30449_k.ptr()));
				return;;
			}
		}
		else if ((_1bc8445de_Arr(_30449_k.ptr()) != nullptr)) {
			_case_begin_1c315bb37:;
			{
				_1bde3d38a_array(_self_, _30428_buf, _1bc8445de_Arr(_30449_k.ptr()));
				return;;
			}
		}
		else if ((_1bc844b0b_Fn(_30449_k.ptr()) != nullptr)) {
			_case_begin_1c315bbae:;
			{
				_1bde3e90d_func(_self_, _30428_buf, _1bc844b0b_Fn(_30449_k.ptr()));
				return;;
			}
		}
		_match_end_1c315b3d9:;
	};
	{
		auto &_match_expr{ (*(_30449_k))._field_Kind };
		
		if (_match_expr.type_is(true, 27)) {
			_case_begin_1c315bc69:;
			{
				_2096a4e4b_WriteStr(_30428_buf, (*((*(_30449_k))._field_Kind.cast_ptr<_1bde38792_customType>(27)))._field_kind);
			}
		}
		else {
			_case_begin_1c3165503:;
			{
				_2096a4e4b_WriteStr(_30428_buf, jule::Str::lit("[<unimplemented_type_kind>]", 27));
			}
		}
		_match_end_1c316549d:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1bde393a8_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "rc:" << _Src._field_rc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1bde42779_resultCoder> static__1bde42c52_new(jule::Ptr<_1bde393a8_typeCoder>* _37124_tc) {
	return jule::new_ptr<_1bde42779_resultCoder>(_1bde42779_resultCoder{._field_tc=(*(_37124_tc))});;
}



inline void _1bde430b5_ptr(_1bde42779_resultCoder* _self_, _2096a4489_StrBuilder* _37527_s, jule::Ptr<_1bc85108a_Ptr> _37546_p) {
	_2096a4e4b_WriteStr(_37527_s, jule::Str::lit("p", 1));
	_1bde4499b_codeMut(_self_, _37527_s, &((*(_37546_p))._field_Elem));
}



inline void _1bde43428_sptr(_1bde42779_resultCoder* _self_, _2096a4489_StrBuilder* _38028_s, jule::Ptr<_1bc84c7c3_Sptr> _38047_p) {
	_2096a4e4b_WriteStr(_38028_s, jule::Str::lit("x", 1));
	_1bde4499b_codeMut(_self_, _38028_s, &((*(_38047_p))._field_Elem));
}



inline void _1bde4378b_mapType(_1bde42779_resultCoder* _self_, _2096a4489_StrBuilder* _38531_s, jule::Ptr<_1bc84e93a_Map> _38550_p) {
	_2096a4e4b_WriteStr(_38531_s, jule::Str::lit("m", 1));
	_1bde4499b_codeMut(_self_, _38531_s, &((*(_38550_p))._field_Key));
	_1bde4499b_codeMut(_self_, _38531_s, &((*(_38550_p))._field_Val));
}



inline void _1bde43aee_slice(_1bde42779_resultCoder* _self_, _2096a4489_StrBuilder* _39129_s, jule::Ptr<_1bc84d296_Slc> _39148_slc) {
	_2096a4e4b_WriteStr(_39129_s, jule::Str::lit("s", 1));
	_1bde4499b_codeMut(_self_, _39129_s, &((*(_39148_slc))._field_Elem));
}



inline void _1bde43e62_arr(_1bde42779_resultCoder* _self_, _2096a4489_StrBuilder* _39627_s, jule::Ptr<_1bc8505b7_Arr> _39646_arr) {
	_2096a4e4b_WriteStr(_39627_s, jule::Str::lit("a", 1));
	_2096a4e4b_WriteStr(_39627_s, _230d49e16_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>((*(_39646_arr))._field_N)), 16LL));
	_1bde4499b_codeMut(_self_, _39627_s, &((*(_39646_arr))._field_Elem));
}



inline void _1bde442c5_func(_1bde42779_resultCoder* _self_, _2096a4489_StrBuilder* _40228_s, jule::Ptr<_1ece1de96_FnIns> _40247_f) {
	_2096a4e4b_WriteStr(_40228_s, jule::Str::lit("f", 1));
	{
		auto expr = &((*(_40247_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c316cb15:;
		if (it != expr_end) {
			jule::Ptr<_1ece1ceea_ParamIns> _40421_p = *it;
			{
				if ((*((*(_40421_p))._field_Decl))._field_Reference) {
					_2096a4e4b_WriteStr(_40228_s, jule::Str::lit("r", 1));
				};
				_1bde4499b_codeMut(_self_, _40228_s, &((*(_40421_p))._field_Kind));
			}
			_iter_next_1c316cb15:;
			++it;
			goto _iter_begin_1c316cb15;
		}
		_iter_end_1c316cb15:;
	};
	if (((*(_40247_f))._field_Result != nullptr)) {
		_1bde4499b_codeMut(_self_, _40228_s, &((*(_40247_f))._field_Result));
	};
}



inline void _1bde44638_tup(_1bde42779_resultCoder* _self_, _2096a4489_StrBuilder* _41527_s, jule::Ptr<_1bc84dd8a_Tuple> _41546_tup) {
	{
		auto expr = &((*(_41546_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c31702aa:;
		if (it != expr_end) {
			jule::Ptr<_1bc8411bd_TypeKind> _41621_t = *it;
			{
				_2096a4e4b_WriteStr(_41527_s, jule::Str::lit("__jule_tuple_", 13));
				_1bde4499b_codeMut(_self_, _41527_s, &(_41621_t));
			}
			_iter_next_1c31702aa:;
			++it;
			goto _iter_begin_1c31702aa;
		}
		_iter_end_1c31702aa:;
	};
}



inline void _1bde4499b_codeMut(_1bde42779_resultCoder* _self_, _2096a4489_StrBuilder* _42231_s, jule::Ptr<_1bc8411bd_TypeKind>* _42251_t) {
	{
		auto &_match_expr{ (*((*(_42251_t))))._field_Kind };
		
		if (_match_expr.type_is(true, 26)) {
			_case_begin_1c31714ed:;
			{
				_1bde430b5_ptr(_self_, _42231_s, (*((*(_42251_t))))._field_Kind.cast_ptr<_1bc85108a_Ptr>(26));
			}
		}
		else if (_match_expr.type_is(true, 21)) {
			_case_begin_1c31718b6:;
			{
				_1bde43428_sptr(_self_, _42231_s, (*((*(_42251_t))))._field_Kind.cast_ptr<_1bc84c7c3_Sptr>(21));
			}
		}
		else if (_match_expr.type_is(true, 24)) {
			_case_begin_1c317192c:;
			{
				_1bde4378b_mapType(_self_, _42231_s, (*((*(_42251_t))))._field_Kind.cast_ptr<_1bc84e93a_Map>(24));
			}
		}
		else if (_match_expr.type_is(true, 22)) {
			_case_begin_1c3171993:;
			{
				_1bde43aee_slice(_self_, _42231_s, (*((*(_42251_t))))._field_Kind.cast_ptr<_1bc84d296_Slc>(22));
			}
		}
		else if (_match_expr.type_is(true, 25)) {
			_case_begin_1c3171a1a:;
			{
				_1bde43e62_arr(_self_, _42231_s, (*((*(_42251_t))))._field_Kind.cast_ptr<_1bc8505b7_Arr>(25));
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1c3171e5a:;
			{
				_1bde442c5_func(_self_, _42231_s, (*((*(_42251_t))))._field_Kind.cast_ptr<_1ece1de96_FnIns>(1));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1c3171ed2:;
			{
				jule::Ptr<_1bc71624c_Enum> _43713_te = (*((*(_42251_t))))._field_Kind.cast_ptr<_1bc71624c_Enum>(3);;
				static__1bcbca843_toOut(_42231_s, (*(_43713_te))._field_Ident, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_43713_te)));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1c3172059:;
			{
				jule::Ptr<_1bc717957_TypeEnum> _44013_te = (*((*(_42251_t))))._field_Kind.cast_ptr<_1bc717957_TypeEnum>(4);;
				static__1bcbca843_toOut(_42231_s, (*(_44013_te))._field_Ident, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_44013_te)));
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1c31720d1:;
			{
				jule::Ptr<_1bc5be0b1_StructIns> _44317_si = (*((*(_42251_t))))._field_Kind.cast_ptr<_1bc5be0b1_StructIns>(0);;
				static__1bcbcc01a_structureIns(_42231_s, &(_44317_si));
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1c3172158:;
			{
				jule::Ptr<_1bc713a41_Trait> _44617_trt = (*((*(_42251_t))))._field_Kind.cast_ptr<_1bc713a41_Trait>(2);;
				static__1bcbcb657_traitDecl(_42231_s, _44617_trt);
			}
		}
		else if (_match_expr.type_is(true, 20)) {
			_case_begin_1c31721d0:;
			{
				_2096a4e4b_WriteStr(_42231_s, (*((*((*(_42251_t))))._field_Kind.cast_ptr<_1bc848c97_Prim>(20)))._field_Kind);
			}
		}
		else if (_match_expr.type_is(true, 23)) {
			_case_begin_1c3172257:;
			{
				_1bde44638_tup(_self_, _42231_s, (*((*(_42251_t))))._field_Kind.cast_ptr<_1bc84dd8a_Tuple>(23));
			}
		}
		else {
			_case_begin_1c3171850:;
			{
				jule::panic(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:453:13"));;
			}
		}
		_match_end_1c31717ea:;
	};
}



inline void _1bde44d0e_codeMut1(_1bde42779_resultCoder* _self_, _2096a4489_StrBuilder* _45732_s, jule::Ptr<_1bc8411bd_TypeKind>* _45752_t) {
	jule::Ptr<_1bc84dd8a_Tuple> _45813_tup = _1bc845645_Tup((*(_45752_t)).ptr());;
	if ((_45813_tup != nullptr)) {
		_1bde44638_tup(_self_, _45732_s, _45813_tup);
	} else {
		_1bde3ec71_kind((*(_self_))._field_tc.ptr(), _45732_s, (*(_45752_t)));
	};
}



inline jule::Slice<jule::U8> _1bde4511c_code(_1bde42779_resultCoder* _self_, jule::Ptr<_1bc8411bd_TypeKind>* _46628_t) {
	_2096a4489_StrBuilder _46713_s = static__2096a48da_New(20LL);;
	_1bde4499b_codeMut(_self_, &(_46713_s), _46628_t);
	return _2096a61e4_Buf(&_46713_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1bde42779_resultCoder _Src) {
	_Stream << "resultCoder{";
	_Stream << "tc:" << _Src._field_tc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c317cbad_Name(_1c317cd45_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1c317d131_What(_1c317cd45_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1c317d274_Reset(_1c317cd45_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1c317d3b7_Short(_1c317cd45_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c317cd45_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1c3181310_Name(_1c31816d9_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1c31819c5_What(_1c31816d9_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1c3181b18_Reset(_1c31816d9_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1c3181c5b_Short(_1c31816d9_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c31816d9_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1c3184a0b_Name(_1c3184dd5_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1c31851c1_What(_1c3184dd5_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1c3185314_Reset(_1c3184dd5_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1c3185457_Short(_1c3184dd5_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c3184dd5_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1c318824b_Name(_1c3188625_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1c3188911_What(_1c3188625_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1c3188a54_Reset(_1c3188625_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1c3188b97_Short(_1c3188625_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c3188625_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1c318b947_Name(_1c318bd21_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1c318c10c_What(_1c318bd21_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1c318c250_Reset(_1c318bd21_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1c318c393_Short(_1c318bd21_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c318bd21_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1bdead383_FlagSet> static__1bdead66e_New(void) {
	return jule::new_ptr<_1bdead383_FlagSet>(_1bdead383_FlagSet{._field_flags=jule::Slice<jule::Trait<_1bdeab7d2_CommonFlag>>::alloc(0LL, 20LL)});;
}



inline jule::Trait<_1bdeab7d2_CommonFlag> _1bdeadae2_FindFlag(_1bdead383_FlagSet* _self_, jule::Str _7127_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c319659a:;
		if (it != expr_end) {
			jule::Trait<_1bdeab7d2_CommonFlag> _7221_flag = *it;
			{
				if ((_1bdeab7d2_CommonFlag_mptr_data[(_7221_flag).type_offset]._1bde7a9b0_Name(_7221_flag) == _7127_name)) {
					return _7221_flag;;
				};
			}
			_iter_next_1c319659a:;
			++it;
			goto _iter_begin_1c319659a;
		}
		_iter_end_1c319659a:;
	};
	return nullptr;;
}



inline jule::Trait<_1bdeab7d2_CommonFlag> _1bdeade33_FindFlagShort(_1bdead383_FlagSet* _self_, jule::I32 _8132_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3197da4:;
		if (it != expr_end) {
			jule::Trait<_1bdeab7d2_CommonFlag> _8221_flag = *it;
			{
				if ((_1bdeab7d2_CommonFlag_mptr_data[(_8221_flag).type_offset]._1bde7ab03_Short(_8221_flag) == _8132_name)) {
					return _8221_flag;;
				};
			}
			_iter_next_1c3197da4:;
			++it;
			goto _iter_begin_1c3197da4;
		}
		_iter_end_1c3197da4:;
	};
	return nullptr;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1bdeae50a_Parse(_1bdead383_FlagSet* _self_, jule::Slice<jule::Str> _11524_args) {
	_1bdeb0d14_argParser _11613_ap = _1bdeb0d14_argParser{._field_set=(*(_self_)), ._field_args=_11524_args, };;
	({
		auto except = _1bdeb2310_parse(&_11613_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>{.result=_11613_ap._field_content};;
}



inline jule::Ptr<_1c318bd21_Flag> _1c3207694_addFlagCommon(_1bdead383_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	if ((_1bdeadae2_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:133:13"));;
	};
	if (((_13146_short != 0LL) && (_1bdeade33_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:13"));;
	};
	jule::Ptr<_1c318bd21_Flag> _14013_flag = jule::new_ptr<_1c318bd21_Flag>(_1c318bd21_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait<_1bdeab7d2_CommonFlag>> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait<_1bdeab7d2_CommonFlag>(_14013_flag, 4)); };
	return _14013_flag;;
}

inline jule::Ptr<_1c3188625_Flag> _1c320e4c0_addFlagCommon(_1bdead383_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	if ((_1bdeadae2_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:133:13"));;
	};
	if (((_13146_short != 0LL) && (_1bdeade33_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:13"));;
	};
	jule::Ptr<_1c3188625_Flag> _14013_flag = jule::new_ptr<_1c3188625_Flag>(_1c3188625_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait<_1bdeab7d2_CommonFlag>> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait<_1bdeab7d2_CommonFlag>(_14013_flag, 3)); };
	return _14013_flag;;
}



inline void _1c3205384_AddVar(_1bdead383_FlagSet* _self_, jule::Ptr<jule::Str> _16762_var, jule::Str _16771_name, jule::I32 _16782_short, jule::Str _16795_what) {
	jule::Ptr<_1c318bd21_Flag> _16813_flag = _1c3207694_addFlagCommon(_self_, _16771_name, _16782_short, _16795_what);;
	(*(_16813_flag))._field_default=(*(_16762_var));
	(*(_16813_flag))._field_data=_16762_var;
}

inline void _1c320c204_AddVar(_1bdead383_FlagSet* _self_, jule::Ptr<jule::Bool> _16762_var, jule::Str _16771_name, jule::I32 _16782_short, jule::Str _16795_what) {
	jule::Ptr<_1c3188625_Flag> _16813_flag = _1c320e4c0_addFlagCommon(_self_, _16771_name, _16782_short, _16795_what);;
	(*(_16813_flag))._field_default=(*(_16762_var));
	(*(_16813_flag))._field_data=_16762_var;
}





std::ostream &operator<<(std::ostream &_Stream, _1bdead383_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_i64__jule_tuple_bool _1c319ec46_parseInteger(_1bdeb0d14_argParser* _self_, jule::Str* _18231_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)> _18239_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18231_s))).empty()) {
			_case_begin_1c31a2a6d:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1ed639b56_HasPrefix((*(_18231_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1c31a28b4:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1ed639b56_HasPrefix((*(_18231_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1c31a2c49:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1ed639b56_HasPrefix((*(_18231_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1c31a2cb0:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18231_s))[0LL] == '0')) {
			_case_begin_1c31a23ca:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1c31a2364:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1c31a2298:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1c31a7523_parseInteger(_1bdeb0d14_argParser* _self_, jule::Str* _18231_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)> _18239_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18231_s))).empty()) {
			_case_begin_1c31aa306:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1ed639b56_HasPrefix((*(_18231_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1c31aa14c:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1ed639b56_HasPrefix((*(_18231_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1c31aa4d2:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1ed639b56_HasPrefix((*(_18231_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1c31aa548:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18231_s))[0LL] == '0')) {
			_case_begin_1c31a9b63:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1c31a9aec:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1c31a9a31:;
	};
	return __jule_func_result;;
}



inline jule::Str _1bdeb162d_getData(_1bdeb0d14_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1bdeb18a3_processFlag(_1bdeb0d14_argParser* _self_, jule::Trait<_1bdeab7d2_CommonFlag>* _20935_flag) {
	{
		auto &_match_expr{ (*(_20935_flag)) };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1c319beda:;
			{
				jule::Ptr<_1c3188625_Flag> _21217_bf = (*(_20935_flag)).cast_ptr<_1c3188625_Flag>(3);;
				(*((*(_21217_bf))._field_data))=(!((*(_21217_bf))._field_default));
				return jule::VoidExceptional{};;
			}
		}
		_match_end_1c319be85:;
	};
	jule::Str _2179_data = _1bdeb162d_getData(_self_);;
	if ((_2179_data).empty()) {
		return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + _1bdeab7d2_CommonFlag_mptr_data[((*(_20935_flag))).type_offset]._1bde7a9b0_Name((*(_20935_flag)))) + jule::Str::lit(": expression missing", 20)), &__jule_any_type4)};
	};
	{
		auto &_match_expr{ (*(_20935_flag)) };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1c319dd55:;
			{
				jule::Ptr<_1c317cd45_Flag> _22417_intf = (*(_20935_flag)).cast_ptr<_1c317cd45_Flag>(0);;
				jule::Bool _22527_ok = false;;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1c319ec46_parseInteger(_self_, &(_2179_data), jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _22565_s, jule::I64 _22573_base) mutable -> __jule_tuple_i64__jule_tuple_bool {
						__jule_tuple_i64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::I64>(({
							auto except = _230d3871d_ParseInt(_22565_s, _22573_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LL;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*((*(_22417_intf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_22527_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_22527_ok))) {
					return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + _1bdeab7d2_CommonFlag_mptr_data[((*(_20935_flag))).type_offset]._1bde7a9b0_Name((*(_20935_flag)))) + jule::Str::lit(": expression must be valid signed integer", 41)), &__jule_any_type4)};
				};
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1c319ddbb:;
			{
				jule::Ptr<_1c31816d9_Flag> _23217_uintf = (*(_20935_flag)).cast_ptr<_1c31816d9_Flag>(1);;
				jule::Bool _23328_ok = false;;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1c31a7523_parseInteger(_self_, &(_2179_data), jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _23366_s, jule::I64 _23374_base) mutable -> __jule_tuple_u64__jule_tuple_bool {
						__jule_tuple_u64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(({
							auto except = _230d38267_ParseUint(_23366_s, _23374_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LLU;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*((*(_23217_uintf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23328_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23328_ok))) {
					return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + _1bdeab7d2_CommonFlag_mptr_data[((*(_20935_flag))).type_offset]._1bde7a9b0_Name((*(_20935_flag)))) + jule::Str::lit(": expression must be valid unsigned integer", 43)), &__jule_any_type4)};
				};
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1c319de32:;
			{
				jule::Ptr<_1c3184dd5_Flag> _24017_ff = (*(_20935_flag)).cast_ptr<_1c3184dd5_Flag>(2);;
				(*((*(_24017_ff))._field_data))=static_cast<jule::F64>(({
					auto except = _230d4015e_ParseFloat(_2179_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + _1bdeab7d2_CommonFlag_mptr_data[((*(_20935_flag))).type_offset]._1bde7a9b0_Name((*(_20935_flag)))) + jule::Str::lit(": expression must be valid floating-point", 41)), &__jule_any_type4)};
					} 0;});
				}));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1c319de98:;
			{
				(*((*((*(_20935_flag)).cast_ptr<_1c318bd21_Flag>(4)))._field_data))=_2179_data;
			}
		}
		_match_end_1c319d591:;
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1bdeb1b5b_singleDash(_1bdeb0d14_argParser* _self_, jule::Str* _24930_arg) {
	if (((*(_24930_arg)).len() == 1LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_24930_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4)};
	};
	jule::Slice<jule::I32> _2539_rarg = static_cast<jule::Slice<jule::I32>>((*(_24930_arg))).slice(1LL);;
	{
		auto expr = &(_2539_rarg);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c31b19c2:;
		if (it != expr_end) {
			jule::I32 *_25416_r = it;
			{
				jule::Trait<_1bdeab7d2_CommonFlag> _25517_flag = _1bdeade33_FindFlagShort(&(*(_self_))._field_set, (*(_25416_r)));;
				if ((_25517_flag == nullptr)) {
					return jule::VoidExceptional{.error=jule::Any((((*(_24930_arg)) + jule::Str::lit(": flag is not exist: ", 21)) + jule::Str::from_rune((*(_25416_r)))), &__jule_any_type4)};
				};
				({
					auto except = _1bdeb18a3_processFlag(_self_, &(_25517_flag));
					if (!except.ok()) {
						return jule::VoidExceptional{.error=std::move(except.error)};
					}
				});
			}
			_iter_next_1c31b19c2:;
			++it;
			goto _iter_begin_1c31b19c2;
		}
		_iter_end_1c31b19c2:;
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1bdeb1e14_doubleDash(_1bdeb0d14_argParser* _self_, jule::Str* _26430_arg) {
	if (((*(_26430_arg)).len() == 2LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26430_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4)};
	};
	jule::Trait<_1bdeab7d2_CommonFlag> _26813_flag = _1bdeadae2_FindFlag(&(*(_self_))._field_set, (*(_26430_arg)).slice(2LL));;
	if ((_26813_flag == nullptr)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26430_arg)) + jule::Str::lit(": flag is not exist", 19)), &__jule_any_type4)};
	};
	({
		auto except = _1bdeb18a3_processFlag(_self_, &(_26813_flag));
		if (!except.ok()) {
			return jule::VoidExceptional{.error=std::move(except.error)};
		}
	});
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1bdeb2112_tryArg(_1bdeb0d14_argParser* _self_) {
	jule::Str _2769_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional{};;
	};
	if ((_2769_arg[0LL] == '-')) {
		if (((_2769_arg.len() > 1LL) && (_2769_arg[1LL] == '-'))) {
			({
				auto except = _1bdeb1e14_doubleDash(_self_, &(_2769_arg));
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
			return jule::VoidExceptional{};;
		};
		({
			auto except = _1bdeb1b5b_singleDash(_self_, &(_2769_arg));
			if (!except.ok()) {
				return jule::VoidExceptional{.error=std::move(except.error)};
			}
		});
		return jule::VoidExceptional{};;
	};
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_content; __jule_push_dest.push(_2769_arg); };
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1bdeb2310_parse(_1bdeb0d14_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1bdeb2112_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
		}
	_iter_next_1c31b8765:;
	}
	_iter_end_1c31b8765:;;
	return jule::VoidExceptional{};
}





std::ostream &operator<<(std::ostream &_Stream, _1bdeb0d14_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1bde29145_ObjectCoder> static__1bde29541_New(jule::Ptr<_1bd4385ab_IR>* _9424_ir, _1bde2762c_SerializationInfo _9433_info) {
	jule::Ptr<_1bde29145_ObjectCoder> _9513_oc = jule::new_ptr<_1bde29145_ObjectCoder>(_1bde29145_ObjectCoder{._field_ir=(*(_9424_ir)), ._field_info=_9433_info, });;
	(*(_9513_oc))._field_ec=static__1bcbb6c80_new(&(_9513_oc));
	(*(_9513_oc))._field_sc=static__1bd5a3193_new(&(_9513_oc));
	(*(_9513_oc))._field_tc=static__1bde398e7_new(&(_9513_oc));
	return _9513_oc;;
}



inline void _1bde297e9_write(jule::Ptr<_1bde29145_ObjectCoder> _self_, jule::Str _10525_s) {
	_2096a4e4b_WriteStr(&(*(_self_))._field_Buf, _10525_s);
}



inline void _1bde29aa2_writeBytes(jule::Ptr<_1bde29145_ObjectCoder> _self_, jule::Slice<jule::U8> _10930_b) {
	_2096a4b93_Write(&(*(_self_))._field_Buf, _10930_b);
}



inline void _1bde29ca0_addIndent(jule::Ptr<_1bde29145_ObjectCoder> _self_) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_indentBuffer; __jule_push_dest.push(9LLU); };
}



inline void _1bde29e9d_doneIndent(jule::Ptr<_1bde29145_ObjectCoder> _self_) {
	(*(_self_))._field_indentBuffer=(*(_self_))._field_indentBuffer.slice(0LL, ((*(_self_))._field_indentBuffer.len() - 1LL));
}



inline void _1bde2a19b_indent(jule::Ptr<_1bde29145_ObjectCoder> _self_) {
	_2096a4b93_Write(&(*(_self_))._field_Buf, (*(_self_))._field_indentBuffer);
}



inline jule::I64 _1bde2a4dc_findAnyType(jule::Ptr<_1bde29145_ObjectCoder> _self_, jule::Ptr<_1bc8411bd_TypeKind>* _12836_t) {
	{
		auto expr = &((*(_self_))._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2ee7bb0:;
		if (it != expr_end) {
			jule::I64 _12914_i = it - expr->begin();
			jule::Ptr<_1bc8411bd_TypeKind> _12921_at = *it;
			{
				if (_1bc8418c7_Equal(_12921_at, (*(_12836_t)))) {
					return _12914_i;;
				};
			}
			_iter_next_1c2ee7bb0:;
			++it;
			_12914_i++;
			goto _iter_begin_1c2ee7bb0;
		}
		_iter_end_1c2ee7bb0:;
	};
	return -1LL;;
}



inline jule::I64 _1bde2a82d_pushAnyType(jule::Ptr<_1bde29145_ObjectCoder> _self_, jule::Ptr<_1bc8411bd_TypeKind> _13735_t) {
	if ((_1bc8440c2_Enum(_13735_t.ptr()) != nullptr)) {
		_13735_t=(*((*(_1bc8440c2_Enum(_13735_t.ptr())))._field_Kind))._field_Kind;
	};
	jule::I64 _14113_i = _1bde2a4dc_findAnyType(_self_, &(_13735_t));;
	if ((_14113_i != -1LL)) {
		return _14113_i;;
	};
	_14113_i=static_cast<jule::I64>((*(_self_))._field_anyTypeMap.len());
	{ jule::Slice<jule::Ptr<_1bc8411bd_TypeKind>> &__jule_push_dest = (*(_self_))._field_anyTypeMap; __jule_push_dest.push(_13735_t); };
	jule::Str _1479_si = _230d4a1d0_Itoa(_14113_i);;
	if ((_1bc843aa5_Sptr(_13735_t.ptr()) != nullptr)) {
		_2096a4489_StrBuilder _14917_elemKind = static__2096a48da_New(40LL);;
		_1bde3ec71_kind((*(_self_))._field_tc.ptr(), &(_14917_elemKind), (*(_1bc843aa5_Sptr(_13735_t.ptr())))._field_Elem);
		_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("void __jule_any_type", 20));
		_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64));
		_2096a4b93_Write(&(*(_self_))._field_anyObj, _2096a61e4_Buf(&_14917_elemKind));
		_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(">().dealloc(); }\n", 17));
		_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("{.dealloc=__jule_any_type", 25));
		_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};\n", 58));
		_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
		_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
		_1bde3a794_asSptr((*(_self_))._field_tc.ptr(), &((*(_self_))._field_anyObj), _2096a61e4_Buf(&_14917_elemKind));
		_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
		_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(" && jule::ptr_equal(any.data.alloc, other.alloc); }\n", 52));
	} else {
		jule::Bool _17613_comparable = _1bc8427b8_Comparable(_13735_t.ptr());;
		_2096a4489_StrBuilder _17717_kindB = static__2096a48da_New(40LL);;
		_1bde3ec71_kind((*(_self_))._field_tc.ptr(), &(_17717_kindB), _13735_t);
		jule::Slice<jule::U8> _17913_kind = _2096a61e4_Buf(&_17717_kindB);;
		if (_2096a38d9_BytesStr(_17913_kind).equal("[<unimplemented_type_kind>]", 27)) {
			jule::outln(_1bc841586_Str(_13735_t.ptr()));
		};
		_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("void __jule_any_type", 20));
		_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64));
		_2096a4b93_Write(&(*(_self_))._field_anyObj, _17913_kind);
		_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(">().dealloc(); }\n", 17));
		if (_17613_comparable) {
			_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
			_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<", 66));
			_2096a4b93_Write(&(*(_self_))._field_anyObj, _17913_kind);
			_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("*>(alloc) == *reinterpret_cast<", 31));
			_2096a4b93_Write(&(*(_self_))._field_anyObj, _17913_kind);
			_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("*>(other); }\n", 13));
		};
		_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("jule::Str __jule_any_type", 25));
		_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<", 76));
		if ((_1bc843d3b_Ptr(_13735_t.ptr()) == nullptr)) {
			_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("const ", 6));
			_2096a4b93_Write(&(*(_self_))._field_anyObj, _17913_kind);
		} else {
			_2096a4b93_Write(&(*(_self_))._field_anyObj, _17913_kind);
			_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("* const", 7));
		};
		_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("*>(alloc)); }\n", 14));
		_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("{.dealloc=__jule_any_type", 25));
		_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_dealloc, ", 10));
		if (_17613_comparable) {
			_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(".eq=__jule_any_type", 19));
			_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
			_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_eq, ", 5));
		};
		_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(".to_str=__jule_any_type", 23));
		_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_to_str};\n", 10));
		if (_17613_comparable) {
			_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
			_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
			_2096a4b93_Write(&(*(_self_))._field_anyObj, _17913_kind);
			_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
			_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
			_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(" && __jule_any_type", 19));
			_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
			_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_eq(any.data.alloc, (void*)&other); }\n", 38));
		};
	};
	return _14113_i;;
}



inline void _1bde2aad6_pushResultIns(jule::Ptr<_1bde29145_ObjectCoder> _self_, jule::Ptr<_1ece1de96_FnIns>* _24738_f) {
	jule::Str _2489_s = static_cast<jule::Str>(_1bde4511c_code((*((*(_self_))._field_tc))._field_rc.ptr(), &((*((*(_24738_f))))._field_Result)));;
	jule::Bool _24912_ok = false;;
	(*(_self_))._field_resultMap.lookup(_2489_s, nullptr, &(_24912_ok));
	if (_24912_ok) {
		return;;
	};
	(*(_self_))._field_resultMap[_2489_s]=false;
	_2096a4e4b_WriteStr(&(*(_self_))._field_resultDecls, jule::Str::lit("struct ", 7));
	_2096a4e4b_WriteStr(&(*(_self_))._field_resultDecls, _2489_s);
	_2096a4e4b_WriteStr(&(*(_self_))._field_resultDecls, jule::Str::lit(" {\n", 3));
	{
		auto expr = &((*(_1bc845645_Tup((*((*(_24738_f))))._field_Result.ptr())))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c30187d5:;
		if (it != expr_end) {
			jule::I64 _25714_i = it - expr->begin();
			jule::Ptr<_1bc8411bd_TypeKind> _25721_t = *it;
			{
				_2096a5204_WriteByte(&(*(_self_))._field_resultDecls, 9LLU);
				_1bde3ec71_kind((*(_self_))._field_tc.ptr(), &((*(_self_))._field_resultDecls), _25721_t);
				_2096a5204_WriteByte(&(*(_self_))._field_resultDecls, ' ');
				_2096a4e4b_WriteStr(&(*(_self_))._field_resultDecls, jule::Str::lit("__jule_result_arg", 17));
				_2096a4e4b_WriteStr(&(*(_self_))._field_resultDecls, _230d4a1d0_Itoa(_25714_i));
				_2096a4e4b_WriteStr(&(*(_self_))._field_resultDecls, jule::Str::lit(";\n", 2));
			}
			_iter_next_1c30187d5:;
			++it;
			_25714_i++;
			goto _iter_begin_1c30187d5;
		}
		_iter_end_1c30187d5:;
	};
	_2096a4e4b_WriteStr(&(*(_self_))._field_resultDecls, jule::Str::lit("};\n", 3));
}



inline void _1bde2ad8e_pushResult(jule::Ptr<_1bde29145_ObjectCoder> _self_, jule::Ptr<_1ece1b092_Fn>* _26835_f) {
	if ((_1ece1b515_IsVoid((*(_26835_f)).ptr()) || ((*((*((*(_26835_f))))._field_Result))._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I64 _27213_n = (*((*(_26835_f))))._field_Instances.len();;
	if (((*((*(_26835_f))))._field_Generics.len() == 0LL)) {
		_27213_n=1LL;
	};
	{
		auto expr = (*((*(_26835_f))))._field_Instances.slice(0LL, _27213_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1c301d8d9:;
		if (it != expr_end) {
			jule::Ptr<_1ece1de96_FnIns> _27621_ins = *it;
			{
				_1bde2aad6_pushResultIns(_self_, &(_27621_ins));
			}
			_iter_next_1c301d8d9:;
			++it;
			goto _iter_begin_1c301d8d9;
		}
		_iter_end_1c301d8d9:;
	};
}



inline jule::I64 _1bde2b28a_findTypeOffsetS(_1bde29145_ObjectCoder* _self_, jule::Ptr<_1bc713a41_Trait> _28130_t, jule::Ptr<_1bc5be0b1_StructIns> _28145_s) {
	if (((*(_28130_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c301eec3:;
		if (it != expr_end) {
			jule::Ptr<_1bde27c04_traitHash> *_28516_hash = it;
			{
				if ((((*((*(_28516_hash))))._field_t == _28130_t) && ((*((*(_28516_hash))))._field_s == _28145_s))) {
					return (*((*(_28516_hash))))._field_i;;
				};
			}
			_iter_next_1c301eec3:;
			++it;
			goto _iter_begin_1c301eec3;
		}
		_iter_end_1c301eec3:;
	};
	return -1LL;;
}



inline jule::I64 _1bde2b686_findTypeOffset(_1bde29145_ObjectCoder* _self_, jule::Ptr<_1bc713a41_Trait> _29329_t, jule::Ptr<_1bc8411bd_TypeKind> _29344_k) {
	if (((*(_29329_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1bc5be0b1_StructIns> _29717_s = nullptr;;
	if ((_1bc843aa5_Sptr(_29344_k.ptr()) != nullptr)) {
		_29344_k=(*(_1bc843aa5_Sptr(_29344_k.ptr())))._field_Elem;
	};
	_29717_s=_1bc844d92_Struct(_29344_k.ptr());
	if ((_29717_s == nullptr)) {
		return -1LL;;
	};
	return static_cast<jule::I64>(_1bde2b28a_findTypeOffsetS(_self_, _29329_t, _29717_s));;
}



inline void _1bde2b9e9_pushAndWriteMaskMapper(jule::Ptr<_1bde29145_ObjectCoder> _self_, jule::Ptr<_1bc713a41_Trait> _30846_t1, jule::Ptr<_1bc713a41_Trait> _30862_t2) {
	_2096a4489_StrBuilder _30913_ident = static__2096a48da_New(32LL);;
	_2096a4e4b_WriteStr(&_30913_ident, jule::Str::lit("__jule_trait_offset_mapper_", 27));
	_2096a4e4b_WriteStr(&_30913_ident, _230d49a4d_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30862_t2))), 15LL));
	_2096a4e4b_WriteStr(&_30913_ident, jule::Str::lit("_to_", 4));
	_2096a4e4b_WriteStr(&_30913_ident, _230d49a4d_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30846_t1))), 15LL));
	_2096a4b93_Write(&(*(_self_))._field_Buf, _2096a61e4_Buf(&_30913_ident));
	{
		auto expr = &((*(_self_))._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c30255d3:;
		if (it != expr_end) {
			_1bde280cd_traitCast _31716_m = *it;
			{
				if (((_31716_m._field_t1 == _30846_t1) && (_31716_m._field_t2 == _30862_t2))) {
					return;;
				};
			}
			_iter_next_1c30255d3:;
			++it;
			goto _iter_begin_1c30255d3;
		}
		_iter_end_1c30255d3:;
	};
	{ jule::Slice<_1bde280cd_traitCast> &__jule_push_dest = (*(_self_))._field_traitCastMap; __jule_push_dest.push(_1bde280cd_traitCast{._field_t1=_30846_t1, ._field_t2=_30862_t2}); };
	;
	_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("jule::Int", 9));
	_2096a5204_WriteByte(&(*(_self_))._field_anyObj, ' ');
	_2096a4b93_Write(&(*(_self_))._field_anyObj, _2096a61e4_Buf(&_30913_ident));
	_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("(const jule::Int offset) noexcept { ", 36));
	{
		auto expr = &((*(_30846_t1))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3028a15:;
		if (it != expr_end) {
			jule::Ptr<_1bc5bb333_Struct> _33621_s1 = *it;
			{
				{
					auto expr = &((*(_30862_t2))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c302998e:;
					if (it != expr_end) {
						jule::Ptr<_1bc5bb333_Struct> _33720_s2 = *it;
						{
							if ((_33621_s1 == _33720_s2)) {
								{
									auto expr = &((*(_33621_s1))._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1c302a7e7:;
									if (it != expr_end) {
										jule::Ptr<_1bc5be0b1_StructIns> _33933_s1i = *it;
										{
											jule::I64 _34025_i1 = _1bde2b28a_findTypeOffsetS(_self_.ptr(), _30846_t1, _33933_s1i);;
											jule::I64 _34125_i2 = _1bde2b28a_findTypeOffsetS(_self_.ptr(), _30862_t2, _33933_s1i);;
											_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("if (offset == ", 14));
											_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, _230d4a1d0_Itoa(_34125_i2));
											_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(") return ", 9));
											_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, _230d4a1d0_Itoa(_34025_i1));
											_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("; ", 2));
										}
										_iter_next_1c302a7e7:;
										++it;
										goto _iter_begin_1c302a7e7;
									}
									_iter_end_1c302a7e7:;
								};
							};
						}
						_iter_next_1c302998e:;
						++it;
						goto _iter_begin_1c302998e;
					}
					_iter_end_1c302998e:;
				};
			}
			_iter_next_1c3028a15:;
			++it;
			goto _iter_begin_1c3028a15;
		}
		_iter_end_1c3028a15:;
	};
	_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(" return ", 8));
	_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, _230d4a1d0_Itoa(0LL));
	_2096a4e4b_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("; }\n", 4));
}



inline void _1bde2bca2_locInfo(jule::Ptr<_1bde29145_ObjectCoder> _self_, jule::Ptr<_1bc583a9d_Token>* _35728_t) {
	jule::Str *_35810_loc = &((*((*((*(_35728_t))))._field_File))._field_Path);;
	if (_23b84b1c0_Production) {
		{
			
			if (_1ed639b56_HasPrefix((*(_35810_loc)), _1eeea8094_PathStdlib)) {
				_case_begin_1c3030ae9:;
				{
					_1bcbc4991_cstrBytes(&((*(_self_))._field_Buf), (*(_35810_loc)).slice((_1ed645920_Dir(_1eeea8094_PathStdlib).len() + 1LL)));
				}
			}
			else if (_1ed639b56_HasPrefix((*(_35810_loc)), (*((*(_self_))._field_ir))._field_Root)) {
				_case_begin_1c3030bc6:;
				{
					_1bcbc4991_cstrBytes(&((*(_self_))._field_Buf), (*(_35810_loc)).slice((_1ed645920_Dir((*((*(_self_))._field_ir))._field_Root).len() + 1LL)));
				}
			}
			else {
				_case_begin_1c3030742:;
				{
					_1bcbc4991_cstrBytes(&((*(_self_))._field_Buf), (*(_35810_loc)));
				}
			}
			_match_end_1c3030676:;
		};
	} else {
		_1bcbc4991_cstrBytes(&((*(_self_))._field_Buf), (*(_35810_loc)));
	};
	_1bde297e9_write(_self_, jule::Str::lit(":", 1));
	_1bde297e9_write(_self_, _230d4a1d0_Itoa((*((*(_35728_t))))._field_Row));
	_1bde297e9_write(_self_, jule::Str::lit(":", 1));
	_1bde297e9_write(_self_, _230d4a1d0_Itoa((*((*(_35728_t))))._field_Column));
}



inline void _1bde2bea0_head(jule::Ptr<_1bde29145_ObjectCoder> _self_) {
	_1bcc8192c_Time _3849_time = static__1bcc81ee3_Now();;
	_1bcc81256_AbsTime _3859_abs = _1bcc836cb_Abs(&_3849_time);;
	_1bde297e9_write(_self_, jule::Str::lit("// Auto generated by JuleC.\n", 28));
	_1bde297e9_write(_self_, jule::Str::lit("// JuleC version: ", 18));
	_1bde297e9_write(_self_, jule::Str::lit("jule0.0.15 @master", 18));
	_1bde297e9_write(_self_, jule::Str::lit("\n", 1));
	_1bde297e9_write(_self_, jule::Str::lit("// Date: ", 9));
	_1bde297e9_write(_self_, _230d49a4d_FmtUint(_3859_abs._field_Day, 10LL));
	_1bde297e9_write(_self_, jule::Str::lit("/", 1));
	_1bde297e9_write(_self_, _230d49a4d_FmtUint(_3859_abs._field_Month, 10LL));
	_1bde297e9_write(_self_, jule::Str::lit("/", 1));
	_1bde297e9_write(_self_, _230d49a4d_FmtUint(_3859_abs._field_Year, 10LL));
	_1bde297e9_write(_self_, jule::Str::lit(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1bde297e9_write(_self_, (*(_self_))._field_info._field_Compiler);
	_1bde297e9_write(_self_, jule::Str::lit(" ", 1));
	_1bde297e9_write(_self_, (*(_self_))._field_info._field_CompilerCommand);
	_1bde297e9_write(_self_, jule::Str::lit("\n\n", 2));
	if (_23b84b1c0_Production) {
		_1bde297e9_write(_self_, jule::Str::lit("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_23b84aa2c_RC))) {
		_1bde297e9_write(_self_, jule::Str::lit("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_23b84ae06_Safety))) {
		_1bde297e9_write(_self_, jule::Str::lit("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1bde2c19d_links(_self_);
	_1bde297e9_write(_self_, jule::Str::lit("\n\n#include \"", 12));
	_1bde297e9_write(_self_, _1eeea88ad_PathApi);
	_1bde297e9_write(_self_, jule::Str::lit("\"\n\n", 3));
}



inline void _1bde2c19d_links(jule::Ptr<_1bde29145_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c303c2ba:;
		if (it != expr_end) {
			jule::Ptr<_1bc763e04_ImportInfo> _42216_used = *it;
			{
				{
					
					if ((!((*(_42216_used))._field_Binded))) {
						_case_begin_1c303d079:;
						{
							goto _iter_next_1c303c2ba;
						}
					}
					else if (_1ed6ba313_IsStdHeaderPath((*(_42216_used))._field_Path)) {
						_case_begin_1c303d101:;
						{
							_1bde297e9_write(_self_, jule::Str::lit("#include ", 9));
							_1bde297e9_write(_self_, (*(_42216_used))._field_Path);
							_1bde297e9_write(_self_, jule::Str::lit("\n", 1));
						}
					}
					else if (_1ed6ba5dd_IsValidHeaderExt(_1ed644ee6_Ext((*(_42216_used))._field_Path))) {
						_case_begin_1c303d178:;
						{
							_1bde297e9_write(_self_, jule::Str::lit("#include \"", 10));
							_1bde297e9_write(_self_, (*(_42216_used))._field_Path);
							_1bde297e9_write(_self_, jule::Str::lit("\"\n", 2));
						}
					}
					_match_end_1c303ce58:;
				};
			}
			_iter_next_1c303c2ba:;
			++it;
			goto _iter_begin_1c303c2ba;
		}
		_iter_end_1c303c2ba:;
	};
}



inline void _1bde2c456_prepareStructure(_1bde29145_ObjectCoder* _self_, jule::Ptr<_1bc5bb333_Struct>* _43840_s) {
	{
		auto expr = &((*((*(_43840_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c30402e0:;
		if (it != expr_end) {
			jule::Ptr<_1bc5be0b1_StructIns> _43921_ins = *it;
			{
				{
					auto expr = &((*(_43921_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c304190c:;
					if (it != expr_end) {
						jule::Ptr<_1ece1b092_Fn> _44025_m = *it;
						{
							if ((*(_44025_m))._field_Statically) {
								goto _iter_next_1c304190c;
							};
							{
								auto expr = &((*(_44025_m))._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1c30427ba:;
								if (it != expr_end) {
									jule::Ptr<_1ece1de96_FnIns> _44429_mins = *it;
									{
										jule::Ptr<_1ece1ceea_ParamIns> _44525_p = (*(_44429_mins))._field_Params[0LL];;
										_2096a4489_StrBuilder _44625_kind = static__2096a48da_New(40LL);;
										_1bde3ec71_kind((*(_self_))._field_tc.ptr(), &(_44625_kind), (*(_44525_p))._field_Kind);
										if ((!(_1ece19e70_IsRef((*(_44525_p))._field_Decl.ptr())))) {
											_2096a4e4b_WriteStr(&_44625_kind, jule::Str::lit("*", 1));
										};
										(*(_44525_p))._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(jule::new_ptr<_1bde38792_customType>(_1bde38792_customType{._field_kind=_2096a5743_Str(&_44625_kind)}), 27)});
									}
									_iter_next_1c30427ba:;
									++it;
									goto _iter_begin_1c30427ba;
								}
								_iter_end_1c30427ba:;
							};
						}
						_iter_next_1c304190c:;
						++it;
						goto _iter_begin_1c304190c;
					}
					_iter_end_1c304190c:;
				};
			}
			_iter_next_1c30402e0:;
			++it;
			goto _iter_begin_1c30402e0;
		}
		_iter_end_1c30402e0:;
	};
}



inline void _1bde2c654_prepareStructures(jule::Ptr<_1bde29145_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3042e19:;
		if (it != expr_end) {
			jule::Ptr<_1bc5bb333_Struct> _46221_s = *it;
			{
				if (((*(_46221_s))._field_Token != nullptr)) {
					_1bde2c456_prepareStructure(_self_.ptr(), &(_46221_s));
				};
			}
			_iter_next_1c3042e19:;
			++it;
			goto _iter_begin_1c3042e19;
		}
		_iter_end_1c3042e19:;
	};
}



inline void _1bde2c90c_iterPackages(jule::Ptr<_1bde29145_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_1bc766d2a_Package>*)> _46932_f) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3045e94:;
		if (it != expr_end) {
			jule::Ptr<_1bc763e04_ImportInfo> _47021_used = *it;
			{
				if ((!((*(_47021_used))._field_Binded))) {
					_46932_f(&((*(_47021_used))._field_Package));
				};
			}
			_iter_next_1c3045e94:;
			++it;
			goto _iter_begin_1c3045e94;
		}
		_iter_end_1c3045e94:;
	};
	_46932_f(&((*((*(_self_))._field_ir))._field_Main));
}



inline void _1bde2cb0a_buildTraitMap(jule::Ptr<_1bde29145_ObjectCoder> _self_) {
	_1bde2c90c_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1bc766d2a_Package>*)>([=](jule::Ptr<_1bc766d2a_Package>* _47935_pkg) mutable -> void {
		_1bde36383_iterFiles(_47935_pkg, jule::Fn<void(jule::Ptr<_1bc80a50b_SymbolTable>*)>([=](jule::Ptr<_1bc80a50b_SymbolTable>* _48036_file) mutable -> void {
			{
				auto expr = &((*((*(_48036_file))))._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1c304a4d7:;
				if (it != expr_end) {
					jule::Ptr<_1bc713a41_Trait> _48129_t = *it;
					{
						if (((*(_48129_t))._field_Token == nullptr)) {
							return;;
						};
						if (((*(_48129_t))._field_Implemented.len() == 0LL)) {
							jule::Ptr<_1bde27c04_traitHash> _48629_hash = jule::new_ptr<_1bde27c04_traitHash>(_1bde27c04_traitHash{._field_t=_48129_t, ._field_s=nullptr, ._field_i=0LL});;
							_2096a4489_StrBuilder _49129_b = static__2096a48da_New(static_cast<jule::I64>((*(_48129_t))._field_Ident.len()));;
							static__1bcbca49c_writeIdentTo(&(_49129_b), &((*(_48129_t))._field_Ident));
							(*(_48629_hash))._field_ti=_2096a5743_Str(&_49129_b);
							{ jule::Slice<jule::Ptr<_1bde27c04_traitHash>> &__jule_push_dest = (*(_self_))._field_tmap; __jule_push_dest.push(_48629_hash); };
							goto _iter_next_1c304a4d7;
						};
						jule::I64 _49725_i = 0LL;;
						{
							auto expr = &((*(_48129_t))._field_Implemented);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1c304ae00:;
							if (it != expr_end) {
								jule::Ptr<_1bc5bb333_Struct> _49833_s = *it;
								{
									{
										auto expr = &((*(_49833_s))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1c304e9a3:;
										if (it != expr_end) {
											jule::Ptr<_1bc5be0b1_StructIns> _49937_ins = *it;
											{
												jule::Ptr<_1bde27c04_traitHash> _50033_hash = jule::new_ptr<_1bde27c04_traitHash>(_1bde27c04_traitHash{._field_t=_48129_t, ._field_s=_49937_ins, ._field_i=_49725_i});;
												_2096a4489_StrBuilder _50533_b = static__2096a48da_New(static_cast<jule::I64>((*(_48129_t))._field_Ident.len()));;
												static__1bcbca49c_writeIdentTo(&(_50533_b), &((*(_48129_t))._field_Ident));
												(*(_50033_hash))._field_ti=_2096a5743_Str(&_50533_b);
												{ jule::Slice<jule::Ptr<_1bde27c04_traitHash>> &__jule_push_dest = (*(_self_))._field_tmap; __jule_push_dest.push(_50033_hash); };
												(_49725_i)++;
											}
											_iter_next_1c304e9a3:;
											++it;
											goto _iter_begin_1c304e9a3;
										}
										_iter_end_1c304e9a3:;
									};
								}
								_iter_next_1c304ae00:;
								++it;
								goto _iter_begin_1c304ae00;
							}
							_iter_end_1c304ae00:;
						};
						_1bde37131_pushMethodsFromInherits(&(_48129_t), &(_48129_t));
					}
					_iter_next_1c304a4d7:;
					++it;
					goto _iter_begin_1c304a4d7;
				}
				_iter_end_1c304a4d7:;
			};
		}));
	}));
}



inline void _1bde2cd08_traitDecls(jule::Ptr<_1bde29145_ObjectCoder> _self_) {
	_1bde2c90c_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1bc766d2a_Package>*)>([=](jule::Ptr<_1bc766d2a_Package>* _52135_pkg) mutable -> void {
		_1bde36383_iterFiles(_52135_pkg, jule::Fn<void(jule::Ptr<_1bc80a50b_SymbolTable>*)>([=](jule::Ptr<_1bc80a50b_SymbolTable>* _52236_file) mutable -> void {
			{
				auto expr = &((*((*(_52236_file))))._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1c30536bb:;
				if (it != expr_end) {
					jule::Ptr<_1bc713a41_Trait> _52329_t = *it;
					{
						if (((*(_52329_t))._field_Token == nullptr)) {
							return;;
						};
						_1bde2a19b_indent(_self_);
						_1bde297e9_write(_self_, jule::Str::lit("struct ", 7));
						static__1bcbcb657_traitDecl(&((*(_self_))._field_Buf), _52329_t);
						_1bde297e9_write(_self_, jule::Str::lit("{};\n", 4));
					}
					_iter_next_1c30536bb:;
					++it;
					goto _iter_begin_1c30536bb;
				}
				_iter_end_1c30536bb:;
			};
		}));
	}));
}



inline void _1bde2d0b1_structurePlainDecl(jule::Ptr<_1bde29145_ObjectCoder> _self_, jule::Ptr<_1bc5bb333_Struct>* _53643_s) {
	{
		auto expr = &((*((*(_53643_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c304ad12:;
		if (it != expr_end) {
			jule::Ptr<_1bc5be0b1_StructIns> _53721_ins = *it;
			{
				_1bde297e9_write(_self_, jule::Str::lit("struct ", 7));
				static__1bcbcc01a_structureIns(&((*(_self_))._field_Buf), &(_53721_ins));
				_1bde297e9_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1c304ad12:;
			++it;
			goto _iter_begin_1c304ad12;
		}
		_iter_end_1c304ad12:;
	};
}



inline void _1bde2d2ae_structurePlainDecls(jule::Ptr<_1bde29145_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3055976:;
		if (it != expr_end) {
			jule::Ptr<_1bc5bb333_Struct> _54521_s = *it;
			{
				if (((*(_54521_s))._field_Token != nullptr)) {
					_1bde2d0b1_structurePlainDecl(_self_, &(_54521_s));
				};
			}
			_iter_next_1c3055976:;
			++it;
			goto _iter_begin_1c3055976;
		}
		_iter_end_1c3055976:;
	};
}



inline void _1bde2d567_fieldDecl(jule::Ptr<_1bde29145_ObjectCoder> _self_, jule::Ptr<_1bc5bd511_FieldIns>* _55234_f) {
	_1bde3ec71_kind((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Buf), (*((*(_55234_f))))._field_Kind);
	_1bde297e9_write(_self_, jule::Str::lit(" ", 1));
	static__1bcbcc306_field(&((*(_self_))._field_Buf), &((*((*(_55234_f))))._field_Decl));
	if (((*((*(_55234_f))))._field_Default == nullptr)) {
		if (_1bde4720c_shouldInitialized(&((*((*(_55234_f))))._field_Kind))) {
			_1bde297e9_write(_self_, jule::Str::lit(" = ", 3));
			_1bcbc3ece_initExpr((*(_self_))._field_ec, (*((*(_55234_f))))._field_Kind);
		};
	} else {
		_1bde297e9_write(_self_, jule::Str::lit(" = ", 3));
		_1bcbb9c0b_possibleRefExpr((*(_self_))._field_ec, (*((*((*(_55234_f))))._field_Default))._field_Model);
	};
	_1bde297e9_write(_self_, jule::Str::lit(";", 1));
}



inline void _1bde2d820_structureDestructor(jule::Ptr<_1bde29145_ObjectCoder> _self_, jule::Ptr<_1bc5be0b1_StructIns>* _57044_s) {
	;
	jule::Ptr<_1ece1b092_Fn> _5739_disposeMethod = _1bc5c0128_FindMethod((*(_57044_s)).ptr(), jule::Str::lit("Dispose", 7), false);;
	jule::Bool _57413_disposed = static__1bc7a8960_Dispose(_5739_disposeMethod);;
	if ((!(_57413_disposed))) {
		return;;
	};
	_1bde297e9_write(_self_, jule::Str::lit("~", 1));
	static__1bcbcc01a_structureIns(&((*(_self_))._field_Buf), _57044_s);
	_1bde297e9_write(_self_, jule::Str::lit("(void) { ", 9));
	static__1bcbcb080_func(&((*(_self_))._field_Buf), &(_5739_disposeMethod));
	_1bde297e9_write(_self_, jule::Str::lit("(this); }", 9));
}



inline void _1bde2db83_structureOperatorEq(jule::Ptr<_1bde29145_ObjectCoder> _self_, jule::Slice<jule::U8> _58639_ident, jule::Ptr<_1bc5be0b1_StructIns>* _58659_s) {
	if ((!((*((*(_58659_s))))._field_Comparable))) {
		return;;
	};
	if (((*((*(_58659_s))))._field_Operators._field_Eq != nullptr)) {
		_1bde2e414_structureOperator(_self_, _58639_ident, &((*((*(_58659_s))))._field_Operators._field_Eq), jule::Str::lit("==", 2));
		return;;
	};
	_1bde2a19b_indent(_self_);
	if (_1bc9d7b17_Inline) {
		_1bde297e9_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1bde297e9_write(_self_, jule::Str::lit("bool operator==(", 16));
	_1bde29aa2_writeBytes(_self_, _58639_ident);
	_1bde297e9_write(_self_, jule::Str::lit(" _other) {", 10));
	if (((*((*(_58659_s))))._field_Fields.len() > 0LL)) {
		_1bde29ca0_addIndent(_self_);
		_1bde297e9_write(_self_, jule::Str::lit("\n", 1));
		_1bde2a19b_indent(_self_);
		_1bde297e9_write(_self_, jule::Str::lit("return ", 7));
		_1bde29ca0_addIndent(_self_);
		jule::Bool _60917_writed = false;;
		{
			auto expr = &((*((*(_58659_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c3064765:;
			if (it != expr_end) {
				jule::Ptr<_1bc5bd511_FieldIns> _61025_f = *it;
				{
					jule::Ptr<_1bc5be0b1_StructIns> _61217_strct = _1bc844d92_Struct((*(_61025_f))._field_Kind.ptr());;
					if ((((_61217_strct != nullptr) && ((*(_61217_strct))._field_Decl != nullptr)) && (*((*(_61217_strct))._field_Decl))._field_Binded)) {
						goto _iter_next_1c3064765;
					};
					if (_60917_writed) {
						_1bde297e9_write(_self_, jule::Str::lit(" &&", 3));
					};
					_60917_writed=true;
					_1bde297e9_write(_self_, jule::Str::lit("\n", 1));
					_1bde2a19b_indent(_self_);
					_1bde297e9_write(_self_, jule::Str::lit("this->", 6));
					_2096a4489_StrBuilder _62321_fIdent = static__2096a48da_New(static_cast<jule::I64>((*((*(_61025_f))._field_Decl))._field_Ident.len()));;
					static__1bcbcc306_field(&(_62321_fIdent), &((*(_61025_f))._field_Decl));
					_1bde29aa2_writeBytes(_self_, _2096a61e4_Buf(&_62321_fIdent));
					_1bde297e9_write(_self_, jule::Str::lit(" == _other.", 11));
					_1bde29aa2_writeBytes(_self_, _2096a61e4_Buf(&_62321_fIdent));
				}
				_iter_next_1c3064765:;
				++it;
				goto _iter_begin_1c3064765;
			}
			_iter_end_1c3064765:;
		};
		_1bde29e9d_doneIndent(_self_);
		if ((!(_60917_writed))) {
			_1bde297e9_write(_self_, jule::Str::lit("true", 4));
		};
		_1bde297e9_write(_self_, jule::Str::lit(";\n", 2));
		_1bde29e9d_doneIndent(_self_);
		_1bde2a19b_indent(_self_);
		_1bde297e9_write(_self_, jule::Str::lit("}", 1));
	} else {
		_1bde297e9_write(_self_, jule::Str::lit(" return true; }", 15));
	};
	_1bde297e9_write(_self_, jule::Str::lit("\n\n", 2));
}



inline void _1bde2dee6_structureOperatorNotEq(jule::Ptr<_1bde29145_ObjectCoder> _self_, jule::Slice<jule::U8> _64342_ident, jule::Ptr<_1bc5be0b1_StructIns>* _64362_s) {
	if ((!((*((*(_64362_s))))._field_Comparable))) {
		return;;
	};
	_1bde2a19b_indent(_self_);
	if (_1bc9d7b17_Inline) {
		_1bde297e9_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1bde297e9_write(_self_, jule::Str::lit("bool operator!=(", 16));
	_1bde29aa2_writeBytes(_self_, _64342_ident);
	_1bde297e9_write(_self_, jule::Str::lit(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1bde2e414_structureOperator(jule::Ptr<_1bde29145_ObjectCoder> _self_, jule::Slice<jule::U8> _65737_ident, jule::Ptr<_1ece1de96_FnIns>* _65757_f, jule::Str _65768_op) {
	if (((*(_65757_f)) == nullptr)) {
		return;;
	};
	jule::Bool _6629_unary = ((*((*(_65757_f))))._field_Params.len() == 1LL);;
	jule::Bool _6639_assignment = _1ece1b515_IsVoid((*((*(_65757_f))))._field_Decl.ptr());;
	_1bde2a19b_indent(_self_);
	if (_1bc9d7b17_Inline) {
		_1bde297e9_write(_self_, jule::Str::lit("inline ", 7));
	};
	if (_6639_assignment) {
		_1bde29aa2_writeBytes(_self_, _65737_ident);
		_1bde297e9_write(_self_, jule::Str::lit("&", 1));
	} else {
		if ((_1bc84381e_Prim((*((*(_65757_f))))._field_Result.ptr()) == nullptr)) {
			_1bde29aa2_writeBytes(_self_, _65737_ident);
		} else {
			_1bde297e9_write(_self_, jule::Str::lit("jule::Bool", 10));
		};
	};
	_1bde297e9_write(_self_, jule::Str::lit(" operator", 9));
	_1bde297e9_write(_self_, _65768_op);
	_1bde297e9_write(_self_, jule::Str::lit("(", 1));
	if ((!(_6629_unary))) {
		jule::Ptr<_1ece1ceea_ParamIns> _68517_p = (*((*(_65757_f))))._field_Params[1LL];;
		_1bde3da61_paramIns((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Buf), &(_68517_p));
		_1bde297e9_write(_self_, jule::Str::lit(" _other", 7));
	};
	_1bde297e9_write(_self_, jule::Str::lit(") { ", 4));
	if ((!(_6639_assignment))) {
		_1bde297e9_write(_self_, jule::Str::lit("return ", 7));
	};
	static__1bcbcb36b_funcIns(&((*(_self_))._field_Buf), _65757_f);
	if ((!(_6629_unary))) {
		_1bde297e9_write(_self_, jule::Str::lit("(this, _other); ", 16));
		if (_6639_assignment) {
			_1bde297e9_write(_self_, jule::Str::lit("return *this; ", 14));
		};
		_1bde297e9_write(_self_, jule::Str::lit("}", 1));
	} else {
		_1bde297e9_write(_self_, jule::Str::lit("(this); }", 9));
	};
	_1bde297e9_write(_self_, jule::Str::lit("\n\n", 2));
}



inline void _1bde2e6bc_structureOperators(jule::Ptr<_1bde29145_ObjectCoder> _self_, jule::Ptr<_1bc5be0b1_StructIns>* _70643_s) {
	_2096a4489_StrBuilder _70713_sb = static__2096a48da_New(40LL);;
	static__1bcbcc01a_structureIns(&(_70713_sb), _70643_s);
	jule::Slice<jule::U8> _7099_ident = _2096a61e4_Buf(&_70713_sb);;
	_1bde2db83_structureOperatorEq(_self_, _7099_ident, _70643_s);
	_1bde2dee6_structureOperatorNotEq(_self_, _7099_ident, _70643_s);
	_1bde2e414_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Gt), jule::Str::lit(">", 1));
	_1bde2e414_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_GtEq), jule::Str::lit(">=", 2));
	_1bde2e414_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Lt), jule::Str::lit("<", 1));
	_1bde2e414_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_LtEq), jule::Str::lit("<=", 2));
	_1bde2e414_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Shl), jule::Str::lit("<<", 2));
	_1bde2e414_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Shr), jule::Str::lit(">>", 2));
	_1bde2e414_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Add), jule::Str::lit("+", 1));
	_1bde2e414_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Sub), jule::Str::lit("-", 1));
	_1bde2e414_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Div), jule::Str::lit("/", 1));
	_1bde2e414_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Mul), jule::Str::lit("*", 1));
	_1bde2e414_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Mod), jule::Str::lit("%", 1));
	_1bde2e414_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_BitAnd), jule::Str::lit("&", 1));
	_1bde2e414_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_BitOr), jule::Str::lit("|", 1));
	_1bde2e414_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_BitXor), jule::Str::lit("^", 1));
	_1bde2e414_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Neg), jule::Str::lit("-", 1));
	_1bde2e414_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Pos), jule::Str::lit("+", 1));
	_1bde2e414_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_BitNot), jule::Str::lit("~", 1));
	_1bde2e414_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_AddAssign), jule::Str::lit("+=", 2));
	_1bde2e414_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_SubAssign), jule::Str::lit("-=", 2));
	_1bde2e414_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_DivAssign), jule::Str::lit("/=", 2));
	_1bde2e414_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_MulAssign), jule::Str::lit("*=", 2));
	_1bde2e414_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_ModAssign), jule::Str::lit("%=", 2));
	_1bde2e414_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_ShlAssign), jule::Str::lit("<<=", 3));
	_1bde2e414_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_ShrAssign), jule::Str::lit(">>=", 3));
	_1bde2e414_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_BitOrAssign), jule::Str::lit("|=", 2));
	_1bde2e414_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_BitAndAssign), jule::Str::lit("&=", 2));
	_1bde2e414_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_BitXorAssign), jule::Str::lit("^=", 2));
}



inline void _1bde2e975_structureInsDecl(jule::Ptr<_1bde29145_ObjectCoder> _self_, jule::Ptr<_1bc5be0b1_StructIns>* _74741_s) {
	{
		auto expr = &((*((*(_74741_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3087711:;
		if (it != expr_end) {
			jule::Ptr<_1ece1b092_Fn> _74821_m = *it;
			{
				if (_1bde376b4_isHeadDecl(&(_74821_m))) {
					_1bde30e1b_funcDecl(_self_, &(_74821_m), false);
				};
			}
			_iter_next_1c3087711:;
			++it;
			goto _iter_begin_1c3087711;
		}
		_iter_end_1c3087711:;
	};
	_1bde297e9_write(_self_, jule::Str::lit("struct ", 7));
	static__1bcbcc01a_structureIns(&((*(_self_))._field_Buf), _74741_s);
	_1bde297e9_write(_self_, jule::Str::lit(" {\n", 3));
	_1bde29ca0_addIndent(_self_);
	{
		auto expr = &((*((*(_74741_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c308806e:;
		if (it != expr_end) {
			jule::Ptr<_1bc5bd511_FieldIns> _75921_f = *it;
			{
				_1bde2a19b_indent(_self_);
				_1bde2d567_fieldDecl(_self_, &(_75921_f));
				_1bde297e9_write(_self_, jule::Str::lit("\n", 1));
			}
			_iter_next_1c308806e:;
			++it;
			goto _iter_begin_1c308806e;
		}
		_iter_end_1c308806e:;
	};
	_1bde2a19b_indent(_self_);
	_1bde2d820_structureDestructor(_self_, _74741_s);
	_1bde297e9_write(_self_, jule::Str::lit("\n\n", 2));
	_1bde2e6bc_structureOperators(_self_, _74741_s);
	_1bde297e9_write(_self_, jule::Str::lit("\n", 1));
	_1bde29e9d_doneIndent(_self_);
	_1bde2a19b_indent(_self_);
	_1bde297e9_write(_self_, jule::Str::lit("};", 2));
}



inline void _1bde2ec2d_structureDecl(jule::Ptr<_1bde29145_ObjectCoder> _self_, jule::Ptr<_1bc5bb333_Struct>* _77738_s) {
	{
		auto expr = &((*((*(_77738_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c308ccbb:;
		if (it != expr_end) {
			jule::Ptr<_1bc5be0b1_StructIns> _77821_ins = *it;
			{
				_1bde2e975_structureInsDecl(_self_, &(_77821_ins));
			}
			_iter_next_1c308ccbb:;
			++it;
			goto _iter_begin_1c308ccbb;
		}
		_iter_end_1c308ccbb:;
	};
}



inline void _1bde2ee2b_structureDecls(jule::Ptr<_1bde29145_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c308d66d:;
		if (it != expr_end) {
			jule::Ptr<_1bc5bb333_Struct> _78421_s = *it;
			{
				if (((*(_78421_s))._field_Token != nullptr)) {
					_1bde2ec2d_structureDecl(_self_, &(_78421_s));
					_1bde297e9_write(_self_, jule::Str::lit("\n", 1));
				};
			}
			_iter_next_1c308d66d:;
			++it;
			goto _iter_begin_1c308d66d;
		}
		_iter_end_1c308d66d:;
	};
}



inline void _1bde30129_structureMethodDecls(jule::Ptr<_1bde29145_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c308e5c5:;
		if (it != expr_end) {
			jule::Ptr<_1bc5bb333_Struct> _79321_s = *it;
			{
				if (((*(_79321_s))._field_Token != nullptr)) {
					{
						auto expr = &((*(_79321_s))._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c309161b:;
						if (it != expr_end) {
							jule::Ptr<_1bc5be0b1_StructIns> _79529_ins = *it;
							{
								{
									auto expr = &((*(_79529_ins))._field_Methods);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1c3092067:;
									if (it != expr_end) {
										jule::Ptr<_1ece1b092_Fn> _79633_m = *it;
										{
											if ((!(_1bde376b4_isHeadDecl(&(_79633_m))))) {
												_1bde2ad8e_pushResult(_self_, &(_79633_m));
												_1bde30e1b_funcDecl(_self_, &(_79633_m), false);
											};
										}
										_iter_next_1c3092067:;
										++it;
										goto _iter_begin_1c3092067;
									}
									_iter_end_1c3092067:;
								};
							}
							_iter_next_1c309161b:;
							++it;
							goto _iter_begin_1c309161b;
						}
						_iter_end_1c309161b:;
					};
				};
			}
			_iter_next_1c308e5c5:;
			++it;
			goto _iter_begin_1c308e5c5;
		}
		_iter_end_1c308e5c5:;
	};
}



inline void _1bde303d2_paramsDecls(jule::Ptr<_1bde29145_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1ece1ceea_ParamIns>>* _80836_params) {
	if (((*(_80836_params)).len() == 0LL)) {
		_1bde297e9_write(_self_, jule::Str::lit("(void)", 6));
		return;;
	};
	_1bde297e9_write(_self_, jule::Str::lit("(", 1));
	{
		auto expr = _80836_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3091d8b:;
		if (it != expr_end) {
			jule::I64 _81514_i = it - expr->begin();
			jule::Ptr<_1ece1ceea_ParamIns> _81521_p = *it;
			{
				_1bde3da61_paramIns((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Buf), &(_81521_p));
				if ((((*(_80836_params)).len() - _81514_i) > 1LL)) {
					_1bde297e9_write(_self_, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1c3091d8b:;
			++it;
			_81514_i++;
			goto _iter_begin_1c3091d8b;
		}
		_iter_end_1c3091d8b:;
	};
	_1bde297e9_write(_self_, jule::Str::lit(")", 1));
}



inline void _1bde30745_funcHead(jule::Ptr<_1bde29145_ObjectCoder> _self_, jule::Ptr<_1ece1de96_FnIns>* _82533_f, jule::Bool _82544_ptr) {
	if ((((!(_82544_ptr)) && _1bc9d7b17_Inline) && (!(_1ece1ba32_IsEntryPoint((*((*(_82533_f))))._field_Decl.ptr()))))) {
		_1bde297e9_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1bde3e237_funcInsResult((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Buf), _82533_f);
	if (_82544_ptr) {
		_1bde297e9_write(_self_, jule::Str::lit("(*", 2));
		static__1bcbcb36b_funcIns(&((*(_self_))._field_Buf), _82533_f);
		_1bde297e9_write(_self_, jule::Str::lit(")", 1));
	} else {
		_1bde297e9_write(_self_, jule::Str::lit(" ", 1));
		static__1bcbcb36b_funcIns(&((*(_self_))._field_Buf), _82533_f);
	};
}



inline void _1bde30aa8_funcDeclIns(jule::Ptr<_1bde29145_ObjectCoder> _self_, jule::Ptr<_1ece1de96_FnIns>* _84036_f, jule::Bool _84047_ptr) {
	_1bde2a19b_indent(_self_);
	_1bde30745_funcHead(_self_, _84036_f, _84047_ptr);
	_1bde303d2_paramsDecls(_self_, &((*((*(_84036_f))))._field_Params));
	_1bde297e9_write(_self_, jule::Str::lit(";\n", 2));
}



inline void _1bde30e1b_funcDecl(jule::Ptr<_1bde29145_ObjectCoder> _self_, jule::Ptr<_1ece1b092_Fn>* _84733_f, jule::Bool _84741_ptr) {
	{
		auto expr = &((*((*(_84733_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c309b0e8:;
		if (it != expr_end) {
			jule::Ptr<_1ece1de96_FnIns> _84821_c = *it;
			{
				_1bde30aa8_funcDeclIns(_self_, &(_84821_c), _84741_ptr);
			}
			_iter_next_1c309b0e8:;
			++it;
			goto _iter_begin_1c309b0e8;
		}
		_iter_end_1c309b0e8:;
	};
}



inline void _1bde31339_funcDeclTrait(jule::Ptr<_1bde29145_ObjectCoder> _self_, jule::Ptr<_1bc713a41_Trait>* _85338_t, jule::Ptr<_1ece1b092_Fn>* _85354_f, jule::Bool _85362_ptr) {
	{
		auto expr = &((*((*(_85354_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c309c47e:;
		if (it != expr_end) {
			jule::Ptr<_1ece1de96_FnIns> _85421_c = *it;
			{
				jule::Ptr<_1bc8411bd_TypeKind> _85517_k = (*((*(_85421_c))._field_Params[0LL]))._field_Kind;;
				(*((*(_85421_c))._field_Params[0LL]))._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>((*(_85338_t)), 2)});
				_1bde30aa8_funcDeclIns(_self_, &(_85421_c), _85362_ptr);
				(*((*(_85421_c))._field_Params[0LL]))._field_Kind=_85517_k;
			}
			_iter_next_1c309c47e:;
			++it;
			goto _iter_begin_1c309c47e;
		}
		_iter_end_1c309c47e:;
	};
}



inline void _1bde31537_funcDecls(jule::Ptr<_1bde29145_ObjectCoder> _self_) {
	_1bde2c90c_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1bc766d2a_Package>*)>([=](jule::Ptr<_1bc766d2a_Package>* _86335_pkg) mutable -> void {
		_1bde36383_iterFiles(_86335_pkg, jule::Fn<void(jule::Ptr<_1bc80a50b_SymbolTable>*)>([=](jule::Ptr<_1bc80a50b_SymbolTable>* _86436_file) mutable -> void {
			{
				auto expr = &((*((*(_86436_file))))._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1c30a1b48:;
				if (it != expr_end) {
					jule::Ptr<_1ece1b092_Fn> _86529_f = *it;
					{
						if (((!((*(_86529_f))._field_Binded)) && ((*(_86529_f))._field_Token != nullptr))) {
							_1bde2ad8e_pushResult(_self_, &(_86529_f));
							_1bde30e1b_funcDecl(_self_, &(_86529_f), false);
						};
					}
					_iter_next_1c30a1b48:;
					++it;
					goto _iter_begin_1c30a1b48;
				}
				_iter_end_1c30a1b48:;
			};
		}));
	}));
}



inline void _1bde3189a_traitDataTypeMethods(jule::Ptr<_1bde29145_ObjectCoder> _self_, jule::Ptr<_1bc713a41_Trait>* _87545_owner, jule::Ptr<_1bc713a41_Trait>* _87565_t) {
	{
		auto expr = &((*((*(_87565_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c30a17e6:;
		if (it != expr_end) {
			jule::Ptr<_1ece1b092_Fn> _87621_m = *it;
			{
				jule::Ptr<_1ece1de96_FnIns> _87717_ins = (*(_87621_m))._field_Instances[0LL];;
				jule::Ptr<_1ece1ceea_ParamIns> _87817_p = (*(_87717_ins))._field_Params[0LL];;
				(*(_87817_p))._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>((*(_87565_t)), 2)});
				{
					auto expr = (*(_87717_ins))._field_Params.slice(1LL);
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_1c30a55db:;
					if (it != expr_end) {
						jule::I64 _88218_i = it - expr.begin();
						jule::Ptr<_1ece1ceea_ParamIns> _88225_ip = *it;
						{
							if (_1bc5867c6_IsAnonIdent((*((*(_88225_ip))._field_Decl))._field_Ident)) {
								(*((*(_88225_ip))._field_Decl))._field_Ident=(jule::Str::lit("_", 1) + _230d4a1d0_Itoa(_88218_i));
							};
						}
						_iter_next_1c30a55db:;
						++it;
						_88218_i++;
						goto _iter_begin_1c30a55db;
					}
					_iter_end_1c30a55db:;
				};
				if ((!(_23b84b1c0_Production))) {
					jule::Ptr<_1ece1ceea_ParamIns> _88821_lp = (*(_87717_ins))._field_Params[((*(_87717_ins))._field_Params.len() - 1LL)];;
					{
						auto &_match_expr{ (*((*(_88821_lp))._field_Kind))._field_Kind };
						
						if (_match_expr.type_is(true, 27)) {
							_case_begin_1c30a9d60:;
							{
								goto _match_end_1c30a8138;
							}
						}
						else {
							_case_begin_1c30a818d:;
							{
								{ jule::Slice<jule::Ptr<_1ece1ceea_ParamIns>> &__jule_push_dest = (*(_87717_ins))._field_Params; __jule_push_dest.push(jule::new_ptr<_1ece1ceea_ParamIns>(_1ece1ceea_ParamIns{._field_Decl=jule::new_ptr<_1ece195bd_Param>(_1ece195bd_Param{._field_Ident=jule::Str::lit("__file", 6)}), ._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(jule::new_ptr<_1bde38792_customType>(_1bde38792_customType{._field_kind=jule::Str::lit("const char*", 11)}), 27)})})); };
							}
						}
						_match_end_1c30a8138:;
					};
				};
				_1bde2ad8e_pushResult(_self_, &(_87621_m));
				_1bde31339_funcDeclTrait(_self_, _87545_owner, &(_87621_m), true);
			}
			_iter_next_1c30a17e6:;
			++it;
			goto _iter_begin_1c30a17e6;
		}
		_iter_end_1c30a17e6:;
	};
}



inline void _1bde31a98_traitDataTypes(jule::Ptr<_1bde29145_ObjectCoder> _self_) {
	_1bde2c90c_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1bc766d2a_Package>*)>([=](jule::Ptr<_1bc766d2a_Package>* _91135_pkg) mutable -> void {
		_1bde36383_iterFiles(_91135_pkg, jule::Fn<void(jule::Ptr<_1bc80a50b_SymbolTable>*)>([=](jule::Ptr<_1bc80a50b_SymbolTable>* _91236_file) mutable -> void {
			{
				auto expr = &((*((*(_91236_file))))._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1c30abcda:;
				if (it != expr_end) {
					jule::Ptr<_1bc713a41_Trait> _91329_t = *it;
					{
						if (((*(_91329_t))._field_Token == nullptr)) {
							return;;
						};
						if (((*(_91329_t))._field_Methods.len() == 0LL)) {
							goto _iter_next_1c30abcda;
						};
						_1bde297e9_write(_self_, jule::Str::lit("struct ", 7));
						static__1bcbcb657_traitDecl(&((*(_self_))._field_Buf), _91329_t);
						_1bde297e9_write(_self_, jule::Str::lit("MptrData", 8));
						_1bde297e9_write(_self_, jule::Str::lit(" {\n", 3));
						_1bde29ca0_addIndent(_self_);
						_1bde3189a_traitDataTypeMethods(_self_, &(_91329_t), &(_91329_t));
						_1bde29e9d_doneIndent(_self_);
						_1bde2a19b_indent(_self_);
						_1bde297e9_write(_self_, jule::Str::lit("};\n\n", 4));
					}
					_iter_next_1c30abcda:;
					++it;
					goto _iter_begin_1c30abcda;
				}
				_iter_end_1c30abcda:;
			};
		}));
	}));
}



inline void _1bde31d51_paramIns(jule::Ptr<_1bde29145_ObjectCoder> _self_, jule::Ptr<_1ece1ceea_ParamIns>* _93433_p) {
	_1bde3da61_paramIns((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Buf), _93433_p);
	_1bde297e9_write(_self_, jule::Str::lit(" ", 1));
	static__1bcbcb943_param(&((*(_self_))._field_Buf), &((*((*(_93433_p))))._field_Decl));
}



inline void _1bde32109_paramsIns(jule::Ptr<_1bde29145_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1ece1ceea_ParamIns>>* _94034_params) {
	if (((*(_94034_params)).len() == 0LL)) {
		_1bde297e9_write(_self_, jule::Str::lit("(void)", 6));
		return;;
	};
	_1bde297e9_write(_self_, jule::Str::lit("(", 1));
	{
		auto expr = _94034_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c30b1ae2:;
		if (it != expr_end) {
			jule::I64 _94614_i = it - expr->begin();
			jule::Ptr<_1ece1ceea_ParamIns> _94621_p = *it;
			{
				_1bde31d51_paramIns(_self_, &(_94621_p));
				if ((((*(_94034_params)).len() - _94614_i) > 1LL)) {
					_1bde297e9_write(_self_, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1c30b1ae2:;
			++it;
			_94614_i++;
			goto _iter_begin_1c30b1ae2;
		}
		_iter_end_1c30b1ae2:;
	};
	_1bde297e9_write(_self_, jule::Str::lit(")", 1));
}



inline void _1bde3246c_varInitExpr(jule::Ptr<_1bde29145_ObjectCoder> _self_, jule::Ptr<_1bc7a750d_Var>* _95536_v, jule::Fn<void(void)> _95545_init) {
	if ((*((*(_95536_v))))._field_Statically) {
		_1bde297e9_write(_self_, jule::Str::lit("static ", 7));
	};
	_1bde3ec71_kind((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Buf), (*((*((*(_95536_v))))._field_Kind))._field_Kind);
	_1bde297e9_write(_self_, jule::Str::lit(" ", 1));
	if ((*((*(_95536_v))))._field_Reference) {
		_1bde297e9_write(_self_, jule::Str::lit("*", 1));
	};
	static__1bcbcc5e2_var(&((*(_self_))._field_Buf), (*(_95536_v)));
	if ((_95545_init != nullptr)) {
		_1bde297e9_write(_self_, jule::Str::lit(" = ", 3));
		_95545_init();
	};
	_1bde297e9_write(_self_, jule::Str::lit(";", 1));
}



inline void _1bde32725_var(jule::Ptr<_1bde29145_ObjectCoder> _self_, jule::Ptr<_1bc7a750d_Var> _97327_v) {
	if (_1bc58650c_IsIgnoreIdent((*(_97327_v))._field_Ident)) {
		return;;
	};
	if ((((*(_97327_v))._field_Value != nullptr) && ((*((*(_97327_v))._field_Value))._field_Expr != nullptr))) {
		if (((*((*((*(_97327_v))._field_Value))._field_Data))._field_Model != nullptr)) {
			if ((*(_97327_v))._field_Reference) {
				_1bde3246c_varInitExpr(_self_, &(_97327_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1bde297e9_write(_self_, jule::Str::lit("&(", 2));
					_1bcbc3c26_model((*(_self_))._field_ec, (*((*((*(_97327_v))._field_Value))._field_Data))._field_Model);
					_1bde297e9_write(_self_, jule::Str::lit(")", 1));
				}));
			} else {
				_1bde3246c_varInitExpr(_self_, &(_97327_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1bcbb9c0b_possibleRefExpr((*(_self_))._field_ec, (*((*((*(_97327_v))._field_Value))._field_Data))._field_Model);
				}));
			};
			return;;
		};
		_1bde3246c_varInitExpr(_self_, &(_97327_v), nullptr);
		return;;
	};
	if ((*(_97327_v))._field_Reference) {
		_1bde3246c_varInitExpr(_self_, &(_97327_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1bde297e9_write(_self_, jule::Str::lit("nullptr", 7));
		}));
		return;;
	};
	if (_1bde4720c_shouldInitialized(&((*((*(_97327_v))._field_Kind))._field_Kind))) {
		_1bde3246c_varInitExpr(_self_, &(_97327_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1bcbc3ece_initExpr((*(_self_))._field_ec, (*((*(_97327_v))._field_Kind))._field_Kind);
		}));
		return;;
	};
	_1bde3246c_varInitExpr(_self_, &(_97327_v), nullptr);
}



inline void _1bde329cd_funcIns(jule::Ptr<_1bde29145_ObjectCoder> _self_, jule::Ptr<_1ece1de96_FnIns>* _100432_f) {
	_1bde30745_funcHead(_self_, _100432_f, false);
	_1bde32109_paramsIns(_self_, &((*((*(_100432_f))))._field_Params));
	_1bde297e9_write(_self_, jule::Str::lit(" ", 1));
	_1bcbb392a_funcScope((*(_self_))._field_sc, (*(_100432_f)));
	if (((*((*(_100432_f))))._field_Scope != nullptr)) {
		_1bde297e9_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1bde32c86_func(jule::Ptr<_1bde29145_ObjectCoder> _self_, jule::Ptr<_1ece1b092_Fn>* _101429_f) {
	{
		auto expr = &((*((*(_101429_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c30c3a9e:;
		if (it != expr_end) {
			jule::Ptr<_1ece1de96_FnIns> _101521_ins = *it;
			{
				_1bde329cd_funcIns(_self_, &(_101521_ins));
			}
			_iter_next_1c30c3a9e:;
			++it;
			goto _iter_begin_1c30c3a9e;
		}
		_iter_end_1c30c3a9e:;
	};
}



inline void _1bde330e9_funcTrait(jule::Ptr<_1bde29145_ObjectCoder> _self_, jule::Ptr<_1bde27c04_traitHash>* _102034_hash, jule::Ptr<_1ece1b092_Fn>* _102057_f) {
	jule::Str _10219_ident = (*((*(_102057_f))))._field_Ident;;
	{
		auto expr = &((*((*(_102057_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c30c5342:;
		if (it != expr_end) {
			jule::Ptr<_1ece1de96_FnIns> _102221_ins = *it;
			{
				(*(_102221_ins))._field_Scope=nullptr;
				_2096a4489_StrBuilder _102517_s = static__2096a48da_New(static_cast<jule::I64>((((((*((*(_102057_f))))._field_Ident.len() + _10219_ident.len()) + (*((*(_102034_hash))))._field_ti.len()) + 2LL) + 4LLU)));;
				_2096a4e4b_WriteStr(&_102517_s, _10219_ident);
				_2096a5204_WriteByte(&_102517_s, '_');
				_2096a4e4b_WriteStr(&_102517_s, (*((*(_102034_hash))))._field_ti);
				_2096a5204_WriteByte(&_102517_s, '_');
				_2096a4e4b_WriteStr(&_102517_s, _230d4a1d0_Itoa((*((*(_102034_hash))))._field_i));
				(*((*(_102057_f))))._field_Ident=_2096a5743_Str(&_102517_s);
				jule::Ptr<_1bc8411bd_TypeKind> _103417_k = (*((*(_102221_ins))._field_Params[0LL]))._field_Kind;;
				(*((*(_102221_ins))._field_Params[0LL]))._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>((*((*(_102034_hash))))._field_t, 2)});
				_1bde329cd_funcIns(_self_, &(_102221_ins));
				(*((*(_102221_ins))._field_Params[0LL]))._field_Kind=_103417_k;
			}
			_iter_next_1c30c5342:;
			++it;
			goto _iter_begin_1c30c5342;
		}
		_iter_end_1c30c5342:;
	};
	(*((*(_102057_f))))._field_Ident=_10219_ident;
}



inline void _1bde3345c_traitWrapper(jule::Ptr<_1bde29145_ObjectCoder> _self_, jule::Ptr<_1ece1b092_Fn>* _104237_m, jule::Ptr<_1bde27c04_traitHash>* _104250_hash) {
	_1bde330e9_funcTrait(_self_, _104250_hash, _104237_m);
	if (((*((*(_104250_hash))))._field_s == nullptr)) {
		if (_23b84b1c0_Production) {
			_1bde297e9_write(_self_, jule::Str::lit(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
		} else {
			_1bde297e9_write(_self_, jule::Str::lit(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
		};
		return;;
	};
	jule::Bool _10549_ptr = (!(_1ece19e70_IsRef((*((*(_104237_m))))._field_Params[0LL].ptr())));;
	jule::Ptr<_1ece1b092_Fn> _105613_sm = _1bc5c0128_FindMethod((*((*(_104250_hash))))._field_s.ptr(), (*((*(_104237_m))))._field_Ident, false);;
	if (((_105613_sm == nullptr) || ((*(_105613_sm))._field_Instances.len() == 0LL))) {
		return;;
	};
	_1bde29ca0_addIndent(_self_);
	_1bde297e9_write(_self_, jule::Str::lit("{\n", 2));
	_1bde2a19b_indent(_self_);
	if (((*(_105613_sm))._field_Exceptional || (!(_1ece1b515_IsVoid(_105613_sm.ptr()))))) {
		_1bde297e9_write(_self_, jule::Str::lit("return ", 7));
	};
	static__1bcbcb080_func(&((*(_self_))._field_Buf), &(_105613_sm));
	_1bde297e9_write(_self_, jule::Str::lit("(", 1));
	if (_10549_ptr) {
		_1bde297e9_write(_self_, jule::Str::lit("_self_.safe_ptr<", 16));
		_1bde3d027_structureIns((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Buf), (*((*(_104250_hash))))._field_s);
		_1bde297e9_write(_self_, jule::Str::lit(">(", 2));
		if ((!(_23b84b1c0_Production))) {
			_1bde297e9_write(_self_, jule::Str::lit("_00___file", 10));
		};
		_1bde297e9_write(_self_, jule::Str::lit(")", 1));
	} else {
		_1bde297e9_write(_self_, jule::Str::lit("_self_.data.as<", 15));
		_1bde3cbb4_structure((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Buf), (*(_105613_sm))._field_Owner);
		_1bde297e9_write(_self_, jule::Str::lit(">()", 3));
	};
	{
		auto expr = (*((*(_104237_m))))._field_Params.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1c30d18c0:;
		if (it != expr_end) {
			jule::Ptr<_1ece195bd_Param> _108216_mp = *it;
			{
				_1bde297e9_write(_self_, jule::Str::lit(", ", 2));
				static__1bcbcb943_param(&((*(_self_))._field_Buf), &(_108216_mp));
			}
			_iter_next_1c30d18c0:;
			++it;
			goto _iter_begin_1c30d18c0;
		}
		_iter_end_1c30d18c0:;
	};
	_1bde297e9_write(_self_, jule::Str::lit(");\n}\n", 5));
	_1bde29e9d_doneIndent(_self_);
}



inline void _1bde3365a_traitWrappers(jule::Ptr<_1bde29145_ObjectCoder> _self_) {
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c30d64b8:;
		if (it != expr_end) {
			jule::Ptr<_1bde27c04_traitHash> _109121_hash = *it;
			{
				{
					auto expr = &((*((*(_109121_hash))._field_t))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c30d6e14:;
					if (it != expr_end) {
						jule::Ptr<_1ece1b092_Fn> _109225_m = *it;
						{
							_1bde3345c_traitWrapper(_self_, &(_109225_m), &(_109121_hash));
						}
						_iter_next_1c30d6e14:;
						++it;
						goto _iter_begin_1c30d6e14;
					}
					_iter_end_1c30d6e14:;
				};
			}
			_iter_next_1c30d64b8:;
			++it;
			goto _iter_begin_1c30d64b8;
		}
		_iter_end_1c30d64b8:;
	};
}



inline void _1bde339bd_traitDataMethods(jule::Ptr<_1bde29145_ObjectCoder> _self_, jule::Ptr<_1bc713a41_Trait>* _109841_t, jule::Ptr<_1bde27c04_traitHash>* _109853_hash) {
	{
		auto expr = &((*((*(_109841_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c30d8014:;
		if (it != expr_end) {
			jule::Ptr<_1ece1b092_Fn> _109921_m = *it;
			{
				_2096a4489_StrBuilder _110017_mIdent = static__2096a48da_New(static_cast<jule::I64>((*(_109921_m))._field_Ident.len()));;
				static__1bcbcb080_func(&(_110017_mIdent), &(_109921_m));
				_1bde2a19b_indent(_self_);
				_1bde297e9_write(_self_, jule::Str::lit(".", 1));
				_1bde29aa2_writeBytes(_self_, _2096a61e4_Buf(&_110017_mIdent));
				_1bde297e9_write(_self_, jule::Str::lit("=", 1));
				_1bde29aa2_writeBytes(_self_, _2096a61e4_Buf(&_110017_mIdent));
				_1bde297e9_write(_self_, jule::Str::lit("_", 1));
				_1bde297e9_write(_self_, (*((*(_109853_hash))))._field_ti);
				_1bde297e9_write(_self_, jule::Str::lit("_", 1));
				_1bde297e9_write(_self_, _230d4a1d0_Itoa((*((*(_109853_hash))))._field_i));
				_1bde297e9_write(_self_, jule::Str::lit(",\n", 2));
			}
			_iter_next_1c30d8014:;
			++it;
			goto _iter_begin_1c30d8014;
		}
		_iter_end_1c30d8014:;
	};
}



inline void _1bde33d31_traitData(jule::Ptr<_1bde29145_ObjectCoder> _self_, jule::Ptr<_1bde27c04_traitHash>* _111534_hash, jule::Ptr<_1bc713a41_Trait>* _111557_old) {
	if (((*((*((*(_111534_hash))))._field_t))._field_Methods.len() == 0LL)) {
		return;;
	};
	_2096a4489_StrBuilder _111913_ident = static__2096a48da_New(static_cast<jule::I64>((*((*((*(_111534_hash))))._field_t))._field_Ident.len()));;
	static__1bcbcb657_traitDecl(&(_111913_ident), (*((*(_111534_hash))))._field_t);
	if (((*((*(_111534_hash))))._field_t != (*(_111557_old)))) {
		if (((*(_111557_old)) != nullptr)) {
			_1bde29e9d_doneIndent(_self_);
			_1bde2a19b_indent(_self_);
			_1bde297e9_write(_self_, jule::Str::lit("};\n", 3));
		};
		_1bde297e9_write(_self_, jule::Str::lit("static ", 7));
		_1bde29aa2_writeBytes(_self_, _2096a61e4_Buf(&_111913_ident));
		_1bde297e9_write(_self_, jule::Str::lit("MptrData ", 9));
		_1bde29aa2_writeBytes(_self_, _2096a61e4_Buf(&_111913_ident));
		_1bde297e9_write(_self_, jule::Str::lit("_mptr_data[] = {\n", 17));
		(*(_111557_old))=(*((*(_111534_hash))))._field_t;
		_1bde29ca0_addIndent(_self_);
	};
	_1bde2a19b_indent(_self_);
	_1bde297e9_write(_self_, jule::Str::lit("{\n", 2));
	_1bde29ca0_addIndent(_self_);
	_1bde339bd_traitDataMethods(_self_, &((*((*(_111534_hash))))._field_t), _111534_hash);
	_1bde29e9d_doneIndent(_self_);
	_1bde2a19b_indent(_self_);
	_1bde297e9_write(_self_, jule::Str::lit("},\n", 3));
}



inline void _1bde3402e_traitDatas(jule::Ptr<_1bde29145_ObjectCoder> _self_) {
	jule::Ptr<_1bc713a41_Trait> _114517_old = nullptr;;
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c30e454d:;
		if (it != expr_end) {
			jule::Ptr<_1bde27c04_traitHash> _114621_hash = *it;
			{
				_1bde33d31_traitData(_self_, &(_114621_hash), &(_114517_old));
			}
			_iter_next_1c30e454d:;
			++it;
			goto _iter_begin_1c30e454d;
		}
		_iter_end_1c30e454d:;
	};
	if ((_114517_old != nullptr)) {
		_1bde29e9d_doneIndent(_self_);
		_1bde2a19b_indent(_self_);
		_1bde297e9_write(_self_, jule::Str::lit("};\n", 3));
	};
}



inline void _1bde3422c_globals(jule::Ptr<_1bde29145_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c30e63b8:;
		if (it != expr_end) {
			jule::Ptr<_1bc7a750d_Var> _115721_v = *it;
			{
				_1bde3ec71_kind((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Buf), (*((*(_115721_v))._field_Kind))._field_Kind);
				_1bde297e9_write(_self_, jule::Str::lit(" ", 1));
				static__1bcbcc5e2_var(&((*(_self_))._field_Buf), _115721_v);
				_1bde297e9_write(_self_, jule::Str::lit(" = ", 3));
				_1bcbc3c26_model((*(_self_))._field_ec, (*((*((*(_115721_v))._field_Value))._field_Data))._field_Model);
				_1bde297e9_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1c30e63b8:;
			++it;
			goto _iter_begin_1c30e63b8;
		}
		_iter_end_1c30e63b8:;
	};
}



inline void _1bde3442a_decls(jule::Ptr<_1bde29145_ObjectCoder> _self_) {
	_1bde2cd08_traitDecls(_self_);
	_1bde2d2ae_structurePlainDecls(_self_);
	_1bde2ee2b_structureDecls(_self_);
	(*(_self_))._field_headPos=static_cast<jule::I64>(_2096a5bc7_Len(&(*(_self_))._field_Buf));
	_1bde30129_structureMethodDecls(_self_);
	_1bde31537_funcDecls(_self_);
	_1bde297e9_write(_self_, jule::Str::lit("\n\n", 2));
	_1bde31a98_traitDataTypes(_self_);
	_1bde297e9_write(_self_, jule::Str::lit("\n\n", 2));
	_1bde3365a_traitWrappers(_self_);
	_1bde297e9_write(_self_, jule::Str::lit("\n\n", 2));
	_1bde3402e_traitDatas(_self_);
	_1bde297e9_write(_self_, jule::Str::lit("\n\n", 2));
	(*(_self_))._field_declPos=static_cast<jule::I64>(_2096a5bc7_Len(&(*(_self_))._field_Buf));
	_1bde3422c_globals(_self_);
}



inline void _1bde346d3_structureMethods(jule::Ptr<_1bde29145_ObjectCoder> _self_, jule::Ptr<_1bc5be0b1_StructIns>* _118541_s) {
	{
		auto expr = &((*((*(_118541_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c30ee0e6:;
		if (it != expr_end) {
			jule::Ptr<_1ece1b092_Fn> _118621_f = *it;
			{
				_1bde32c86_func(_self_, &(_118621_f));
				_1bde297e9_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1c30ee0e6:;
			++it;
			goto _iter_begin_1c30ee0e6;
		}
		_iter_end_1c30ee0e6:;
	};
}



inline void _1bde3498b_structureOstream(jule::Ptr<_1bde29145_ObjectCoder> _self_, jule::Ptr<_1bc5be0b1_StructIns>* _119241_s) {
	_1bde2a19b_indent(_self_);
	_1bde297e9_write(_self_, jule::Str::lit("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	static__1bcbcc01a_structureIns(&((*(_self_))._field_Buf), _119241_s);
	_1bde297e9_write(_self_, jule::Str::lit(" _Src) {\n", 9));
	_1bde29ca0_addIndent(_self_);
	_1bde2a19b_indent(_self_);
	jule::Ptr<_1ece1b092_Fn> _120013_fts = _1bc5c0128_FindMethod((*(_119241_s)).ptr(), jule::Str::lit("Str", 3), false);;
	if (static__1bc7a8c29_Str(_120013_fts)) {
		_1bde297e9_write(_self_, jule::Str::lit("_Stream << ", 11));
		static__1bcbcb080_func(&((*(_self_))._field_Buf), &(_120013_fts));
		_1bde297e9_write(_self_, jule::Str::lit("(&_Src);\n", 9));
	} else {
		_1bde297e9_write(_self_, jule::Str::lit("_Stream << \"", 12));
		_1bcbc4991_cstrBytes(&((*(_self_))._field_Buf), (*((*((*(_119241_s))))._field_Decl))._field_Ident);
		_1bde297e9_write(_self_, jule::Str::lit("{\";\n", 4));
		{
			auto expr = &((*((*(_119241_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c3103a9b:;
			if (it != expr_end) {
				jule::I64 _121018_i = it - expr->begin();
				jule::Ptr<_1bc5bd511_FieldIns> _121025_f = *it;
				{
					_1bde2a19b_indent(_self_);
					_1bde297e9_write(_self_, jule::Str::lit("_Stream << \"", 12));
					_1bcbc4991_cstrBytes(&((*(_self_))._field_Buf), (*((*(_121025_f))._field_Decl))._field_Ident);
					_1bde297e9_write(_self_, jule::Str::lit(":", 1));
					jule::Ptr<_1bc5be0b1_StructIns> _121717_strct = _1bc844d92_Struct((*(_121025_f))._field_Kind.ptr());;
					if ((((_121717_strct != nullptr) && ((*(_121717_strct))._field_Decl != nullptr)) && (*((*(_121717_strct))._field_Decl))._field_Binded)) {
						_1bde297e9_write(_self_, jule::Str::lit(" cpp.", 5));
						static__1bcbcc306_field(&((*(_self_))._field_Buf), &((*(_121025_f))._field_Decl));
						_1bde297e9_write(_self_, jule::Str::lit("\"", 1));
					} else {
						_1bde297e9_write(_self_, jule::Str::lit("\" << _Src.", 10));
						static__1bcbcc306_field(&((*(_self_))._field_Buf), &((*(_121025_f))._field_Decl));
					};
					if (((_121018_i + 1LL) < (*((*(_119241_s))))._field_Fields.len())) {
						_1bde297e9_write(_self_, jule::Str::lit(" << \", \"", 8));
					};
					_1bde297e9_write(_self_, jule::Str::lit(";\n", 2));
				}
				_iter_next_1c3103a9b:;
				++it;
				_121018_i++;
				goto _iter_begin_1c3103a9b;
			}
			_iter_end_1c3103a9b:;
		};
		_1bde2a19b_indent(_self_);
		_1bde297e9_write(_self_, jule::Str::lit("_Stream << \"}\";\n", 16));
	};
	_1bde2a19b_indent(_self_);
	_1bde297e9_write(_self_, jule::Str::lit("return _Stream;\n", 16));
	_1bde29e9d_doneIndent(_self_);
	_1bde297e9_write(_self_, jule::Str::lit("}", 1));
}



inline void _1bde34c44_structureIns(jule::Ptr<_1bde29145_ObjectCoder> _self_, jule::Ptr<_1bc5be0b1_StructIns>* _124337_s) {
	_1bde346d3_structureMethods(_self_, _124337_s);
	_1bde297e9_write(_self_, jule::Str::lit("\n\n", 2));
	_1bde3498b_structureOstream(_self_, _124337_s);
}



inline void _1bde34eec_structure(jule::Ptr<_1bde29145_ObjectCoder> _self_, jule::Ptr<_1bc5bb333_Struct>* _124934_s) {
	{
		auto expr = &((*((*(_124934_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c310d1d2:;
		if (it != expr_end) {
			jule::Ptr<_1bc5be0b1_StructIns> _125021_ins = *it;
			{
				_1bde34c44_structureIns(_self_, &(_125021_ins));
				_1bde297e9_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1c310d1d2:;
			++it;
			goto _iter_begin_1c310d1d2;
		}
		_iter_end_1c310d1d2:;
	};
}



inline void _1bde351ea_structures(jule::Ptr<_1bde29145_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c310da2e:;
		if (it != expr_end) {
			jule::Ptr<_1bc5bb333_Struct> _125721_s = *it;
			{
				if (((*(_125721_s))._field_Token != nullptr)) {
					_1bde34eec_structure(_self_, &(_125721_s));
					_1bde297e9_write(_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1c310da2e:;
			++it;
			goto _iter_begin_1c310da2e;
		}
		_iter_end_1c310da2e:;
	};
}



inline void _1bde353e8_funcs(jule::Ptr<_1bde29145_ObjectCoder> _self_) {
	_1bde2c90c_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1bc766d2a_Package>*)>([=](jule::Ptr<_1bc766d2a_Package>* _126635_pkg) mutable -> void {
		_1bde36383_iterFiles(_126635_pkg, jule::Fn<void(jule::Ptr<_1bc80a50b_SymbolTable>*)>([=](jule::Ptr<_1bc80a50b_SymbolTable>* _126736_file) mutable -> void {
			{
				auto expr = &((*((*(_126736_file))))._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1c3112c97:;
				if (it != expr_end) {
					jule::Ptr<_1ece1b092_Fn> _126829_f = *it;
					{
						if (((!(_23b84a763_Test)) && _1bde46e43_hasDirective(&((*(_126829_f))._field_Directives), jule::Str::lit("test", 4)))) {
							goto _iter_next_1c3112c97;
						};
						if (((!((*(_126829_f))._field_Binded)) && ((*(_126829_f))._field_Token != nullptr))) {
							_1bde32c86_func(_self_, &(_126829_f));
							_1bde297e9_write(_self_, jule::Str::lit("\n\n", 2));
						};
					}
					_iter_next_1c3112c97:;
					++it;
					goto _iter_begin_1c3112c97;
				}
				_iter_end_1c3112c97:;
			};
		}));
	}));
}



inline void _1bde356a1_pushInit(jule::Ptr<_1bde29145_ObjectCoder> _self_, jule::Ptr<_1bc766d2a_Package>* _128133_pkg) {
	_1bde36383_iterFiles(_128133_pkg, jule::Fn<void(jule::Ptr<_1bc80a50b_SymbolTable>*)>([=](jule::Ptr<_1bc80a50b_SymbolTable>* _128232_file) mutable -> void {
		{
			auto expr = &((*((*(_128232_file))))._field_Funcs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c3115838:;
			if (it != expr_end) {
				jule::Ptr<_1ece1b092_Fn> _128320_f = *it;
				{
					if ((*(_128320_f))._field_Ident.equal("init", 4)) {
						_1bde2a19b_indent(_self_);
						static__1bcbcb080_func(&((*(_self_))._field_Buf), &(_128320_f));
						_1bde297e9_write(_self_, jule::Str::lit("();\n", 4));
					};
				}
				_iter_next_1c3115838:;
				++it;
				goto _iter_begin_1c3115838;
			}
			_iter_end_1c3115838:;
		};
	}));
}



inline void _1bde3589e_initCaller(jule::Ptr<_1bde29145_ObjectCoder> _self_) {
	_1bde297e9_write(_self_, jule::Str::lit("void __jule_call_initializers(void) {\n", 38));
	_1bde29ca0_addIndent(_self_);
	_1bde2c90c_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1bc766d2a_Package>*)>([=](jule::Ptr<_1bc766d2a_Package>* _129635_pkg) mutable -> void {
		_1bde356a1_pushInit(_self_, _129635_pkg);
	}));
	_1bde29e9d_doneIndent(_self_);
	_1bde297e9_write(_self_, jule::Str::lit("\n}", 2));
}



inline void _1bde35a9c_end(jule::Ptr<_1bde29145_ObjectCoder> _self_) {
	_1bde297e9_write(_self_, jule::Str::lit("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_23b84a763_Test) {
		_1bde297e9_write(_self_, jule::Str::lit("test_point();", 13));
	} else {
		_1bde297e9_write(_self_, jule::Str::lit("entry_point();", 14));
	};
	_1bde297e9_write(_self_, jule::Str::lit("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1bde35c9a_serializeHead(jule::Ptr<_1bde29145_ObjectCoder> _self_) {
	_1bde2c654_prepareStructures(_self_);
	_1bde2cb0a_buildTraitMap(_self_);
	_1bde2bea0_head(_self_);
	_1bde297e9_write(_self_, jule::Str::lit("\n", 1));
	_1bde3442a_decls(_self_);
	if ((_2096a5bc7_Len(&(*(_self_))._field_resultDecls) > 0LL)) {
		jule::Slice<jule::U8> _133117_head = jule::Slice<jule::U8>::alloc(0LL, (_2096a5bc7_Len(&(*(_self_))._field_Buf) + _2096a5bc7_Len(&(*(_self_))._field_resultDecls)), 0);;
		(_133117_head).append(_2096a61e4_Buf(&(*(_self_))._field_Buf).slice(0LL, (*(_self_))._field_headPos));;
		(_133117_head).append(_2096a61e4_Buf(&(*(_self_))._field_resultDecls));;
		(*(_self_))._field_declPos+=_2096a5bc7_Len(&(*(_self_))._field_resultDecls);
		(_133117_head).append(_2096a61e4_Buf(&(*(_self_))._field_Buf).slice((*(_self_))._field_headPos));;
		{
			_2096a649c_SetBuf(&(*(_self_))._field_Buf, _133117_head);
		};
	};
	_1bde297e9_write(_self_, jule::Str::lit("\n", 1));
	_1bde351ea_structures(_self_);
	_1bde353e8_funcs(_self_);
	_1bde3589e_initCaller(_self_);
	_1bde297e9_write(_self_, jule::Str::lit("\n\n", 2));
	if ((_2096a5bc7_Len(&(*(_self_))._field_anyObj) > 0LL)) {
		jule::Slice<jule::U8> _134617_head = jule::Slice<jule::U8>::alloc(0LL, (_2096a5bc7_Len(&(*(_self_))._field_Buf) + _2096a5bc7_Len(&(*(_self_))._field_anyObj)), 0);;
		(_134617_head).append(_2096a61e4_Buf(&(*(_self_))._field_Buf).slice(0LL, (*(_self_))._field_declPos));;
		(_134617_head).append(_2096a61e4_Buf(&(*(_self_))._field_anyObj));;
		(_134617_head).append(_2096a61e4_Buf(&(*(_self_))._field_Buf).slice((*(_self_))._field_declPos));;
		{
			_2096a649c_SetBuf(&(*(_self_))._field_Buf, _134617_head);
		};
	};
}



inline void _1bde35e98_Serialize(jule::Ptr<_1bde29145_ObjectCoder> _self_) {
	_1bde35c9a_serializeHead(_self_);
	_1bde35a9c_end(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1bde29145_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Buf:" << _Src._field_Buf << ", ";
	_Stream << "resultDecls:" << _Src._field_resultDecls << ", ";
	_Stream << "anyObj:" << _Src._field_anyObj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "resultMap:" << _Src._field_resultMap << ", ";
	_Stream << "anyTypeMap:" << _Src._field_anyTypeMap << ", ";
	_Stream << "traitCastMap:" << _Src._field_traitCastMap << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "tc:" << _Src._field_tc << ", ";
	_Stream << "headPos:" << _Src._field_headPos << ", ";
	_Stream << "declPos:" << _Src._field_declPos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1bd108de7_ObjectDeadCode> static__1bd138db1_new(jule::Ptr<_1bd4385ab_IR>* _3424_ir) {
	return jule::new_ptr<_1bd108de7_ObjectDeadCode>(_1bd108de7_ObjectDeadCode{._field_ir=(*(_3424_ir))});;
}



inline jule::Bool _1c2922288_isLive(jule::Ptr<_1bd108de7_ObjectDeadCode> _self_, jule::Ptr<_1bc713a41_Trait>* _4030_t) {
	jule::Slice<jule::Ptr<_1bc713a41_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1c2924059:;
			{
				_4117_live=(*(_self_))._field_live._field_traits;
			}
		}
		_match_end_1c2923d5b:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2923c18:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1c2923c18:;
			++it;
			_5213_i++;
			goto _iter_begin_1c2923c18;
		}
		_iter_end_1c2923c18:;
	};
	return false;;
}

inline jule::Bool _1c2927d0a_isLive(jule::Ptr<_1bd108de7_ObjectDeadCode> _self_, jule::Ptr<_1ece1de96_FnIns>* _4030_t) {
	jule::Slice<jule::Ptr<_1ece1de96_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1c29298de:;
			{
				_4117_live=(*(_self_))._field_live._field_fns;
			}
		}
		_match_end_1c2929834:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2929da6:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1c2929da6:;
			++it;
			_5213_i++;
			goto _iter_begin_1c2929da6;
		}
		_iter_end_1c2929da6:;
	};
	return false;;
}

inline jule::Bool _1c292dae1_isLive(jule::Ptr<_1bd108de7_ObjectDeadCode> _self_, jule::Ptr<_1bc5be0b1_StructIns>* _4030_t) {
	jule::Slice<jule::Ptr<_1bc5be0b1_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1c2933651:;
			{
				_4117_live=(*(_self_))._field_live._field_structs;
			}
		}
		_match_end_1c29334b9:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2934047:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1c2934047:;
			++it;
			_5213_i++;
			goto _iter_begin_1c2934047;
		}
		_iter_end_1c2934047:;
	};
	return false;;
}

inline jule::Bool _1c2935e6c_isLive(jule::Ptr<_1bd108de7_ObjectDeadCode> _self_, jule::Ptr<_1bc7a750d_Var>* _4030_t) {
	jule::Slice<jule::Ptr<_1bc7a750d_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1c2937b1c:;
			{
				_4117_live=(*(_self_))._field_live._field_vars;
			}
		}
		_match_end_1c29379eb:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c29380a1:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1c29380a1:;
			++it;
			_5213_i++;
			goto _iter_begin_1c29380a1;
		}
		_iter_end_1c29380a1:;
	};
	return false;;
}



inline void _1c2922695_pushLive(jule::Ptr<_1bd108de7_ObjectDeadCode> _self_, jule::Ptr<_1bc713a41_Trait> _6035_t) {
	{
		
{
			_case_begin_1c2926226:;
			{
				{ jule::Slice<jule::Ptr<_1bc713a41_Trait>> &__jule_push_dest = (*(_self_))._field_live._field_traits; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1c2926017:;
	};
}

inline void _1c29281b2_pushLive(jule::Ptr<_1bd108de7_ObjectDeadCode> _self_, jule::Ptr<_1ece1de96_FnIns> _6035_t) {
	{
		
{
			_case_begin_1c292c22c:;
			{
				{ jule::Slice<jule::Ptr<_1ece1de96_FnIns>> &__jule_push_dest = (*(_self_))._field_live._field_fns; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1c292c10b:;
	};
}

inline void _1c292e1eb_pushLive(jule::Ptr<_1bd108de7_ObjectDeadCode> _self_, jule::Ptr<_1bc5be0b1_StructIns> _6035_t) {
	{
		
{
			_case_begin_1c29309a0:;
			{
				{ jule::Slice<jule::Ptr<_1bc5be0b1_StructIns>> &__jule_push_dest = (*(_self_))._field_live._field_structs; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1c2930818:;
	};
}

inline void _1c2936379_pushLive(jule::Ptr<_1bd108de7_ObjectDeadCode> _self_, jule::Ptr<_1bc7a750d_Var> _6035_t) {
	{
		
{
			_case_begin_1c293a15d:;
			{
				{ jule::Slice<jule::Ptr<_1bc7a750d_Var>> &__jule_push_dest = (*(_self_))._field_live._field_vars; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1c293a0a3:;
	};
}



inline void _1bd139730_setReferencesAsLive(jule::Ptr<_1bd108de7_ObjectDeadCode> _self_, jule::Ptr<_1ece221a8_ReferenceStack>* _7344_rs) {
	if (((*(_7344_rs)) == nullptr)) {
		return;;
	};
	jule::I64 _7713_i = 0LL;;
	for (; (_7713_i < _1ece228a1_Len((*(_7344_rs)).ptr())); (_7713_i)++) {
		{
			jule::Any _7917_ref = _1ece22be2_At((*(_7344_rs)).ptr(), _7713_i);;
			{
				auto &_match_expr{ _7917_ref };
				
				if (_match_expr.type == &__jule_any_type10) {
					_case_begin_1c2921001:;
					{
						jule::Ptr<_1bc713a41_Trait> _8221_t = _7917_ref.cast_ptr<_1bc713a41_Trait>(&__jule_any_type10);;
						if (_1c2922288_isLive(_self_, &(_8221_t))) {
							goto _iter_next_1c2920242;
						};
						_1c2922695_pushLive(_self_, _8221_t);
						{
							auto expr = &((*(_8221_t))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1c2921c16:;
							if (it != expr_end) {
								jule::Ptr<_1ece1b092_Fn> _8729_ins = *it;
								{
									{
										auto expr = &((*(_8729_ins))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1c2922e9d:;
										if (it != expr_end) {
											jule::Ptr<_1ece1de96_FnIns> _8833_mins = *it;
											{
												if (_1c2927d0a_isLive(_self_, &(_8833_mins))) {
													goto _iter_next_1c2922e9d;
												};
												_1c29281b2_pushLive(_self_, _8833_mins);
												_1bd139730_setReferencesAsLive(_self_, &((*(_8833_mins))._field_Refers));
											}
											_iter_next_1c2922e9d:;
											++it;
											goto _iter_begin_1c2922e9d;
										}
										_iter_end_1c2922e9d:;
									};
								}
								_iter_next_1c2921c16:;
								++it;
								goto _iter_begin_1c2921c16;
							}
							_iter_end_1c2921c16:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1c2921067:;
					{
						jule::Ptr<_1ece1de96_FnIns> _9721_f = _7917_ref.cast_ptr<_1ece1de96_FnIns>(&__jule_any_type7);;
						if (_1c2927d0a_isLive(_self_, &(_9721_f))) {
							goto _match_end_1c29208b3;
						};
						if ((((*(_9721_f))._field_Owner != nullptr) && (!((*((*(_9721_f))._field_Decl))._field_Statically)))) {
							if ((!(_1c292dae1_isLive(_self_, &((*(_9721_f))._field_Owner))))) {
								_1c292e1eb_pushLive(_self_, (*(_9721_f))._field_Owner);
								_1bd139730_setReferencesAsLive(_self_, &((*((*(_9721_f))._field_Owner))._field_Refers));
							};
						};
						_1c29281b2_pushLive(_self_, _9721_f);
						_1bd139730_setReferencesAsLive(_self_, &((*(_9721_f))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type8) {
					_case_begin_1c29210cd:;
					{
						jule::Ptr<_1bc7a750d_Var> _11021_v = _7917_ref.cast_ptr<_1bc7a750d_Var>(&__jule_any_type8);;
						if (_1c2935e6c_isLive(_self_, &(_11021_v))) {
							goto _match_end_1c29208b3;
						};
						_1c2936379_pushLive(_self_, _11021_v);
						_1bd139730_setReferencesAsLive(_self_, &((*(_11021_v))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type9) {
					_case_begin_1c2921144:;
					{
						jule::Ptr<_1bc5be0b1_StructIns> _11721_s = _7917_ref.cast_ptr<_1bc5be0b1_StructIns>(&__jule_any_type9);;
						if (_1c292dae1_isLive(_self_, &(_11721_s))) {
							goto _match_end_1c29208b3;
						};
						_1c292e1eb_pushLive(_self_, _11721_s);
						_1bd139730_setReferencesAsLive(_self_, &((*(_11721_s))._field_Refers));
						{
							auto expr = &((*(_11721_s))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1c293b989:;
							if (it != expr_end) {
								jule::Ptr<_1ece1b092_Fn> _12329_m = *it;
								{
									{
										auto expr = &((*(_12329_m))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1c293d150:;
										if (it != expr_end) {
											jule::Ptr<_1ece1de96_FnIns> _12433_ins = *it;
											{
												if (_1c2927d0a_isLive(_self_, &(_12433_ins))) {
													goto _iter_next_1c293d150;
												};
												if (_1bd13c403_isTraitMethod(&(_11721_s), &(_12433_ins))) {
													_1c29281b2_pushLive(_self_, _12433_ins);
													_1bd139730_setReferencesAsLive(_self_, &((*(_12433_ins))._field_Refers));
												};
											}
											_iter_next_1c293d150:;
											++it;
											goto _iter_begin_1c293d150;
										}
										_iter_end_1c293d150:;
									};
								}
								_iter_next_1c293b989:;
								++it;
								goto _iter_begin_1c293b989;
							}
							_iter_end_1c293b989:;
						};
					}
				}
				_match_end_1c29208b3:;
			};
		}
	_iter_next_1c2920242:;
	}
	_iter_end_1c2920242:;;
}



inline void _1bd1399d8_inits(jule::Ptr<_1bd108de7_ObjectDeadCode> _self_, jule::Ptr<_1bc766d2a_Package>* _14130_pkg) {
	{
		auto expr = &((*((*(_14130_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c29354bb:;
		if (it != expr_end) {
			jule::Ptr<_1bc80a50b_SymbolTable> _14221_file = *it;
			{
				{
					auto expr = &((*(_14221_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c293d99c:;
					if (it != expr_end) {
						jule::Ptr<_1ece1b092_Fn> _14325_f = *it;
						{
							if ((*(_14325_f))._field_Ident.equal("init", 4)) {
								jule::Ptr<_1ece1de96_FnIns> _14525_ins = (*(_14325_f))._field_Instances[0LL];;
								{ jule::Slice<jule::Ptr<_1ece1de96_FnIns>> &__jule_push_dest = (*(_self_))._field_live._field_fns; __jule_push_dest.push(_14525_ins); };
								_1bd139730_setReferencesAsLive(_self_, &((*(_14525_ins))._field_Refers));
							};
						}
						_iter_next_1c293d99c:;
						++it;
						goto _iter_begin_1c293d99c;
					}
					_iter_end_1c293d99c:;
				};
			}
			_iter_next_1c29354bb:;
			++it;
			goto _iter_begin_1c29354bb;
		}
		_iter_end_1c29354bb:;
	};
}



inline void _1bd139c91_collectLivePackage(jule::Ptr<_1bd108de7_ObjectDeadCode> _self_, jule::Ptr<_1bc766d2a_Package>* _15343_pkg) {
	_1bd1399d8_inits(_self_, _15343_pkg);
	if (_23b84a763_Test) {
		{
			auto expr = &((*((*(_15343_pkg))))._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c294293a:;
			if (it != expr_end) {
				jule::Ptr<_1bc80a50b_SymbolTable> _15925_file = *it;
				{
					{
						auto expr = &((*(_15925_file))._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c2943386:;
						if (it != expr_end) {
							jule::Ptr<_1ece1b092_Fn> _16029_f = *it;
							{
								if (_1bd13c03a_hasDirective(&((*(_16029_f))._field_Directives), jule::Str::lit("test", 4))) {
									jule::Ptr<_1ece1de96_FnIns> _16229_ins = (*(_16029_f))._field_Instances[0LL];;
									{ jule::Slice<jule::Ptr<_1ece1de96_FnIns>> &__jule_push_dest = (*(_self_))._field_live._field_fns; __jule_push_dest.push(_16229_ins); };
									_1bd139730_setReferencesAsLive(_self_, &((*(_16229_ins))._field_Refers));
								};
							}
							_iter_next_1c2943386:;
							++it;
							goto _iter_begin_1c2943386;
						}
						_iter_end_1c2943386:;
					};
				}
				_iter_next_1c294293a:;
				++it;
				goto _iter_begin_1c294293a;
			}
			_iter_end_1c294293a:;
		};
	};
}



inline void _1bd139e8e_collectLive(jule::Ptr<_1bd108de7_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2944068:;
		if (it != expr_end) {
			jule::Ptr<_1bc763e04_ImportInfo> _17221_used = *it;
			{
				if ((!((*(_17221_used))._field_Binded))) {
					_1bd139c91_collectLivePackage(_self_, &((*(_17221_used))._field_Package));
				};
			}
			_iter_next_1c2944068:;
			++it;
			goto _iter_begin_1c2944068;
		}
		_iter_end_1c2944068:;
	};
	_1bd139c91_collectLivePackage(_self_, &((*((*(_self_))._field_ir))._field_Main));
	jule::Ptr<_1ece1b092_Fn> _18013_main = _1bc7683ae_FindFn((*((*(_self_))._field_ir))._field_Main.ptr(), jule::Str::lit("main", 4), false);;
	jule::Ptr<_1ece1de96_FnIns> _18113_ins = (*(_18013_main))._field_Instances[0LL];;
	{ jule::Slice<jule::Ptr<_1ece1de96_FnIns>> &__jule_push_dest = (*(_self_))._field_live._field_fns; __jule_push_dest.push(_18113_ins); };
	_1bd139730_setReferencesAsLive(_self_, &((*(_18113_ins))._field_Refers));
}



inline void _1bd13a247_removeDeadGlobals(jule::Ptr<_1bd108de7_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1bc7a750d_Var>>* _18642_vars) {
	jule::I64 _18713_i = 0LL;;
	while ((_18713_i < (*(_18642_vars)).len())) {
		{
			jule::Ptr<_1bc7a750d_Var> _18913_v = (*(_18642_vars))[_18713_i];;
			if (_1c2935e6c_isLive(_self_, &(_18913_v))) {
				(_18713_i)++;
				goto _iter_next_1c2949733;
			};
			(*(_18642_vars))=jule::append((*(_18642_vars)).slice(0LL, _18713_i),(*(_18642_vars)).slice((_18713_i + 1LL)));
		}
	_iter_next_1c2949733:;
	}
	_iter_end_1c2949733:;;
}



inline void _1bd13a500_removeDeadFns(jule::Ptr<_1bd108de7_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ece1b092_Fn>>* _19838_funcs) {
	jule::I64 _19913_i = 0LL;;
	while ((_19913_i < (*(_19838_funcs)).len())) {
		{
			jule::Ptr<_1ece1b092_Fn> _20117_f = (*(_19838_funcs))[_19913_i];;
			jule::I64 _20217_j = 0LL;;
			while ((_20217_j < (*(_20117_f))._field_Instances.len())) {
				{
					jule::Ptr<_1ece1de96_FnIns> _20417_ins = (*(_20117_f))._field_Instances[_20217_j];;
					if (_1c2927d0a_isLive(_self_, &(_20417_ins))) {
						(_20217_j)++;
						goto _iter_next_1c294c12b;
					};
					(*(_20117_f))._field_Instances=jule::append((*(_20117_f))._field_Instances.slice(0LL, _20217_j),(*(_20117_f))._field_Instances.slice((_20217_j + 1LL)));
				}
			_iter_next_1c294c12b:;
			}
			_iter_end_1c294c12b:;;
			if (((*(_20117_f))._field_Instances.len() == 0LL)) {
				(*(_19838_funcs))=jule::append((*(_19838_funcs)).slice(0LL, _19913_i),(*(_19838_funcs)).slice((_19913_i + 1LL)));
				goto _iter_next_1c294b339;
			};
			(_19913_i)++;
		}
	_iter_next_1c294b339:;
	}
	_iter_end_1c294b339:;;
}



inline void _1bd13a7a8_removeDeadStructs(jule::Ptr<_1bd108de7_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1bc5bb333_Struct>>* _21942_structs) {
	jule::I64 _22013_i = 0LL;;
	while ((_22013_i < (*(_21942_structs)).len())) {
		{
			jule::Ptr<_1bc5bb333_Struct> _22217_s = (*(_21942_structs))[_22013_i];;
			jule::I64 _22317_j = 0LL;;
			while ((_22317_j < (*(_22217_s))._field_Instances.len())) {
				{
					jule::Ptr<_1bc5be0b1_StructIns> _22521_ins = (*(_22217_s))._field_Instances[_22317_j];;
					_1bd13a500_removeDeadFns(_self_, &((*(_22521_ins))._field_Methods));
					if ((((*(_22521_ins))._field_Methods.len() != 0LL) || _1c292dae1_isLive(_self_, &(_22521_ins)))) {
						(_22317_j)++;
						goto _iter_next_1c2950dcc;
					};
					(*(_22217_s))._field_Instances=jule::append((*(_22217_s))._field_Instances.slice(0LL, _22317_j),(*(_22217_s))._field_Instances.slice((_22317_j + 1LL)));
				}
			_iter_next_1c2950dcc:;
			}
			_iter_end_1c2950dcc:;;
			if (((*(_22217_s))._field_Instances.len() == 0LL)) {
				(*(_21942_structs))=jule::append((*(_21942_structs)).slice(0LL, _22013_i),(*(_21942_structs)).slice((_22013_i + 1LL)));
				goto _iter_next_1c29500c9;
			};
			(_22013_i)++;
		}
	_iter_next_1c29500c9:;
	}
	_iter_end_1c29500c9:;;
}



inline void _1bd13aa61_removeDeadTraits(jule::Ptr<_1bd108de7_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1bc713a41_Trait>>* _24141_traits) {
	jule::I64 _24213_i = 0LL;;
	while ((_24213_i < (*(_24141_traits)).len())) {
		{
			jule::Ptr<_1bc713a41_Trait> _24417_t = (*(_24141_traits))[_24213_i];;
			if ((!(_1c2922288_isLive(_self_, &(_24417_t))))) {
				(*(_24141_traits))=jule::append((*(_24141_traits)).slice(0LL, _24213_i),(*(_24141_traits)).slice((_24213_i + 1LL)));
				goto _iter_next_1c29548d6;
			};
			jule::I64 _24917_j = 0LL;;
			while ((_24917_j < (*(_24417_t))._field_Implemented.len())) {
				{
					jule::Ptr<_1bc5bb333_Struct> _25117_s = (*(_24417_t))._field_Implemented[_24917_j];;
					if (((*(_25117_s))._field_Instances.len() > 0LL)) {
						(_24917_j)++;
						goto _iter_next_1c2955266;
					};
					(*(_24417_t))._field_Implemented=jule::append((*(_24417_t))._field_Implemented.slice(0LL, _24917_j),(*(_24417_t))._field_Implemented.slice((_24917_j + 1LL)));
				}
			_iter_next_1c2955266:;
			}
			_iter_end_1c2955266:;;
			(_24213_i)++;
		}
	_iter_next_1c29548d6:;
	}
	_iter_end_1c29548d6:;;
}



inline void _1bd13ad19_removeDeadsFile(jule::Ptr<_1bd108de7_ObjectDeadCode> _self_, jule::Ptr<_1bc80a50b_SymbolTable>* _26240_file) {
	_1bd13a500_removeDeadFns(_self_, &((*((*(_26240_file))))._field_Funcs));
	_1bd13a7a8_removeDeadStructs(_self_, &((*((*(_26240_file))))._field_Structs));
	_1bd13aa61_removeDeadTraits(_self_, &((*((*(_26240_file))))._field_Traits));
	_1bd13a247_removeDeadGlobals(_self_, &((*((*(_26240_file))))._field_Vars));
}



inline void _1bd13b0c2_removeDeadsPackage(jule::Ptr<_1bd108de7_ObjectDeadCode> _self_, jule::Ptr<_1bc766d2a_Package>* _26943_pkg) {
	{
		auto expr = &((*((*(_26943_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c295ed0e:;
		if (it != expr_end) {
			jule::Ptr<_1bc80a50b_SymbolTable> _27021_file = *it;
			{
				_1bd13ad19_removeDeadsFile(_self_, &(_27021_file));
			}
			_iter_next_1c295ed0e:;
			++it;
			goto _iter_begin_1c295ed0e;
		}
		_iter_end_1c295ed0e:;
	};
}



inline void _1bd13b2c0_removeDeads(jule::Ptr<_1bd108de7_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c29606b1:;
		if (it != expr_end) {
			jule::Ptr<_1bc763e04_ImportInfo> _27621_used = *it;
			{
				if ((!((*(_27621_used))._field_Binded))) {
					_1bd13b0c2_removeDeadsPackage(_self_, &((*(_27621_used))._field_Package));
				};
			}
			_iter_next_1c29606b1:;
			++it;
			goto _iter_begin_1c29606b1;
		}
		_iter_end_1c29606b1:;
	};
	_1bd13b0c2_removeDeadsPackage(_self_, &((*((*(_self_))._field_ir))._field_Main));
}



inline void _1bd13b4bd_elimanate(jule::Ptr<_1bd108de7_ObjectDeadCode> _self_) {
	_1bd139e8e_collectLive(_self_);
	_1bd13b2c0_removeDeads(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1bd108de7_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_x_1bd4385ab_IR__jule_tuple_s_1ed6c7892_Log static__1bd438a1d_Build(jule::Str _2721_path, jule::I64 _2732_flags) {
	__jule_tuple_x_1bd4385ab_IR__jule_tuple_s_1ed6c7892_Log __jule_func_result;
	jule::Ptr<_1bd435ae7_JuleImporter> _2813_importer = static__1bd435ee3_New(_1bd43a503_buildCompileInfo());;
	jule::Slice<jule::Ptr<_1bc59378e_Ast>> _2913_files;;
	jule::Slice<_1ed6c7892_Log> _2924_logs;;
	({
		__jule_tuple_sx_1bc59378e_Ast__jule_tuple_s_1ed6c7892_Log __jule_assign_result = _1bd4374cd_ImportPackage(_2813_importer.ptr(), _2721_path, true);
		_2913_files = __jule_assign_result.__jule_result_arg0;
		_2924_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2924_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2924_logs;
		return __jule_func_result;;
	};
	jule::Str _339_root = _2721_path;;
	if ((_2913_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1bc766d2a_Package> _3913_pkg;;
	({
		__jule_tuple_x_1bc766d2a_Package__jule_tuple_s_1ed6c7892_Log __jule_assign_result = _1bc862398_AnalyzePackage(_2913_files, jule::Trait<_1bc760ede_Importer>(_2813_importer, 0), _2732_flags);
		_3913_pkg = __jule_assign_result.__jule_result_arg0;
		_2924_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2924_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2924_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1bd4385ab_IR> _4413_ir = jule::new_ptr<_1bd4385ab_IR>(_1bd4385ab_IR{._field_Root=_339_root, ._field_Main=_3913_pkg, ._field_Used=_1bd436279_AllPackages(_2813_importer.ptr()), });;
	(*(_4413_ir))._field_Passes=_1bd43a2e4_getAllUniquePasses(&((*(_4413_ir))._field_Main), (*(_4413_ir))._field_Used);
	__jule_func_result.__jule_result_arg0 = _4413_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1bd439007_appendStructs(_1bd4385ab_IR* _self_, jule::Ptr<_1bc766d2a_Package>* _5633_p, jule::Slice<jule::Ptr<_1bc5bb333_Struct>>* _5657_buffer) {
	{
		auto expr = &((*((*(_5633_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c28d7979:;
		if (it != expr_end) {
			jule::Ptr<_1bc80a50b_SymbolTable> _5721_f = *it;
			{
				{
					auto expr = &((*(_5721_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c28d83c5:;
					if (it != expr_end) {
						jule::Ptr<_1bc5bb333_Struct> _5825_s = *it;
						{
							if ((!((*(_5825_s))._field_Binded))) {
								{ jule::Slice<jule::Ptr<_1bc5bb333_Struct>> &__jule_push_dest = (*(_5657_buffer)); __jule_push_dest.push(_5825_s); };
							};
						}
						_iter_next_1c28d83c5:;
						++it;
						goto _iter_begin_1c28d83c5;
					}
					_iter_end_1c28d83c5:;
				};
			}
			_iter_next_1c28d7979:;
			++it;
			goto _iter_begin_1c28d7979;
		}
		_iter_end_1c28d7979:;
	};
}



inline jule::Slice<jule::Ptr<_1bc5bb333_Struct>> _1bd43928d_GetAllStructures(_1bd4385ab_IR* _self_) {
	jule::Slice<jule::Ptr<_1bc5bb333_Struct>> _6917_buffer = nullptr;;
	_1bd439007_appendStructs(_self_, &((*(_self_))._field_Main), &(_6917_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c28d93d7:;
		if (it != expr_end) {
			jule::Ptr<_1bc763e04_ImportInfo> _7121_u = *it;
			{
				if ((!((*(_7121_u))._field_Binded))) {
					_1bd439007_appendStructs(_self_, &((*(_7121_u))._field_Package), &(_6917_buffer));
				};
			}
			_iter_next_1c28d93d7:;
			++it;
			goto _iter_begin_1c28d93d7;
		}
		_iter_end_1c28d93d7:;
	};
	return _6917_buffer;;
}



inline void _1bd439601_appendGlobals(_1bd4385ab_IR* _self_, jule::Ptr<_1bc766d2a_Package>* _7933_p, jule::Slice<jule::Ptr<_1bc7a750d_Var>>* _7957_buffer) {
	{
		auto expr = &((*((*(_7933_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c28dac57:;
		if (it != expr_end) {
			jule::Ptr<_1bc80a50b_SymbolTable> _8021_f = *it;
			{
				{
					auto expr = &((*(_8021_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c28db6a3:;
					if (it != expr_end) {
						jule::Ptr<_1bc7a750d_Var> _8125_v = *it;
						{
							if (((((*(_8125_v))._field_Token != nullptr) && (!((*(_8125_v))._field_Binded))) && (!((*(_8125_v))._field_Constant)))) {
								{ jule::Slice<jule::Ptr<_1bc7a750d_Var>> &__jule_push_dest = (*(_7957_buffer)); __jule_push_dest.push(_8125_v); };
							};
						}
						_iter_next_1c28db6a3:;
						++it;
						goto _iter_begin_1c28db6a3;
					}
					_iter_end_1c28db6a3:;
				};
			}
			_iter_next_1c28dac57:;
			++it;
			goto _iter_begin_1c28dac57;
		}
		_iter_end_1c28dac57:;
	};
}



inline jule::Slice<jule::Ptr<_1bc7a750d_Var>> _1bd439887_GetAllGlobals(_1bd4385ab_IR* _self_) {
	jule::Slice<jule::Ptr<_1bc7a750d_Var>> _9217_buffer = nullptr;;
	_1bd439601_appendGlobals(_self_, &((*(_self_))._field_Main), &(_9217_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c28dbbae:;
		if (it != expr_end) {
			jule::Ptr<_1bc763e04_ImportInfo> _9421_u = *it;
			{
				if ((!((*(_9421_u))._field_Binded))) {
					_1bd439601_appendGlobals(_self_, &((*(_9421_u))._field_Package), &(_9217_buffer));
				};
			}
			_iter_next_1c28dbbae:;
			++it;
			goto _iter_begin_1c28dbbae;
		}
		_iter_end_1c28dbbae:;
	};
	return _9217_buffer;;
}



inline void _1bd439a85_Order(_1bd4385ab_IR* _self_) {
	(*(_self_))._field_Ordered._field_Structs=_1bd43928d_GetAllStructures(_self_);
	(*(_self_))._field_Ordered._field_Globals=_1bd439887_GetAllGlobals(_self_);
	static__1bd43b966_orderStructures(&((*(_self_))._field_Ordered._field_Structs));
	static__1bd43bb97_orderVars(&((*(_self_))._field_Ordered._field_Globals));
}





std::ostream &operator<<(std::ostream &_Stream, _1bd4385ab_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1bc5be435_Str(_1bc5be0b1_StructIns* _self_) {
	_2096a4489_StrBuilder _23913_kind = static__2096a48da_New(32LL);;
	_2096a4e4b_WriteStr(&_23913_kind, (*((*(_self_))._field_Decl))._field_Ident);
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		_2096a5204_WriteByte(&_23913_kind, '[');
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c1381c3d:;
			if (it != expr_end) {
				jule::I64 _24317_i = it - expr->begin();
				jule::Ptr<_1bc83e7d7_InsGeneric> *_24320_g = it;
				{
					_2096a4e4b_WriteStr(&_23913_kind, _1bc841586_Str((*((*(_24320_g))))._field_Kind.ptr()));
					if ((_24317_i < ((*(_self_))._field_Generics.len() - 1LL))) {
						_2096a5204_WriteByte(&_23913_kind, ',');
					};
				}
				_iter_next_1c1381c3d:;
				++it;
				_24317_i++;
				goto _iter_begin_1c1381c3d;
			}
			_iter_end_1c1381c3d:;
		};
		_2096a5204_WriteByte(&_23913_kind, ']');
	};
	return _2096a5743_Str(&_23913_kind);;
}



inline jule::Bool _1bc5be776_Equal(jule::Ptr<_1bc5be0b1_StructIns> _self_, jule::Ptr<_1bc8411bd_TypeKind> _25521_other) {
	jule::Ptr<_1bc5be0b1_StructIns> _2569_s = _1bc844d92_Struct(_25521_other.ptr());;
	if ((_2569_s == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Decl != (*(_2569_s))._field_Decl)) {
		return false;;
	};
	if (((*(_self_))._field_Generics.len() != (*(_2569_s))._field_Generics.len())) {
		return false;;
	};
	jule::I64 _26913_i = 0LL;;
	for (; (_26913_i < (*(_self_))._field_Generics.len()); (_26913_i)++) {
		{
			if ((!(_1bc8418c7_Equal((*((*(_self_))._field_Generics[_26913_i]))._field_Kind, (*((*(_2569_s))._field_Generics[_26913_i]))._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_1c1385e51:;
	}
	_iter_end_1c1385e51:;;
	return true;;
}



inline jule::Bool _1bc5bec2c_Same(_1bc5be0b1_StructIns* _self_, jule::Ptr<_1bc5be0b1_StructIns> _28319_s) {
	if ((((*(_self_))._field_Decl != (*(_28319_s))._field_Decl) || ((*(_28319_s))._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1388904:;
		if (it != expr_end) {
			jule::I64 _28713_i = it - expr->begin();
			jule::Ptr<_1bc83e7d7_InsGeneric> *_28716_g = it;
			{
				jule::Ptr<_1bc83e7d7_InsGeneric> _28813_g2 = (*(_28319_s))._field_Generics[_28713_i];;
				if ((((*((*((*(_28716_g))))._field_Kind))._field_BindIdent != (*((*(_28813_g2))._field_Kind))._field_BindIdent) || (!(_1bc8418c7_Equal((*((*(_28716_g))))._field_Kind, (*(_28813_g2))._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1c1388904:;
			++it;
			_28713_i++;
			goto _iter_begin_1c1388904;
		}
		_iter_end_1c1388904:;
	};
	return true;;
}



inline jule::Ptr<_1ece1b092_Fn> _1bc5c0128_FindMethod(_1bc5be0b1_StructIns* _self_, jule::Str _29829_ident, jule::Bool _29841_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c138b462:;
		if (it != expr_end) {
			jule::Ptr<_1ece1b092_Fn> _29921_f = *it;
			{
				if ((((*(_29921_f))._field_Statically == _29841_statically) && ((*(_29921_f))._field_Ident == _29829_ident))) {
					return _29921_f;;
				};
			}
			_iter_next_1c138b462:;
			++it;
			goto _iter_begin_1c138b462;
		}
		_iter_end_1c138b462:;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc5bd511_FieldIns> _1bc5c0469_FindField(_1bc5be0b1_StructIns* _self_, jule::Str _30928_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c138c7b5:;
		if (it != expr_end) {
			jule::Ptr<_1bc5bd511_FieldIns> _31021_f = *it;
			{
				if (((*((*(_31021_f))._field_Decl))._field_Ident == _30928_ident)) {
					return _31021_f;;
				};
			}
			_iter_next_1c138c7b5:;
			++it;
			goto _iter_begin_1c138c7b5;
		}
		_iter_end_1c138c7b5:;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc7a750d_Var> _1bc5c07aa_FindStatic(_1bc5be0b1_StructIns* _self_, jule::Str _32029_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c138d84e:;
		if (it != expr_end) {
			jule::Ptr<_1bc7a750d_Var> _32121_v = *it;
			{
				if (((*(_32121_v))._field_Ident == _32029_ident)) {
					return _32121_v;;
				};
			}
			_iter_next_1c138d84e:;
			++it;
			goto _iter_begin_1c138d84e;
		}
		_iter_end_1c138d84e:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bc5be0b1_StructIns _Src) {
	_Stream << _1bc5be435_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1eeea092c_Cmd> static__1eeea0d4a_New(jule::Str _2619_path) {
	return jule::new_ptr<_1eeea092c_Cmd>(_1eeea092c_Cmd{._field_path=_2619_path, });;
}



inline jule::VoidExceptional _1eeea1048_Spawn(_1eeea092c_Cmd* _self_) {
	({
		auto except = _1eeea503b_spawn(_self_);
		if (!except.ok()) {
			return jule::VoidExceptional{.error=std::move(except.error)};
		}
	});
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _1eeea14cc_Wait(_1eeea092c_Cmd* _self_) {
	return jule::Exceptional<jule::I64>{.result=static_cast<jule::I64>(({
		auto except = _1eeea54c0_wait(_self_);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::I64>{.error=except.error};
		} 0;});
	}))};;
}



inline jule::VoidExceptional _1eeea503b_spawn(_1eeea092c_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess != nullptr)) {
		jule::panic(jule::Str::lit("command is already spawned", 26) + jule::Str("\nlocation: std/process/cmd_windows.jule:43:13"));;
	};
	STARTUPINFOW _4513_startupInfo = (STARTUPINFOW){};;
	PROCESS_INFORMATION _4613_processInfo = (PROCESS_INFORMATION){};;
	{
		ZeroMemory((&(_4513_startupInfo)), static_cast<jule::U64>(sizeof(_4513_startupInfo)));
		ZeroMemory((&(_4613_processInfo)), static_cast<jule::U64>(sizeof(_4613_processInfo)));
	};
	_4513_startupInfo.cb=static_cast<jule::U64>(sizeof(_4513_startupInfo));
	jule::Slice<jule::Str> _5213_args = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len()));;
	_5213_args[0LL]=(*(_self_))._field_path;
	(_5213_args).append((*(_self_))._field_Args);;
	jule::Slice<jule::U16> _559_argv = _2309ee170_UTF16FromStr(_1eeea5b41_makeCmdLine(_5213_args));;
	jule::Slice<jule::U16> _569_env = ({
		auto except = _1eeea601a_createEnvBlock((*(_self_))._field_Env);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional{.error=std::move(except.error)};
		} jule::Slice<jule::U16>(nullptr);});
	});;
	jule::U16* _5713_envp = (&(_569_env[0LL]));;
	if (((*(_self_))._field_Env.len() == 0LL)) {
		_5713_envp=nullptr;
	};
	;
	{
		if ((CreateProcessW(nullptr, ((wchar_t*)((&(_559_argv[0LL])))), nullptr, nullptr, 0LL, 1024LLU, _5713_envp, nullptr, (&(_4513_startupInfo)), (&(_4613_processInfo))) == 0LL)) {
			return jule::VoidExceptional{.error=jule::Any(_1eeea726e_getLastProcessError(), &__jule_any_type0)};
		};
	};
	(*(_self_))._field_attrs._field_hProcess=_4613_processInfo.hProcess;
	(*(_self_))._field_attrs._field_hThread=_4613_processInfo.hThread;
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _1eeea54c0_wait(_1eeea092c_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess == nullptr)) {
		jule::panic(jule::Str::lit("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_windows.jule:86:13"));;
	};
	{
		WaitForSingleObject((*(_self_))._field_attrs._field_hProcess, INFINITE);
	};
	__jule_unsigned_long _8913_exitCode = static_cast<__jule_unsigned_long>(4294967295LLU);;
	{
		GetExitCodeProcess((*(_self_))._field_attrs._field_hProcess, (&(_8913_exitCode)));
		_230a28ac3_CloseHandle(static_cast<jule::Uintptr>(((jule::Uintptr)((*(_self_))._field_attrs._field_hProcess))));
		_230a28ac3_CloseHandle(static_cast<jule::Uintptr>(((jule::Uintptr)((*(_self_))._field_attrs._field_hThread))));
	};
	(*(_self_))._field_attrs._field_hProcess=nullptr;
	(*(_self_))._field_attrs._field_hThread=nullptr;
	return jule::Exceptional<jule::I64>{.result=static_cast<jule::I64>(static_cast<jule::I64>(_8913_exitCode))};;
}





std::ostream &operator<<(std::ostream &_Stream, _1eeea092c_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "attrs:" << _Src._field_attrs << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}



inline jule::I32 _2309ed207_DecodeRune(jule::I32 _6815_r1, jule::I32 _6825_r2) {
	if (((((55296LL <= _6815_r1) && (_6815_r1 < 56320LL)) && (56320LL <= _6825_r2)) && (_6825_r2 < 57344LL))) {
		return static_cast<jule::I32>(((((_6815_r1 - 55296LL) << 10LL) | (_6825_r2 - 56320LL)) + 65536LL));;
	};
	return 65533LL;;
}



inline __jule_tuple_i32__jule_tuple_i32 _2309ed4c1_EncodeRune(jule::I32 _7819_r) {
	__jule_tuple_i32__jule_tuple_i32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((_7819_r < 65536LL) || (_7819_r > 1114111LL))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 65533LL;
		return __jule_func_result;;
	};
	_7819_r-=65536LL;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((55296LL + ((_7819_r >> 10LL) & 1023LL)));
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>((56320LL + (_7819_r & 1023LL)));
	return __jule_func_result;;
}



inline jule::Slice<jule::U16> _2309ed812_Encode(jule::Slice<jule::I32> _8711_s) {
	jule::I64 _889_n = _8711_s.len();;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdec062b:;
		if (it != expr_end) {
			jule::I32 *_8912_v = it;
			{
				if (((*(_8912_v)) >= 65536LL)) {
					(_889_n)++;
				};
			}
			_iter_next_1bdec062b:;
			++it;
			goto _iter_begin_1bdec062b;
		}
		_iter_end_1bdec062b:;
	};
	jule::Slice<jule::U16> _959_a = jule::Slice<jule::U16>::alloc(_889_n, _889_n, 0);;
	_889_n=0LL;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdebe075:;
		if (it != expr_end) {
			jule::I32 *_9712_v = it;
			{
				{
					
					if (((0LL <= (*(_9712_v))) && ((*(_9712_v)) < 55296LL)) || ((57344LL <= (*(_9712_v))) && ((*(_9712_v)) < 65536LL))) {
						_case_begin_1bdec251d:;
						{
							_959_a[_889_n]=static_cast<jule::U16>(static_cast<jule::U16>((*(_9712_v))));
							(_889_n)++;
						}
					}
					else if (((65536LL <= (*(_9712_v))) && ((*(_9712_v)) <= 1114111LL))) {
						_case_begin_1bdec2430:;
						{
							jule::I32 _10513_r1 = 0;;
							jule::I32 _10517_r2 = 0;;
							({
								__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _2309ed4c1_EncodeRune((*(_9712_v)));
								_10513_r1 = __jule_assign_result.__jule_result_arg0;
								_10517_r2 = __jule_assign_result.__jule_result_arg1;
							});
							_959_a[_889_n]=static_cast<jule::U16>(static_cast<jule::U16>(_10513_r1));
							_959_a[(_889_n + 1LL)]=static_cast<jule::U16>(static_cast<jule::U16>(_10517_r2));
							_889_n+=2LL;
						}
					}
					else {
						_case_begin_1bdec2089:;
						{
							_959_a[_889_n]=static_cast<jule::U16>(65533LLU);
							(_889_n)++;
						}
					}
					_match_end_1bdec1ebd:;
				};
			}
			_iter_next_1bdebe075:;
			++it;
			goto _iter_begin_1bdebe075;
		}
		_iter_end_1bdebe075:;
	};
	return _959_a.slice(0LL, _889_n);;
}



inline jule::Slice<jule::I32> _2309edacb_Decode(jule::Slice<jule::U16> _11911_s) {
	jule::Slice<jule::I32> _1209_a = jule::Slice<jule::I32>::alloc(_11911_s.len(), _11911_s.len(), 0);;
	jule::I64 _1219_n = 0LL;;
	jule::I64 _1229_i = 0LL;;
	for (; (_1229_i < _11911_s.len()); (_1229_i)++) {
		{
			jule::U16 _1249_r = _11911_s[_1229_i];;
			{
				
				if ((_1249_r < 55296LLU) || (57344LL <= _1249_r)) {
					_case_begin_1bdec6b0a:;
					{
						_1209_a[_1219_n]=static_cast<jule::I32>(static_cast<jule::I32>(_1249_r));
					}
				}
				else if (((((_1249_r < 56320LLU) && ((_1229_i + 1LL) < _11911_s.len())) && (56320LL <= _11911_s[(_1229_i + 1LL)])) && (_11911_s[(_1229_i + 1LL)] < 57344LLU))) {
					_case_begin_1bdec6885:;
					{
						_1209_a[_1219_n]=static_cast<jule::I32>(_2309ed207_DecodeRune(static_cast<jule::I32>(static_cast<jule::I32>(_1249_r)), static_cast<jule::I32>(static_cast<jule::I32>(_11911_s[(_1229_i + 1LL)]))));
						(_1229_i)++;
					}
				}
				else {
					_case_begin_1bdec64de:;
					{
						_1209_a[_1219_n]=65533LL;
					}
				}
				_match_end_1bdec6478:;
			};
			(_1219_n)++;
		}
	_iter_next_1bdec5103:;
	}
	_iter_end_1bdec5103:;;
	return _1209_a.slice(0LL, _1219_n);;
}



inline jule::Slice<jule::U16> _2309ede1c_AppendRune(jule::Slice<jule::U16> _14919_a, jule::I32 _14929_r) {
	{
		
		if (((0LL <= _14929_r) && (_14929_r < 55296LL)) || ((57344LL <= _14929_r) && (_14929_r < 65536LL))) {
			_case_begin_1bdec969b:;
			{
				return jule::append(_14919_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(static_cast<jule::U16>(_14929_r))}));;
			}
		}
		else if (((65536LL <= _14929_r) && (_14929_r <= 1114111LL))) {
			_case_begin_1bdec9723:;
			{
				jule::I32 _1569_r1 = 0;;
				jule::I32 _15613_r2 = 0;;
				({
					__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _2309ed4c1_EncodeRune(_14929_r);
					_1569_r1 = __jule_assign_result.__jule_result_arg0;
					_15613_r2 = __jule_assign_result.__jule_result_arg1;
				});
				return jule::append(_14919_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(static_cast<jule::U16>(_1569_r1)),static_cast<jule::U16>(static_cast<jule::U16>(_15613_r2))}));;
			}
		}
		_match_end_1bdec959c:;
	};
	return jule::append(_14919_a,jule::Slice<jule::U16>::make({65533LLU}));;
}



inline jule::Slice<jule::U16> _2309ee170_UTF16FromStr(jule::Str _1417_s) {
	;
	jule::Slice<jule::I32> _205_runes = static_cast<jule::Slice<jule::I32>>(_1417_s);;
	jule::Slice<jule::U16> _219_buff = jule::Slice<jule::U16>::alloc(0LL, _205_runes.len(), 0);;
	{
		auto expr = &(_205_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bded5300:;
		if (it != expr_end) {
			jule::I32 *_2212_r = it;
			{
				if (((*(_2212_r)) == 0LL)) {
					goto _iter_end_1bded5300;
				};
				_219_buff=_2309ede1c_AppendRune(_219_buff, (*(_2212_r)));
			}
			_iter_next_1bded5300:;
			++it;
			goto _iter_begin_1bded5300;
		}
		_iter_end_1bded5300:;
	};
	return _2309ede1c_AppendRune(_219_buff, 0LL);;
}



inline jule::Str _2309ee47d_UTF16ToStr(jule::Slice<jule::U16> _3415_s) {
	if ((_3415_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _389_codePage = _3415_s;;
	{
		auto expr = &(_3415_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bded7962:;
		if (it != expr_end) {
			jule::I64 _399_i = it - expr->begin();
			jule::U16 *_3912_v = it;
			{
				if (((*(_3912_v)) == 0LLU)) {
					(_389_codePage).mut_slice(0LL, _399_i);;
					goto _iter_end_1bded7962;
				};
			}
			_iter_next_1bded7962:;
			++it;
			_399_i++;
			goto _iter_begin_1bded7962;
		}
		_iter_end_1bded7962:;
	};
	return static_cast<jule::Str>(_2309edacb_Decode(_389_codePage));;
}



inline jule::Str _2309ee747_U16PtrToStr(jule::U16* _5023_s) {
	if ((_5023_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _5513_codePage;;
	jule::I64 _569_i = 0LL;;
	for (; ; (_569_i)++) {
		{
			jule::U16 _589_r = _5023_s[_569_i];;
			if ((_589_r == 0LLU)) {
				return static_cast<jule::Str>(_2309edacb_Decode(_5513_codePage));;
			};
			{ jule::Slice<jule::U16> &__jule_push_dest = _5513_codePage; __jule_push_dest.push(_589_r); };
		}
	_iter_next_1bded890d:;
	}
	_iter_end_1bded890d:;;
	return jule::Str();;
}



inline jule::I64 _223064da8_GetLastErrno(void) {
	return errno;;
}



inline jule::Uintptr _230a28809_GetStdHandle(jule::Uintptr _6417_stdh) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)(GetStdHandle(_6417_stdh))));;
}



inline jule::Bool _230a28ac3_CloseHandle(jule::Uintptr _6523_stdh) {
	return CloseHandle(((void*)(_6523_stdh)));;
}



inline jule::I64 _230a28e47_Wstat(jule::U16* _6817_path, struct _stat* _6833_stat) {
	return static_cast<jule::I64>(_wstat(((wchar_t*)(_6817_path)), _6833_stat));;
}



inline jule::I64 _230a29376_Wopen(jule::U16* _7317_path, jule::I64 _7329_flag, jule::I64 _7340_mode) {
	return static_cast<jule::I64>(_wopen(((wchar_t*)((&(_7317_path[0LL])))), _7329_flag, _7340_mode));;
}



inline jule::U32 _230a29585_GetLastError(void) {
	return static_cast<jule::U32>(GetLastError());;
}



inline jule::U32 _230a29909_GetCurrentDirectory(jule::U32 _8231_bufflen, jule::U16* _8249_buff) {
	return static_cast<jule::U32>(GetCurrentDirectoryW(_8231_bufflen, ((wchar_t*)(_8249_buff))));;
}



inline jule::Bool _230a29e8c_DeleteFile(jule::U16* _9322_path) {
	return DeleteFileW(((wchar_t*)(_9322_path)));;
}



inline jule::Bool _230a2a256_CreateDirectory(jule::U16* _9827_path) {
	return CreateDirectoryW(((wchar_t*)(_9827_path)), nullptr);;
}



inline jule::Bool _230a2a520_RemoveDirectory(jule::U16* _10327_path) {
	return RemoveDirectoryW(((wchar_t*)(_10327_path)));;
}



inline jule::U32 _230a2aa09_GetFullPathName(jule::U16* _10827_path, jule::U32 _10839_bufflen, jule::U16* _1095_buff, jule::U16** _10917_fname) {
	return static_cast<jule::U32>(GetFullPathNameW(((wchar_t*)(_10827_path)), _10839_bufflen, ((wchar_t*)(_1095_buff)), ((wchar_t**)(_10917_fname))));;
}



inline jule::Bool _230a2ad7d_GetConsoleMode(jule::Uintptr _11419_handle, jule::I64* _11440_mode) {
	return GetConsoleMode(((HANDLE)(_11419_handle)), ((DWORD*)(_11440_mode)));;
}



inline jule::Bool _230a2b455_SetConsoleMode(jule::Uintptr _11919_handle, jule::I64 _11935_mode) {
	return SetConsoleMode(((HANDLE)(_11919_handle)), static_cast<DWORD>(_11935_mode));;
}



inline jule::Bool _230a2b9d8_WriteConsole(jule::Uintptr _12424_handle, jule::U16* _12440_buffer, jule::I64 _12454_toWrite, jule::I64* _12510_written, void* _12524_reserved) {
	return WriteConsoleW(((HANDLE)(_12424_handle)), ((void*)(_12440_buffer)), static_cast<DWORD>(_12454_toWrite), ((DWORD*)((*(_12510_written)))), _12524_reserved);;
}



inline jule::Bool _230a2bec2_ReadConsole(jule::Uintptr _13223_handle, jule::U16* _13243_buffer, jule::I64 _13257_toRead, jule::I64* _13310_readed) {
	return ReadConsoleW(((HANDLE)(_13223_handle)), ((void*)(_13243_buffer)), static_cast<DWORD>(_13257_toRead), ((DWORD*)(_13310_readed)), nullptr);;
}



inline jule::Uintptr _230a2c555_FindFirstFile(jule::U16* _14425_path, WIN32_FIND_DATAW* _14441_data) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)(FindFirstFileW(((wchar_t*)(_14425_path)), _14441_data))));;
}



inline jule::I64 _230a2c8c9_FindNextFile(jule::Uintptr _14924_h, WIN32_FIND_DATAW* _14939_data) {
	return static_cast<jule::I64>(FindNextFileW(((HANDLE)(_14924_h)), _14939_data));;
}



inline jule::I64 _230a2cb93_FindClose(jule::Uintptr _15414_h) {
	return static_cast<jule::I64>(FindClose(((HANDLE)(_15414_h))));;
}



inline jule::I64 _230a2eca5_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n) {
	return static_cast<jule::I64>(read(_2016_handle, _2033_buff, _2048_n));;
}



inline jule::I64 _230a3014b_Close(jule::I64 _2510_handle) {
	return static_cast<jule::I64>(close(_2510_handle));;
}



inline jule::I64 _230a3057a_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n) {
	return static_cast<jule::I64>(write(_2817_handle, _2830_buff, _2845_n));;
}



inline void _230a307ab_Exit(jule::I64 _339_code) {
	exit(_339_code);
}



inline __jule_tuple_i32__jule_tuple_int _2095d15e7_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1865_p0 = _18215_p[0LL];;
	jule::U8 _1875_x = _2095d044d_first[static_cast<jule::I64>(_1865_p0)];;
	if ((_1875_x >= 240LLU)) {
		jule::I32 _1929_mask = static_cast<jule::I32>(((_1875_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_18215_p[0LL]) & (~(_1929_mask))) | (65533LL & _1929_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _1955_sz = static_cast<jule::I64>((_1875_x & 7LLU));;
	_2095d09d1_acceptRange _1965_accept = _2095d0cde_acceptRanges[static_cast<jule::I64>((_1875_x >> 4LLU))];;
	if ((_18215_p.len() < _1955_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2005_b1 = _18215_p[1LL];;
	if (((_2005_b1 < _1965_accept._field_lo) || (_1965_accept._field_hi < _2005_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1955_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_1865_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2005_b1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2075_b2 = _18215_p[2LL];;
	if (((_2075_b2 < 128LLU) || (191LL < _2075_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1955_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_1865_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2005_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2075_b2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2145_b3 = _18215_p[3LL];;
	if (((_2145_b3 < 128LLU) || (191LL < _2145_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_1865_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2005_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2075_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2145_b3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _2095d1938_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2335_s0 = _22918_s[0LL];;
	jule::U8 _2345_x = _2095d044d_first[static_cast<jule::I64>(_2335_s0)];;
	if ((_2345_x >= 240LLU)) {
		jule::I32 _2399_mask = static_cast<jule::I32>(((_2345_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_22918_s[0LL]) & (~(_2399_mask))) | (65533LL & _2399_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _2425_sz = static_cast<jule::I64>((_2345_x & 7LLU));;
	_2095d09d1_acceptRange _2435_accept = _2095d0cde_acceptRanges[static_cast<jule::I64>((_2345_x >> 4LLU))];;
	if ((_22918_s.len() < _2425_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2475_s1 = _22918_s[1LL];;
	if (((_2475_s1 < _2435_accept._field_lo) || (_2435_accept._field_hi < _2475_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2425_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_2335_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2475_s1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2545_s2 = _22918_s[2LL];;
	if (((_2545_s2 < 128LLU) || (191LL < _2545_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2425_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_2335_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2475_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2545_s2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2615_s3 = _22918_s[3LL];;
	if (((_2615_s3 < 128LLU) || (191LL < _2615_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_2335_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2475_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2545_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2615_s3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _2095d1ebb_DecodeLastRuneStr(jule::Str _31722_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_31722_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I64 _3215_end = _31722_s.len();;
	jule::I64 _3229_start = (_3215_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(static_cast<jule::I32>(_31722_s[_3229_start]));
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _3309_lim = (_3215_end - 4LL);;
	if ((_3309_lim < 0LL)) {
		_3309_lim=0LL;
	};
	(_3229_start)--;
	for (; (_3229_start >= _3309_lim); (_3229_start)--) {
		{
			if (_2095d372b_RuneStart(_31722_s[_3229_start])) {
				goto _iter_end_1be087c21;
			};
		}
	_iter_next_1be087c21:;
	}
	_iter_end_1be087c21:;;
	if ((_3229_start < 0LL)) {
		_3229_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2095d1938_DecodeRuneStr(_31722_s.slice(_3229_start, _3215_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3229_start + __jule_func_result.__jule_result_arg1) != _3215_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::I64 _2095d2285_RuneLen(jule::I32 _35212_r) {
	{
		
		if ((_35212_r < 0LL)) {
			_case_begin_1be089a58:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 127LL)) {
			_case_begin_1be089ad0:;
			{
				return 1LL;;
			}
		}
		else if ((_35212_r <= 2047LL)) {
			_case_begin_1be089b57:;
			{
				return 2LL;;
			}
		}
		else if (((55296LL <= _35212_r) && (_35212_r <= 57343LL))) {
			_case_begin_1be089bce:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 65535LL)) {
			_case_begin_1be089e32:;
			{
				return 3LL;;
			}
		}
		else if ((_35212_r <= 1114111LL)) {
			_case_begin_1be089ea9:;
			{
				return 4LL;;
			}
		}
		else {
			_case_begin_1be0899d1:;
			{
				return -1LL;;
			}
		}
		_match_end_1be089937:;
	};
}



inline jule::I64 _2095d26d6_EncodeRune(jule::Slice<jule::U8> _37419_p, jule::I32 _37434_r) {
	jule::U32 _3765_i = static_cast<jule::U32>(_37434_r);;
	{
		
		if ((_3765_i <= 127LLU)) {
			_case_begin_1be08eee2:;
			{
				_37419_p[0LL]=static_cast<jule::U8>(static_cast<jule::U8>(_37434_r));
				return 1LL;;
			}
		}
		else if ((_3765_i <= 2047LLU)) {
			_case_begin_1be08c9d4:;
			{
				_37419_p[0LL]=static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_37434_r >> 6LL))));
				_37419_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU)));
				return 2LL;;
			}
		}
		else if ((_3765_i > 1114111LLU) || ((55296LL <= _3765_i) && (_3765_i <= 57343LLU))) {
			_case_begin_1be08ed16:;
			{
				_37434_r=65533LL;
				goto _case_begin_1be08ed7c;
			}
		}
		else if ((_3765_i <= 65535LLU)) {
			_case_begin_1be08ed7c:;
			{
				_37419_p[0LL]=static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_37434_r >> 12LL))));
				_37419_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU)));
				_37419_p[2LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU)));
				return 3LL;;
			}
		}
		else {
			_case_begin_1be08c63d:;
			{
				_37419_p[0LL]=static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_37434_r >> 18LL))));
				_37419_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37434_r >> 12LL)) & 63LLU)));
				_37419_p[2LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU)));
				_37419_p[3LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU)));
				return 4LL;;
			}
		}
		_match_end_1be08c5c7:;
	};
}



inline jule::Slice<jule::U8> _2095d2a5a_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40530_r))}));;
	};
	return _2095d2dce_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _2095d2dce_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4145_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4145_i <= 2047LLU)) {
			_case_begin_1be09778b:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41242_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else if ((_4145_i > 1114111LLU) || ((55296LL <= _4145_i) && (_4145_i <= 57343LLU))) {
			_case_begin_1be097aaa:;
			{
				_41242_r=128LL;
				goto _case_begin_1be095723;
			}
		}
		else if ((_4145_i <= 65535LLU)) {
			_case_begin_1be095723:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41242_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else {
			_case_begin_1be0956ac:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41242_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		_match_end_1be095646:;
	};
}



inline jule::I64 _2095d3462_RuneCountStr(jule::Str _47317_s) {
	jule::I64 __jule_func_result = 0;
	jule::I64 _4749_i = 0LL;;
	for (; (_4749_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _47613_c = _47317_s[_4749_i];;
			if ((_47613_c < 128LLU)) {
				(_4749_i)++;
				goto _iter_next_1be0a1795;
			};
			jule::U8 _4829_x = _2095d044d_first[static_cast<jule::I64>(_47613_c)];;
			if ((_4829_x == 241LLU)) {
				(_4749_i)++;
				goto _iter_next_1be0a1795;
			};
			jule::I64 _48713_size = static_cast<jule::I64>((_4829_x & 7LLU));;
			if (((_4749_i + _48713_size) > _47317_s.len())) {
				(_4749_i)++;
				goto _iter_next_1be0a1795;
			};
			_2095d09d1_acceptRange _4929_accept = _2095d0cde_acceptRanges[static_cast<jule::I64>((_4829_x >> 4LLU))];;
			_47613_c=_47317_s[(_4749_i + 1LL)];
			if (((_47613_c < _4929_accept._field_lo) || (_4929_accept._field_hi < _47613_c))) {
				_48713_size=1LL;
			} else if ((_48713_size == 2LL)) {
			} else {
				_47613_c=_47317_s[(_4749_i + 2LL)];
				if (((_47613_c < 128LLU) || (191LL < _47613_c))) {
					_48713_size=1LL;
				} else if ((_48713_size == 3LL)) {
				} else {
					_47613_c=_47317_s[(_4749_i + 3LL)];
					if (((_47613_c < 128LLU) || (191LL < _47613_c))) {
						_48713_size=1LL;
					};
				};
			};
			_4749_i+=_48713_size;
		}
	_iter_next_1be0a1795:;
	}
	_iter_end_1be0a1795:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _2095d372b_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::Str _209697878_Str(jule::U8* _108_b, jule::I64 _1018_n) {
	jule::Str _119_s = jule::Str();;
	{
		_119_s.buffer = jule::Ptr<jule::U8>::make(_108_b, nullptr);
		_119_s._len = _1018_n;
		_119_s._slice = _108_b;
	};
	return _119_s;;
}



inline jule::Slice<jule::U8> _1be0b60b2_Slice(jule::U8* _2316_e, jule::I64 _2326_n) {
	jule::Slice<jule::U8> _249_buf = static_cast<jule::Slice<jule::U8>>(nullptr);;
	{
		_249_buf.data = jule::Ptr<jule::U8>::make(_2316_e, nullptr);
		_249_buf._len = _2326_n;
		_249_buf._cap = _2326_n;
		_249_buf._slice = _2316_e;
	};
	return _249_buf;;
}



inline jule::Slice<jule::U8> _2096a3620_StrBytes(jule::Str _4113_s) {
	if ((_4113_s.len() == 0LL)) {
		return nullptr;;
	};
	return _1be0b60b2_Slice((&(_4113_s[0LL])), static_cast<jule::I64>(_4113_s.len()));;
}



inline jule::Str _2096a38d9_BytesStr(jule::Slice<jule::U8> _5013_b) {
	if ((_5013_b.len() == 0LL)) {
		return jule::Str();;
	};
	return _209697878_Str((&(_5013_b[0LL])), static_cast<jule::I64>(_5013_b.len()));;
}



inline jule::Str _2096a3ba3_StrFromBytes(jule::Slice<jule::U8> _5817_b) {
	return (*(((jule::Str*)((&(_5817_b))))));;
}



inline jule::I64 _2096d78c9_getLastOsErrorWindows(void) {
	jule::U32 _165_err = _230a29585_GetLastError();;
	{
		auto &_match_expr{ _165_err };
		
		if (_match_expr == 5LL) {
			_case_begin_1be0cb0a5:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1be0ccc77:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1be0cccdd:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 123LL) {
			_case_begin_1be0ccd54:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else {
			_case_begin_1be0cb1e8:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		_match_end_1be0cb193:;
	};
}



inline jule::Slice<jule::Str> _2096d8963_Args(void) {
	return jule::args();;
}



inline jule::Exceptional<jule::Str> _2096d8e08_WorkingDir(void) {
	return jule::Exceptional<jule::Str>{.result=({
		auto except = _2096d9843_getwd();
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Str>{.error=except.error};
		} jule::Str();});
	})};;
}



inline jule::Exceptional<jule::Str> _2096d9843_getwd(void) {
	jule::Array<jule::U16,261> _1513_buf = jule::Array<jule::U16,261>(0);;
	jule::U32 _165_n = _230a29909_GetCurrentDirectory(static_cast<jule::U32>(261LLU), (&(_1513_buf[0LL])));;
	if ((_165_n == 0LLU)) {
		return jule::Exceptional<jule::Str>{.error=jule::Any(_2096d78c9_getLastOsErrorWindows(), &__jule_any_type0)};
	};
	return jule::Exceptional<jule::Str>{.result=_2309ee747_U16PtrToStr((&(_1513_buf[0LL])))};;
}



inline jule::Bool _1ed57948b_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_1ed5d95c8__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _1ed5e2bca_isExcludingLatin(_1ed5836e8_Letter, _7613_r);;
}



inline jule::Bool _1ed5e204d_is16(jule::Slice<_1ed5e02b0_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c0958db5:;
			if (it != expr_end) {
				jule::I64 _19313_i = it - expr->begin();
				{
					_1ed5e02b0_Range16* _19413_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < (*(_19413_range))._field_Lo)) {
							return false;;
						};
						if ((_19128_r <= (*(_19413_range))._field_Hi)) {
							return (((*(_19413_range))._field_Stride == 1LLU) || (jule::mod((_19128_r - (*(_19413_range))._field_Lo),(*(_19413_range))._field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1c0958db5:;
				++it;
				_19313_i++;
				goto _iter_begin_1c0958db5;
			}
			_iter_end_1c0958db5:;
		};
		return false;;
	};
	jule::I64 _2089_lo = 0LL;;
	jule::I64 _2099_hi = _1919_ranges.len();;
	while ((_2089_lo < _2099_hi)) {
		{
			jule::I64 _2119_m = (_2089_lo + ((_2099_hi - _2089_lo) >> 1LLU));;
			_1ed5e02b0_Range16* _2129_range = (&(_1919_ranges[_2119_m]));;
			{
				if ((((*(_2129_range))._field_Lo <= _19128_r) && (_19128_r <= (*(_2129_range))._field_Hi))) {
					return (((*(_2129_range))._field_Stride == 1LLU) || (jule::mod((_19128_r - (*(_2129_range))._field_Lo),(*(_2129_range))._field_Stride) == 0LLU));;
				};
				if ((_19128_r < (*(_2129_range))._field_Lo)) {
					_2099_hi=_2119_m;
				} else {
					_2089_lo=static_cast<jule::I64>((_2119_m + 1LL));
				};
			};
		}
	_iter_next_1c0957ad9:;
	}
	_iter_end_1c0957ad9:;;
	return false;;
}



inline jule::Bool _1ed5e23c2_is32(jule::Slice<_1ed5e07dd_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c095bec8:;
			if (it != expr_end) {
				jule::I64 _23013_i = it - expr->begin();
				{
					_1ed5e07dd_Range32* _23113_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < (*(_23113_range))._field_Lo)) {
							return false;;
						};
						if ((_22828_r <= (*(_23113_range))._field_Hi)) {
							return (((*(_23113_range))._field_Stride == 1LLU) || (jule::mod((_22828_r - (*(_23113_range))._field_Lo),(*(_23113_range))._field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1c095bec8:;
				++it;
				_23013_i++;
				goto _iter_begin_1c095bec8;
			}
			_iter_end_1c095bec8:;
		};
		return false;;
	};
	jule::I64 _2459_lo = 0LL;;
	jule::I64 _2469_hi = _2289_ranges.len();;
	while ((_2459_lo < _2469_hi)) {
		{
			jule::I64 _2489_m = (_2459_lo + ((_2469_hi - _2459_lo) >> 1LLU));;
			_1ed5e07dd_Range32* _2499_range = (&(_2289_ranges[_2489_m]));;
			{
				if ((((*(_2499_range))._field_Lo <= _22828_r) && (_22828_r <= (*(_2499_range))._field_Hi))) {
					return (((*(_2499_range))._field_Stride == 1LLU) || (jule::mod((_22828_r - (*(_2499_range))._field_Lo),(*(_2499_range))._field_Stride) == 0LLU));;
				};
				if ((_22828_r < (*(_2499_range))._field_Lo)) {
					_2469_hi=_2489_m;
				} else {
					_2459_lo=static_cast<jule::I64>((_2489_m + 1LL));
				};
			};
		}
	_iter_next_1c095bd74:;
	}
	_iter_end_1c095bd74:;;
	return false;;
}



inline jule::Bool _1ed5e2bca_isExcludingLatin(jule::Ptr<_1ed5e0c94_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_1ed5e02b0_Range16> *_28010_R16 = &((*(_27821_rangeTab))._field_R16);;
		jule::I64 _2829_off = (*(_27821_rangeTab))._field_LatinOffset;;
		if ((((*(_28010_R16)).len() > _2829_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_28010_R16))[((*(_28010_R16)).len() - 1LL)]._field_Hi)))) {
			return _1ed5e204d_is16((*(_28010_R16)).slice(_2829_off), static_cast<jule::U16>(static_cast<jule::U16>(_27844_r)));;
		};
	};
	jule::Slice<_1ed5e07dd_Range32> *_2876_R32 = &((*(_27821_rangeTab))._field_R32);;
	if ((((*(_2876_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_2876_R32))[0LL]._field_Lo)))) {
		return _1ed5e23c2_is32((*(_2876_R32)), static_cast<jule::U32>(static_cast<jule::U32>(_27844_r)));;
	};
	return false;;
}



inline jule::Bool _1ed5e2e94_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_1ed5d95c8__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _1ed5e2bca_isExcludingLatin(_1ed589c4e_Upper, _29512_r);;
}



inline jule::I64 _1ed63855b_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b) {
	jule::U8* _469_it = _4535_end;;
	for (; (_469_it >= _4517_begin); (_469_it)--) {
		{
			{
				if (((*(_469_it)) == _4547_b)) {
					return static_cast<jule::I64>(((jule::I64)((_469_it - _4517_begin))));;
				};
			};
		}
	_iter_next_1c0975e04:;
	}
	_iter_end_1c0975e04:;;
	return -1LL;;
}



inline jule::I64 _1ed638bdd_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b) {
	{
		auto expr = &(_6816_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0977642:;
		if (it != expr_end) {
			jule::I64 _709_i = it - expr->begin();
			jule::U8 *_7012_se = it;
			{
				if (((*(_7012_se)) == _6824_b)) {
					return _709_i;;
				};
			}
			_iter_next_1c0977642:;
			++it;
			_709_i++;
			goto _iter_begin_1c0977642;
		}
		_iter_end_1c0977642:;
	};
	return -1LL;;
}



inline jule::I64 _1ed639062_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b) {
	if ((_7920_s.len() == 0LL)) {
		return -1LL;;
	};
	return static_cast<jule::I64>(_1ed63855b_findLastByte((&(_7920_s[0LL])), (&(_7920_s[(_7920_s.len() - 1LL)])), _7928_b));;
}



inline jule::Str _1ed63935e_Repeat(jule::Str _1111_s, jule::I64 _1123_n) {
	if ((_1123_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1111_s.len() > jule::div(jule::MAX_I64,_1123_n))) {
		jule::panic(jule::Str::lit("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:16:9"));;
	};
	_2096a4489_StrBuilder _189_ss = static__2096a48da_New(static_cast<jule::I64>((_1111_s.len() * _1123_n)));;
	for (; (_1123_n > 0LL); (_1123_n)--) {
		{
			_2096a4e4b_WriteStr(&_189_ss, _1111_s);
		}
	_iter_next_1c098a039:;
	}
	_iter_end_1c098a039:;;
	return _2096a5743_Str(&_189_ss);;
}



inline jule::Bool _1ed6397d2_hasPrefix(jule::Str* _2515_s, jule::Str* _2524_sub, jule::I64 _2538_start) {
	if ((((*(_2524_sub)).len() == 0LL) || (((*(_2515_s)).len() - _2538_start) < (*(_2524_sub)).len()))) {
		return false;;
	};
	jule::I64 _309_i = 0LL;;
	for (; (_309_i < (*(_2524_sub)).len()); ({
		jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_309_i + 1LL));
		jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_2538_start + 1LL));
		_309_i = ___jule_assign_arg;
		_2538_start = _1___jule_assign_arg;
	})) {
		{
			if (((*(_2515_s))[_2538_start] != (*(_2524_sub))[_309_i])) {
				return false;;
			};
		}
	_iter_next_1c098cd83:;
	}
	_iter_end_1c098cd83:;;
	return true;;
}



inline jule::Bool _1ed639b56_HasPrefix(jule::Str _4014_s, jule::Str _4022_sub) {
	return _1ed6397d2_hasPrefix(&(_4014_s), &(_4022_sub), 0LL);;
}



inline jule::Bool _1ed63a10c_hasSuffix(jule::Str* _4415_s, jule::Str* _4424_sub, jule::I64 _4438_start) {
	if ((((*(_4424_sub)).len() == 0LL) || (((*(_4415_s)).len() - _4438_start) < (*(_4424_sub)).len()))) {
		return false;;
	};
	_4438_start=static_cast<jule::I64>(((*(_4415_s)).len() - _4438_start));
	jule::I64 _509_i = 0LL;;
	for (; (_509_i < (*(_4424_sub)).len()); (_509_i)++) {
		{
			if (((*(_4415_s))[((_4438_start - _509_i) - 1LL)] != (*(_4424_sub))[(((*(_4424_sub)).len() - _509_i) - 1LL)])) {
				return false;;
			};
		}
	_iter_next_1c098ebcb:;
	}
	_iter_end_1c098ebcb:;;
	return true;;
}



inline jule::Bool _1ed63a44d_HasSuffix(jule::Str _6014_s, jule::Str _6022_sub) {
	return _1ed63a10c_hasSuffix(&(_6014_s), &(_6022_sub), 0LL);;
}



inline jule::I64 _1ed63a87c_FindAt(jule::Str _6811_s, jule::Str _6819_sub, jule::I64 _6833_i) {
	if ((((_6833_i < 0LL) || (_6811_s.len() < _6819_sub.len())) || (_6819_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_6833_i < _6811_s.len()); (_6833_i)++) {
		{
			if (_1ed6397d2_hasPrefix(&(_6811_s), &(_6819_sub), _6833_i)) {
				return _6833_i;;
			};
		}
	_iter_next_1c0992aad:;
	}
	_iter_end_1c0992aad:;;
	return -1LL;;
}



inline jule::I64 _1ed63ac01_Find(jule::Str _839_s, jule::Str _8317_sub) {
	return static_cast<jule::I64>(_1ed63a87c_FindAt(_839_s, _8317_sub, 0LL));;
}



inline jule::I64 _1ed63b240_FindLastAt(jule::Str _9115_s, jule::Str _9123_sub, jule::I64 _9133_i) {
	jule::I64 _929_j = ((_9133_i - _9123_sub.len()) + 1LL);;
	if (((((_9123_sub.len() == 0LL) || (_9133_i < 0LL)) || (_9133_i >= _9115_s.len())) || (_929_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_1c0995dd0:;
	for (; (_929_j >= 0LL); (_929_j)--) {
		{
			jule::I64 _9813_k = _929_j;;
			jule::I64 _9913_z = 0LL;;
			for (; (_9913_z < _9123_sub.len()); ({
				jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_9813_k + 1LL));
				jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_9913_z + 1LL));
				_9813_k = ___jule_assign_arg;
				_9913_z = _1___jule_assign_arg;
			})) {
				{
					if ((_9115_s[_9813_k] != _9123_sub[_9913_z])) {
						goto _iter_next_1c0995a4a;
					};
				}
			_iter_next_1c0996bc2:;
			}
			_iter_end_1c0996bc2:;;
			return _929_j;;
		}
	_iter_next_1c0995a4a:;
	}
	_iter_end_1c0995a4a:;;
	return -1LL;;
}



inline jule::I64 _1ed63b5b4_FindLast(jule::Str _11313_s, jule::Str _11321_sub) {
	return static_cast<jule::I64>(_1ed63b240_FindLastAt(_11313_s, _11321_sub, static_cast<jule::I64>((_11313_s.len() - 1LL))));;
}



inline jule::I64 _1ed63cd13_FindLastByte(jule::Str _17717_s, jule::U8 _17725_b) {
	return static_cast<jule::I64>(_1ed639062_FindLastByteStr(_17717_s, _17725_b));;
}



inline jule::I64 _1ed63d341_FindRune(jule::Str _18413_s, jule::I32 _18421_r) {
	jule::I64 _1859_i = 0LL;;
	while ((_1859_i < _18413_s.len())) {
		{
			jule::I32 _1879_br = 0;;
			jule::I64 _18713_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2095d1938_DecodeRuneStr(_18413_s.slice(_1859_i));
				_1879_br = __jule_assign_result.__jule_result_arg0;
				_18713_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_18421_r == _1879_br)) {
				return _1859_i;;
			};
			_1859_i+=_18713_n;
		}
	_iter_next_1c099e5e2:;
	}
	_iter_end_1c099e5e2:;;
	return -1LL;;
}



inline jule::I64 _1ed63da39_FindAny(jule::Str _21412_s, jule::Str _21420_runes) {
	jule::I64 _2159_i = 0LL;;
	while ((_2159_i < _21412_s.len())) {
		{
			jule::I32 _2179_r = 0;;
			jule::I64 _21712_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2095d1938_DecodeRuneStr(_21412_s.slice(_2159_i));
				_2179_r = __jule_assign_result.__jule_result_arg0;
				_21712_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1ed63d341_FindRune(_21420_runes, _2179_r) != -1LL)) {
				return _2159_i;;
			};
			_2159_i+=_21712_n;
		}
	_iter_next_1c09a26b1:;
	}
	_iter_end_1c09a26b1:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _1ed63e2dc_Split(jule::Str _24410_s, jule::Str _24418_sub, jule::I64 _24432_n) {
	jule::I64 _2459_cap = _24432_n;;
	if ((_24432_n < 0LL)) {
		_2459_cap=16LLU;
	};
	jule::Slice<jule::Str> _2499_parts = jule::Slice<jule::Str>::alloc(0LL, _2459_cap);;
	if ((_24432_n == 0LL)) {
		return _2499_parts;;
	};
	if ((_24432_n < 0LL)) {
		_24432_n=static_cast<jule::I64>(_24410_s.len());
	};
	jule::I64 _2569_i = 0LL;;
	for (; (_24432_n > 0LL); (_24432_n)--) {
		{
			jule::I64 _2589_j = _1ed63a87c_FindAt(_24410_s, _24418_sub, _2569_i);;
			if ((_2589_j == -1LL)) {
				goto _iter_end_1c09a76a5;
			};
			{ jule::Slice<jule::Str> &__jule_push_dest = _2499_parts; __jule_push_dest.push(_24410_s.slice(_2569_i, _2589_j)); };
			_2569_i=static_cast<jule::I64>((_2589_j + _24418_sub.len()));
		}
	_iter_next_1c09a76a5:;
	}
	_iter_end_1c09a76a5:;;
	if (((_24432_n > 0LL) && (_2569_i < _24410_s.len()))) {
		{ jule::Slice<jule::Str> &__jule_push_dest = _2499_parts; __jule_push_dest.push(_24410_s.slice(_2569_i)); };
	};
	return _2499_parts;;
}



inline jule::Bool _1ed63e661_Contains(jule::Str _27213_s, jule::Str _27221_sub) {
	return (_1ed63a87c_FindAt(_27213_s, _27221_sub, 0LL) != -1LL);;
}



inline jule::Bool _1ed6401cd_ContainsAny(jule::Str _28716_s, jule::Str _28724_runes) {
	return (_1ed63da39_FindAny(_28716_s, _28724_runes) != -1LL);;
}



inline jule::I64 _1ed640552_Count(jule::Str _29310_s, jule::Str _29318_sub) {
	if ((_29318_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _2979_n = 0LL;;
	jule::I64 _2989_i = 0LL;;
	for (;;) {
		{
			jule::I64 _3009_j = _1ed63a87c_FindAt(_29310_s, _29318_sub, _2989_i);;
			if ((_3009_j == -1LL)) {
				goto _iter_end_1c02d24ca;
			};
			(_2979_n)++;
			_2989_i=static_cast<jule::I64>((_3009_j + _29318_sub.len()));
		}
	_iter_next_1c02d24ca:;
	}
	_iter_end_1c02d24ca:;;
	return _2979_n;;
}



inline jule::Str _1ed640a3b_Replace(jule::Str _31312_s, jule::Str _31320_sub, jule::Str _31330_new, jule::I64 _31344_n) {
	if (((_31344_n == 0LL) || (_31320_sub == _31330_new))) {
		return _31312_s;;
	};
	jule::I64 _3185_m = _1ed640552_Count(_31312_s, _31320_sub);;
	if ((_3185_m == 0LL)) {
		return _31312_s;;
	};
	if (((_31344_n < 0LL) || (_3185_m < _31344_n))) {
		_31344_n=_3185_m;
	};
	_2096a4489_StrBuilder _3269_ss = static__2096a48da_New(static_cast<jule::I64>(((_31312_s.len() + (_31344_n * (_31330_new.len() - _31320_sub.len()))) + 1LL)));;
	jule::I64 _3279_i = 0LL;;
	for (; (_31344_n > 0LL); (_31344_n)--) {
		{
			jule::I64 _3299_j = _1ed63a87c_FindAt(_31312_s, _31320_sub, _3279_i);;
			if ((_3299_j == -1LL)) {
				goto _iter_end_1c02d6116;
			};
			_2096a4e4b_WriteStr(&_3269_ss, _31312_s.slice(_3279_i, _3299_j));
			_2096a4e4b_WriteStr(&_3269_ss, _31330_new);
			_3279_i=static_cast<jule::I64>((_3299_j + _31320_sub.len()));
		}
	_iter_next_1c02d6116:;
	}
	_iter_end_1c02d6116:;;
	_2096a4e4b_WriteStr(&_3269_ss, _31312_s.slice(_3279_i));
	return _2096a5743_Str(&_3269_ss);;
}



inline jule::Str _1ed6417b7_TrimLeft(jule::Str _37017_s, jule::Str _37025_cutset) {
	jule::I64 _3719_i = 0LL;;
	while ((_3719_i < _37017_s.len())) {
		{
			jule::I32 _3739_r = 0;;
			jule::I64 _37312_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2095d1938_DecodeRuneStr(_37017_s.slice(_3719_i));
				_3739_r = __jule_assign_result.__jule_result_arg0;
				_37312_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1ed63d341_FindRune(_37025_cutset, _3739_r) == -1LL)) {
				return _37017_s.slice(_3719_i);;
			};
			_3719_i+=_37312_n;
		}
	_iter_next_1c02db160:;
	}
	_iter_end_1c02db160:;;
	return jule::Str();;
}



inline jule::Str _1ed641b3b_TrimRight(jule::Str _38414_s, jule::Str _38422_cutset) {
	jule::I64 _3859_i = _38414_s.len();;
	while ((_3859_i > 0LL)) {
		{
			jule::I32 _3879_r = 0;;
			jule::I64 _38712_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2095d1ebb_DecodeLastRuneStr(_38414_s.slice(0LL, _3859_i));
				_3879_r = __jule_assign_result.__jule_result_arg0;
				_38712_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1ed63d341_FindRune(_38422_cutset, _3879_r) == -1LL)) {
				return _38414_s.slice(0LL, _3859_i);;
			};
			_3859_i-=_38712_n;
		}
	_iter_next_1c02db36e:;
	}
	_iter_end_1c02db36e:;;
	return jule::Str();;
}



inline jule::Str _1ed642213_Trim(jule::Str _3989_s, jule::Str _39817_cutset) {
	return _1ed6417b7_TrimLeft(_1ed641b3b_TrimRight(_3989_s, _39817_cutset), _39817_cutset);;
}



inline jule::Bool _2096a702a_IsPathSep(jule::U8 _4914_c) {
	return ((_4914_c == 92LLU) || (_4914_c == '/'));;
}



inline jule::Bool _2096a7338_isSlash(jule::U8 _5312_c) {
	return ((_5312_c == '\\') || (_5312_c == '/'));;
}



inline jule::U8 _2096a7602_toUpper(jule::U8 _5512_c) {
	if ((('a' <= _5512_c) && (_5512_c <= 'z'))) {
		return static_cast<jule::U8>((_5512_c - 32LL));;
	};
	return _5512_c;;
}



inline jule::I64 _2096a7c0c_volumeNameLen(jule::Str _8318_path) {
	if ((_8318_path.len() < 2LL)) {
		return 0LL;;
	};
	jule::U8 _885_c = _8318_path[0LL];;
	if (((_8318_path[1LL] == ':') && ((('a' <= _885_c) && (_885_c <= 'z')) || (('A' <= _885_c) && (_885_c <= 'Z'))))) {
		return 2LL;;
	};
	if (((!(_2096a7338_isSlash(_8318_path[0LL]))) || (!(_2096a7338_isSlash(_8318_path[1LL]))))) {
		return 0LL;;
	};
	jule::Str _965_p1;;
	jule::Str _9613_rest;;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2096a7ec6_cutPath(_8318_path.slice(2LL));
		_965_p1 = __jule_assign_result.__jule_result_arg0;
		_9613_rest = __jule_assign_result.__jule_result_arg1;
	});
	jule::Str _979_p2 = jule::Str();;
	jule::Bool _989_ok = false;;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2096a7ec6_cutPath(_9613_rest);
		_979_p2 = __jule_assign_result.__jule_result_arg0;
		_9613_rest = __jule_assign_result.__jule_result_arg1;
		_989_ok = __jule_assign_result.__jule_result_arg2;
	});
	if ((!(_989_ok))) {
		return static_cast<jule::I64>(_8318_path.len());;
	};
	if (((!_965_p1.equal(".", 1)) && (!_965_p1.equal("?", 1)))) {
		return static_cast<jule::I64>(((_8318_path.len() - _9613_rest.len()) - 1LL));;
	};
	if (((((_979_p2.len() == 3LL) && (_2096a7602_toUpper(_979_p2[0LL]) == 'U')) && (_2096a7602_toUpper(_979_p2[1LL]) == 'N')) && (_2096a7602_toUpper(_979_p2[2LL]) == 'C'))) {
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2096a7ec6_cutPath(_9613_rest);
			_9613_rest = __jule_assign_result.__jule_result_arg1;
		});
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2096a7ec6_cutPath(_9613_rest);
			_9613_rest = __jule_assign_result.__jule_result_arg1;
			_989_ok = __jule_assign_result.__jule_result_arg2;
		});
		if ((!(_989_ok))) {
			return static_cast<jule::I64>(_8318_path.len());;
		};
	};
	return static_cast<jule::I64>(((_8318_path.len() - _9613_rest.len()) - 1LL));;
}



inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _2096a7ec6_cutPath(jule::Str _12012_path) {
	__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg2 = false;
	{
		auto expr = &(_12012_path);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c03068c8:;
		if (it != expr_end) {
			jule::I64 _1219_i = it - expr->begin();
			{
				if (_2096a7338_isSlash(_12012_path[_1219_i])) {
					__jule_func_result.__jule_result_arg0 = _12012_path.slice(0LL, _1219_i);
					__jule_func_result.__jule_result_arg1 = _12012_path.slice((_1219_i + 1LL));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1c03068c8:;
			++it;
			_1219_i++;
			goto _iter_begin_1c03068c8;
		}
		_iter_end_1c03068c8:;
	};
	__jule_func_result.__jule_result_arg0 = _12012_path;
	__jule_func_result.__jule_result_arg1 = jule::Str();
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _2096a8290_fullPath(jule::Str _12913_name) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::U16> _1305_utf16Name = _2309ee170_UTF16FromStr(_12913_name);;
	jule::U16* _1315_p = (&(_1305_utf16Name[0LL]));;
	jule::U32 _1329_n = static_cast<jule::U32>(100LLU);;
	for (;;) {
		{
			jule::Slice<jule::U16> _13413_buf = jule::Slice<jule::U16>::alloc(static_cast<jule::I64>(_1329_n), static_cast<jule::I64>(_1329_n), 0);;
			_1329_n=static_cast<jule::U32>(_230a2aa09_GetFullPathName(_1315_p, static_cast<jule::U32>(static_cast<jule::U32>(_13413_buf.len())), (&(_13413_buf[0LL])), nullptr));
			if ((_1329_n == 0LLU)) {
				__jule_func_result.__jule_result_arg0 = jule::Str();
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			};
			if ((_1329_n <= static_cast<jule::U32>(_13413_buf.len()))) {
				__jule_func_result.__jule_result_arg0 = _2309ee47d_UTF16ToStr(_13413_buf.slice(0LL, static_cast<jule::I64>(_1329_n)));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			};
		}
	_iter_next_1c0308a62:;
	}
	_iter_end_1c0308a62:;;
	__jule_func_result.__jule_result_arg0 = jule::Str();
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _2096a8636_abs(jule::Str _14612_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_14612_path).empty()) {
		_14612_path=jule::Str::lit(".", 1);
	};
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2096a8290_fullPath(_14612_path);
		_14612_path = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(__jule_func_result.__jule_result_arg1))) {
		__jule_func_result.__jule_result_arg0 = jule::Str();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _1ed64439c_Clean(_14612_path);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _2096a8900_join(jule::Slice<jule::Str> _16013_elem) {
	_2096a4489_StrBuilder _1619_s = static__2096a48da_New(16LL);;
	jule::U8 _1629_lastChar = static_cast<jule::U8>(0LLU);;
	{
		auto expr = &(_16013_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c030b933:;
		if (it != expr_end) {
			jule::Str _16317_e = *it;
			{
				{
					
					if ((_2096a5bc7_Len(&_1619_s) == 0LL)) {
						_case_begin_1c030d935:;
					}
					else if (_2096a7338_isSlash(_1629_lastChar)) {
						_case_begin_1c030dd31:;
						{
							while (((_16317_e.len() > 0LL) && _2096a7338_isSlash(_16317_e[0LL]))) {
								{
									(_16317_e).mut_slice(1LL);;
								}
							_iter_next_1c030e480:;
							}
							_iter_end_1c030e480:;;
						}
					}
					else if ((_1629_lastChar == ':')) {
						_case_begin_1c030d605:;
					}
					else {
						_case_begin_1c030d58e:;
						{
							_2096a5204_WriteByte(&_1619_s, '\\');
							_1629_lastChar='\\';
						}
					}
					_match_end_1c030d4d4:;
				};
				if ((_16317_e.len() > 0LL)) {
					_2096a4e4b_WriteStr(&_1619_s, _16317_e);
					_1629_lastChar=_16317_e[(_16317_e.len() - 1LL)];
				};
			}
			_iter_next_1c030b933:;
			++it;
			goto _iter_begin_1c030b933;
		}
		_iter_end_1c030b933:;
	};
	if ((_2096a5bc7_Len(&_1619_s) == 0LL)) {
		return jule::Str();;
	};
	return _1ed64439c_Clean(_2096a5743_Str(&_1619_s));;
}



inline jule::Str _1ed64439c_Clean(jule::Str _10914_path) {
	jule::Str _1105_originalPath = _10914_path;;
	jule::I64 _1115_volLen = _2096a7c0c_volumeNameLen(_10914_path);;
	(_10914_path).mut_slice(_1115_volLen);;
	if ((_10914_path).empty()) {
		if ((((_1115_volLen > 1LL) && _2096a702a_IsPathSep(_1105_originalPath[0LL])) && _2096a702a_IsPathSep(_1105_originalPath[1LL]))) {
			return _1ed644974_FromSlash(_1105_originalPath);;
		};
		return (_1105_originalPath + jule::Str::lit(".", 1));;
	};
	jule::Bool _1205_rooted = _2096a702a_IsPathSep(_10914_path[0LL]);;
	jule::I64 _1275_n = _10914_path.len();;
	_1ed643511_lazyBuff _1289_out = _1ed643511_lazyBuff{._field_path=_10914_path, ._field_volAndPath=_1105_originalPath, ._field_volLen=_1115_volLen};;
	jule::I64 _1339_r = 0;;
	jule::I64 _13316_dotdot = 0;;
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		_1339_r = ___jule_assign_arg;
		_13316_dotdot = _1___jule_assign_arg;
	});
	if (_1205_rooted) {
		_1ed643c4d_append(&_1289_out, 92LLU);
		({
			jule::I64 ___jule_assign_arg = 1LL;
			jule::I64 _1___jule_assign_arg = 1LL;
			_1339_r = ___jule_assign_arg;
			_13316_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_1339_r < _1275_n)) {
		{
			{
				
				if (_2096a702a_IsPathSep(_10914_path[_1339_r])) {
					_case_begin_1c0318c3c:;
					{
						(_1339_r)++;
					}
				}
				else if (((_10914_path[_1339_r] == '.') && (((_1339_r + 1LL) == _1275_n) || _2096a702a_IsPathSep(_10914_path[(_1339_r + 1LL)])))) {
					_case_begin_1c0315761:;
					{
						(_1339_r)++;
					}
				}
				else if ((((_10914_path[_1339_r] == '.') && (_10914_path[(_1339_r + 1LL)] == '.')) && (((_1339_r + 2LL) == _1275_n) || _2096a702a_IsPathSep(_10914_path[(_1339_r + 2LL)])))) {
					_case_begin_1c03157c7:;
					{
						_1339_r+=2LL;
						{
							
							if ((_1289_out._field_w > _13316_dotdot)) {
								_case_begin_1c031bca6:;
								{
									(_1289_out._field_w)--;
									while (((_1289_out._field_w > _13316_dotdot) && (!(_2096a702a_IsPathSep(static_cast<jule::U8>(_1ed643995_index(&_1289_out, _1289_out._field_w))))))) {
										{
											(_1289_out._field_w)--;
										}
									_iter_next_1c031c537:;
									}
									_iter_end_1c031c537:;;
								}
							}
							else if ((!(_1205_rooted))) {
								_case_begin_1c031bd2d:;
								{
									if ((_1289_out._field_w > 0LL)) {
										_1ed643c4d_append(&_1289_out, 92LLU);
									};
									_1ed643c4d_append(&_1289_out, '.');
									_1ed643c4d_append(&_1289_out, '.');
									_13316_dotdot=_1289_out._field_w;
								}
							}
							_match_end_1c031b9cb:;
						};
					}
				}
				else {
					_case_begin_1c03156ea:;
					{
						if (((_1205_rooted && (_1289_out._field_w != 1LL)) || ((!(_1205_rooted)) && (_1289_out._field_w != 0LL)))) {
							_1ed643c4d_append(&_1289_out, 92LLU);
						};
						if ((((_1289_out._field_w == 0LL) && (_1289_out._field_volLen == 0LL)) && (_1339_r != 0LL))) {
							jule::I64 _17621_i = _1339_r;;
							for (; ((_17621_i < _1275_n) && (!(_2096a702a_IsPathSep(_10914_path[_17621_i])))); (_17621_i)++) {
								{
									if ((_10914_path[_17621_i] == ':')) {
										_1ed643c4d_append(&_1289_out, '.');
										_1ed643c4d_append(&_1289_out, 92LLU);
										goto _iter_end_1c03171be;
									};
								}
							_iter_next_1c03171be:;
							}
							_iter_end_1c03171be:;;
						};
						for (; ((_1339_r < _1275_n) && (!(_2096a702a_IsPathSep(_10914_path[_1339_r])))); (_1339_r)++) {
							{
								_1ed643c4d_append(&_1289_out, _10914_path[_1339_r]);
							}
						_iter_next_1c0318731:;
						}
						_iter_end_1c0318731:;;
					}
				}
				_match_end_1c03153cb:;
			};
		}
	_iter_next_1c03137b4:;
	}
	_iter_end_1c03137b4:;;
	if ((_1289_out._field_w == 0LL)) {
		_1ed643c4d_append(&_1289_out, '.');
	};
	return _1ed644974_FromSlash(_1ed643ed4_string(&_1289_out));;
}



inline jule::Str _1ed644974_FromSlash(jule::Str _21214_path) {
	;
	return _1ed640a3b_Replace(_21214_path, jule::Str::lit("/", 1), jule::Str::lit("\\", 1), -1LL);;
}



inline jule::Str _1ed644c2c_Join(jule::Slice<jule::Str> _2269_elem) {
	return _2096a8900_join(_2269_elem);;
}



inline jule::Str _1ed644ee6_Ext(jule::Str _2318_path) {
	jule::I64 _2329_i = (_2318_path.len() - 1LL);;
	for (; ((_2329_i >= 0LL) && (!(_2096a702a_IsPathSep(_2318_path[_2329_i])))); (_2329_i)--) {
		{
			if ((_2318_path[_2329_i] == '.')) {
				return _2318_path.slice(_2329_i);;
			};
		}
	_iter_next_1c0320804:;
	}
	_iter_end_1c0320804:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _1ed6452b0_Abs(jule::Str _2468_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Str _2475_abs_path;;
	jule::Bool _24715_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2096a8636_abs(_2468_path);
		_2475_abs_path = __jule_assign_result.__jule_result_arg0;
		_24715_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _2475_abs_path;
	__jule_func_result.__jule_result_arg1 = _24715_ok;
	return __jule_func_result;;
}



inline jule::Str _1ed645579_Base(jule::Str _25513_path) {
	if ((_25513_path).empty()) {
		return jule::Str::lit(".", 1);;
	};
	while (((_25513_path.len() > 0LL) && _2096a702a_IsPathSep(_25513_path[(_25513_path.len() - 1LL)]))) {
		{
			(_25513_path).mut_slice(0LL, (_25513_path.len() - 1LL));;
		}
	_iter_next_1c0322bad:;
	}
	_iter_end_1c0322bad:;;
	(_25513_path).mut_slice(_1ed645bd9_VolumeName(_25513_path).len());;
	jule::I64 _2669_i = (_25513_path.len() - 1LL);;
	while (((_2669_i >= 0LL) && (!(_2096a702a_IsPathSep(_25513_path[_2669_i]))))) {
		{
			(_2669_i)--;
		}
	_iter_next_1c032464e:;
	}
	_iter_end_1c032464e:;;
	if ((_2669_i >= 0LL)) {
		(_25513_path).mut_slice((_2669_i + 1LL));;
	};
	if ((_25513_path).empty()) {
		return jule::Str::lit("\\", 1);;
	};
	return _25513_path;;
}



inline jule::Str _1ed645920_Dir(jule::Str _2868_path) {
	jule::Str _2875_vol = _1ed645bd9_VolumeName(_2868_path);;
	jule::I64 _2889_i = (_2868_path.len() - 1LL);;
	while (((_2889_i >= _2875_vol.len()) && (!(_2096a702a_IsPathSep(_2868_path[_2889_i]))))) {
		{
			(_2889_i)--;
		}
	_iter_next_1c032672d:;
	}
	_iter_end_1c032672d:;;
	jule::Str _2925_dir = _1ed64439c_Clean(_2868_path.slice(_2875_vol.len(), (_2889_i + 1LL)));;
	if ((_2925_dir.equal(".", 1) && (_2875_vol.len() > 2LL))) {
		return _2875_vol;;
	};
	return (_2875_vol + _2925_dir);;
}



inline jule::Str _1ed645bd9_VolumeName(jule::Str _30415_path) {
	return _1ed644974_FromSlash(_30415_path.slice(0LL, _2096a7c0c_volumeNameLen(_30415_path)));;
}



inline jule::I64 _230a40d3d_getLastFsError(void) {
	jule::I64 _725_err = _223064da8_GetLastErrno();;
	{
		auto &_match_expr{ _725_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1c033993e:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1c0339114:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_1c0339301:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_1c0339367:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1c03393cd:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1c0339444:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 132LL) {
			_case_begin_1c0339a71:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1c0339ad7:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1c0339b4d:;
			{
				return static_cast<jule::I64>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1c0339bb4:;
			{
				return static_cast<jule::I64>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1c0339c3b:;
			{
				return static_cast<jule::I64>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1c0339cb3:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1c0339d3a:;
			{
				return static_cast<jule::I64>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1c0339db2:;
			{
				return static_cast<jule::I64>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1c0339e39:;
			{
				return static_cast<jule::I64>(14LL);;
			}
		}
		else if (_match_expr == 124LL) {
			_case_begin_1c0339eb1:;
			{
				return static_cast<jule::I64>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1c033a038:;
			{
				return static_cast<jule::I64>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1c033a0b0:;
			{
				return static_cast<jule::I64>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1c033a137:;
			{
				return static_cast<jule::I64>(18LL);;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1c033a1ae:;
			{
				return static_cast<jule::I64>(19LL);;
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_1c033a236:;
			{
				return static_cast<jule::I64>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1c033a2ad:;
			{
				return static_cast<jule::I64>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1c033a335:;
			{
				return static_cast<jule::I64>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1c033a3ac:;
			{
				return static_cast<jule::I64>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1c033a434:;
			{
				return static_cast<jule::I64>(24LL);;
			}
		}
		else if (_match_expr == 119LL) {
			_case_begin_1c033a4ab:;
			{
				return static_cast<jule::I64>(25LL);;
			}
		}
		else if (_match_expr == 104LL) {
			_case_begin_1c033a533:;
			{
				return static_cast<jule::I64>(26LL);;
			}
		}
		else if (_match_expr == 41LL) {
			_case_begin_1c033a5aa:;
			{
				return static_cast<jule::I64>(27LL);;
			}
		}
		else {
			_case_begin_1c033928a:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1c0339235:;
	};
}



inline jule::Bool _2095d551e_isConsoleHandle(jule::Uintptr _11320_handle) {
	return (((_11320_handle == _230a28034_STDIN) || (_11320_handle == _230a282ed_STDOUT)) || (_11320_handle == _230a28584_STDERR));;
}



inline void _1eeea5877_appendEscapeArg(_2096a4489_StrBuilder* _10225_s, jule::Str _10240_arg) {
	if ((_10240_arg.len() == 0LL)) {
		_2096a4e4b_WriteStr(_10225_s, jule::Str::lit("\"\"", 2));
		return;;
	};
	jule::Bool _1089_needsBackslash = false;;
	jule::Bool _1099_hasSpace = false;;
	jule::I64 _1109_i = 0LL;;
	for (; (_1109_i < _10240_arg.len()); (_1109_i)++) {
		{
			{
				auto &_match_expr{ _10240_arg[_1109_i] };
				
				if (_match_expr == '\"' || _match_expr == '\\') {
					_case_begin_1c0a6a2e5:;
					{
						_1089_needsBackslash=true;
					}
				}
				else if (_match_expr == ' ' || _match_expr == '\t') {
					_case_begin_1c0a6a36c:;
					{
						_1099_hasSpace=true;
					}
				}
				_match_end_1c0a6a207:;
			};
		}
	_iter_next_1c0a69bb8:;
	}
	_iter_end_1c0a69bb8:;;
	if (((!(_1089_needsBackslash)) && (!(_1099_hasSpace)))) {
		_2096a4e4b_WriteStr(_10225_s, _10240_arg);
		return;;
	};
	if ((!(_1089_needsBackslash))) {
		_2096a5204_WriteByte(_10225_s, '\"');
		_2096a4e4b_WriteStr(_10225_s, _10240_arg);
		_2096a5204_WriteByte(_10225_s, '\"');
		return;;
	};
	if (_1099_hasSpace) {
		_2096a5204_WriteByte(_10225_s, '\"');
	};
	jule::I64 _1369_slashes = 0LL;;
	_1109_i=0LL;
	for (; (_1109_i < _10240_arg.len()); (_1109_i)++) {
		{
			jule::U8 _1399_c = _10240_arg[_1109_i];;
			{
				auto &_match_expr{ _1399_c };
				
				if (_match_expr == '\\') {
					_case_begin_1c0a6d1b6:;
					{
						(_1369_slashes)++;
					}
				}
				else if (_match_expr == '\"') {
					_case_begin_1c0a6d3c5:;
					{
						for (; (_1369_slashes > 0LL); (_1369_slashes)--) {
							{
								_2096a5204_WriteByte(_10225_s, '\\');
							}
						_iter_next_1c0a6d639:;
						}
						_iter_end_1c0a6d639:;;
						_2096a5204_WriteByte(_10225_s, '\\');
					}
				}
				else {
					_case_begin_1c0a6d35e:;
					{
						_1369_slashes=0LL;
					}
				}
				_match_end_1c0a6d309:;
			};
			_2096a5204_WriteByte(_10225_s, _1399_c);
		}
	_iter_next_1c0a6c76a:;
	}
	_iter_end_1c0a6c76a:;;
	if (_1099_hasSpace) {
		for (; (_1369_slashes > 0LL); (_1369_slashes)--) {
			{
				_2096a5204_WriteByte(_10225_s, '\\');
			}
		_iter_next_1c0a6d46e:;
		}
		_iter_end_1c0a6d46e:;;
		_2096a5204_WriteByte(_10225_s, '\"');
	};
}



inline jule::Str _1eeea5b41_makeCmdLine(jule::Slice<jule::Str> _16316_args) {
	_2096a4489_StrBuilder _1649_s = static__2096a48da_New(16LL);;
	{
		auto expr = &(_16316_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0a6cabc:;
		if (it != expr_end) {
			jule::Str *_16512_arg = it;
			{
				if ((_2096a5bc7_Len(&_1649_s) > 0LL)) {
					_2096a5204_WriteByte(&_1649_s, ' ');
				};
				_1eeea5877_appendEscapeArg(&(_1649_s), (*(_16512_arg)));
			}
			_iter_next_1c0a6cabc:;
			++it;
			goto _iter_begin_1c0a6cabc;
		}
		_iter_end_1c0a6cabc:;
	};
	return _2096a5743_Str(&_1649_s);;
}



inline jule::Exceptional<jule::Slice<jule::U16>> _1eeea601a_createEnvBlock(jule::Slice<jule::Str> _17919_env) {
	if ((_17919_env.len() == 0LL)) {
		return jule::Exceptional<jule::Slice<jule::U16>>{.result=_2309ed812_Encode(jule::Slice<jule::I32>::make({0LL,0LL}))};;
	};
	jule::I64 _1839_n = 0LL;;
	{
		auto expr = &(_17919_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0a72682:;
		if (it != expr_end) {
			jule::Str *_18412_s = it;
			{
				if ((_1ed638bdd_FindByteStr((*(_18412_s)), 0LLU) != -1LL)) {
					return jule::Exceptional<jule::Slice<jule::U16>>{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
				};
				_1839_n+=((*(_18412_s)).len() + 1LL);
			}
			_iter_next_1c0a72682:;
			++it;
			goto _iter_begin_1c0a72682;
		}
		_iter_end_1c0a72682:;
	};
	(_1839_n)++;
	jule::Slice<jule::U16> _1919_b = jule::Slice<jule::U16>::alloc(0LL, _1839_n, 0);;
	{
		auto expr = &(_17919_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0a68ada:;
		if (it != expr_end) {
			jule::Str *_19212_s = it;
			{
				{
					auto expr = static_cast<jule::Slice<jule::I32>>((*(_19212_s)));
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_1c0a74596:;
					if (it != expr_end) {
						jule::I32 _19316_c = *it;
						{
							_1919_b=_2309ede1c_AppendRune(_1919_b, _19316_c);
						}
						_iter_next_1c0a74596:;
						++it;
						goto _iter_begin_1c0a74596;
					}
					_iter_end_1c0a74596:;
				};
				_1919_b=_2309ede1c_AppendRune(_1919_b, 0LL);
			}
			_iter_next_1c0a68ada:;
			++it;
			goto _iter_begin_1c0a68ada;
		}
		_iter_end_1c0a68ada:;
	};
	_1919_b=_2309ede1c_AppendRune(_1919_b, 0LL);
	return jule::Exceptional<jule::Slice<jule::U16>>{.result=_1919_b};;
}



inline jule::I64 _1eeea704e_processErrorFromCode(jule::I64 _1125_code) {
	{
		auto &_match_expr{ _1125_code };
		
		if (_match_expr == 5LL) {
			_case_begin_1c0a72a4a:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 2LL || _match_expr == 3LL) {
			_case_begin_1c0a75399:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else {
			_case_begin_1c0a75333:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		_match_end_1c0a72d47:;
	};
}



inline jule::I64 _1eeea726e_getLastProcessError(void) {
	return _1eeea704e_processErrorFromCode(static_cast<jule::I64>(static_cast<jule::I64>(_230a29585_GetLastError())));;
}



inline void _1eeea7a88_Exit(jule::I64 _129_code) {
	_230a307ab_Exit(_129_code);
}



inline jule::Str _1eeea7c97_Executable(void) {
	return jule::executable();;
}



inline jule::Bool _1ed6ba313_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _1ed6ba5dd_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_1ed647801_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0a9719b:;
		if (it != expr_end) {
			jule::Str *_3212_validExt = it;
			{
				if ((_3121_ext == (*(_3212_validExt)))) {
					return true;;
				};
			}
			_iter_next_1c0a9719b:;
			++it;
			goto _iter_begin_1c0a9719b;
		}
		_iter_end_1c0a9719b:;
	};
	return false;;
}



inline jule::Bool _1ed6ba8a7_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_1ed647900_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0a98147:;
		if (it != expr_end) {
			jule::Str *_4512_e = it;
			{
				if ((_4118_ext == (*(_4512_e)))) {
					return true;;
				};
			}
			_iter_next_1c0a98147:;
			++it;
			goto _iter_begin_1c0a98147;
		}
		_iter_end_1c0a98147:;
	};
	{
		auto expr = &(_1ed6b86c9_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0a98983:;
		if (it != expr_end) {
			jule::Str *_5012_e = it;
			{
				if ((_4118_ext == (*(_5012_e)))) {
					return true;;
				};
			}
			_iter_next_1c0a98983:;
			++it;
			goto _iter_begin_1c0a98983;
		}
		_iter_end_1c0a98983:;
	};
	return false;;
}



inline jule::Str _1ed6c7d04_Logf(jule::Str _3229_fmt, jule::Slice<jule::Any> _32222_args) {
	return _1ed6c8794_applyFmt(_3229_fmt, _32222_args);;
}



inline jule::Str _1ed6c8112_argToStr(jule::Any _32613_arg) {
	{
		auto &_match_expr{ _32613_arg };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1c0a99027:;
			{
				return _32613_arg.cast<jule::Str>(&__jule_any_type4);;
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1c0a9a04a:;
			{
				return jule::Str::from_byte(_32613_arg.cast<jule::U8>(&__jule_any_type129));;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1c0a9a0b1:;
			{
				return jule::Str::from_rune(_32613_arg.cast<jule::I32>(&__jule_any_type6));;
			}
		}
		else {
			_case_begin_1c0a99973:;
			{
				return jule::Str::lit("<fmt?>", 6);;
			}
		}
		_match_end_1c0a9991d:;
	};
}



inline jule::I64 _1ed6c83cb_findNextFmt(jule::Str _33916_fmt) {
	{
		auto expr = &(_33916_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0a9a8ec:;
		if (it != expr_end) {
			jule::I64 _3409_i = it - expr->begin();
			jule::U8 *_34012_b = it;
			{
				if (((*(_34012_b)) == '@')) {
					return _3409_i;;
				};
			}
			_iter_next_1c0a9a8ec:;
			++it;
			_3409_i++;
			goto _iter_begin_1c0a9a8ec;
		}
		_iter_end_1c0a9a8ec:;
	};
	return -1LL;;
}



inline jule::Str _1ed6c8794_applyFmt(jule::Str _34817_fmt, jule::Slice<jule::Any> _34827_args) {
	_2096a4489_StrBuilder _3499_s = static__2096a48da_New(32LL);;
	{
		auto expr = &(_34827_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0a9c35a:;
		if (it != expr_end) {
			jule::Any *_35012_arg = it;
			{
				jule::I64 _3519_i = _1ed6c83cb_findNextFmt(_34817_fmt);;
				if ((_3519_i == -1LL)) {
					goto _iter_end_1c0a9c35a;
				};
				_2096a4e4b_WriteStr(&_3499_s, _34817_fmt.slice(0LL, _3519_i));
				_2096a4e4b_WriteStr(&_3499_s, _1ed6c8112_argToStr((*(_35012_arg))));
				(_34817_fmt).mut_slice((_3519_i + 1LL));;
			}
			_iter_next_1c0a9c35a:;
			++it;
			goto _iter_begin_1c0a9c35a;
		}
		_iter_end_1c0a9c35a:;
	};
	_2096a4e4b_WriteStr(&_3499_s, _34817_fmt);
	return _2096a5743_Str(&_3499_s);;
}



inline jule::Bool _1ed6c960d_IsTopDirective(jule::Str _2219_directive) {
	return (_2219_directive.equal("pass", 4) || _2219_directive.equal("build", 5));;
}



inline jule::Bool _1ed6caa60_IsWindows(jule::Str _3714_os) {
	return _3714_os.equal("windows", 7);;
}



inline jule::Bool _1ed6cad3a_IsDarwin(jule::Str _4013_os) {
	return _4013_os.equal("darwin", 6);;
}



inline jule::Bool _1ed6cb104_IsLinux(jule::Str _4312_os) {
	return _4312_os.equal("linux", 5);;
}



inline jule::Bool _1ed6cb445_IsI386(jule::Str _4611_arch) {
	return _4611_arch.equal("i386", 4);;
}



inline jule::Bool _1ed6cb70e_IsAmd64(jule::Str _4912_arch) {
	return _4912_arch.equal("amd64", 5);;
}



inline jule::Bool _1ed6cb9c8_IsArm64(jule::Str _5212_arch) {
	return _5212_arch.equal("arm64", 5);;
}



inline jule::Bool _1ed6cbc92_IsUnix(jule::Str _5511_os) {
	return (_1ed6cad3a_IsDarwin(_5511_os) || _1ed6cb104_IsLinux(_5511_os));;
}



inline jule::Bool _1ed6cc138_Is32Bit(jule::Str _5812_arch) {
	return _1ed6cb445_IsI386(_5812_arch);;
}



inline jule::Bool _1ed6cc402_Is64Bit(jule::Str _6112_arch) {
	return (_1ed6cb70e_IsAmd64(_6112_arch) || _1ed6cb9c8_IsArm64(_6112_arch));;
}



inline void _1eeea9073_init(void) {
	jule::Str _259_path = _1eeea7c97_Executable();;
	if ((_259_path).empty()) {
		jule::panic(jule::Str::lit("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_1eeea85a0_PathWd=({
			auto except = _2096d8e08_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str::lit("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_1eeea82e7_PathExec=_1ed645920_Dir(_259_path);
		_1eeea8094_PathStdlib=_1ed644c2c_Join(jule::Slice<jule::Str>::make({_1eeea82e7_PathExec,jule::Str::lit("..", 2),jule::Str::lit("std", 3)}));
		_1eeea88ad_PathApi=_1ed644c2c_Join(jule::Slice<jule::Str>::make({_1eeea82e7_PathExec,jule::Str::lit("..", 2),jule::Str::lit("api", 3),jule::Str::lit("jule.hpp", 8)}));
	};
}



inline jule::I64 _230cdb292_LeadingZeros64(jule::U64 _6119_x) {
	return static_cast<jule::I64>((64LL - _230ce3b90_Len64(_6119_x)));;
}



inline jule::I64 _230cdc1e9_TrailingZeros(jule::U64 _8318_x) {
	;
	return static_cast<jule::I64>(_230cdce20_TrailingZeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8318_x))));;
}



inline jule::I64 _230cdcb56_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_230cdb8ad__DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]));;
}



inline jule::I64 _230cdce20_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_230cdbe74__DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]));;
}



inline jule::I64 _230ce38c6_Len32(jule::U32 _35214_x) {
	jule::I64 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I64>(_35214_x)))));
	return __jule_func_result;;
}



inline jule::I64 _230ce3b90_Len64(jule::U64 _36614_x) {
	jule::I64 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I64>(_36614_x)))));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _230ce492c_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>(((_41510_x + _41518_y) + _41526_carry));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _230ce6236_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5015_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5025_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5035_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5045_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5055_w0 = (_5015_x0 * _5035_y0);;
	jule::U64 _5065_t = ((_5025_x1 * _5035_y0) + (_5055_w0 >> 32LLU));;
	jule::U64 _5079_w1 = (_5065_t & 4294967295LLU);;
	jule::U64 _5085_w2 = (_5065_t >> 32LLU);;
	_5079_w1+=(_5015_x0 * _5045_y1);
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>((((_5025_x1 * _5045_y1) + _5085_w2) + (_5079_w1 >> 32LLU)));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((_49910_x * _49918_y));
	return __jule_func_result;;
}



inline jule::U32 _1d4650a10_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _1d4650d1d_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _1d46510d7_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _1d4651428_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _1d46539d0_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1c0c0c7a6:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_230cee063_IsInf(_4714_f, 0LL) || _230ced958_IsNaN(_4714_f)) {
			_case_begin_1c0c0c82d:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1c0c0c6c9:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _230cee32c_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _569_x = _1d46510d7_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I64>(((_569_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_569_x=static_cast<jule::U64>((_569_x & 9227875636482146303LLU));
	_569_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1d4651428_F64FromBits(_569_x));
	return __jule_func_result;;
}



inline jule::F64 _230ced64a_NaN(void) {
	return static_cast<jule::F64>(_1d4651428_F64FromBits(9221120237041090561LLU));;
}



inline jule::Bool _230ced958_IsNaN(jule::F64 _5210_f) {
	return false;;
}



inline jule::F64 _230cedc22_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return static_cast<jule::F64>(_1d4651428_F64FromBits(9218868437227405312LLU));;
	};
	return static_cast<jule::F64>(_1d4651428_F64FromBits(18442240474082181120LLU));;
}



inline jule::Bool _230cee063_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _230cee32c_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_230d01807_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((_8214_x * 4503599627370496LLU));
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _230d00d12_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_230ced958_IsNaN(_1118_x) || _230cee063_IsInf(_1118_x, 1LL)) {
			_case_begin_1c0c4ad11:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1c0c4ad88:;
			{
				return static_cast<jule::F64>(_230ced64a_NaN());;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1c0c4ae10:;
			{
				return static_cast<jule::F64>(_230cedc22_Inf(-1LL));;
			}
		}
		_match_end_1c0c4ac45:;
	};
	jule::F64 _1339_f1 = 0;;
	jule::I64 _13317_ki = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1d46539d0_Frexp(_1118_x);
		_1339_f1 = __jule_assign_result.__jule_result_arg0;
		_13317_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1339_f1 < 0.7071067811865476)) {
		_1339_f1*=2LL;
		(_13317_ki)--;
	};
	jule::F64 _1385_f = (_1339_f1 - 1LL);;
	jule::F64 _1395_k = static_cast<jule::F64>(_13317_ki);;
	jule::F64 _1425_s = jule::div(_1385_f,(2LL + _1385_f));;
	jule::F64 _1435_s2 = (_1425_s * _1425_s);;
	jule::F64 _1445_s4 = (_1435_s2 * _1435_s2);;
	jule::F64 _1455_t1 = (_1435_s2 * (0.6666666666666735 + (_1445_s4 * (0.2857142874366239 + (_1445_s4 * (0.1818357216161805 + (_1445_s4 * 0.14798198605116586)))))));;
	jule::F64 _1465_t2 = (_1445_s4 * (0.3999999999940942 + (_1445_s4 * (0.22222198432149784 + (_1445_s4 * 0.15313837699209373)))));;
	jule::F64 _1475_R = (_1455_t1 + _1465_t2);;
	jule::F64 _1485_hfsq = ((0.5 * _1385_f) * _1385_f);;
	return static_cast<jule::F64>(((_1395_k * 0.6931471803691238) - ((_1485_hfsq - ((_1425_s * (_1485_hfsq + _1475_R)) + (_1395_k * 0.00000000019082149292705877))) - _1385_f)));;
}



inline jule::F64 _230d01807_Abs(jule::F64 _438_x) {
	return static_cast<jule::F64>(_1d4651428_F64FromBits(static_cast<jule::U64>((_1d46510d7_F64Bits(_438_x) & 9223372036854775807LLU))));;
}



inline __jule_tuple_f64__jule_tuple_f64 _230d08501_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _465_absF = _230d01807_Abs(_449_f);;
	jule::F64 _479_i = 0LL;;
	if ((_465_absF > 4503599627370496LL)) {
		_479_i=_449_f;
	} else {
		_479_i=static_cast<jule::F64>((_465_absF + 4503599627370496LL));
		_479_i-=4503599627370496LL;
		while ((_479_i > _465_absF)) {
			{
				(_479_i)--;
			}
		_iter_next_1c0aa4c58:;
		}
		_iter_end_1c0aa4c58:;;
		if ((_449_f < 0LL)) {
			_479_i=static_cast<jule::F64>((-(_479_i)));
		};
	};
	__jule_func_result.__jule_result_arg0 = _479_i;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::F64>((_449_f - _479_i));
	return __jule_func_result;;
}



inline jule::F64 _230d08d09_Log2(jule::F64 _449_x) {
	jule::F64 _455_frac = 0;;
	jule::I64 _4511_exp = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1d46539d0_Frexp(_449_x);
		_455_frac = __jule_assign_result.__jule_result_arg0;
		_4511_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_455_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4511_exp - 1LL)));;
	};
	return static_cast<jule::F64>(((_230d00d12_Log(_455_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4511_exp)));;
}



inline jule::Str _230d332ea_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I64 _7932_prec, jule::I64 _7943_bitSize) {
	return _2096a3ba3_StrFromBytes(_230d338d3_genericFtoa(jule::Slice<jule::U8>::alloc(0LL, _230d36c7c_max(static_cast<jule::I64>(((_7932_prec + 4LL) + 1LL)), 25LL), 0), _7913_f, _7921_fmt, _7932_prec, _7943_bitSize));;
}



inline jule::Slice<jule::U8> _230d338d3_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I64 _8758_prec, jule::I64 _8769_bitSize) {
	jule::U64 _889_bits = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_230d320b8_floatInfo> _8913_flt = nullptr;;
	{
		auto &_match_expr{ _8769_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1c0e68869:;
			{
				_889_bits=static_cast<jule::U64>(static_cast<jule::U64>(_1d4650a10_F32Bits(static_cast<jule::F32>(static_cast<jule::F32>(_8733_val)))));
				_8913_flt=((jule::Ptr<_230d320b8_floatInfo>)((&(_230d324b4_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1c0e686d2:;
			{
				_889_bits=static_cast<jule::U64>(_1d46510d7_F64Bits(_8733_val));
				_8913_flt=((jule::Ptr<_230d320b8_floatInfo>)((&(_230d327c2_f64info))));
			}
		}
		else {
			_case_begin_1c0e6812c:;
			{
				jule::panic(jule::Str::lit("std::conv: illegal bitSize", 26) + jule::Str("\nlocation: std/conv/ftoa.jule:98:9"));;
			}
		}
		_match_end_1c0e67e84:;
	};
	jule::Bool _1015_neg = ((_889_bits >> ((*(_8913_flt))._field_expbits + (*(_8913_flt))._field_mantbits)) != 0LLU);;
	jule::I64 _1029_exp = (static_cast<jule::I64>((_889_bits >> (*(_8913_flt))._field_mantbits)) & static_cast<jule::I64>(((1LL << (*(_8913_flt))._field_expbits) - 1LL)));;
	jule::U64 _1039_mant = (_889_bits & ((static_cast<jule::U64>(1LLU) << (*(_8913_flt))._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _1029_exp };
		
		if (_match_expr == static_cast<jule::I64>(static_cast<jule::I64>(((1LL << (*(_8913_flt))._field_expbits) - 1LL)))) {
			_case_begin_1c0e6c494:;
			{
				{
					
					if ((_1039_mant != 0LLU)) {
						_case_begin_1c0e6e254:;
						{
							return jule::append(_8720_dst,_2096a3620_StrBytes(jule::Str::lit("nan", 3)));;
						}
					}
					else if (_1015_neg) {
						_case_begin_1c0e6d5a5:;
						{
							return jule::append(_8720_dst,_2096a3620_StrBytes(jule::Str::lit("-inf", 4)));;
						}
					}
					else {
						_case_begin_1c0e6d53e:;
						{
							return jule::append(_8720_dst,_2096a3620_StrBytes(jule::Str::lit("+inf", 4)));;
						}
					}
					_match_end_1c0e6d473:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1c0e6c5c6:;
			{
				(_1029_exp)++;
			}
		}
		else {
			_case_begin_1c0e6b6a2:;
			{
				_1039_mant|=(static_cast<jule::U64>(1LLU) << (*(_8913_flt))._field_mantbits);
			}
		}
		_match_end_1c0e6b817:;
	};
	_1029_exp+=(*(_8913_flt))._field_bias;
	if ((_8743_fmt == 'b')) {
		return _230d35d7a_fmtB(_8720_dst, _1015_neg, _1039_mant, _1029_exp, &((*(_8913_flt))));;
	};
	if (((_8743_fmt == 'x') || (_8743_fmt == 'X'))) {
		return _230d36584_fmtX(_8720_dst, _8758_prec, _8743_fmt, _1015_neg, _1039_mant, _1029_exp, &((*(_8913_flt))));;
	};
	;
	_230d32c67_decimalSlice _1379_digs = _230d32c67_decimalSlice{};;
	jule::Bool _1389_ok = false;;
	jule::Bool _1405_shortest = (_8758_prec < 0LL);;
	if (_1405_shortest) {
		_1379_digs._field_d=jule::Slice<jule::U8>::alloc(32LL, 32LL, 0);
		_230d41c32_ryuFtoaShortest(&(_1379_digs), _1039_mant, static_cast<jule::I64>((_1029_exp - static_cast<jule::I64>((*(_8913_flt))._field_mantbits))), &((*(_8913_flt))));
		_1389_ok=true;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1c0e72c08:;
				{
					_8758_prec=static_cast<jule::I64>(_230d36c7c_max(static_cast<jule::I64>((_1379_digs._field_nd - 1LL)), 0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1c0e72c6e:;
				{
					_8758_prec=static_cast<jule::I64>(_230d36c7c_max(static_cast<jule::I64>((_1379_digs._field_nd - _1379_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1c0e72cd5:;
				{
					_8758_prec=_1379_digs._field_nd;
				}
			}
			_match_end_1c0e71e05:;
		};
	} else if ((_8743_fmt != 'f')) {
		jule::I64 _15713_digits = _8758_prec;;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1c0e7491e:;
				{
					(_15713_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1c0e74b2d:;
				{
					if ((_8758_prec == 0LL)) {
						_8758_prec=1LL;
					};
					_15713_digits=_8758_prec;
				}
			}
			else {
				_case_begin_1c0e74ab7:;
				{
					_15713_digits=1LL;
				}
			}
			_match_end_1c0e74a62:;
		};
		if (((_8769_bitSize == 32LL) && (_15713_digits <= 9LL))) {
			_1379_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_230d40967_ryuFtoaFixed32(&(_1379_digs), static_cast<jule::U32>(static_cast<jule::U32>(_1039_mant)), static_cast<jule::I64>((_1029_exp - static_cast<jule::I64>((*(_8913_flt))._field_mantbits))), _15713_digits);
			_1389_ok=true;
		} else if ((_15713_digits <= 18LL)) {
			_1379_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_230d40e0c_ryuFtoaFixed64(&(_1379_digs), _1039_mant, static_cast<jule::I64>((_1029_exp - static_cast<jule::I64>((*(_8913_flt))._field_mantbits))), _15713_digits);
			_1389_ok=true;
		};
	};
	if ((!(_1389_ok))) {
		return _230d34054_bigFtoa(_8720_dst, _8758_prec, _8743_fmt, _1015_neg, _1039_mant, _1029_exp, &((*(_8913_flt))));;
	};
	return _230d3472a_fmtDigits(_8720_dst, _1405_shortest, _1015_neg, _1379_digs, _8758_prec, _8743_fmt);;
}



inline jule::Slice<jule::U8> _230d34054_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I64 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1885_mant, jule::I64 _18816_exp, _230d320b8_floatInfo* _18827_flt) {
	_230d45a49_decimal _1899_d = _230d45a49_decimal{};;
	_230d45e01_assign(&_1899_d, _1885_mant);
	_230d461a9_shift(&_1899_d, static_cast<jule::I64>((_18816_exp - static_cast<jule::I64>((*(_18827_flt))._field_mantbits))));
	_230d32c67_decimalSlice _1929_digs = _230d32c67_decimalSlice{};;
	jule::Bool _1935_shortest = (_18733_prec < 0LL);;
	if (_1935_shortest) {
		_230d34b7b_roundShortest(&(_1899_d), _1885_mant, _18816_exp, _18827_flt);
		_1929_digs=_230d32c67_decimalSlice{._field_d=_1899_d._field_d.slice(0LL), ._field_nd=_1899_d._field_nd, ._field_dp=_1899_d._field_dp, };
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1c08431bc:;
				{
					_18733_prec=static_cast<jule::I64>((_1929_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1c0843233:;
				{
					_18733_prec=static_cast<jule::I64>(_230d36c7c_max(static_cast<jule::I64>((_1929_digs._field_nd - _1929_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1c0843299:;
				{
					_18733_prec=_1929_digs._field_nd;
				}
			}
			_match_end_1c0842650:;
		};
	} else {
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1c0844cb2:;
				{
					_230d469c3_round(&_1899_d, static_cast<jule::I64>((_18733_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1c0844d39:;
				{
					_230d469c3_round(&_1899_d, static_cast<jule::I64>((_1899_d._field_dp + _18733_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1c0844db1:;
				{
					if ((_18733_prec == 0LL)) {
						_18733_prec=1LL;
					};
					_230d469c3_round(&_1899_d, _18733_prec);
				}
			}
			_match_end_1c0844c18:;
		};
		_1929_digs=_230d32c67_decimalSlice{._field_d=_1899_d._field_d.slice(0LL), ._field_nd=_1899_d._field_nd, ._field_dp=_1899_d._field_dp, };
	};
	return _230d3472a_fmtDigits(_18716_dst, _1935_shortest, _18755_neg, _1929_digs, _18733_prec, _18744_fmt);;
}



inline jule::Slice<jule::U8> _230d3472a_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _230d32c67_decimalSlice _2255_digs, jule::I64 _22529_prec, jule::U8 _22540_fmt) {
	{
		auto &_match_expr{ _22540_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1c08484e1:;
			{
				return _230d35220_fmtE(_22418_dst, _22447_neg, _2255_digs, _22529_prec, _22540_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1c0848568:;
			{
				return _230d35709_fmtF(_22418_dst, _22447_neg, _2255_digs, _22529_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1c08485e0:;
			{
				jule::I64 _23313_eprec = _22529_prec;;
				if (((_23313_eprec > _2255_digs._field_nd) && (_2255_digs._field_nd >= _2255_digs._field_dp))) {
					_23313_eprec=_2255_digs._field_nd;
				};
				if (_22431_shortest) {
					_23313_eprec=6LL;
				};
				jule::I64 _2439_exp = (_2255_digs._field_dp - 1LL);;
				if (((_2439_exp < -4LL) || (_2439_exp >= _23313_eprec))) {
					if ((_22529_prec > _2255_digs._field_nd)) {
						_22529_prec=_2255_digs._field_nd;
					};
					return _230d35220_fmtE(_22418_dst, _22447_neg, _2255_digs, static_cast<jule::I64>((_22529_prec - 1LL)), static_cast<jule::U8>(((_22540_fmt + 'e') - 'g')));;
				};
				if ((_22529_prec > _2255_digs._field_dp)) {
					_22529_prec=_2255_digs._field_nd;
				};
				return _230d35709_fmtF(_22418_dst, _22447_neg, _2255_digs, static_cast<jule::I64>(_230d36c7c_max(static_cast<jule::I64>((_22529_prec - _2255_digs._field_dp)), 0LL)));;
			}
		}
		_match_end_1c0848447:;
	};
	return jule::append(_22418_dst,jule::Slice<jule::U8>::make({'%',_22540_fmt}));;
}



inline void _230d34b7b_roundShortest(_230d45a49_decimal* _26223_d, jule::U64 _26235_mant, jule::I64 _26246_exp, _230d320b8_floatInfo* _26257_flt) {
	if ((_26235_mant == 0LLU)) {
		(*(_26223_d))._field_nd=0LL;
		return;;
	};
	jule::I64 _2835_minexp = ((*(_26257_flt))._field_bias + 1LL);;
	if (((_26246_exp > _2835_minexp) && ((332LL * ((*(_26223_d))._field_dp - (*(_26223_d))._field_nd)) >= (100LL * (_26246_exp - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)))))) {
		return;;
	};
	_230d45a49_decimal _2929_upper = _230d45a49_decimal{};;
	_230d45e01_assign(&_2929_upper, static_cast<jule::U64>(((_26235_mant << 1LLU) + 1LLU)));
	_230d461a9_shift(&_2929_upper, static_cast<jule::I64>(((_26246_exp - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)) - 1LL)));
	jule::U64 _3029_mantlo = static_cast<jule::U64>(0LLU);;
	jule::I64 _3039_explo = 0LL;;
	if (((_26235_mant > (1LLU << (*(_26257_flt))._field_mantbits)) || (_26246_exp == _2835_minexp))) {
		_3029_mantlo=static_cast<jule::U64>((_26235_mant - 1LLU));
		_3039_explo=_26246_exp;
	} else {
		_3029_mantlo=static_cast<jule::U64>(((_26235_mant << 1LLU) - 1LLU));
		_3039_explo=static_cast<jule::I64>((_26246_exp - 1LL));
	};
	_230d45a49_decimal _3119_lower = _230d45a49_decimal{};;
	_230d45e01_assign(&_3119_lower, static_cast<jule::U64>(((_3029_mantlo << 1LLU) + 1LLU)));
	_230d461a9_shift(&_3119_lower, static_cast<jule::I64>(((_3039_explo - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)) - 1LL)));
	jule::Bool _3185_inclusive = ((_26235_mant & 1LL) == 0LLU);;
	jule::U8 _3319_upperdelta = static_cast<jule::U8>(0LLU);;
	jule::I64 _3359_ui = 0LL;;
	for (; ; (_3359_ui)++) {
		{
			jule::I64 _3409_mi = ((_3359_ui - _2929_upper._field_dp) + (*(_26223_d))._field_dp);;
			if ((_3409_mi >= (*(_26223_d))._field_nd)) {
				goto _iter_end_1c0855256;
			};
			jule::I64 _3449_li = ((_3359_ui - _2929_upper._field_dp) + _3119_lower._field_dp);;
			jule::U8 _34513_l = static_cast<jule::U8>(48LLU);;
			if (((_3449_li >= 0LL) && (_3449_li < _3119_lower._field_nd))) {
				_34513_l=_3119_lower._field_d[_3449_li];
			};
			jule::U8 _34913_m = static_cast<jule::U8>(48LLU);;
			if ((_3409_mi >= 0LL)) {
				_34913_m=(*(_26223_d))._field_d[_3409_mi];
			};
			jule::U8 _35313_u = static_cast<jule::U8>(48LLU);;
			if ((_3359_ui < _2929_upper._field_nd)) {
				_35313_u=_2929_upper._field_d[_3359_ui];
			};
			jule::Bool _3619_okdown = ((_34513_l != _34913_m) || (_3185_inclusive && ((_3449_li + 1LL) == _3119_lower._field_nd)));;
			{
				
				if (((_3319_upperdelta == 0LLU) && ((_34913_m + 1LLU) < _35313_u))) {
					_case_begin_1c0859ce9:;
					{
						_3319_upperdelta=2LLU;
					}
				}
				else if (((_3319_upperdelta == 0LLU) && (_34913_m != _35313_u))) {
					_case_begin_1c0859d60:;
					{
						_3319_upperdelta=1LLU;
					}
				}
				else if (((_3319_upperdelta == 1LLU) && ((_34913_m != '9') || (_35313_u != '0')))) {
					_case_begin_1c0859dc6:;
					{
						_3319_upperdelta=2LLU;
					}
				}
				_match_end_1c0859c50:;
			};
			jule::Bool _3829_okup = ((_3319_upperdelta > 0LLU) && ((_3185_inclusive || (_3319_upperdelta > 1LLU)) || ((_3359_ui + 1LL) < _2929_upper._field_nd)));;
			{
				
				if ((_3619_okdown && _3829_okup)) {
					_case_begin_1c0e81c8e:;
					{
						_230d469c3_round(_26223_d, static_cast<jule::I64>((_3409_mi + 1LL)));
						return;;
					}
				}
				else if (_3619_okdown) {
					_case_begin_1c0e81d05:;
					{
						_230d46462_roundDown(_26223_d, static_cast<jule::I64>((_3409_mi + 1LL)));
						return;;
					}
				}
				else if (_3829_okup) {
					_case_begin_1c0e81d7c:;
					{
						_230d4671a_roundUp(_26223_d, static_cast<jule::I64>((_3409_mi + 1LL)));
						return;;
					}
				}
				_match_end_1c0e81be5:;
			};
		}
	_iter_next_1c0855256:;
	}
	_iter_end_1c0855256:;;
}



inline jule::Slice<jule::U8> _230d35220_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _230d32c67_decimalSlice _40137_d, jule::I64 _40154_prec, jule::U8 _40165_fmt) {
	if (_40126_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('-'); };
	};
	jule::U8 _4089_ch = '0';;
	if ((_40137_d._field_nd != 0LL)) {
		_4089_ch=_40137_d._field_d[0LL];
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4089_ch); };
	if ((_40154_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('.'); };
		jule::I64 _41713_i = 1LL;;
		jule::I64 _4189_m = _230d36908_min(_40137_d._field_nd, static_cast<jule::I64>((_40154_prec + 1LL)));;
		if ((_41713_i < _4189_m)) {
			(_40113_dst).append(_40137_d._field_d.slice(_41713_i, _4189_m));;
			_41713_i=_4189_m;
		};
		for (; (_41713_i <= _40154_prec); (_41713_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1c0e867cc:;
		}
		_iter_end_1c0e867cc:;;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_40165_fmt); };
	jule::I64 _4309_exp = (_40137_d._field_dp - 1LL);;
	if ((_40137_d._field_nd == 0LL)) {
		_4309_exp=0LL;
	};
	if ((_4309_exp < 0LL)) {
		_4089_ch='-';
		_4309_exp=static_cast<jule::I64>((-(_4309_exp)));
	} else {
		_4089_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4089_ch); };
	{
		
		if ((_4309_exp < 10LL)) {
			_case_begin_1c0e8913c:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push('0'); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(_4309_exp) + '0'))); };
			}
		}
		else if ((_4309_exp < 100LL)) {
			_case_begin_1c0e8a748:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_4309_exp / 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_4309_exp % 10LL)) + '0'))); };
			}
		}
		else {
			_case_begin_1c0e890a4:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_4309_exp / 100LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_4309_exp / 10LL)) % 10LL) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_4309_exp % 10LL)) + '0'))); };
			}
		}
		_match_end_1c0e8836c:;
	};
	return _40113_dst;;
}



inline jule::Slice<jule::U8> _230d35709_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _230d32c67_decimalSlice _45637_d, jule::I64 _45654_prec) {
	if (_45626_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('-'); };
	};
	if ((_45637_d._field_dp > 0LL)) {
		jule::I64 _46413_m = _230d36908_min(_45637_d._field_nd, _45637_d._field_dp);;
		(_45613_dst).append(_45637_d._field_d.slice(0LL, _46413_m));;
		for (; (_46413_m < _45637_d._field_dp); (_46413_m)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1c0e8c3d7:;
		}
		_iter_end_1c0e8c3d7:;;
	} else {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
	};
	if ((_45654_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('.'); };
		jule::I64 _47513_i = 0LL;;
		for (; (_47513_i < _45654_prec); (_47513_i)++) {
			{
				jule::U8 _47717_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47813_j = (_45637_d._field_dp + _47513_i);;
				if (((0LL <= _47813_j) && (_47813_j < _45637_d._field_nd))) {
					_47717_ch=_45637_d._field_d[_47813_j];
				};
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push(_47717_ch); };
			}
		_iter_next_1c0e8e42d:;
		}
		_iter_end_1c0e8e42d:;;
	};
	return _45613_dst;;
}



inline jule::Slice<jule::U8> _230d35d7a_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I64 _48952_exp, _230d320b8_floatInfo* _48963_flt) {
	if (_48926_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('-'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _230d4ad7e_fmtBits(_48913_dst, _48937_mant, 10LL, false, true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('p'); };
	_48952_exp-=static_cast<jule::I64>((*(_48963_flt))._field_mantbits);
	if ((_48952_exp >= 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('+'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _230d4ad7e_fmtBits(_48913_dst, static_cast<jule::U64>(static_cast<jule::U64>(_48952_exp)), 10LL, (_48952_exp < 0LL), true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48913_dst;;
}



inline jule::Slice<jule::U8> _230d36584_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I64 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5129_mant, jule::I64 _51224_exp, _230d320b8_floatInfo* _51235_flt) {
	if ((_5129_mant == 0LLU)) {
		_51224_exp=0LL;
	};
	_5129_mant<<=(60LLU - (*(_51235_flt))._field_mantbits);
	while (((_5129_mant != 0LLU) && ((_5129_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5129_mant<<=1LLU;
			(_51224_exp)--;
		}
	_iter_next_1c0e9382d:;
	}
	_iter_end_1c0e9382d:;;
	if (((_51126_prec >= 0LL) && (_51126_prec < 15LL))) {
		jule::U64 _5269_shift = static_cast<jule::U64>((_51126_prec << 2LLU));;
		jule::U64 _5279_extra = ((_5129_mant << _5269_shift) & 1152921504606846975LLU);;
		_5129_mant>>=(60LLU - _5269_shift);
		if (((_5279_extra | (_5129_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5129_mant)++;
		};
		_5129_mant<<=(60LLU - _5269_shift);
		if (((_5129_mant & 2305843009213693952LLU) != 0LLU)) {
			_5129_mant>>=1LLU;
			(_51224_exp)++;
		};
	};
	jule::Str _5409_hex = jule::Str();;
	if ((_51137_fmt == 'X')) {
		_5409_hex=jule::Str::lit("0123456789ABCDEF", 16);
	} else {
		_5409_hex=jule::Str::lit("0123456789abcdef", 16);
	};
	if (_51148_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('-'); };
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push('0'); __jule_push_dest.__push(_51137_fmt); __jule_push_dest.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5129_mant >> 60LLU) & 1LLU))))); };
	_5129_mant<<=4LLU;
	if (((_51126_prec < 0LL) && (_5129_mant != 0LLU))) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		while ((_5129_mant != 0LLU)) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5409_hex[static_cast<jule::I64>(((_5129_mant >> 60LLU) & 15LLU))]); };
				_5129_mant<<=4LLU;
			}
		_iter_next_1c0e99acb:;
		}
		_iter_end_1c0e99acb:;;
	} else if ((_51126_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		jule::I64 _56313_i = 0LL;;
		for (; (_56313_i < _51126_prec); (_56313_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5409_hex[static_cast<jule::I64>(((_5129_mant >> 60LLU) & 15LLU))]); };
				_5129_mant<<=4LLU;
			}
		_iter_next_1c0e9b25e:;
		}
		_iter_end_1c0e9b25e:;;
	};
	jule::U8 _5719_ch = static_cast<jule::U8>(80LLU);;
	if ((_51137_fmt == _230d378b5_lower(_51137_fmt))) {
		_5719_ch='p';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5719_ch); };
	if ((_51224_exp < 0LL)) {
		_5719_ch='-';
		_51224_exp=static_cast<jule::I64>((-(_51224_exp)));
	} else {
		_5719_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5719_ch); };
	{
		
		if ((_51224_exp < 100LL)) {
			_case_begin_1c0ea0a16:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_51224_exp / 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_51224_exp % 10LL)) + '0'))); };
			}
		}
		else if ((_51224_exp < 1000LL)) {
			_case_begin_1c0e98701:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_51224_exp / 100LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_51224_exp / 10LL) % 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_51224_exp % 10LL)) + '0'))); };
			}
		}
		else {
			_case_begin_1c0e9db35:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(4); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_51224_exp / 1000LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_51224_exp / 100LL)) % 10LL) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_51224_exp / 10LL) % 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_51224_exp % 10LL)) + '0'))); };
			}
		}
		_match_end_1c0e9d195:;
	};
	return _51113_dst;;
}



inline jule::I64 _230d36908_min(jule::I64 _5968_a, jule::I64 _59616_b) {
	if ((_5968_a < _59616_b)) {
		return _5968_a;;
	};
	return _59616_b;;
}



inline jule::I64 _230d36c7c_max(jule::I64 _6038_a, jule::I64 _60316_b) {
	if ((_6038_a > _60316_b)) {
		return _6038_a;;
	};
	return _60316_b;;
}



inline jule::U8 _230d378b5_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | 32LL));;
}



inline __jule_tuple_u64__jule_tuple__200733500_ConvError _230d37d38_parseUint(jule::Str* _5119_s, jule::I64 _5131_base, jule::I64 _5146_bitSize) {
	__jule_tuple_u64__jule_tuple__200733500_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (((*(_5119_s))).empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5131_base) && (_5131_base <= 36LL))) {
			_case_begin_1c0ea4e49:;
		}
		else if ((_5131_base == 0LL)) {
			_case_begin_1c0ea4d4a:;
			{
				_5131_base=10LL;
				if (((*(_5119_s))[0LL] == '0')) {
					{
						
						if ((((*(_5119_s)).len() >= 3LL) && (_230d378b5_lower((*(_5119_s))[1LL]) == 'b'))) {
							_case_begin_1c0ea67b9:;
							{
								_5131_base=2LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_230d378b5_lower((*(_5119_s))[1LL]) == 'o'))) {
							_case_begin_1c0ea6b93:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_230d378b5_lower((*(_5119_s))[1LL]) == 'x'))) {
							_case_begin_1c0ea6489:;
							{
								_5131_base=16LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1c0ea6423:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(1LL);;
							}
						}
						_match_end_1c0ea6357:;
					};
				};
			}
		}
		else {
			_case_begin_1c0ea42cd:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1c0ea4630:;
	};
	if ((_5146_bitSize == 0LL)) {
		_5146_bitSize=64LL;
	} else if (((_5146_bitSize < 0LL) || (_5146_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _909_cutoff = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5131_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1c0eaa955:;
			{
				_909_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1c0ea9679:;
			{
				_909_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1c0eaa438:;
			{
				_909_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5131_base)) + 1LLU));
			}
		}
		_match_end_1c0eaa3d3:;
	};
	jule::U64 _1009_maxVal = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5146_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1c0eaa49e:;
			{
				_1009_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1c0eaba77:;
			{
				_1009_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1c0eaa6d0:;
	};
	jule::U64 _1089_n = static_cast<jule::U64>(0LLU);;
	{
		auto expr = _5119_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0eac7c0:;
		if (it != expr_end) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11013_d = static_cast<jule::U8>(0LLU);;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1c0eada02:;
						{
							_11013_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _230d378b5_lower(_10912_c)) && (_230d378b5_lower(_10912_c) <= 'z'))) {
						_case_begin_1c0ead8e2:;
						{
							_11013_d=static_cast<jule::U8>(((_230d378b5_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1c0ead518:;
						{
							goto _iter_next_1c0eac7c0;
						}
					}
					else {
						_case_begin_1c0ead4a2:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1c0ead43b:;
				};
				if ((_11013_d >= static_cast<jule::U8>(_5131_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
					return __jule_func_result;;
				};
				if ((_1089_n >= _909_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _1009_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1089_n*=static_cast<jule::U64>(_5131_base);
				jule::U64 _1329_n1 = (_1089_n + static_cast<jule::U64>(_11013_d));;
				if (((_1329_n1 < _1089_n) || (_1329_n1 > _1009_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _1009_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1089_n=_1329_n1;
			}
			_iter_next_1c0eac7c0:;
			++it;
			goto _iter_begin_1c0eac7c0;
		}
		_iter_end_1c0eac7c0:;
	};
	__jule_func_result.__jule_result_arg0 = _1089_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _230d38267_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bitSize) {
	jule::U64 _1475_un = 0;;
	jule::I64 _1479_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__200733500_ConvError __jule_assign_result = _230d37d38_parseUint(&(_14618_s), _14630_base, _14645_bitSize);
		_1475_un = __jule_assign_result.__jule_result_arg0;
		_1479_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1479_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>{.error=jule::Any(_1479_err, &__jule_any_type0)};
	};
	return jule::Exceptional<jule::U64>{.result=_1475_un};;
}



inline jule::Exceptional<jule::I64> _230d3871d_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if ((_17217_s).empty()) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
	};
	jule::Bool _1789_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_1789_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _1879_un = 0;;
	jule::I64 _18713_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__200733500_ConvError __jule_assign_result = _230d37d38_parseUint(&(_17217_s), _17225_base, _17240_bitSize);
		_1879_un = __jule_assign_result.__jule_result_arg0;
		_18713_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18713_err != static_cast<jule::I64>(0LL)) && (_18713_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_18713_err, &__jule_any_type0)};
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1965_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17240_bitSize - 1LL))));;
	if (((!(_1789_neg)) && (_1879_un >= _1965_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0)};
	};
	if ((_1789_neg && (_1879_un > _1965_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0)};
	};
	jule::I64 _2039_n = static_cast<jule::I64>(_1879_un);;
	if (_1789_neg) {
		_2039_n=static_cast<jule::I64>((-(_2039_n)));
	};
	return jule::Exceptional<jule::I64>{.result=_2039_n};;
}



inline __jule_tuple_f64__jule_tuple_bool _230d39411_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1d4651428_F64FromBits(9223372036854775808LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _575_clz = _230cdb292_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U64>(_575_clz);
	;
	jule::U64 _609_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_575_clz));;
	jule::U64 _639_xHi = 0;;
	jule::U64 _6318_xLo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _230ce6236_Mul64(_4122_man, _230d3a269_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_639_xHi = __jule_assign_result.__jule_result_arg0;
		_6318_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_639_xHi & 511LLU) == 511LLU) && ((_6318_xLo + _4122_man) < _4122_man))) {
		jule::U64 _679_yHi = 0;;
		jule::U64 _6714_yLo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _230ce6236_Mul64(_4122_man, _230d3a269_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_679_yHi = __jule_assign_result.__jule_result_arg0;
			_6714_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _6813_mergedHi = 0;;
		jule::U64 _6823_mergedLo = 0;;
		({
			jule::U64 ___jule_assign_arg = _639_xHi;
			jule::U64 _1___jule_assign_arg = (_6318_xLo + _679_yHi);
			_6813_mergedHi = ___jule_assign_arg;
			_6823_mergedLo = _1___jule_assign_arg;
		});
		if ((_6823_mergedLo < _6318_xLo)) {
			(_6813_mergedHi)++;
		};
		if (((((_6813_mergedHi & 511LLU) == 511LLU) && ((_6823_mergedLo + 1LLU) == 0LLU)) && ((_6714_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _6813_mergedHi;
			jule::U64 _1___jule_assign_arg = _6823_mergedLo;
			_639_xHi = ___jule_assign_arg;
			_6318_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _795_msb = (_639_xHi >> 63LLU);;
	jule::U64 _809_retMantissa = (_639_xHi >> (_795_msb + 9LLU));;
	_609_retExp2-=(1LLU ^ _795_msb);
	if ((((_6318_xLo == 0LLU) && ((_639_xHi & 511LLU) == 0LLU)) && ((_809_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_809_retMantissa+=(_809_retMantissa & 1LLU);
	_809_retMantissa>>=1LLU;
	if (((_809_retMantissa >> 53LLU) > 0LLU)) {
		_809_retMantissa>>=1LLU;
		_609_retExp2+=1LLU;
	};
	if (((_609_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1039_retBits = ((_609_retExp2 << 52LLU) | (_809_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_1039_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1d4651428_F64FromBits(_1039_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _230d39851_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_1d4650d1d_F32FromBits(2147483648LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _1325_clz = _230cdb292_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U64>(_1325_clz);
	;
	jule::U64 _1359_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1325_clz));;
	jule::U64 _1389_x_hi = 0;;
	jule::U64 _13819_x_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _230ce6236_Mul64(_11022_man, _230d3a269_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_1389_x_hi = __jule_assign_result.__jule_result_arg0;
		_13819_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_1389_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13819_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _1429_y_hi = 0;;
		jule::U64 _14215_y_lo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _230ce6236_Mul64(_11022_man, _230d3a269_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_1429_y_hi = __jule_assign_result.__jule_result_arg0;
			_14215_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _14313_merged_hi = 0;;
		jule::U64 _14324_merged_lo = 0;;
		({
			jule::U64 ___jule_assign_arg = _1389_x_hi;
			jule::U64 _1___jule_assign_arg = (_13819_x_lo + _1429_y_hi);
			_14313_merged_hi = ___jule_assign_arg;
			_14324_merged_lo = _1___jule_assign_arg;
		});
		if ((_14324_merged_lo < _13819_x_lo)) {
			(_14313_merged_hi)++;
		};
		if (((((_14313_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14324_merged_lo + 1LLU) == 0LLU)) && ((_14215_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _14313_merged_hi;
			jule::U64 _1___jule_assign_arg = _14324_merged_lo;
			_1389_x_hi = ___jule_assign_arg;
			_13819_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1545_msb = (_1389_x_hi >> 63LLU);;
	jule::U64 _1559_retMantissa = (_1389_x_hi >> (_1545_msb + 38LLU));;
	_1359_retExp2-=(1LLU ^ _1545_msb);
	if ((((_13819_x_lo == 0LLU) && ((_1389_x_hi & 274877906943LLU) == 0LLU)) && ((_1559_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_1559_retMantissa+=(_1559_retMantissa & 1LLU);
	_1559_retMantissa>>=1LLU;
	if (((_1559_retMantissa >> 24LLU) > 0LLU)) {
		_1559_retMantissa>>=1LLU;
		_1359_retExp2+=1LLU;
	};
	if (((_1359_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1789_retBits = ((_1359_retExp2 << 23LLU) | (_1559_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_1789_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_1d4650d1d_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_1789_retBits))));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I64 _230d3b699_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix) {
	jule::I64 _479_n = _4638_prefix.len();;
	if ((_479_n > _4630_s.len())) {
		_479_n=static_cast<jule::I64>(_4630_s.len());
	};
	jule::I64 _519_i = 0LL;;
	for (; (_519_i < _479_n); (_519_i)++) {
		{
			jule::U8 _5313_c = _4630_s[_519_i];;
			if ((('A' <= _5313_c) && (_5313_c <= 'Z'))) {
				_5313_c+=32LL;
			};
			if ((_5313_c != _4638_prefix[_519_i])) {
				return _519_i;;
			};
		}
	_iter_next_1c0ed2482:;
	}
	_iter_end_1c0ed2482:;;
	return _479_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _230d3b9a7_special(jule::Str _6912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_6912_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I64 _739_sign = 1LL;;
	jule::I64 _749_nsign = 0LL;;
	{
		auto &_match_expr{ _6912_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1c0ed5e03:;
			{
				if ((_6912_s[0LL] == '-')) {
					_739_sign=-1LL;
				};
				_749_nsign=1LL;
				{
					jule::Str* _8317_sp = (&(_6912_s));;
					(*(_8317_sp))=(*(_8317_sp)).slice(1LL);
				};
				goto _case_begin_1c0ed5e7a;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1c0ed5e7a:;
			{
				jule::I64 _8813_caseN = _230d3b699_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("infinity", 8));;
				if (((3LL < _8813_caseN) && (_8813_caseN < 8LL))) {
					_8813_caseN=3LL;
				};
				if (((_8813_caseN == 3LL) || (_8813_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_230cedc22_Inf(_739_sign));
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_749_nsign + __jule_func_result.__jule_result_arg1));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1c0ed6002:;
			{
				if ((_230d3b699_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_230ced64a_NaN());
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1c0ed5d37:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _230d3bc71_readFloat(jule::Str* _10815_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
		return __jule_func_result;;
	};
	{
		
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1c0edb47a:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1c0edb700:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1c0edb634:;
	};
	jule::U64 _1229_base = static_cast<jule::U64>(10LLU);;
	jule::I64 _1239_maxMantDigits = 19LL;;
	jule::U8 _1249_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < (*(_10815_s)).len()) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '0')) && (_230d378b5_lower((*(_10815_s))[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_1229_base=16LLU;
		_1239_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_1249_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _1329_sawdot = false;;
	jule::Bool _1339_sawdigits = false;;
	jule::I64 _1349_nd = 0LL;;
	jule::I64 _1359_ndMant = 0LL;;
	jule::I64 _1369_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _1389_c = (*(_10815_s))[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_1389_c == '_')) {
					_case_begin_1c0ee1716:;
					{
						goto _iter_next_1c0edadd6;
					}
				}
				else if ((_1389_c == '.')) {
					_case_begin_1c0ee178d:;
					{
						if (_1329_sawdot) {
							goto _julec_label_1c0ee53c9;
						};
						_1329_sawdot=true;
						_1369_dp=_1349_nd;
						goto _iter_next_1c0edadd6;
					}
				}
				else if ((('0' <= _1389_c) && (_1389_c <= '9'))) {
					_case_begin_1c0ee1815:;
					{
						_1339_sawdigits=true;
						if (((_1389_c == '0') && (_1349_nd == 0LL))) {
							(_1369_dp)--;
							goto _iter_next_1c0edadd6;
						};
						(_1349_nd)++;
						if ((_1359_ndMant < _1239_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_1229_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((_1389_c - '0'));
							(_1359_ndMant)++;
						} else if ((_1389_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1c0edadd6;
					}
				}
				else if ((((_1229_base == 16LLU) && ('a' <= _230d378b5_lower(_1389_c))) && (_230d378b5_lower(_1389_c) <= 'f'))) {
					_case_begin_1c0ee188c:;
					{
						_1339_sawdigits=true;
						(_1349_nd)++;
						if ((_1359_ndMant < _1239_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>(((_230d378b5_lower(_1389_c) - 'a') + 10LLU));
							(_1359_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1c0edadd6;
					}
				}
				_match_end_1c0ee1639:;
			};
			goto _iter_end_1c0edadd6;
		}
	_iter_next_1c0edadd6:;
	}
	_iter_end_1c0edadd6:;;
	_julec_label_1c0ee53c9:;
	if ((!(_1339_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_1329_sawdot))) {
		_1369_dp=_1349_nd;
	};
	if ((_1229_base == 16LLU)) {
		_1369_dp*=4LL;
		_1359_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && (_230d378b5_lower((*(_10815_s))[__jule_func_result.__jule_result_arg5]) == _1249_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
			return __jule_func_result;;
		};
		jule::I64 _20113_esign = 1LL;;
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_20113_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len()) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] < '0')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _21113_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && ((('0' <= (*(_10815_s))[__jule_func_result.__jule_result_arg5]) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] <= '9')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1c0ee9323;
				};
				if ((_21113_e < 10000LL)) {
					_21113_e=static_cast<jule::I64>((((_21113_e * 10LL) + static_cast<jule::I64>((*(_10815_s))[__jule_func_result.__jule_result_arg5])) - '0'));
				};
			}
		_iter_next_1c0ee9323:;
		}
		_iter_end_1c0ee9323:;;
		_1369_dp+=(_21113_e * _20113_esign);
	} else if ((_1229_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=static_cast<jule::I64>((_1369_dp - _1359_ndMant));
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _230d3d800_atof64exact(jule::U64 _48616_mantissa, jule::I64 _48635_exp, jule::Bool _48645_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_48616_mantissa >> _230d327c2_f64info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(static_cast<jule::F64>(_48616_mantissa));
	if (_48645_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F64>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_48635_exp == 0LL)) {
			_case_begin_1c1002b56:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp > 0LL) && (_48635_exp <= 37LL))) {
			_case_begin_1c1002bcd:;
			{
				if ((_48635_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_230d3cb95_f64pow10[(_48635_exp - 22LL)];
					_48635_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((__jule_func_result.__jule_result_arg0 * _230d3cb95_f64pow10[_48635_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp < 0LL) && (_48635_exp >= -22LL))) {
			_case_begin_1c1002c55:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(jule::div(__jule_func_result.__jule_result_arg0,_230d3cb95_f64pow10[(-(_48635_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1c1002606:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _230d3dc2e_atof32exact(jule::U64 _52016_mantissa, jule::I64 _52035_exp, jule::Bool _52049_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_52016_mantissa >> _230d324b4_f32info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(static_cast<jule::F32>(_52016_mantissa));
	if (_52049_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F32>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_52035_exp == 0LL)) {
			_case_begin_1c1007045:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp > 0LL) && (_52035_exp <= 17LL))) {
			_case_begin_1c10070bc:;
			{
				if ((_52035_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_230d3ced6_f32pow10[(_52035_exp - 10LL)];
					_52035_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>((__jule_func_result.__jule_result_arg0 * _230d3ced6_f32pow10[_52035_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp < 0LL) && (_52035_exp >= -10LL))) {
			_case_begin_1c1007144:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(jule::div(__jule_func_result.__jule_result_arg0,_230d3ced6_f32pow10[(-(_52035_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1c10069e5:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__200733500_ConvError _230d3e2c3_atofHex(_230d320b8_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I64 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc) {
	__jule_tuple_f64__jule_tuple__200733500_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I64 _5575_maxExp = ((static_cast<jule::I64>((1LL << (*(_55613_flt))._field_expbits)) + (*(_55613_flt))._field_bias) - 2LL);;
	jule::I64 _5585_minExp = ((*(_55613_flt))._field_bias + 1LL);;
	_55652_exp+=static_cast<jule::I64>((*(_55613_flt))._field_mantbits);
	while (((_55633_mantissa != 0LLU) && ((_55633_mantissa >> ((*(_55613_flt))._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55633_mantissa<<=1LLU;
			(_55652_exp)--;
		}
	_iter_next_1c100b489:;
	}
	_iter_end_1c100b489:;;
	if (_55673_trunc) {
		_55633_mantissa|=1LLU;
	};
	while (((_55633_mantissa >> ((1LLU + (*(_55613_flt))._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55633_mantissa=static_cast<jule::U64>(((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU)));
			(_55652_exp)++;
		}
	_iter_next_1c100cba5:;
	}
	_iter_end_1c100cba5:;;
	while (((_55633_mantissa > 1LLU) && (_55652_exp < (_5585_minExp - 2LL)))) {
		{
			_55633_mantissa=static_cast<jule::U64>(((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU)));
			(_55652_exp)++;
		}
	_iter_next_1c100d029:;
	}
	_iter_end_1c100d029:;;
	jule::U64 _5889_round = (_55633_mantissa & 3LLU);;
	_55633_mantissa>>=2LLU;
	_5889_round|=(_55633_mantissa & 1LLU);
	_55652_exp+=2LL;
	if ((_5889_round == 3LLU)) {
		(_55633_mantissa)++;
		if ((_55633_mantissa == (1LLU << (1LLU + (*(_55613_flt))._field_mantbits)))) {
			_55633_mantissa>>=1LLU;
			(_55652_exp)++;
		};
	};
	if (((_55633_mantissa >> (*(_55613_flt))._field_mantbits) == 0LLU)) {
		_55652_exp=(*(_55613_flt))._field_bias;
	};
	jule::I64 _6039_err = static_cast<jule::I64>(0LL);;
	if ((_55652_exp > _5575_maxExp)) {
		_55633_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << (*(_55613_flt))._field_mantbits)));
		_55652_exp=static_cast<jule::I64>((_5575_maxExp + 1LL));
		_6039_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _6109_bits = (_55633_mantissa & ((1LLU << (*(_55613_flt))._field_mantbits) - 1LLU));;
	_6109_bits|=(static_cast<jule::U64>(((_55652_exp - (*(_55613_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_55613_flt))._field_expbits) - 1LL)))) << (*(_55613_flt))._field_mantbits);
	if (_55662_neg) {
		_6109_bits|=((1LLU << (*(_55613_flt))._field_mantbits) << (*(_55613_flt))._field_expbits);
	};
	if (((*(_55613_flt)) == _230d324b4_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_1d4650d1d_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_6109_bits)))));
		__jule_func_result.__jule_result_arg1 = _6039_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1d4651428_F64FromBits(_6109_bits));
	__jule_func_result.__jule_result_arg1 = _6039_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__200733500_ConvError _230d3e69c_atof32(jule::Str _62111_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__200733500_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6239_val = 0;;
		jule::I64 _62314__n = 0;;
		jule::Bool _62318_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _230d3b9a7_special(_62111_s);
			_6239_val = __jule_assign_result.__jule_result_arg0;
			_62314__n = __jule_assign_result.__jule_result_arg1;
			_62318_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_62318_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_6239_val));
			__jule_func_result.__jule_result_arg1 = _62314__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6295_mantissa = 0;;
	jule::I64 _62915_exp = 0;;
	jule::Bool _62920_neg = false;;
	jule::Bool _62925_trunc = false;;
	jule::Bool _62932_hex = false;;
	jule::I64 _62937__n = 0;;
	jule::Bool _62945_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _230d3bc71_readFloat(&(_62111_s));
		_6295_mantissa = __jule_assign_result.__jule_result_arg0;
		_62915_exp = __jule_assign_result.__jule_result_arg1;
		_62920_neg = __jule_assign_result.__jule_result_arg2;
		_62925_trunc = __jule_assign_result.__jule_result_arg3;
		_62932_hex = __jule_assign_result.__jule_result_arg4;
		_62937__n = __jule_assign_result.__jule_result_arg5;
		_62945_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62937__n;
	if ((!(_62945_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_62932_hex) {
		jule::F64 _63613_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__200733500_ConvError __jule_assign_result = _230d3e2c3_atofHex(&(_230d324b4_f32info), _6295_mantissa, _62915_exp, _62920_neg, _62925_trunc);
			_63613_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_63613_ff));
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62925_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _230d3dc2e_atof32exact(_6295_mantissa, _62915_exp, _62920_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62945_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62945_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _230d39851_eiselLemire32(_6295_mantissa, _62915_exp, _62920_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62945_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62945_ok) {
			if ((!(_62925_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _65817_fUp = static_cast<jule::F32>(0.0f);;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _230d39851_eiselLemire32(static_cast<jule::U64>((_6295_mantissa + 1LLU)), _62915_exp, _62920_neg);
				_65817_fUp = __jule_assign_result.__jule_result_arg0;
				_62945_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62945_ok && (__jule_func_result.__jule_result_arg0 == _65817_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_230d45a49_decimal _6679_d = _230d45a49_decimal{};;
	if ((!(_230d3c414_set(&_6679_d, _2096a3620_StrBytes(_62111_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _6715_b = 0;;
	jule::Bool _6718_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _230d3c755_floatBits(&_6679_d, &(_230d324b4_f32info));
		_6715_b = __jule_assign_result.__jule_result_arg0;
		_6718_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_1d4650d1d_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_6715_b))));
	if (_6718_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__200733500_ConvError _230d3e966_atof64(jule::Str _67911_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__200733500_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6819_val = 0;;
		jule::I64 _68114__n = 0;;
		jule::Bool _68118_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _230d3b9a7_special(_67911_s);
			_6819_val = __jule_assign_result.__jule_result_arg0;
			_68114__n = __jule_assign_result.__jule_result_arg1;
			_68118_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_68118_ok) {
			__jule_func_result.__jule_result_arg0 = _6819_val;
			__jule_func_result.__jule_result_arg1 = _68114__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6875_mantissa = 0;;
	jule::I64 _68715_exp = 0;;
	jule::Bool _68720_neg = false;;
	jule::Bool _68725_trunc = false;;
	jule::Bool _68732_hex = false;;
	jule::I64 _68737__n = 0;;
	jule::Bool _68745_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _230d3bc71_readFloat(&(_67911_s));
		_6875_mantissa = __jule_assign_result.__jule_result_arg0;
		_68715_exp = __jule_assign_result.__jule_result_arg1;
		_68720_neg = __jule_assign_result.__jule_result_arg2;
		_68725_trunc = __jule_assign_result.__jule_result_arg3;
		_68732_hex = __jule_assign_result.__jule_result_arg4;
		_68737__n = __jule_assign_result.__jule_result_arg5;
		_68745_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68737__n;
	if ((!(_68745_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_68732_hex) {
		({
			__jule_tuple_f64__jule_tuple__200733500_ConvError __jule_assign_result = _230d3e2c3_atofHex(&(_230d327c2_f64info), _6875_mantissa, _68715_exp, _68720_neg, _68725_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68725_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _230d3d800_atof64exact(_6875_mantissa, _68715_exp, _68720_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68745_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68745_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _230d39411_eiselLemire64(_6875_mantissa, _68715_exp, _68720_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68745_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68745_ok) {
			if ((!(_68725_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _71517_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _230d39411_eiselLemire64(static_cast<jule::U64>((_6875_mantissa + 1LLU)), _68715_exp, _68720_neg);
				_71517_fUp = __jule_assign_result.__jule_result_arg0;
				_68745_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68745_ok && (__jule_func_result.__jule_result_arg0 == _71517_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_230d45a49_decimal _7249_d = _230d45a49_decimal{};;
	if ((!(_230d3c414_set(&_7249_d, _2096a3620_StrBytes(_67911_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _7285_b = 0;;
	jule::Bool _7288_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _230d3c755_floatBits(&_7249_d, &(_230d327c2_f64info));
		_7285_b = __jule_assign_result.__jule_result_arg0;
		_7288_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1d4651428_F64FromBits(_7285_b));
	if (_7288_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__200733500_ConvError _230d3ecda_parseFloatPrefix(jule::Str* _73622_s, jule::I64 _73630_bitSize) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__200733500_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73630_bitSize == 32LL)) {
		jule::F32 _7389_f = 0;;
		jule::I64 _73812_n = 0;;
		jule::I64 _73815_err = 0LL;;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__200733500_ConvError __jule_assign_result = _230d3e69c_atof32((*(_73622_s)));
			_7389_f = __jule_assign_result.__jule_result_arg0;
			_73812_n = __jule_assign_result.__jule_result_arg1;
			_73815_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_7389_f));
		__jule_func_result.__jule_result_arg1 = _73812_n;
		__jule_func_result.__jule_result_arg2 = _73815_err;
		return __jule_func_result;;
	};
	jule::F64 _7415_f = 0;;
	jule::I64 _7418_n = 0;;
	jule::I64 _74111_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__200733500_ConvError __jule_assign_result = _230d3e966_atof64((*(_73622_s)));
		_7415_f = __jule_assign_result.__jule_result_arg0;
		_7418_n = __jule_assign_result.__jule_result_arg1;
		_74111_err = __jule_assign_result.__jule_result_arg2;
	});
	__jule_func_result.__jule_result_arg0 = _7415_f;
	__jule_func_result.__jule_result_arg1 = _7418_n;
	__jule_func_result.__jule_result_arg2 = _74111_err;
	return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _230d4015e_ParseFloat(jule::Str _76915_s, jule::I64 _76923_bitSize) {
	jule::F64 _7705_f = 0;;
	jule::I64 _7708_n = 0;;
	jule::I64 _77011_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__200733500_ConvError __jule_assign_result = _230d3ecda_parseFloatPrefix(&(_76915_s), _76923_bitSize);
		_7705_f = __jule_assign_result.__jule_result_arg0;
		_7708_n = __jule_assign_result.__jule_result_arg1;
		_77011_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_7708_n != _76915_s.len()) && ((_77011_err == static_cast<jule::I64>(0LL)) || (_77011_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
	};
	if ((_77011_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(_77011_err, &__jule_any_type0)};
	};
	return jule::Exceptional<jule::F64>{.result=_7705_f};;
}



inline void _230d40967_ryuFtoaFixed32(_230d32c67_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _629_e2 = _4956_exp;;
	jule::I64 _635_b = _230ce38c6_Len32(_4945_mant);;
	if ((_635_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U64>((25LL - _635_b));
		_629_e2+=(static_cast<jule::I64>(_635_b) - 25LL);
	};
	jule::I64 _745_q = (((-(_230d41eeb_mulByLog2Log10(static_cast<jule::I64>((_629_e2 + 24LL))))) + _4966_prec) - 1LL);;
	jule::Bool _799_exact = ((_745_q <= 27LL) && (_745_q >= 0LL));;
	jule::U32 _819_di = 0;;
	jule::I64 _8113_dexp2 = 0;;
	jule::Bool _8124_d0 = false;;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _230d438b0_mult64bitPow10(_4945_mant, _629_e2, _745_q);
		_819_di = __jule_assign_result.__jule_result_arg0;
		_8113_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8124_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8113_dexp2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_745_q < 0LL) && (_745_q >= -10LL)) && _230d44163_divisibleByPow5(static_cast<jule::U64>(static_cast<jule::U64>(_4945_mant)), static_cast<jule::I64>((-(_745_q)))))) {
		_799_exact=true;
		_8124_d0=true;
	};
	jule::U64 _945_extra = static_cast<jule::U64>((-(_8113_dexp2)));;
	jule::U32 _955_extraMask = static_cast<jule::U32>(((1LL << _945_extra) - 1LL));;
	jule::U32 _979_dfrac = static_cast<jule::U32>(0LLU);;
	({
		jule::U32 ___jule_assign_arg = static_cast<jule::U32>((_819_di >> _945_extra));
		jule::U32 _1___jule_assign_arg = static_cast<jule::U32>((_819_di & _955_extraMask));
		_819_di = ___jule_assign_arg;
		_979_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _999_roundUp = false;;
	if (_799_exact) {
		_999_roundUp=(((_979_dfrac > (1LLU << (_945_extra - 1LLU))) || ((_979_dfrac == (1LLU << (_945_extra - 1LLU))) && (!(_8124_d0)))) || (((_979_dfrac == (1LLU << (_945_extra - 1LLU))) && _8124_d0) && ((_819_di & 1LLU) == 1LLU)));
	} else {
		_999_roundUp=((_979_dfrac >> (_945_extra - 1LLU)) == 1LLU);
	};
	if ((_979_dfrac != 0LLU)) {
		_8124_d0=false;
	};
	_230d41759_formatDecimal(_4924_d, static_cast<jule::U64>(static_cast<jule::U64>(_819_di)), (!(_8124_d0)), _999_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_745_q;
}



inline void _230d40e0c_ryuFtoaFixed64(_230d32c67_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _1319_e2 = _12156_exp;;
	jule::I64 _1325_b = _230ce3b90_Len64(_12145_mant);;
	if ((_1325_b < 55LL)) {
		_12145_mant=static_cast<jule::U64>((_12145_mant << static_cast<jule::U64>((55LL - _1325_b))));
		_1319_e2+=(static_cast<jule::I64>(_1325_b) - 55LL);
	};
	jule::I64 _1465_q = (((-(_230d41eeb_mulByLog2Log10(static_cast<jule::I64>((_1319_e2 + 54LL))))) + _12166_prec) - 1LL);;
	jule::Bool _1519_exact = ((_1465_q <= 55LL) && (_1465_q >= 0LL));;
	jule::U64 _1539_di = 0;;
	jule::I64 _15313_dexp2 = 0;;
	jule::Bool _15324_d0 = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _230d43cde_mult128bitPow10(_12145_mant, _1319_e2, _1465_q);
		_1539_di = __jule_assign_result.__jule_result_arg0;
		_15313_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15324_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15313_dexp2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1465_q < 0LL) && (_1465_q >= -22LL)) && _230d44163_divisibleByPow5(_12145_mant, static_cast<jule::I64>((-(_1465_q)))))) {
		_1519_exact=true;
		_15324_d0=true;
	};
	jule::U64 _1665_extra = static_cast<jule::U64>((-(_15313_dexp2)));;
	jule::U64 _1675_extraMask = static_cast<jule::U64>(((1LL << _1665_extra) - 1LL));;
	jule::U64 _1699_dfrac = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_1539_di >> _1665_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_1539_di & _1675_extraMask));
		_1539_di = ___jule_assign_arg;
		_1699_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _1719_roundUp = false;;
	if (_1519_exact) {
		_1719_roundUp=(((_1699_dfrac > (1LLU << (_1665_extra - 1LLU))) || ((_1699_dfrac == (1LLU << (_1665_extra - 1LLU))) && (!(_15324_d0)))) || (((_1699_dfrac == (1LLU << (_1665_extra - 1LLU))) && _15324_d0) && ((_1539_di & 1LLU) == 1LLU)));
	} else {
		_1719_roundUp=((_1699_dfrac >> (_1665_extra - 1LLU)) == 1LLU);
	};
	if ((_1699_dfrac != 0LLU)) {
		_15324_d0=false;
	};
	_230d41759_formatDecimal(_12124_d, _1539_di, (!(_15324_d0)), _1719_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1465_q;
}



inline void _230d41759_formatDecimal(_230d32c67_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2015_max = _230d4124d_u64pow10[_20088_prec];;
	jule::I64 _2029_trimmed = 0LL;;
	while ((_20044_m >= _2015_max)) {
		{
			jule::U64 _2049_a = 0;;
			jule::U64 _20412_b = 0;;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_2049_a = ___jule_assign_arg;
				_20412_b = _1___jule_assign_arg;
			});
			_20044_m=_2049_a;
			(_2029_trimmed)++;
			if ((_20412_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20412_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20412_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1c1042965:;
	}
	_iter_end_1c1042965:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2015_max)) {
		_20044_m/=10LLU;
		(_2029_trimmed)++;
	};
	jule::U64 _2299_n = static_cast<jule::U64>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20088_prec));
	jule::U64 _2319_v = _20044_m;;
	while ((_2319_v >= 100LLU)) {
		{
			jule::U64 _23313_v1 = static_cast<jule::U64>(0LLU);;
			jule::U64 _23413_v2 = static_cast<jule::U64>(0LLU);;
			if (((_2319_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_2319_v) / 100LLU)));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_2319_v) % 100LL)));
					_23313_v1 = ___jule_assign_arg;
					_23413_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_2319_v / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_2319_v % 100LL));
					_23313_v1 = ___jule_assign_arg;
					_23413_v2 = _1___jule_assign_arg;
				});
			};
			_2299_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I64>((_2299_n + 1LLU))]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(((2LL * _23413_v2) + 1LLU)));
			(*(_20023_d))._field_d[static_cast<jule::I64>(_2299_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((2LL * _23413_v2)));
			_2319_v=_23313_v1;
		}
	_iter_next_1c104543a:;
	}
	_iter_end_1c104543a:;;
	if ((_2319_v > 0LLU)) {
		(_2299_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2299_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(((2LL * _2319_v) + 1LLU)));
	};
	if ((_2319_v >= 10LLU)) {
		(_2299_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2299_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((2LL * _2319_v)));
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_2029_trimmed)++;
		}
	_iter_next_1c104b045:;
	}
	_iter_end_1c104b045:;;
	(*(_20023_d))._field_dp=static_cast<jule::I64>(((*(_20023_d))._field_nd + _2029_trimmed));
}



inline void _230d41c32_ryuFtoaShortest(_230d32c67_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _230d320b8_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_230cdce20_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U64>((-(_26157_exp)));
		_230d42d10_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _2735_ml = 0;;
	jule::U64 _2739_mc = 0;;
	jule::U64 _27313_mu = 0;;
	jule::I64 _27321_e2 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _230d426e4_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_2735_ml = __jule_assign_result.__jule_result_arg0;
		_2739_mc = __jule_assign_result.__jule_result_arg1;
		_27313_mu = __jule_assign_result.__jule_result_arg2;
		_27321_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27321_e2 == 0LL)) {
		_230d42d10_ryuDigits(_26125_d, _2735_ml, _2739_mc, _27313_mu, true, false);
		return;;
	};
	jule::I64 _2795_q = (_230d41eeb_mulByLog2Log10(static_cast<jule::I64>((-(_27321_e2)))) + 1LL);;
	jule::U64 _2839_dl = static_cast<jule::U64>(0LLU);;
	jule::U64 _2849_dc = static_cast<jule::U64>(0LLU);;
	jule::U64 _2859_du = static_cast<jule::U64>(0LLU);;
	jule::Bool _2869_dl0 = false;;
	jule::Bool _2879_dc0 = false;;
	jule::Bool _2889_du0 = false;;
	if (((*(_26168_flt)) == _230d324b4_f32info)) {
		jule::U32 _29013_dl32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _29113_dc32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _29213_du32 = static_cast<jule::U32>(0LLU);;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _230d438b0_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_2735_ml)), _27321_e2, _2795_q);
			_29013_dl32 = __jule_assign_result.__jule_result_arg0;
			_2869_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _230d438b0_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_2739_mc)), _27321_e2, _2795_q);
			_29113_dc32 = __jule_assign_result.__jule_result_arg0;
			_2879_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _230d438b0_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27313_mu)), _27321_e2, _2795_q);
			_29213_du32 = __jule_assign_result.__jule_result_arg0;
			_27321_e2 = __jule_assign_result.__jule_result_arg1;
			_2889_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29013_dl32));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29113_dc32));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29213_du32));
			_2839_dl = ___jule_assign_arg;
			_2849_dc = _1___jule_assign_arg;
			_2859_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _230d43cde_mult128bitPow10(_2735_ml, _27321_e2, _2795_q);
			_2839_dl = __jule_assign_result.__jule_result_arg0;
			_2869_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _230d43cde_mult128bitPow10(_2739_mc, _27321_e2, _2795_q);
			_2849_dc = __jule_assign_result.__jule_result_arg0;
			_2879_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _230d43cde_mult128bitPow10(_27313_mu, _27321_e2, _2795_q);
			_2859_du = __jule_assign_result.__jule_result_arg0;
			_27321_e2 = __jule_assign_result.__jule_result_arg1;
			_2889_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27321_e2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2795_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_2869_dl0 = ___jule_assign_arg;
			_2879_dc0 = _1___jule_assign_arg;
			_2889_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2795_q < 0LL) && (_2795_q >= -24LL))) {
		if (_230d44163_divisibleByPow5(_2735_ml, static_cast<jule::I64>((-(_2795_q))))) {
			_2869_dl0=true;
		};
		if (_230d44163_divisibleByPow5(_2739_mc, static_cast<jule::I64>((-(_2795_q))))) {
			_2879_dc0=true;
		};
		if (_230d44163_divisibleByPow5(_27313_mu, static_cast<jule::I64>((-(_2795_q))))) {
			_2889_du0=true;
		};
	};
	jule::U64 _3255_extra = static_cast<jule::U64>((-(_27321_e2)));;
	jule::U64 _3265_extraMask = static_cast<jule::U64>(((1LL << _3255_extra) - 1LL));;
	jule::U64 _3289_fracl = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_2839_dl >> _3255_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_2839_dl & _3265_extraMask));
		_2839_dl = ___jule_assign_arg;
		_3289_fracl = _1___jule_assign_arg;
	});
	jule::U64 _3309_fracc = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_2849_dc >> _3255_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_2849_dc & _3265_extraMask));
		_2849_dc = ___jule_assign_arg;
		_3309_fracc = _1___jule_assign_arg;
	});
	jule::U64 _3329_fracu = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_2859_du >> _3255_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_2859_du & _3265_extraMask));
		_2859_du = ___jule_assign_arg;
		_3329_fracu = _1___jule_assign_arg;
	});
	jule::Bool _3389_uok = ((!(_2889_du0)) || (_3329_fracu > 0LLU));;
	if ((_2889_du0 && (_3329_fracu == 0LLU))) {
		_3389_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_3389_uok))) {
		(_2859_du)--;
	};
	jule::Bool _3479_cup = false;;
	if (_2879_dc0) {
		_3479_cup=((_3309_fracc > (1LLU << (_3255_extra - 1LLU))) || ((_3309_fracc == (1LLU << (_3255_extra - 1LLU))) && ((_2849_dc & 1LLU) == 1LLU)));
	} else {
		_3479_cup=((_3309_fracc >> (_3255_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3615_lok = ((_2869_dl0 && (_3289_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3615_lok))) {
		(_2839_dl)++;
	};
	jule::Bool _3665_c0 = (_2879_dc0 && (_3309_fracc == 0LLU));;
	_230d42d10_ryuDigits(_26125_d, _2839_dl, _2849_dc, _2859_du, _3665_c0, _3479_cup);
	(*(_26125_d))._field_dp-=_2795_q;
}



inline jule::I64 _230d41eeb_mulByLog2Log10(jule::I64 _37719_x) {
	return static_cast<jule::I64>(((_37719_x * 78913LL) >> 18LL));;
}



inline jule::I64 _230d422b5_mulByLog10Log2(jule::I64 _38719_x) {
	return static_cast<jule::I64>(((_38719_x * 108853LL) >> 15LL));;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _230d426e4_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _230d320b8_floatInfo* _3966_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != (1LLU << (*(_3966_flt))._field_mantbits)) || (_39529_exp == (((*(_3966_flt))._field_bias + 1LL) - static_cast<jule::I64>((*(_3966_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((2LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) + 1LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 1LL));
	} else {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((4LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) + 2LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 2LL));
	};
	return __jule_func_result;;
}



inline void _230d42d10_ryuDigits(_230d32c67_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _4109_lhi = 0;;
	jule::U32 _41014_llo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _230d4442c_divmod1e9(_40936_lower);
		_4109_lhi = __jule_assign_result.__jule_result_arg0;
		_41014_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4115_chi = 0;;
	jule::U32 _41110_clo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _230d4442c_divmod1e9(_40948_central);
		_4115_chi = __jule_assign_result.__jule_result_arg0;
		_41110_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4125_uhi = 0;;
	jule::U32 _41210_ulo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _230d4442c_divmod1e9(_40962_upper);
		_4125_uhi = __jule_assign_result.__jule_result_arg0;
		_41210_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4125_uhi == 0LLU)) {
		_230d43481_ryuDigits32(_40919_d, _41014_llo, _41110_clo, _41210_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_4109_lhi < _4125_uhi)) {
		if ((_41014_llo != 0LLU)) {
			(_4109_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41110_clo == 0LLU));
		_40992_cup=((_41110_clo > 500000000LL) || ((_41110_clo == 500000000LL) && _40992_cup));
		_230d43481_ryuDigits32(_40919_d, _4109_lhi, _4115_chi, _4125_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U64 _42813_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42913_v = _4115_chi;;
		while ((_42913_v > 0LLU)) {
			{
				jule::U32 _43113_v1 = 0;;
				jule::U32 _43117_v2 = 0;;
				({
					jule::U32 ___jule_assign_arg = (_42913_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_42913_v % 10LL);
					_43113_v1 = ___jule_assign_arg;
					_43117_v2 = _1___jule_assign_arg;
				});
				_42913_v=_43113_v1;
				(_42813_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I64>(_42813_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43117_v2 + '0')));
			}
		_iter_next_1c10697c2:;
		}
		_iter_end_1c10697c2:;;
		(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(static_cast<jule::I64>(_42813_n));
		(*(_40919_d))._field_nd=static_cast<jule::I64>(static_cast<jule::I64>((9LL - _42813_n)));
		_230d43481_ryuDigits32(_40919_d, _41014_llo, _41110_clo, _41210_ulo, _40978_c0, _40992_cup, static_cast<jule::I64>(((*(_40919_d))._field_nd + 8LL)));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1c106c330:;
	}
	_iter_end_1c106c330:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(1LL);
		}
	_iter_next_1c106be23:;
	}
	_iter_end_1c106be23:;;
}



inline void _230d43481_ryuDigits32(_230d32c67_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		(*(_45421_d))._field_dp=static_cast<jule::I64>((_45554_endindex + 1LL));
		return;;
	};
	jule::I64 _4609_trimmed = 0LL;;
	jule::I64 _4639_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _4709_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47113_c = 0;;
			jule::U32 _47120_cdigit = 0;;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_47113_c = ___jule_assign_arg;
				_47120_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _4729_u = (_4559_upper / 10LLU);;
			if ((_4709_l > _4729_u)) {
				goto _iter_end_1c106eb5c;
			};
			if (((_4709_l == (_47113_c + 1LLU)) && (_47113_c < _4729_u))) {
				(_47113_c)++;
				_47120_cdigit=0LLU;
				_45539_cup=false;
			};
			(_4609_trimmed)++;
			_45525_c0=(_45525_c0 && (_4639_cNextDigit == 0LL));
			_4639_cNextDigit=static_cast<jule::I64>(static_cast<jule::I64>(_47120_cdigit));
			({
				jule::U32 ___jule_assign_arg = _4709_l;
				jule::U32 _1___jule_assign_arg = _47113_c;
				jule::U32 _2___jule_assign_arg = _4729_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4559_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1c106eb5c:;
	}
	_iter_end_1c106eb5c:;;
	if ((_4609_trimmed > 0LL)) {
		_45539_cup=(((_4639_cNextDigit > 5LL) || ((_4639_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_4639_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_4609_trimmed;
	jule::U32 _5099_v = _45458_central;;
	jule::I64 _5109_n = _45554_endindex;;
	while ((_5109_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _5129_v1 = 0;;
			jule::U32 _51213_v2 = 0;;
			({
				jule::U32 ___jule_assign_arg = (_5099_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_5099_v % 100LL);
				_5129_v1 = ___jule_assign_arg;
				_51213_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_5109_n]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(((2LL * _51213_v2) + 1LLU)));
			(*(_45421_d))._field_d[(_5109_n - 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((2LL * _51213_v2)));
			_5109_n-=2LL;
			_5099_v=_5129_v1;
		}
	_iter_next_1c107601a:;
	}
	_iter_end_1c107601a:;;
	if ((_5109_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_5109_n]=static_cast<jule::U8>(static_cast<jule::U8>((_5099_v + '0')));
	};
	(*(_45421_d))._field_nd=static_cast<jule::I64>((_45554_endindex + 1LL));
	(*(_45421_d))._field_dp=static_cast<jule::I64>(((*(_45421_d))._field_nd + _4609_trimmed));
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _230d438b0_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_53419_m << 6LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_53431_e2 - 6LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str::lit("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _5439_pow = _230d3a269_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_5439_pow+=1LLU;
	};
	jule::U64 _5485_hi = 0;;
	jule::U64 _5489_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _230ce6236_Mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53419_m)), _5439_pow);
		_5485_hi = __jule_assign_result.__jule_result_arg0;
		_5489_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_230d422b5_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>(((_5485_hi << 7LLU) | (_5489_lo >> 57LLU))));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((_5489_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _230d43cde_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>((_56220_m << 8LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_56232_e2 - 8LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str::lit("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _5719_pow = _230d3a269_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_5719_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_230d422b5_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _5795_l1 = 0;;
	jule::U64 _5799_l0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _230ce6236_Mul64(_56220_m, _5719_pow[0LL]);
		_5795_l1 = __jule_assign_result.__jule_result_arg0;
		_5799_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5809_h1 = 0;;
	jule::U64 _58013_h0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _230ce6236_Mul64(_56220_m, _5719_pow[1LL]);
		_5809_h1 = __jule_assign_result.__jule_result_arg0;
		_58013_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5815_mid = 0;;
	jule::U64 _58110_carry = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _230ce492c_Add64(_5795_l1, _58013_h0, 0LLU);
		_5815_mid = __jule_assign_result.__jule_result_arg0;
		_58110_carry = __jule_assign_result.__jule_result_arg1;
	});
	_5809_h1+=_58110_carry;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(((_5809_h1 << 9LLU) | (_5815_mid >> 55LLU)));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((_5815_mid << 9LLU) == 0LLU) && (_5799_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _230d44163_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I64 _5909_i = 0LL;;
	for (; (_5909_i < _58632_k); (_5909_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m/=5LLU;
		}
	_iter_next_1c1084424:;
	}
	_iter_end_1c1084424:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _230d4442c_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL)));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL)));
		return __jule_func_result;;
	};
}



inline void _230d47397_trim(_230d45a49_decimal* _27414_a) {
	while ((((*(_27414_a))._field_nd > 0LL) && ((*(_27414_a))._field_d[((*(_27414_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_27414_a))._field_nd)--;
		}
	_iter_next_1c1087a98:;
	}
	_iter_end_1c1087a98:;;
	if (((*(_27414_a))._field_nd == 0LL)) {
		(*(_27414_a))._field_dp=0LL;
	};
}



inline void _230d47683_rightShift(_230d45a49_decimal* _28420_a, jule::U64 _28432_k) {
	jule::I64 _2859_r = 0LL;;
	jule::I64 _2869_w = 0LL;;
	jule::U64 _2899_n = static_cast<jule::U64>(0LLU);;
	for (; ((_2899_n >> _28432_k) == 0LLU); (_2859_r)++) {
		{
			if ((_2859_r >= (*(_28420_a))._field_nd)) {
				if ((_2899_n == 0LLU)) {
					(*(_28420_a))._field_nd=0LL;
					return;;
				};
				while (((_2899_n >> _28432_k) == 0LLU)) {
					{
						_2899_n=static_cast<jule::U64>((_2899_n * 10LLU));
						(_2859_r)++;
					}
				_iter_next_1c108ad87:;
				}
				_iter_end_1c108ad87:;;
				goto _iter_end_1c108978c;
			};
			jule::U64 _3039_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2859_r]);;
			_2899_n=static_cast<jule::U64>((((_2899_n * 10LLU) + _3039_c) - '0'));
		}
	_iter_next_1c108978c:;
	}
	_iter_end_1c108978c:;;
	(*(_28420_a))._field_dp-=(_2859_r - 1LL);
	jule::U64 _3085_mask = (static_cast<jule::U64>((1LL << _28432_k)) - 1LLU);;
	for (; (_2859_r < (*(_28420_a))._field_nd); (_2859_r)++) {
		{
			jule::U64 _3129_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2859_r]);;
			jule::U64 _3139_dig = (_2899_n >> _28432_k);;
			_2899_n&=_3085_mask;
			(*(_28420_a))._field_d[_2869_w]=static_cast<jule::U8>(static_cast<jule::U8>((_3139_dig + '0')));
			(_2869_w)++;
			_2899_n=static_cast<jule::U64>((((_2899_n * 10LLU) + _3129_c) - '0'));
		}
	_iter_next_1c108d153:;
	}
	_iter_end_1c108d153:;;
	while ((_2899_n > 0LLU)) {
		{
			jule::U64 _3229_dig = (_2899_n >> _28432_k);;
			_2899_n&=_3085_mask;
			if ((_2869_w < 800LL)) {
				(*(_28420_a))._field_d[_2869_w]=static_cast<jule::U8>(static_cast<jule::U8>((_3229_dig + '0')));
				(_2869_w)++;
			} else if ((_3229_dig > 0LLU)) {
				(*(_28420_a))._field_trunc=true;
			};
			_2899_n=static_cast<jule::U64>((_2899_n * 10LLU));
		}
	_iter_next_1c108d3d9:;
	}
	_iter_end_1c108d3d9:;;
	(*(_28420_a))._field_nd=_2869_w;
	_230d47397_trim(_28420_a);
}



inline jule::Bool _230d47b39_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I64 _33835_end, jule::Str* _33846_s) {
	jule::I64 _3399_i = 0LL;;
	for (; (_3399_i < (*(_33846_s)).len()); (_3399_i)++) {
		{
			if ((_3399_i >= _33835_end)) {
				return true;;
			};
			if ((_33821_b[_3399_i] != (*(_33846_s))[_3399_i])) {
				return (_33821_b[_3399_i] < (*(_33846_s))[_3399_i]);;
			};
		}
	_iter_next_1c1092333:;
	}
	_iter_end_1c1092333:;;
	return false;;
}



inline void _230d47de2_leftShift(_230d45a49_decimal* _35219_a, jule::U64 _35231_k) {
	jule::I64 _3539_delta = _230d45450_leftCheats[static_cast<jule::I64>(_35231_k)]._field_delta;;
	if (_230d47b39_prefixIsLessThan((*(_35219_a))._field_d, (*(_35219_a))._field_nd, &(_230d45450_leftCheats[static_cast<jule::I64>(_35231_k)]._field_cutoff))) {
		(_3539_delta)--;
	};
	jule::I64 _3589_r = (*(_35219_a))._field_nd;;
	jule::I64 _3599_w = ((*(_35219_a))._field_nd + _3539_delta);;
	jule::U64 _3629_n = static_cast<jule::U64>(0LLU);;
	(_3589_r)--;
	for (; (_3589_r >= 0LL); (_3589_r)--) {
		{
			_3629_n+=((static_cast<jule::U64>((*(_35219_a))._field_d[_3589_r]) - '0') << _35231_k);
			jule::U64 _3669_quo = (_3629_n / 10LLU);;
			jule::U64 _3679_rem = (_3629_n - (10LLU * _3669_quo));;
			(_3599_w)--;
			if ((_3599_w < 800LL)) {
				(*(_35219_a))._field_d[_3599_w]=static_cast<jule::U8>(static_cast<jule::U8>((_3679_rem + '0')));
			} else if ((_3679_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3629_n=_3669_quo;
		}
	_iter_next_1c1095721:;
	}
	_iter_end_1c1095721:;;
	while ((_3629_n > 0LLU)) {
		{
			jule::U64 _3799_quo = (_3629_n / 10LLU);;
			jule::U64 _3809_rem = (_3629_n - (10LLU * _3799_quo));;
			(_3599_w)--;
			if ((_3599_w < 800LL)) {
				(*(_35219_a))._field_d[_3599_w]=static_cast<jule::U8>(static_cast<jule::U8>((_3809_rem + '0')));
			} else if ((_3809_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3629_n=_3799_quo;
		}
	_iter_next_1c1095c93:;
	}
	_iter_end_1c1095c93:;;
	(*(_35219_a))._field_nd+=_3539_delta;
	if (((*(_35219_a))._field_nd >= 800LL)) {
		(*(_35219_a))._field_nd=800LL;
	};
	(*(_35219_a))._field_dp+=_3539_delta;
	_230d47397_trim(_35219_a);
}



inline jule::Bool _230d48266_shouldRoundUp(_230d45a49_decimal* _39919_a, jule::I64 _39931_nd) {
	if (((_39931_nd < 0LL) || (_39931_nd >= (*(_39919_a))._field_nd))) {
		return false;;
	};
	if ((((*(_39919_a))._field_d[_39931_nd] == '5') && ((_39931_nd + 1LL) == (*(_39919_a))._field_nd))) {
		if ((*(_39919_a))._field_trunc) {
			return true;;
		};
		return ((_39931_nd > 0LL) && ((((*(_39919_a))._field_d[(_39931_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_39919_a))._field_d[_39931_nd] >= '5');;
}



inline jule::Str _230d49a4d_FmtUint(jule::U64 _6112_i, jule::I64 _6120_base) {
	if (((_6112_i < 100LLU) && (_6120_base == 10LL))) {
		return _230d4a521_small(static_cast<jule::I64>(static_cast<jule::I64>(_6112_i)));;
	};
	jule::Str _658_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _230d4ad7e_fmtBits(nullptr, _6112_i, _6120_base, false, false);
		_658_s = __jule_assign_result.__jule_result_arg1;
	});
	return _658_s;;
}



inline jule::Str _230d49e16_FmtInt(jule::I64 _7211_i, jule::I64 _7219_base) {
	if ((((0LL <= _7211_i) && (_7211_i < 100LL)) && (_7219_base == 10LL))) {
		return _230d4a521_small(static_cast<jule::I64>(static_cast<jule::I64>(_7211_i)));;
	};
	jule::Str _768_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _230d4ad7e_fmtBits(nullptr, static_cast<jule::U64>(static_cast<jule::U64>(_7211_i)), _7219_base, (_7211_i < 0LL), false);
		_768_s = __jule_assign_result.__jule_result_arg1;
	});
	return _768_s;;
}



inline jule::Str _230d4a1d0_Itoa(jule::I64 _819_i) {
	return _230d49e16_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_819_i)), 10LL);;
}



inline jule::Str _230d4a521_small(jule::I64 _8610_i) {
	if ((_8610_i < 10LL)) {
		return jule::Str::from_byte(static_cast<jule::U8>(('0' + _8610_i)));;
	};
	jule::Slice<jule::U8> _909_buf = jule::Slice<jule::U8>::alloc(3LL, 3LL, 0);;
	_909_buf[0LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, (_8610_i << 1LL));
	_909_buf[1LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, ((_8610_i << 1LL) + 1LL));
	return _2096a3ba3_StrFromBytes(_909_buf.slice(0LL, 2LL));;
}



inline jule::Bool _230d4a7da_isPowerOfTwo(jule::I64 _9617_x) {
	return ((_9617_x & (_9617_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _230d4ad7e_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I64 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10541_base < 2LL) || (_10541_base > 36LL))) {
		jule::panic(jule::Str::lit("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:107:9"));;
	};
	jule::Slice<jule::U8> _1119_a = jule::Slice<jule::U8>::alloc(65LL, 65LL, 0);;
	jule::I64 _1129_i = _1119_a.len();;
	if (_10552_neg) {
		_10533_u=static_cast<jule::U64>((-(_10533_u)));
	};
	{
		
		if ((_10541_base == 10LL)) {
			_case_begin_1c10d12ea:;
			{
				;
				jule::U64 _15413_us = static_cast<jule::U64>(_10533_u);;
				while ((_15413_us >= 100LLU)) {
					{
						jule::U64 _15613_is = ((_15413_us % 100LL) << 1LLU);;
						_15413_us/=100LLU;
						_1129_i-=2LL;
						_1119_a[(_1129_i + 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((_15613_is + 1LLU)));
						_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(_15613_is));
					}
				_iter_next_1c10d2b48:;
				}
				_iter_end_1c10d2b48:;;
				jule::U64 _1649_is = (_15413_us << 1LLU);;
				(_1129_i)--;
				_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((_1649_is + 1LLU)));
				if ((_15413_us >= 10LLU)) {
					(_1129_i)--;
					_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(_1649_is));
				};
			}
		}
		else if (_230d4a7da_isPowerOfTwo(_10541_base)) {
			_case_begin_1c10d199e:;
			{
				jule::U64 _1799_shift = (static_cast<jule::U64>(_230cdc1e9_TrailingZeros(static_cast<jule::U64>(static_cast<jule::U64>(_10541_base)))) & 7LLU);;
				jule::U64 _1809_b = static_cast<jule::U64>(_10541_base);;
				jule::U64 _1819_m = (static_cast<jule::U64>(_10541_base) - 1LLU);;
				while ((_10533_u >= _1809_b)) {
					{
						(_1129_i)--;
						_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>((static_cast<jule::U64>(_10533_u) & _1819_m)));
						_10533_u>>=_1799_shift;
					}
				_iter_next_1c10e0b01:;
				}
				_iter_end_1c10e0b01:;;
				(_1129_i)--;
				_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>(_10533_u)));
			}
		}
		else {
			_case_begin_1c10d03c6:;
			{
				jule::U64 _1929_b = static_cast<jule::U64>(_10541_base);;
				while ((_10533_u >= _1929_b)) {
					{
						(_1129_i)--;
						jule::U64 _19813_q = jule::div(_10533_u,_1929_b);;
						_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>((_10533_u - (_19813_q * _1929_b)))));
						_10533_u=_19813_q;
					}
				_iter_next_1c10d0d22:;
				}
				_iter_end_1c10d0d22:;;
				(_1129_i)--;
				_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>(_10533_u)));
			}
		}
		_match_end_1c10d0371:;
	};
	if (_10552_neg) {
		(_1129_i)--;
		_1119_a[_1129_i]='-';
	};
	if (_10563_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10516_dst,_1119_a.slice(_1129_i));
		return __jule_func_result;;
	};
	jule::I64 _2175_n = jule::copy((_1119_a), (_1119_a.slice(_1129_i)));;
	__jule_func_result.__jule_result_arg1=_2096a3ba3_StrFromBytes(_1119_a.slice(0LL, _2175_n));
	return __jule_func_result;;
}



inline jule::Str _230d4c37a_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1c11050ee:;
			{
				return _230d4b874_SysInt;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4) || _match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1c1105165:;
			{
				return _230d4bb3d_SysUint;;
			}
		}
		else {
			_case_begin_1c1104b48:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1c1104ae3:;
	};
}



inline jule::I64 _230d4c644_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str::lit("i8", 2) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1c1106276:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3) || _match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1c11063a8:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3) || _match_expr == jule::Str::lit("u32", 3) || _match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1c110641e:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3) || _match_expr == jule::Str::lit("u64", 3) || _match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1c1106485:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4) || _match_expr == jule::Str::lit("int", 3) || _match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1c11064eb:;
			{
				return _230d4b566_BitSize;;
			}
		}
		else {
			_case_begin_1c1105d8b:;
			{
				return -1LL;;
			}
		}
		_match_end_1c1105d25:;
	};
}



inline jule::Str _230d4c985_IntFromBits(jule::I64 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1c1107e37:;
			{
				return jule::Str::lit("i8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1c110883e:;
			{
				return jule::Str::lit("i16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1c11088a5:;
			{
				return jule::Str::lit("i32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1c110891b:;
			{
				return jule::Str::lit("i64", 3);;
			}
		}
		else {
			_case_begin_1c11083cc:;
			{
				return jule::Str();;
			}
		}
		_match_end_1c1108366:;
	};
}



inline jule::Str _230d4cc4e_UintFromBits(jule::I64 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1c1108bc4:;
			{
				return jule::Str::lit("u8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1c1109ab5:;
			{
				return jule::Str::lit("u16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1c1109b2b:;
			{
				return jule::Str::lit("u32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1c1109b92:;
			{
				return jule::Str::lit("u64", 3);;
			}
		}
		else {
			_case_begin_1c1109565:;
			{
				return jule::Str();;
			}
		}
		_match_end_1c11094ee:;
	};
}



inline jule::Str _230d4d018_FloatFromBits(jule::I64 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1c1109e5b:;
			{
				return jule::Str::lit("f32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1c110ad4c:;
			{
				return jule::Str::lit("f64", 3);;
			}
		}
		else {
			_case_begin_1c110a7ec:;
			{
				return jule::Str();;
			}
		}
		_match_end_1c110a786:;
	};
}



inline jule::Bool _230d4db62_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit) {
	({
		auto except = _230d4015e_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I64 _230d4de2b_BitsizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1c1110c42:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1c110e229:;
			{
				return 64LLU;;
			}
		}
		_match_end_1c110e180:;
	};
}



inline jule::I64 _230d4e1e5_BitsizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_1c111199b:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_1c1111a56:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_1c1111abc:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1c1110eea:;
			{
				return 64LLU;;
			}
		}
		_match_end_1c111155b:;
	};
}



inline jule::I64 _230d4e4ae_BitsizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_1c1113508:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_1c11135b3:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_1c1113629:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1c1112eb9:;
			{
				return 64LLU;;
			}
		}
		_match_end_1c1112aac:;
	};
}



inline void _230d4e635_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _1eeea8e41_Arch };
			
			if (_match_expr == jule::Str::lit("arm64", 5) || _match_expr == jule::Str::lit("amd64", 5)) {
				_case_begin_1c11144e8:;
				{
					_230d4b566_BitSize=64LLU;
					_230d4b874_SysInt=jule::Str::lit("i64", 3);
					_230d4bb3d_SysUint=jule::Str::lit("u64", 3);
				}
			}
			else if (_match_expr == jule::Str::lit("i386", 4)) {
				_case_begin_1c111455e:;
				{
					_230d4b566_BitSize=32LLU;
					_230d4b874_SysInt=jule::Str::lit("i32", 3);
					_230d4bb3d_SysUint=jule::Str::lit("u32", 3);
				}
			}
			_match_end_1c11143e9:;
		};
	};
}



inline void _230d4e7ab_init(void) {
	_230d4e635_UpdateTarget();
}



inline jule::I64 _230d53617_MinI(jule::Str _6113_k) {
	_6113_k=_230d4c37a_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1c11137a0:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1c11165e9:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1c1116660:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1c11166c6:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_1c11138d2:;
			{
				return 0LL;;
			}
		}
		_match_end_1c111387c:;
	};
}



inline jule::I64 _230d53925_MaxI(jule::Str _7913_k) {
	_7913_k=_230d4c37a_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1c111696d:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1c1117c05:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1c1117c6b:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1c1117cd2:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_1c1117386:;
			{
				return 0LL;;
			}
		}
		_match_end_1c1117a90:;
	};
}



inline jule::U64 _230d53bde_MaxU(jule::Str _9713_k) {
	_9713_k=_230d4c37a_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1c1118079:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1c1119311:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1c1119377:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1c11193dd:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_1c1118992:;
			{
				return 0LLU;;
			}
		}
		_match_end_1c111919b:;
	};
}



inline jule::F64 _230d53e20_Min(jule::Str _11512_k) {
	_11512_k=_230d4c37a_RealKindOf(_11512_k);
	jule::I64 _1175_i = _230d53617_MinI(_11512_k);;
	if ((_1175_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1175_i));;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1c111b9b7:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1c111b401:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1c111add4:;
			{
				return 0LL;;
			}
		}
		_match_end_1c111b159:;
	};
}



inline jule::F64 _230d541d9_Max(jule::Str _13312_k) {
	_13312_k=_230d4c37a_RealKindOf(_13312_k);
	jule::I64 _1355_i = _230d53925_MaxI(_13312_k);;
	if ((_1355_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1355_i));;
	};
	jule::U64 _1395_u = _230d53bde_MaxU(_13312_k);;
	if ((_1395_u != 0LLU)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1395_u));;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1c111dd2c:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1c111d766:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1c111d1a0:;
			{
				return 0LL;;
			}
		}
		_match_end_1c111d49c:;
	};
}



inline jule::Bool _230d5465c_IsI16Greater(jule::Str _621_k) {
	return _621_k.equal("i8", 2);;
}



inline jule::Bool _230d5496a_IsI32Greater(jule::Str _1121_k) {
	return (_1121_k.equal("i8", 2) || _1121_k.equal("i16", 3));;
}



inline jule::Bool _230d54c34_IsI64Greater(jule::Str _1621_k) {
	return ((_1621_k.equal("i8", 2) || _1621_k.equal("i16", 3)) || _1621_k.equal("i32", 3));;
}



inline jule::Bool _230d55075_IsU16Greater(jule::Str _2321_k) {
	return _2321_k.equal("u8", 2);;
}



inline jule::Bool _230d5533e_IsU32Greater(jule::Str _2821_k) {
	return (_2821_k.equal("u8", 2) || _2821_k.equal("u16", 3));;
}



inline jule::Bool _230d55608_IsU64Greater(jule::Str _3421_k) {
	return ((_3421_k.equal("u8", 2) || _3421_k.equal("u16", 3)) || _3421_k.equal("u32", 3));;
}



inline jule::Bool _230d558c2_IsF32Greater(jule::Str _4117_k) {
	return (!_4117_k.equal("f64", 3));;
}



inline jule::Bool _230d55c68_IsF64Greater(jule::Str _4617_k) {
	return true;;
}



inline jule::Bool _230d560dc_IsGreater(jule::Str _5118_k1, jule::Str _5127_k2) {
	{
		auto &_match_expr{ _5118_k1 };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1c1122391:;
			{
				return _230d571cb_IsSigInt(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1c1122704:;
			{
				return _230d574d9_IsUnsigInt(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1c112277b:;
			{
				return _230d574d9_IsUnsigInt(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1c11229ce:;
			{
				return _230d5465c_IsI16Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1c1122a56:;
			{
				return _230d5496a_IsI32Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1c1122acd:;
			{
				return _230d54c34_IsI64Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1c1122b55:;
			{
				return _230d55075_IsU16Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1c1122c32:;
			{
				return _230d5533e_IsU32Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1c1122ca9:;
			{
				return _230d55608_IsU64Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1c1122d31:;
			{
				return _230d558c2_IsF32Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1c1122da8:;
			{
				return _230d55c68_IsF64Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1c1122e30:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c112258e:;
			{
				return false;;
			}
		}
		_match_end_1c1122517:;
	};
}



inline jule::Bool _230d571cb_IsSigInt(jule::Str _2717_k) {
	return ((((_2717_k.equal("i8", 2) || _2717_k.equal("i16", 3)) || _2717_k.equal("i32", 3)) || _2717_k.equal("i64", 3)) || _2717_k.equal("int", 3));;
}



inline jule::Bool _230d574d9_IsUnsigInt(jule::Str _3619_k) {
	return (((((_3619_k.equal("u8", 2) || _3619_k.equal("u16", 3)) || _3619_k.equal("u32", 3)) || _3619_k.equal("u64", 3)) || _3619_k.equal("uint", 4)) || _3619_k.equal("uintptr", 7));;
}



inline jule::Bool _230d577a3_IsInt(jule::Str _4610_k) {
	return (_230d571cb_IsSigInt(_4610_k) || _230d574d9_IsUnsigInt(_4610_k));;
}



inline jule::Bool _230d57ae4_IsFloat(jule::Str _5112_k) {
	return (_5112_k.equal("f32", 3) || _5112_k.equal("f64", 3));;
}



inline jule::Bool _230d57dad_IsNum(jule::Str _5610_k) {
	return (_230d577a3_IsInt(_5610_k) || _230d57ae4_IsFloat(_5610_k));;
}



inline jule::Bool _230d58177_IsSigNum(jule::Str _6113_k) {
	return (_230d571cb_IsSigInt(_6113_k) || _230d57ae4_IsFloat(_6113_k));;
}



inline void _230d623a1_lshiftUnsig(_230d58386_Const* _59021_c, _230d58386_Const* _59032_x) {
	jule::U64 _5915_l = _230d5acb2_AsU64(_59021_c);;
	jule::U64 _5925_r = _230d5acb2_AsU64(_59032_x);;
	_230d5b5a9_SetU64(_59021_c, static_cast<jule::U64>((_5915_l << _5925_r)));
}



inline void _230d626d1_rshiftUnsig(_230d58386_Const* _59621_c, _230d58386_Const* _59632_x) {
	jule::U64 _5975_l = _230d5acb2_AsU64(_59621_c);;
	jule::U64 _5985_r = _230d5acb2_AsU64(_59632_x);;
	_230d5b5a9_SetU64(_59621_c, static_cast<jule::U64>((_5975_l >> _5985_r)));
}



inline jule::Bool _1bc5842da_IsUnaryOp(jule::U64 _33414_id) {
	{
		auto expr = &(_1bc4d9691_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c11c91d4:;
		if (it != expr_end) {
			jule::U64 *_33512_op = it;
			{
				if ((_33414_id == (*(_33512_op)))) {
					return true;;
				};
			}
			_iter_next_1c11c91d4:;
			++it;
			goto _iter_begin_1c11c91d4;
		}
		_iter_end_1c11c91d4:;
	};
	return false;;
}



inline jule::Bool _1bc5845e8_IsBinOp(jule::U64 _34412_id) {
	{
		auto expr = &(_1bc4d9938_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c11c96ce:;
		if (it != expr_end) {
			jule::U64 *_34512_op = it;
			{
				if ((_34412_id == (*(_34512_op)))) {
					return true;;
				};
			}
			_iter_next_1c11c96ce:;
			++it;
			goto _iter_begin_1c11c96ce;
		}
		_iter_end_1c11c96ce:;
	};
	return false;;
}



inline jule::Bool _1bc584c03_IsStr(jule::Str _36410_k) {
	return (!(_36410_k).empty() && ((_36410_k[0LL] == '\"') || _1bc584ebc_IsRawStr(_36410_k)));;
}



inline jule::Bool _1bc584ebc_IsRawStr(jule::Str _36713_k) {
	return (!(_36713_k).empty() && (_36713_k[0LL] == '`'));;
}



inline jule::Bool _1bc585286_IsRune(jule::Str _37111_k) {
	return (!(_37111_k).empty() && (_37111_k[0LL] == '\''));;
}



inline jule::Bool _1bc585bb0_IsFloat(jule::Str _38012_k) {
	if (_1ed639b56_HasPrefix(_38012_k, jule::Str::lit("0x", 2))) {
		return _1ed6401cd_ContainsAny(_38012_k, jule::Str::lit(".pP", 3));;
	};
	return _1ed6401cd_ContainsAny(_38012_k, jule::Str::lit(".eE", 3));;
}



inline jule::Bool _1bc585e79_IsNum(jule::Str _38810_k) {
	if ((_38810_k).empty()) {
		return false;;
	};
	jule::U8 _3935_b = _38810_k[0LL];;
	return ((_3935_b == '.') || (('0' <= _3935_b) && (_3935_b <= '9')));;
}



inline jule::Bool _1bc58650c_IsIgnoreIdent(jule::Str _40318_ident) {
	return _40318_ident.equal("_", 1);;
}



inline jule::Bool _1bc5867c6_IsAnonIdent(jule::Str _40616_ident) {
	return _40616_ident.equal("<anonymous>", 11);;
}



inline jule::Bool _1bc586d59_IsSpace(jule::I32 _41912_r) {
	{
		auto expr = &(_1bc4d9471_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c11d1bd1:;
		if (it != expr_end) {
			jule::I32 *_42012_cr = it;
			{
				if ((_41912_r == (*(_42012_cr)))) {
					return true;;
				};
			}
			_iter_next_1c11d1bd1:;
			++it;
			goto _iter_begin_1c11d1bd1;
		}
		_iter_end_1c11d1bd1:;
	};
	return false;;
}



inline jule::Bool _1bc5872cc_IsLetter(jule::I32 _42913_r) {
	return _1ed57948b_IsLetter(_42913_r);;
}



inline jule::Bool _1bc587860_IsDecimal(jule::U8 _44914_b) {
	return (('0' <= _44914_b) && (_44914_b <= '9'));;
}



inline jule::Bool _1bc587b29_IsBinary(jule::U8 _45213_b) {
	return ((_45213_b == '0') || (_45213_b == '1'));;
}



inline jule::Bool _1bc587de3_IsOctal(jule::U8 _45512_b) {
	return (('0' <= _45512_b) && (_45512_b <= '7'));;
}



inline jule::Bool _1bc5881ac_IsHex(jule::U8 _45810_b) {
	{
		
		if ((('0' <= _45810_b) && (_45810_b <= '9'))) {
			_case_begin_1c11d5773:;
			{
				return true;;
			}
		}
		else if ((('a' <= _45810_b) && (_45810_b <= 'f'))) {
			_case_begin_1c11d57ea:;
			{
				return true;;
			}
		}
		else if ((('A' <= _45810_b) && (_45810_b <= 'F'))) {
			_case_begin_1c11d5872:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c11d56a7:;
			{
				return false;;
			}
		}
		_match_end_1c11d4651:;
	};
}



inline jule::Bool _1bc588476_IsAssign(jule::U64 _47313_id) {
	return ((((((((_47313_id == static_cast<jule::U64>(1LLU)) || (_47313_id == static_cast<jule::U64>(27LLU))) || (_47313_id == static_cast<jule::U64>(30LLU))) || (_47313_id == static_cast<jule::U64>(32LLU))) || (_47313_id == static_cast<jule::U64>(24LLU))) || (_47313_id == static_cast<jule::U64>(74LLU))) || (_47313_id == static_cast<jule::U64>(62LLU))) || (_47313_id == static_cast<jule::U64>(65LLU)));;
}



inline jule::Bool _1bc588740_IsPostfixOp(jule::U64 _48516_id) {
	{
		auto expr = &(_1bc57d05e_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c11d6dd4:;
		if (it != expr_end) {
			jule::U64 *_48612_op = it;
			{
				if ((_48516_id == (*(_48612_op)))) {
					return true;;
				};
			}
			_iter_next_1c11d6dd4:;
			++it;
			goto _iter_begin_1c11d6dd4;
		}
		_iter_end_1c11d6dd4:;
	};
	return false;;
}



inline jule::Bool _1bc588a09_IsAssignOp(jule::U64 _49515_id) {
	if (_1bc588740_IsPostfixOp(_49515_id)) {
		return true;;
	};
	{
		auto expr = &(_1bc57d35b_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c11d8c82:;
		if (it != expr_end) {
			jule::U64 *_49912_op = it;
			{
				if ((_49515_id == (*(_49912_op)))) {
					return true;;
				};
			}
			_iter_next_1c11d8c82:;
			++it;
			goto _iter_begin_1c11d8c82;
		}
		_iter_end_1c11d8c82:;
	};
	return false;;
}



inline jule::Ptr<_1bc589367_File> _1bc58a70e_NewFileSet(jule::Str _5715_path) {
	return jule::new_ptr<_1bc589367_File>(_1bc589367_File{._field_Path=_5715_path, });;
}



inline _1ed6c7892_Log _1bc58c25a_makeErr(jule::I64 _10012_row, jule::I64 _10022_col, jule::Ptr<_1bc589367_File>* _10033_f, jule::Str _10043_fmt, jule::Slice<jule::Any> _10056_args) {
	return _1ed6c7892_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_10012_row, ._field_Column=_10022_col, ._field_Path=(*((*(_10033_f))))._field_Path, ._field_Text=_1ed6c7d04_Logf(_10043_fmt, _10056_args), };;
}



inline jule::Bool _1bc58c623_bytesHasPrefix(jule::Slice<jule::U8>* _11020_bytes, jule::Str _11035_prefix) {
	if (((*(_11020_bytes)).len() < _11035_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_11035_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c11e3ee0:;
		if (it != expr_end) {
			jule::I64 _1149_i = it - expr->begin();
			{
				if (((*(_11020_bytes))[_1149_i] != _11035_prefix[_1149_i])) {
					return false;;
				};
			}
			_iter_next_1c11e3ee0:;
			++it;
			_1149_i++;
			goto _iter_begin_1c11e3ee0;
		}
		_iter_end_1c11e3ee0:;
	};
	return true;;
}



inline jule::Str _1bc58c997_floatFmtE(jule::Slice<jule::U8>* _12215_txt, jule::I64 _12232_i) {
	jule::Str __jule_func_result;
	(_12232_i)++;
	if ((_12232_i >= (*(_12215_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _1289_b = (*(_12215_txt))[_12232_i];;
	if ((_1289_b == '_')) {
		return __jule_func_result;;
	};
	if (((_1289_b == '+') || (_1289_b == '-'))) {
		(_12232_i)++;
		if ((_12232_i >= (*(_12215_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_12215_txt))[_12232_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I64 _1425_first = _12232_i;;
	for (; (_12232_i < (*(_12215_txt)).len()); (_12232_i)++) {
		{
			_1289_b=(*(_12215_txt))[_12232_i];
			if (((_1289_b != '_') && (!(_1bc587860_IsDecimal(_1289_b))))) {
				goto _iter_end_1c11e6e05;
			};
		}
	_iter_next_1c11e6e05:;
	}
	_iter_end_1c11e6e05:;;
	if ((_12232_i == _1425_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_12215_txt)).slice(0LL, _12232_i));
	return __jule_func_result;;
}



inline jule::Str _1bc58cd60_floatFmtP(jule::Slice<jule::U8>* _15615_txt, jule::I64 _15628_i) {
	return _1bc58c997_floatFmtE(_15615_txt, _15628_i);;
}



inline jule::Str _1bc58d1d4_floatFmtDotnp(jule::Slice<jule::U8>* _16019_txt, jule::I64 _16036_i) {
	if (((*(_16019_txt))[_16036_i] != '.')) {
		return jule::Str();;
	};
	(_16036_i)++;
	_julec_label_1c11e8c92:;
	for (; (_16036_i < (*(_16019_txt)).len()); (_16036_i)++) {
		{
			jule::U8 _1689_b = (*(_16019_txt))[_16036_i];;
			{
				
				if ((_1689_b == '_') || _1bc587860_IsDecimal(_1689_b)) {
					_case_begin_1c11e9c93:;
					{
						goto _iter_next_1c11e8bc6;
					}
				}
				else if (_1bc58eadc_isFloatFmtP(_1689_b, _16036_i)) {
					_case_begin_1c11e9d1a:;
					{
						return _1bc58cd60_floatFmtP(_16019_txt, _16036_i);;
					}
				}
				else {
					_case_begin_1c11e9bc7:;
					{
						goto _iter_end_1c11e8bc6;
					}
				}
				_match_end_1c11e9b61:;
			};
		}
	_iter_next_1c11e8bc6:;
	}
	_iter_end_1c11e8bc6:;;
	return jule::Str();;
}



inline jule::Str _1bc58d558_floatFmtDotfp(jule::Slice<jule::U8>* _18119_txt, jule::I64 _18136_i) {
	_18136_i+=2LL;
	return _1bc58c997_floatFmtE(_18119_txt, _18136_i);;
}



inline jule::Str _1bc58d8cc_floatFmtDotp(jule::Slice<jule::U8>* _18618_txt, jule::I64 _18635_i) {
	(_18635_i)++;
	return _1bc58c997_floatFmtE(_18618_txt, _18635_i);;
}



inline jule::Str _1bc58dd61_floatNum(jule::Slice<jule::U8>* _19114_txt, jule::I64 _19131_i) {
	jule::Str __jule_func_result;
	(_19131_i)++;
	if ((_19131_i >= (*(_19114_txt)).len())) {
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)));
		return __jule_func_result;;
	};
	if (((*(_19114_txt))[_19131_i] == '_')) {
		(_19131_i)--;
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
		return __jule_func_result;;
	};
	for (; (_19131_i < (*(_19114_txt)).len()); (_19131_i)++) {
		{
			jule::U8 _2019_b = (*(_19114_txt))[_19131_i];;
			if (((_19131_i > 1LL) && ((_2019_b == 'e') || (_2019_b == 'E')))) {
				__jule_func_result = _1bc58c997_floatFmtE(_19114_txt, _19131_i);
				return __jule_func_result;;
			};
			if (((_2019_b != '_') && (!(_1bc587860_IsDecimal(_2019_b))))) {
				goto _iter_end_1c11ec504;
			};
		}
	_iter_next_1c11ec504:;
	}
	_iter_end_1c11ec504:;;
	if ((_19131_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
	return __jule_func_result;;
}



inline jule::Str _1bc58e12a_commonNum(jule::Slice<jule::U8>* _21615_txt) {
	jule::Str __jule_func_result;
	jule::I64 _2179_i = 0LL;;
	_julec_label_1c11eee52:;
	for (; (_2179_i < (*(_21615_txt)).len()); (_2179_i)++) {
		{
			jule::U8 _2209_b = (*(_21615_txt))[_2179_i];;
			{
				
				if ((_2209_b == '.')) {
					_case_begin_1c1200ae0:;
					{
						__jule_func_result = _1bc58dd61_floatNum(_21615_txt, _2179_i);
						return __jule_func_result;;
					}
				}
				else if ((_2209_b == '_')) {
					_case_begin_1c1200b67:;
					{
						goto _iter_next_1c11eeeeb;
					}
				}
				else if (_1bc58e768_isFloatFmtE(_2209_b, _2179_i)) {
					_case_begin_1c1200bde:;
					{
						__jule_func_result = _1bc58c997_floatFmtE(_21615_txt, _2179_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_1bc587860_IsDecimal(_2209_b)))) {
					_case_begin_1c1200c66:;
					{
						goto _iter_end_1c11eeeeb;
					}
				}
				_match_end_1c1200a13:;
			};
		}
	_iter_next_1c11eeeeb:;
	}
	_iter_end_1c11eeeeb:;;
	if ((_2179_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_21615_txt)).slice(0LL, _2179_i));
	return __jule_func_result;;
}



inline jule::Str _1bc58e3e4_binaryNum(jule::Slice<jule::U8>* _23915_txt) {
	jule::Str __jule_func_result;
	if ((!(_1bc58c623_bytesHasPrefix(_23915_txt, jule::Str::lit("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_23915_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _2489_i = 2LL;;
	for (; (_2489_i < (*(_23915_txt)).len()); (_2489_i)++) {
		{
			if ((((*(_23915_txt))[_2489_i] != '_') && (!(_1bc587b29_IsBinary((*(_23915_txt))[_2489_i]))))) {
				goto _iter_end_1c1203ad2;
			};
		}
	_iter_next_1c1203ad2:;
	}
	_iter_end_1c1203ad2:;;
	if ((_2489_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_23915_txt)).slice(0LL, _2489_i));
	return __jule_func_result;;
}



inline jule::Bool _1bc58e768_isFloatFmtE(jule::U8 _26116_b, jule::I64 _26125_i) {
	return ((_26125_i > 0LL) && ((_26116_b == 'e') || (_26116_b == 'E')));;
}



inline jule::Bool _1bc58eadc_isFloatFmtP(jule::U8 _26516_b, jule::I64 _26525_i) {
	return ((_26525_i > 0LL) && ((_26516_b == 'p') || (_26516_b == 'P')));;
}



inline jule::Bool _1bc58ee61_isFloatFmtDotnp(jule::Slice<jule::U8>* _26921_txt, jule::I64 _26938_i) {
	if (((*(_26921_txt))[_26938_i] != '.')) {
		return false;;
	};
	(_26938_i)++;
	_julec_label_1c12065b8:;
	for (; (_26938_i < (*(_26921_txt)).len()); (_26938_i)++) {
		{
			jule::U8 _2769_b = (*(_26921_txt))[_26938_i];;
			{
				
				if ((_2769_b == '_') || _1bc587860_IsDecimal(_2769_b)) {
					_case_begin_1c12075ec:;
					{
						goto _iter_next_1c12064a8;
					}
				}
				else if (_1bc58eadc_isFloatFmtP(_2769_b, _26938_i)) {
					_case_begin_1c1207674:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1c1207531:;
					{
						goto _iter_end_1c12064a8;
					}
				}
				_match_end_1c12074ba:;
			};
		}
	_iter_next_1c12064a8:;
	}
	_iter_end_1c12064a8:;;
	return false;;
}



inline jule::Bool _230d63616_isFloatFmtDotp(jule::Slice<jule::U8>* _29020_txt, jule::I64 _29033_i) {
	{
		
		if (((*(_29020_txt)).len() < 3LL)) {
			_case_begin_1c120892d:;
			{
				goto _case_begin_1c12089a5;
			}
		}
		else if (((*(_29020_txt))[_29033_i] != '.')) {
			_case_begin_1c12089a5:;
			{
				goto _case_begin_1c1208a2c;
			}
		}
		else if ((((*(_29020_txt))[(_29033_i + 1LL)] != 'p') && ((*(_29020_txt))[(_29033_i + 1LL)] != 'P'))) {
			_case_begin_1c1208a2c:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1c1208851:;
			{
				return true;;
			}
		}
		_match_end_1c1208785:;
	};
}



inline jule::Bool _230d63858_isFloatFmtDotfp(jule::Slice<jule::U8>* _30321_txt, jule::I64 _30334_i) {
	{
		
		if (((*(_30321_txt)).len() < 4LL)) {
			_case_begin_1c120a699:;
			{
				goto _case_begin_1c120a721;
			}
		}
		else if (((*(_30321_txt))[_30334_i] != '.')) {
			_case_begin_1c120a721:;
			{
				goto _case_begin_1c120a798;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 1LL)] != 'f') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'F'))) {
			_case_begin_1c120a798:;
			{
				goto _case_begin_1c120a9eb;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 2LL)] != 'p') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'P'))) {
			_case_begin_1c120a9eb:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1c120a28c:;
			{
				return true;;
			}
		}
		_match_end_1c120a1c1:;
	};
}



inline jule::Str _230d62e2e_octalNum(jule::Slice<jule::U8>* _31814_txt) {
	jule::Str __jule_func_result;
	if (((*(_31814_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_31814_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I64 _3269_octalStart = 1LL;;
	jule::Bool _3289_o = false;;
	if (((*(_31814_txt))[1LL] == 'o')) {
		if (((*(_31814_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_3269_octalStart)++;
		_3289_o=true;
	};
	jule::I64 _3379_i = _3269_octalStart;;
	for (; (_3379_i < (*(_31814_txt)).len()); (_3379_i)++) {
		{
			jule::U8 _3399_b = (*(_31814_txt))[_3379_i];;
			if ((_3399_b == '.')) {
				if (_3289_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _1bc58dd61_floatNum(_31814_txt, _3379_i);
				return __jule_func_result;;
			};
			if (_1bc58e768_isFloatFmtE(_3399_b, _3379_i)) {
				__jule_func_result = _1bc58c997_floatFmtE(_31814_txt, _3379_i);
				return __jule_func_result;;
			};
			if (((_3399_b != '_') && (!(_1bc587de3_IsOctal(_3399_b))))) {
				goto _iter_end_1c120e24c;
			};
		}
	_iter_next_1c120e24c:;
	}
	_iter_end_1c120e24c:;;
	if ((_3379_i == _3269_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_31814_txt)).slice(0LL, _3379_i));
	return __jule_func_result;;
}



inline jule::Str _230d631c6_hexNum(jule::Slice<jule::U8>* _36012_txt) {
	jule::Str __jule_func_result;
	if (((*(_36012_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_36012_txt))[0LL] != '0') || (((*(_36012_txt))[1LL] != 'x') && ((*(_36012_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I64 _3699_i = 2LL;;
	_julec_label_1c1213806:;
	for (; (_3699_i < (*(_36012_txt)).len()); (_3699_i)++) {
		{
			jule::U8 _3729_b = (*(_36012_txt))[_3699_i];;
			{
				
				if (_230d63616_isFloatFmtDotp(_36012_txt, _3699_i)) {
					_case_begin_1c121452c:;
					{
						__jule_func_result = _1bc58d8cc_floatFmtDotp(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (_230d63858_isFloatFmtDotfp(_36012_txt, _3699_i)) {
					_case_begin_1c12145a4:;
					{
						__jule_func_result = _1bc58d558_floatFmtDotfp(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (_1bc58eadc_isFloatFmtP(_3729_b, _3699_i)) {
					_case_begin_1c121462b:;
					{
						__jule_func_result = _1bc58cd60_floatFmtP(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (_1bc58ee61_isFloatFmtDotnp(_36012_txt, _3699_i)) {
					_case_begin_1c12146a3:;
					{
						__jule_func_result = _1bc58d1d4_floatFmtDotnp(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (((_3729_b != '_') && (!(_1bc5881ac_IsHex(_3729_b))))) {
					_case_begin_1c121472a:;
					{
						goto _iter_end_1c121398d;
					}
				}
				_match_end_1c121443e:;
			};
		}
	_iter_next_1c121398d:;
	}
	_iter_end_1c121398d:;;
	if ((_3699_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_36012_txt)).slice(0LL, _3699_i));
	return __jule_func_result;;
}



inline jule::Str _1bbcaaeb8_hexEscape(jule::Slice<jule::U8>* _39315_txt, jule::I64 _39328_n) {
	jule::Str __jule_func_result;
	if (((*(_39315_txt)).len() < _39328_n)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _3999_i = 2LL;;
	for (; (_3999_i < _39328_n); (_3999_i)++) {
		{
			if ((!(_1bc5881ac_IsHex((*(_39315_txt))[_3999_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1c1216c9e:;
	}
	_iter_end_1c1216c9e:;;
	__jule_func_result=static_cast<jule::Str>((*(_39315_txt)).slice(0LL, _39328_n));
	return __jule_func_result;;
}



inline jule::Str _1bbcab21b_bigUnicodePointEscape(jule::Slice<jule::U8>* _41127_txt) {
	return _1bbcaaeb8_hexEscape(_41127_txt, 10LL);;
}



inline jule::Str _1bbcab4d5_littleUnicodePointEscape(jule::Slice<jule::U8>* _41630_txt) {
	return _1bbcaaeb8_hexEscape(_41630_txt, 6LL);;
}



inline jule::Str _1bbcab79e_hexByteEscape(jule::Slice<jule::U8>* _42119_txt) {
	return _1bbcaaeb8_hexEscape(_42119_txt, 4LL);;
}



inline jule::Str _1bbcaba68_byteEscape(jule::Slice<jule::U8>* _42616_txt) {
	jule::Str __jule_func_result;
	if (((*(_42616_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_1bc587de3_IsOctal((*(_42616_txt))[1LL]))) || (!(_1bc587de3_IsOctal((*(_42616_txt))[2LL])))) || (!(_1bc587de3_IsOctal((*(_42616_txt))[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_42616_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_1ed6c7892_Log> _1bc592e53_Lex(jule::Ptr<_1bc589367_File> _80912_f, jule::I64 _80922_mode) {
	if ((_80912_f == nullptr)) {
		return nullptr;;
	};
	_1bbcac2d8_lex _8149_lex = _1bbcac2d8_lex{._field_mode=_80922_mode, ._field_file=_80912_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_1bc5914e5_newLine(&_8149_lex);
	_1bbcacdcc_lex(&_8149_lex);
	if ((_8149_lex._field_errors.len() > 0LL)) {
		return _8149_lex._field_errors;;
	};
	(*(_80912_f))._field_Tokens=_8149_lex._field_tokens;
	return nullptr;;
}



inline jule::Bool _1bc780470_FindModuleFile(jule::Slice<jule::Ptr<_230a4148c_DirEntry>>* _1320_dirents) {
	{
		auto expr = _1320_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0b5c85a:;
		if (it != expr_end) {
			jule::Ptr<_230a4148c_DirEntry> *_1412_d = it;
			{
				if (((!(_230a44e30_IsDir((*((*(_1412_d))))._field_Stat.ptr()))) && (*((*(_1412_d))))._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_1c0b5c85a:;
			++it;
			goto _iter_begin_1c0b5c85a;
		}
		_iter_end_1c0b5c85a:;
	};
	return false;;
}



inline jule::Str _1bc780728_FindModuleFileDeep(jule::Str _2527_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_230a4148c_DirEntry>> _2713_dirents = ({
				auto except = static__1ed646316_Read(_2527_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1c0b5d22e;
				} jule::Slice<jule::Ptr<_230a4148c_DirEntry>>(nullptr);});
			});;
			jule::Bool _319_exist = _1bc780470_FindModuleFile(&(_2713_dirents));;
			if (_319_exist) {
				return _2527_path;;
			};
			jule::I64 _369_n = _2527_path.len();;
			_2527_path=_1ed645920_Dir(_2527_path);
			if ((_2527_path.len() == _369_n)) {
				goto _iter_end_1c0b5d22e;
			};
		}
	_iter_next_1c0b5d22e:;
	}
	_iter_end_1c0b5d22e:;;
	return jule::Str();;
}



inline jule::Slice<_1ed6c7892_Log> _1bc7809e2_CheckModuleFile(jule::Str* _4721_path) {
	jule::Slice<jule::U8> _485_bytes = ({
		auto except = static__230a433c3_Read(_1ed644c2c_Join(jule::Slice<jule::Str>::make({(*(_4721_path)),jule::Str::lit("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_1ed6c7892_Log>::make({_1ed6c7892_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str::lit("module file could not checked because of a problem", 50), }});;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _545_s = _1ed642213_Trim(_2096a38d9_BytesStr(_485_bytes), jule::Str::lit(" \n\r\t\v", 5));;
	if ((_545_s.len() != 0LL)) {
		return jule::Slice<_1ed6c7892_Log>::make({_1ed6c7892_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str::lit("module file has syntax error(s)", 31), }});;
	};
	return nullptr;;
}



inline jule::Bool _1bc781372_IsPub(jule::Str _910_ident) {
	if ((_910_ident[0LL] < 128LLU)) {
		jule::U8 _119_b = _910_ident[0LL];;
		return (('A' <= _119_b) && (_119_b <= 'Z'));;
	};
	jule::I32 _145_r = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2095d1938_DecodeRuneStr(_910_ident);
		_145_r = __jule_assign_result.__jule_result_arg0;
	});
	return _1ed5e2e94_IsUpper(_145_r);;
}



inline jule::Bool _1bc7c9376_IsAscii(jule::I32 _1112_r) {
	;
	return (_1112_r <= 127LL);;
}



inline jule::I32 _1bc7e4ade_ToRune(jule::Str _2015_lit) {
	jule::I32 _219_r = static_cast<jule::I32>(0LL);;
	(_2015_lit).mut_slice(1LL, (_2015_lit.len() - 1LL));;
	if (((_2015_lit[0LL] == '\\') && (_2015_lit.len() > 1LL))) {
		jule::I64 _2413_i = 0LL;;
		_219_r=static_cast<jule::I32>(_1bc7e575a_runeFromEsqSeq(_2015_lit, &(_2413_i)));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2095d1938_DecodeRuneStr(_2015_lit);
			_219_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _219_r;;
}



inline jule::Str _1bc7e4d0e_ToRawStr(jule::Str _3613_lit) {
	if ((_3613_lit.len() == 2LL)) {
		return jule::Str();;
	};
	return _3613_lit.slice(1LL, (_3613_lit.len() - 1LL));;
}



inline jule::Str _1bc7e5150_ToStr(jule::Str _4714_lit) {
	if ((_4714_lit.len() == 2LL)) {
		return jule::Str();;
	};
	jule::Bool _539_isPure = true;;
	{
		auto expr = &(_4714_lit);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0b6a13c:;
		if (it != expr_end) {
			jule::U8 _5412_b = *it;
			{
				if (((_5412_b >= 128LLU) || (_5412_b == '\\'))) {
					_539_isPure=false;
					goto _iter_end_1c0b6a13c;
				};
			}
			_iter_next_1c0b6a13c:;
			++it;
			goto _iter_begin_1c0b6a13c;
		}
		_iter_end_1c0b6a13c:;
	};
	if (_539_isPure) {
		return _4714_lit.slice(1LL, (_4714_lit.len() - 1LL));;
	};
	(_4714_lit).mut_slice(1LL, (_4714_lit.len() - 1LL));;
	jule::Slice<jule::U8> _689_s = jule::Slice<jule::U8>::alloc(0LL, _4714_lit.len(), 0);;
	jule::I64 _699_i = 0LL;;
	while ((_699_i < _4714_lit.len())) {
		{
			jule::U8 _719_b = _4714_lit[_699_i];;
			if ((_719_b == '\\')) {
				_1bc7e5b01_strEsqSeq(&(_689_s), _4714_lit, &(_699_i));
			} else {
				jule::I32 _7513_r = 0;;
				jule::I64 _7516_size = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2095d1938_DecodeRuneStr(_4714_lit.slice(_699_i));
					_7513_r = __jule_assign_result.__jule_result_arg0;
					_7516_size = __jule_assign_result.__jule_result_arg1;
				});
				_699_i+=_7516_size;
				_689_s=_2095d2a5a_AppendRune(_689_s, _7513_r);
			};
		}
	_iter_next_1c0b6c1a5:;
	}
	_iter_end_1c0b6c1a5:;;
	return _2096a3ba3_StrFromBytes(_689_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _1bc7e5419_tryBtoaCommonEsq(jule::Str _8321_s) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_8321_s.len() < 2LL) || (_8321_s[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _8321_s[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1c0b6ebe1:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1c0b6ec68:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1c0b6ece0:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1c0b6ed67:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1c0b6edde:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1c0b6ee66:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1c0b6eedd:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1c0b70065:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1c0b700dc:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1c0b70164:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1c0b6ea9d:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1bc7e575a_runeFromEsqSeq(jule::Str _11319_s, jule::I64* _11332_i) {
	jule::U8 _1145_b = 0;;
	jule::Bool _1148_ok = false;;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _1bc7e5419_tryBtoaCommonEsq(_11319_s.slice((*(_11332_i))));
		_1145_b = __jule_assign_result.__jule_result_arg0;
		_1148_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_11332_i)))++;
	if (_1148_ok) {
		((*(_11332_i)))++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_1145_b));;
	};
	{
		auto &_match_expr{ _11319_s[(*(_11332_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1c0b74ab4:;
			{
				;
				jule::I32 _1249_r = static_cast<jule::I32>(({
					auto except = _230d38267_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 5LL)), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:124:19"));
					(except.result);
				}));;
				(*(_11332_i))+=5LL;
				return _1249_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1c0b74872:;
			{
				;
				jule::I32 _1299_r = static_cast<jule::I32>(({
					auto except = _230d38267_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 9LL)), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:129:19"));
					(except.result);
				}));;
				(*(_11332_i))+=9LL;
				return _1299_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1c0b748d8:;
			{
				;
				jule::Str _1349_seq = _11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _230d38267_ParseUint(_1349_seq, 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:136:18"));
					(except.result);
				})));;
			}
		}
		else {
			_case_begin_1c0b73233:;
			{
				;
				jule::Str _1399_seq = _11319_s.slice((*(_11332_i)), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _230d38267_ParseUint(_1399_seq.slice(1LL), 8LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:141:18"));
					(except.result);
				})));;
			}
		}
		_match_end_1c0b731cd:;
	};
}



inline void _1bc7e5b01_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I64* _14545_i) {
	jule::I32 _1465_r = _1bc7e575a_runeFromEsqSeq(_14532_s, _14545_i);;
	if ((_1465_r <= 255LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = (*(_14519_buf)); __jule_push_dest.push(static_cast<jule::U8>(static_cast<jule::U8>(_1465_r))); };
		return;;
	};
	jule::Str _1515_sr = jule::Str::from_rune(_1465_r);;
	((*(_14519_buf))).append(_2096a3620_StrBytes(_1515_sr));;
}



inline jule::I64 _1bc2be421_findFormatPrefix(jule::Slice<jule::U8>* _1122_bytes, jule::I64 _1141_i) {
	while ((_1141_i < (*(_1122_bytes)).len())) {
		{
			jule::I32 _139_r = 0;;
			jule::I64 _1312_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2095d15e7_DecodeRune((*(_1122_bytes)).slice(_1141_i));
				_139_r = __jule_assign_result.__jule_result_arg0;
				_1312_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_139_r == '{')) {
				return _1141_i;;
			};
			_1141_i+=_1312_size;
		}
	_iter_next_1c0ba1063:;
	}
	_iter_end_1c0ba1063:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1bc2be7d9_getFormatRange(jule::I64* _2724_i, jule::Slice<jule::U8>* _2737_bytes) {
	jule::I64 _285_start = (*(_2724_i));;
	jule::I64 _299_braces = 0LL;;
	while (((*(_2724_i)) < (*(_2737_bytes)).len())) {
		{
			jule::I32 _319_r = 0;;
			jule::I64 _3112_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2095d15e7_DecodeRune((*(_2737_bytes)).slice((*(_2724_i))));
				_319_r = __jule_assign_result.__jule_result_arg0;
				_3112_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2724_i))+=_3112_size;
			{
				auto &_match_expr{ _319_r };
				
				if (_match_expr == '{') {
					_case_begin_1c0ba38b2:;
					{
						(_299_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1c0ba3928:;
					{
						(_299_braces)--;
						if ((_299_braces == 0LL)) {
							return (*(_2737_bytes)).slice(_285_start, (*(_2724_i)));;
						};
					}
				}
				_match_end_1c0ba353d:;
			};
		}
	_iter_next_1c0ba2b14:;
	}
	_iter_end_1c0ba2b14:;;
	return nullptr;;
}



inline void _1bc2beac5_FmtByDefault(_2096a4489_StrBuilder* _4722_buf, jule::Any* _4740_arg) {
	if (((*(_4740_arg)) == nullptr)) {
		_2096a4e4b_WriteStr(_4722_buf, jule::Str::lit("<nil>", 5));
		return;;
	};
	{
		auto &_match_expr{ (*(_4740_arg)) };
		
		if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1c0ba560b:;
			{
				_2096a4e4b_WriteStr(_4722_buf, _230d332ea_FmtFloat(static_cast<jule::F64>(static_cast<jule::F64>((*(_4740_arg)).cast<jule::F32>(&__jule_any_type130))), 'g', -1LL, 32LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1c0ba4dad:;
			{
				_2096a4e4b_WriteStr(_4722_buf, _230d332ea_FmtFloat(static_cast<jule::F64>((*(_4740_arg)).cast<jule::F64>(&__jule_any_type5)), 'g', -1LL, 64LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_1c0ba5056:;
			{
				_2096a4e4b_WriteStr(_4722_buf, _230d49e16_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I8>(&__jule_any_type131))), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1c0ba50bc:;
			{
				_2096a4e4b_WriteStr(_4722_buf, _230d49e16_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I16>(&__jule_any_type132))), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1c0ba56c7:;
			{
				_2096a4e4b_WriteStr(_4722_buf, _230d49e16_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I32>(&__jule_any_type6))), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1c0ba573d:;
			{
				_2096a4e4b_WriteStr(_4722_buf, _230d49e16_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I64>(&__jule_any_type1)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1c0ba57a4:;
			{
				_2096a4e4b_WriteStr(_4722_buf, _230d49a4d_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U8>(&__jule_any_type129))), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_1c0ba581a:;
			{
				_2096a4e4b_WriteStr(_4722_buf, _230d49a4d_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U16>(&__jule_any_type133))), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1c0ba5881:;
			{
				_2096a4e4b_WriteStr(_4722_buf, _230d49a4d_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U32>(&__jule_any_type134))), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1c0ba58e7:;
			{
				_2096a4e4b_WriteStr(_4722_buf, _230d49a4d_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U64>(&__jule_any_type2)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1c0ba595d:;
			{
				_2096a4e4b_WriteStr(_4722_buf, (*(_4740_arg)).cast<jule::Str>(&__jule_any_type4));
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1c0ba59c4:;
			{
				if ((*(_4740_arg)).cast<jule::Bool>(&__jule_any_type3)) {
					_2096a4e4b_WriteStr(_4722_buf, jule::Str::lit("true", 4));
				} else {
					_2096a4e4b_WriteStr(_4722_buf, jule::Str::lit("false", 5));
				};
			}
		}
		else {
			_case_begin_1c0ba486e:;
			{
				_2096a4e4b_WriteStr(_4722_buf, jule::to_str((*(_4740_arg))));
			}
		}
		_match_end_1c0ba3c7a:;
	};
}



inline void _1bc2beee3_applyFmtByDefault(_2096a4489_StrBuilder* _8627_buf, jule::I64* _8649_j, jule::Slice<jule::Any> _8657_args) {
	jule::Any _875_arg = _8657_args[(*(_8649_j))];;
	((*(_8649_j)))++;
	_1bc2beac5_FmtByDefault(_8627_buf, &(_875_arg));
}



inline void _1bc2c0444_applyFmt(jule::Slice<jule::U8>* _9418_fmt, _2096a4489_StrBuilder* _9436_buf, jule::I64* _9458_j, jule::Slice<jule::Any> _9466_args) {
	if (((*(_9418_fmt)).len() == 2LL)) {
		_1bc2beee3_applyFmtByDefault(_9436_buf, _9458_j, _9466_args);
		return;;
	};
	if (((((((*(_9418_fmt)).len() == 4LL) && ((*(_9418_fmt))[0LL] == '{')) && ((*(_9418_fmt))[1LL] == '{')) && ((*(_9418_fmt))[2LL] == '}')) && ((*(_9418_fmt))[3LL] == '}'))) {
		_2096a4e4b_WriteStr(_9436_buf, jule::Str::lit("{}", 2));
		return;;
	};
	_2096a4b93_Write(_9436_buf, (*(_9418_fmt)));
}



inline jule::Slice<jule::U8> _1bc2c0785_Format(jule::Str _11511_fmt, jule::Slice<jule::Any> _11521_args) {
	jule::Slice<jule::U8> _1169_fmtBytes = _2096a3620_StrBytes(_11511_fmt);;
	if ((_11521_args.len() == 0LL)) {
		return _1169_fmtBytes;;
	};
	jule::I64 _1209_i = _1bc2be421_findFormatPrefix(&(_1169_fmtBytes), 0LL);;
	if ((_1209_i == -1LL)) {
		return _1169_fmtBytes;;
	};
	jule::I64 _1249_j = 0LL;;
	jule::I64 _1259_last = 0LL;;
	_2096a4489_StrBuilder _1269_buf = static__2096a48da_New(static_cast<jule::I64>(_11511_fmt.len()));;
	for (; (_1209_i != -1LL); _1209_i=static_cast<jule::I64>(_1bc2be421_findFormatPrefix(&(_1169_fmtBytes), _1209_i))) {
		{
			_2096a4b93_Write(&_1269_buf, _1169_fmtBytes.slice(_1259_last, _1209_i));
			jule::Slice<jule::U8> _12913_format = _1bc2be7d9_getFormatRange(&(_1209_i), &(_1169_fmtBytes));;
			if ((_12913_format == nullptr)) {
				goto _iter_next_1c0bb286b;
			};
			_1bc2c0444_applyFmt(&(_12913_format), &(_1269_buf), &(_1249_j), _11521_args);
			if ((_1249_j >= _11521_args.len())) {
				_2096a4b93_Write(&_1269_buf, _1169_fmtBytes.slice(_1209_i));
				_1259_last=static_cast<jule::I64>(_1169_fmtBytes.len());
				goto _iter_end_1c0bb286b;
			};
			_1259_last=_1209_i;
		}
	_iter_next_1c0bb286b:;
	}
	_iter_end_1c0bb286b:;;
	if ((_1259_last < _1169_fmtBytes.len())) {
		_2096a4b93_Write(&_1269_buf, _1169_fmtBytes.slice(_1259_last));
	};
	return _2096a61e4_Buf(&_1269_buf);;
}



inline jule::Str _1bc2c28a8_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args) {
	return _2096a3ba3_StrFromBytes(_1bc2c0785_Format(_3111_fmt, _3121_args));;
}



inline jule::Bool _1ece21273_parameterUsesGenerics(jule::Ptr<_1ece1ceea_ParamIns>* _38431_p, jule::Slice<jule::Ptr<_1bc5a76a4_GenericDecl>>* _38446_generics) {
	if (_1ece19bd9_IsSelf((*((*(_38431_p))))._field_Decl.ptr())) {
		return false;;
	};
	return _1bc85b925_kindUsesGenerics(&((*((*(_38431_p))))._field_Kind), _38446_generics);;
}



inline jule::Ptr<_1bc848390_TypeSymbol> _1ece23a39_buildType(jule::Ptr<_1bc59563c_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1bc848390_TypeSymbol>(_1bc848390_TypeSymbol{._field_Decl=_9418_t, });;
}



inline jule::Ptr<_1bc8119eb_Value> _1ece23d47_buildExpr(jule::Ptr<_1bc599971_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1bc8119eb_Value>(_1bc8119eb_Value{._field_Expr=_10318_expr, });;
}



inline jule::Ptr<_1bc8403cb_TypeAlias> _1ece24111_buildTypeAlias(jule::Ptr<_1bc5b1eb6_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_1bc8403cb_TypeAlias>(_1bc8403cb_TypeAlias{._field_Scope=(*(_11223_decl))._field_Scope, ._field_Public=(*(_11223_decl))._field_Public, ._field_Binded=(*(_11223_decl))._field_Binded, ._field_Token=(*(_11223_decl))._field_Token, ._field_Ident=(*(_11223_decl))._field_Ident, ._field_Kind=_1ece23a39_buildType((*(_11223_decl))._field_Kind), });;
}



inline jule::Ptr<_1bc5b8440_Field> _1ece24452_buildField(jule::Ptr<_1bc5b586b_FieldDecl> _12319_decl) {
	return jule::new_ptr<_1bc5b8440_Field>(_1bc5b8440_Field{._field_Token=(*(_12319_decl))._field_Token, ._field_Public=(*(_12319_decl))._field_Public, ._field_Mutable=(*(_12319_decl))._field_Mutable, ._field_Ident=(*(_12319_decl))._field_Ident, ._field_Kind=_1ece23a39_buildType((*(_12319_decl))._field_Kind), ._field_Default=(*(_12319_decl))._field_Default});;
}



inline jule::Slice<jule::Ptr<_1bc5b8440_Field>> _1ece2471b_buildFields(jule::Slice<jule::Ptr<_1bc5b586b_FieldDecl>>* _13421_decls) {
	jule::Slice<jule::Ptr<_1bc5b8440_Field>> _1359_fields = jule::Slice<jule::Ptr<_1bc5b8440_Field>>::alloc(0LL, (*(_13421_decls)).len());;
	{
		auto expr = _13421_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c15323c7:;
		if (it != expr_end) {
			jule::Ptr<_1bc5b586b_FieldDecl> _13617_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1bc5b8440_Field>> &__jule_push_dest = _1359_fields; __jule_push_dest.push(_1ece24452_buildField(_13617_decl)); };
			}
			_iter_next_1c15323c7:;
			++it;
			goto _iter_begin_1c15323c7;
		}
		_iter_end_1c15323c7:;
	};
	return _1359_fields;;
}



inline jule::Ptr<_1bc5bb333_Struct> _1ece249d5_buildStruct(jule::Ptr<_1bc5b6262_StructDecl> _14220_decl) {
	return jule::new_ptr<_1bc5bb333_Struct>(_1bc5bb333_Struct{._field_Token=(*(_14220_decl))._field_Token, ._field_Ident=(*(_14220_decl))._field_Ident, ._field_Fields=_1ece2471b_buildFields(&((*(_14220_decl))._field_Fields)), ._field_Public=(*(_14220_decl))._field_Public, ._field_Binded=(*(_14220_decl))._field_Binded, ._field_Directives=(*(_14220_decl))._field_Directives, ._field_Generics=(*(_14220_decl))._field_Generics, });;
}



inline jule::Ptr<_1ece195bd_Param> _1ece24c9e_buildParam(jule::Ptr<_1bc5aac07_ParamDecl> _15419_decl) {
	return jule::new_ptr<_1ece195bd_Param>(_1ece195bd_Param{._field_Token=(*(_15419_decl))._field_Token, ._field_Mutable=(*(_15419_decl))._field_Mutable, ._field_Variadic=(*(_15419_decl))._field_Variadic, ._field_Reference=(*(_15419_decl))._field_Reference, ._field_Kind=_1ece23a39_buildType((*(_15419_decl))._field_Kind), ._field_Ident=(*(_15419_decl))._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1ece195bd_Param>> _1ece25145_buildParams(jule::Slice<jule::Ptr<_1bc5aac07_ParamDecl>>* _16521_decls) {
	jule::Slice<jule::Ptr<_1ece195bd_Param>> _1669_params = jule::Slice<jule::Ptr<_1ece195bd_Param>>::alloc(0LL, (*(_16521_decls)).len());;
	{
		auto expr = _16521_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c15348d5:;
		if (it != expr_end) {
			jule::Ptr<_1bc5aac07_ParamDecl> _16717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1ece195bd_Param>> &__jule_push_dest = _1669_params; __jule_push_dest.push(_1ece24c9e_buildParam(_16717_decl)); };
			}
			_iter_next_1c15348d5:;
			++it;
			goto _iter_begin_1c15348d5;
		}
		_iter_end_1c15348d5:;
	};
	return _1669_params;;
}



inline jule::Ptr<_1ece18d3c_RetType> _1ece2540e_buildRetType(jule::Ptr<_1bc598530_RetTypeDecl> _17321_decl) {
	if ((((*(_17321_decl))._field_Idents == nullptr) && ((*(_17321_decl))._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1ece18d3c_RetType>(_1ece18d3c_RetType{._field_Kind=_1ece23a39_buildType((*(_17321_decl))._field_Kind), ._field_Idents=(*(_17321_decl))._field_Idents});;
}



inline jule::Ptr<_1ece1b092_Fn> _1ece256c8_buildFunc(jule::Ptr<_1bc5ac159_FnDecl> _18318_decl) {
	return jule::new_ptr<_1ece1b092_Fn>(_1ece1b092_Fn{._field_Token=(*(_18318_decl))._field_Token, ._field_Global=(*(_18318_decl))._field_Global, ._field_Unsafety=(*(_18318_decl))._field_Unsafety, ._field_Public=(*(_18318_decl))._field_Public, ._field_Binded=(*(_18318_decl))._field_Binded, ._field_Statically=(*(_18318_decl))._field_Statically, ._field_Exceptional=(*(_18318_decl))._field_Exceptional, ._field_Ident=(*(_18318_decl))._field_Ident, ._field_Directives=(*(_18318_decl))._field_Directives, ._field_Scope=(*(_18318_decl))._field_Scope, ._field_Generics=(*(_18318_decl))._field_Generics, ._field_Result=_1ece2540e_buildRetType((*(_18318_decl))._field_Result), ._field_Params=_1ece25145_buildParams(&((*(_18318_decl))._field_Params)), });;
}



inline jule::Slice<jule::Ptr<_1ece1b092_Fn>> _1ece25992_buildMethods(jule::Slice<jule::Ptr<_1bc5ac159_FnDecl>>* _20122_decls) {
	jule::Slice<jule::Ptr<_1ece1b092_Fn>> _2029_methods = jule::Slice<jule::Ptr<_1ece1b092_Fn>>::alloc(0LL, (*(_20122_decls)).len());;
	{
		auto expr = _20122_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c153a0b1:;
		if (it != expr_end) {
			jule::Ptr<_1bc5ac159_FnDecl> _20317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1ece1b092_Fn>> &__jule_push_dest = _2029_methods; __jule_push_dest.push(_1ece256c8_buildFunc(_20317_decl)); };
			}
			_iter_next_1c153a0b1:;
			++it;
			goto _iter_begin_1c153a0b1;
		}
		_iter_end_1c153a0b1:;
	};
	return _2029_methods;;
}



inline jule::Slice<jule::Ptr<_1bc848390_TypeSymbol>> _1ece25c5b_buildTraitInherits(jule::Slice<jule::Ptr<_1bc59563c_TypeDecl>>* _20928_inherits) {
	jule::Slice<jule::Ptr<_1bc848390_TypeSymbol>> _2109_symbols = jule::Slice<jule::Ptr<_1bc848390_TypeSymbol>>::alloc(0LL, (*(_20928_inherits)).len());;
	{
		auto expr = _20928_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c153e4b1:;
		if (it != expr_end) {
			jule::Ptr<_1bc59563c_TypeDecl> _21117_it = *it;
			{
				{ jule::Slice<jule::Ptr<_1bc848390_TypeSymbol>> &__jule_push_dest = _2109_symbols; __jule_push_dest.push(_1ece23a39_buildType(_21117_it)); };
			}
			_iter_next_1c153e4b1:;
			++it;
			goto _iter_begin_1c153e4b1;
		}
		_iter_end_1c153e4b1:;
	};
	return _2109_symbols;;
}



inline jule::Ptr<_1bc713a41_Trait> _1ece26025_buildTrait(jule::Ptr<_1bc5b699e_TraitDecl> _21719_decl) {
	return jule::new_ptr<_1bc713a41_Trait>(_1bc713a41_Trait{._field_Token=(*(_21719_decl))._field_Token, ._field_Ident=(*(_21719_decl))._field_Ident, ._field_Public=(*(_21719_decl))._field_Public, ._field_Inherits=_1ece25c5b_buildTraitInherits(&((*(_21719_decl))._field_Inherits)), ._field_Methods=_1ece25992_buildMethods(&((*(_21719_decl))._field_Methods)), });;
}



inline jule::Ptr<_1bc7156d0_EnumItem> _1ece262de_buildEnumItem(jule::Ptr<_1bc5b3a56_EnumItemDecl> _22722_decl) {
	return jule::new_ptr<_1bc7156d0_EnumItem>(_1bc7156d0_EnumItem{._field_Token=(*(_22722_decl))._field_Token, ._field_Ident=(*(_22722_decl))._field_Ident, ._field_Value=_1ece23d47_buildExpr((*(_22722_decl))._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1bc7156d0_EnumItem>> _1ece265a8_buildEnumItems(jule::Slice<jule::Ptr<_1bc5b3a56_EnumItemDecl>>* _23524_decls) {
	jule::Slice<jule::Ptr<_1bc7156d0_EnumItem>> _2369_items = jule::Slice<jule::Ptr<_1bc7156d0_EnumItem>>::alloc(0LL, (*(_23524_decls)).len());;
	{
		auto expr = _23524_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c154267e:;
		if (it != expr_end) {
			jule::Ptr<_1bc5b3a56_EnumItemDecl> _23717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1bc7156d0_EnumItem>> &__jule_push_dest = _2369_items; __jule_push_dest.push(_1ece262de_buildEnumItem(_23717_decl)); };
			}
			_iter_next_1c154267e:;
			++it;
			goto _iter_begin_1c154267e;
		}
		_iter_end_1c154267e:;
	};
	return _2369_items;;
}



inline jule::Ptr<_1bc71624c_Enum> _1ece26a2b_buildEnum(jule::Ptr<_1bc5b4617_EnumDecl> _24318_decl) {
	return jule::new_ptr<_1bc71624c_Enum>(_1bc71624c_Enum{._field_Token=(*(_24318_decl))._field_Token, ._field_Public=(*(_24318_decl))._field_Public, ._field_Ident=(*(_24318_decl))._field_Ident, ._field_Kind=_1ece23a39_buildType((*(_24318_decl))._field_Kind), ._field_Items=_1ece265a8_buildEnumItems(&((*(_24318_decl))._field_Items))});;
}



inline jule::Ptr<_1bc717380_TypeEnumItem> _1ece26ce5_buildTypeEnumItem(jule::Ptr<_1bc5b4e42_TypeEnumItemDecl> _25326_decl) {
	return jule::new_ptr<_1bc717380_TypeEnumItem>(_1bc717380_TypeEnumItem{._field_Token=(*(_25326_decl))._field_Token, ._field_Ident=(*(_25326_decl))._field_Ident, ._field_Kind=_1ece23a39_buildType((*(_25326_decl))._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1bc717380_TypeEnumItem>> _1ece270ae_buildTypeEnumItems(jule::Slice<jule::Ptr<_1bc5b4e42_TypeEnumItemDecl>>* _26128_decls) {
	jule::Slice<jule::Ptr<_1bc717380_TypeEnumItem>> _2629_items = jule::Slice<jule::Ptr<_1bc717380_TypeEnumItem>>::alloc(0LL, (*(_26128_decls)).len());;
	{
		auto expr = _26128_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1545990:;
		if (it != expr_end) {
			jule::Ptr<_1bc5b4e42_TypeEnumItemDecl> _26317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1bc717380_TypeEnumItem>> &__jule_push_dest = _2629_items; __jule_push_dest.push(_1ece26ce5_buildTypeEnumItem(_26317_decl)); };
			}
			_iter_next_1c1545990:;
			++it;
			goto _iter_begin_1c1545990;
		}
		_iter_end_1c1545990:;
	};
	return _2629_items;;
}



inline jule::Ptr<_1bc717957_TypeEnum> _1ece27378_buildTypeEnum(jule::Ptr<_1bc5b55a2_TypeEnumDecl> _26922_decl) {
	return jule::new_ptr<_1bc717957_TypeEnum>(_1bc717957_TypeEnum{._field_Token=(*(_26922_decl))._field_Token, ._field_Public=(*(_26922_decl))._field_Public, ._field_Ident=(*(_26922_decl))._field_Ident, ._field_Items=_1ece270ae_buildTypeEnumItems(&((*(_26922_decl))._field_Items))});;
}



inline jule::Ptr<_1bc7a750d_Var> _1ece27642_buildVar(jule::Ptr<_1bc5ad314_VarDecl> _27817_decl) {
	return jule::new_ptr<_1bc7a750d_Var>(_1bc7a750d_Var{._field_Token=(*(_27817_decl))._field_Token, ._field_Ident=(*(_27817_decl))._field_Ident, ._field_Binded=(*(_27817_decl))._field_Binded, ._field_Constant=(*(_27817_decl))._field_Constant, ._field_Mutable=(*(_27817_decl))._field_Mutable, ._field_Public=(*(_27817_decl))._field_Public, ._field_Statically=(*(_27817_decl))._field_Statically, ._field_Reference=(*(_27817_decl))._field_Reference, ._field_Kind=_1ece23a39_buildType((*(_27817_decl))._field_Kind), ._field_Value=_1ece23d47_buildExpr((*(_27817_decl))._field_Expr), ._field_Refers=static__1ece224a5_new(), ._field_Directives=(*(_27817_decl))._field_Directives, });;
}



inline jule::Slice<jule::Ptr<_1bc7a750d_Var>> _1ece2790b_buildVars(jule::Slice<jule::Ptr<_1bc5ad314_VarDecl>> _29518_decls) {
	jule::Slice<jule::Ptr<_1bc7a750d_Var>> _2969_vars = jule::Slice<jule::Ptr<_1bc7a750d_Var>>::alloc(0LL, _29518_decls.len());;
	{
		auto expr = &(_29518_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1547585:;
		if (it != expr_end) {
			jule::Ptr<_1bc5ad314_VarDecl> _29717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1bc7a750d_Var>> &__jule_push_dest = _2969_vars; __jule_push_dest.push(_1ece27642_buildVar(_29717_decl)); };
			}
			_iter_next_1c1547585:;
			++it;
			goto _iter_begin_1c1547585;
		}
		_iter_end_1c1547585:;
	};
	return _2969_vars;;
}



inline jule::Ptr<_1bc73c1b8_Impl> _1ece27bc5_buildImpl(jule::Ptr<_1bc5b710e_Impl> _30318_decl) {
	return jule::new_ptr<_1bc73c1b8_Impl>(_1bc73c1b8_Impl{._field_Base=(*(_30318_decl))._field_Base, ._field_Dest=(*(_30318_decl))._field_Dest, ._field_Methods=_1ece25992_buildMethods(&((*(_30318_decl))._field_Methods)), ._field_Statics=_1ece2790b_buildVars((*(_30318_decl))._field_Statics)});;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc737713_buildAsComptimeMethodData(jule::Ptr<_1ece1de96_FnIns>* _142135_f) {
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>((*(_142135_f)), 1)}), });;
}



inline jule::Ptr<_1bc763e04_ImportInfo> _1bc737a21_findComptimePackage(jule::Ptr<_1bc784276_Sema>* _142929_s) {
	return _1bc78471b_SelectPackage((*(_142929_s)).ptr(), jule::Fn<jule::Bool(jule::Ptr<_1bc763e04_ImportInfo>)>([=](jule::Ptr<_1bc763e04_ImportInfo> _143028_pkg) mutable -> jule::Bool {
		return (*(_143028_pkg))._field_LinkPath.equal("std::comptime", 13);;
	}));;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc737d95_buildComptimeTypeInfoData(jule::Ptr<_1bc784276_Sema>* _143535_s, jule::Ptr<_1bc8411bd_TypeKind>* _143550_t) {
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(_1bc783ab1_pushComptimeTypeInfo((*((*(_143535_s))))._field_meta.ptr(), _143550_t), 15)}), });;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc7380c6_buildComptimeValue(jule::Ptr<_1bc8108a7_Data>* _144328_d) {
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(jule::new_ptr<_1bc731a09_comptimeValue>(_1bc731a09_comptimeValue{._field_data=(*(_144328_d))}), 16)}), });;
}



inline jule::Str _1bc73b162_toStrConstraints(jule::Ptr<_1bc83e7d7_InsGeneric> _14321_g) {
	_2096a4489_StrBuilder _1449_sb = static__2096a48da_New(128LL);;
	{
		auto expr = &((*(_14321_g))._field_Constraint);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c01979ab:;
		if (it != expr_end) {
			jule::I64 _1459_i = it - expr->begin();
			jule::Ptr<_1bc8411bd_TypeKind> *_14512_c = it;
			{
				_2096a4e4b_WriteStr(&_1449_sb, _1bc841586_Str((*(_14512_c)).ptr()));
				if ((((*(_14321_g))._field_Constraint.len() - _1459_i) > 1LL)) {
					_2096a4e4b_WriteStr(&_1449_sb, jule::Str::lit(" | ", 3));
				};
			}
			_iter_next_1c01979ab:;
			++it;
			_1459_i++;
			goto _iter_begin_1c01979ab;
		}
		_iter_end_1c01979ab:;
	};
	return _2096a5743_Str(&_1449_sb);;
}



inline jule::Bool _1bc73b52a_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1bc8411bd_TypeKind>* _15434_g) {
	{
		auto &_match_expr{ (*(_15421_c)) };
		
		if (_match_expr == jule::Str::lit("signed", 6)) {
			_case_begin_1c019823c:;
			{
				jule::Ptr<_1bc848c97_Prim> _1579_prim = _1bc84381e_Prim((*(_15434_g)).ptr());;
				if ((_1579_prim == nullptr)) {
					return false;;
				};
				return _230d58177_IsSigNum((*(_1579_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("unsigned", 8)) {
			_case_begin_1c019988c:;
			{
				jule::Ptr<_1bc848c97_Prim> _1639_prim = _1bc84381e_Prim((*(_15434_g)).ptr());;
				if ((_1639_prim == nullptr)) {
					return false;;
				};
				return _230d574d9_IsUnsigInt((*(_1639_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("float", 5)) {
			_case_begin_1c0199914:;
			{
				jule::Ptr<_1bc848c97_Prim> _1699_prim = _1bc84381e_Prim((*(_15434_g)).ptr());;
				if ((_1699_prim == nullptr)) {
					return false;;
				};
				return _230d57ae4_IsFloat((*(_1699_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("numeric", 7)) {
			_case_begin_1c0199bab:;
			{
				jule::Ptr<_1bc848c97_Prim> _1759_prim = _1bc84381e_Prim((*(_15434_g)).ptr());;
				if ((_1759_prim == nullptr)) {
					return false;;
				};
				return _230d57dad_IsNum((*(_1759_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("mutable", 7)) {
			_case_begin_1c0199c22:;
			{
				return _1bc842a4e_Mutable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str::lit("immutable", 9)) {
			_case_begin_1c0199c88:;
			{
				return (!(_1bc842a4e_Mutable((*(_15434_g)).ptr())));;
			}
		}
		else if (_match_expr == jule::Str::lit("comparable", 10)) {
			_case_begin_1c0199cee:;
			{
				return _1bc8427b8_Comparable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str::lit("ordered", 7)) {
			_case_begin_1c0199e0e:;
			{
				return _1bc842cd5_Ordered((*(_15434_g)).ptr());;
			}
		}
		else {
			_case_begin_1c019977c:;
			{
				return false;;
			}
		}
		_match_end_1c0199727:;
	};
}



inline jule::Bool _1bc73b7e4_isBuiltinConstraint(jule::Str* _19325_ident) {
	{
		auto expr = &(_1bc739517_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c01a07a5:;
		if (it != expr_end) {
			jule::Str *_19412_bc = it;
			{
				if (((*(_19325_ident)) == (*(_19412_bc)))) {
					return true;;
				};
			}
			_iter_next_1c01a07a5:;
			++it;
			goto _iter_begin_1c01a07a5;
		}
		_iter_end_1c01a07a5:;
	};
	return false;;
}



inline jule::Ptr<_1bc749923_scopeChecker> _1bc73e3eb_newScopeCheckerBase(jule::Ptr<_1bc784276_Sema>* _5829_s, jule::Ptr<_1ece1de96_FnIns> _5843_owner) {
	return jule::new_ptr<_1bc749923_scopeChecker>(_1bc749923_scopeChecker{._field_s=(*(_5829_s)), ._field_owner=_5843_owner, ._field_table=jule::new_ptr<_1bc80a50b_SymbolTable>(), });;
}



inline jule::Ptr<_1bc749923_scopeChecker> _1bc73e7b4_newScopeChecker(jule::Ptr<_1bc784276_Sema>* _6625_s, jule::Ptr<_1ece1de96_FnIns> _6639_owner) {
	jule::Ptr<_1bc749923_scopeChecker> _679_base = _1bc73e3eb_newScopeCheckerBase(_6625_s, _6639_owner);;
	(*(_679_base))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1bc74847c_scopeLabel>>>(nullptr);
	(*(_679_base))._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1bc748a10_scopeGoto>>>(nullptr);
	return _679_base;;
}



inline jule::Ptr<_1bc74847c_scopeLabel> _1bc73eb38_findLabelParent(jule::Str* _7621_ident, jule::Ptr<_1bc749923_scopeChecker> _7637_scope) {
	jule::Ptr<_1bc74847c_scopeLabel> _779_label = _1bc74d42c_findLabelScope(_7637_scope, _7621_ident);;
	while ((_779_label == nullptr)) {
		{
			if ((((*(_7637_scope))._field_parent == nullptr) || ((*(_7637_scope))._field_owner != nullptr))) {
				return nullptr;;
			};
			_7637_scope=(*(_7637_scope))._field_parent;
			_779_label=_1bc74d42c_findLabelScope(_7637_scope, _7621_ident);
		}
	_iter_next_1c01b9a77:;
	}
	_iter_end_1c01b9a77:;;
	return _779_label;;
}



inline jule::Bool _1bc740001_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_1bc74261e_Scope>* _9034_sc) {
	{
		auto &_match_expr{ _9021_Model };
		
		if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1c01bb4a2:;
			{
				jule::Ptr<_1ece10262_FnCallExprModel> _939_fcem = _9021_Model.cast_ptr<_1ece10262_FnCallExprModel>(&__jule_any_type34);;
				if (((*(_939_fcem))._field_Except == (*(_9034_sc)))) {
					return true;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1c01bb529:;
			{
				jule::Ptr<_1bc8108a7_Data> _989_d = _9021_Model.cast_ptr<_1bc8108a7_Data>(&__jule_any_type24);;
				return _1bc740001_modelIsGotoScope((*(_989_d))._field_Model, _9034_sc);;
			}
		}
		_match_end_1c01b9ed9:;
	};
	return false;;
}



inline jule::Bool _1bc740375_stmtIsGotoScope(jule::Any* _10421_stmt, jule::Ptr<_1bc74261e_Scope>* _10434_sc) {
	{
		auto &_match_expr{ (*(_10421_stmt)) };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1c01bd581:;
			{
				return ((*(_10421_stmt)).cast_ptr<_1bc74261e_Scope>(&__jule_any_type22) == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1c01bd608:;
			{
				return ((*((*(_10421_stmt)).cast_ptr<_1bc743554_InfIter>(&__jule_any_type36)))._field_Scope == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1c01bd680:;
			{
				jule::Ptr<_1bc744456_RangeIter> _1119_it = (*(_10421_stmt)).cast_ptr<_1bc744456_RangeIter>(&__jule_any_type40);;
				return (((*(_1119_it))._field_Scope == (*(_10434_sc))) || _1bc740001_modelIsGotoScope((*((*(_1119_it))._field_Expr))._field_Model, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1c01bd8b1:;
			{
				jule::Ptr<_1bc743a0a_WhileIter> _1149_it = (*(_10421_stmt)).cast_ptr<_1bc743a0a_WhileIter>(&__jule_any_type38);;
				return ((((*(_1149_it))._field_Scope == (*(_10434_sc))) || _1bc740001_modelIsGotoScope((*(_1149_it))._field_Expr, _10434_sc)) || _1bc740001_modelIsGotoScope((*(_1149_it))._field_Next, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1c01bd927:;
			{
				jule::Ptr<_1bc746755_Match> _1199_m = (*(_10421_stmt)).cast_ptr<_1bc746755_Match>(&__jule_any_type47);;
				{
					auto expr = &((*(_1199_m))._field_Cases);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c01c2b5c:;
					if (it != expr_end) {
						jule::Ptr<_1bc74738d_Case> *_12016_c = it;
						{
							if (((*((*(_12016_c))))._field_Scope == (*(_10434_sc)))) {
								return true;;
							};
							{
								auto expr = &((*((*(_12016_c))))._field_Exprs);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1c01c3aa3:;
								if (it != expr_end) {
									jule::Ptr<_1bc8108a7_Data> *_12420_expr = it;
									{
										if (_1bc740001_modelIsGotoScope((*((*(_12420_expr))))._field_Model, _10434_sc)) {
											return true;;
										};
									}
									_iter_next_1c01c3aa3:;
									++it;
									goto _iter_begin_1c01c3aa3;
								}
								_iter_end_1c01c3aa3:;
							};
						}
						_iter_next_1c01c2b5c:;
						++it;
						goto _iter_begin_1c01c2b5c;
					}
					_iter_end_1c01c2b5c:;
				};
				return (((*(_1199_m))._field_Default != nullptr) && ((*((*(_1199_m))._field_Default))._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1c01bd98d:;
			{
				jule::Ptr<_1bc743257_Conditional> _1329_c = (*(_10421_stmt)).cast_ptr<_1bc743257_Conditional>(&__jule_any_type35);;
				{
					auto expr = &((*(_1329_c))._field_Elifs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c01c55ee:;
					if (it != expr_end) {
						jule::Ptr<_1bc742a3c_If> *_13316_elif = it;
						{
							if ((((*((*(_13316_elif))))._field_Scope == (*(_10434_sc))) || _1bc740001_modelIsGotoScope((*((*(_13316_elif))))._field_Expr, _10434_sc))) {
								return true;;
							};
						}
						_iter_next_1c01c55ee:;
						++it;
						goto _iter_begin_1c01c55ee;
					}
					_iter_end_1c01c55ee:;
				};
				return (((*(_1329_c))._field_Default != nullptr) && ((*((*(_1329_c))._field_Default))._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1c01bda04:;
			{
				jule::Ptr<_1bc8108a7_Data> _1409_d = (*(_10421_stmt)).cast_ptr<_1bc8108a7_Data>(&__jule_any_type24);;
				return _1bc740001_modelIsGotoScope((*(_1409_d))._field_Model, _10434_sc);;
			}
		}
		else {
			_case_begin_1c01bb97a:;
			{
				return false;;
			}
		}
		_match_end_1c01bd196:;
	};
}



inline jule::I64 _1bc7406e9_countMatchType(jule::Ptr<_1bc746755_Match>* _14720_m, jule::Ptr<_1bc8411bd_TypeKind>* _14732_t) {
	jule::I64 _1489_n = 0LL;;
	jule::Str _1495_kind = _1bc841586_Str((*(_14732_t)).ptr());;
	_julec_label_1c01c813a:;
	{
		auto expr = &((*((*(_14720_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c01c88bb:;
		if (it != expr_end) {
			jule::Ptr<_1bc74738d_Case> *_15112_c = it;
			{
				if (((*(_15112_c)) == nullptr)) {
					goto _iter_next_1c01c88bb;
				};
				{
					auto expr = &((*((*(_15112_c))))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c01c9603:;
					if (it != expr_end) {
						jule::Ptr<_1bc8108a7_Data> *_15616_expr = it;
						{
							if (((*(_15616_expr)) == nullptr)) {
								goto _iter_end_1c01c88bb;
							};
							if ((_1495_kind == _1bc841586_Str((*((*(_15616_expr))))._field_Model.cast_ptr<_1bc8411bd_TypeKind>(&__jule_any_type83).ptr()))) {
								(_1489_n)++;
							};
						}
						_iter_next_1c01c9603:;
						++it;
						goto _iter_begin_1c01c9603;
					}
					_iter_end_1c01c9603:;
				};
			}
			_iter_next_1c01c88bb:;
			++it;
			goto _iter_begin_1c01c88bb;
		}
		_iter_end_1c01c88bb:;
	};
	return _1489_n;;
}



inline jule::Slice<jule::Ptr<_1bc8108a7_Data>> _1bc7409b3_getDatasFromTupleData(jule::Ptr<_1bc8108a7_Data>* _17131_d) {
	if ((_1bc845645_Tup((*((*(_17131_d))))._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_17131_d))))._field_Model };
			
			if (_match_expr.type == &__jule_any_type81) {
				_case_begin_1c01cdaad:;
				{
					return (*((*((*(_17131_d))))._field_Model.cast_ptr<_1ece13980_TupleExprModel>(&__jule_any_type81)))._field_Datas;;
				}
			}
			else {
				_case_begin_1c01cb10a:;
				{
					jule::Ptr<_1bc84dd8a_Tuple> _17717_t = _1bc845645_Tup((*((*(_17131_d))))._field_Kind.ptr());;
					jule::Slice<jule::Ptr<_1bc8108a7_Data>> _17817_r = jule::Slice<jule::Ptr<_1bc8108a7_Data>>::alloc(0LL, (*(_17717_t))._field_Types.len());;
					{
						auto expr = &((*(_17717_t))._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c01cc903:;
						if (it != expr_end) {
							jule::Ptr<_1bc8411bd_TypeKind> _17925_kind = *it;
							{
								{ jule::Slice<jule::Ptr<_1bc8108a7_Data>> &__jule_push_dest = _17817_r; __jule_push_dest.push(jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_17925_kind, ._field_Mutable=true, })); };
							}
							_iter_next_1c01cc903:;
							++it;
							goto _iter_begin_1c01cc903;
						}
						_iter_end_1c01cc903:;
					};
					return _17817_r;;
				}
			}
			_match_end_1c01cb0a5:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1bc8108a7_Data>>::make({(*(_17131_d))});;
	};
}



inline jule::Bool _1bc741376_checkMut(jule::Ptr<_1bc784276_Sema>* _20618_s, jule::Ptr<_1bc8108a7_Data>* _20629_left, jule::Ptr<_1bc8108a7_Data> _20646_right, jule::Ptr<_1bc583a9d_Token> _20660_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*((*(_20629_left))))._field_Mutable))) {
			_case_begin_1c01d1c59:;
			{
				_1bc786db1_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str::lit("cannot assign to immutable storage", 34), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_20646_right != nullptr) && (!((*(_20646_right))._field_Mutable))) && _1bc842a4e_Mutable((*(_20646_right))._field_Kind.ptr()))) {
			_case_begin_1c01d1cd1:;
			{
				if ((((*(_20660_op))._field_Id != static_cast<jule::U64>(71LLU)) && (_1bc844d92_Struct((*(_20646_right))._field_Kind.ptr()) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_1bc786db1_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*(_20646_right))._field_Kind.ptr()), &__jule_any_type4)}));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1c01d1b9e:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1c01d1b05:;
	};
}



inline jule::Bool _1bc741860_checkAssign(jule::Ptr<_1bc784276_Sema>* _22521_s, jule::Ptr<_1bc8108a7_Data>* _22536_left, jule::Ptr<_1bc8108a7_Data> _22553_right, jule::Ptr<_1bc583a9d_Token> _22567_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ece1de96_FnIns> _2265_f = _1bc844b0b_Fn((*((*(_22536_left))))._field_Kind.ptr());;
	if ((((_2265_f != nullptr) && ((*(_2265_f))._field_Decl != nullptr)) && (*((*(_2265_f))._field_Decl))._field_Global)) {
		_1bc786db1_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("type is not support assignment", 30), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1bc81127b_IsConst((*(_22536_left)).ptr())) {
			_case_begin_1c01d73be:;
			{
				_1bc786db1_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("constants is can't assign", 25), jule::Slice<jule::Any>());
				_1bc787224_pushSuggestion((*(_22521_s)).ptr(), jule::Str::lit("remove constant qualifer if you need to assign", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*((*(_22536_left))))._field_Lvalue))) {
			_case_begin_1c01d7446:;
			{
				_1bc786db1_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("invalid expression: expected lvalue for assignment", 50), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_1bc741376_checkMut(_22521_s, _22536_left, _22553_right, _22567_op)))) {
			_case_begin_1c01d74bd:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1c01d7314:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1c01d7204:;
	};
}



inline jule::Bool _1bc741b29_isValidAstStForNextSt(jule::Any* _24731_n) {
	{
		auto &_match_expr{ (*(_24731_n)) };
		
		if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1c01d7710:;
			{
				return (!((*((*(_24731_n)).cast_ptr<_1bc5a8e47_AssignSt>(&__jule_any_type58)))._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1c01d98dd:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c01d7c60:;
			{
				return false;;
			}
		}
		_match_end_1c01d395e:;
	};
}



inline jule::Bool _1bc741de3_isValidStForNextSt(jule::Any* _25824_st) {
	{
		auto &_match_expr{ (*(_25824_st)) };
		
		if (_match_expr.type == &__jule_any_type43 || _match_expr.type == &__jule_any_type44 || _match_expr.type == &__jule_any_type46) {
			_case_begin_1c01da779:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1c01da7e0:;
			{
				{
					auto &_match_expr{ (*((*(_25824_st)).cast_ptr<_1bc8108a7_Data>(&__jule_any_type24)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type34) {
						_case_begin_1c01db549:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1c01db99a:;
						{
							return false;;
						}
					}
					_match_end_1c01db945:;
				};
			}
		}
		else {
			_case_begin_1c01da504:;
			{
				return false;;
			}
		}
		_match_end_1c01da49e:;
	};
}



inline jule::Bool _1bc7421ac_stmtIsDef(jule::Any* _27615_st) {
	{
		auto &_match_expr{ (*(_27615_st)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c01db35c:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c01daec7:;
			{
				return false;;
			}
		}
		_match_end_1c01da889:;
	};
}



inline jule::U64 _1bc75b737_removeEqFromOp(jule::U64 _216719_op) {
	{
		auto &_match_expr{ _216719_op };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1c01dbb87:;
			{
				return static_cast<jule::U64>(60LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1c01dcbcc:;
			{
				return static_cast<jule::U64>(61LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1c01dcc43:;
			{
				return static_cast<jule::U64>(62LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1c01dcd64:;
			{
				return static_cast<jule::U64>(63LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1c01dcdca:;
			{
				return static_cast<jule::U64>(64LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1c01dce41:;
			{
				return static_cast<jule::U64>(56LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1c01dceb8:;
			{
				return static_cast<jule::U64>(57LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1c01dd040:;
			{
				return static_cast<jule::U64>(67LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1c01dd0d9:;
			{
				return static_cast<jule::U64>(65LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1c01dd150:;
			{
				return static_cast<jule::U64>(66LLU);;
			}
		}
		else {
			_case_begin_1c01dc8d0:;
			{
				return _216719_op;;
			}
		}
		_match_end_1c01dc836:;
	};
}



inline void _1bc75b968_makeComptimeRange(jule::Ptr<_1bc8108a7_Data>* _219627_d) {
	{
		
		if ((_1bc845b62_comptimeStructFields((*((*(_219627_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c01e0e33:;
			{
				(*((*(_219627_d))))._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(jule::new_ptr<_1bc71aaae_comptimeRange>(_1bc71aaae_comptimeRange{._field_kind=jule::Trait<_1bc71a88e_comptimeRangeKind>(_1bc845b62_comptimeStructFields((*((*(_219627_d))))._field_Kind.ptr()), 0)}), 5)});
			}
		}
		else if ((_1bc84617e_comptimeEnumFields((*((*(_219627_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c01e0e99:;
			{
				(*((*(_219627_d))))._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(jule::new_ptr<_1bc71aaae_comptimeRange>(_1bc71aaae_comptimeRange{._field_kind=jule::Trait<_1bc71a88e_comptimeRangeKind>(_1bc84617e_comptimeEnumFields((*((*(_219627_d))))._field_Kind.ptr()), 2)}), 5)});
			}
		}
		else if ((_1bc846e4e_comptimeTypeInfos((*((*(_219627_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c01e1010:;
			{
				(*((*(_219627_d))))._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(jule::new_ptr<_1bc71aaae_comptimeRange>(_1bc71aaae_comptimeRange{._field_kind=jule::Trait<_1bc71a88e_comptimeRangeKind>(_1bc846e4e_comptimeTypeInfos((*((*(_219627_d))))._field_Kind.ptr()), 4)}), 5)});
			}
		}
		else if ((_1bc84669b_comptimeParams((*((*(_219627_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c01e1076:;
			{
				(*((*(_219627_d))))._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(jule::new_ptr<_1bc71aaae_comptimeRange>(_1bc71aaae_comptimeRange{._field_kind=jule::Trait<_1bc71a88e_comptimeRangeKind>(_1bc84669b_comptimeParams((*((*(_219627_d))))._field_Kind.ptr()), 3)}), 5)});
			}
		}
		else if ((_1bc84746b_comptimeStatics((*((*(_219627_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c01e18a1:;
			{
				(*((*(_219627_d))))._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(jule::new_ptr<_1bc71aaae_comptimeRange>(_1bc71aaae_comptimeRange{._field_kind=jule::Trait<_1bc71a88e_comptimeRangeKind>(_1bc84746b_comptimeStatics((*((*(_219627_d))))._field_Kind.ptr()), 1)}), 5)});
			}
		}
		else if ((_1bc847ea5_comptimeFiles((*((*(_219627_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c01e1917:;
			{
				(*((*(_219627_d))))._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(jule::new_ptr<_1bc71aaae_comptimeRange>(_1bc71aaae_comptimeRange{._field_kind=jule::Trait<_1bc71a88e_comptimeRangeKind>(_1bc847ea5_comptimeFiles((*((*(_219627_d))))._field_Kind.ptr()), 5)}), 5)});
			}
		}
		else {
			_case_begin_1c01e0718:;
			{
				(*((*(_219627_d))))._field_Decl=true;
			}
		}
		_match_end_1c01e0b7a:;
	};
}



inline jule::Bool _1bc75be63_canComptimeMatch(jule::Ptr<_1bc8108a7_Data>* _221726_d) {
	if ((!(_1bc809609_isGoodValueToInfer(_221726_d)))) {
		return false;;
	};
	return (_1bc81127b_IsConst((*(_221726_d)).ptr()) || (_1bc8471d5_comptimeTypeInfo((*((*(_221726_d))))._field_Kind.ptr()) != nullptr));;
}



inline jule::Ptr<_1bc7a750d_Var> _1bc7613da_findVarInPackage(jule::Slice<jule::Ptr<_1bc80a50b_SymbolTable>>* _4626_files, jule::Str* _4650_ident, jule::Bool _4662_binded) {
	{
		auto expr = _4626_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c189e1d3:;
		if (it != expr_end) {
			jule::Ptr<_1bc80a50b_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_1bc7a750d_Var> _4813_v = _1bc80ade1_FindVar(_4717_f.ptr(), (*(_4650_ident)), _4662_binded);;
				if ((_4813_v != nullptr)) {
					return _4813_v;;
				};
			}
			_iter_next_1c189e1d3:;
			++it;
			goto _iter_begin_1c189e1d3;
		}
		_iter_end_1c189e1d3:;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc8403cb_TypeAlias> _1bc76185d_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1bc80a50b_SymbolTable>>* _5832_files, jule::Str* _5856_ident, jule::Bool _5868_binded) {
	{
		auto expr = _5832_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c18a0745:;
		if (it != expr_end) {
			jule::Ptr<_1bc80a50b_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_1bc8403cb_TypeAlias> _6013_ta = _1bc80b2dc_FindTypeAlias(_5917_f.ptr(), (*(_5856_ident)), _5868_binded);;
				if ((_6013_ta != nullptr)) {
					return _6013_ta;;
				};
			}
			_iter_next_1c18a0745:;
			++it;
			goto _iter_begin_1c18a0745;
		}
		_iter_end_1c18a0745:;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc5bb333_Struct> _1bc761c8c_findStructInPackage(jule::Slice<jule::Ptr<_1bc80a50b_SymbolTable>>* _7029_files, jule::Str* _7053_ident, jule::Bool _7065_binded) {
	{
		auto expr = _7029_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c18a1ca7:;
		if (it != expr_end) {
			jule::Ptr<_1bc80a50b_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_1bc5bb333_Struct> _7213_s = _1bc80b6d8_FindStruct(_7117_f.ptr(), (*(_7053_ident)), _7065_binded);;
				if ((_7213_s != nullptr)) {
					return _7213_s;;
				};
			}
			_iter_next_1c18a1ca7:;
			++it;
			goto _iter_begin_1c18a1ca7;
		}
		_iter_end_1c18a1ca7:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ece1b092_Fn> _1bc762243_findFnInPackage(jule::Slice<jule::Ptr<_1bc80a50b_SymbolTable>>* _8225_files, jule::Str* _8249_ident, jule::Bool _8261_binded) {
	{
		auto expr = _8225_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c18a3319:;
		if (it != expr_end) {
			jule::Ptr<_1bc80a50b_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_1ece1b092_Fn> _8413_f = _1bc80bad4_FindFn(_8317_file.ptr(), (*(_8249_ident)), _8261_binded);;
				if ((_8413_f != nullptr)) {
					return _8413_f;;
				};
			}
			_iter_next_1c18a3319:;
			++it;
			goto _iter_begin_1c18a3319;
		}
		_iter_end_1c18a3319:;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc713a41_Trait> _1bc762584_findTraitInPackage(jule::Slice<jule::Ptr<_1bc80a50b_SymbolTable>>* _9428_files, jule::Str* _9452_ident) {
	{
		auto expr = _9428_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c18a46d3:;
		if (it != expr_end) {
			jule::Ptr<_1bc80a50b_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_1bc713a41_Trait> _9613_t = _1bc80be25_FindTrait(_9517_f.ptr(), (*(_9452_ident)));;
				if ((_9613_t != nullptr)) {
					return _9613_t;;
				};
			}
			_iter_next_1c18a46d3:;
			++it;
			goto _iter_begin_1c18a46d3;
		}
		_iter_end_1c18a46d3:;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc71624c_Enum> _1bc762908_findEnumInPackage(jule::Slice<jule::Ptr<_1bc80a50b_SymbolTable>>* _10627_files, jule::Str* _10651_ident) {
	{
		auto expr = _10627_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c18a5a25:;
		if (it != expr_end) {
			jule::Ptr<_1bc80a50b_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_1bc71624c_Enum> _10813_e = _1bc80c266_FindEnum(_10717_f.ptr(), (*(_10651_ident)));;
				if ((_10813_e != nullptr)) {
					return _10813_e;;
				};
			}
			_iter_next_1c18a5a25:;
			++it;
			goto _iter_begin_1c18a5a25;
		}
		_iter_end_1c18a5a25:;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc717957_TypeEnum> _1bc762c7c_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1bc80a50b_SymbolTable>>* _11831_files, jule::Str* _11855_ident) {
	{
		auto expr = _11831_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c18a6d9a:;
		if (it != expr_end) {
			jule::Ptr<_1bc80a50b_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_1bc717957_TypeEnum> _12013_e = _1bc80c5a7_FindTypeEnum(_11917_f.ptr(), (*(_11855_ident)));;
				if ((_12013_e != nullptr)) {
					return _12013_e;;
				};
			}
			_iter_next_1c18a6d9a:;
			++it;
			goto _iter_begin_1c18a6d9a;
		}
		_iter_end_1c18a6d9a:;
	};
	return nullptr;;
}



inline jule::Any _1bc7632bb_defByIdentPackage(jule::Slice<jule::Ptr<_1bc80a50b_SymbolTable>>* _12927_files, jule::Str* _12951_ident, jule::Bool _12963_binded) {
	{
		auto expr = _12927_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c18a83eb:;
		if (it != expr_end) {
			jule::Ptr<_1bc80a50b_SymbolTable> _13017_file = *it;
			{
				jule::Any _13113_def = _1bc80d575_defByIdent(_13017_file.ptr(), _12951_ident, _12963_binded);;
				if ((_13113_def != nullptr)) {
					return _13113_def;;
				};
			}
			_iter_next_1c18a83eb:;
			++it;
			goto _iter_begin_1c18a83eb;
		}
		_iter_end_1c18a83eb:;
	};
	return nullptr;;
}



inline jule::Bool _1bc769305_isStdPackage(jule::Str* _35518_f, jule::Str _35526_p) {
	return _1ed639b56_HasPrefix((*(_35518_f)), _1ed644c2c_Join(jule::Slice<jule::Str>::make({_1eeea8094_PathStdlib,_35526_p})));;
}



inline jule::Bool _1bc781916_isValidModelForRef(jule::Any* _1328_m) {
	{
		auto &_match_expr{ (*(_1328_m)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c18b9033:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1c18b9099:;
			{
				jule::Ptr<_1ece12d03_StructSubIdentExprModel> _1813_model = (*(_1328_m)).cast_ptr<_1ece12d03_StructSubIdentExprModel>(&__jule_any_type97);;
				return _1bc781916_isValidModelForRef(&((*((*(_1813_model))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1c18b9110:;
			{
				jule::Ptr<_1ece12462_TraitSubIdentExprModel> _2113_model = (*(_1328_m)).cast_ptr<_1ece12462_TraitSubIdentExprModel>(&__jule_any_type96);;
				return _1bc781916_isValidModelForRef(&((*(_2113_model))._field_Expr));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1c18b9187:;
			{
				jule::Ptr<_1ece0d65b_UnaryExprModel> _2413_unary = (*(_1328_m)).cast_ptr<_1ece0d65b_UnaryExprModel>(&__jule_any_type110);;
				if (((*((*(_2413_unary))._field_Op))._field_Id != static_cast<jule::U64>(62LLU))) {
					return false;;
				};
				if ((_1bc843d3b_Ptr((*((*(_2413_unary))._field_Expr))._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1bc843aa5_Sptr((*((*(_2413_unary))._field_Expr))._field_Kind.ptr()) == nullptr)) {
					return false;;
				};
				return _1bc781916_isValidModelForRef(&((*((*(_2413_unary))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1c18b93a7:;
			{
				jule::Ptr<_1ece10ae2_IndexingExprModel> _3813_indexing = (*(_1328_m)).cast_ptr<_1ece10ae2_IndexingExprModel>(&__jule_any_type45);;
				return _1bc781916_isValidModelForRef(&((*((*(_3813_indexing))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1c18b8b26:;
			{
				return false;;
			}
		}
		_match_end_1c18b8ac1:;
	};
}



inline _1ed6c7892_Log _1bc781e44_compilerErr(jule::Ptr<_1bc583a9d_Token>* _4517_token, jule::Bool _4532_line, jule::Str _4544_fmt, jule::Slice<jule::Any> _4557_args) {
	_1ed6c7892_Log _469_log = _1ed6c7892_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_4517_token))))._field_Row, ._field_Column=(*((*(_4517_token))))._field_Column, ._field_Path=(*((*((*(_4517_token))))._field_File))._field_Path, ._field_Text=_1ed6c7d04_Logf(_4544_fmt, _4557_args), };;
	if (_4532_line) {
		_469_log._field_Line=_1bc58a346_GetRow((*((*(_4517_token))))._field_File.ptr(), (*((*(_4517_token))))._field_Row);
	};
	return _469_log;;
}



inline jule::Bool _1bc7822b8_impIsLookupable(jule::Ptr<_1bc763e04_ImportInfo>* _5921_i, jule::Str* _5938_ident) {
	if ((*((*(_5921_i))))._field_Binded) {
		return false;;
	};
	if ((!((*((*(_5921_i))))._field_ImportAll))) {
		if (((*((*(_5921_i))))._field_Selected.len() > 0LL)) {
			return _1bc766786_existIdent((*(_5921_i)).ptr(), (*(_5938_ident)));;
		};
	};
	return (*((*(_5921_i))))._field_ImportAll;;
}



inline void _1bc782571_appendRetVars(jule::Slice<jule::Ptr<_1bc7a750d_Var>>* _7123_dest, jule::Ptr<_1ece1de96_FnIns>* _7142_f) {
	if ((_1ece1b515_IsVoid((*((*(_7142_f))))._field_Decl.ptr()) || ((*((*(_7142_f))))._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1bc8411bd_TypeKind>> _769_types = _1ece20195_Types((*(_7142_f)).ptr());;
	{
		auto expr = &((*((*((*((*(_7142_f))))._field_Decl))._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c18c5748:;
		if (it != expr_end) {
			jule::I64 _7710_i = it - expr->begin();
			jule::Ptr<_1bc583a9d_Token> _7717_ident = *it;
			{
				if ((_1bc58650c_IsIgnoreIdent((*(_7717_ident))._field_Kind) || _1bc5867c6_IsAnonIdent((*(_7717_ident))._field_Kind))) {
					goto _iter_next_1c18c5748;
				};
				{ jule::Slice<jule::Ptr<_1bc7a750d_Var>> &__jule_push_dest = (*(_7123_dest)); __jule_push_dest.push(jule::new_ptr<_1bc7a750d_Var>(_1bc7a750d_Var{._field_Scope=(*((*(_7142_f))))._field_Scope, ._field_Token=_7717_ident, ._field_Ident=(*(_7717_ident))._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_1bc848390_TypeSymbol>(_1bc848390_TypeSymbol{._field_Kind=_769_types[_7710_i]}), ._field_Value=jule::new_ptr<_1bc8119eb_Value>(_1bc8119eb_Value{._field_Data=jule::new_ptr<_1bc8108a7_Data>()}), ._field_RetOrder=_7710_i, })); };
			}
			_iter_next_1c18c5748:;
			++it;
			_7710_i++;
			goto _iter_begin_1c18c5748;
		}
		_iter_end_1c18c5748:;
	};
	if ((((*((*((*((*(_7142_f))))._field_Decl))._field_Result))._field_Idents.len() == 1LL) && ((*(_7123_dest)).len() == 1LL))) {
		(*((*(_7123_dest))[((*(_7123_dest)).len() - 1LL)]))._field_RetOrder=-1LL;
	};
}



inline void _1bc78285c_appendParamVars(jule::Slice<jule::Ptr<_1bc7a750d_Var>>* _10125_dest, jule::Ptr<_1ece1de96_FnIns>* _10144_f) {
	if (((*((*(_10144_f))))._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_10144_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c18ca132:;
		if (it != expr_end) {
			jule::Ptr<_1ece1ceea_ParamIns> _10617_p = *it;
			{
				if ((_1bc58650c_IsIgnoreIdent((*((*(_10617_p))._field_Decl))._field_Ident) || _1bc5867c6_IsAnonIdent((*((*(_10617_p))._field_Decl))._field_Ident))) {
					goto _iter_next_1c18ca132;
				};
				jule::Ptr<_1bc7a750d_Var> _11113_v = jule::new_ptr<_1bc7a750d_Var>(_1bc7a750d_Var{._field_Scope=(*((*(_10144_f))))._field_Scope, ._field_Token=(*((*(_10617_p))._field_Decl))._field_Token, ._field_Ident=(*((*(_10617_p))._field_Decl))._field_Ident, ._field_Mutable=(*((*(_10617_p))._field_Decl))._field_Mutable, ._field_Used=true, ._field_Reference=(*((*(_10617_p))._field_Decl))._field_Reference, ._field_Kind=jule::new_ptr<_1bc848390_TypeSymbol>(), ._field_Value=jule::new_ptr<_1bc8119eb_Value>(_1bc8119eb_Value{._field_Data=jule::new_ptr<_1bc8108a7_Data>()}), });;
				{
					
					if (_1ece19bd9_IsSelf((*(_10617_p))._field_Decl.ptr())) {
						_case_begin_1c18cde6b:;
						{
							(*((*(_11113_v))._field_Kind))._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1bc840c17_Kind>((*((*(_10144_f))))._field_Owner, 0)});
							(*(_11113_v))._field_Reference=(!(_1ece19e70_IsRef((*(_10617_p))._field_Decl.ptr())));
							if (_1ece19e70_IsRef((*(_10617_p))._field_Decl.ptr())) {
								(*(_11113_v))._field_Ident=(*(_11113_v))._field_Ident.slice(1LL);
								(*((*((*(_11113_v))._field_Kind))._field_Kind))._field_Kind=jule::Trait<_1bc840c17_Kind>(jule::new_ptr<_1bc84c7c3_Sptr>(_1bc84c7c3_Sptr{._field_Elem=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_BindIdent=(*((*((*(_11113_v))._field_Kind))._field_Kind))._field_BindIdent, ._field_Kind=(*((*((*(_11113_v))._field_Kind))._field_Kind))._field_Kind})}), 21);
							};
						}
					}
					else if ((*((*(_10617_p))._field_Decl))._field_Variadic) {
						_case_begin_1c18cdb80:;
						{
							(*((*(_11113_v))._field_Kind))._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1bc840c17_Kind>(jule::new_ptr<_1bc84d296_Slc>(_1bc84d296_Slc{._field_Elem=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_BindIdent=(*((*(_10617_p))._field_Kind))._field_BindIdent, ._field_Kind=(*((*(_10617_p))._field_Kind))._field_Kind})}), 22)});
						}
					}
					else {
						_case_begin_1c18cdb19:;
						{
							(*((*(_11113_v))._field_Kind))._field_Kind=(*(_10617_p))._field_Kind;
						}
					}
					_match_end_1c18cd9e8:;
				};
				{ jule::Slice<jule::Ptr<_1bc7a750d_Var>> &__jule_push_dest = (*(_10125_dest)); __jule_push_dest.push(_11113_v); };
			}
			_iter_next_1c18ca132:;
			++it;
			goto _iter_begin_1c18ca132;
		}
		_iter_end_1c18ca132:;
	};
}



inline void _1bc782b48_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1bc8403cb_TypeAlias>>* _16134_dest, jule::Ptr<_1ece1de96_FnIns>* _16159_f) {
	jule::I64 _1629_size = (*((*(_16159_f))))._field_Generics.len();;
	if (((*((*((*(_16159_f))))._field_Decl))._field_Owner != nullptr)) {
		_1629_size+=(*((*((*((*(_16159_f))))._field_Decl))._field_Owner))._field_Generics.len();
	};
	if ((_1629_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_16159_f))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c18d735e:;
		if (it != expr_end) {
			jule::I64 _17110_i = it - expr->begin();
			jule::Ptr<_1bc83e7d7_InsGeneric> _17117_g = *it;
			{
				jule::Ptr<_1bc5a76a4_GenericDecl> _17213_decl = (*((*((*(_16159_f))))._field_Decl))._field_Generics[_17110_i];;
				{ jule::Slice<jule::Ptr<_1bc8403cb_TypeAlias>> &__jule_push_dest = (*(_16134_dest)); __jule_push_dest.push(jule::new_ptr<_1bc8403cb_TypeAlias>(_1bc8403cb_TypeAlias{._field_Scope=(*((*((*(_16159_f))))._field_Decl))._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=(*(_17213_decl))._field_Token, ._field_Ident=(*(_17213_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1bc848390_TypeSymbol>(_1bc848390_TypeSymbol{._field_Kind=(*(_17117_g))._field_Kind}), })); };
			}
			_iter_next_1c18d735e:;
			++it;
			_17110_i++;
			goto _iter_begin_1c18d735e;
		}
		_iter_end_1c18d735e:;
	};
	if (((*((*((*(_16159_f))))._field_Decl))._field_Owner != nullptr)) {
		jule::Ptr<_1bc5be0b1_StructIns> _18413_owner = (*((*(_16159_f))))._field_Owner;;
		{
			auto expr = &((*(_18413_owner))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c18da560:;
			if (it != expr_end) {
				jule::I64 _18514_i = it - expr->begin();
				jule::Ptr<_1bc83e7d7_InsGeneric> _18521_g = *it;
				{
					jule::Ptr<_1bc5a76a4_GenericDecl> _18617_decl = (*((*(_18413_owner))._field_Decl))._field_Generics[_18514_i];;
					{ jule::Slice<jule::Ptr<_1bc8403cb_TypeAlias>> &__jule_push_dest = (*(_16134_dest)); __jule_push_dest.push(jule::new_ptr<_1bc8403cb_TypeAlias>(_1bc8403cb_TypeAlias{._field_Scope=(*((*((*(_16159_f))))._field_Decl))._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=(*(_18617_decl))._field_Token, ._field_Ident=(*(_18617_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1bc848390_TypeSymbol>(_1bc848390_TypeSymbol{._field_Kind=(*(_18521_g))._field_Kind}), })); };
				}
				_iter_next_1c18da560:;
				++it;
				_18514_i++;
				goto _iter_begin_1c18da560;
			}
			_iter_end_1c18da560:;
		};
	};
}



inline jule::Ptr<_1bc80a50b_SymbolTable> _1bc782ebc_findFile(jule::Slice<jule::Ptr<_1bc80a50b_SymbolTable>>* _19918_files, jule::Ptr<_1bc589367_File>* _19942_handler) {
	{
		auto expr = _19918_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c18dad57:;
		if (it != expr_end) {
			jule::Ptr<_1bc80a50b_SymbolTable> _20017_fl = *it;
			{
				if (((*(_20017_fl))._field_File == (*(_19942_handler)))) {
					return _20017_fl;;
				};
			}
			_iter_next_1c18dad57:;
			++it;
			goto _iter_begin_1c18dad57;
		}
		_iter_end_1c18dad57:;
	};
	return nullptr;;
}



inline void _1bc783473_pushSuggestion(_1ed6c7892_Log* _20830_log, jule::Str _20841_fmt, jule::Slice<jule::Any> _20854_args) {
	(*(_20830_log))._field_Suggestion=_1ed6c7d04_Logf(_20841_fmt, _20854_args);
}



inline void _1bc7a57c5_pushImplemented(jule::Ptr<_1bc713a41_Trait> _288524_t, jule::Ptr<_1bc5bb333_Struct>* _288540_d) {
	_julec_label_1c18de9b5:;
	{
		
		if (((*(_288524_t))._field_Implemented.len() > 0LL)) {
			_case_begin_1c18e00e2:;
			{
				{
					auto expr = &((*(_288524_t))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c18e11c0:;
					if (it != expr_end) {
						jule::Ptr<_1bc5bb333_Struct> _288916_s = *it;
						{
							if ((_288916_s == (*(_288540_d)))) {
								goto _match_end_1c18debd5;
							};
						}
						_iter_next_1c18e11c0:;
						++it;
						goto _iter_begin_1c18e11c0;
					}
					_iter_end_1c18e11c0:;
				};
				goto _case_begin_1c18dec4b;
			}
		}
		else {
			_case_begin_1c18dec4b:;
			{
				{ jule::Slice<jule::Ptr<_1bc5bb333_Struct>> &__jule_push_dest = (*(_288524_t))._field_Implemented; __jule_push_dest.push((*(_288540_d))); };
			}
		}
		_match_end_1c18debd5:;
	};
	{
		auto expr = &((*(_288524_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c18e07eb:;
		if (it != expr_end) {
			jule::Ptr<_1bc848390_TypeSymbol> _289817_i = *it;
			{
				_1bc7a57c5_pushImplemented(_1bc845128_Trait((*(_289817_i))._field_Kind.ptr()), _288540_d);
			}
			_iter_next_1c18e07eb:;
			++it;
			goto _iter_begin_1c18e07eb;
		}
		_iter_end_1c18e07eb:;
	};
}



inline void _1bc7a5ab1_pushImplements(jule::Ptr<_1bc5bb333_Struct>* _290324_s, jule::Ptr<_1bc713a41_Trait> _290340_t) {
	_julec_label_1c18e2974:;
	{
		
		if (((*((*(_290324_s))))._field_Implements.len() > 0LL)) {
			_case_begin_1c18e30a1:;
			{
				{
					auto expr = &((*((*(_290324_s))))._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c18e417e:;
					if (it != expr_end) {
						jule::Ptr<_1bc713a41_Trait> _290716_b = *it;
						{
							if ((_290716_b == _290340_t)) {
								goto _match_end_1c18e2b94;
							};
						}
						_iter_next_1c18e417e:;
						++it;
						goto _iter_begin_1c18e417e;
					}
					_iter_end_1c18e417e:;
				};
				goto _case_begin_1c18e2c0a;
			}
		}
		else {
			_case_begin_1c18e2c0a:;
			{
				{ jule::Slice<jule::Ptr<_1bc713a41_Trait>> &__jule_push_dest = (*((*(_290324_s))))._field_Implements; __jule_push_dest.push(_290340_t); };
			}
		}
		_match_end_1c18e2b94:;
	};
	{
		auto expr = &((*(_290340_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c18e37aa:;
		if (it != expr_end) {
			jule::Ptr<_1bc848390_TypeSymbol> _291617_i = *it;
			{
				_1bc7a5ab1_pushImplements(_290324_s, _1bc845128_Trait((*(_291617_i))._field_Kind.ptr()));
			}
			_iter_next_1c18e37aa:;
			++it;
			goto _iter_begin_1c18e37aa;
		}
		_iter_end_1c18e37aa:;
	};
}



inline jule::Bool _1bc7e63a4_traitHasReferenceReceiver(jule::Ptr<_1bc713a41_Trait>* _2731_t) {
	{
		auto expr = &((*((*(_2731_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1beac05:;
		if (it != expr_end) {
			jule::Ptr<_1ece1b092_Fn> *_2812_f = it;
			{
				if ((*((*(_2812_f))))._field_Statically) {
					goto _iter_next_1c1beac05;
				};
				jule::Ptr<_1ece195bd_Param> _349_p = (*((*(_2812_f))))._field_Params[0LL];;
				if ((_1ece19e70_IsRef(_349_p.ptr()) && _1ece19bd9_IsSelf(_349_p.ptr()))) {
					return true;;
				};
			}
			_iter_next_1c1beac05:;
			++it;
			goto _iter_begin_1c1beac05;
		}
		_iter_end_1c1beac05:;
	};
	return false;;
}



inline jule::Bool _1bc7e6739_floatAssignable(jule::Str* _4221_kind, jule::Ptr<_1bc8108a7_Data>* _4233_d) {
	jule::Str _435_value = _230d332ea_FmtFloat(static_cast<jule::F64>(_230d5b048_AsF64((*((*(_4233_d))))._field_Constant.ptr())), 'g', -1LL, 64LL);;
	return _230d4db62_CheckBitFloat(_435_value, static_cast<jule::I64>(_230d4c644_BitsizeOf((*(_4221_kind)))));;
}



inline jule::Bool _1bc7e6aad_sigAssignable(jule::Str _4718_kind, jule::Ptr<_1bc8108a7_Data>* _4730_d) {
	jule::F64 _485_min = _230d53e20_Min(_4718_kind);;
	jule::F64 _495_max = _230d541d9_Max(_4718_kind);;
	{
		
		if (_230d5cd91_IsF64((*((*(_4730_d))))._field_Constant.ptr())) {
			_case_begin_1c1bee874:;
			{
				jule::F64 _529_x = _230d5a795_ReadF64((*((*(_4730_d))))._field_Constant.ptr());;
				jule::F64 _539_i = 0;;
				jule::F64 _5312_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _230d08501_Modf(_529_x);
					_539_i = __jule_assign_result.__jule_result_arg0;
					_5312_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_5312_frac != 0LL)) {
					return false;;
				};
				return ((_539_i >= _485_min) && (_539_i <= _495_max));;
			}
		}
		else if (_230d5c5dd_IsU64((*((*(_4730_d))))._field_Constant.ptr())) {
			_case_begin_1c1bee8eb:;
			{
				jule::F64 _599_x = _230d5b048_AsF64((*((*(_4730_d))))._field_Constant.ptr());;
				if ((_599_x <= _495_max)) {
					return true;;
				};
			}
		}
		else if (_230d5c357_IsI64((*((*(_4730_d))))._field_Constant.ptr())) {
			_case_begin_1c1bee973:;
			{
				jule::F64 _649_x = _230d5b048_AsF64((*((*(_4730_d))))._field_Constant.ptr());;
				return ((_485_min <= _649_x) && (_649_x <= _495_max));;
			}
		}
		_match_end_1c1bee4de:;
	};
	return false;;
}



inline jule::Bool _1bc7e6e76_unsigAssignable(jule::Str _7020_kind, jule::Ptr<_1bc8108a7_Data>* _7032_d) {
	jule::F64 _715_max = _230d541d9_Max(_7020_kind);;
	if (((*((*(_7032_d))))._field_IsRune && _7020_kind.equal("u8", 2))) {
		return _1bc7c9376_IsAscii(static_cast<jule::I32>(static_cast<jule::I32>(_230d59c5b_ReadI64((*((*(_7032_d))))._field_Constant.ptr()))));;
	};
	{
		
		if (_230d5cd91_IsF64((*((*(_7032_d))))._field_Constant.ptr())) {
			_case_begin_1c1c05407:;
			{
				jule::F64 _789_x = _230d5a795_ReadF64((*((*(_7032_d))))._field_Constant.ptr());;
				if ((_789_x < 0LL)) {
					return false;;
				};
				jule::F64 _829_i = 0;;
				jule::F64 _8212_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _230d08501_Modf(_789_x);
					_829_i = __jule_assign_result.__jule_result_arg0;
					_8212_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_8212_frac != 0LL)) {
					return false;;
				};
				return (_829_i <= _715_max);;
			}
		}
		else if (_230d5c5dd_IsU64((*((*(_7032_d))))._field_Constant.ptr())) {
			_case_begin_1c1c0546d:;
			{
				jule::F64 _889_x = _230d5b048_AsF64((*((*(_7032_d))))._field_Constant.ptr());;
				if ((_889_x <= _715_max)) {
					return true;;
				};
			}
		}
		else if (_230d5c357_IsI64((*((*(_7032_d))))._field_Constant.ptr())) {
			_case_begin_1c1c054d4:;
			{
				jule::F64 _939_x = _230d5b048_AsF64((*((*(_7032_d))))._field_Constant.ptr());;
				return ((0LL <= _939_x) && (_939_x <= _715_max));;
			}
		}
		_match_end_1c1c04a88:;
	};
	return false;;
}



inline jule::Bool _1bc7e72ea_intAssignable(jule::Str _9918_kind, jule::Ptr<_1bc8108a7_Data>* _9930_d) {
	{
		
		if (_230d571cb_IsSigInt(_9918_kind)) {
			_case_begin_1c1c0a077:;
			{
				return _1bc7e6aad_sigAssignable(_9918_kind, _9930_d);;
			}
		}
		else if (_230d574d9_IsUnsigInt(_9918_kind)) {
			_case_begin_1c1c0a0dd:;
			{
				return _1bc7e6e76_unsigAssignable(_9918_kind, _9930_d);;
			}
		}
		else {
			_case_begin_1c1c09a38:;
			{
				return false;;
			}
		}
		_match_end_1c1c08c79:;
	};
}



inline void _1bc803713_checkMutRiskOfStructLit(jule::Ptr<_1bc784276_Sema>* _91433_s, jule::Ptr<_1ece0e030_StructLitExprModel>* _91444_m) {
	{
		auto expr = &((*((*(_91444_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1c0b177:;
		if (it != expr_end) {
			jule::Ptr<_1ece0db89_StructArgExprModel> *_91512_arg = it;
			{
				if ((*((*((*((*(_91512_arg))))._field_Field))._field_Decl))._field_Mutable) {
					goto _iter_next_1c1c0b177;
				};
				if (((!((*((*((*(_91512_arg))))._field_Expr))._field_Mutable)) && _1bc842a4e_Mutable((*((*((*(_91512_arg))))._field_Expr))._field_Kind.ptr()))) {
					_1bc786db1_pushErr((*(_91433_s)).ptr(), (*((*(_91512_arg))))._field_Token, jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*((*((*(_91512_arg))))._field_Expr))._field_Kind.ptr()), &__jule_any_type4)}));
				};
			}
			_iter_next_1c1c0b177:;
			++it;
			goto _iter_begin_1c1c0b177;
		}
		_iter_end_1c1c0b177:;
	};
}



inline jule::Ptr<_1bc8411bd_TypeKind> _1bc8092a7_lenKind(void) {
	return _1bc2c50d6_primInt;;
}



inline jule::Bool _1bc809609_isGoodValueToInfer(jule::Ptr<_1bc8108a7_Data>* _137824_d) {
	return (!(_1bc810c5e_IsNil((*(_137824_d)).ptr())));;
}



inline jule::Ptr<_1bc594a59_Directive> _1bc83921b_findDirective(jule::Slice<jule::Ptr<_1bc594a59_Directive>>* _424523_directives, jule::Str _424554_d) {
	{
		auto expr = _424523_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c19ea263:;
		if (it != expr_end) {
			jule::Ptr<_1bc594a59_Directive> _424617_dr = *it;
			{
				if (((*((*(_424617_dr))._field_Tag))._field_Kind == _424554_d)) {
					return _424617_dr;;
				};
			}
			_iter_next_1c19ea263:;
			++it;
			goto _iter_begin_1c19ea263;
		}
		_iter_end_1c19ea263:;
	};
	return nullptr;;
}



inline jule::Any _1bc8395d4_findBuiltinsImport(jule::Str* _425424_ident, jule::Ptr<_1bc763e04_ImportInfo> _425436_imp) {
	return _1bc2c8837_findPackageBuiltinDef(&((*(_425436_imp))._field_LinkPath), _425424_ident);;
}



inline void _1bc839815_fitBitsize(jule::Ptr<_1bc8108a7_Data>* _426320_d) {
	jule::Ptr<_1bc848c97_Prim> _42649_prim = _1bc84381e_Prim((*((*(_426320_d))))._field_Kind.ptr());;
	jule::I64 _42655_z = _230d4c644_BitsizeOf(_1bc8490d8_Str(_42649_prim.ptr()));;
	{
		
		if (_230d5c357_IsI64((*((*(_426320_d))))._field_Constant.ptr())) {
			_case_begin_1c19ec9c4:;
			{
				jule::I64 _42689_k = _230d4e1e5_BitsizeOfInt(static_cast<jule::I64>(_230d59c5b_ReadI64((*((*(_426320_d))))._field_Constant.ptr())));;
				if (((_42689_k > _42655_z) || _230d574d9_IsUnsigInt((*(_42649_prim))._field_Kind))) {
					(*((*((*(_426320_d))))._field_Constant))._field_Kind=_230d4c985_IntFromBits(_42689_k);
					(*((*(_426320_d))))._field_Kind=(*((*(_1bc2c7506_findBuiltinTypeAlias((*((*((*(_426320_d))))._field_Constant))._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_230d5c5dd_IsU64((*((*(_426320_d))))._field_Constant.ptr())) {
			_case_begin_1c19eca3a:;
			{
				jule::I64 _42749_k = _230d4e4ae_BitsizeOfUint(static_cast<jule::U64>(_230d59ee2_ReadU64((*((*(_426320_d))))._field_Constant.ptr())));;
				if (((_42749_k > _42655_z) || _230d571cb_IsSigInt((*(_42649_prim))._field_Kind))) {
					(*((*((*(_426320_d))))._field_Constant))._field_Kind=_230d4cc4e_UintFromBits(_42749_k);
					(*((*(_426320_d))))._field_Kind=(*((*(_1bc2c7506_findBuiltinTypeAlias((*((*((*(_426320_d))))._field_Constant))._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_230d5cd91_IsF64((*((*(_426320_d))))._field_Constant.ptr())) {
			_case_begin_1c19ecaa1:;
			{
				if ((_42655_z == 64LLU)) {
					return;;
				};
				jule::I64 _42849_k = _230d4de2b_BitsizeOfFloat(static_cast<jule::F64>(_230d5a795_ReadF64((*((*(_426320_d))))._field_Constant.ptr())));;
				if ((_42849_k > _42655_z)) {
					(*((*((*(_426320_d))))._field_Constant))._field_Kind=_230d4d018_FloatFromBits(_42849_k);
					(*((*(_426320_d))))._field_Kind=(*((*(_1bc2c7506_findBuiltinTypeAlias((*((*((*(_426320_d))))._field_Constant))._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		_match_end_1c19ec8b4:;
	};
}



inline void _1bc839b45_makeStructLitAlloc(jule::Ptr<_1bc8108a7_Data>* _429228_d, jule::Ptr<_1ece0e030_StructLitExprModel>* _429243_lit) {
	(*((*(_429228_d))))._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(jule::new_ptr<_1bc84c7c3_Sptr>(_1bc84c7c3_Sptr{._field_Elem=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>((*((*(_429243_lit))))._field_Strct, 0)})}), 21)});
	(*((*(_429228_d))))._field_Model=jule::Any(jule::new_ptr<_1ece0e32c_AllocStructLitExprModel>(_1ece0e32c_AllocStructLitExprModel{._field_Lit=(*(_429243_lit))}), &__jule_any_type112);
}



inline jule::Ptr<_1bc7a750d_Var> _1bc839eb9_buildErrorVar(jule::Ptr<_1bc74261e_Scope>* _430323_s, jule::Ptr<_1bc5a3507_FnCallExpr>* _430339_fc) {
	return jule::new_ptr<_1bc7a750d_Var>(_1bc7a750d_Var{._field_Scope=(*(_430323_s)), ._field_Token=(*((*(_430339_fc))))._field_Token, ._field_Ident=jule::Str::lit("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=(*(_1bc2c7506_findBuiltinTypeAlias(jule::Str::lit("any", 3))))._field_Kind, ._field_Value=jule::new_ptr<_1bc8119eb_Value>(_1bc8119eb_Value{._field_Data=jule::new_ptr<_1bc8108a7_Data>()}), });;
}



inline jule::Any _1bc83a33d_findBuiltinsSema(jule::Str* _431822_ident, jule::Ptr<_1bc784276_Sema> _431838_s) {
	{
		auto expr = &((*((*(_431838_s))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1a09250:;
		if (it != expr_end) {
			jule::Ptr<_1bc763e04_ImportInfo> _431917_imp = *it;
			{
				if (((*(_431917_imp))._field_ImportAll || _1bc766786_existIdent(_431917_imp.ptr(), (*(_431822_ident))))) {
					jule::Any _432117_def = _1bc8395d4_findBuiltinsImport(_431822_ident, _431917_imp);;
					if ((_432117_def != nullptr)) {
						return _432117_def;;
					};
				};
			}
			_iter_next_1c1a09250:;
			++it;
			goto _iter_begin_1c1a09250;
		}
		_iter_end_1c1a09250:;
	};
	jule::Str _43299_ppath = _1bc5899d8_Dir((*((*(_431838_s))._field_file))._field_File.ptr());;
	if (_1ed639b56_HasPrefix(_43299_ppath, _1eeea8094_PathStdlib)) {
		(_43299_ppath).mut_slice(_1eeea8094_PathStdlib.len());;
		_43299_ppath=(jule::Str::lit("std", 3) + _1ed640a3b_Replace(_43299_ppath, jule::Str::lit("\\", 1), jule::Str::lit("::", 2), -1LL));
		return _1bc2c8837_findPackageBuiltinDef(&(_43299_ppath), _431822_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1bc83a607_isOkForShifting(jule::Ptr<_1bc8108a7_Data>* _434325_d) {
	if (_1bc81127b_IsConst((*(_434325_d)).ptr())) {
		{
			
			if (_230d5c357_IsI64((*((*(_434325_d))))._field_Constant.ptr())) {
				_case_begin_1c1a0c693:;
				{
					return (_230d59c5b_ReadI64((*((*(_434325_d))))._field_Constant.ptr()) >= 0LL);;
				}
			}
			else if (_230d5c5dd_IsU64((*((*(_434325_d))))._field_Constant.ptr())) {
				_case_begin_1c1a0c71a:;
				{
					return true;;
				}
			}
			else if (_230d5cd91_IsF64((*((*(_434325_d))))._field_Constant.ptr())) {
				_case_begin_1c1a0c792:;
				{
					return (_230d5a795_ReadF64((*((*(_434325_d))))._field_Constant.ptr()) >= 0LL);;
				}
			}
			else {
				_case_begin_1c1a0c5b6:;
				{
					return false;;
				}
			}
			_match_end_1c1a0b241:;
		};
	};
	jule::Ptr<_1bc848c97_Prim> _43565_prim = _1bc84381e_Prim((*((*(_434325_d))))._field_Kind.ptr());;
	return ((_43565_prim != nullptr) && _230d577a3_IsInt(_1bc8490d8_Str(_43565_prim.ptr())));;
}



inline jule::Bool _1bc83a9d1_isInstancedStruct(jule::Ptr<_1bc5be0b1_StructIns> _436022_s) {
	return ((*((*(_436022_s))._field_Decl))._field_Generics.len() == (*(_436022_s))._field_Generics.len());;
}



inline jule::Bool _1bc83ad55_isPtrArithmeticCompatible(jule::Ptr<_1bc8108a7_Data>* _436435_l, jule::Ptr<_1bc8108a7_Data>* _436450_r) {
	jule::Ptr<_1bc85108a_Ptr> _43655_ptr = _1bc843d3b_Ptr((*((*(_436450_r))))._field_Kind.ptr());;
	if ((_43655_ptr != nullptr)) {
		return _1bc8418c7_Equal((*(_1bc843d3b_Ptr((*((*(_436435_l))))._field_Kind.ptr())))._field_Elem, (*(_43655_ptr))._field_Elem);;
	};
	if (_1bc81127b_IsConst((*(_436450_r)).ptr())) {
		return _1bc7e72ea_intAssignable(jule::Str::lit("int", 3), _436450_r);;
	};
	_1bc7e77d4_typeCompatibilityChecker _43729_tcc = _1bc7e77d4_typeCompatibilityChecker{._field_dest=_1bc2c50d6_primInt, ._field_src=(*((*(_436450_r))))._field_Kind, };;
	return _1bc7e8e9a_check(&_43729_tcc);;
}



inline void _1bc83b141_applyCastKindModel(jule::Ptr<_1bc8108a7_Data>* _437928_d, jule::Ptr<_1bc8411bd_TypeKind>* _437943_t) {
	(*((*(_437928_d))))._field_Model=jule::Any(jule::new_ptr<_1ece0e8b0_CastingExprModel>(_1ece0e8b0_CastingExprModel{._field_Expr=(*((*(_437928_d))))._field_Model, ._field_Kind=(*(_437943_t)), ._field_ExprKind=(*((*(_437928_d))))._field_Kind}), &__jule_any_type92);
}



inline void _1bc83b42c_applyCastKind(jule::Ptr<_1bc8108a7_Data>* _438723_d, jule::Ptr<_1bc8411bd_TypeKind>* _438738_t) {
	_1bc83b141_applyCastKindModel(_438723_d, _438738_t);
	(*((*(_438723_d))))._field_Kind=(*(_438738_t));
}



inline jule::Ptr<_1bc8108a7_Data> _1bc83b63b_buildVoidData(void) {
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c3cd8_primVoid, });;
}



inline jule::Str _1bc83b905_checkDataForIntegerIndexing(jule::Ptr<_1bc8108a7_Data>* _439837_d) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_439837_d)) == nullptr)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	{
		
		if ((_1bc84381e_Prim((*((*(_439837_d))))._field_Kind.ptr()) == nullptr)) {
			_case_begin_1c1a16779:;
			{
				__jule_func_result = jule::Str::lit("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if ((!(_230d577a3_IsInt(_1bc8490d8_Str(_1bc84381e_Prim((*((*(_439837_d))))._field_Kind.ptr()).ptr()))))) {
			_case_begin_1c1a167e0:;
			{
				__jule_func_result = jule::Str::lit("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if (_1bc81127b_IsConst((*(_439837_d)).ptr())) {
			_case_begin_1c1a16856:;
			{
				if ((_230d5b048_AsF64((*((*(_439837_d))))._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = jule::Str::lit("overflow the limit of data-type", 31);
					return __jule_func_result;;
				};
			}
		}
		else if ((_1bc84381e_Prim((*((*(_439837_d))))._field_Kind.ptr()) == nullptr) || _1bc81127b_IsConst((*(_439837_d)).ptr()) || (_230d4c37a_RealKindOf(_1bc8490d8_Str(_1bc84381e_Prim((*((*(_439837_d))))._field_Kind.ptr()).ptr())) != _230d4c37a_RealKindOf(jule::Str::lit("int", 3)))) {
			_case_begin_1c1a168cd:;
			{
				_1bc83b42c_applyCastKind(_439837_d, &(_1bc2c50d6_primInt));
			}
		}
		_match_end_1c1a16416:;
	};
	__jule_func_result = jule::Str();
	return __jule_func_result;;
}



inline void _1bc83bbe1_applyCastModelByEnum(jule::Ptr<_1bc8108a7_Data>* _442330_d, jule::Ptr<_1bc71624c_Enum> _442344_e) {
	if ((_442344_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1bc848c97_Prim> _44275_p = _1bc84381e_Prim((*((*(_442344_e))._field_Kind))._field_Kind.ptr());;
	if (_1bc84c22e_IsStr(_44275_p.ptr())) {
		return;;
	};
	_1bc83b141_applyCastKindModel(_442330_d, &((*((*(_442344_e))._field_Kind))._field_Kind));
}



inline void _1bc83becc_castConstByType(jule::Str* _443421_t, jule::Ptr<_1bc8108a7_Data>* _443434_d) {
	{
		
		if (_230d571cb_IsSigInt((*(_443421_t)))) {
			_case_begin_1c1a1c4d8:;
			{
				{
					auto _match_expr{ _230d4c644_BitsizeOf(_230d4c37a_RealKindOf((*(_443421_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1c1a1d110:;
						{
							_230d5b301_SetI64((*((*(_443434_d))))._field_Constant.ptr(), static_cast<jule::I64>(_230d5aa2b_AsI64((*((*(_443434_d))))._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1c1a1d187:;
						{
							_230d5b301_SetI64((*((*(_443434_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_230d5aa2b_AsI64((*((*(_443434_d))))._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1c1a1d20e:;
						{
							_230d5b301_SetI64((*((*(_443434_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_230d5aa2b_AsI64((*((*(_443434_d))))._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1c1a1d286:;
						{
							_230d5b301_SetI64((*((*(_443434_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_230d5aa2b_AsI64((*((*(_443434_d))))._field_Constant.ptr())))));
						}
					}
					_match_end_1c1a1cd35:;
				};
			}
		}
		else if (_230d574d9_IsUnsigInt((*(_443421_t)))) {
			_case_begin_1c1a1c560:;
			{
				{
					auto _match_expr{ _230d4c644_BitsizeOf(_230d4c37a_RealKindOf((*(_443421_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1c1a221e1:;
						{
							_230d5b5a9_SetU64((*((*(_443434_d))))._field_Constant.ptr(), static_cast<jule::U64>(_230d5acb2_AsU64((*((*(_443434_d))))._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1c1a22257:;
						{
							_230d5b5a9_SetU64((*((*(_443434_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_230d5acb2_AsU64((*((*(_443434_d))))._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1c1a222ce:;
						{
							_230d5b5a9_SetU64((*((*(_443434_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_230d5acb2_AsU64((*((*(_443434_d))))._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1c1a22356:;
						{
							_230d5b5a9_SetU64((*((*(_443434_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_230d5acb2_AsU64((*((*(_443434_d))))._field_Constant.ptr())))));
						}
					}
					_match_end_1c1a21179:;
				};
			}
		}
		else if (_230d57ae4_IsFloat((*(_443421_t)))) {
			_case_begin_1c1a1c5d7:;
			{
				{
					auto _match_expr{ _230d4c644_BitsizeOf(_230d4c37a_RealKindOf((*(_443421_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1c1a2627d:;
						{
							_230d5bdc3_SetF64((*((*(_443434_d))))._field_Constant.ptr(), static_cast<jule::F64>(_230d5b048_AsF64((*((*(_443434_d))))._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1c1a26305:;
						{
							_230d5bdc3_SetF64((*((*(_443434_d))))._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_230d5b048_AsF64((*((*(_443434_d))))._field_Constant.ptr())))));
						}
					}
					_match_end_1c1a1d63d:;
				};
			}
		}
		_match_end_1c1a1c3c8:;
	};
}



inline void _1bc83c472_updateModelToGenericIns(jule::Any* _446833_m, jule::Ptr<_1ece1de96_FnIns>* _446852_f) {
	{
		auto &_match_expr{ (*(_446833_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c1a227b8:;
			{
				(*(_446833_m))=jule::Any((*(_446852_f)), &__jule_any_type7);
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1c1a26624:;
			{
				(*((*(_446833_m)).cast_ptr<_1ece12d03_StructSubIdentExprModel>(&__jule_any_type97)))._field_Method=(*(_446852_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1c1a2668a:;
			{
				(*((*(_446833_m)).cast_ptr<_1ece132a9_StructStaticIdentExprModel>(&__jule_any_type95)))._field_Method=(*(_446852_f));
			}
		}
		_match_end_1c1a276be:;
	};
}



inline jule::Bool _1bc83c7e6_pushSubIdentFromExpr(jule::Any _447929_expr, jule::Ptr<_1bc596044_SubIdentTypeDecl>* _447950_t) {
	{
		auto &_match_expr{ _447929_expr };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1c1a29acd:;
			{
				jule::Ptr<_1bc59b39b_IdentExpr> _448213_e = _447929_expr.cast_ptr<_1bc59b39b_IdentExpr>(&__jule_any_type79);;
				{ jule::Slice<jule::Ptr<_1bc595c47_IdentTypeDecl>> &__jule_push_dest = (*((*(_447950_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1bc595c47_IdentTypeDecl>(_1bc595c47_IdentTypeDecl{._field_Token=(*(_448213_e))._field_Token, ._field_Ident=(*(_448213_e))._field_Ident, })); };
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1c1a29b44:;
			{
				jule::Ptr<_1bc5a28e1_SubIdentExpr> _448813_e = _447929_expr.cast_ptr<_1bc5a28e1_SubIdentExpr>(&__jule_any_type85);;
				if ((!(_1bc83c7e6_pushSubIdentFromExpr((*((*(_448813_e))._field_Expr))._field_Kind, _447950_t)))) {
					return false;;
				};
				{ jule::Slice<jule::Ptr<_1bc595c47_IdentTypeDecl>> &__jule_push_dest = (*((*(_447950_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1bc595c47_IdentTypeDecl>(_1bc595c47_IdentTypeDecl{._field_Token=(*(_448813_e))._field_Ident, ._field_Ident=(*((*(_448813_e))._field_Ident))._field_Kind, })); };
			}
		}
		else {
			_case_begin_1c1a29a67:;
			{
				return false;;
			}
		}
		_match_end_1c1a2999b:;
	};
	return true;;
}



inline jule::Str _1bc83cab0_constoa(jule::Ptr<_230d58386_Const>* _450213_c) {
	{
		
		if (_230d5c357_IsI64((*(_450213_c)).ptr())) {
			_case_begin_1c1a2c9e3:;
			{
				return _230d49e16_FmtInt(static_cast<jule::I64>(_230d59c5b_ReadI64((*(_450213_c)).ptr())), 10LL);;
			}
		}
		else if (_230d5c5dd_IsU64((*(_450213_c)).ptr())) {
			_case_begin_1c1a2ca59:;
			{
				return _230d49a4d_FmtUint(static_cast<jule::U64>(_230d59ee2_ReadU64((*(_450213_c)).ptr())), 10LL);;
			}
		}
		else {
			_case_begin_1c1a29cba:;
			{
				return jule::Str();;
			}
		}
		_match_end_1c1a2a2e8:;
	};
}



inline jule::Ptr<_1bc8108a7_Data> _1bc83ce34_evalEnumStatic(jule::Ptr<_1bc71624c_Enum>* _451324_enm, jule::Ptr<_1bc7156d0_EnumItem>* _451341_item) {
	jule::Ptr<_1bc8108a7_Data> _45149_d = jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>((*(_451324_enm)), 3)}), });;
	if (((*(_451341_item)) != nullptr)) {
		(*(_45149_d))._field_Constant=jule::new_ptr<_230d58386_Const>((*((*((*((*((*(_451341_item))))._field_Value))._field_Data))._field_Constant)));
		(*(_45149_d))._field_Model=jule::Any((*(_45149_d))._field_Constant, &__jule_any_type19);
		_1bc83bbe1_applyCastModelByEnum(&(_45149_d), (*(_451324_enm)));
	};
	return _45149_d;;
}



inline jule::Ptr<_1ece0e030_StructLitExprModel> _1bc83d1ed_isLitBased(jule::Any* _453020_m) {
	{
		auto &_match_expr{ (*(_453020_m)) };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1c1a32487:;
			{
				return (*(_453020_m)).cast_ptr<_1ece0e030_StructLitExprModel>(&__jule_any_type94);;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1c1a324ed:;
			{
				return (*((*(_453020_m)).cast_ptr<_1ece0e32c_AllocStructLitExprModel>(&__jule_any_type112)))._field_Lit;;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1c1a32564:;
			{
				jule::Ptr<_1ece12d03_StructSubIdentExprModel> _453713_ssi = (*(_453020_m)).cast_ptr<_1ece12d03_StructSubIdentExprModel>(&__jule_any_type97);;
				return _1bc83d1ed_isLitBased(&((*((*(_453713_ssi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1c1a325ca:;
			{
				jule::Ptr<_1ece0e8b0_CastingExprModel> _454013_c = (*(_453020_m)).cast_ptr<_1ece0e8b0_CastingExprModel>(&__jule_any_type92);;
				return _1bc83d1ed_isLitBased(&((*(_454013_c))._field_Expr));;
			}
		}
		else {
			_case_begin_1c1a32421:;
			{
				return nullptr;;
			}
		}
		_match_end_1c1a323bb:;
	};
}



inline void _1bc83d4d9_makeImplicitDeref(jule::Ptr<_1bc8108a7_Data>* _454727_d, jule::Ptr<_1bc583a9d_Token> _454741_baseToken) {
	jule::Ptr<_1ece0d65b_UnaryExprModel> _45489_unary = jule::new_ptr<_1ece0d65b_UnaryExprModel>(_1ece0d65b_UnaryExprModel{._field_Expr=jule::new_ptr<_1bc8108a7_Data>((*((*(_454727_d))))), ._field_Op=jule::new_ptr<_1bc583a9d_Token>((*(_454741_baseToken)))});;
	(*((*(_45489_unary))._field_Op))._field_Id=static_cast<jule::U64>(62LLU);
	(*((*(_45489_unary))._field_Op))._field_Kind=jule::Str::lit("*", 1);
	(*((*(_454727_d))))._field_Model=jule::Any(_45489_unary, &__jule_any_type110);
}



inline void _1c1dd3360_updateRefer(jule::Ptr<_1ece221a8_ReferenceStack> _455823_ref, jule::Ptr<_1ece1de96_FnIns>* _455846_old, jule::Ptr<_1ece1de96_FnIns>* _455859_new) {
	{
		auto expr = &((*(_455823_ref))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1dd4c9b:;
		if (it != expr_end) {
			jule::I64 _45599_i = it - expr->begin();
			jule::Any _455912_sym = *it;
			{
				if ((__jule_any_type7_compare(_455912_sym, (*(_455846_old))))) {
					(*(_455823_ref))._field_buffer[_45599_i]=jule::Any((*(_455859_new)), &__jule_any_type7);
				};
			}
			_iter_next_1c1dd4c9b:;
			++it;
			_45599_i++;
			goto _iter_begin_1c1dd4c9b;
		}
		_iter_end_1c1dd4c9b:;
	};
}



inline jule::Bool _1bc85b925_kindUsesGenerics(jule::Ptr<_1bc8411bd_TypeKind>* _171126_k, jule::Slice<jule::Ptr<_1bc5a76a4_GenericDecl>>* _171141_generics) {
	{
		auto expr = _171141_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c08a4c34:;
		if (it != expr_end) {
			jule::Ptr<_1bc5a76a4_GenericDecl> *_171212_g = it;
			{
				if (static__1bc85b4e6_exist(&((*((*(_171212_g))))._field_Ident), _171126_k)) {
					return true;;
				};
			}
			_iter_next_1c08a4c34:;
			++it;
			goto _iter_begin_1c08a4c34;
		}
		_iter_end_1c08a4c34:;
	};
	return false;;
}



inline jule::Bool _1bc85bcdd_hasDirective(jule::Slice<jule::Ptr<_1bc594a59_Directive>>* _172122_directives, jule::Str _172153_tag) {
	{
		auto expr = _172122_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c08a5e44:;
		if (it != expr_end) {
			jule::Ptr<_1bc594a59_Directive> _172217_dr = *it;
			{
				if (((*((*(_172217_dr))._field_Tag))._field_Kind == _172153_tag)) {
					return true;;
				};
			}
			_iter_next_1c08a5e44:;
			++it;
			goto _iter_begin_1c08a5e44;
		}
		_iter_end_1c08a5e44:;
	};
	return false;;
}



inline jule::Bool _1bc85c0a7_canGetPtr(jule::Ptr<_1bc8108a7_Data>* _173019_d) {
	{
		
		if ((!((*((*(_173019_d))))._field_Lvalue)) || _1bc81127b_IsConst((*(_173019_d)).ptr())) {
			_case_begin_1c08a6e67:;
			{
				return false;;
			}
		}
		else if ((_1bc844b0b_Fn((*((*(_173019_d))))._field_Kind.ptr()) != nullptr) || (_1bc8440c2_Enum((*((*(_173019_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c08a6ede:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1c08a62b8:;
			{
				return true;;
			}
		}
		_match_end_1c08a6241:;
	};
}



inline jule::Bool _1bc85c3e8_isValidForSptrType(jule::Ptr<_1bc8411bd_TypeKind>* _174228_t) {
	jule::Ptr<_1bc5be0b1_StructIns> _17439_s = _1bc844d92_Struct((*(_174228_t)).ptr());;
	if ((((_17439_s != nullptr) && ((*(_17439_s))._field_Decl != nullptr)) && (*((*(_17439_s))._field_Decl))._field_Binded)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _1bc85c6b2_isValidForRef(jule::Ptr<_1bc8411bd_TypeKind>* _175123_t) {
	return (_1bc844b0b_Fn((*(_175123_t)).ptr()) == nullptr);;
}



inline jule::Bool _1bc85c97b_isBuiltinStrConvertable(jule::Ptr<_1bc8411bd_TypeKind>* _175433_t) {
	return ((((!(_1bc842532_Void((*(_175433_t)).ptr()))) && (_1bc844b0b_Fn((*(_175433_t)).ptr()) == nullptr)) && (_1bc845645_Tup((*(_175433_t)).ptr()) == nullptr)) && (!(_1bc8458cb_comptime((*(_175433_t)).ptr()))));;
}



inline jule::Str _1bc85cc45_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _175827_tokens) {
	if ((((*(_175827_tokens)).len() == 1LL) && ((*((*(_175827_tokens))[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		return jule::Str::lit("std::unsafe", 11);;
	};
	jule::I64 _17629_n = 0LL;;
	{
		auto expr = _175827_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c08acd19:;
		if (it != expr_end) {
			jule::Ptr<_1bc583a9d_Token> *_176312_token = it;
			{
				_17629_n+=(*((*(_176312_token))))._field_Kind.len();
				_17629_n+=2LL;
			}
			_iter_next_1c08acd19:;
			++it;
			goto _iter_begin_1c08acd19;
		}
		_iter_end_1c08acd19:;
	};
	_2096a4489_StrBuilder _17679_s = static__2096a48da_New(_17629_n);;
	{
		auto expr = _175827_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c08ad611:;
		if (it != expr_end) {
			jule::I64 _17689_i = it - expr->begin();
			jule::Ptr<_1bc583a9d_Token> *_176812_token = it;
			{
				_2096a4e4b_WriteStr(&_17679_s, (*((*(_176812_token))))._field_Kind);
				if ((((*(_175827_tokens)).len() - _17689_i) > 1LL)) {
					_2096a4e4b_WriteStr(&_17679_s, jule::Str::lit("::", 2));
				};
			}
			_iter_next_1c08ad611:;
			++it;
			_17689_i++;
			goto _iter_begin_1c08ad611;
		}
		_iter_end_1c08ad611:;
	};
	return _2096a5743_Str(&_17679_s);;
}



inline jule::Ptr<_1bc848c97_Prim> _1bc85d0db_buildPrimType(jule::Str _177718_kind) {
	return jule::new_ptr<_1bc848c97_Prim>(_1bc848c97_Prim{._field_Kind=_177718_kind});;
}



inline void _1bc85d691_applyImplicitCast(jule::Ptr<_1bc8411bd_TypeKind>* _180527_dest, jule::Ptr<_1bc8108a7_Data>* _180549_d) {
	if (_1bc84229b_IsNil((*((*(_180549_d))))._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1bc848c97_Prim> _18095_destPrim = _1bc84381e_Prim((*(_180527_dest)).ptr());;
	jule::Ptr<_1bc848c97_Prim> _18105_prim = _1bc84381e_Prim((*((*(_180549_d))))._field_Kind.ptr());;
	if ((_18095_destPrim != nullptr)) {
		if (_1bc84c4b5_IsAny(_18095_destPrim.ptr())) {
			if (((_18105_prim == nullptr) || (!(_1bc84c4b5_IsAny(_18105_prim.ptr()))))) {
				_1bc83b42c_applyCastKind(_180549_d, _180527_dest);
			};
			return;;
		};
		if (((((((!(_1bc842015_Binded((*((*(_180549_d))))._field_Kind.ptr()))) && (!((*((*((*(_180549_d))))._field_Kind))._field_Variadic))) && (!((*((*(_180549_d))))._field_Lvalue))) && (!(_1bc81127b_IsConst((*(_180549_d)).ptr())))) && (_18105_prim != nullptr)) && _230d57dad_IsNum((*(_18105_prim))._field_Kind))) {
			_1bc83b42c_applyCastKind(_180549_d, _180527_dest);
		};
		return;;
	};
	jule::Ptr<_1bc713a41_Trait> _18295_dt = _1bc845128_Trait((*(_180527_dest)).ptr());;
	if ((_18295_dt != nullptr)) {
		jule::Ptr<_1bc713a41_Trait> _18319_bt = _1bc845128_Trait((*((*(_180549_d))))._field_Kind.ptr());;
		if (((_18319_bt == nullptr) || (_18319_bt != _18295_dt))) {
			_1bc83b141_applyCastKindModel(_180549_d, _180527_dest);
			return;;
		};
	};
	if (((_1bc844358_TypeEnum((*(_180527_dest)).ptr()) != nullptr) && (_1bc844358_TypeEnum((*((*(_180549_d))))._field_Kind.ptr()) == nullptr))) {
		_1bc83b141_applyCastKindModel(_180549_d, _180527_dest);
		return;;
	};
}



inline jule::Bool _1bc85d95a_validTypeForXof(jule::Ptr<_1bc8411bd_TypeKind>* _184425_t) {
	return ((!(_1bc842532_Void((*(_184425_t)).ptr()))) && (_1bc844b0b_Fn((*(_184425_t)).ptr()) == nullptr));;
}



inline __jule_tuple_x_1bc80a50b_SymbolTable__jule_tuple_s_1ed6c7892_Log _1bc8619e6_buildSymbols(jule::Ptr<_1bc59378e_Ast>* _1622_ast, jule::Trait<_1bc760ede_Importer>* _1638_importer, jule::Ptr<_1ece2828b_symbolBuilder> _1662_owner) {
	__jule_tuple_x_1bc80a50b_SymbolTable__jule_tuple_s_1ed6c7892_Log __jule_func_result;
	jule::Ptr<_1ece2828b_symbolBuilder> _179_sb = jule::new_ptr<_1ece2828b_symbolBuilder>(_1ece2828b_symbolBuilder{._field_owner=_1662_owner, ._field_importer=(*(_1638_importer)), ._field_ast=(*(_1622_ast)), });;
	_1bc712e08_build(_179_sb);
	if (((*(_179_sb))._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_179_sb))._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = (*(_179_sb))._field_errors;
	return __jule_func_result;;
}



inline __jule_tuple_x_1bc766d2a_Package__jule_tuple_s_1ed6c7892_Log _1bc861e69_analyzePackage(jule::Slice<jule::Ptr<_1bc59378e_Ast>>* _3024_files, jule::Trait<_1bc760ede_Importer>* _3044_importer, jule::I64* _3065_flags) {
	__jule_tuple_x_1bc766d2a_Package__jule_tuple_s_1ed6c7892_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1bc80a50b_SymbolTable>> _329_tables = jule::Slice<jule::Ptr<_1bc80a50b_SymbolTable>>::alloc(0LL, (*(_3024_files)).len());;
	{
		auto expr = _3024_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c23eb339:;
		if (it != expr_end) {
			jule::Ptr<_1bc59378e_Ast> _3317_f = *it;
			{
				jule::Ptr<_1bc80a50b_SymbolTable> _3413_table;;
				jule::Slice<_1ed6c7892_Log> _3424_errors;;
				({
					__jule_tuple_x_1bc80a50b_SymbolTable__jule_tuple_s_1ed6c7892_Log __jule_assign_result = _1bc8619e6_buildSymbols(&(_3317_f), _3044_importer, nullptr);
					_3413_table = __jule_assign_result.__jule_result_arg0;
					_3424_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_3424_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _3424_errors;
					return __jule_func_result;;
				};
				{ jule::Slice<jule::Ptr<_1bc80a50b_SymbolTable>> &__jule_push_dest = _329_tables; __jule_push_dest.push(_3413_table); };
			}
			_iter_next_1c23eb339:;
			++it;
			goto _iter_begin_1c23eb339;
		}
		_iter_end_1c23eb339:;
	};
	jule::Ptr<_1bc784276_Sema> _419_sema = jule::new_ptr<_1bc784276_Sema>(_1bc784276_Sema{._field_flags=(*(_3065_flags)), ._field_meta=jule::new_ptr<_1bc78364e_commonSemaMeta>()});;
	_1bc7a3a15_check(_419_sema, &(_329_tables));
	if (((*(_419_sema))._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = (*(_419_sema))._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1bc766d2a_Package> _509_pkg = jule::new_ptr<_1bc766d2a_Package>(_1bc766d2a_Package{._field_Files=(*(_419_sema))._field_files});;
	__jule_func_result.__jule_result_arg0 = _509_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1bc766d2a_Package__jule_tuple_s_1ed6c7892_Log _1bc862398_AnalyzePackage(jule::Slice<jule::Ptr<_1bc59378e_Ast>> _7423_files, jule::Trait<_1bc760ede_Importer> _7442_importer, jule::I64 _7462_flags) {
	__jule_tuple_x_1bc766d2a_Package__jule_tuple_s_1ed6c7892_Log __jule_func_result;
	if ((_7423_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1bc766d2a_Package> _789_package;;
	jule::Slice<_1ed6c7892_Log> _7822_logs;;
	({
		__jule_tuple_x_1bc766d2a_Package__jule_tuple_s_1ed6c7892_Log __jule_assign_result = _1bc861e69_analyzePackage(&(_7423_files), &(_7442_importer), &(_7462_flags));
		_789_package = __jule_assign_result.__jule_result_arg0;
		_7822_logs = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _789_package;
	__jule_func_result.__jule_result_arg1 = _7822_logs;
	return __jule_func_result;;
}



inline jule::Ptr<_1ece1de96_FnIns> _1bc2c33ae_findBuiltinFunc(jule::Str* _2521_ident) {
	{
		auto &_match_expr{ (*(_2521_ident)) };
		
		if (_match_expr == jule::Str::lit("out", 3)) {
			_case_begin_1c2405794:;
			{
				static jule::Ptr<_1ece1de96_FnIns> _2820_f = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>(_1bc2c9519_builtinCallerOut), });;
				return _2820_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("outln", 5)) {
			_case_begin_1c2405970:;
			{
				static jule::Ptr<_1ece1de96_FnIns> _3120_f = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>(_1bc2c9948_builtinCallerOutln), });;
				return _3120_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("new", 3)) {
			_case_begin_1c24059e7:;
			{
				static jule::Ptr<_1ece1de96_FnIns> _3420_f = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>(_1bc2c9d77_builtinCallerNew), });;
				return _3420_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("panic", 5)) {
			_case_begin_1c2405a6e:;
			{
				static jule::Ptr<_1ece1de96_FnIns> _3720_f = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>(_1bc2ca460_builtinCallerPanic), });;
				return _3720_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("make", 4)) {
			_case_begin_1c2405ae6:;
			{
				static jule::Ptr<_1ece1de96_FnIns> _4020_f = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>(_1bc2ca88e_builtinCallerMake), });;
				return _4020_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("append", 6)) {
			_case_begin_1c2405d49:;
			{
				static jule::Ptr<_1ece1de96_FnIns> _4320_f = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>(_1bc2cacbd_builtinCallerAppend), });;
				return _4320_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("copy", 4)) {
			_case_begin_1c2405dc1:;
			{
				static jule::Ptr<_1ece1de96_FnIns> _4620_f = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>(_1bc2cb6d6_builtinCallerCopy), });;
				return _4620_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("len", 3)) {
			_case_begin_1c2405e48:;
			{
				static jule::Ptr<_1ece1de96_FnIns> _4920_f = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>(_1bc2ccd7a_builtinCallerLen), });;
				return _4920_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("cap", 3)) {
			_case_begin_1c2405ec0:;
			{
				static jule::Ptr<_1ece1de96_FnIns> _5220_f = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>(_1bc2cd62d_builtinCallerCap), });;
				return _5220_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("delete", 6)) {
			_case_begin_1c240609c:;
			{
				static jule::Ptr<_1ece1de96_FnIns> _5520_f = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>(_1bc2ce046_builtinCallerDelete), });;
				return _5520_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("assert", 6)) {
			_case_begin_1c2406124:;
			{
				static jule::Ptr<_1ece1de96_FnIns> _5820_f = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>(_1bc2ce475_builtinCallerAssert), });;
				return _5820_f;;
			}
		}
		else {
			_case_begin_1c2405909:;
			{
				return nullptr;;
			}
		}
		_match_end_1c24058a4:;
	};
}



inline jule::Ptr<_1bc8403cb_TypeAlias> _1bc2c36bc_primTypeAlias(jule::Ptr<_1bc8411bd_TypeKind>* _6523_k) {
	return jule::new_ptr<_1bc8403cb_TypeAlias>(_1bc8403cb_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1bc848390_TypeSymbol>(_1bc848390_TypeSymbol{._field_Kind=(*(_6523_k))}), });;
}



inline jule::Ptr<_1bc7a750d_Var> _1bc2c72c5_findBuiltinVar(jule::Str* _9320_ident) {
	{
		auto &_match_expr{ (*(_9320_ident)) };
		
		if (_match_expr == jule::Str::lit("nil", 3)) {
			_case_begin_1c240d57c:;
			{
				static jule::Ptr<_1bc7a750d_Var> _9620_v = jule::new_ptr<_1bc7a750d_Var>(_1bc7a750d_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=jule::new_ptr<_1bc848390_TypeSymbol>(_1bc848390_TypeSymbol{._field_Kind=_1bc2c39ca_primNil}), ._field_Value=jule::new_ptr<_1bc8119eb_Value>(_1bc8119eb_Value{._field_Data=jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Constant=static__230d595eb_NewNil()})}), });;
				return _9620_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("true", 4)) {
			_case_begin_1c240d5e3:;
			{
				static jule::Ptr<_1bc7a750d_Var> _11120_v = jule::new_ptr<_1bc7a750d_Var>(_1bc7a750d_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=(*(_1bc2c7506_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1bc8119eb_Value>(_1bc8119eb_Value{._field_Data=jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Constant=static__230d58d59_NewBool(true)})}), });;
				return _11120_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("false", 5)) {
			_case_begin_1c240d659:;
			{
				static jule::Ptr<_1bc7a750d_Var> _12420_v = jule::new_ptr<_1bc7a750d_Var>(_1bc7a750d_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=(*(_1bc2c7506_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1bc8119eb_Value>(_1bc8119eb_Value{._field_Data=jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Constant=static__230d58d59_NewBool(false)})}), });;
				return _12420_v;;
			}
		}
		else {
			_case_begin_1c240d516:;
			{
				return nullptr;;
			}
		}
		_match_end_1c240d428:;
	};
}



inline jule::Ptr<_1bc8403cb_TypeAlias> _1bc2c7506_findBuiltinTypeAlias(jule::Str _14125_ident) {
	{
		auto &_match_expr{ _14125_ident };
		
		if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1c240dc53:;
			{
				static jule::Ptr<_1bc8403cb_TypeAlias> _14420_t = _1bc2c36bc_primTypeAlias(&(_1bc2c40a2_primAny));;
				return _14420_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("str", 3)) {
			_case_begin_1c24134a5:;
			{
				static jule::Ptr<_1bc8403cb_TypeAlias> _14720_t = _1bc2c36bc_primTypeAlias(&(_1bc2c43b0_primStr));;
				return _14720_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("bool", 4)) {
			_case_begin_1c2413719:;
			{
				static jule::Ptr<_1bc8403cb_TypeAlias> _15020_t = _1bc2c36bc_primTypeAlias(&(_1bc2c4679_primBool));;
				return _15020_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1c2413780:;
			{
				static jule::Ptr<_1bc8403cb_TypeAlias> _15320_t = _1bc2c36bc_primTypeAlias(&(_1bc2c4943_primUintptr));;
				return _15320_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1c24137e6:;
			{
				static jule::Ptr<_1bc8403cb_TypeAlias> _15620_t = _1bc2c36bc_primTypeAlias(&(_1bc2c4c0c_primUint));;
				return _15620_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1c241385c:;
			{
				static jule::Ptr<_1bc8403cb_TypeAlias> _15920_t = _1bc2c36bc_primTypeAlias(&(_1bc2c50d6_primInt));;
				return _15920_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1c241394a:;
			{
				static jule::Ptr<_1bc8403cb_TypeAlias> _16220_t = _1bc2c36bc_primTypeAlias(&(_1bc2c53a0_primI8));;
				return _16220_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1c24139b1:;
			{
				static jule::Ptr<_1bc8403cb_TypeAlias> _16520_t = _1bc2c36bc_primTypeAlias(&(_1bc2c5669_primI16));;
				return _16520_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1c2413a27:;
			{
				static jule::Ptr<_1bc8403cb_TypeAlias> _16820_t = _1bc2c36bc_primTypeAlias(&(_1bc2c5bec_primI64));;
				return _16820_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1c2413a8d:;
			{
				static jule::Ptr<_1bc8403cb_TypeAlias> _17120_t = _1bc2c36bc_primTypeAlias(&(_1bc2c6280_primU16));;
				return _17120_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1c2413b15:;
			{
				static jule::Ptr<_1bc8403cb_TypeAlias> _17420_t = _1bc2c36bc_primTypeAlias(&(_1bc2c6549_primU32));;
				return _17420_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1c2413b8c:;
			{
				static jule::Ptr<_1bc8403cb_TypeAlias> _17720_t = _1bc2c36bc_primTypeAlias(&(_1bc2c69bc_primU64));;
				return _17720_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1c2413c14:;
			{
				static jule::Ptr<_1bc8403cb_TypeAlias> _18020_t = _1bc2c36bc_primTypeAlias(&(_1bc2c6c86_primF32));;
				return _18020_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1c2413c8b:;
			{
				static jule::Ptr<_1bc8403cb_TypeAlias> _18320_t = _1bc2c36bc_primTypeAlias(&(_1bc2c7050_primF64));;
				return _18320_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("byte", 4) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1c2413d13:;
			{
				static jule::Ptr<_1bc8403cb_TypeAlias> _18620_t = _1bc2c36bc_primTypeAlias(&(_1bc2c5eb6_primU8));;
				return _18620_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("rune", 4) || _match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1c2413d8a:;
			{
				static jule::Ptr<_1bc8403cb_TypeAlias> _18920_t = _1bc2c36bc_primTypeAlias(&(_1bc2c5933_primI32));;
				return _18920_t;;
			}
		}
		else {
			_case_begin_1c241330c:;
			{
				return nullptr;;
			}
		}
		_match_end_1c2411a9c:;
	};
}



inline jule::Any _1bc2c77c0_findBuiltinDef(jule::Str* _19620_ident) {
	jule::Ptr<_1bc7a750d_Var> _1979_v = _1bc2c72c5_findBuiltinVar(_19620_ident);;
	if ((_1979_v != nullptr)) {
		return jule::Any(_1979_v, &__jule_any_type8);;
	};
	jule::Ptr<_1ece1de96_FnIns> _2019_f = _1bc2c33ae_findBuiltinFunc(_19620_ident);;
	if ((_2019_f != nullptr)) {
		return jule::Any(_2019_f, &__jule_any_type7);;
	};
	jule::Ptr<_1bc8403cb_TypeAlias> _2059_ta = _1bc2c7506_findBuiltinTypeAlias((*(_19620_ident)));;
	if ((_2059_ta != nullptr)) {
		return jule::Any(_2059_ta, &__jule_any_type66);;
	};
	return nullptr;;
}



inline jule::Any _1bc2c7a89_findBuiltinDefStdDebug(jule::Str* _21228_ident) {
	{
		auto &_match_expr{ (*(_21228_ident)) };
		
		if (_match_expr == jule::Str::lit("Out", 3)) {
			_case_begin_1c241d603:;
			{
				static jule::Ptr<_1ece1de96_FnIns> _21520_f = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>(_1bc2d2b0a_builtinCallerStdDebugOut), });;
				return jule::Any(_21520_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Outln", 5)) {
			_case_begin_1c241d669:;
			{
				static jule::Ptr<_1ece1de96_FnIns> _21820_f = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>(_1bc2d3039_builtinCallerStdDebugOutln), });;
				return jule::Any(_21820_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1c241d58c:;
			{
				return nullptr;;
			}
		}
		_match_end_1c241c448:;
	};
}



inline jule::Any _1bc2c7d53_findBuiltinDefStdMem(jule::Str* _22526_ident) {
	{
		auto &_match_expr{ (*(_22526_ident)) };
		
		if (_match_expr == jule::Str::lit("SizeOf", 6)) {
			_case_begin_1c241ee0c:;
			{
				static jule::Ptr<_1ece1de96_FnIns> _22820_f = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>(_1bc2d1510_builtinCallerStdMemSizeOf), });;
				return jule::Any(_22820_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("AlignOf", 7)) {
			_case_begin_1c241ee73:;
			{
				static jule::Ptr<_1ece1de96_FnIns> _23120_f = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>(_1bc2d193e_builtinCallerStdMemAlignOf), });;
				return jule::Any(_23120_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Free", 4)) {
			_case_begin_1c241eed9:;
			{
				static jule::Ptr<_1ece1de96_FnIns> _23420_f = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>(_1bc2d1d6d_builtinCallerStdMemFree), });;
				return jule::Any(_23420_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1c241e56b:;
			{
				return nullptr;;
			}
		}
		_match_end_1c241e516:;
	};
}



inline jule::Any _1bc2c81e9_findBuiltinDefStdComptime(jule::Str* _24131_ident) {
	{
		auto &_match_expr{ (*(_24131_ident)) };
		
		if (_match_expr == jule::Str::lit("TypeOf", 6)) {
			_case_begin_1c24222b6:;
			{
				static jule::Ptr<_1ece1de96_FnIns> _24420_f = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>(_1bc2cea4c_builtinCallerStdComptimeTypeOf), });;
				return jule::Any(_24420_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("ValueOf", 7)) {
			_case_begin_1c242232c:;
			{
				static jule::Ptr<_1ece1de96_FnIns> _24720_f = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>(_1bc2cee15_builtinCallerStdComptimeValueOf), });;
				return jule::Any(_24720_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Line", 4)) {
			_case_begin_1c2422393:;
			{
				static jule::Ptr<_1ece1de96_FnIns> _25020_f = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>(_1bc2d0344_builtinCallerStdComptimeLine), });;
				return jule::Any(_25020_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("File", 4)) {
			_case_begin_1c242241a:;
			{
				static jule::Ptr<_1ece1de96_FnIns> _25320_f = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>(_1bc2d0773_builtinCallerStdComptimeFile), });;
				return jule::Any(_25320_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Files", 5)) {
			_case_begin_1c242276c:;
			{
				static jule::Ptr<_1ece1de96_FnIns> _25620_f = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>(_1bc2d0ba2_builtinCallerStdComptimeFiles), });;
				return jule::Any(_25620_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("TypeAlias", 9)) {
			_case_begin_1c24227e4:;
			{
				static jule::Ptr<_1ece1de96_FnIns> _25920_f = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>(_1bc2d10d1_builtinCallerStdComptimeTypeAlias), });;
				return jule::Any(_25920_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1c2421925:;
			{
				return nullptr;;
			}
		}
		_match_end_1c24218c0:;
	};
}



inline jule::Any _1bc2c84b3_findBuiltinDefStdJuleIntegrated(jule::Str* _26637_ident) {
	{
		auto &_match_expr{ (*(_26637_ident)) };
		
		if (_match_expr == jule::Str::lit("ToStr", 5)) {
			_case_begin_1c242650c:;
			{
				static jule::Ptr<_1ece1de96_FnIns> _26920_f = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>(_1bc2d229c_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_26920_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Emit", 4)) {
			_case_begin_1c2426573:;
			{
				static jule::Ptr<_1ece1de96_FnIns> _27220_f = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_Decl=jule::new_ptr<_1ece1b092_Fn>(_1ece1b092_Fn{._field_Generics=jule::Slice<jule::Ptr<_1bc5a76a4_GenericDecl>>::alloc(1LL, 1LL), }), ._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>(_1bc2d26cb_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_27220_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1c2422be0:;
			{
				return nullptr;;
			}
		}
		_match_end_1c2422b8a:;
	};
}



inline jule::Any _1bc2c8837_findPackageBuiltinDef(jule::Str* _28427_linkPath, jule::Str* _28443_ident) {
	{
		auto &_match_expr{ (*(_28427_linkPath)) };
		
		if (_match_expr == jule::Str::lit("std::comptime", 13)) {
			_case_begin_1c2428872:;
			{
				return _1bc2c81e9_findBuiltinDefStdComptime(_28443_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::debug", 10)) {
			_case_begin_1c24288d8:;
			{
				return _1bc2c7a89_findBuiltinDefStdDebug(_28443_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::mem", 8)) {
			_case_begin_1c242894e:;
			{
				return _1bc2c7d53_findBuiltinDefStdMem(_28443_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::jule::integrated", 21)) {
			_case_begin_1c24289b5:;
			{
				return _1bc2c84b3_findBuiltinDefStdJuleIntegrated(_28443_ident);;
			}
		}
		else {
			_case_begin_1c2428674:;
			{
				return nullptr;;
			}
		}
		_match_end_1c242861e:;
	};
}



inline jule::Ptr<_1bc8108a7_Data> _1bc2c8c66_builtinCallerCommonPlain(jule::Ptr<_1bc81259b_Eval>* _29934_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _29949_fc, jule::Ptr<_1bc8108a7_Data>* _29971_d) {
	jule::Ptr<_1ece1de96_FnIns> _3009_f = _1bc844b0b_Fn((*((*(_29971_d))))._field_Kind.ptr());;
	_1bc800cb5_fnCallArgChecker _3029_fcac = _1bc800cb5_fnCallArgChecker{._field_e=(*(_29934_e)), ._field_args=(*((*(_29949_fc))))._field_Args, ._field_errorToken=(*((*(_29949_fc))))._field_Token, ._field_f=_3009_f, ._field_dynamicAnnotation=false, };;
	if ((!(_1bc80336c_check(&_3029_fcac)))) {
		return nullptr;;
	};
	jule::Ptr<_1ece10262_FnCallExprModel> _3139_model = jule::new_ptr<_1ece10262_FnCallExprModel>(_1ece10262_FnCallExprModel{._field_Token=(*((*(_29949_fc))))._field_Token, ._field_Func=_3009_f, ._field_Expr=(*((*(_29971_d))))._field_Model, ._field_Args=_3029_fcac._field_argModels, });;
	if (((*(_3009_f))._field_Result == nullptr)) {
		(*(_29971_d))=_1bc83b63b_buildVoidData();
	} else {
		(*(_29971_d))=jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=(*(_3009_f))._field_Result, });
	};
	(*((*(_29971_d))))._field_Model=jule::Any(_3139_model, &__jule_any_type34);
	return (*(_29971_d));;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc2c90da_builtinCallerError(jule::Ptr<_1bc81259b_Eval>* _33228_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _33243_fc) {
	if (((*((*(_33243_fc))))._field_Args.len() < 1LL)) {
		_1bc812aeb_pushErr((*(_33228_e)).ptr(), (*((*(_33243_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("err", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_33243_fc))))._field_Args.len() > 1LL)) {
		_1bc812aeb_pushErr((*(_33228_e)).ptr(), (*((*((*(_33243_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("error", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1bc8108a7_Data> _3409_expr = _1bc83080b_evalExpr((*(_33228_e)), (*((*(_33243_fc))))._field_Args[0LL]);;
	if ((_3409_expr == nullptr)) {
		return nullptr;;
	};
	if (_1bc810c5e_IsNil(_3409_expr.ptr())) {
		_1bc812aeb_pushErr((*(_33228_e)).ptr(), (*((*((*(_33243_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("you cannot call error function with nil", 39), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1bc8108a7_Data> _3499_d = _1bc83b63b_buildVoidData();;
	(*(_3499_d))._field_Model=jule::Any(jule::new_ptr<_1ece16a93_BuiltinErrorCallExprModel>(_1ece16a93_BuiltinErrorCallExprModel{._field_Err=_3409_expr}), &__jule_any_type23);
	return _3499_d;;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc2c9519_builtinCallerOut(jule::Ptr<_1bc81259b_Eval>* _35426_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _35441_fc, jule::Ptr<_1bc8108a7_Data>* ) {
	if (((*((*(_35441_fc))))._field_Args.len() < 1LL)) {
		_1bc812aeb_pushErr((*(_35426_e)).ptr(), (*((*(_35441_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("v", 1), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_35441_fc))))._field_Args.len() > 1LL)) {
		_1bc812aeb_pushErr((*(_35426_e)).ptr(), (*((*((*(_35441_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("out", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1bc8108a7_Data> _3639_expr = _1bc83080b_evalExpr((*(_35426_e)), (*((*(_35441_fc))))._field_Args[0LL]);;
	if ((_3639_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1bc85c97b_isBuiltinStrConvertable(&((*(_3639_expr))._field_Kind))))) {
		_1bc812aeb_pushErr((*(_35426_e)).ptr(), (*((*((*(_35441_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1bc8108a7_Data> _3739_d = _1bc83b63b_buildVoidData();;
	(*(_3739_d))._field_Model=jule::Any(jule::new_ptr<_1ece13d59_BuiltinOutCallExprModel>(_1ece13d59_BuiltinOutCallExprModel{._field_Expr=(*(_3639_expr))._field_Model, }), &__jule_any_type27);
	return _3739_d;;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc2c9948_builtinCallerOutln(jule::Ptr<_1bc81259b_Eval>* _37828_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _37843_fc, jule::Ptr<_1bc8108a7_Data>* _37865_d) {
	(*(_37865_d))=_1bc2c9519_builtinCallerOut(_37828_e, _37843_fc, _37865_d);
	if (((*(_37865_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*(_37865_d))))._field_Model=jule::Any(jule::new_ptr<_1ece14233_BuiltinOutlnCallExprModel>(_1ece14233_BuiltinOutlnCallExprModel{._field_Expr=(*((*((*(_37865_d))))._field_Model.cast_ptr<_1ece13d59_BuiltinOutCallExprModel>(&__jule_any_type27)))._field_Expr, }), &__jule_any_type28);
	return (*(_37865_d));;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc2c9d77_builtinCallerNew(jule::Ptr<_1bc81259b_Eval>* _39026_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _39041_fc, jule::Ptr<_1bc8108a7_Data>* _39063_d) {
	if (((*((*(_39041_fc))))._field_Args.len() < 1LL)) {
		_1bc812aeb_pushErr((*(_39026_e)).ptr(), (*((*(_39041_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_39041_fc))))._field_Args.len() > 2LL)) {
		_1bc812aeb_pushErr((*(_39026_e)).ptr(), (*((*((*(_39041_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("new", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1bc8108a7_Data> _3999_t = _1bc82e9e7_evalExprKind((*(_39026_e)), (*((*((*(_39041_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_3999_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_3999_t))._field_Decl))) {
		_1bc812aeb_pushErr((*(_39026_e)).ptr(), (*((*((*(_39041_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1bc85c3e8_isValidForSptrType(&((*(_3999_t))._field_Kind))))) {
		jule::Ptr<_1bc5be0b1_StructIns> _41013_s = _1bc844d92_Struct((*(_3999_t))._field_Kind.ptr());;
		if ((((_41013_s != nullptr) && ((*(_41013_s))._field_Decl != nullptr)) && (*((*(_41013_s))._field_Decl))._field_Binded)) {
			_1bc812aeb_pushErr((*(_39026_e)).ptr(), (*((*((*(_39041_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*((*(_39063_d))))._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(jule::new_ptr<_1bc84c7c3_Sptr>(_1bc84c7c3_Sptr{._field_Elem=(*(_3999_t))._field_Kind}), 21)});
	if (((*((*(_39041_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1bc8411bd_TypeKind> _42413_old = (*((*(_39026_e))))._field_prefix;;
		(*((*(_39026_e))))._field_prefix=(*(_3999_t))._field_Kind;
		jule::Ptr<_1bc8108a7_Data> _42713_init = _1bc83080b_evalExpr((*(_39026_e)), (*((*(_39041_fc))))._field_Args[1LL]);;
		(*((*(_39026_e))))._field_prefix=_42413_old;
		if ((_42713_init != nullptr)) {
			jule::Ptr<_1bc583a9d_Token> _43217_token = (*((*((*(_39041_fc))))._field_Args[1LL]))._field_Token;;
			;
			_1bc793c58_checkValidityForInitExpr((*((*(_39026_e))))._field_s, (!((*((*(_39026_e))))._field_immutable)), false, &((*(_3999_t))._field_Kind), &(_42713_init), &(_43217_token));
			_1bc78e8be_checkAssignType((*((*(_39026_e))))._field_s, false, &((*(_3999_t))._field_Kind), &(_42713_init), _43217_token);
			(*((*(_39063_d))))._field_Model=jule::Any(jule::new_ptr<_1ece1460c_BuiltinNewCallExprModel>(_1ece1460c_BuiltinNewCallExprModel{._field_Kind=(*(_3999_t))._field_Kind, ._field_Init=(*(_42713_init))._field_Model}), &__jule_any_type113);
		};
	} else {
		(*((*(_39063_d))))._field_Model=jule::Any(jule::new_ptr<_1ece1460c_BuiltinNewCallExprModel>(_1ece1460c_BuiltinNewCallExprModel{._field_Kind=(*(_3999_t))._field_Kind, }), &__jule_any_type113);
	};
	return (*(_39063_d));;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc2ca460_builtinCallerPanic(jule::Ptr<_1bc81259b_Eval>* _45228_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _45243_fc, jule::Ptr<_1bc8108a7_Data>* ) {
	if (((*((*(_45243_fc))))._field_Args.len() < 1LL)) {
		_1bc812aeb_pushErr((*(_45228_e)).ptr(), (*((*(_45243_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("message", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_45243_fc))))._field_Args.len() > 1LL)) {
		_1bc812aeb_pushErr((*(_45228_e)).ptr(), (*((*((*(_45243_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("panic", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1bc8108a7_Data> _4619_expr = _1bc83080b_evalExpr((*(_45228_e)), (*((*(_45243_fc))))._field_Args[0LL]);;
	if ((_4619_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1bc84381e_Prim((*(_4619_expr))._field_Kind.ptr()) == nullptr) || (!(_1bc84c22e_IsStr(_1bc84381e_Prim((*(_4619_expr))._field_Kind.ptr()).ptr()))))) {
		_1bc812aeb_pushErr((*(_45228_e)).ptr(), (*((*(_45243_fc))))._field_Token, jule::Str::lit("panic function only accepts strings", 35), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1bc8108a7_Data> _4709_d = _1bc83b63b_buildVoidData();;
	(*(_4709_d))._field_Model=jule::Any(jule::new_ptr<_1ece149d6_BuiltinPanicCallExprModel>(_1ece149d6_BuiltinPanicCallExprModel{._field_Token=(*((*(_45243_fc))))._field_Token, ._field_Expr=(*(_4619_expr))._field_Model}), &__jule_any_type29);
	return _4709_d;;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc2ca88e_builtinCallerMake(jule::Ptr<_1bc81259b_Eval>* _47827_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _47842_fc, jule::Ptr<_1bc8108a7_Data>* _47864_d) {
	if (((*((*(_47842_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_47842_fc))))._field_Args.len() == 1LL)) {
			_1bc812aeb_pushErr((*(_47827_e)).ptr(), (*((*(_47842_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("size", 4), &__jule_any_type4)}));
			return nullptr;;
		};
		_1bc812aeb_pushErr((*(_47827_e)).ptr(), (*((*(_47842_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type, size", 10), &__jule_any_type4)}));
		return nullptr;;
	} else if (((*((*(_47842_fc))))._field_Args.len() > 3LL)) {
		_1bc812aeb_pushErr((*(_47827_e)).ptr(), (*((*((*(_47842_fc))))._field_Args[3LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("make", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1bc8108a7_Data> _4919_t = _1bc82e9e7_evalExprKind((*(_47827_e)), (*((*((*(_47842_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_4919_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_4919_t))._field_Decl))) {
		_1bc812aeb_pushErr((*(_47827_e)).ptr(), (*((*((*(_47842_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_1bc844875_Slc((*(_4919_t))._field_Kind.ptr()) == nullptr)) {
		_1bc812aeb_pushErr((*(_47827_e)).ptr(), (*((*((*(_47842_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*(_4919_t))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("make", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	(*((*(_47864_d))))._field_Kind=(*(_4919_t))._field_Kind;
	jule::Ptr<_1bc8108a7_Data> _5069_lenExpr = _1bc83080b_evalExpr(_1bc78e01c_evalp((*((*(_47827_e))))._field_s, (*((*(_47827_e))))._field_lookup, (*(_4919_t))._field_Kind), (*((*(_47842_fc))))._field_Args[1LL]);;
	if ((_5069_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1bc81b7d6_checkIntegerIndexingByData((*(_47827_e)).ptr(), &(_5069_lenExpr), (*((*((*(_47842_fc))))._field_Args[1LL]))._field_Token);
	jule::Ptr<_1ece15443_BuiltinMakeCallExprModel> _5139_model = jule::new_ptr<_1ece15443_BuiltinMakeCallExprModel>(_1ece15443_BuiltinMakeCallExprModel{._field_Kind=(*(_4919_t))._field_Kind, ._field_Len=(*(_5069_lenExpr))._field_Model, });;
	(*((*(_47864_d))))._field_Model=jule::Any(_5139_model, &__jule_any_type114);
	if (((*((*(_47842_fc))))._field_Args.len() == 3LL)) {
		jule::Ptr<_1bc8108a7_Data> _51913_capExpr = _1bc83080b_evalExpr(_1bc78e01c_evalp((*((*(_47827_e))))._field_s, (*((*(_47827_e))))._field_lookup, (*(_4919_t))._field_Kind), (*((*(_47842_fc))))._field_Args[2LL]);;
		if ((_51913_capExpr == nullptr)) {
			return (*(_47864_d));;
		};
		_1bc81b7d6_checkIntegerIndexingByData((*(_47827_e)).ptr(), &(_51913_capExpr), (*((*((*(_47842_fc))))._field_Args[2LL]))._field_Token);
		(*(_5139_model))._field_Cap=(*(_51913_capExpr))._field_Model;
	};
	return (*(_47864_d));;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc2cacbd_builtinCallerAppend(jule::Ptr<_1bc81259b_Eval>* _52929_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _52944_fc, jule::Ptr<_1bc8108a7_Data>* _52966_d) {
	if (((*((*(_52944_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_52944_fc))))._field_Args.len() == 1LL)) {
			_1bc812aeb_pushErr((*(_52929_e)).ptr(), (*((*(_52944_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src", 3), &__jule_any_type4)}));
			return nullptr;;
		};
		_1bc812aeb_pushErr((*(_52929_e)).ptr(), (*((*(_52944_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1bc8108a7_Data> _5399_t = _1bc83080b_evalExpr((*(_52929_e)), (*((*(_52944_fc))))._field_Args[0LL]);;
	if ((_5399_t == nullptr)) {
		return nullptr;;
	};
	if ((_1bc844875_Slc((*(_5399_t))._field_Kind.ptr()) == nullptr)) {
		_1bc812aeb_pushErr((*(_52929_e)).ptr(), (*((*((*(_52944_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ece1de96_FnIns> _5499_f = jule::new_ptr<_1ece1de96_FnIns>(_1ece1de96_FnIns{._field_Params=jule::Slice<jule::Ptr<_1ece1ceea_ParamIns>>::make({jule::new_ptr<_1ece1ceea_ParamIns>(_1ece1ceea_ParamIns{._field_Decl=jule::new_ptr<_1ece195bd_Param>(_1ece195bd_Param{._field_Mutable=true, }), ._field_Kind=(*(_5399_t))._field_Kind}),jule::new_ptr<_1ece1ceea_ParamIns>(_1ece1ceea_ParamIns{._field_Decl=jule::new_ptr<_1ece195bd_Param>(_1ece195bd_Param{._field_Mutable=true, ._field_Variadic=true, }), ._field_Kind=(*(_1bc844875_Slc((*(_5399_t))._field_Kind.ptr())))._field_Elem})}), ._field_Result=(*(_5399_t))._field_Kind, ._field_caller=jule::Fn<jule::Ptr<_1bc8108a7_Data>(jule::Ptr<_1bc81259b_Eval>*,jule::Ptr<_1bc5a3507_FnCallExpr>*,jule::Ptr<_1bc8108a7_Data>*)>(_1bc2c8c66_builtinCallerCommonPlain), });;
	(*((*(_52966_d))))._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(_5499_f, 1)});
	(*(_52966_d))=_1bc2c8c66_builtinCallerCommonPlain(_52929_e, _52944_fc, _52966_d);
	if (((*(_52966_d)) != nullptr)) {
		jule::Ptr<_1ece10262_FnCallExprModel> _57313_model = (*((*(_52966_d))))._field_Model.cast_ptr<_1ece10262_FnCallExprModel>(&__jule_any_type34);;
		(*((*(_52966_d))))._field_Model=jule::Any(jule::new_ptr<_1ece1581c_BuiltinAppendCallExprModel>(_1ece1581c_BuiltinAppendCallExprModel{._field_Dest=(*(_57313_model))._field_Args[0LL], ._field_Elements=(*(_57313_model))._field_Args[1LL]}), &__jule_any_type26);
	};
	return (*(_52966_d));;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc2cb2a7_callerCopySlice(jule::Ptr<_1bc8108a7_Data>* _58225_dest, jule::Ptr<_1bc81259b_Eval>* _58243_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _58258_fc, jule::Ptr<_1bc8108a7_Data>* _58280_d) {
	if ((!((*((*(_58225_dest))))._field_Mutable))) {
		_1bc812aeb_pushErr((*(_58243_e)).ptr(), (*((*((*(_58258_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1bc8108a7_Data> _5879_src = _1bc83080b_evalExpr((*(_58243_e)), (*((*(_58258_fc))))._field_Args[1LL]);;
	if ((_5879_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1bc84d296_Slc> _5919_slc = _1bc844875_Slc((*(_5879_src))._field_Kind.ptr());;
	if ((_5919_slc != nullptr)) {
		if (((!((*(_5879_src))._field_Mutable)) && _1bc842a4e_Mutable((*(_5919_slc))._field_Elem.ptr()))) {
			_1bc812aeb_pushErr((*(_58243_e)).ptr(), (*((*((*(_58258_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		};
		if ((!(_1bc8418c7_Equal((*((*(_58225_dest))))._field_Kind, (*(_5879_src))._field_Kind)))) {
			_1bc812aeb_pushErr((*(_58243_e)).ptr(), (*((*((*(_58258_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*((*(_58225_dest))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1bc841586_Str((*(_5879_src))._field_Kind.ptr()), &__jule_any_type4)}));
		};
	} else {
		jule::Ptr<_1bc848c97_Prim> _6019_destPrim = _1bc84381e_Prim((*(_1bc844875_Slc((*((*(_58225_dest))))._field_Kind.ptr())))._field_Elem.ptr());;
		jule::Ptr<_1bc848c97_Prim> _6029_prim = _1bc84381e_Prim((*(_5879_src))._field_Kind.ptr());;
		if (((((_6019_destPrim == nullptr) || (_6029_prim == nullptr)) || (!(_1bc84c22e_IsStr(_6029_prim.ptr())))) || (!(_1bc84a68e_IsU8(_6019_destPrim.ptr()))))) {
			_1bc812aeb_pushErr((*(_58243_e)).ptr(), (*((*((*(_58258_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*((*(_58225_dest))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1bc841586_Str((*(_5879_src))._field_Kind.ptr()), &__jule_any_type4)}));
		};
	};
	(*((*(_58280_d))))._field_Kind=_1bc8092a7_lenKind();
	(*((*(_58280_d))))._field_Model=jule::Any(jule::new_ptr<_1ece166b9_BuiltinCopyCallExprModel>(_1ece166b9_BuiltinCopyCallExprModel{._field_Dest=(*(_58225_dest)), ._field_Src=_5879_src}), &__jule_any_type31);
	return (*(_58280_d));;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc2cb6d6_builtinCallerCopy(jule::Ptr<_1bc81259b_Eval>* _61627_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _61642_fc, jule::Ptr<_1bc8108a7_Data>* _61664_d) {
	if (((*((*(_61642_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_61642_fc))))._field_Args.len() == 1LL)) {
			_1bc812aeb_pushErr((*(_61627_e)).ptr(), (*((*(_61642_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src", 3), &__jule_any_type4)}));
			return nullptr;;
		};
		_1bc812aeb_pushErr((*(_61627_e)).ptr(), (*((*(_61642_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_61642_fc))))._field_Args.len() > 2LL)) {
		_1bc812aeb_pushErr((*(_61627_e)).ptr(), (*((*((*(_61642_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("copy", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1bc8108a7_Data> _6299_dest = _1bc83080b_evalExpr((*(_61627_e)), (*((*(_61642_fc))))._field_Args[0LL]);;
	{
		
		if ((_6299_dest == nullptr)) {
			_case_begin_1c247711d:;
			{
				return nullptr;;
			}
		}
		else if ((_1bc844875_Slc((*(_6299_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2477cde:;
			{
				return _1bc2cb2a7_callerCopySlice(&(_6299_dest), _61627_e, _61642_fc, _61664_d);;
			}
		}
		else {
			_case_begin_1c2476c77:;
			{
				_1bc812aeb_pushErr((*(_61627_e)).ptr(), (*((*((*(_61642_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c24752e7:;
	};
}



inline jule::Ptr<_1bc8108a7_Data> _1bc2cba5a_callerLenSlice(jule::Ptr<_1bc8108a7_Data>* _64124_expr, jule::Ptr<_1bc8108a7_Data>* _64142_d) {
	(*((*(_64142_d))))._field_Kind=_1bc8092a7_lenKind();
	(*((*(_64142_d))))._field_Model=jule::Any(jule::new_ptr<_1ece15b19_BuiltinLenCallExprModel>(_1ece15b19_BuiltinLenCallExprModel{._field_Expr=(*(_64124_expr))}), &__jule_any_type115);
	return (*(_64142_d));;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc2cbdce_callerLenMap(jule::Ptr<_1bc8108a7_Data>* _64922_expr, jule::Ptr<_1bc8108a7_Data>* _64940_d) {
	(*((*(_64940_d))))._field_Kind=_1bc8092a7_lenKind();
	(*((*(_64940_d))))._field_Model=jule::Any(jule::new_ptr<_1ece15b19_BuiltinLenCallExprModel>(_1ece15b19_BuiltinLenCallExprModel{._field_Expr=(*(_64922_expr))}), &__jule_any_type115);
	return (*(_64940_d));;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc2cc253_callerLenArr(jule::Ptr<_1bc8108a7_Data>* _65722_expr, jule::Ptr<_1bc8108a7_Data>* _65740_d) {
	(*((*(_65740_d))))._field_Kind=_1bc8092a7_lenKind();
	(*((*(_65740_d))))._field_Constant=static__230d587c6_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_1bc8445de_Arr((*((*(_65722_expr))))._field_Kind.ptr())))._field_N)));
	(*((*(_65740_d))))._field_Model=jule::Any((*((*(_65740_d))))._field_Constant, &__jule_any_type19);
	return (*(_65740_d));;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc2cc5c7_callerLenStr(jule::Ptr<_1bc8108a7_Data>* _66422_expr, jule::Ptr<_1bc8108a7_Data>* _66440_d) {
	(*((*(_66440_d))))._field_Kind=_1bc8092a7_lenKind();
	if (_1bc81127b_IsConst((*(_66422_expr)).ptr())) {
		(*((*(_66440_d))))._field_Constant=static__230d587c6_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_230d5a50e_ReadStr((*((*(_66422_expr))))._field_Constant.ptr()).len())));
		(*((*(_66440_d))))._field_Model=jule::Any((*((*(_66440_d))))._field_Constant, &__jule_any_type19);
	} else {
		(*((*(_66440_d))))._field_Model=jule::Any(jule::new_ptr<_1ece15b19_BuiltinLenCallExprModel>(_1ece15b19_BuiltinLenCallExprModel{._field_Expr=(*(_66422_expr))}), &__jule_any_type115);
	};
	return (*(_66440_d));;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc2cc94b_callerLenComptime(jule::Ptr<_1bc8108a7_Data>* _67727_d, jule::I64 _67737_n) {
	(*((*(_67727_d))))._field_Kind=_1bc8092a7_lenKind();
	(*((*(_67727_d))))._field_Constant=static__230d587c6_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_67737_n)));
	(*((*(_67727_d))))._field_Model=jule::Any((*((*(_67727_d))))._field_Constant, &__jule_any_type19);
	return (*(_67727_d));;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc2ccd7a_builtinCallerLen(jule::Ptr<_1bc81259b_Eval>* _68426_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _68441_fc, jule::Ptr<_1bc8108a7_Data>* _68463_d) {
	if (((*((*(_68441_fc))))._field_Args.len() < 1LL)) {
		_1bc812aeb_pushErr((*(_68426_e)).ptr(), (*((*(_68441_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_68441_fc))))._field_Args.len() > 1LL)) {
		_1bc812aeb_pushErr((*(_68426_e)).ptr(), (*((*((*(_68441_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("len", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1bc8108a7_Data> _6929_dest = _1bc8304ba_evalExpr1((*(_68426_e)), (*((*(_68441_fc))))._field_Args[0LL]);;
	{
		
		if ((_6929_dest == nullptr)) {
			_case_begin_1c2484218:;
			{
				return nullptr;;
			}
		}
		else if ((_1bc844875_Slc((*(_6929_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2484dd9:;
			{
				return _1bc2cba5a_callerLenSlice(&(_6929_dest), _68463_d);;
			}
		}
		else if ((_1bc8445de_Arr((*(_6929_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2484e50:;
			{
				return _1bc2cc253_callerLenArr(&(_6929_dest), _68463_d);;
			}
		}
		else if ((_1bc8453ae_Map((*(_6929_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2484eb6:;
			{
				return _1bc2cbdce_callerLenMap(&(_6929_dest), _68463_d);;
			}
		}
		else if (((_1bc84381e_Prim((*(_6929_dest))._field_Kind.ptr()) != nullptr) && _1bc84c22e_IsStr(_1bc84381e_Prim((*(_6929_dest))._field_Kind.ptr()).ptr()))) {
			_case_begin_1c2483dd8:;
			{
				return _1bc2cc5c7_callerLenStr(&(_6929_dest), _68463_d);;
			}
		}
		else if ((_1bc845b62_comptimeStructFields((*(_6929_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2483e4e:;
			{
				return _1bc2cc94b_callerLenComptime(_68463_d, static_cast<jule::I64>((*(_1bc845b62_comptimeStructFields((*(_6929_dest))._field_Kind.ptr())))._field_fields.len()));;
			}
		}
		else if ((_1bc84617e_comptimeEnumFields((*(_6929_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2483eb5:;
			{
				return _1bc2cc94b_callerLenComptime(_68463_d, static_cast<jule::I64>((*(_1bc84617e_comptimeEnumFields((*(_6929_dest))._field_Kind.ptr())))._field_fields.len()));;
			}
		}
		else if ((_1bc846e4e_comptimeTypeInfos((*(_6929_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c248402b:;
			{
				return _1bc2cc94b_callerLenComptime(_68463_d, static_cast<jule::I64>((*(_1bc846e4e_comptimeTypeInfos((*(_6929_dest))._field_Kind.ptr())))._field_types.len()));;
			}
		}
		else if ((_1bc84669b_comptimeParams((*(_6929_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2485082:;
			{
				return _1bc2cc94b_callerLenComptime(_68463_d, static_cast<jule::I64>((*(_1bc84669b_comptimeParams((*(_6929_dest))._field_Kind.ptr())))._field_params.len()));;
			}
		}
		else if ((_1bc84746b_comptimeStatics((*(_6929_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c24850e8:;
			{
				return _1bc2cc94b_callerLenComptime(_68463_d, static_cast<jule::I64>((*(_1bc84746b_comptimeStatics((*(_6929_dest))._field_Kind.ptr())))._field_fields.len()));;
			}
		}
		else if ((_1bc847ea5_comptimeFiles((*(_6929_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c248515e:;
			{
				return _1bc2cc94b_callerLenComptime(_68463_d, static_cast<jule::I64>((*(_1bc847ea5_comptimeFiles((*(_6929_dest))._field_Kind.ptr())))._field_files.len()));;
			}
		}
		else {
			_case_begin_1c2483d72:;
			{
				_1bc812aeb_pushErr((*(_68426_e)).ptr(), (*((*((*(_68441_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c24823e2:;
	};
}



inline jule::Ptr<_1bc8108a7_Data> _1bc2cd1ee_callerCapSlice(jule::Ptr<_1bc8108a7_Data>* _72224_expr, jule::Ptr<_1bc8108a7_Data>* _72242_d) {
	(*((*(_72242_d))))._field_Kind=_1bc8092a7_lenKind();
	(*((*(_72242_d))))._field_Model=jule::Any(jule::new_ptr<_1ece15e16_BuiltinCapCallExprModel>(_1ece15e16_BuiltinCapCallExprModel{._field_Expr=(*(_72224_expr))}), &__jule_any_type116);
	return (*(_72242_d));;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc2cd62d_builtinCallerCap(jule::Ptr<_1bc81259b_Eval>* _73026_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _73041_fc, jule::Ptr<_1bc8108a7_Data>* _73063_d) {
	if (((*((*(_73041_fc))))._field_Args.len() < 1LL)) {
		_1bc812aeb_pushErr((*(_73026_e)).ptr(), (*((*(_73041_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_73041_fc))))._field_Args.len() > 1LL)) {
		_1bc812aeb_pushErr((*(_73026_e)).ptr(), (*((*((*(_73041_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("cap", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1bc8108a7_Data> _7389_dest = _1bc83080b_evalExpr((*(_73026_e)), (*((*(_73041_fc))))._field_Args[0LL]);;
	{
		
		if ((_7389_dest == nullptr)) {
			_case_begin_1c2493eb4:;
			{
				return nullptr;;
			}
		}
		else if ((*(_7389_dest))._field_Decl) {
			_case_begin_1c2494b85:;
			{
				_1bc812aeb_pushErr((*(_73026_e)).ptr(), (*((*((*(_73041_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1bc844875_Slc((*(_7389_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2494beb:;
			{
				return _1bc2cd1ee_callerCapSlice(&(_7389_dest), _73063_d);;
			}
		}
		else {
			_case_begin_1c2493b1d:;
			{
				_1bc812aeb_pushErr((*(_73026_e)).ptr(), (*((*((*(_73041_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c249218d:;
	};
}



inline jule::Ptr<_1bc8108a7_Data> _1bc2cdb17_callerDeleteMap(jule::Ptr<_1bc81259b_Eval>* _75325_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _75340_fc, jule::Ptr<_1bc8108a7_Data>* _75362_expr, jule::Ptr<_1bc8108a7_Data>* _75380_d) {
	if ((!((*((*(_75362_expr))))._field_Mutable))) {
		_1bc812aeb_pushErr((*(_75325_e)).ptr(), (*((*((*(_75340_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	(*(_75380_d))=_1bc83b63b_buildVoidData();
	jule::Ptr<_1ece162e0_BuiltinDeleteCallExprModel> _7589_model = jule::new_ptr<_1ece162e0_BuiltinDeleteCallExprModel>(_1ece162e0_BuiltinDeleteCallExprModel{._field_Dest=(*(_75362_expr)), });;
	if (((*((*(_75340_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1bc8108a7_Data> _76213_key = _1bc83080b_evalExpr((*(_75325_e)), (*((*(_75340_fc))))._field_Args[1LL]);;
		{
			
			if ((_76213_key == nullptr)) {
				_case_begin_1c249aa48:;
				{
					return nullptr;;
				}
			}
			else if ((*(_76213_key))._field_Decl) {
				_case_begin_1c249963a:;
				{
					_1bc812aeb_pushErr((*(_75325_e)).ptr(), (*((*((*(_75340_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1c24995c4:;
				{
					;
					jule::Ptr<_1bc8411bd_TypeKind> _77117_keyType = (*(_1bc8453ae_Map((*((*(_75362_expr))))._field_Kind.ptr())))._field_Key;;
					if ((!(_1bc78e8be_checkAssignType((*((*(_75325_e))))._field_s, false, &(_77117_keyType), &(_76213_key), (*((*((*(_75340_fc))))._field_Args[1LL]))._field_Token)))) {
						return nullptr;;
					};
				}
			}
			_match_end_1c249955d:;
		};
		(*(_7589_model))._field_Key=_76213_key;
	};
	(*((*(_75380_d))))._field_Model=jule::Any(_7589_model, &__jule_any_type32);
	return (*(_75380_d));;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc2ce046_builtinCallerDelete(jule::Ptr<_1bc81259b_Eval>* _78229_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _78244_fc, jule::Ptr<_1bc8108a7_Data>* _78266_d) {
	if (((*((*(_78244_fc))))._field_Args.len() < 1LL)) {
		_1bc812aeb_pushErr((*(_78229_e)).ptr(), (*((*(_78244_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("map", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_78244_fc))))._field_Args.len() > 2LL)) {
		_1bc812aeb_pushErr((*(_78229_e)).ptr(), (*((*((*(_78244_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("delete", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1bc8108a7_Data> _7909_dest = _1bc83080b_evalExpr((*(_78229_e)), (*((*(_78244_fc))))._field_Args[0LL]);;
	{
		
		if ((_7909_dest == nullptr)) {
			_case_begin_1c24a193e:;
			{
				return nullptr;;
			}
		}
		else if ((*(_7909_dest))._field_Decl) {
			_case_begin_1c24a2610:;
			{
				_1bc812aeb_pushErr((*(_78229_e)).ptr(), (*((*((*(_78244_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1bc8453ae_Map((*(_7909_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c24a2676:;
			{
				return _1bc2cdb17_callerDeleteMap(_78229_e, _78244_fc, &(_7909_dest), _78266_d);;
			}
		}
		else {
			_case_begin_1c24a1598:;
			{
				_1bc812aeb_pushErr((*(_78229_e)).ptr(), (*((*((*(_78244_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c249eb18:;
	};
}



inline jule::Ptr<_1bc8108a7_Data> _1bc2ce475_builtinCallerAssert(jule::Ptr<_1bc81259b_Eval>* _80529_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _80544_fc, jule::Ptr<_1bc8108a7_Data>* ) {
	if (((*((*(_80544_fc))))._field_Args.len() < 1LL)) {
		_1bc812aeb_pushErr((*(_80529_e)).ptr(), (*((*(_80544_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_80544_fc))))._field_Args.len() > 2LL)) {
		_1bc812aeb_pushErr((*(_80529_e)).ptr(), (*((*((*(_80544_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("assert", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1bc8108a7_Data> _8149_expr = _1bc83080b_evalExpr((*(_80529_e)), (*((*(_80544_fc))))._field_Args[0LL]);;
	if ((_8149_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1bc84381e_Prim((*(_8149_expr))._field_Kind.ptr()) == nullptr) || (!(_1bc84be98_IsBool(_1bc84381e_Prim((*(_8149_expr))._field_Kind.ptr()).ptr()))))) {
		_1bc812aeb_pushErr((*(_80529_e)).ptr(), (*((*(_80544_fc))))._field_Token, jule::Str::lit("assertion requires boolean expression", 37), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ece14e8c_BuiltinAssertCallExprModel> _8239_model = jule::new_ptr<_1ece14e8c_BuiltinAssertCallExprModel>(_1ece14e8c_BuiltinAssertCallExprModel{._field_Token=(*((*(_80544_fc))))._field_Token, ._field_Expr=(*(_8149_expr))._field_Model, ._field_Log=jule::Str::lit("assertion failed", 16)});;
	if (((*((*(_80544_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1bc8108a7_Data> _83113_log = _1bc83080b_evalExpr((*(_80529_e)), (*((*(_80544_fc))))._field_Args[1LL]);;
		if ((_83113_log == nullptr)) {
			return nullptr;;
		};
		if ((((!(_1bc81127b_IsConst(_83113_log.ptr()))) || (_1bc84381e_Prim((*(_83113_log))._field_Kind.ptr()) == nullptr)) || (!(_1bc84c22e_IsStr(_1bc84381e_Prim((*(_83113_log))._field_Kind.ptr()).ptr()))))) {
			_1bc812aeb_pushErr((*(_80529_e)).ptr(), (*((*((*(_80544_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("const str", 9), &__jule_any_type4),jule::Any(_1bc841586_Str((*(_83113_log))._field_Kind.ptr()), &__jule_any_type4)}));
			return nullptr;;
		};
		(*(_8239_model))._field_Log=_230d5a50e_ReadStr((*(_83113_log))._field_Constant.ptr());
	};
	jule::Ptr<_1bc8108a7_Data> _8449_d = _1bc83b63b_buildVoidData();;
	(*(_8449_d))._field_Model=jule::Any(_8239_model, &__jule_any_type30);
	return _8449_d;;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc2cea4c_builtinCallerStdComptimeTypeOf(jule::Ptr<_1bc81259b_Eval>* _84940_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _84955_fc, jule::Ptr<_1bc8108a7_Data>* ) {
	if (((*((*(_84955_fc))))._field_Args.len() < 1LL)) {
		_1bc812aeb_pushErr((*(_84940_e)).ptr(), (*((*(_84955_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_84955_fc))))._field_Args.len() > 1LL)) {
		_1bc812aeb_pushErr((*(_84940_e)).ptr(), (*((*((*(_84955_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeOf", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1bc8108a7_Data> _8589_d = _1bc82e9e7_evalExprKind((*(_84940_e)), (*((*((*(_84955_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_8589_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ece1de96_FnIns> _8625_f = _1bc844b0b_Fn((*(_8589_d))._field_Kind.ptr());;
	if ((_8625_f != nullptr)) {
		if (_1ece2042b_IsBuiltin(_8625_f.ptr())) {
			_1bc812aeb_pushErr((*(_84940_e)).ptr(), (*((*((*(_84955_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("<built-in fn>", 13), &__jule_any_type4)}));
			return nullptr;;
		};
		if (((*(_8625_f))._field_Generics.len() != (*((*(_8625_f))._field_Decl))._field_Generics.len())) {
			_1bc812aeb_pushErr((*(_84940_e)).ptr(), (*((*((*(_84955_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1bc5be0b1_StructIns> _8735_s = _1bc844d92_Struct((*(_8589_d))._field_Kind.ptr());;
	if (((_8735_s != nullptr) && ((*(_8735_s))._field_Generics.len() != (*((*(_8735_s))._field_Decl))._field_Generics.len()))) {
		_1bc812aeb_pushErr((*(_84940_e)).ptr(), (*((*((*(_84955_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_1bc8458cb_comptime((*(_8589_d))._field_Kind.ptr())) {
		_1bc812aeb_pushErr((*(_84940_e)).ptr(), (*((*((*(_84955_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*(_8589_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1bc737d95_buildComptimeTypeInfoData(&((*((*(_84940_e))))._field_s), &((*(_8589_d))._field_Kind));;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc2cee15_builtinCallerStdComptimeValueOf(jule::Ptr<_1bc81259b_Eval>* _88541_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _88556_fc, jule::Ptr<_1bc8108a7_Data>* ) {
	if (((*((*(_88556_fc))))._field_Args.len() < 1LL)) {
		_1bc812aeb_pushErr((*(_88541_e)).ptr(), (*((*(_88556_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_88556_fc))))._field_Args.len() > 1LL)) {
		_1bc812aeb_pushErr((*(_88541_e)).ptr(), (*((*((*(_88556_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4)}));
	};
	jule::Ptr<_1bc8108a7_Data> _8939_d = _1bc83080b_evalExpr((*(_88541_e)), (*((*(_88556_fc))))._field_Args[0LL]);;
	if ((_8939_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1bc809609_isGoodValueToInfer(&(_8939_d))))) {
		_1bc812aeb_pushErr((*(_88541_e)).ptr(), (*((*((*(_88556_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*(_8939_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1bc7380c6_buildComptimeValue(&(_8939_d));;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc2d0344_builtinCallerStdComptimeLine(jule::Ptr<_1bc81259b_Eval>* _90538_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _90553_fc, jule::Ptr<_1bc8108a7_Data>* ) {
	if (((*((*(_90553_fc))))._field_Args.len() > 0LL)) {
		_1bc812aeb_pushErr((*(_90538_e)).ptr(), (*((*((*(_90553_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Line", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_230d58386_Const> _9099_constant = static__230d587c6_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*((*((*(_90553_fc))))._field_Token))._field_Row)));;
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c50d6_primInt, ._field_Model=jule::Any(_9099_constant, &__jule_any_type19), ._field_Constant=_9099_constant});;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc2d0773_builtinCallerStdComptimeFile(jule::Ptr<_1bc81259b_Eval>* _91738_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _91753_fc, jule::Ptr<_1bc8108a7_Data>* ) {
	if (((*((*(_91753_fc))))._field_Args.len() > 0LL)) {
		_1bc812aeb_pushErr((*(_91738_e)).ptr(), (*((*((*(_91753_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("File", 4), &__jule_any_type4)}));
	};
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(jule::new_ptr<_1bc735953_comptimeFile>(_1bc735953_comptimeFile{._field_file=(*((*((*(_91738_e))))._field_s))._field_file}), 18)}), });;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc2d0ba2_builtinCallerStdComptimeFiles(jule::Ptr<_1bc81259b_Eval>* _93039_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _93054_fc, jule::Ptr<_1bc8108a7_Data>* ) {
	if (((*((*(_93054_fc))))._field_Args.len() > 0LL)) {
		_1bc812aeb_pushErr((*(_93039_e)).ptr(), (*((*((*(_93054_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Files", 5), &__jule_any_type4)}));
	};
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=jule::new_ptr<_1bc8411bd_TypeKind>(_1bc8411bd_TypeKind{._field_Kind=jule::Trait<_1bc840c17_Kind>(jule::new_ptr<_1bc734358_comptimeFiles>(_1bc734358_comptimeFiles{._field_files=(*((*((*(_93039_e))))._field_s))._field_files}), 17)}), });;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc2d10d1_builtinCallerStdComptimeTypeAlias(jule::Ptr<_1bc81259b_Eval>* _94343_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _94358_fc, jule::Ptr<_1bc8108a7_Data>* ) {
	if (((*((*(_94358_fc))))._field_Args.len() > 2LL)) {
		_1bc812aeb_pushErr((*(_94343_e)).ptr(), (*((*((*(_94358_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_94358_fc))))._field_Args.len() == 0LL)) {
		_1bc812aeb_pushErr((*(_94343_e)).ptr(), (*((*(_94358_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ident, type", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_94358_fc))))._field_Args.len() == 1LL)) {
		_1bc812aeb_pushErr((*(_94343_e)).ptr(), (*((*(_94358_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_94358_fc))))._field_Args[0LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1c24c925d:;
			{
				goto _match_end_1c24ca44b;
			}
		}
		else {
			_case_begin_1c24ca4b2:;
			{
				_1bc812aeb_pushErr((*(_94343_e)).ptr(), (*((*((*(_94358_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1bc812e5e_pushSuggestion((*(_94343_e)).ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c24ca44b:;
	};
	jule::Ptr<_1bc583a9d_Token> _9649_ident = (*((*((*((*(_94358_fc))))._field_Args[0LL]))._field_Kind.cast_ptr<_1bc59b39b_IdentExpr>(&__jule_any_type79)))._field_Token;;
	{
		auto &_match_expr{ (*((*(_94343_e))))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1c12d26c7:;
			{
				goto _match_end_1c24cc99d;
			}
		}
		else {
			_case_begin_1c24cca03:;
			{
				_1bc812aeb_pushErr((*(_94343_e)).ptr(), (*((*(_94358_fc))))._field_Token, jule::Str::lit("you can call @ function in the scopes only", 42), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c24cc99d:;
	};
	jule::Ptr<_1bc749923_scopeChecker> _9739_sc = (*((*(_94343_e))))._field_lookup.cast_ptr<_1bc749923_scopeChecker>(0);;
	jule::Ptr<_1bc8403cb_TypeAlias> _9749_alias = jule::new_ptr<_1bc8403cb_TypeAlias>(_1bc8403cb_TypeAlias{._field_Scope=(*(_9739_sc))._field_tree, ._field_Public=_1bc781372_IsPub((*(_9649_ident))._field_Kind), ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=_9649_ident, ._field_Ident=(*(_9649_ident))._field_Kind, ._field_Kind=jule::new_ptr<_1bc848390_TypeSymbol>(), });;
	jule::Ptr<_1bc8108a7_Data> _9849_t = _1bc82ed38_eval1((*(_94343_e)), (*((*(_94358_fc))))._field_Args[1LL]);;
	if ((_9849_t == nullptr)) {
		return nullptr;;
	};
	if ((*(_9849_t))._field_Decl) {
		(*((*(_9749_alias))._field_Kind))._field_Kind=(*(_9849_t))._field_Kind;
	} else {
		jule::Ptr<_1bc72a4e7_comptimeTypeInfo> _99113_cti = _1bc8471d5_comptimeTypeInfo((*(_9849_t))._field_Kind.ptr());;
		if ((_99113_cti == nullptr)) {
			_1bc812aeb_pushErr((*(_94343_e)).ptr(), (*((*((*(_94358_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			_1bc812e5e_pushSuggestion((*(_94343_e)).ptr(), jule::Str::lit("expected type declaration", 25), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*((*(_9749_alias))._field_Kind))._field_Kind=(*(_99113_cti))._field_base;
	};
	_1bc74e1ca_checkTypeAlias(_9739_sc, &(_9749_alias));
	return _1bc83b63b_buildVoidData();;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc2d1510_builtinCallerStdMemSizeOf(jule::Ptr<_1bc81259b_Eval>* _100335_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _100350_fc, jule::Ptr<_1bc8108a7_Data>* ) {
	jule::Ptr<_1bc8108a7_Data> _10049_result = jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c4c0c_primUint, });;
	if (((*((*(_100350_fc))))._field_Args.len() < 1LL)) {
		_1bc812aeb_pushErr((*(_100335_e)).ptr(), (*((*(_100350_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return _10049_result;;
	};
	if (((*((*(_100350_fc))))._field_Args.len() > 1LL)) {
		_1bc812aeb_pushErr((*(_100335_e)).ptr(), (*((*((*(_100350_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1bc8108a7_Data> _10169_d = _1bc82e9e7_evalExprKind((*(_100335_e)), (*((*((*(_100350_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10169_d == nullptr)) {
		return _10049_result;;
	};
	if ((!(_1bc85d95a_validTypeForXof(&((*(_10169_d))._field_Kind))))) {
		_1bc812aeb_pushErr((*(_100335_e)).ptr(), (*((*((*(_100350_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*(_10169_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4)}));
	};
	(*(_10049_result))._field_Model=jule::Any(jule::new_ptr<_1ece1264e_SizeofExprModel>(_1ece1264e_SizeofExprModel{._field_Expr=(*(_10169_d))._field_Model}), &__jule_any_type117);
	return _10049_result;;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc2d193e_builtinCallerStdMemAlignOf(jule::Ptr<_1bc81259b_Eval>* _102836_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _102851_fc, jule::Ptr<_1bc8108a7_Data>* ) {
	jule::Ptr<_1bc8108a7_Data> _10299_result = jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c4c0c_primUint, });;
	if (((*((*(_102851_fc))))._field_Args.len() < 1LL)) {
		_1bc812aeb_pushErr((*(_102836_e)).ptr(), (*((*(_102851_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return _10299_result;;
	};
	if (((*((*(_102851_fc))))._field_Args.len() > 1LL)) {
		_1bc812aeb_pushErr((*(_102836_e)).ptr(), (*((*((*(_102851_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4)}));
	};
	jule::Ptr<_1bc8108a7_Data> _10419_d = _1bc82e9e7_evalExprKind((*(_102836_e)), (*((*((*(_102851_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10419_d == nullptr)) {
		return _10299_result;;
	};
	if ((!(_1bc85d95a_validTypeForXof(&((*(_10419_d))._field_Kind))))) {
		_1bc812aeb_pushErr((*(_102836_e)).ptr(), (*((*((*(_102851_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1bc841586_Str((*(_10419_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4)}));
	};
	(*(_10299_result))._field_Model=jule::Any(jule::new_ptr<_1ece172be_AlignofExprModel>(_1ece172be_AlignofExprModel{._field_Expr=(*(_10419_d))._field_Model}), &__jule_any_type118);
	return _10299_result;;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc2d1d6d_builtinCallerStdMemFree(jule::Ptr<_1bc81259b_Eval>* _105333_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _105348_fc, jule::Ptr<_1bc8108a7_Data>* ) {
	if (((*((*(_105348_fc))))._field_Args.len() < 1LL)) {
		_1bc812aeb_pushErr((*(_105333_e)).ptr(), (*((*(_105348_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("h", 1), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_105348_fc))))._field_Args.len() > 1LL)) {
		_1bc812aeb_pushErr((*(_105333_e)).ptr(), (*((*((*(_105348_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Free", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1bc8108a7_Data> _10629_d = _1bc83080b_evalExpr((*(_105333_e)), (*((*(_105348_fc))))._field_Args[0LL]);;
	if ((_10629_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1bc843302_PerformsRC((*(_10629_d))._field_Kind.ptr())))) {
		_1bc812aeb_pushErr((*(_105333_e)).ptr(), (*((*((*(_105348_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1bc8108a7_Data> _10719_result = _1bc83b63b_buildVoidData();;
	(*(_10719_result))._field_Model=jule::Any(jule::new_ptr<_1ece1808e_FreeExprModel>(_1ece1808e_FreeExprModel{._field_Expr=(*(_10629_d))._field_Model}), &__jule_any_type33);
	return _10719_result;;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc2d229c_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1bc81259b_Eval>* _107645_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _107660_fc, jule::Ptr<_1bc8108a7_Data>* ) {
	if (((*((*(_107660_fc))))._field_Args.len() < 1LL)) {
		_1bc812aeb_pushErr((*(_107645_e)).ptr(), (*((*(_107660_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_107660_fc))))._field_Args.len() > 1LL)) {
		_1bc812aeb_pushErr((*(_107645_e)).ptr(), (*((*((*(_107660_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ToStr", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1bc8108a7_Data> _10859_d = _1bc83080b_evalExpr((*(_107645_e)), (*((*(_107660_fc))))._field_Args[0LL]);;
	if ((_10859_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1bc85c97b_isBuiltinStrConvertable(&((*(_10859_d))._field_Kind))))) {
		_1bc812aeb_pushErr((*(_107645_e)).ptr(), (*((*((*(_107660_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1bc8108a7_Data>(_1bc8108a7_Data{._field_Kind=_1bc2c43b0_primStr, ._field_Model=jule::Any(jule::new_ptr<_1ece178b8_IntegratedToStrExprModel>(_1ece178b8_IntegratedToStrExprModel{._field_Expr=(*(_10859_d))._field_Model}), &__jule_any_type119), });;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc2d26cb_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1bc81259b_Eval>* _110344_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _110359_fc, jule::Ptr<_1bc8108a7_Data>* _110381_d) {
	if ((!(_1bc8135e1_isUnsafe((*(_110344_e)).ptr())))) {
		_1bc812aeb_pushErr((*(_110344_e)).ptr(), (*((*(_110359_fc))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	if (((*((*(_110359_fc))))._field_Args.len() < 1LL)) {
		_1bc812aeb_pushErr((*(_110344_e)).ptr(), (*((*(_110359_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("code", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1bc8108a7_Data> _11139_argd = _1bc83080b_evalExpr((*(_110344_e)), (*((*(_110359_fc))))._field_Args[0LL]);;
	if ((_11139_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1bc84381e_Prim((*(_11139_argd))._field_Kind.ptr()) == nullptr) || (!(_1bc84c22e_IsStr(_1bc84381e_Prim((*(_11139_argd))._field_Kind.ptr()).ptr()))))) {
		_1bc812aeb_pushErr((*(_110344_e)).ptr(), (*((*((*(_110359_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1bc841586_Str((*(_11139_argd))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((!(_1bc81127b_IsConst(_11139_argd.ptr()))) || (!(_230d5cb0a_IsStr((*(_11139_argd))._field_Constant.ptr()))))) {
		_1bc812aeb_pushErr((*(_110344_e)).ptr(), (*((*((*(_110359_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1bc8108a7_Data> _11289_r = _1bc83b63b_buildVoidData();;
	jule::Ptr<_1ece1de96_FnIns> _11309_f = _1bc844b0b_Fn((*((*(_110381_d))))._field_Kind.ptr());;
	if (((*(_11309_f))._field_Generics.len() > 0LL)) {
		(*(_11289_r))._field_Kind=(*((*(_11309_f))._field_Generics[0LL]))._field_Kind;
	};
	jule::Ptr<_1ece17c92_BackendEmitExprModel> _11359_model = jule::new_ptr<_1ece17c92_BackendEmitExprModel>(_1ece17c92_BackendEmitExprModel{._field_Code=_230d5a50e_ReadStr((*(_11139_argd))._field_Constant.ptr()), });;
	if (((*((*(_110359_fc))))._field_Args.len() > 1LL)) {
		(*(_11359_model))._field_Exprs=jule::Slice<jule::Any>::alloc(0LL, ((*((*(_110359_fc))))._field_Args.len() - 1LL), jule::Any(nullptr));
		{
			auto expr = (*((*(_110359_fc))))._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1c224a3ca:;
			if (it != expr_end) {
				jule::Ptr<_1bc599971_Expr> _114121_arg = *it;
				{
					_11139_argd=_1bc82ed38_eval1((*(_110344_e)), _114121_arg);
					if ((_11139_argd == nullptr)) {
						return nullptr;;
					};
					{ jule::Slice<jule::Any> &__jule_push_dest = (*(_11359_model))._field_Exprs; __jule_push_dest.push((*(_11139_argd))._field_Model); };
				}
				_iter_next_1c224a3ca:;
				++it;
				goto _iter_begin_1c224a3ca;
			}
			_iter_end_1c224a3ca:;
		};
	};
	(*(_11289_r))._field_Model=jule::Any(_11359_model, &__jule_any_type25);
	return _11289_r;;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc2d2b0a_builtinCallerStdDebugOut(jule::Ptr<_1bc81259b_Eval>* _115434_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _115449_fc, jule::Ptr<_1bc8108a7_Data>* _115471_d) {
	(*(_115471_d))=_1bc2c9519_builtinCallerOut(_115434_e, _115449_fc, _115471_d);
	if (((*(_115471_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_115471_d))))._field_Model.cast_ptr<_1ece13d59_BuiltinOutCallExprModel>(&__jule_any_type27)))._field_Debug=true;
	return (*(_115471_d));;
}



inline jule::Ptr<_1bc8108a7_Data> _1bc2d3039_builtinCallerStdDebugOutln(jule::Ptr<_1bc81259b_Eval>* _116336_e, jule::Ptr<_1bc5a3507_FnCallExpr>* _116351_fc, jule::Ptr<_1bc8108a7_Data>* _116373_d) {
	(*(_116373_d))=_1bc2c9948_builtinCallerOutln(_116336_e, _116351_fc, _116373_d);
	if (((*(_116373_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_116373_d))))._field_Model.cast_ptr<_1ece14233_BuiltinOutlnCallExprModel>(&__jule_any_type28)))._field_Debug=true;
	return (*(_116373_d));;
}



inline jule::Ptr<_1bd3a9e01_FileInfo> _1bd3ed890_ParseFile(jule::Ptr<_1bc589367_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1bd3a9e01_FileInfo> _279_finf = jule::new_ptr<_1bd3a9e01_FileInfo>();;
	({
		__jule_tuple_x_1bc59378e_Ast__jule_tuple_s_1ed6c7892_Log __jule_assign_result = _1bd3ede67_parseFileset(_2318_f);
		(*(_279_finf))._field_Ast = __jule_assign_result.__jule_result_arg0;
		(*(_279_finf))._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if (((*(_279_finf))._field_Errors.len() > 0LL)) {
		(*(_279_finf))._field_Ast=nullptr;
	};
	return _279_finf;;
}



inline __jule_tuple_x_1bc59378e_Ast__jule_tuple_s_1ed6c7892_Log _1bd3ede67_parseFileset(jule::Ptr<_1bc589367_File> _5521_f) {
	__jule_tuple_x_1bc59378e_Ast__jule_tuple_s_1ed6c7892_Log __jule_func_result;
	jule::Ptr<_1bd41e7d4_parser> _569_p = jule::new_ptr<_1bd41e7d4_parser>();;
	_1bd4306e6_parse(_569_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = (*(_569_p))._field_ast;
	__jule_func_result.__jule_result_arg1 = (*(_569_p))._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1bc5aa4ba_ScopeTree> _1bd3ee907_newScope(void) {
	return jule::new_ptr<_1bc5aa4ba_ScopeTree>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1bd3eec8c_isSt(jule::Ptr<_1bc583a9d_Token> _499_current, jule::Ptr<_1bc583a9d_Token> _4926_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=(((*(_499_current))._field_Id == static_cast<jule::U64>(3LLU)) || ((*(_4926_prev))._field_Row < (*(_499_current))._field_Row));
	__jule_func_result.__jule_result_arg1=((*(_499_current))._field_Id == static_cast<jule::U64>(3LLU));
	return __jule_func_result;;
}



inline jule::Bool _1bd400111_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _5526_tokens, jule::I64* _5545_i) {
	if ((((*(_5545_i)) > 1LL) && ((*((*(_5526_tokens))[((*(_5545_i)) - 2LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_1bc583a9d_Token> _619_prev = (*(_5526_tokens))[((*(_5545_i)) - 1LL)];;
		return (((*(_619_prev))._field_Id == static_cast<jule::U64>(17LLU)) || (_1bc5845e8_IsBinOp((*(_619_prev))._field_Id) && ((*(_619_prev))._field_Row < (*((*(_5526_tokens))[(*(_5545_i))]))._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1bd4004c9_nextStPos(jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _6815_tokens, jule::I64 _6833_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _699_braceN = 0LL;;
	jule::I64 _709_i = _6833_start;;
	for (; (_709_i < (*(_6815_tokens)).len()); (_709_i)++) {
		{
			jule::Bool _7213_ok = false;;
			jule::Bool _7313_terminated = false;;
			jule::Ptr<_1bc583a9d_Token> _749_tok = (*(_6815_tokens))[_709_i];;
			{
				auto &_match_expr{ (*(_749_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1c259515e:;
					{
						if (((_699_braceN == 0LL) && (_709_i > _6833_start))) {
							if ((!(_1bd400111_prevIsIncompleteExpr(_6815_tokens, &(_709_i))))) {
								({
									__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1bd3eec8c_isSt(_749_tok, (*(_6815_tokens))[(_709_i - 1LL)]);
									_7213_ok = __jule_assign_result.__jule_result_arg0;
									_7313_terminated = __jule_assign_result.__jule_result_arg1;
								});
								if (_7213_ok) {
									goto _julec_label_1c2599d9a;
								};
							};
						};
						(_699_braceN)++;
						goto _iter_next_1c2593aec;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1c25951d6:;
					{
						(_699_braceN)--;
						if (((_699_braceN == 0LL) && ((_709_i + 1LL) < (*(_6815_tokens)).len()))) {
							({
								__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1bd3eec8c_isSt((*(_6815_tokens))[(_709_i + 1LL)], _749_tok);
								_7213_ok = __jule_assign_result.__jule_result_arg0;
								_7313_terminated = __jule_assign_result.__jule_result_arg1;
							});
							if (_7213_ok) {
								(_709_i)++;
								goto _julec_label_1c2599d9a;
							};
						};
						goto _iter_next_1c2593aec;
					}
				}
				_match_end_1c2595109:;
			};
			if ((_699_braceN != 0LL)) {
				goto _iter_next_1c2593aec;
			};
			if ((_709_i > _6833_start)) {
				if (_1bd400111_prevIsIncompleteExpr(_6815_tokens, &(_709_i))) {
					goto _iter_next_1c2593aec;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1bd3eec8c_isSt(_749_tok, (*(_6815_tokens))[(_709_i - 1LL)]);
					_7213_ok = __jule_assign_result.__jule_result_arg0;
					_7313_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1bd3eec8c_isSt(_749_tok, _749_tok);
					_7213_ok = __jule_assign_result.__jule_result_arg0;
					_7313_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_7213_ok))) {
				goto _iter_next_1c2593aec;
			};
			_julec_label_1c2599d9a:;
			if (_7313_terminated) {
				(_709_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _709_i;
			__jule_func_result.__jule_result_arg1 = _7313_terminated;
			return __jule_func_result;;
		}
	_iter_next_1c2593aec:;
	}
	_iter_end_1c2593aec:;;
	__jule_func_result.__jule_result_arg0 = _709_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1bc583a9d_Token__jule_tuple_bool _1bd40084d_skipSt(jule::I64* _13016_i, jule::Slice<jule::Ptr<_1bc583a9d_Token>> _13028_tokens) {
	__jule_tuple_sx_1bc583a9d_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _1315_start = (*(_13016_i));;
	jule::Bool _1329_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1bd4004c9_nextStPos(&(_13028_tokens), _1315_start);
		(*(_13016_i)) = __jule_assign_result.__jule_result_arg0;
		_1329_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1bc583a9d_Token>> _1349_stTokens = _13028_tokens.slice(_1315_start, (*(_13016_i)));;
	if (_1329_terminated) {
		if ((_1349_stTokens.len() == 1LL)) {
			({
				__jule_tuple_sx_1bc583a9d_Token__jule_tuple_bool __jule_assign_result = _1bd40084d_skipSt(_13016_i, _13028_tokens);
				_1349_stTokens = __jule_assign_result.__jule_result_arg0;
				_1329_terminated = __jule_assign_result.__jule_result_arg1;
			});
			__jule_func_result.__jule_result_arg0 = _1349_stTokens;
			__jule_func_result.__jule_result_arg1 = _1329_terminated;
			return __jule_func_result;;
		};
		(_1349_stTokens).mut_slice(0LL, (_1349_stTokens.len() - 1LL));;
	};
	__jule_func_result.__jule_result_arg0 = _1349_stTokens;
	__jule_func_result.__jule_result_arg1 = _1329_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1bd400b7d_stmt>> _1bd401035_splitStmts(jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _15220_tokens) {
	jule::Slice<jule::Ptr<_1bd400b7d_stmt>> _1539_stmts = jule::Slice<jule::Ptr<_1bd400b7d_stmt>>::alloc(0LL, 20LL);;
	jule::I64 _1549_pos = 0LL;;
	while ((_1549_pos < (*(_15220_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_1bc583a9d_Token>> _15613_stmt;;
			jule::Bool _15619_terminated = false;;
			({
				__jule_tuple_sx_1bc583a9d_Token__jule_tuple_bool __jule_assign_result = _1bd40084d_skipSt(&(_1549_pos), (*(_15220_tokens)));
				_15613_stmt = __jule_assign_result.__jule_result_arg0;
				_15619_terminated = __jule_assign_result.__jule_result_arg1;
			});
			{ jule::Slice<jule::Ptr<_1bd400b7d_stmt>> &__jule_push_dest = _1539_stmts; __jule_push_dest.push(jule::new_ptr<_1bd400b7d_stmt>(_1bd400b7d_stmt{._field_tokens=_15613_stmt, ._field_terminated=_15619_terminated})); };
		}
	_iter_next_1c259eb6e:;
	}
	_iter_end_1c259eb6e:;;
	return _1539_stmts;;
}



inline jule::Bool _1bd41968b_isTypeOp(jule::U64* _88514_id) {
	return ((((*(_88514_id)) == static_cast<jule::U64>(65LLU)) || ((*(_88514_id)) == static_cast<jule::U64>(54LLU))) || ((*(_88514_id)) == static_cast<jule::U64>(62LLU)));;
}



inline jule::Bool _1bd419999_isTypeRange(jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _89221_tokens) {
	jule::Bool _8939_op = false;;
	{
		auto expr = _89221_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c266aa09:;
		if (it != expr_end) {
			jule::I64 _8949_i = it - expr->begin();
			jule::Ptr<_1bc583a9d_Token> _89412_token = *it;
			{
				if (((*(_89412_token))._field_Id == static_cast<jule::U64>(76LLU))) {
					if (_8939_op) {
						return true;;
					};
					jule::I64 _89917_rangeN = 0LL;;
					jule::Slice<jule::Ptr<_1bc583a9d_Token>> _90017_lTokens = (*(_89221_tokens)).slice(_8949_i);;
					{
						auto expr = &(_90017_lTokens);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c266b81d:;
						if (it != expr_end) {
							jule::Ptr<_1bc583a9d_Token> _90120_lToken = *it;
							{
								{
									auto &_match_expr{ (*(_90120_lToken))._field_Id };
									
									if (_match_expr == static_cast<jule::U64>(76LLU)) {
										_case_begin_1c266cee5:;
										{
											(_89917_rangeN)++;
											goto _iter_next_1c266b81d;
										}
									}
									else if (_match_expr == static_cast<jule::U64>(77LLU)) {
										_case_begin_1c266d06c:;
										{
											(_89917_rangeN)--;
											goto _iter_next_1c266b81d;
										}
									}
									_match_end_1c266ce29:;
								};
								if ((_89917_rangeN == 0LL)) {
									return _1bd41968b_isTypeOp(&((*(_90120_lToken))._field_Id));;
								};
							}
							_iter_next_1c266b81d:;
							++it;
							goto _iter_begin_1c266b81d;
						}
						_iter_end_1c266b81d:;
					};
					return true;;
				};
				if ((!(_1bd41968b_isTypeOp(&((*(_89412_token))._field_Id))))) {
					return false;;
				};
				_8939_op=true;
			}
			_iter_next_1c266aa09:;
			++it;
			_8949_i++;
			goto _iter_begin_1c266aa09;
		}
		_iter_end_1c266aa09:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1bc583a9d_Token>> _1bd419c63_getBlockExpr(jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _92522_tokens) {
	jule::I64 _9269_braceN = 0LL;;
	jule::I64 _9279_skipToNextBraceClose = 0LL;;
	{
		auto expr = _92522_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c266ec94:;
		if (it != expr_end) {
			jule::I64 _9289_i = it - expr->begin();
			jule::Ptr<_1bc583a9d_Token> _92812_tok = *it;
			{
				{
					auto &_match_expr{ (*(_92812_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1c2670ba7:;
						{
							if (((((*(_92522_tokens)).len() - _9289_i) > 1LL) && ((*((*(_92522_tokens))[(_9289_i + 1LL)]))._field_Id == static_cast<jule::U64>(72LLU)))) {
								(_9279_skipToNextBraceClose)++;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1c2670c2e:;
						{
							if (((_9269_braceN > 0LL) || (_9279_skipToNextBraceClose > 0LL))) {
								if ((_9279_skipToNextBraceClose > 0LL)) {
									(_9279_skipToNextBraceClose)--;
								};
								(_9269_braceN)++;
								goto _match_end_1c2670ab9;
							};
							return (*(_92522_tokens)).slice(0LL, _9289_i);;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1c2670ca6:;
						{
							(_9269_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1c2670d2d:;
						{
							(_9269_braceN)--;
						}
					}
					_match_end_1c2670ab9:;
				};
			}
			_iter_next_1c266ec94:;
			++it;
			_9289_i++;
			goto _iter_begin_1c266ec94;
		}
		_iter_end_1c266ec94:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1bc583a9d_Token__jule_tuple_sx_1bc583a9d_Token _1bd41a12b_splitDelim(jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _95720_tokens, jule::U64 _95738_delim) {
	__jule_tuple_sx_1bc583a9d_Token__jule_tuple_sx_1bc583a9d_Token __jule_func_result;
	jule::I64 _9589_rangeN = 0LL;;
	{
		auto expr = _95720_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2674051:;
		if (it != expr_end) {
			jule::I64 _9599_i = it - expr->begin();
			jule::Ptr<_1bc583a9d_Token> _95912_token = *it;
			{
				{
					auto &_match_expr{ (*(_95912_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1c2674d54:;
						{
							(_9589_rangeN)++;
							goto _iter_next_1c2674051;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1c2674dcb:;
						{
							(_9589_rangeN)--;
						}
					}
					else if (_match_expr == _95738_delim) {
						_case_begin_1c2674e53:;
						{
							if ((_9589_rangeN == 0LL)) {
								jule::Slice<jule::Ptr<_1bc583a9d_Token>> _97221_l = (*(_95720_tokens)).slice(0LL, _9599_i);;
								jule::Slice<jule::Ptr<_1bc583a9d_Token>> _97321_r = (*(_95720_tokens)).slice((_9599_i + 1LL));;
								__jule_func_result.__jule_result_arg0 = _97221_l;
								__jule_func_result.__jule_result_arg1 = _97321_r;
								return __jule_func_result;;
							};
						}
					}
					_match_end_1c2674c77:;
				};
			}
			_iter_next_1c2674051:;
			++it;
			_9599_i++;
			goto _iter_begin_1c2674051;
		}
		_iter_end_1c2674051:;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I64 _1bd41a3e5_findLowestPrecOp(jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _98322_tokens) {
	jule::U8 _9889_prec = 255LLU;;
	jule::I64 _9899_precPos = -1LL;;
	jule::I64 _9919_braceN = 0LL;;
	jule::Bool _9929_skipToNextBraceOpen = false;;
	{
		auto expr = _98322_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2678275:;
		if (it != expr_end) {
			jule::I64 _9939_i = it - expr->begin();
			jule::Ptr<_1bc583a9d_Token> *_99312_token = it;
			{
				{
					auto &_match_expr{ (*((*(_99312_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1c26790bc:;
						{
							_9929_skipToNextBraceOpen=false;
							goto _case_begin_1c2679144;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1c2679144:;
						{
							(_9919_braceN)++;
							goto _iter_next_1c2678275;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1c26791bb:;
						{
							(_9919_braceN)--;
							goto _iter_next_1c2678275;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(13LLU)) {
						_case_begin_1c2679243:;
						{
							_9929_skipToNextBraceOpen=true;
							goto _iter_next_1c2678275;
						}
					}
					_match_end_1c2678ece:;
				};
				{
					
					if (_9929_skipToNextBraceOpen) {
						_case_begin_1c267a6a6:;
						{
							goto _iter_next_1c2678275;
						}
					}
					else if ((_9939_i == 0LL)) {
						_case_begin_1c267a72d:;
						{
							goto _iter_next_1c2678275;
						}
					}
					else if ((_9919_braceN > 0LL)) {
						_case_begin_1c267a7a5:;
						{
							goto _iter_next_1c2678275;
						}
					}
					else if ((!(_1bc5845e8_IsBinOp((*((*(_99312_token))))._field_Id)))) {
						_case_begin_1c267a82c:;
						{
							goto _iter_next_1c2678275;
						}
					}
					_match_end_1c267a453:;
				};
				jule::Ptr<_1bc583a9d_Token> _10229_left = (*(_98322_tokens))[(_9939_i - 1LL)];;
				if ((_1bc5842da_IsUnaryOp((*(_10229_left))._field_Id) || ((*(_10229_left))._field_Id == static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1c2678275;
				};
				if (((_9939_i > 1LL) && ((*(_10229_left))._field_Id == static_cast<jule::U64>(77LLU)))) {
					jule::Ptr<_1bc583a9d_Token> _103013_lleft = (*(_98322_tokens))[(_9939_i - 2LL)];;
					if (((*(_103013_lleft))._field_Id == static_cast<jule::U64>(76LLU))) {
						if ((((*((*(_99312_token))))._field_Id == static_cast<jule::U64>(65LLU)) || ((*((*(_99312_token))))._field_Id == static_cast<jule::U64>(62LLU)))) {
							goto _iter_next_1c2678275;
						};
					};
				};
				jule::U8 _10399_p = _1bc583e22_Prec((*(_99312_token)).ptr());;
				if (((_10399_p != 0LLU) && (_10399_p <= _9889_prec))) {
					_9889_prec=_10399_p;
					_9899_precPos=_9939_i;
				};
			}
			_iter_next_1c2678275:;
			++it;
			_9939_i++;
			goto _iter_begin_1c2678275;
		}
		_iter_end_1c2678275:;
	};
	return _9899_precPos;;
}



inline jule::Ptr<_1bc59b39b_IdentExpr> _1bd41a6ae_buildIdentExpr(jule::Ptr<_1bc583a9d_Token>* _104824_token) {
	return jule::new_ptr<_1bc59b39b_IdentExpr>(_1bc59b39b_IdentExpr{._field_Token=(*(_104824_token)), ._field_Ident=(*((*(_104824_token))))._field_Kind, ._field_Binded=false});;
}



inline __jule_tuple_sx_1bc583a9d_Token__jule_tuple_int _1bd41a978_getRangeExprTokens(jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _105628_tokens) {
	__jule_tuple_sx_1bc583a9d_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I64 _10579_rangeN = 0LL;;
	jule::I64 _10589_i = ((*(_105628_tokens)).len() - 1LL);;
	for (; (_10589_i >= 0LL); (_10589_i)--) {
		{
			jule::Ptr<_1bc583a9d_Token> _10609_tok = (*(_105628_tokens))[_10589_i];;
			{
				auto &_match_expr{ (*(_10609_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1c2682867:;
					{
						(_10579_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1c26828de:;
					{
						(_10579_rangeN)--;
					}
				}
				_match_end_1c2682801:;
			};
			if ((_10579_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_105628_tokens)).slice(0LL, _10589_i);
				__jule_func_result.__jule_result_arg1 = _10579_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1c2681b1e:;
	}
	_iter_end_1c2681b1e:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _10579_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1bd41b78c_checkAssignTokens(jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_1bc588476_IsAssign((*((*(_1623_tokens))[0LL]))._field_Id))))) {
		return false;;
	};
	jule::I64 _209_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2724bc3:;
		if (it != expr_end) {
			jule::Ptr<_1bc583a9d_Token> *_2112_t = it;
			{
				{
					auto &_match_expr{ (*((*(_2112_t))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1c27257a6:;
						{
							(_209_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1c272582d:;
						{
							(_209_braceN)--;
						}
					}
					_match_end_1c27256da:;
				};
				{
					
					if ((_209_braceN < 0LL)) {
						_case_begin_1c27266b9:;
						{
							return false;;
						}
					}
					else if ((_209_braceN > 0LL)) {
						_case_begin_1c2726730:;
						{
							goto _iter_next_1c2724bc3;
						}
					}
					else if (_1bc588a09_IsAssignOp((*((*(_2112_t))))._field_Id) || ((*((*(_2112_t))))._field_Id == static_cast<jule::U64>(38LLU))) {
						_case_begin_1c27267a7:;
						{
							return true;;
						}
					}
					_match_end_1c2726620:;
				};
			}
			_iter_next_1c2724bc3:;
			++it;
			goto _iter_begin_1c2724bc3;
		}
		_iter_end_1c2724bc3:;
	};
	return false;;
}



inline _1ed6c7892_Log _1bd41c98b_makeErr(jule::I64 _5112_row, jule::I64 _5122_col, jule::Ptr<_1bc589367_File>* _5133_f, jule::Str _5143_fmt, jule::Slice<jule::Any> _5156_args) {
	return _1ed6c7892_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_5112_row, ._field_Column=_5122_col, ._field_Path=(*((*(_5133_f))))._field_Path, ._field_Text=_1ed6c7d04_Logf(_5143_fmt, _5156_args), };;
}



inline jule::Slice<jule::Ptr<_1bc583a9d_Token>> _1bd41ce86_range(jule::I64* _6915_i, jule::U64 _6923_open, jule::U64 _6938_close, jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _6959_tokens) {
	if (((*(_6915_i)) >= (*(_6959_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_1bc583a9d_Token> _735_tok = (*(_6959_tokens))[(*(_6915_i))];;
	if (((*(_735_tok))._field_Id != _6923_open)) {
		return nullptr;;
	};
	((*(_6915_i)))++;
	jule::I64 _789_rangeN = 1LL;;
	jule::I64 _795_start = (*(_6915_i));;
	for (; ((_789_rangeN != 0LL) && ((*(_6915_i)) < (*(_6959_tokens)).len())); ((*(_6915_i)))++) {
		{
			jule::Ptr<_1bc583a9d_Token> _819_token = (*(_6959_tokens))[(*(_6915_i))];;
			{
				auto &_match_expr{ (*(_819_token))._field_Id };
				
				if (_match_expr == _6923_open) {
					_case_begin_1c272bb20:;
					{
						(_789_rangeN)++;
					}
				}
				else if (_match_expr == _6938_close) {
					_case_begin_1c272bb97:;
					{
						(_789_rangeN)--;
					}
				}
				_match_end_1c272baa9:;
			};
		}
	_iter_next_1c272acea:;
	}
	_iter_end_1c272acea:;;
	return (*(_6959_tokens)).slice(_795_start, ((*(_6915_i)) - 1LL));;
}



inline __jule_tuple_sx_1bc583a9d_Token__jule_tuple_sx_1bc583a9d_Token _1bd41d250_rangeLast(jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _9919_tokens) {
	__jule_tuple_sx_1bc583a9d_Token__jule_tuple_sx_1bc583a9d_Token __jule_func_result;
	if (((*(_9919_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::U64 _1035_first = (*((*(_9919_tokens))[((*(_9919_tokens)).len() - 1LL)]))._field_Id;;
	if ((((_1035_first != static_cast<jule::U64>(73LLU)) && (_1035_first != static_cast<jule::U64>(76LLU))) && (_1035_first != static_cast<jule::U64>(75LLU)))) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _1099_braceN = 0LL;;
	jule::I64 _1109_i = ((*(_9919_tokens)).len() - 1LL);;
	for (; (_1109_i >= 0LL); (_1109_i)--) {
		{
			jule::Ptr<_1bc583a9d_Token> _1129_token = (*(_9919_tokens))[_1109_i];;
			{
				auto &_match_expr{ (*(_1129_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1c2730d22:;
					{
						(_1099_braceN)++;
						goto _iter_next_1c2730184;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1c2730d99:;
					{
						(_1099_braceN)--;
					}
				}
				_match_end_1c2730cab:;
			};
			if ((_1099_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_9919_tokens)).slice(0LL, _1109_i);
				__jule_func_result.__jule_result_arg1 = (*(_9919_tokens)).slice(_1109_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1c2730184:;
	}
	_iter_end_1c2730184:;;
	__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_1bc583a9d_Token__jule_tuple_s_1ed6c7892_Log _1bd41d706_parts(jule::Slice<jule::Ptr<_1bc583a9d_Token>>* _13715_tokens, jule::U64 _13733_id, jule::Bool _13746_exprMust) {
	__jule_tuple_ssx_1bc583a9d_Token__jule_tuple_s_1ed6c7892_Log __jule_func_result;
	if (((*(_13715_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>> _14213_parts = nullptr;;
	jule::Slice<_1ed6c7892_Log> _14313_errors = nullptr;;
	jule::I64 _1459_rangeN = 0LL;;
	jule::I64 _1469_last = 0LL;;
	{
		auto expr = _13715_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c272da01:;
		if (it != expr_end) {
			jule::I64 _1479_i = it - expr->begin();
			jule::Ptr<_1bc583a9d_Token> _14712_token = *it;
			{
				{
					auto &_match_expr{ (*(_14712_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1c2735211:;
						{
							(_1459_rangeN)++;
							goto _iter_next_1c272da01;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1c2735288:;
						{
							(_1459_rangeN)--;
						}
					}
					_match_end_1c2735145:;
				};
				if ((_1459_rangeN > 0LL)) {
					goto _iter_next_1c272da01;
				};
				if (((*(_14712_token))._field_Id == _13733_id)) {
					if ((_13746_exprMust && ((_1479_i - _1469_last) <= 0LL))) {
						_1ed6c7892_Log _16617_err = _1bd41c98b_makeErr((*(_14712_token))._field_Row, (*(_14712_token))._field_Column, &((*(_14712_token))._field_File), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());;
						{ jule::Slice<_1ed6c7892_Log> &__jule_push_dest = _14313_errors; __jule_push_dest.push(_16617_err); };
					};
					{ jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>> &__jule_push_dest = _14213_parts; __jule_push_dest.push((*(_13715_tokens)).slice(_1469_last, _1479_i)); };
					_1469_last=static_cast<jule::I64>((_1479_i + 1LL));
				};
			}
			_iter_next_1c272da01:;
			++it;
			_1479_i++;
			goto _iter_begin_1c272da01;
		}
		_iter_end_1c272da01:;
	};
	if ((_1469_last < (*(_13715_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>> &__jule_push_dest = _14213_parts; __jule_push_dest.push((*(_13715_tokens)).slice(_1469_last)); };
	} else if ((!(_13746_exprMust))) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1bc583a9d_Token>>> &__jule_push_dest = _14213_parts; __jule_push_dest.push(jule::Slice<jule::Ptr<_1bc583a9d_Token>>()); };
	};
	__jule_func_result.__jule_result_arg0 = _14213_parts;
	__jule_func_result.__jule_result_arg1 = _14313_errors;
	return __jule_func_result;;
}



inline jule::U64 _1bd41d9c0_getCloseOfBrace(jule::U64 _18320_left) {
	{
		auto &_match_expr{ _18320_left };
		
		if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1c2738c3c:;
			{
				return static_cast<jule::U64>(74LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1c2738ca3:;
			{
				return static_cast<jule::U64>(72LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1c2738d19:;
			{
				return static_cast<jule::U64>(76LLU);;
			}
		}
		else {
			_case_begin_1c27385bb:;
			{
				return _18320_left;;
			}
		}
		_match_end_1c2738566:;
	};
}



inline _1ed6c7892_Log _1bd41ddee_compilerErr(jule::Ptr<_1bc583a9d_Token>* _19617_token, jule::Str* _19633_fmt, jule::Slice<jule::Any> _19646_args) {
	return _1ed6c7892_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_19617_token))))._field_Row, ._field_Column=(*((*(_19617_token))))._field_Column, ._field_Path=(*((*((*(_19617_token))))._field_File))._field_Path, ._field_Text=_1ed6c7d04_Logf((*(_19633_fmt)), _19646_args), ._field_Line=_1bc58a346_GetRow((*((*(_19617_token))))._field_File.ptr(), (*((*(_19617_token))))._field_Row), };;
}



inline void _1bd41e295_pushSuggestion(_1ed6c7892_Log* _20730_log, jule::Str _20741_fmt, jule::Slice<jule::Any> _20754_args) {
	(*(_20730_log))._field_Suggestion=_1ed6c7d04_Logf(_20741_fmt, _20754_args);
}



inline jule::Ptr<_1bc59563c_TypeDecl> _1bd4311ec_buildVoidType(void) {
	return jule::new_ptr<_1bc59563c_TypeDecl>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1bcab11c9_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str::lit("windows", 7)) {
			_case_begin_1c288c8da:;
			{
				__jule_func_result.__jule_result_arg0=_1ed6caa60_IsWindows(_1eeea8b77_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("darwin", 6)) {
			_case_begin_1c288c632:;
			{
				__jule_func_result.__jule_result_arg0=_1ed6cad3a_IsDarwin(_1eeea8b77_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("linux", 5)) {
			_case_begin_1c288c698:;
			{
				__jule_func_result.__jule_result_arg0=_1ed6cb104_IsLinux(_1eeea8b77_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("unix", 4)) {
			_case_begin_1c288c70e:;
			{
				__jule_func_result.__jule_result_arg0=_1ed6cbc92_IsUnix(_1eeea8b77_Os);
			}
		}
		else {
			_case_begin_1c288c0d2:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1c288c522:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1bcab131c_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str::lit("i386", 4)) {
			_case_begin_1c288e843:;
			{
				__jule_func_result.__jule_result_arg0=_1ed6cb445_IsI386(_1eeea8e41_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("amd64", 5)) {
			_case_begin_1c288e8a9:;
			{
				__jule_func_result.__jule_result_arg0=_1ed6cb70e_IsAmd64(_1eeea8e41_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("arm64", 5)) {
			_case_begin_1c288e920:;
			{
				__jule_func_result.__jule_result_arg0=_1ed6cb9c8_IsArm64(_1eeea8e41_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("x64", 3)) {
			_case_begin_1c288e986:;
			{
				__jule_func_result.__jule_result_arg0=_1ed6cc402_Is64Bit(_1eeea8e41_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("x32", 3)) {
			_case_begin_1c288eea3:;
			{
				__jule_func_result.__jule_result_arg0=_1ed6cc138_Is32Bit(_1eeea8e41_Arch);
			}
		}
		else {
			_case_begin_1c288e2e3:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1c288e733:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1bcacaac8_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_1ed645579_Base(_5029_p);
	jule::I64 _525_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL, (_525_n - _1ed644ee6_Ext(_5029_p).len()));;
	jule::Str _589_a1 = jule::Str();;
	jule::Str _619_a2 = jule::Str();;
	jule::I64 _649_i = _1ed63cd13_FindLastByte(_5029_p, '_');;
	if ((_649_i == -1LL)) {
		jule::Bool _6713_ok = false;;
		jule::Bool _6721_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1bcab11c9_checkOs(_5029_p);
			_6713_ok = __jule_assign_result.__jule_result_arg0;
			_6721_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6721_exist) {
			return _6713_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1bcab131c_checkArch(_5029_p);
			_6713_ok = __jule_assign_result.__jule_result_arg0;
			_6721_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6721_exist)) || _6713_ok);;
	};
	if (((_649_i + 1LL) >= _525_n)) {
		return true;;
	};
	_589_a1=_5029_p.slice((_649_i + 1LL));
	(_5029_p).mut_slice(0LL, _649_i);;
	_649_i=static_cast<jule::I64>(_1ed63cd13_FindLastByte(_5029_p, '_'));
	if ((_649_i != -1LL)) {
		_619_a2=_5029_p.slice((_649_i + 1LL));
	};
	if ((_619_a2).empty()) {
		jule::Bool _8813_ok = false;;
		jule::Bool _8821_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1bcab11c9_checkOs(_589_a1);
			_8813_ok = __jule_assign_result.__jule_result_arg0;
			_8821_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8821_exist) {
			return _8813_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1bcab131c_checkArch(_589_a1);
			_8813_ok = __jule_assign_result.__jule_result_arg0;
			_8821_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8821_exist)) || _8813_ok);;
	};
	jule::Bool _969_ok = false;;
	jule::Bool _9617_exist = false;;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1bcab131c_checkArch(_589_a1);
		_969_ok = __jule_assign_result.__jule_result_arg0;
		_9617_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9617_exist) {
		if ((!(_969_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1bcab11c9_checkOs(_619_a2);
			_969_ok = __jule_assign_result.__jule_result_arg0;
			_9617_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9617_exist)) || _969_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1bcab11c9_checkOs(_589_a1);
		_969_ok = __jule_assign_result.__jule_result_arg0;
		_9617_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9617_exist)) || _969_ok);;
}



inline void _1bcacbc50_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(_1eeea8b77_Os); };
	if (_1ed6cbc92_IsUnix(_1eeea8b77_Os)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(jule::Str::lit("unix", 4)); };
	};
}



inline void _1bcacbec5_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(_1eeea8e41_Arch); };
	if (_1ed6cc402_Is64Bit(_1eeea8e41_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x64", 3)); };
	};
	if (_1ed6cc138_Is32Bit(_1eeea8e41_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x32", 3)); };
	};
}



inline void _1bcacc2b1_initVars(jule::Slice<jule::Str>* _5518_vars, _1bcacb931_CompileInfo* _5532_info) {
	_1bcacbc50_setOsVars(_5518_vars);
	_1bcacbec5_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("production", 10)); };
	};
	if ((*(_5532_info))._field_Test) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("test", 4)); };
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1c2899b8e:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("clang", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1c2899c16:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("gcc", 3)); };
			}
		}
		_match_end_1c2899b39:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1c289adb0:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp14", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1c289ae26:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp17", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1c289ae9d:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp20", 5)); };
			}
		}
		_match_end_1c289b0e1:;
	};
}



inline jule::Slice<jule::U8> _1bd435333_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__230a433c3_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str::lit("error: file cannot read", 23));
			;
			_1eeea7a88_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _1ed6c7892_Log _1bd43560d_flatCompilerErr(jule::Str _4120_text) {
	return _1ed6c7892_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Text=_4120_text, };;
}



inline void _1bd439e2b_pushPasses(jule::Ptr<_1bc766d2a_Package>* _11120_p, jule::Slice<jule::Str>* _11144_passes) {
	{
		auto expr = &((*((*(_11120_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c28cbab1:;
		if (it != expr_end) {
			jule::Ptr<_1bc80a50b_SymbolTable> _11217_f = *it;
			{
				_julec_label_1c28cc1dd:;
				{
					auto expr = &((*(_11217_f))._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c28cc63e:;
					if (it != expr_end) {
						_1ece236c6_Pass _11416_pass = *it;
						{
							if ((_11416_pass._field_Text).empty()) {
								goto _iter_next_1c28cc63e;
							};
							{
								auto expr = _11144_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1c28ccdc0:;
								if (it != expr_end) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_1c28cc63e;
										};
									}
									_iter_next_1c28ccdc0:;
									++it;
									goto _iter_begin_1c28ccdc0;
								}
								_iter_end_1c28ccdc0:;
							};
							{ jule::Slice<jule::Str> &__jule_push_dest = (*(_11144_passes)); __jule_push_dest.push(_11416_pass._field_Text); };
						}
						_iter_next_1c28cc63e:;
						++it;
						goto _iter_begin_1c28cc63e;
					}
					_iter_end_1c28cc63e:;
				};
			}
			_iter_next_1c28cbab1:;
			++it;
			goto _iter_begin_1c28cbab1;
		}
		_iter_end_1c28cbab1:;
	};
}



inline jule::Slice<jule::Str> _1bd43a2e4_getAllUniquePasses(jule::Ptr<_1bc766d2a_Package>* _12828_pkg, jule::Slice<jule::Ptr<_1bc763e04_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_1bd439e2b_pushPasses(_12828_pkg, &(_12913_passes));
	{
		auto expr = &(_12853_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c28ce9b5:;
		if (it != expr_end) {
			jule::Ptr<_1bc763e04_ImportInfo> _13217_u = *it;
			{
				if ((!((*(_13217_u))._field_Binded))) {
					_1bd439e2b_pushPasses(&((*(_13217_u))._field_Package), &(_12913_passes));
				};
			}
			_iter_next_1c28ce9b5:;
			++it;
			goto _iter_begin_1c28ce9b5;
		}
		_iter_end_1c28ce9b5:;
	};
	return _12913_passes;;
}



inline _1bcacb931_CompileInfo _1bd43a503_buildCompileInfo(void) {
	_1bcacb931_CompileInfo _1429_info = _1bcacb931_CompileInfo{._field_Prod=_23b84b1c0_Production, ._field_Test=_23b84a763_Test, };;
	{
		auto &_match_expr{ _23b848860_Compiler };
		
		if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1c28d0d90:;
			{
				_1429_info._field_Compiler=jule::Str::lit("clang", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1c28d0e17:;
			{
				_1429_info._field_Compiler=jule::Str::lit("gcc", 3);
			}
		}
		_match_end_1c28d0114:;
	};
	{
		auto &_match_expr{ _23b849e49_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1c28d0c4c:;
			{
				_1429_info._field_CppStd=jule::Str::lit("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1c28d1995:;
			{
				_1429_info._field_CppStd=jule::Str::lit("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1c28d12d0:;
			{
				_1429_info._field_CppStd=jule::Str::lit("cpp20", 5);
			}
		}
		_match_end_1c28d1b71:;
	};
	return _1429_info;;
}



inline void _1bd13b7ed_EliminateDefines(jule::Ptr<_1bd4385ab_IR>* _29026_ir) {
	jule::Ptr<_1bd108de7_ObjectDeadCode> _2919_ocd = static__1bd138db1_new(_29026_ir);;
	_1bd13b4bd_elimanate(_2919_ocd);
}



inline jule::Ptr<_1bc594a59_Directive> _1bd13bbb6_findDirective(jule::Slice<jule::Ptr<_1bc594a59_Directive>>* _29623_directives, jule::Str _29654_tag) {
	{
		auto expr = _29623_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c291b293:;
		if (it != expr_end) {
			jule::Ptr<_1bc594a59_Directive> _29717_dr = *it;
			{
				if (((*((*(_29717_dr))._field_Tag))._field_Kind == _29654_tag)) {
					return _29717_dr;;
				};
			}
			_iter_next_1c291b293:;
			++it;
			goto _iter_begin_1c291b293;
		}
		_iter_end_1c291b293:;
	};
	return nullptr;;
}



inline jule::Bool _1bd13c03a_hasDirective(jule::Slice<jule::Ptr<_1bc594a59_Directive>>* _30618_directives, jule::Str _30649_tag) {
	return (_1bd13bbb6_findDirective(&((*(_30618_directives))), _30649_tag) != nullptr);;
}



inline jule::Bool _1bd13c403_isTraitMethod(jule::Ptr<_1bc5be0b1_StructIns>* _31123_owner, jule::Ptr<_1ece1de96_FnIns>* _31143_f) {
	{
		auto expr = &((*((*((*(_31123_owner))))._field_Decl))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c291c4d6:;
		if (it != expr_end) {
			jule::Ptr<_1bc713a41_Trait> _31217_t = *it;
			{
				if ((_1bc7146e0_FindMethod(_31217_t.ptr(), (*((*((*(_31143_f))))._field_Decl))._field_Ident) != nullptr)) {
					return true;;
				};
			}
			_iter_next_1c291c4d6:;
			++it;
			goto _iter_begin_1c291c4d6;
		}
		_iter_end_1c291c4d6:;
	};
	return false;;
}



inline void _1bd141407_eliminateDeadCodeOfScope(jule::Ptr<_1bc74261e_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_1bc744eb2_Label>> _2425_labels = jule::Slice<jule::Ptr<_1bc744eb2_Label>>::alloc(0LL, 16LLU);;
	jule::Slice<jule::Ptr<_1bc74538b_GotoSt>> _2435_gotos = jule::Slice<jule::Ptr<_1bc74538b_GotoSt>>::alloc(0LL, 16LLU);;
	jule::Ptr<_1bd13d206_scopeDeadCode> _2449_sdc = jule::new_ptr<_1bd13d206_scopeDeadCode>(_1bd13d206_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&((*(_24133_s))._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1bc744eb2_Label>>>)((&(_2425_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1bc74538b_GotoSt>>>)((&(_2435_gotos)))), });;
	{
		_1bd1410c7_optimizeStmts(_2449_sdc);
	};
}



inline void _1bd14167c_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1ece1b092_Fn>>* _25433_funcs) {
	{
		auto expr = _25433_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2965661:;
		if (it != expr_end) {
			jule::Ptr<_1ece1b092_Fn> _25517_func = *it;
			{
				{
					auto expr = &((*(_25517_func))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c2966277:;
					if (it != expr_end) {
						jule::Ptr<_1ece1de96_FnIns> _25621_ins = *it;
						{
							_1bd141407_eliminateDeadCodeOfScope((*(_25621_ins))._field_Scope);
						}
						_iter_next_1c2966277:;
						++it;
						goto _iter_begin_1c2966277;
					}
					_iter_end_1c2966277:;
				};
			}
			_iter_next_1c2965661:;
			++it;
			goto _iter_begin_1c2965661;
		}
		_iter_end_1c2965661:;
	};
}



inline void _1bd1418ad_eliminateFunctionsScopePackage(jule::Ptr<_1bc766d2a_Package>* _26240_pkg) {
	{
		auto expr = &((*((*(_26240_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c29660ac:;
		if (it != expr_end) {
			jule::Ptr<_1bc80a50b_SymbolTable> _26317_f = *it;
			{
				_1bd14167c_eliminateScopeFunctions(&((*(_26317_f))._field_Funcs));
			}
			_iter_next_1c29660ac:;
			++it;
			goto _iter_begin_1c29660ac;
		}
		_iter_end_1c29660ac:;
	};
}



inline void _1bd141b66_eliminateScopePackage(jule::Ptr<_1bc766d2a_Package>* _26831_pkg) {
	_1bd1418ad_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _1bd141d97_EliminateScopes(jule::Ptr<_1bd4385ab_IR>* _27325_ir) {
	jule::I64 _2749_i = ((*((*(_27325_ir))))._field_Used.len() - 1LL);;
	for (; (_2749_i >= 0LL); (_2749_i)--) {
		{
			jule::Ptr<_1bc763e04_ImportInfo> _27613_u = (*((*(_27325_ir))))._field_Used[_2749_i];;
			if ((!((*(_27613_u))._field_Binded))) {
				_1bd141b66_eliminateScopePackage(&((*(_27613_u))._field_Package));
			};
		}
	_iter_next_1c2967dd3:;
	}
	_iter_end_1c2967dd3:;;
	_1bd141b66_eliminateScopePackage(&((*((*(_27325_ir))))._field_Main));
}



inline jule::Uintptr _1bc2d338b_typeData(jule::Any* _1714_m) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)(((*(_1714_m))).type)));;
}



inline jule::Bool _1bc2d3754_equalConst(jule::Ptr<_230d58386_Const> _2115_l, jule::Ptr<_230d58386_Const> _2126_r) {
	{
		
		if (_230d5c357_IsI64(_2115_l.ptr())) {
			_case_begin_1c2769ee3:;
			{
				return (_230d5c357_IsI64(_2126_r.ptr()) && (_230d59c5b_ReadI64(_2115_l.ptr()) == _230d59c5b_ReadI64(_2126_r.ptr())));;
			}
		}
		else if (_230d5c5dd_IsU64(_2115_l.ptr())) {
			_case_begin_1c276a06a:;
			{
				return (_230d5c5dd_IsU64(_2126_r.ptr()) && (_230d59ee2_ReadU64(_2115_l.ptr()) == _230d59ee2_ReadU64(_2126_r.ptr())));;
			}
		}
		else if (_230d5cd91_IsF64(_2115_l.ptr())) {
			_case_begin_1c276a323:;
			{
				return (_230d5cd91_IsF64(_2126_r.ptr()) && (_230d5a795_ReadF64(_2115_l.ptr()) == _230d5a795_ReadF64(_2126_r.ptr())));;
			}
		}
		else if (_230d5cb0a_IsStr(_2115_l.ptr())) {
			_case_begin_1c276a389:;
			{
				return (_230d5cb0a_IsStr(_2126_r.ptr()) && (_230d5a50e_ReadStr(_2115_l.ptr()) == _230d5a50e_ReadStr(_2126_r.ptr())));;
			}
		}
		else if (_230d5c874_IsBool(_2115_l.ptr())) {
			_case_begin_1c276a400:;
			{
				return (_230d5c874_IsBool(_2126_r.ptr()) && (_230d5a278_ReadBool(_2115_l.ptr()) == _230d5a278_ReadBool(_2126_r.ptr())));;
			}
		}
		else if (_230d5d127_IsNil(_2115_l.ptr())) {
			_case_begin_1c276a466:;
			{
				return _230d5d127_IsNil(_2126_r.ptr());;
			}
		}
		else {
			_case_begin_1c2769dd3:;
			{
				return false;;
			}
		}
		_match_end_1c2769773:;
	};
}



inline jule::Bool _1bc2d3ac8_equalCasting(jule::Ptr<_1ece0e8b0_CastingExprModel> _4017_l, jule::Ptr<_1ece0e8b0_CastingExprModel> _4039_r) {
	if ((!(_1bc8418c7_Equal((*(_4017_l))._field_Kind, (*(_4039_r))._field_Kind)))) {
		return false;;
	};
	return _1bc2d4a0d_equalModels((*(_4017_l))._field_Expr, (*(_4039_r))._field_Expr);;
}



inline jule::Bool _1bc2d3e91_equalUnary(jule::Ptr<_1ece0d65b_UnaryExprModel> _4715_l, jule::Ptr<_1ece0d65b_UnaryExprModel> _4735_r) {
	if ((((*((*(_4715_l))._field_Op))._field_Id != (*((*(_4735_r))._field_Op))._field_Id) || ((*((*(_4715_l))._field_Op))._field_Kind != (*((*(_4735_r))._field_Op))._field_Kind))) {
		return false;;
	};
	return _1bc2d4a0d_equalModels((*((*(_4715_l))._field_Expr))._field_Model, (*((*(_4735_r))._field_Expr))._field_Model);;
}



inline jule::Bool _1bc2d4315_equalIndexing(jule::Ptr<_1ece10ae2_IndexingExprModel> _5418_l, jule::Ptr<_1ece10ae2_IndexingExprModel> _5441_r) {
	return (_1bc2d4a0d_equalModels((*((*(_5418_l))._field_Expr))._field_Model, (*((*(_5441_r))._field_Expr))._field_Model) && _1bc2d4a0d_equalModels((*((*(_5418_l))._field_Index))._field_Model, (*((*(_5441_r))._field_Index))._field_Model));;
}



inline jule::Bool _1bc2d4689_equalBinary(jule::Ptr<_1ece0d282_BinaryExprModel> _5916_l, jule::Ptr<_1ece0d282_BinaryExprModel> _5937_r) {
	if ((((*((*(_5916_l))._field_Op))._field_Id != (*((*(_5937_r))._field_Op))._field_Id) || ((*((*(_5916_l))._field_Op))._field_Kind != (*((*(_5937_r))._field_Op))._field_Kind))) {
		return false;;
	};
	return (_1bc2d4a0d_equalModels((*((*(_5916_l))._field_Left))._field_Model, (*((*(_5937_r))._field_Left))._field_Model) && _1bc2d4a0d_equalModels((*((*(_5916_l))._field_Right))._field_Model, (*((*(_5937_r))._field_Right))._field_Model));;
}



inline jule::Bool _1bc2d4a0d_equalModels(jule::Any _7016_l, jule::Any _7030_r) {
	if ((_1bc2d338b_typeData(&(_7016_l)) != _1bc2d338b_typeData(&(_7030_r)))) {
		return false;;
	};
	{
		auto &_match_expr{ _7016_l };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c277908a:;
			{
				return (_7016_l.cast_ptr<_1bc7a750d_Var>(&__jule_any_type8) == _7030_r.cast_ptr<_1bc7a750d_Var>(&__jule_any_type8));;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1c2779112:;
			{
				jule::Ptr<_1ece12d03_StructSubIdentExprModel> _789_li = _7016_l.cast_ptr<_1ece12d03_StructSubIdentExprModel>(&__jule_any_type97);;
				jule::Ptr<_1ece12d03_StructSubIdentExprModel> _799_ri = _7030_r.cast_ptr<_1ece12d03_StructSubIdentExprModel>(&__jule_any_type97);;
				return (((*(_789_li))._field_Field == (*(_799_ri))._field_Field) && _1bc2d4a0d_equalModels((*((*(_789_li))._field_Expr))._field_Model, (*((*(_799_ri))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1c2779189:;
			{
				return _1bc2d3754_equalConst(_7016_l.cast_ptr<_230d58386_Const>(&__jule_any_type19), _7030_r.cast_ptr<_230d58386_Const>(&__jule_any_type19));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1c277940e:;
			{
				return _1bc2d3ac8_equalCasting(_7016_l.cast_ptr<_1ece0e8b0_CastingExprModel>(&__jule_any_type92), _7030_r.cast_ptr<_1ece0e8b0_CastingExprModel>(&__jule_any_type92));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1c2779475:;
			{
				return _1bc2d3e91_equalUnary(_7016_l.cast_ptr<_1ece0d65b_UnaryExprModel>(&__jule_any_type110), _7030_r.cast_ptr<_1ece0d65b_UnaryExprModel>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1c27794db:;
			{
				return _1bc2d4315_equalIndexing(_7016_l.cast_ptr<_1ece10ae2_IndexingExprModel>(&__jule_any_type45), _7030_r.cast_ptr<_1ece10ae2_IndexingExprModel>(&__jule_any_type45));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1c2779552:;
			{
				return _1bc2d4689_equalBinary(_7016_l.cast_ptr<_1ece0d282_BinaryExprModel>(&__jule_any_type111), _7030_r.cast_ptr<_1ece0d282_BinaryExprModel>(&__jule_any_type111));;
			}
		}
		else {
			_case_begin_1c2778a29:;
			{
				return false;;
			}
		}
		_match_end_1c2778ed0:;
	};
}



inline jule::Bool _1bc9cb37a_isStdPackage(jule::Str* _46318_f, jule::Str _46326_p) {
	return _1ed639b56_HasPrefix((*(_46318_f)), _1ed644c2c_Join(jule::Slice<jule::Str>::make({_1eeea8094_PathStdlib,_46326_p})));;
}



inline jule::Bool _1bc9cb688_isConstantValidConditionalCase(jule::Ptr<_1bc742a3c_If>* _46736_i) {
	{
		auto &_match_expr{ (*((*(_46736_i))))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1c277eb40:;
			{
				jule::Ptr<_230d58386_Const> _4709_c = (*((*(_46736_i))))._field_Expr.cast_ptr<_230d58386_Const>(&__jule_any_type19);;
				return (_230d5c874_IsBool(_4709_c.ptr()) && _230d5a278_ReadBool(_4709_c.ptr()));;
			}
		}
		_match_end_1c277eada:;
	};
	return false;;
}



inline jule::Bool _1bc9cb952_isUnreachableExpr(jule::Any* _47623_expr) {
	{
		auto &_match_expr{ (*(_47623_expr)) };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1c277ec83:;
			{
				jule::Ptr<_230d58386_Const> _4799_c = (*(_47623_expr)).cast_ptr<_230d58386_Const>(&__jule_any_type19);;
				return (_230d5c874_IsBool(_4799_c.ptr()) && (!(_230d5a278_ReadBool(_4799_c.ptr()))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1c2780954:;
			{
				jule::Ptr<_1ece0d282_BinaryExprModel> _4829_m = (*(_47623_expr)).cast_ptr<_1ece0d282_BinaryExprModel>(&__jule_any_type111);;
				if (((*((*(_4829_m))._field_Op))._field_Id == static_cast<jule::U64>(54LLU))) {
					return (_1bc9cb952_isUnreachableExpr(&((*((*(_4829_m))._field_Left))._field_Model)) || _1bc9cb952_isUnreachableExpr(&((*((*(_4829_m))._field_Right))._field_Model)));;
				};
			}
		}
		_match_end_1c277ec2d:;
	};
	return false;;
}



inline jule::Bool _1bc9cbc93_isConstantValidMatchCase(jule::Ptr<_1bc74738d_Case>* _49130_case) {
	{
		auto expr = &((*((*(_49130_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c278420a:;
		if (it != expr_end) {
			jule::Ptr<_1bc8108a7_Data> *_49212_expr = it;
			{
				if (((_1bc81127b_IsConst((*(_49212_expr)).ptr()) && _230d5c874_IsBool((*((*(_49212_expr))))._field_Constant.ptr())) && _230d5a278_ReadBool((*((*(_49212_expr))))._field_Constant.ptr()))) {
					return true;;
				};
			}
			_iter_next_1c278420a:;
			++it;
			goto _iter_begin_1c278420a;
		}
		_iter_end_1c278420a:;
	};
	return false;;
}



inline jule::Bool _1bc9cc05c_isUnreachableConditionalCase(jule::Ptr<_1bc742a3c_If>* _50034_i) {
	return _1bc9cb952_isUnreachableExpr(&((*((*(_50034_i))))._field_Expr));;
}



inline jule::Bool _1bc9cc326_isUnreachableMatchCase(jule::Ptr<_1bc74738d_Case>* _50428_case) {
	{
		auto expr = &((*((*(_50428_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c278620c:;
		if (it != expr_end) {
			jule::Ptr<_1bc8108a7_Data> *_50512_expr = it;
			{
				if ((!(_1bc9cb952_isUnreachableExpr(&((*((*(_50512_expr))))._field_Model))))) {
					return false;;
				};
			}
			_iter_next_1c278620c:;
			++it;
			goto _iter_begin_1c278620c;
		}
		_iter_end_1c278620c:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _1bc9d6110_checkForBitShiftOpt(jule::Ptr<_1ece0cc87_OperandExprModel>* _63425_l, jule::Ptr<_1ece0cc87_OperandExprModel>* _63448_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_230d577a3_IsInt(_1bc841586_Str((*((*(_63425_l))))._field_Kind.ptr())))) || (!(_230d577a3_IsInt(_1bc841586_Str((*((*(_63448_r))))._field_Kind.ptr())))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>(_230d5acb2_AsU64((*((*(_63448_r))))._field_Model.cast_ptr<_230d58386_Const>(&__jule_any_type19).ptr()));
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _6425_j = _230d08d09_Log2(static_cast<jule::F64>(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1)));;
	jule::U64 _6435_z = static_cast<jule::U64>(_6425_j);;
	if ((static_cast<jule::F64>(_6435_z) != _6425_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _6435_z;
	return __jule_func_result;;
}



inline jule::Bool _1bc9d64c8_areSameLvalueExprModel(jule::Any* _65128_l, jule::Any* _65143_r) {
	{
		auto &_match_expr{ (*(_65128_l)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c27d77be:;
			{
				return ((*(_65143_r)) == (*(_65128_l)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1c27d7835:;
			{
				{
					auto &_match_expr{ (*(_65143_r)) };
					
					if (_match_expr.type == &__jule_any_type97) {
						_case_begin_1c27d8308:;
						{
							goto _match_end_1c27d825e;
						}
					}
					else {
						_case_begin_1c27d844b:;
						{
							return false;;
						}
					}
					_match_end_1c27d825e:;
				};
				jule::Ptr<_1ece12d03_StructSubIdentExprModel> _6649_lsi = (*(_65128_l)).cast_ptr<_1ece12d03_StructSubIdentExprModel>(&__jule_any_type97);;
				jule::Ptr<_1ece12d03_StructSubIdentExprModel> _6659_rsi = (*(_65143_r)).cast_ptr<_1ece12d03_StructSubIdentExprModel>(&__jule_any_type97);;
				if (((*(_6649_lsi))._field_Field != (*(_6659_rsi))._field_Field)) {
					return false;;
				};
				return _1bc9d64c8_areSameLvalueExprModel(&((*((*(_6649_lsi))._field_Expr))._field_Model), &((*((*(_6659_rsi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1c27d78ac:;
			{
				{
					auto &_match_expr{ (*(_65143_r)) };
					
					if (_match_expr.type == &__jule_any_type110) {
						_case_begin_1c27d9dba:;
						{
							jule::Ptr<_1ece0d65b_UnaryExprModel> _67713_ul = (*(_65128_l)).cast_ptr<_1ece0d65b_UnaryExprModel>(&__jule_any_type110);;
							jule::Ptr<_1ece0d65b_UnaryExprModel> _67813_ur = (*(_65143_r)).cast_ptr<_1ece0d65b_UnaryExprModel>(&__jule_any_type110);;
							if ((((*((*(_67713_ul))._field_Op))._field_Id != (*((*(_67813_ur))._field_Op))._field_Id) || ((*((*(_67713_ul))._field_Op))._field_Kind != (*((*(_67813_ur))._field_Op))._field_Kind))) {
								return false;;
							};
							return _1bc9d64c8_areSameLvalueExprModel(&((*((*(_67713_ul))._field_Expr))._field_Model), &((*((*(_67813_ur))._field_Expr))._field_Model));;
						}
					}
					_match_end_1c27d94e6:;
				};
			}
		}
		_match_end_1c27d7769:;
	};
	return false;;
}



inline void _1bc9d8ce4_PushOptLevel(jule::I64 _2917_level) {
	jule::Bool _305_l1 = (_2917_level >= static_cast<jule::I64>(1LL));;
	_1bc9d6b9e_Copy=_305_l1;
	_1bc9d6eac_Deadcode=_305_l1;
	_1bc9d7276_Append=_305_l1;
	_1bc9d7584_Math=_305_l1;
	_1bc9d784d_Access=_305_l1;
	_1bc9d7b17_Inline=_305_l1;
	_1bc9d7dd1_Ptr=_305_l1;
	_1bc9d82aa_Cond=_305_l1;
	_1bc9d8574_Str=_305_l1;
	_1bc9d883d_Slice=_305_l1;
	_1bc9d8b07_Assign=_305_l1;
}



inline void _1bd14b379_detectEnabled(void) {
	_1bd14908b_exprEnabled=(((_1bc9d7dd1_Ptr || _1bc9d7584_Math) || _1bc9d784d_Access) || _1bc9d82aa_Cond);
	_1bd149388_scopeEnabled=(((((_1bc9d82aa_Cond || _1bc9d7276_Append) || _1bc9d6b9e_Copy) || _1bc9d8574_Str) || _1bc9d883d_Slice) || _1bc9d8b07_Assign);
}



inline void _1bd174c98_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_1eeea7a88_Exit(1LL);
}



inline jule::U64 _1bcc83a1c_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));;
}



inline jule::Bool _1bcbb3ce3_isCopyOptimizable(jule::Ptr<_1bc8108a7_Data>* _86523_expr) {
	if ((!((*((*(_86523_expr))))._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_86523_expr))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1c2c0c9d5:;
			{
				return false;;
			}
		}
		_match_end_1c2c0c980:;
	};
	return true;;
}



inline jule::Bool _1bcbb41ab_isIterCopyOptimizable(jule::Ptr<_1bc8108a7_Data>* _87627_expr, jule::Ptr<_1bc7a750d_Var>* _87641_v) {
	if (((!((*((*(_87627_expr))))._field_Lvalue)) && (!(_1bc842a4e_Mutable((*((*(_87627_expr))))._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!((*((*(_87641_v))))._field_Mutable)) && (!((*((*(_87627_expr))))._field_Mutable)));;
}



inline jule::Str _1bcbc4397_decomposeCommonEsq(jule::U8 _149623_b) {
	{
		auto &_match_expr{ _149623_b };
		
		if (_match_expr == '\\') {
			_case_begin_1c2d1768e:;
			{
				return jule::Str::lit("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1c2d17cee:;
			{
				return jule::Str::lit("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1c2d17859:;
			{
				return jule::Str::lit("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1c2d178c0:;
			{
				return jule::Str::lit("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1c2d17936:;
			{
				return jule::Str::lit("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1c2d1799c:;
			{
				return jule::Str::lit("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1c2d17eb9:;
			{
				return jule::Str::lit("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1c2d18030:;
			{
				return jule::Str::lit("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1c2d18096:;
			{
				return jule::Str::lit("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1c2d1810c:;
			{
				return jule::Str::lit("\\v", 2);;
			}
		}
		else {
			_case_begin_1c2d177e3:;
			{
				return jule::Str();;
			}
		}
		_match_end_1c2d0d256:;
	};
}



inline jule::Str _1bcbc46a5_sbtoa(jule::U8 _152310_b) {
	if ((_152310_b == 0LLU)) {
		return jule::Str::lit("\\x00", 4);;
	};
	if ((_152310_b < 128LLU)) {
		jule::Str _15289_seq = _1bcbc4397_decomposeCommonEsq(_152310_b);;
		if (!(_15289_seq).empty()) {
			return _15289_seq;;
		};
		if (((32LL <= _152310_b) && (_152310_b <= 126LLU))) {
			return jule::Str::from_byte(_152310_b);;
		};
	};
	jule::Str _15365_seq = _230d49a4d_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_152310_b)), 8LL);;
	if ((_15365_seq.len() == 2LL)) {
		return (jule::Str::lit("\\0", 2) + _15365_seq);;
	};
	return (jule::Str::lit("\\", 1) + _15365_seq);;
}



inline void _1bcbc4991_cstrBytes(_2096a4489_StrBuilder* _154319_s, jule::Str _154334_ctx) {
	{
		auto expr = &(_154334_ctx);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2d1cc49:;
		if (it != expr_end) {
			jule::U8 *_154412_b = it;
			{
				_2096a4e4b_WriteStr(_154319_s, _1bcbc46a5_sbtoa((*(_154412_b))));
			}
			_iter_next_1c2d1cc49:;
			++it;
			goto _iter_begin_1c2d1cc49;
		}
		_iter_end_1c2d1cc49:;
	};
}



inline void _1bcbc4cc1_cstrLit(_2096a4489_StrBuilder* _154917_s, jule::Str _154932_ctx) {
	_2096a5204_WriteByte(_154917_s, '\"');
	_1bcbc4991_cstrBytes(_154917_s, _154932_ctx);
	_2096a5204_WriteByte(_154917_s, '\"');
}



inline void _1bcbc5167_ftoa(_2096a4489_StrBuilder* _155514_s, jule::F64 _155529_f, jule::I64 _155537_bitsize) {
	if ((_155537_bitsize != 32LL)) {
		if ((_155529_f == static_cast<jule::F64>(static_cast<jule::I64>(_155529_f)))) {
			_1bcbc5453_itoa(_155514_s, static_cast<jule::I64>(static_cast<jule::I64>(_155529_f)));
			return;;
		};
		if ((_155529_f == static_cast<jule::F64>(static_cast<jule::U64>(_155529_f)))) {
			_1bcbc573e_utoa(_155514_s, static_cast<jule::U64>(static_cast<jule::U64>(_155529_f)));
			return;;
		};
	};
	jule::Str _15665_m = _230d332ea_FmtFloat(_155529_f, 'f', -1LL, _155537_bitsize);;
	_2096a4e4b_WriteStr(_155514_s, _15665_m);
	if ((!(_1ed63e661_Contains(_15665_m, jule::Str::lit(".", 1))))) {
		_2096a4e4b_WriteStr(_155514_s, jule::Str::lit(".0", 2));
	};
}



inline void _1bcbc5453_itoa(_2096a4489_StrBuilder* _157314_s, jule::I64 _157329_x) {
	{
		
		if ((_157329_x == jule::MAX_I64)) {
			_case_begin_1c2d21e7e:;
			{
				_2096a4e4b_WriteStr(_157314_s, jule::Str::lit("jule::MAX_I64", 13));
				return;;
			}
		}
		else if ((_157329_x == jule::MIN_I64)) {
			_case_begin_1c2d22006:;
			{
				_2096a4e4b_WriteStr(_157314_s, jule::Str::lit("jule::MIN_I64", 13));
				return;;
			}
		}
		_match_end_1c2d21d6e:;
	};
	_2096a4e4b_WriteStr(_157314_s, _230d49e16_FmtInt(_157329_x, 10LL));
	if (_1ed6cc402_Is64Bit(jule::Str::lit("arm64", 5))) {
		_2096a5204_WriteByte(_157314_s, 'L');
	};
	_2096a5204_WriteByte(_157314_s, 'L');
}



inline void _1bcbc573e_utoa(_2096a4489_StrBuilder* _159014_s, jule::U64 _159029_x) {
	{
		
		if ((_159029_x == jule::MAX_U64)) {
			_case_begin_1c2d240b3:;
			{
				_2096a4e4b_WriteStr(_159014_s, jule::Str::lit("jule::MAX_U64", 13));
				return;;
			}
		}
		_match_end_1c2d23eb4:;
	};
	_2096a4e4b_WriteStr(_159014_s, _230d49a4d_FmtUint(_159029_x, 10LL));
	if (_1ed6cc402_Is64Bit(jule::Str::lit("arm64", 5))) {
		_2096a5204_WriteByte(_159014_s, 'L');
	};
	_2096a4e4b_WriteStr(_159014_s, jule::Str::lit("LU", 2));
}



inline jule::Bool _1bcbc5b18_isForwarded(jule::Ptr<_1bc74261e_Scope>* _160417_s) {
	jule::Any _16055_last = (*((*(_160417_s))))._field_Stmts[((*((*(_160417_s))))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _16055_last };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1c2d263a1:;
			{
				{
					auto &_match_expr{ (*(_16055_last.cast_ptr<_1bc8108a7_Data>(&__jule_any_type24)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1c2d271e8:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1c2d27182:;
						{
							return false;;
						}
					}
					_match_end_1c2d2712c:;
				};
			}
		}
		else {
			_case_begin_1c2d2648e:;
			{
				return true;;
			}
		}
		_match_end_1c2d25988:;
	};
}



inline jule::Bool _1bcbc5dd2_isExprComesFromBind(jule::Ptr<_1bc8108a7_Data>* _161925_d) {
	{
		auto &_match_expr{ (*((*(_161925_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c2d278e1:;
			{
				return (*((*((*(_161925_d))))._field_Model.cast_ptr<_1bc7a750d_Var>(&__jule_any_type8)))._field_Binded;;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1c2d27957:;
			{
				return (*((*((*((*((*(_161925_d))))._field_Model.cast_ptr<_1ece12d03_StructSubIdentExprModel>(&__jule_any_type97)))._field_Owner))._field_Decl))._field_Binded;;
			}
		}
		else {
			_case_begin_1c2d2787a:;
			{
				return false;;
			}
		}
		_match_end_1c2d27825:;
	};
}



inline jule::Bool _1bcbc619b_isAny(jule::Ptr<_1bc8411bd_TypeKind>* _163115_t) {
	if ((_1bc844358_TypeEnum((*(_163115_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1bc848c97_Prim> _16355_prim = _1bc84381e_Prim((*(_163115_t)).ptr());;
	return ((_16355_prim != nullptr) && _1bc84c4b5_IsAny(_16355_prim.ptr()));;
}



inline void _1bde36383_iterFiles(jule::Ptr<_1bc766d2a_Package>* _136019_pkg, jule::Fn<void(jule::Ptr<_1bc80a50b_SymbolTable>*)> _136034_f) {
	{
		auto expr = &((*((*(_136019_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2527960:;
		if (it != expr_end) {
			jule::Ptr<_1bc80a50b_SymbolTable> _136117_file = *it;
			{
				_136034_f(&(_136117_file));
			}
			_iter_next_1c2527960:;
			++it;
			goto _iter_begin_1c2527960;
		}
		_iter_end_1c2527960:;
	};
}



inline jule::Slice<jule::U8> _1bde36691_concatAllParts(jule::Slice<jule::Ptr<_1bc583a9d_Token>> _136719_parts) {
	jule::I64 _13689_n = 0LL;;
	{
		auto expr = &(_136719_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2528a1b:;
		if (it != expr_end) {
			jule::Ptr<_1bc583a9d_Token> *_136912_part = it;
			{
				_13689_n+=(*((*(_136912_part))))._field_Kind.len();
			}
			_iter_next_1c2528a1b:;
			++it;
			goto _iter_begin_1c2528a1b;
		}
		_iter_end_1c2528a1b:;
	};
	if ((_13689_n == 0LL)) {
		return nullptr;;
	};
	_2096a4489_StrBuilder _13759_s = static__2096a48da_New(_13689_n);;
	{
		auto expr = &(_136719_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c2528202:;
		if (it != expr_end) {
			jule::Ptr<_1bc583a9d_Token> *_137612_p = it;
			{
				_2096a4e4b_WriteStr(&_13759_s, (*((*(_137612_p))))._field_Kind);
			}
			_iter_next_1c2528202:;
			++it;
			goto _iter_begin_1c2528202;
		}
		_iter_end_1c2528202:;
	};
	return _2096a61e4_Buf(&_13759_s);;
}



inline jule::Bool _1bde36a15_containsTraitMethod(jule::Ptr<_1bc713a41_Trait>* _138329_t, jule::Str* _138341_ident) {
	{
		auto expr = &((*((*(_138329_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c252aa95:;
		if (it != expr_end) {
			jule::Ptr<_1ece1b092_Fn> _138412_m = *it;
			{
				if (((*(_138412_m))._field_Ident == (*(_138341_ident)))) {
					return true;;
				};
			}
			_iter_next_1c252aa95:;
			++it;
			goto _iter_begin_1c252aa95;
		}
		_iter_end_1c252aa95:;
	};
	return false;;
}



inline void _1bde36d45_pushMethodsFromInherit(jule::Ptr<_1bc713a41_Trait>* _139532_dest, jule::Ptr<_1bc713a41_Trait>* _139551_src) {
	_1bde37131_pushMethodsFromInherits(_139532_dest, _139551_src);
	{
		auto expr = &((*((*(_139551_src))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c252bcb6:;
		if (it != expr_end) {
			jule::Ptr<_1ece1b092_Fn> _139717_m = *it;
			{
				if ((!(_1bde36a15_containsTraitMethod(_139532_dest, &((*(_139717_m))._field_Ident))))) {
					{ jule::Slice<jule::Ptr<_1ece1b092_Fn>> &__jule_push_dest = (*((*(_139532_dest))))._field_Methods; __jule_push_dest.push(_139717_m); };
				};
			}
			_iter_next_1c252bcb6:;
			++it;
			goto _iter_begin_1c252bcb6;
		}
		_iter_end_1c252bcb6:;
	};
}



inline void _1bde37131_pushMethodsFromInherits(jule::Ptr<_1bc713a41_Trait>* _140633_dest, jule::Ptr<_1bc713a41_Trait>* _140652_src) {
	{
		auto expr = &((*((*(_140652_src))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c252d0b4:;
		if (it != expr_end) {
			jule::Ptr<_1bc848390_TypeSymbol> _140717_inh = *it;
			{
				jule::Ptr<_1bc713a41_Trait> _140813_t2 = _1bc845128_Trait((*(_140717_inh))._field_Kind.ptr());;
				_1bde36d45_pushMethodsFromInherit(_140633_dest, &(_140813_t2));
			}
			_iter_next_1c252d0b4:;
			++it;
			goto _iter_begin_1c252d0b4;
		}
		_iter_end_1c252d0b4:;
	};
}



inline jule::Bool _1bde373ea_isOpMethod(jule::Ptr<_1ece1b092_Fn>* _141416_m) {
	if ((((*((*(_141416_m))))._field_Generics.len() > 0LL) || ((*((*(_141416_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	jule::Ptr<_1ece1de96_FnIns> _14185_mi = (*((*(_141416_m))))._field_Instances[0LL];;
	;
	;
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_Eq)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_Gt)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_GtEq)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_Lt)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_LtEq)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_Shl)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_Shr)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_Add)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_Sub)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_Div)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_Mul)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_Mod)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_BitAnd)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_BitOr)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_BitXor)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_Neg)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_Pos)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_BitNot)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_AddAssign)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_SubAssign)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_DivAssign)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_MulAssign)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_ModAssign)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_ShlAssign)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_ShrAssign)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_BitOrAssign)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_BitAndAssign)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_BitXorAssign)) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1bde376b4_isHeadDecl(jule::Ptr<_1ece1b092_Fn>* _143020_m) {
	if ((((*((*(_143020_m))))._field_Generics.len() > 0LL) || ((*((*(_143020_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	if (_1bde373ea_isOpMethod(_143020_m)) {
		return true;;
	};
	jule::Ptr<_1ece1de96_FnIns> _14379_mi = (*((*(_143020_m))))._field_Instances[0LL];;
	;
	return static__1bc7a8960_Dispose(_1bc5c0128_FindMethod((*(_14379_mi))._field_Owner.ptr(), jule::Str::lit("Dispose", 7), false));;
}



inline jule::Ptr<_1bc594a59_Directive> _1bde46a7a_findDirective(jule::Slice<jule::Ptr<_1bc594a59_Directive>>* _47423_directives, jule::Str _47454_tag) {
	{
		auto expr = _47423_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c31254d5:;
		if (it != expr_end) {
			jule::Ptr<_1bc594a59_Directive> _47517_dr = *it;
			{
				if (((*((*(_47517_dr))._field_Tag))._field_Kind == _47454_tag)) {
					return _47517_dr;;
				};
			}
			_iter_next_1c31254d5:;
			++it;
			goto _iter_begin_1c31254d5;
		}
		_iter_end_1c31254d5:;
	};
	return nullptr;;
}



inline jule::Bool _1bde46e43_hasDirective(jule::Slice<jule::Ptr<_1bc594a59_Directive>>* _48418_directives, jule::Str _48449_tag) {
	return (_1bde46a7a_findDirective(&((*(_48418_directives))), _48449_tag) != nullptr);;
}



inline jule::Bool _1bde4720c_shouldInitialized(jule::Ptr<_1bc8411bd_TypeKind>* _49127_t) {
	jule::Ptr<_1bc848c97_Prim> _4925_prim = _1bc84381e_Prim((*(_49127_t)).ptr());;
	if ((_4925_prim != nullptr)) {
		return ((!(_1bc84c4b5_IsAny(_4925_prim.ptr()))) && (!(_1bc84c22e_IsStr(_4925_prim.ptr()))));;
	};
	{
		
		if ((_1bc843aa5_Sptr((*(_49127_t)).ptr()) != nullptr)) {
			_case_begin_1c312830c:;
			{
				return false;;
			}
		}
		else if ((_1bc8453ae_Map((*(_49127_t)).ptr()) != nullptr)) {
			_case_begin_1c3128373:;
			{
				return false;;
			}
		}
		else if ((_1bc844875_Slc((*(_49127_t)).ptr()) != nullptr)) {
			_case_begin_1c31283ea:;
			{
				return false;;
			}
		}
		else if ((_1bc845128_Trait((*(_49127_t)).ptr()) != nullptr)) {
			_case_begin_1c3128472:;
			{
				return false;;
			}
		}
		else if ((_1bc844b0b_Fn((*(_49127_t)).ptr()) != nullptr)) {
			_case_begin_1c31284e9:;
			{
				return false;;
			}
		}
		else if ((_1bc8445de_Arr((*(_49127_t)).ptr()) != nullptr)) {
			_case_begin_1c3128571:;
			{
				jule::Ptr<_1bc8505b7_Arr> _50813_arr = _1bc8445de_Arr((*(_49127_t)).ptr());;
				return _1bde4720c_shouldInitialized(&((*(_50813_arr))._field_Elem));;
			}
		}
		else if ((_1bc844d92_Struct((*(_49127_t)).ptr()) != nullptr)) {
			_case_begin_1c31285e8:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1c31275a3:;
			{
				return true;;
			}
		}
		_match_end_1c3127383:;
	};
}



inline void _1eeeac087_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _1eeeac30c_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_1eeeac087_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I64 _419_max = _1eeeabd9a_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_1eeeabd9a_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c31c6663:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_4212_k = it;
			{
				jule::I64 _439_n = (*(_4212_k))[0LL].len();;
				if ((_439_n > _419_max)) {
					_419_max=_439_n;
				};
			}
			_iter_next_1c31c6663:;
			++it;
			goto _iter_begin_1c31c6663;
		}
		_iter_end_1c31c6663:;
	};
	_2096a4489_StrBuilder _499_s = static__2096a48da_New(32LL);;
	;
	{
		auto expr = &(_1eeeabd9a_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c31c7e5b:;
		if (it != expr_end) {
			jule::I64 _519_i = it - expr->begin();
			jule::Array<jule::Str,2> *_5112_part = it;
			{
				_2096a4e4b_WriteStr(&_499_s, (*(_5112_part))[0LL]);
				_2096a4e4b_WriteStr(&_499_s, _1ed63935e_Repeat(jule::Str::lit(" ", 1), static_cast<jule::I64>(((_419_max - (*(_5112_part))[0LL].len()) + 5LL))));
				_2096a4e4b_WriteStr(&_499_s, (*(_5112_part))[1LL]);
				if (((_519_i + 1LL) < 5LL)) {
					_2096a5204_WriteByte(&_499_s, '\n');
				};
			}
			_iter_next_1c31c7e5b:;
			++it;
			_519_i++;
			goto _iter_begin_1c31c7e5b;
		}
		_iter_end_1c31c7e5b:;
	};
	jule::outln(_499_s);
}



inline void _1eeeac53d_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_1eeeac087_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str::lit("jule0.0.15 @master", 18));
}



inline void _1eeeac73b_toolDistos(void) {
	jule::out(jule::Str::lit("supported operating systems:\n ", 30));
	jule::out(jule::Str::lit("windows", 7));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("linux", 5));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("darwin", 6));
	jule::outln(jule::Str());
}



inline void _1eeeac8b2_toolDistarch(void) {
	jule::out(jule::Str::lit("supported architects:\n ", 23));
	jule::out(jule::Str::lit("amd64", 5));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("i386", 4));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("arm64", 5));
	jule::outln(jule::Str());
}



inline void _1eeeacae3_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::outln(jule::Str::lit("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_1eeeac087_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1055_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1055_cmd };
		
		if (_match_expr == jule::Str::lit("distos", 6)) {
			_case_begin_1c31cdd74:;
			{
				_1eeeac73b_toolDistos();
			}
		}
		else if (_match_expr == jule::Str::lit("distarch", 8)) {
			_case_begin_1c31cdaaa:;
			{
				_1eeeac8b2_toolDistarch();
			}
		}
		else {
			_case_begin_1c31cc8bc:;
			{
				_1eeeac087_printErrorMessage((jule::Str::lit("undefined command: ", 19) + _1055_cmd));
			}
		}
		_match_end_1c31cd934:;
	};
}



inline void _1eeeacd24_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_1eeeac087_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str::lit("julec version: jule0.0.15 @master", 33));
	jule::outln(jule::Str::lit("architecture: arm64", 19));
	jule::outln(jule::Str::lit("operating system: windows", 25));
	jule::outln((jule::Str::lit("default compiler: ", 18) + _23b848860_Compiler));
	jule::outln((jule::Str::lit("default C++ standard: ", 22) + _23b849e49_CppStd));
}



inline void _1eeead132_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::outln(jule::Str::lit("command is not given, try julec mod init", 40));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_1eeeac087_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str::lit("init", 4)) {
			_case_begin_1c31d23d8:;
			{
				({
					auto except = static__230a43769_Write(jule::Str::lit("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_1eeeac087_printErrorMessage(jule::Str::lit("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1c31d110c:;
			{
				_1eeeac087_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1c31d1eed:;
	};
}



inline jule::Bool _1eeead3eb_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str::lit("help", 4)) {
			_case_begin_1c31d39a0:;
			{
				_1eeeac30c_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("version", 7)) {
			_case_begin_1c31d3a16:;
			{
				_1eeeac53d_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("tool", 4)) {
			_case_begin_1c31d3a7c:;
			{
				_1eeeacae3_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("julenv", 6)) {
			_case_begin_1c31d3ae3:;
			{
				_1eeeacd24_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("mod", 3)) {
			_case_begin_1c31d332e:;
			{
				_1eeead132_mod(_15320_args);
			}
		}
		else {
			_case_begin_1c31d32b8:;
			{
				return false;;
			}
		}
		_match_end_1c31d2b8b:;
	};
	return true;;
}



inline void _1eeead572_showInfo(void) {
	jule::outln(jule::Str::lit("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307));
}



void entry_point(void) {
	jule::Slice<jule::Str> _1899_args = _2096d8963_Args();;
	if ((_1899_args.len() < 2LL)) {
		_1eeead572_showInfo();
		return;;
	};
	if (_1eeead3eb_processCommand(&(_1899_args))) {
		return;;
	};
	_1bdeb6cd7_compileCommand(&(_1899_args));
}



inline void _1eeeade8a_enableVtp(void) {
	jule::Uintptr _195_hOut = _230a28809_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551605LLU));;
	if ((_195_hOut == jule::MAX_U64)) {
		return;;
	};
	jule::I64 _249_dwMode = 0LL;;
	if ((!(_230a2ad7d_GetConsoleMode(_195_hOut, &(_249_dwMode))))) {
		return;;
	};
	_249_dwMode|=4LL;
	_230a2b455_SetConsoleMode(_195_hOut, _249_dwMode);
}



inline void _1eeeae155_init(void) {
	_1eeeade8a_enableVtp();
}



inline void _1bdeb3ad6_init(void) {
	_23b848860_Compiler=jule::Str::lit("clang", 5);
}



inline jule::Ptr<_230a42922_File> _1bdeb3db1_openOutput(jule::Str* _4316_path) {
	jule::Str _445_dir = _1ed645920_Dir((*(_4316_path)));;
	({
		auto except = static__1ed647218_Of(_445_dir);
		if (!except.ok()) {
			({
				auto except = static__1ed646547_Create(_445_dir);
				if (!except.ok()) {
					_1bd174c98_Throw(jule::Str::lit("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__230a43109_Create((*(_4316_path)));
		(except.ok()) ? (except.result) : ({
			_1bd174c98_Throw(jule::Str::lit("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1bdeb4037_clearObjects(void) {
	({
		auto except = static__2095d48c5_Remove(_1bdeb5236_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str::lit("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__1ed646778_Remove(_1bdeb3366_OutDir);
}



inline void _1bdeb4367_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_1eeea092c_Cmd> _739_cmd = static__1eeea0d4a_New(_7214_compiler);;
	(*(_739_cmd))._field_Args=_1ed63e2dc_Split(_7229_compilerCmd, jule::Str::lit(" ", 1), -1LL);
	({
		auto except = _1eeea1048_Spawn(_739_cmd.ptr());
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1c31db1c2:;
					{
						static__1bd1721d5_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1c31da9a7:;
					{
						static__1bd1721d5_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1c31dab83:;
					{
						static__1bd1721d5_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_1c31dab2d:;
			};
			_1bd174c98_Throw(jule::Str());
		}
	});
	jule::I64 _865_status = ({
		auto except = _1eeea14cc_Wait(_739_cmd.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:86:15"));
		(except.result);
	});;
	if ((_865_status != 0LL)) {
		jule::Str _889_errorMessage = ((jule::Str::lit("\n>>> your backend compiler (", 28) + _23b848860_Compiler) + jule::Str::lit(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1bd1721d5_Print(jule::Str::lit("\033[31m", 5), _889_errorMessage);
		_1bd174c98_Throw(jule::Str());
	};
	_1bdeb4037_clearObjects();
}



inline jule::Bool _1bdeb4631_isCppSourceFile(jule::Str _9920_path) {
	jule::I64 _1005_offset = _1ed63cd13_FindLastByte(_9920_path, '.');;
	if ((_1005_offset == -1LL)) {
		return false;;
	};
	return _1ed6ba8a7_IsValidCppExt(_9920_path.slice(_1005_offset));;
}



inline void _1bdeb4862_pushCompCmdClang(_2096a4489_StrBuilder* _10726_cmd) {
	_2096a4e4b_WriteStr(_10726_cmd, jule::Str::lit("-Wno-everything ", 16));
	_2096a4e4b_WriteStr(_10726_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _23b849e49_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1c31dea22:;
			{
				_2096a4e4b_WriteStr(_10726_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1c31dd79b:;
			{
				_2096a4e4b_WriteStr(_10726_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1c31deb54:;
			{
				_2096a4e4b_WriteStr(_10726_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1c31de9bc:;
	};
	_2096a5204_WriteByte(_10726_cmd, ' ');
	if (_23b84b1c0_Production) {
		_2096a4e4b_WriteStr(_10726_cmd, jule::Str::lit("-O3 ", 4));
		_2096a4e4b_WriteStr(_10726_cmd, jule::Str::lit("-flto ", 6));
		_2096a4e4b_WriteStr(_10726_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_2096a4e4b_WriteStr(_10726_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_2096a4e4b_WriteStr(_10726_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline void _1bdeb4a93_pushCompCmdGcc(_2096a4489_StrBuilder* _13324_cmd) {
	_2096a4e4b_WriteStr(_13324_cmd, jule::Str::lit("-w ", 3));
	_2096a4e4b_WriteStr(_13324_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _23b849e49_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1c31e2a03:;
			{
				_2096a4e4b_WriteStr(_13324_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1c31e1150:;
			{
				_2096a4e4b_WriteStr(_13324_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1c31e11b6:;
			{
				_2096a4e4b_WriteStr(_13324_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1c31e299d:;
	};
	_2096a5204_WriteByte(_13324_cmd, ' ');
	if (_23b84b1c0_Production) {
		_2096a4e4b_WriteStr(_13324_cmd, jule::Str::lit("-O3 ", 4));
		_2096a4e4b_WriteStr(_13324_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_2096a4e4b_WriteStr(_13324_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_2096a4e4b_WriteStr(_13324_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline __jule_tuple_str__jule_tuple_str _1bdeb5027_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1bd4385ab_IR>* _15936_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_1606_compiler = &(_23b849be6_CompilerPath);;
	_2096a4489_StrBuilder _1619_cmd = static__2096a48da_New(64LL);;
	{
		auto &_match_expr{ _23b848860_Compiler };
		
		if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1c31e5808:;
			{
				_1bdeb4a93_pushCompCmdGcc(&(_1619_cmd));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1c31e5d03:;
			{
				_1bdeb4862_pushCompCmdClang(&(_1619_cmd));
			}
		}
		_match_end_1c31e5a17:;
	};
	{
		auto expr = &((*((*(_15936_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c31e6078:;
		if (it != expr_end) {
			jule::Ptr<_1bc763e04_ImportInfo> *_17112_u = it;
			{
				if (((*((*(_17112_u))))._field_Binded && _1bdeb4631_isCppSourceFile((*((*(_17112_u))))._field_Path))) {
					_2096a4e4b_WriteStr(&_1619_cmd, (*((*(_17112_u))))._field_Path);
					_2096a5204_WriteByte(&_1619_cmd, ' ');
				};
			}
			_iter_next_1c31e6078:;
			++it;
			goto _iter_begin_1c31e6078;
		}
		_iter_end_1c31e6078:;
	};
	if (!(_1bdeb392c_Out).empty()) {
		_2096a4e4b_WriteStr(&_1619_cmd, jule::Str::lit("-o ", 3));
		_2096a4e4b_WriteStr(&_1619_cmd, _1bdeb392c_Out);
		_2096a5204_WriteByte(&_1619_cmd, ' ');
	};
	_2096a4e4b_WriteStr(&_1619_cmd, _15918_sourcePath);
	{
		auto expr = &((*((*(_15936_ir))))._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c31e8ae7:;
		if (it != expr_end) {
			jule::Str *_18612_pass = it;
			{
				_2096a5204_WriteByte(&_1619_cmd, ' ');
				_2096a4e4b_WriteStr(&_1619_cmd, (*(_18612_pass)));
			}
			_iter_next_1c31e8ae7:;
			++it;
			goto _iter_begin_1c31e8ae7;
		}
		_iter_end_1c31e8ae7:;
	};
	if (_1eeea8b77_Os.equal("windows", 7)) {
		_2096a4e4b_WriteStr(&_1619_cmd, jule::Str::lit(" -lshell32", 10));
	};
	__jule_func_result.__jule_result_arg0 = (*(_1606_compiler));
	__jule_func_result.__jule_result_arg1 = _2096a5743_Str(&_1619_cmd);
	return __jule_func_result;;
}



inline jule::Str _1bdeb5236_getCompilePath(void) {
	return _1ed644c2c_Join(jule::Slice<jule::Str>::make({_1bdeb3366_OutDir,_1bdeb3663_OutName}));;
}



inline void _1bdeb5467_applyTargetIndependentOptimizations(jule::Ptr<_1bd4385ab_IR>* _20545_ir) {
	jule::Ptr<_1bd149597_Optimizer> _2069_opt = static__1bd149a1a_New(_20545_ir);;
	_1bd14b104_Optimize(_2069_opt.ptr());
}



inline void _1bdeb55dd_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _23b848860_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1c31ea742:;
			{
				_1bd174c98_Throw(jule::Str::lit("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1c31eae7e:;
			{
				if ((_23b849be6_CompilerPath).empty()) {
					_23b849be6_CompilerPath=jule::Str::lit("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1c31eaee5:;
			{
				if ((_23b849be6_CompilerPath).empty()) {
					_23b849be6_CompilerPath=jule::Str::lit("g++", 3);
				};
			}
		}
		else {
			_case_begin_1c31eae18:;
			{
				_1bd174c98_Throw((jule::Str::lit("invalid option value for --compiler: ", 37) + _23b848860_Compiler));
			}
		}
		_match_end_1c31eadb3:;
	};
}



inline void _1bdeb581e_checkTargetArch(jule::Str _22720_arch) {
	if ((((!_22720_arch.equal("amd64", 5)) && (!_22720_arch.equal("arm64", 5))) && (!_22720_arch.equal("i386", 4)))) {
		_1bd174c98_Throw((jule::Str::lit("--target: unsupported/undefined architecture: ", 46) + _22720_arch));
	};
}



inline void _1bdeb5a50_checkTargetOs(jule::Str _23518_os) {
	if ((((!_23518_os.equal("windows", 7)) && (!_23518_os.equal("linux", 5))) && (!_23518_os.equal("darwin", 6)))) {
		_1bd174c98_Throw((jule::Str::lit("--target: unsupported/undefined operating system: ", 50) + _23518_os));
	};
}



inline void _1bdeb5c81_checkTargetFlag(jule::Str* _24321_target) {
	if (((*(_24321_target))).empty()) {
		_1bd174c98_Throw(jule::Str::lit("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2485_parts = _1ed63e2dc_Split((*(_24321_target)), jule::Str::lit("-", 1), -1LL);;
	if ((_2485_parts.len() != 2LL)) {
		_1bd174c98_Throw((jule::Str::lit("--target: undefined platform target format: ", 44) + (*(_24321_target))));
	};
	jule::Str _2535_os;;
	jule::Str _2539_arch;;
	({
		jule::Str ___jule_assign_arg = _2485_parts[0LL];
		jule::Str _1___jule_assign_arg = _2485_parts[1LL];
		_2535_os = ___jule_assign_arg;
		_2539_arch = _1___jule_assign_arg;
	});
	if ((!_2535_os.equal("native", 6))) {
		_1bdeb5a50_checkTargetOs(_2535_os);
		_1eeea8b77_Os=_2535_os;
	};
	if ((!_2539_arch.equal("native", 6))) {
		_1bdeb581e_checkTargetArch(_2539_arch);
		_1eeea8e41_Arch=_2539_arch;
	};
	_230d4e635_UpdateTarget();
}



inline void _1bdeb5eb2_checkOptFlag(jule::Str* _26618_opt) {
	if (((*(_26618_opt))).empty()) {
		_1bd174c98_Throw(jule::Str::lit("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_26618_opt)) };
		
		if (_match_expr == jule::Str::lit("L0", 2)) {
			_case_begin_1c3202b56:;
			{
				goto _match_end_1c3202309;
			}
		}
		else if (_match_expr == jule::Str::lit("L1", 2)) {
			_case_begin_1c3202bbc:;
			{
				_1bc9d8ce4_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1c3202518:;
			{
				_1bd174c98_Throw((jule::Str::lit("--opt: invalid optimization level: ", 35) + (*(_26618_opt))));
			}
		}
		_match_end_1c3202309:;
	};
}



inline void _1bdeb6347_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _23b849e49_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5) || _match_expr == jule::Str::lit("cpp17", 5) || _match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1c3202859:;
			{
				goto _match_end_1c32030b8;
			}
		}
		else {
			_case_begin_1c320311d:;
			{
				_1bd174c98_Throw((jule::Str::lit("--cppstd: invalid cpp standard: ", 32) + _23b849e49_CppStd));
			}
		}
		_match_end_1c32030b8:;
	};
}



inline jule::Slice<jule::Str> _1bdeb65ab_checkFlags(jule::Slice<jule::Str>* _29216_args) {
	jule::Str _2939_opt = jule::Str::lit("L0", 2);;
	jule::Str _2949_target = jule::Str::lit("native-native", 13);;
	jule::Ptr<_1bdead383_FlagSet> _2969_fs = static__1bdead66e_New();;
	_1c3205384_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2939_opt)))), jule::Str::lit("opt", 3), 0LL, jule::Str::lit("Optimization level", 18));
	_1c3205384_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2949_target)))), jule::Str::lit("target", 6), 0LL, jule::Str::lit("Target system", 13));
	_1c3205384_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1bdeb392c_Out)))), jule::Str::lit("out", 3), 'o', jule::Str::lit("Output identifier", 17));
	_1c320c204_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_23b84a1d0_Shadowing)))), jule::Str::lit("shadowing", 9), 0LL, jule::Str::lit("Allow shadowing", 15));
	_1c320c204_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_23b84a499_Transpilation)))), jule::Str::lit("transpile", 9), 't', jule::Str::lit("Transpile code", 14));
	_1c3205384_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_23b848860_Compiler)))), jule::Str::lit("compiler", 8), 0LL, jule::Str::lit("Backend compiler", 16));
	_1c3205384_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_23b849be6_CompilerPath)))), jule::Str::lit("compiler-path", 13), 0LL, jule::Str::lit("Path of backend compiler", 24));
	_1c320c204_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_23b84b1c0_Production)))), jule::Str::lit("production", 10), 'p', jule::Str::lit("Compile for production", 22));
	_1c320c204_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_23b84aa2c_RC)))), jule::Str::lit("disable-rc", 10), 0LL, jule::Str::lit("Disable reference counting", 26));
	_1c320c204_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_23b84ae06_Safety)))), jule::Str::lit("disable-safety", 14), 0LL, jule::Str::lit("Disable safety", 14));
	_1c3205384_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_23b849e49_CppStd)))), jule::Str::lit("cppstd", 6), 0LL, jule::Str::lit("C++ standard", 12));
	_1c320c204_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1bc9d6b9e_Copy)))), jule::Str::lit("opt-copy", 8), 0LL, jule::Str::lit("Copy optimization", 17));
	_1c320c204_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1bc9d6eac_Deadcode)))), jule::Str::lit("opt-deadcode", 12), 0LL, jule::Str::lit("Deadcode optimization", 21));
	_1c320c204_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1bc9d7276_Append)))), jule::Str::lit("opt-append", 10), 0LL, jule::Str::lit("Append optimization", 19));
	_1c320c204_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1bc9d7584_Math)))), jule::Str::lit("opt-math", 8), 0LL, jule::Str::lit("Math optimization", 17));
	_1c320c204_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1bc9d784d_Access)))), jule::Str::lit("opt-access", 10), 0LL, jule::Str::lit("Access optimization", 19));
	_1c320c204_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1bc9d7b17_Inline)))), jule::Str::lit("opt-inline", 10), 0LL, jule::Str::lit("Inline optimization", 19));
	_1c320c204_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1bc9d7dd1_Ptr)))), jule::Str::lit("opt-ptr", 7), 0LL, jule::Str::lit("Pointer optimizations", 21));
	_1c320c204_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1bc9d82aa_Cond)))), jule::Str::lit("opt-cond", 8), 0LL, jule::Str::lit("Conditional optimizations", 25));
	_1c320c204_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1bc9d8574_Str)))), jule::Str::lit("opt-str", 7), 0LL, jule::Str::lit("String optimizations", 20));
	_1c320c204_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1bc9d883d_Slice)))), jule::Str::lit("opt-slice", 9), 0LL, jule::Str::lit("Slice optimizations", 19));
	_1c320c204_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1bc9d8b07_Assign)))), jule::Str::lit("opt-assign", 10), 0LL, jule::Str::lit("Assignment optimizations", 24));
	jule::Slice<jule::Str> _3219_content = ({
		auto except = _1bdeae50a_Parse(_2969_fs.ptr(), (*(_29216_args)));
		(except.ok()) ? (except.result) : ({
			_1bd174c98_Throw(except.error.cast<jule::Str>(&__jule_any_type4));

			nullptr;
		});
	});;
	_1bdeb55dd_checkCompilerFlag();
	_1bdeb6347_checkCppStdFlag();
	_1bdeb5c81_checkTargetFlag(&(_2949_target));
	_1bdeb5eb2_checkOptFlag(&(_2939_opt));
	return _3219_content;;
}



inline void _1bdeb67dc_setupSemaFlags(jule::I64* _33424_flags) {
	if (_23b84a1d0_Shadowing) {
		(*(_33424_flags))|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1bd4385ab_IR> _1bdeb6aa6_buildIr(jule::Slice<jule::Str>* _34013_args) {
	jule::Slice<jule::Str> _3415_content = _1bdeb65ab_checkFlags(_34013_args);;
	jule::I64 _3439_semaFlags = static_cast<jule::I64>(0LL);;
	_1bdeb67dc_setupSemaFlags(&(_3439_semaFlags));
	if ((_3415_content.len() == 0LL)) {
		_1bd174c98_Throw(_1ed6c7d04_Logf(jule::Str::lit("missing compile path", 20), jule::Slice<jule::Any>()));
	} else if ((_3415_content.len() > 1LL)) {
		_1bd174c98_Throw((jule::Str::lit("undefined content: ", 19) + _3415_content[1LL]));
	};
	jule::Str _3519_path;;
	jule::Bool _35115_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1ed6452b0_Abs(_3415_content[0LL]);
		_3519_path = __jule_assign_result.__jule_result_arg0;
		_35115_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_35115_ok))) {
		_1bd174c98_Throw(jule::Str::lit("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_230a44a56_Status> _3575_inf = ({
		auto except = static__1ed647218_Of(_1eeea8094_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1bd174c98_Throw(_1ed6c7d04_Logf(jule::Str::lit("standard library directory not found", 36), jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_230a44a56_Status>(nullptr);});
	});;
	if ((!(_230a44e30_IsDir(_3575_inf.ptr())))) {
		_1bd174c98_Throw(_1ed6c7d04_Logf(jule::Str::lit("standard library directory not found", 36), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1bd4385ab_IR> _3659_ir;;
	jule::Slice<_1ed6c7892_Log> _36513_logs;;
	({
		__jule_tuple_x_1bd4385ab_IR__jule_tuple_s_1ed6c7892_Log __jule_assign_result = static__1bd438a1d_Build(_3519_path, _3439_semaFlags);
		_3659_ir = __jule_assign_result.__jule_result_arg0;
		_36513_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3659_ir == nullptr) && (_36513_logs == nullptr))) {
		_1bd174c98_Throw(_1ed6c7d04_Logf(jule::Str::lit("there is no Jule source code in package: @", 42), jule::Slice<jule::Any>::make({jule::Any(_3519_path, &__jule_any_type4)})));
	};
	if ((_36513_logs != nullptr)) {
		static__1bd1742c5_PrintLogs(&(_36513_logs));
		_1bd174c98_Throw(jule::Str());
	};
	return _3659_ir;;
}



inline void _1bdeb6cd7_compileCommand(jule::Slice<jule::Str>* _38024_args) {
	((*(_38024_args))).mut_slice(1LL);;
	if ((*(_38024_args))[0LL].equal("test", 4)) {
		_23b84a763_Test=true;
		((*(_38024_args))).mut_slice(1LL);;
	};
	jule::Ptr<_1bd4385ab_IR> _3869_ir = _1bdeb6aa6_buildIr(_38024_args);;
	;
	if ((!(_23b84a763_Test))) {
		jule::Ptr<_1ece1b092_Fn> _39113_main = _1bc7683ae_FindFn((*(_3869_ir))._field_Main.ptr(), jule::Str::lit("main", 4), false);;
		if ((_39113_main == nullptr)) {
			_1bd174c98_Throw(_1ed6c7d04_Logf(jule::Str::lit("missing entry point: entry point (main) function is not defined", 63), jule::Slice<jule::Any>()));
		};
	};
	_1bdeb5467_applyTargetIndependentOptimizations(&(_3869_ir));
	_1bd439a85_Order(_3869_ir.ptr());
	jule::Str _4025_compPath = _1bdeb5236_getCompilePath();;
	jule::Str _4035_compiler;;
	jule::Str _40315_compilerCmd;;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1bdeb5027_genCompileCmd(_4025_compPath, &(_3869_ir));
		_4035_compiler = __jule_assign_result.__jule_result_arg0;
		_40315_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1bde29145_ObjectCoder> _4059_oc = static__1bde29541_New(&(_3869_ir), _1bde2762c_SerializationInfo{._field_Compiler=_4035_compiler, ._field_CompilerCommand=_40315_compilerCmd});;
	if (_23b84a763_Test) {
		jule::Ptr<_1bcbc719c_TestCoder> _41013_tc = static__1bcbc75dc_New(&(_4059_oc));;
		_1bcbc8962_Serialize(_41013_tc);
	} else {
		_1bde35e98_Serialize(_4059_oc);
	};
	jule::Ptr<_230a42922_File> _4169_file = _1bdeb3db1_openOutput(&(_4025_compPath));;
	({
		auto except = _2095d4d59_Write(_4169_file.ptr(), _2096a61e4_Buf(&(*(_4059_oc))._field_Buf));
		if (!except.ok()) {
			_1bd174c98_Throw(jule::Str::lit("object code could not write", 27));
		}
	});
	({
		auto except = _230a43ea6_Close(_4169_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:420:5"));
	});
	if ((!(_23b84a499_Transpilation))) {
		_1bdeb4367_compileIr(_4035_compiler, _40315_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_1eeea9073_init();
	_230d4e7ab_init();
	_1eeeae155_init();
	_1bdeb3ad6_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}